

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 19:37:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.35
    54                           ; Generated 05/05/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _TX4REG	set	3812
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _LATGbits	set	3967
    92   000000                     _LATEbits	set	3965
    93   000000                     _TRISGbits	set	3975
    94   000000                     _TRISEbits	set	3973
    95   000000                     _LATFbits	set	3966
    96   000000                     _TRISFbits	set	3974
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _LATDbits	set	3964
   105   000000                     _LATHbits	set	3968
   106   000000                     _TRISDbits	set	3972
   107   000000                     _TRISHbits	set	3976
   108   000000                     _PORTFbits	set	3982
   109   000000                     _TRISCbits	set	3971
   110   000000                     _RC4REG	set	3811
   111   000000                     _SP4BRGL	set	3813
   112   000000                     _TX4STAbits	set	3816
   113   000000                     _BAUD4CONbits	set	3817
   114   000000                     _LATCbits	set	3963
   115   000000                     _SSP2CON2	set	3802
   116   000000                     _SSP2STAT	set	3800
   117   000000                     _ANSELFbits	set	3764
   118   000000                     _SSP2BUF	set	3797
   119   000000                     _PIE0bits	set	3625
   120   000000                     _RC7PPS	set	3689
   121   000000                     _RD5PPS	set	3695
   122   000000                     _RE2PPS	set	3700
   123   000000                     _RD6PPS	set	3696
   124   000000                     _PWM7DCH	set	4000
   125   000000                     _PWM6DCH	set	4003
   126   000000                     _T2PR	set	4028
   127   000000                     _T2CONbits	set	4029
   128   000000                     _TMR0L	set	4051
   129   000000                     _TMR0H	set	4052
   130   000000                     _T0CON0bits	set	4053
   131   000000                     _T0CON1bits	set	4054
   132   000000                     _INTCONbits	set	4082
   133   000000                     _T2CLKCONbits	set	4031
   134   000000                     _T2HLTbits	set	4030
   135   000000                     _PWM6CONbits	set	4004
   136   000000                     _PWM7CONbits	set	4001
   137   000000                     _PIR0bits	set	3635
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140                           
   141                           	psect	smallconst
   142   000E00                     __psmallconst:
   143                           	callstack 0
   144   000E00  00                 	db	0
   145   000E01                     STR_1:
   146   000E01  25                 	db	37
   147   000E02  64                 	db	100	;'d'
   148   000E03  20                 	db	32
   149   000E04  25                 	db	37
   150   000E05  64                 	db	100	;'d'
   151   000E06  20                 	db	32
   152   000E07  25                 	db	37
   153   000E08  64                 	db	100	;'d'
   154   000E09  20                 	db	32
   155   000E0A  25                 	db	37
   156   000E0B  64                 	db	100	;'d'
   157   000E0C  20                 	db	32
   158   000E0D  0D                 	db	13
   159   000E0E  0A                 	db	10
   160   000E0F  00                 	db	0
   161   000E10  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   001CB8                     __pcinit:
   167                           	callstack 0
   168   001CB8                     start_initialization:
   169                           	callstack 0
   170   001CB8                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to BANK1 (112 bytes)
   174   001CB8  EE01  F000         	lfsr	0,__pbssBANK1
   175   001CBC  0E70               	movlw	112
   176   001CBE                     clear_0:
   177   001CBE  6AEE               	clrf	postinc0,c
   178   001CC0  06E8               	decf	wreg,f,c
   179   001CC2  E1FD               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK0 (11 bytes)
   182   001CC4  EE00  F0F1         	lfsr	0,__pbssBANK0
   183   001CC8  0E0B               	movlw	11
   184   001CCA                     clear_1:
   185   001CCA  6AEE               	clrf	postinc0,c
   186   001CCC  06E8               	decf	wreg,f,c
   187   001CCE  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to COMRAM (2 bytes)
   190   001CD0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   191   001CD2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   192   001CD4                     end_of_initialization:
   193                           	callstack 0
   194   001CD4                     __end_of__initialization:
   195                           	callstack 0
   196   001CD4  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197   001CD6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198   001CD8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   199   001CDA  6EF8               	movwf	tblptru,c
   200   001CDC  0E0E               	movlw	high __Lsmallconst
   201   001CDE  6EF7               	movwf	tblptrh,c
   202   001CE0  0100               	movlb	0
   203   001CE2  EF48  F008         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMRAM
   206   00005B                     __pbssCOMRAM:
   207                           	callstack 0
   208   00005B                     _RxBufReadCnt:
   209                           	callstack 0
   210   00005B                     	ds	1
   211   00005C                     _RxBufWriteCnt:
   212                           	callstack 0
   213   00005C                     	ds	1
   214                           
   215                           	psect	bssBANK0
   216   0000F1                     __pbssBANK0:
   217                           	callstack 0
   218   0000F1                     _width:
   219                           	callstack 0
   220   0000F1                     	ds	2
   221   0000F3                     _prec:
   222                           	callstack 0
   223   0000F3                     	ds	2
   224   0000F5                     _off_period:
   225                           	callstack 0
   226   0000F5                     	ds	2
   227   0000F7                     _on_period:
   228                           	callstack 0
   229   0000F7                     	ds	2
   230   0000F9                     _flags:
   231                           	callstack 0
   232   0000F9                     	ds	1
   233   0000FA                     _TxBufReadCnt:
   234                           	callstack 0
   235   0000FA                     	ds	1
   236   0000FB                     _TxBufWriteCnt:
   237                           	callstack 0
   238   0000FB                     	ds	1
   239                           
   240                           	psect	bssBANK1
   241   000100                     __pbssBANK1:
   242                           	callstack 0
   243   000100                     _EUSART4TXbuf:
   244                           	callstack 0
   245   000100                     	ds	60
   246   00013C                     _EUSART4RXbuf:
   247                           	callstack 0
   248   00013C                     	ds	20
   249   000150                     _dbuf:
   250                           	callstack 0
   251   000150                     	ds	32
   252                           
   253                           	psect	cstackBANK0
   254   000060                     __pcstackBANK0:
   255                           	callstack 0
   256   000060                     ?_sprintf:
   257                           	callstack 0
   258   000060                     sprintf@s:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x0
   262   000060                     	ds	2
   263   000062                     sprintf@fmt:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x2
   267   000062                     	ds	10
   268   00006C                     sprintf@ap:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0xC
   272   00006C                     	ds	2
   273   00006E                     sprintf@f:
   274                           	callstack 0
   275                           
   276                           ; 11 bytes @ 0xE
   277   00006E                     	ds	11
   278   000079                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x19
   281   000079                     	ds	2
   282   00007B                     main@readout:
   283                           	callstack 0
   284                           
   285                           ; 50 bytes @ 0x1B
   286   00007B                     	ds	50
   287   0000AD                     main@readout_752:
   288                           	callstack 0
   289                           
   290                           ; 50 bytes @ 0x4D
   291   0000AD                     	ds	50
   292   0000DF                     main@color_flag:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x7F
   296   0000DF                     	ds	2
   297   0000E1                     main@RGB_recorded:
   298                           	callstack 0
   299                           
   300                           ; 8 bytes @ 0x81
   301   0000E1                     	ds	8
   302   0000E9                     main@RGB_calibrated:
   303                           	callstack 0
   304                           
   305                           ; 8 bytes @ 0x89
   306   0000E9                     	ds	8
   307                           
   308                           	psect	cstackCOMRAM
   309   000001                     __pcstackCOMRAM:
   310                           	callstack 0
   311   000001                     write16bitTMR0val@tmp:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x0
   315   000001                     	ds	2
   316   000003                     ??_I2C_2_Master_Idle:
   317   000003                     ?_color_processor_easy:
   318                           	callstack 0
   319   000003                     ?___aodiv:
   320                           	callstack 0
   321   000003                     ?___aomod:
   322                           	callstack 0
   323   000003                     sendCharSerial4@charToSend:
   324                           	callstack 0
   325   000003                     color_processor_easy@rgb:
   326                           	callstack 0
   327   000003                     initDCmotorsPWM@PWMperiod:
   328                           	callstack 0
   329   000003                     fputc@c:
   330                           	callstack 0
   331   000003                     ___aodiv@dividend:
   332                           	callstack 0
   333   000003                     ___aomod@dividend:
   334                           	callstack 0
   335                           
   336                           ; 8 bytes @ 0x2
   337   000003                     	ds	1
   338   000004                     ??_I2C_2_Master_Read:
   339   000004                     I2C_2_Master_Write@data_byte:
   340                           	callstack 0
   341   000004                     sendStringSerial4@string:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x3
   345   000004                     	ds	1
   346   000005                     color_writetoaddr@value:
   347                           	callstack 0
   348   000005                     I2C_2_Master_Read@ack:
   349                           	callstack 0
   350   000005                     color_processor_easy@color:
   351                           	callstack 0
   352   000005                     fputc@fp:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x4
   356   000005                     	ds	1
   357   000006                     color_writetoaddr@address:
   358                           	callstack 0
   359   000006                     I2C_2_Master_Read@tmp:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x5
   363   000006                     	ds	1
   364   000007                     ??_fputc:
   365   000007                     ??_color_click_init:
   366   000007                     ?_color_read_Luminosity:
   367                           	callstack 0
   368   000007                     ?_color_read_Red:
   369                           	callstack 0
   370   000007                     ?_color_read_Green:
   371                           	callstack 0
   372   000007                     ?_color_read_Blue:
   373                           	callstack 0
   374   000007                     color_processor_easy@c:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x6
   378   000007                     	ds	2
   379   000009                     ??_color_read_Luminosity:
   380   000009                     ??_color_read_Red:
   381   000009                     ??_color_read_Green:
   382   000009                     ??_color_read_Blue:
   383   000009                     color_processor_easy@a:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x8
   387   000009                     	ds	2
   388   00000B                     color_processor_easy@b:
   389                           	callstack 0
   390   00000B                     ___aodiv@divisor:
   391                           	callstack 0
   392   00000B                     ___aomod@divisor:
   393                           	callstack 0
   394                           
   395                           ; 8 bytes @ 0xA
   396   00000B                     	ds	1
   397   00000C                     color_read_Luminosity@tmp:
   398                           	callstack 0
   399   00000C                     color_read_Red@tmp:
   400                           	callstack 0
   401   00000C                     color_read_Green@tmp:
   402                           	callstack 0
   403   00000C                     color_read_Blue@tmp:
   404                           	callstack 0
   405   00000C                     fputs@s:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xB
   409   00000C                     	ds	2
   410   00000E                     color_read@rgb:
   411                           	callstack 0
   412   00000E                     fputs@fp:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xD
   416   00000E                     	ds	2
   417   000010                     ??_color_read:
   418   000010                     fputs@c:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xF
   422   000010                     	ds	1
   423   000011                     fputs@i:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x10
   427   000011                     	ds	2
   428   000013                     ___aodiv@counter:
   429                           	callstack 0
   430   000013                     ___aomod@counter:
   431                           	callstack 0
   432   000013                     pad@fp:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x12
   436   000013                     	ds	1
   437   000014                     ___aodiv@sign:
   438                           	callstack 0
   439   000014                     ___aomod@sign:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x13
   443   000014                     	ds	1
   444   000015                     ?_abs:
   445                           	callstack 0
   446   000015                     pad@buf:
   447                           	callstack 0
   448   000015                     abs@a:
   449                           	callstack 0
   450   000015                     ___aodiv@quotient:
   451                           	callstack 0
   452                           
   453                           ; 8 bytes @ 0x14
   454   000015                     	ds	2
   455   000017                     ??_abs:
   456   000017                     pad@p:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x16
   460   000017                     	ds	2
   461   000019                     ??_pad:
   462                           
   463                           ; 1 bytes @ 0x18
   464   000019                     	ds	1
   465   00001A                     pad@i:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x19
   469   00001A                     	ds	2
   470   00001C                     pad@w:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x1B
   474   00001C                     	ds	2
   475   00001E                     dtoa@fp:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x1D
   479   00001E                     	ds	2
   480   000020                     dtoa@d:
   481                           	callstack 0
   482                           
   483                           ; 8 bytes @ 0x1F
   484   000020                     	ds	8
   485   000028                     ??_dtoa:
   486                           
   487                           ; 1 bytes @ 0x27
   488   000028                     	ds	8
   489   000030                     _dtoa$2147:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2F
   493   000030                     	ds	2
   494   000032                     dtoa@p:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x31
   498   000032                     	ds	2
   499   000034                     dtoa@w:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x33
   503   000034                     	ds	2
   504   000036                     dtoa@n:
   505                           	callstack 0
   506                           
   507                           ; 8 bytes @ 0x35
   508   000036                     	ds	8
   509   00003E                     dtoa@i:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x3D
   513   00003E                     	ds	2
   514   000040                     dtoa@s:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x3F
   518   000040                     	ds	1
   519   000041                     vfpfcnvrt@fp:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x40
   523   000041                     	ds	2
   524   000043                     vfpfcnvrt@fmt:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x42
   528   000043                     	ds	2
   529   000045                     vfpfcnvrt@ap:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x44
   533   000045                     	ds	2
   534   000047                     ??_vfpfcnvrt:
   535                           
   536                           ; 1 bytes @ 0x46
   537   000047                     	ds	2
   538   000049                     vfpfcnvrt@convarg:
   539                           	callstack 0
   540                           
   541                           ; 8 bytes @ 0x48
   542   000049                     	ds	8
   543   000051                     vfpfcnvrt@cp:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x50
   547   000051                     	ds	2
   548   000053                     ?_vfprintf:
   549                           	callstack 0
   550   000053                     vfprintf@fp:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x52
   554   000053                     	ds	2
   555   000055                     vfprintf@fmt:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x54
   559   000055                     	ds	2
   560   000057                     vfprintf@ap:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x56
   564   000057                     	ds	2
   565   000059                     vfprintf@cfmt:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x58
   569   000059                     	ds	2
   570   00005B                     
   571                           ; 1 bytes @ 0x5A
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 20 in file "../main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  readout        50   77[BANK0 ] unsigned char [50]
   582 ;;  readout        50   27[BANK0 ] unsigned char [50]
   583 ;;  color_calibr   48    0        unsigned int [24]
   584 ;;  RGB_calibrat    8  137[BANK0 ] struct RGB_val
   585 ;;  RGB_recorded    8  129[BANK0 ] struct RGB_val
   586 ;;  color_flag      2  127[BANK0 ] unsigned int 
   587 ;;  color_name      2    0        unsigned int 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   598 ;;      Locals:         0     118       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   600 ;;      Totals:         0     120       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   601 ;;Total ram usage:      120 bytes
   602 ;; Hardware stack levels required when called: 10
   603 ;; This function calls:
   604 ;;		_I2C_2_Master_Init
   605 ;;		_Interrupts_init
   606 ;;		_Timer0_init
   607 ;;		_color_click_init
   608 ;;		_color_processor_easy
   609 ;;		_color_read
   610 ;;		_initDCmotorsPWM
   611 ;;		_initUSART4
   612 ;;		_sendStringSerial4
   613 ;;		_sprintf
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text0
   620   001090                     __ptext0:
   621                           	callstack 0
   622   001090                     _main:
   623                           	callstack 21
   624   001090                     
   625                           ;../main.c: 22:     LATDbits.LATD7=0;
   626   001090  9E7C               	bcf	124,7,c	;volatile
   627                           
   628                           ;../main.c: 23:     LATHbits.LATH3=0;
   629   001092  9680               	bcf	128,3,c	;volatile
   630                           
   631                           ;../main.c: 24:     TRISDbits.TRISD7=0;
   632   001094  9E84               	bcf	132,7,c	;volatile
   633                           
   634                           ;../main.c: 25:     TRISHbits.TRISH3=0;
   635   001096  9688               	bcf	136,3,c	;volatile
   636                           
   637                           ;../main.c: 28:     TRISFbits.TRISF2=1;
   638   001098  8486               	bsf	134,2,c	;volatile
   639                           
   640                           ;../main.c: 29:     ANSELFbits.ANSELF2=0;
   641   00109A  010E               	movlb	14	; () banked
   642   00109C  95B4               	bcf	180,2,b	;volatile
   643                           
   644                           ;../main.c: 30:     TRISFbits.TRISF3=1;
   645   00109E  8686               	bsf	134,3,c	;volatile
   646                           
   647                           ;../main.c: 31:     ANSELFbits.ANSELF3=0;
   648   0010A0  97B4               	bcf	180,3,b	;volatile
   649   0010A2                     
   650                           ; BSR set to: 14
   651                           ;../main.c: 34:     color_click_init();
   652   0010A2  EC9A  F00D         	call	_color_click_init	;wreg free
   653   0010A6                     
   654                           ;../main.c: 35:     initDCmotorsPWM(20);
   655   0010A6  0E00               	movlw	0
   656   0010A8  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   657   0010AA  0E14               	movlw	20
   658   0010AC  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
   659   0010AE  ECBE  F00D         	call	_initDCmotorsPWM	;wreg free
   660   0010B2                     
   661                           ;../main.c: 36:     Interrupts_init();
   662   0010B2  ECDD  F00E         	call	_Interrupts_init	;wreg free
   663   0010B6                     
   664                           ;../main.c: 37:     Timer0_init();
   665   0010B6  ECAC  F00E         	call	_Timer0_init	;wreg free
   666   0010BA                     
   667                           ;../main.c: 38:     I2C_2_Master_Init();
   668   0010BA  EC73  F00E         	call	_I2C_2_Master_Init	;wreg free
   669   0010BE                     
   670                           ;../main.c: 39:     initUSART4();
   671   0010BE  ECBC  F00E         	call	_initUSART4	;wreg free
   672   0010C2                     
   673                           ;../main.c: 43:     unsigned int color_flag;;../main.c: 44:     unsigned int color_name;
      +                          ;../main.c: 45:     struct RGB_val RGB_calibrated;;../main.c: 46:     struct RGB_val RGB
      +                          _recorded;;../main.c: 49:     unsigned int color_calibrated[24];;../main.c: 63:     colo
      +                          r_read(&RGB_calibrated);
   674   0010C2  0EE9               	movlw	low main@RGB_calibrated
   675   0010C4  6E0E               	movwf	color_read@rgb^0,c
   676   0010C6  0E00               	movlw	high main@RGB_calibrated
   677   0010C8  6E0F               	movwf	(color_read@rgb+1)^0,c
   678   0010CA  EC1A  F00C         	call	_color_read	;wreg free
   679   0010CE                     
   680                           ;../main.c: 64:     char readout[50];;../main.c: 65:     sprintf(readout,"%d %d %d %d \r
      +                          \n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrated.B);
   681   0010CE  0E7B               	movlw	low main@readout
   682   0010D0  0100               	movlb	0	; () banked
   683   0010D2  6F60               	movwf	sprintf@s& (0+255),b
   684   0010D4  0E00               	movlw	high main@readout
   685   0010D6  6F61               	movwf	(sprintf@s+1)& (0+255),b
   686   0010D8  0E01               	movlw	low STR_1
   687   0010DA  6F62               	movwf	sprintf@fmt& (0+255),b
   688   0010DC  0E0E               	movlw	high STR_1
   689   0010DE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   690   0010E0  C0E9  F064         	movff	main@RGB_calibrated,?_sprintf+4
   691   0010E4  C0EA  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
   692   0010E8  C0EB  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
   693   0010EC  C0EC  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
   694   0010F0  C0ED  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
   695   0010F4  C0EE  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
   696   0010F8  C0EF  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
   697   0010FC  C0F0  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
   698   001100  ECAA  F00C         	call	_sprintf	;wreg free
   699   001104                     
   700                           ;../main.c: 66:     sendStringSerial4(readout);
   701   001104  0E7B               	movlw	low main@readout
   702   001106  6E04               	movwf	sendStringSerial4@string^0,c
   703   001108  0E00               	movlw	high main@readout
   704   00110A  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   705   00110C  EC44  F00E         	call	_sendStringSerial4	;wreg free
   706   001110                     l2155:
   707   001110  0E01               	movlw	1
   708   001112  A68E               	btfss	142,3,c	;volatile
   709   001114  0E00               	movlw	0
   710   001116  A48E               	btfss	142,2,c	;volatile
   711   001118  0E00               	movlw	0
   712   00111A  B0E8               	btfsc	wreg,0,c
   713   00111C  EF92  F008         	goto	u1261
   714   001120  EF97  F008         	goto	u1260
   715   001124                     u1261:
   716   001124  0100               	movlb	0	; () banked
   717   001126  6B79               	clrf	??_main& (0+255),b
   718   001128  2B79               	incf	??_main& (0+255),f,b
   719   00112A  EF99  F008         	goto	u1268
   720   00112E                     u1260:
   721   00112E  0100               	movlb	0	; () banked
   722   001130  6B79               	clrf	??_main& (0+255),b
   723   001132                     u1268:
   724   001132  5179               	movf	??_main& (0+255),w,b
   725   001134  A4D8               	btfss	status,2,c
   726   001136  EF9F  F008         	goto	u1271
   727   00113A  EFA1  F008         	goto	u1270
   728   00113E                     u1271:
   729   00113E  EF88  F008         	goto	l2155
   730   001142                     u1270:
   731   001142                     
   732                           ; BSR set to: 0
   733                           ;../main.c: 78:         if (!PORTFbits.RF2){LATDbits.LATD7 = !LATDbits.LATD7;}
   734   001142  B48E               	btfsc	142,2,c	;volatile
   735   001144  EFA6  F008         	goto	u1281
   736   001148  EFA8  F008         	goto	u1280
   737   00114C                     u1281:
   738   00114C  EFBC  F008         	goto	l172
   739   001150                     u1280:
   740   001150                     
   741                           ; BSR set to: 0
   742   001150  AE7C               	btfss	124,7,c	;volatile
   743   001152  EFAD  F008         	goto	u1291
   744   001156  EFB1  F008         	goto	u1290
   745   00115A                     u1291:
   746   00115A  6B79               	clrf	??_main& (0+255),b
   747   00115C  2B79               	incf	??_main& (0+255),f,b
   748   00115E  EFB3  F008         	goto	u1308
   749   001162                     u1290:
   750   001162  0100               	movlb	0	; () banked
   751   001164  6B79               	clrf	??_main& (0+255),b
   752   001166                     u1308:
   753   001166  3379               	rrcf	??_main& (0+255),f,b
   754   001168  3379               	rrcf	??_main& (0+255),f,b
   755   00116A  507C               	movf	124,w,c	;volatile
   756   00116C  1979               	xorwf	??_main& (0+255),w,b
   757   00116E  0B7F               	andlw	-129
   758   001170  1979               	xorwf	??_main& (0+255),w,b
   759   001172  6E7C               	movwf	124,c	;volatile
   760   001174  EFD6  F008         	goto	l2161
   761   001178                     l172:
   762                           
   763                           ; BSR set to: 0
   764   001178  B68E               	btfsc	142,3,c	;volatile
   765   00117A  EFC1  F008         	goto	u1311
   766   00117E  EFC3  F008         	goto	u1310
   767   001182                     u1311:
   768   001182  EFD6  F008         	goto	l2161
   769   001186                     u1310:
   770   001186                     
   771                           ; BSR set to: 0
   772   001186  A680               	btfss	128,3,c	;volatile
   773   001188  EFC8  F008         	goto	u1321
   774   00118C  EFCC  F008         	goto	u1320
   775   001190                     u1321:
   776   001190  6B79               	clrf	??_main& (0+255),b
   777   001192  2B79               	incf	??_main& (0+255),f,b
   778   001194  EFCE  F008         	goto	u1338
   779   001198                     u1320:
   780   001198  0100               	movlb	0	; () banked
   781   00119A  6B79               	clrf	??_main& (0+255),b
   782   00119C                     u1338:
   783   00119C  4779               	rlncf	??_main& (0+255),f,b
   784   00119E  4779               	rlncf	??_main& (0+255),f,b
   785   0011A0  4779               	rlncf	??_main& (0+255),f,b
   786   0011A2  5080               	movf	128,w,c	;volatile
   787   0011A4  1979               	xorwf	??_main& (0+255),w,b
   788   0011A6  0BF7               	andlw	-9
   789   0011A8  1979               	xorwf	??_main& (0+255),w,b
   790   0011AA  6E80               	movwf	128,c	;volatile
   791   0011AC                     l2161:
   792                           
   793                           ;../main.c: 83:             if (LATDbits.LATD7){
   794   0011AC  AE7C               	btfss	124,7,c	;volatile
   795   0011AE  EFDB  F008         	goto	u1341
   796   0011B2  EFDD  F008         	goto	u1340
   797   0011B6                     u1341:
   798   0011B6  EF1C  F009         	goto	l176
   799   0011BA                     u1340:
   800   0011BA                     
   801                           ;../main.c: 84:                 if (color_flag){
   802   0011BA  0100               	movlb	0	; () banked
   803   0011BC  51DF               	movf	main@color_flag& (0+255),w,b
   804   0011BE  11E0               	iorwf	(main@color_flag+1)& (0+255),w,b
   805   0011C0  B4D8               	btfsc	status,2,c
   806   0011C2  EFE5  F008         	goto	u1351
   807   0011C6  EFE7  F008         	goto	u1350
   808   0011CA                     u1351:
   809   0011CA  EF29  F009         	goto	l2173
   810   0011CE                     u1350:
   811   0011CE                     
   812                           ; BSR set to: 0
   813                           ;../main.c: 85:                     color_read(&RGB_recorded);
   814   0011CE  0EE1               	movlw	low main@RGB_recorded
   815   0011D0  6E0E               	movwf	color_read@rgb^0,c
   816   0011D2  0E00               	movlw	high main@RGB_recorded
   817   0011D4  6E0F               	movwf	(color_read@rgb+1)^0,c
   818   0011D6  EC1A  F00C         	call	_color_read	;wreg free
   819   0011DA  0EE1               	movlw	low main@RGB_recorded
   820   0011DC  6E03               	movwf	color_processor_easy@rgb^0,c
   821   0011DE  0E00               	movlw	high main@RGB_recorded
   822   0011E0  6E04               	movwf	(color_processor_easy@rgb+1)^0,c
   823   0011E2  ECBB  F00B         	call	_color_processor_easy	;wreg free
   824                           
   825                           ;../main.c: 90:                     color_read(&RGB_calibrated);
   826   0011E6  0EE9               	movlw	low main@RGB_calibrated
   827   0011E8  6E0E               	movwf	color_read@rgb^0,c
   828   0011EA  0E00               	movlw	high main@RGB_calibrated
   829   0011EC  6E0F               	movwf	(color_read@rgb+1)^0,c
   830   0011EE  EC1A  F00C         	call	_color_read	;wreg free
   831   0011F2                     
   832                           ;../main.c: 91:                     char readout[50];;../main.c: 92:                    
      +                           sprintf(readout,"%d %d %d %d \r\n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,
      +                          RGB_calibrated.B);
   833   0011F2  0EAD               	movlw	low main@readout_752
   834   0011F4  0100               	movlb	0	; () banked
   835   0011F6  6F60               	movwf	sprintf@s& (0+255),b
   836   0011F8  0E00               	movlw	high main@readout_752
   837   0011FA  6F61               	movwf	(sprintf@s+1)& (0+255),b
   838   0011FC  0E01               	movlw	low STR_1
   839   0011FE  6F62               	movwf	sprintf@fmt& (0+255),b
   840   001200  0E0E               	movlw	high STR_1
   841   001202  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   842   001204  C0E9  F064         	movff	main@RGB_calibrated,?_sprintf+4
   843   001208  C0EA  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
   844   00120C  C0EB  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
   845   001210  C0EC  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
   846   001214  C0ED  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
   847   001218  C0EE  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
   848   00121C  C0EF  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
   849   001220  C0F0  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
   850   001224  ECAA  F00C         	call	_sprintf	;wreg free
   851   001228                     
   852                           ;../main.c: 93:                     sendStringSerial4(readout);
   853   001228  0EAD               	movlw	low main@readout_752
   854   00122A  6E04               	movwf	sendStringSerial4@string^0,c
   855   00122C  0E00               	movlw	high main@readout_752
   856   00122E  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   857   001230  EC44  F00E         	call	_sendStringSerial4	;wreg free
   858   001234  EF29  F009         	goto	l2173
   859   001238                     l176:
   860   001238  A680               	btfss	128,3,c	;volatile
   861   00123A  EF21  F009         	goto	u1361
   862   00123E  EF23  F009         	goto	u1360
   863   001242                     u1361:
   864   001242  EF29  F009         	goto	l2173
   865   001246                     u1360:
   866   001246                     
   867                           ;../main.c: 98:                 color_read(&RGB_recorded);
   868   001246  0EE1               	movlw	low main@RGB_recorded
   869   001248  6E0E               	movwf	color_read@rgb^0,c
   870   00124A  0E00               	movlw	high main@RGB_recorded
   871   00124C  6E0F               	movwf	(color_read@rgb+1)^0,c
   872   00124E  EC1A  F00C         	call	_color_read	;wreg free
   873   001252                     l2173:
   874                           
   875                           ;../main.c: 100:             _delay((unsigned long)((200)*(64000000/4000.0)));
   876   001252  0E11               	movlw	17
   877   001254  0100               	movlb	0	; () banked
   878   001256  6F7A               	movwf	(??_main+1)& (0+255),b
   879   001258  0E3C               	movlw	60
   880   00125A  6F79               	movwf	??_main& (0+255),b
   881   00125C  0ECB               	movlw	203
   882   00125E                     u1377:
   883   00125E  2EE8               	decfsz	wreg,f,c
   884   001260  D7FE               	bra	u1377
   885   001262  2F79               	decfsz	??_main& (0+255),f,b
   886   001264  D7FC               	bra	u1377
   887   001266  2F7A               	decfsz	(??_main+1)& (0+255),f,b
   888   001268  D7FA               	bra	u1377
   889   00126A  EFD6  F008         	goto	l2161
   890   00126E  EF2A  F000         	goto	start
   891   001272                     __end_of_main:
   892                           	callstack 0
   893                           
   894 ;; *************** function _sprintf *****************
   895 ;; Defined at:
   896 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  s               2    0[BANK0 ] PTR unsigned char 
   899 ;;		 -> main@readout_752(50), main@readout(50), 
   900 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   901 ;;		 -> STR_2(15), STR_1(15), 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  f              11   14[BANK0 ] struct _IO_FILE
   904 ;;  ap              2   12[BANK0 ] PTR void [1]
   905 ;;		 -> ?_sprintf(2), 
   906 ;;  ret             2    0        int 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2    0[BANK0 ] int 
   909 ;; Registers used:
   910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   916 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;Total ram usage:       25 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 9
   923 ;; This function calls:
   924 ;;		_vfprintf
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text1
   931   001954                     __ptext1:
   932                           	callstack 0
   933   001954                     _sprintf:
   934                           	callstack 21
   935   001954  0E64               	movlw	low (?_sprintf+4)
   936   001956  0100               	movlb	0	; () banked
   937   001958  6F6C               	movwf	sprintf@ap& (0+255),b
   938   00195A  0E00               	movlw	high (?_sprintf+4)
   939   00195C  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
   940   00195E  C060  F06E         	movff	sprintf@s,sprintf@f
   941   001962  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
   942   001966                     
   943                           ; BSR set to: 0
   944   001966  0E00               	movlw	0
   945   001968  6F72               	movwf	(sprintf@f+4)& (0+255),b
   946   00196A  0E00               	movlw	0
   947   00196C  6F71               	movwf	(sprintf@f+3)& (0+255),b
   948   00196E                     
   949                           ; BSR set to: 0
   950   00196E  0E00               	movlw	0
   951   001970  6F78               	movwf	(sprintf@f+10)& (0+255),b
   952   001972  0E00               	movlw	0
   953   001974  6F77               	movwf	(sprintf@f+9)& (0+255),b
   954   001976                     
   955                           ; BSR set to: 0
   956   001976  0E6E               	movlw	low sprintf@f
   957   001978  6E53               	movwf	vfprintf@fp^0,c
   958   00197A  0E00               	movlw	high sprintf@f
   959   00197C  6E54               	movwf	(vfprintf@fp+1)^0,c
   960   00197E  C062  F055         	movff	sprintf@fmt,vfprintf@fmt
   961   001982  C063  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
   962   001986  0E6C               	movlw	low sprintf@ap
   963   001988  6E57               	movwf	vfprintf@ap^0,c
   964   00198A  0E00               	movlw	high sprintf@ap
   965   00198C  6E58               	movwf	(vfprintf@ap+1)^0,c
   966   00198E  EC73  F00D         	call	_vfprintf	;wreg free
   967   001992  0100               	movlb	0	; () banked
   968   001994  5171               	movf	(sprintf@f+3)& (0+255),w,b
   969   001996  2560               	addwf	sprintf@s& (0+255),w,b
   970   001998  6ED9               	movwf	fsr2l,c
   971   00199A  5172               	movf	(sprintf@f+4)& (0+255),w,b
   972   00199C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   973   00199E  6EDA               	movwf	fsr2h,c
   974   0019A0  0E00               	movlw	0
   975   0019A2  6EDF               	movwf	indf2,c
   976   0019A4                     
   977                           ; BSR set to: 0
   978   0019A4  0012               	return		;funcret
   979   0019A6                     __end_of_sprintf:
   980                           	callstack 0
   981                           
   982 ;; *************** function _vfprintf *****************
   983 ;; Defined at:
   984 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
   987 ;;		 -> sprintf@f(11), 
   988 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
   989 ;;		 -> STR_2(15), STR_1(15), 
   990 ;;  ap              2   86[COMRAM] PTR PTR void 
   991 ;;		 -> sprintf@ap(2), 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
   994 ;;		 -> STR_2(15), STR_1(15), 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  2   82[COMRAM] int 
   997 ;; Registers used:
   998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1004 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;Total ram usage:        8 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 8
  1011 ;; This function calls:
  1012 ;;		_vfpfcnvrt
  1013 ;; This function is called by:
  1014 ;;		_sprintf
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text2
  1019   001AE6                     __ptext2:
  1020                           	callstack 0
  1021   001AE6                     _vfprintf:
  1022                           	callstack 21
  1023   001AE6                     
  1024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1025   001AE6  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1026   001AEA  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1027                           
  1028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1029   001AEE  EF87  F00D         	goto	l1947
  1030   001AF2                     l1945:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1033   001AF2  C053  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1034   001AF6  C054  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1035   001AFA  0E59               	movlw	low vfprintf@cfmt
  1036   001AFC  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1037   001AFE  0E00               	movlw	high vfprintf@cfmt
  1038   001B00  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1039   001B02  C057  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1040   001B06  C058  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1041   001B0A  ECAF  F00A         	call	_vfpfcnvrt	;wreg free
  1042   001B0E                     l1947:
  1043                           
  1044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1045   001B0E  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1046   001B12  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1047   001B16                     	if	0	;tblptru may be non-zero
  1048   001B16                     	endif
  1049   001B16                     	if	0	;tblptru may be non-zero
  1050   001B16                     	endif
  1051   001B16  0008               	tblrd		*
  1052   001B18  50F5               	movf	tablat,w,c
  1053   001B1A  0900               	iorlw	0
  1054   001B1C  A4D8               	btfss	status,2,c
  1055   001B1E  EF93  F00D         	goto	u1071
  1056   001B22  EF95  F00D         	goto	u1070
  1057   001B26                     u1071:
  1058   001B26  EF79  F00D         	goto	l1945
  1059   001B2A                     u1070:
  1060   001B2A                     
  1061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1062   001B2A  0E00               	movlw	0
  1063   001B2C  6E54               	movwf	(?_vfprintf+1)^0,c
  1064   001B2E  0E00               	movlw	0
  1065   001B30  6E53               	movwf	?_vfprintf^0,c
  1066   001B32  0012               	return		;funcret
  1067   001B34                     __end_of_vfprintf:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _vfpfcnvrt *****************
  1071 ;; Defined at:
  1072 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1075 ;;		 -> sprintf@f(11), 
  1076 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1077 ;;		 -> vfprintf@cfmt(2), 
  1078 ;;  ap              2   68[COMRAM] PTR PTR void 
  1079 ;;		 -> sprintf@ap(2), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  convarg         8   72[COMRAM] struct .
  1082 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1083 ;;		 -> STR_2(15), STR_1(15), 
  1084 ;;  i               2    0        int 
  1085 ;;  done            2    0        int 
  1086 ;;  c               1    0        unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1096 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;Total ram usage:       18 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 7
  1103 ;; This function calls:
  1104 ;;		_dtoa
  1105 ;;		_fputc
  1106 ;; This function is called by:
  1107 ;;		_vfprintf
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text3
  1112   00155E                     __ptext3:
  1113                           	callstack 0
  1114   00155E                     _vfpfcnvrt:
  1115                           	callstack 21
  1116   00155E                     
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1118   00155E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1119   001562  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1120   001566  CFDE FFF6          	movff	postinc2,tblptrl
  1121   00156A  CFDD FFF7          	movff	postdec2,tblptrh
  1122   00156E                     	if	0	;tblptru may be non-zero
  1123   00156E                     	endif
  1124   00156E                     	if	0	;tblptru may be non-zero
  1125   00156E                     	endif
  1126   00156E  0008               	tblrd		*
  1127   001570  50F5               	movf	tablat,w,c
  1128   001572  0A25               	xorlw	37
  1129   001574  A4D8               	btfss	status,2,c
  1130   001576  EFBF  F00A         	goto	u1031
  1131   00157A  EFC1  F00A         	goto	u1030
  1132   00157E                     u1031:
  1133   00157E  EF41  F00B         	goto	l1895
  1134   001582                     u1030:
  1135   001582                     
  1136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1137   001582  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1138   001586  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1139   00158A  2ADE               	incf	postinc2,f,c
  1140   00158C  0E00               	movlw	0
  1141   00158E  22DD               	addwfc	postdec2,f,c
  1142   001590                     
  1143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1144   001590  0E00               	movlw	0
  1145   001592  0100               	movlb	0	; () banked
  1146   001594  6FF2               	movwf	(_width+1)& (0+255),b
  1147   001596  0E00               	movlw	0
  1148   001598  6FF1               	movwf	_width& (0+255),b
  1149   00159A  C0F1  F0F9         	movff	_width,_flags
  1150   00159E                     
  1151                           ; BSR set to: 0
  1152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1153   00159E  69F3               	setf	_prec& (0+255),b
  1154   0015A0  69F4               	setf	(_prec+1)& (0+255),b
  1155   0015A2                     
  1156                           ; BSR set to: 0
  1157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1158   0015A2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1159   0015A6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1160   0015AA  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1161   0015AE  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1162   0015B2                     
  1163                           ; BSR set to: 0
  1164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1165   0015B2  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1166   0015B6  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1167   0015BA                     	if	0	;tblptru may be non-zero
  1168   0015BA                     	endif
  1169   0015BA                     	if	0	;tblptru may be non-zero
  1170   0015BA                     	endif
  1171   0015BA  0008               	tblrd		*
  1172   0015BC  50F5               	movf	tablat,w,c
  1173   0015BE  0A64               	xorlw	100
  1174   0015C0  B4D8               	btfsc	status,2,c
  1175   0015C2  EFE5  F00A         	goto	u1041
  1176   0015C6  EFE7  F00A         	goto	u1040
  1177   0015CA                     u1041:
  1178   0015CA  EFF5  F00A         	goto	l1885
  1179   0015CE                     u1040:
  1180   0015CE                     
  1181                           ; BSR set to: 0
  1182   0015CE  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1183   0015D2  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1184   0015D6                     	if	0	;tblptru may be non-zero
  1185   0015D6                     	endif
  1186   0015D6                     	if	0	;tblptru may be non-zero
  1187   0015D6                     	endif
  1188   0015D6  0008               	tblrd		*
  1189   0015D8  50F5               	movf	tablat,w,c
  1190   0015DA  0A69               	xorlw	105
  1191   0015DC  A4D8               	btfss	status,2,c
  1192   0015DE  EFF3  F00A         	goto	u1051
  1193   0015E2  EFF5  F00A         	goto	u1050
  1194   0015E6                     u1051:
  1195   0015E6  EF38  F00B         	goto	l1891
  1196   0015EA                     u1050:
  1197   0015EA                     l1885:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1201   0015EA  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1202   0015EE  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1203   0015F2  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1204   0015F6  0E02               	movlw	2
  1205   0015F8  26DE               	addwf	postinc2,f,c
  1206   0015FA  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1207   0015FE  0E00               	movlw	0
  1208   001600  22DD               	addwfc	postdec2,f,c
  1209   001602  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1210   001606  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1211   00160A  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1212   00160E  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1213   001612  0E00               	movlw	0
  1214   001614  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1215   001616  0EFF               	movlw	-1
  1216   001618  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1217   00161A  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1218   00161C  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1219   00161E  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1220   001620  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1221   001622  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1222                           
  1223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1224   001624  0E01               	movlw	1
  1225   001626  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1226   001628  6E47               	movwf	??_vfpfcnvrt^0,c
  1227   00162A  0E00               	movlw	0
  1228   00162C  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1229   00162E  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1230   001630  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1231   001634  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1232   001638  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1233   00163C  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1234   001640                     
  1235                           ; BSR set to: 0
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1237   001640  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1238   001644  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1239   001648  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1240   00164C  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1241   001650  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1242   001654  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1243   001658  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1244   00165C  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1245   001660  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1246   001664  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1247   001668  EC09  F007         	call	_dtoa	;wreg free
  1248   00166C  EF55  F00B         	goto	l1077
  1249   001670                     l1891:
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1252   001670  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1253   001674  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1254   001678  2ADE               	incf	postinc2,f,c
  1255   00167A  0E00               	movlw	0
  1256   00167C  22DD               	addwfc	postdec2,f,c
  1257   00167E  EF55  F00B         	goto	l1077
  1258   001682                     l1895:
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1261   001682  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1262   001686  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1263   00168A  CFDE FFF6          	movff	postinc2,tblptrl
  1264   00168E  CFDD FFF7          	movff	postdec2,tblptrh
  1265   001692                     	if	0	;tblptru may be non-zero
  1266   001692                     	endif
  1267   001692                     	if	0	;tblptru may be non-zero
  1268   001692                     	endif
  1269   001692  0008               	tblrd		*
  1270   001694  50F5               	movf	tablat,w,c
  1271   001696  6E03               	movwf	fputc@c^0,c
  1272   001698  6A04               	clrf	(fputc@c+1)^0,c
  1273   00169A  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1274   00169E  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1275   0016A2  EC56  F00B         	call	_fputc	;wreg free
  1276   0016A6  EF38  F00B         	goto	l1891
  1277   0016AA                     l1077:
  1278   0016AA  0012               	return		;funcret
  1279   0016AC                     __end_of_vfpfcnvrt:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _dtoa *****************
  1283 ;; Defined at:
  1284 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1287 ;;		 -> sprintf@f(11), 
  1288 ;;  d               8   31[COMRAM] long long 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  n               8   53[COMRAM] long long 
  1291 ;;  i               2   61[COMRAM] int 
  1292 ;;  w               2   51[COMRAM] int 
  1293 ;;  p               2   49[COMRAM] int 
  1294 ;;  s               1   63[COMRAM] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1304 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;Total ram usage:       35 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 6
  1311 ;; This function calls:
  1312 ;;		___aodiv
  1313 ;;		___aomod
  1314 ;;		_abs
  1315 ;;		_pad
  1316 ;; This function is called by:
  1317 ;;		_vfpfcnvrt
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text4
  1322   000E12                     __ptext4:
  1323                           	callstack 0
  1324   000E12                     _dtoa:
  1325                           	callstack 21
  1326   000E12                     
  1327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1328   000E12  C020  F036         	movff	dtoa@d,dtoa@n
  1329   000E16  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  1330   000E1A  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  1331   000E1E  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  1332   000E22  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  1333   000E26  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  1334   000E2A  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  1335   000E2E  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  1336   000E32                     
  1337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1338   000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1339   000E34  EF1E  F007         	goto	u911
  1340   000E38  EF21  F007         	goto	u910
  1341   000E3C                     u911:
  1342   000E3C  0E01               	movlw	1
  1343   000E3E  EF22  F007         	goto	u920
  1344   000E42                     u910:
  1345   000E42  0E00               	movlw	0
  1346   000E44                     u920:
  1347   000E44  6E40               	movwf	dtoa@s^0,c
  1348   000E46                     
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1350   000E46  5040               	movf	dtoa@s^0,w,c
  1351   000E48  B4D8               	btfsc	status,2,c
  1352   000E4A  EF29  F007         	goto	u931
  1353   000E4E  EF2B  F007         	goto	u930
  1354   000E52                     u931:
  1355   000E52  EF3B  F007         	goto	l1797
  1356   000E56                     u930:
  1357   000E56                     
  1358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1359   000E56  1E3D               	comf	(dtoa@n+7)^0,f,c
  1360   000E58  1E3C               	comf	(dtoa@n+6)^0,f,c
  1361   000E5A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1362   000E5C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1363   000E5E  1E39               	comf	(dtoa@n+3)^0,f,c
  1364   000E60  1E38               	comf	(dtoa@n+2)^0,f,c
  1365   000E62  1E37               	comf	(dtoa@n+1)^0,f,c
  1366   000E64  6C36               	negf	dtoa@n^0,c
  1367   000E66  0E00               	movlw	0
  1368   000E68  2237               	addwfc	(dtoa@n+1)^0,f,c
  1369   000E6A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1370   000E6C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1371   000E6E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1372   000E70  223B               	addwfc	(dtoa@n+5)^0,f,c
  1373   000E72  223C               	addwfc	(dtoa@n+6)^0,f,c
  1374   000E74  223D               	addwfc	(dtoa@n+7)^0,f,c
  1375   000E76                     l1797:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1378   000E76  0100               	movlb	0	; () banked
  1379   000E78  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  1380   000E7A  EF49  F007         	goto	u940
  1381   000E7E  51F4               	movf	(_prec+1)& (0+255),w,b
  1382   000E80  E106               	bnz	u941
  1383   000E82  05F3               	decf	_prec& (0+255),w,b
  1384   000E84  B0D8               	btfsc	status,0,c
  1385   000E86  EF47  F007         	goto	u941
  1386   000E8A  EF49  F007         	goto	u940
  1387   000E8E                     u941:
  1388   000E8E  EF4F  F007         	goto	l1056
  1389   000E92                     u940:
  1390   000E92                     
  1391                           ; BSR set to: 0
  1392   000E92  0E00               	movlw	0
  1393   000E94  6E33               	movwf	(dtoa@p+1)^0,c
  1394   000E96  0E01               	movlw	1
  1395   000E98  6E32               	movwf	dtoa@p^0,c
  1396   000E9A  EF53  F007         	goto	l1058
  1397   000E9E                     l1056:
  1398                           
  1399                           ; BSR set to: 0
  1400   000E9E  C0F3  F032         	movff	_prec,dtoa@p
  1401   000EA2  C0F4  F033         	movff	_prec+1,dtoa@p+1
  1402   000EA6                     l1058:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1406   000EA6  C0F1  F034         	movff	_width,dtoa@w
  1407   000EAA  C0F2  F035         	movff	_width+1,dtoa@w+1
  1408   000EAE                     
  1409                           ; BSR set to: 0
  1410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1411   000EAE  5040               	movf	dtoa@s^0,w,c
  1412   000EB0  B4D8               	btfsc	status,2,c
  1413   000EB2  EF5D  F007         	goto	u951
  1414   000EB6  EF5F  F007         	goto	u950
  1415   000EBA                     u951:
  1416   000EBA  EF76  F007         	goto	l1059
  1417   000EBE                     u950:
  1418   000EBE                     
  1419                           ; BSR set to: 0
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1421   000EBE  0634               	decf	dtoa@w^0,f,c
  1422   000EC0  A0D8               	btfss	status,0,c
  1423   000EC2  0635               	decf	(dtoa@w+1)^0,f,c
  1424   000EC4                     
  1425                           ; BSR set to: 0
  1426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1427   000EC4  5040               	movf	dtoa@s^0,w,c
  1428   000EC6  A4D8               	btfss	status,2,c
  1429   000EC8  EF68  F007         	goto	u961
  1430   000ECC  EF6A  F007         	goto	u960
  1431   000ED0                     u961:
  1432   000ED0  EF70  F007         	goto	l1809
  1433   000ED4                     u960:
  1434   000ED4                     
  1435                           ; BSR set to: 0
  1436   000ED4  0E00               	movlw	0
  1437   000ED6  6E31               	movwf	(_dtoa$2147+1)^0,c
  1438   000ED8  0E2B               	movlw	43
  1439   000EDA  6E30               	movwf	_dtoa$2147^0,c
  1440   000EDC  EF74  F007         	goto	l1811
  1441   000EE0                     l1809:
  1442                           
  1443                           ; BSR set to: 0
  1444   000EE0  0E00               	movlw	0
  1445   000EE2  6E31               	movwf	(_dtoa$2147+1)^0,c
  1446   000EE4  0E2D               	movlw	45
  1447   000EE6  6E30               	movwf	_dtoa$2147^0,c
  1448   000EE8                     l1811:
  1449                           
  1450                           ; BSR set to: 0
  1451   000EE8  C030  F040         	movff	_dtoa$2147,dtoa@s
  1452   000EEC                     l1059:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1456   000EEC  0E00               	movlw	0
  1457   000EEE  6E3F               	movwf	(dtoa@i+1)^0,c
  1458   000EF0  0E1F               	movlw	31
  1459   000EF2  6E3E               	movwf	dtoa@i^0,c
  1460   000EF4                     
  1461                           ; BSR set to: 0
  1462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1463   000EF4  0E00               	movlw	0
  1464   000EF6  0101               	movlb	1	; () banked
  1465   000EF8  6F6F               	movwf	(_dbuf+31)& (0+255),b
  1466                           
  1467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1468   000EFA  EFFB  F007         	goto	l1825
  1469   000EFE                     l1815:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1472   000EFE  063E               	decf	dtoa@i^0,f,c
  1473   000F00  A0D8               	btfss	status,0,c
  1474   000F02  063F               	decf	(dtoa@i+1)^0,f,c
  1475   000F04                     
  1476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1477   000F04  0E50               	movlw	low _dbuf
  1478   000F06  243E               	addwf	dtoa@i^0,w,c
  1479   000F08  6ED9               	movwf	fsr2l,c
  1480   000F0A  0E01               	movlw	high _dbuf
  1481   000F0C  203F               	addwfc	(dtoa@i+1)^0,w,c
  1482   000F0E  6EDA               	movwf	fsr2h,c
  1483   000F10  C036  F003         	movff	dtoa@n,___aomod@dividend
  1484   000F14  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1485   000F18  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1486   000F1C  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1487   000F20  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1488   000F24  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1489   000F28  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1490   000F2C  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1491   000F30  0E0A               	movlw	10
  1492   000F32  6E0B               	movwf	___aomod@divisor^0,c
  1493   000F34  0E00               	movlw	0
  1494   000F36  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1495   000F38  0E00               	movlw	0
  1496   000F3A  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1497   000F3C  0E00               	movlw	0
  1498   000F3E  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1499   000F40  0E00               	movlw	0
  1500   000F42  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1501   000F44  0E00               	movlw	0
  1502   000F46  6E10               	movwf	(___aomod@divisor+5)^0,c
  1503   000F48  0E00               	movlw	0
  1504   000F4A  6E11               	movwf	(___aomod@divisor+6)^0,c
  1505   000F4C  0E00               	movlw	0
  1506   000F4E  6E12               	movwf	(___aomod@divisor+7)^0,c
  1507   000F50  ECFD  F009         	call	___aomod	;wreg free
  1508   000F54  C003  F028         	movff	?___aomod,??_dtoa
  1509   000F58  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1510   000F5C  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1511   000F60  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1512   000F64  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1513   000F68  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1514   000F6C  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1515   000F70  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1516   000F74  C028  F015         	movff	??_dtoa,abs@a
  1517   000F78  C029  F016         	movff	??_dtoa+1,abs@a+1
  1518   000F7C  EC24  F00E         	call	_abs	;wreg free
  1519   000F80  5015               	movf	?_abs^0,w,c
  1520   000F82  0F30               	addlw	48
  1521   000F84  6EDF               	movwf	indf2,c
  1522   000F86                     
  1523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1524   000F86  0632               	decf	dtoa@p^0,f,c
  1525   000F88  A0D8               	btfss	status,0,c
  1526   000F8A  0633               	decf	(dtoa@p+1)^0,f,c
  1527   000F8C                     
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1529   000F8C  0634               	decf	dtoa@w^0,f,c
  1530   000F8E  A0D8               	btfss	status,0,c
  1531   000F90  0635               	decf	(dtoa@w+1)^0,f,c
  1532   000F92                     
  1533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1534   000F92  C036  F003         	movff	dtoa@n,___aodiv@dividend
  1535   000F96  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1536   000F9A  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1537   000F9E  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1538   000FA2  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1539   000FA6  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1540   000FAA  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1541   000FAE  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  1542   000FB2  0E0A               	movlw	10
  1543   000FB4  6E0B               	movwf	___aodiv@divisor^0,c
  1544   000FB6  0E00               	movlw	0
  1545   000FB8  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  1546   000FBA  0E00               	movlw	0
  1547   000FBC  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  1548   000FBE  0E00               	movlw	0
  1549   000FC0  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  1550   000FC2  0E00               	movlw	0
  1551   000FC4  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  1552   000FC6  0E00               	movlw	0
  1553   000FC8  6E10               	movwf	(___aodiv@divisor+5)^0,c
  1554   000FCA  0E00               	movlw	0
  1555   000FCC  6E11               	movwf	(___aodiv@divisor+6)^0,c
  1556   000FCE  0E00               	movlw	0
  1557   000FD0  6E12               	movwf	(___aodiv@divisor+7)^0,c
  1558   000FD2  EC39  F009         	call	___aodiv	;wreg free
  1559   000FD6  C003  F036         	movff	?___aodiv,dtoa@n
  1560   000FDA  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  1561   000FDE  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  1562   000FE2  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  1563   000FE6  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  1564   000FEA  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  1565   000FEE  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  1566   000FF2  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  1567   000FF6                     l1825:
  1568                           
  1569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1570   000FF6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1571   000FF8  EF06  F008         	goto	u971
  1572   000FFC  503F               	movf	(dtoa@i+1)^0,w,c
  1573   000FFE  E108               	bnz	u970
  1574   001000  043E               	decf	dtoa@i^0,w,c
  1575   001002  A0D8               	btfss	status,0,c
  1576   001004  EF06  F008         	goto	u971
  1577   001008  EF08  F008         	goto	u970
  1578   00100C                     u971:
  1579   00100C  EF24  F008         	goto	l1831
  1580   001010                     u970:
  1581   001010  5036               	movf	dtoa@n^0,w,c
  1582   001012  1037               	iorwf	(dtoa@n+1)^0,w,c
  1583   001014  1038               	iorwf	(dtoa@n+2)^0,w,c
  1584   001016  1039               	iorwf	(dtoa@n+3)^0,w,c
  1585   001018  103A               	iorwf	(dtoa@n+4)^0,w,c
  1586   00101A  103B               	iorwf	(dtoa@n+5)^0,w,c
  1587   00101C  103C               	iorwf	(dtoa@n+6)^0,w,c
  1588   00101E  103D               	iorwf	(dtoa@n+7)^0,w,c
  1589   001020  A4D8               	btfss	status,2,c
  1590   001022  EF15  F008         	goto	u981
  1591   001026  EF17  F008         	goto	u980
  1592   00102A                     u981:
  1593   00102A  EF7F  F007         	goto	l1815
  1594   00102E                     u980:
  1595   00102E  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1596   001030  EF24  F008         	goto	u990
  1597   001034  5033               	movf	(dtoa@p+1)^0,w,c
  1598   001036  E106               	bnz	u991
  1599   001038  0432               	decf	dtoa@p^0,w,c
  1600   00103A  B0D8               	btfsc	status,0,c
  1601   00103C  EF22  F008         	goto	u991
  1602   001040  EF24  F008         	goto	u990
  1603   001044                     u991:
  1604   001044  EF7F  F007         	goto	l1815
  1605   001048                     u990:
  1606   001048                     l1831:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1609   001048  5040               	movf	dtoa@s^0,w,c
  1610   00104A  B4D8               	btfsc	status,2,c
  1611   00104C  EF2A  F008         	goto	u1001
  1612   001050  EF2C  F008         	goto	u1000
  1613   001054                     u1001:
  1614   001054  EF37  F008         	goto	l1837
  1615   001058                     u1000:
  1616   001058                     
  1617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1618   001058  063E               	decf	dtoa@i^0,f,c
  1619   00105A  A0D8               	btfss	status,0,c
  1620   00105C  063F               	decf	(dtoa@i+1)^0,f,c
  1621   00105E                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1623   00105E  0E50               	movlw	low _dbuf
  1624   001060  243E               	addwf	dtoa@i^0,w,c
  1625   001062  6ED9               	movwf	fsr2l,c
  1626   001064  0E01               	movlw	high _dbuf
  1627   001066  203F               	addwfc	(dtoa@i+1)^0,w,c
  1628   001068  6EDA               	movwf	fsr2h,c
  1629   00106A  C040  FFDF         	movff	dtoa@s,indf2
  1630   00106E                     l1837:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1633   00106E  C01E  F013         	movff	dtoa@fp,pad@fp
  1634   001072  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1635   001076  0E50               	movlw	low _dbuf
  1636   001078  243E               	addwf	dtoa@i^0,w,c
  1637   00107A  6E15               	movwf	pad@buf^0,c
  1638   00107C  0E01               	movlw	high _dbuf
  1639   00107E  203F               	addwfc	(dtoa@i+1)^0,w,c
  1640   001080  6E16               	movwf	(pad@buf+1)^0,c
  1641   001082  C034  F017         	movff	dtoa@w,pad@p
  1642   001086  C035  F018         	movff	dtoa@w+1,pad@p+1
  1643   00108A  EC6D  F00C         	call	_pad	;wreg free
  1644   00108E  0012               	return		;funcret
  1645   001090                     __end_of_dtoa:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _pad *****************
  1649 ;; Defined at:
  1650 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1653 ;;		 -> sprintf@f(11), 
  1654 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1655 ;;		 -> dbuf(32), 
  1656 ;;  p               2   22[COMRAM] int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  w               2   27[COMRAM] int 
  1659 ;;  i               2   25[COMRAM] int 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1669 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1673 ;;Total ram usage:       11 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 5
  1676 ;; This function calls:
  1677 ;;		_fputc
  1678 ;;		_fputs
  1679 ;; This function is called by:
  1680 ;;		_dtoa
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text5
  1685   0018DA                     __ptext5:
  1686                           	callstack 0
  1687   0018DA                     _pad:
  1688                           	callstack 21
  1689   0018DA                     
  1690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1691   0018DA  BE18               	btfsc	(pad@p+1)^0,7,c
  1692   0018DC  EF72  F00C         	goto	u861
  1693   0018E0  EF74  F00C         	goto	u860
  1694   0018E4                     u861:
  1695   0018E4  EF7A  F00C         	goto	l1771
  1696   0018E8                     u860:
  1697   0018E8  C017  F01C         	movff	pad@p,pad@w
  1698   0018EC  C018  F01D         	movff	pad@p+1,pad@w+1
  1699   0018F0  EF7E  F00C         	goto	l1047
  1700   0018F4                     l1771:
  1701   0018F4  0E00               	movlw	0
  1702   0018F6  6E1D               	movwf	(pad@w+1)^0,c
  1703   0018F8  0E00               	movlw	0
  1704   0018FA  6E1C               	movwf	pad@w^0,c
  1705   0018FC                     l1047:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1708   0018FC  0E00               	movlw	0
  1709   0018FE  6E1B               	movwf	(pad@i+1)^0,c
  1710   001900  0E00               	movlw	0
  1711   001902  6E1A               	movwf	pad@i^0,c
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1714   001904  EF90  F00C         	goto	l1777
  1715   001908                     l1773:
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1718   001908  0E00               	movlw	0
  1719   00190A  6E04               	movwf	(fputc@c+1)^0,c
  1720   00190C  0E20               	movlw	32
  1721   00190E  6E03               	movwf	fputc@c^0,c
  1722   001910  C013  F005         	movff	pad@fp,fputc@fp
  1723   001914  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1724   001918  EC56  F00B         	call	_fputc	;wreg free
  1725   00191C                     
  1726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1727   00191C  4A1A               	infsnz	pad@i^0,f,c
  1728   00191E  2A1B               	incf	(pad@i+1)^0,f,c
  1729   001920                     l1777:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1732   001920  501C               	movf	pad@w^0,w,c
  1733   001922  5C1A               	subwf	pad@i^0,w,c
  1734   001924  501B               	movf	(pad@i+1)^0,w,c
  1735   001926  0A80               	xorlw	128
  1736   001928  6E19               	movwf	??_pad^0,c
  1737   00192A  501D               	movf	(pad@w+1)^0,w,c
  1738   00192C  0A80               	xorlw	128
  1739   00192E  5819               	subwfb	??_pad^0,w,c
  1740   001930  A0D8               	btfss	status,0,c
  1741   001932  EF9D  F00C         	goto	u871
  1742   001936  EF9F  F00C         	goto	u870
  1743   00193A                     u871:
  1744   00193A  EF84  F00C         	goto	l1773
  1745   00193E                     u870:
  1746   00193E                     
  1747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1748   00193E  C015  F00C         	movff	pad@buf,fputs@s
  1749   001942  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1750   001946  C013  F00E         	movff	pad@fp,fputs@fp
  1751   00194A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1752   00194E  ECE1  F00D         	call	_fputs	;wreg free
  1753   001952  0012               	return		;funcret
  1754   001954                     __end_of_pad:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _fputs *****************
  1758 ;; Defined at:
  1759 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1762 ;;		 -> dbuf(32), 
  1763 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1764 ;;		 -> sprintf@f(11), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  i               2   16[COMRAM] int 
  1767 ;;  c               1   15[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2   11[COMRAM] int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;Total ram usage:        7 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 4
  1784 ;; This function calls:
  1785 ;;		_fputc
  1786 ;; This function is called by:
  1787 ;;		_pad
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text6
  1792   001BC2                     __ptext6:
  1793                           	callstack 0
  1794   001BC2                     _fputs:
  1795                           	callstack 21
  1796   001BC2  0E00               	movlw	0
  1797   001BC4  6E12               	movwf	(fputs@i+1)^0,c
  1798   001BC6  0E00               	movlw	0
  1799   001BC8  6E11               	movwf	fputs@i^0,c
  1800   001BCA  EFF2  F00D         	goto	l1685
  1801   001BCE                     l1681:
  1802   001BCE  C010  F003         	movff	fputs@c,fputc@c
  1803   001BD2  6A04               	clrf	(fputc@c+1)^0,c
  1804   001BD4  C00E  F005         	movff	fputs@fp,fputc@fp
  1805   001BD8  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1806   001BDC  EC56  F00B         	call	_fputc	;wreg free
  1807   001BE0  4A11               	infsnz	fputs@i^0,f,c
  1808   001BE2  2A12               	incf	(fputs@i+1)^0,f,c
  1809   001BE4                     l1685:
  1810   001BE4  5011               	movf	fputs@i^0,w,c
  1811   001BE6  240C               	addwf	fputs@s^0,w,c
  1812   001BE8  6ED9               	movwf	fsr2l,c
  1813   001BEA  5012               	movf	(fputs@i+1)^0,w,c
  1814   001BEC  200D               	addwfc	(fputs@s+1)^0,w,c
  1815   001BEE  6EDA               	movwf	fsr2h,c
  1816   001BF0  50DF               	movf	indf2,w,c
  1817   001BF2  6E10               	movwf	fputs@c^0,c
  1818   001BF4  5010               	movf	fputs@c^0,w,c
  1819   001BF6  A4D8               	btfss	status,2,c
  1820   001BF8  EF00  F00E         	goto	u721
  1821   001BFC  EF02  F00E         	goto	u720
  1822   001C00                     u721:
  1823   001C00  EFE7  F00D         	goto	l1681
  1824   001C04                     u720:
  1825   001C04  0012               	return		;funcret
  1826   001C06                     __end_of_fputs:
  1827                           	callstack 0
  1828                           
  1829 ;; *************** function _fputc *****************
  1830 ;; Defined at:
  1831 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  c               2    2[COMRAM] int 
  1834 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1835 ;;		 -> sprintf@f(11), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  2    2[COMRAM] int 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1849 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;Total ram usage:        9 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 3
  1854 ;; This function calls:
  1855 ;;		_putch
  1856 ;; This function is called by:
  1857 ;;		_pad
  1858 ;;		_vfpfcnvrt
  1859 ;;		_fputs
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text7
  1864   0016AC                     __ptext7:
  1865                           	callstack 0
  1866   0016AC                     _fputc:
  1867                           	callstack 24
  1868   0016AC  5005               	movf	fputc@fp^0,w,c
  1869   0016AE  1006               	iorwf	(fputc@fp+1)^0,w,c
  1870   0016B0  B4D8               	btfsc	status,2,c
  1871   0016B2  EF5D  F00B         	goto	u681
  1872   0016B6  EF5F  F00B         	goto	u680
  1873   0016BA                     u681:
  1874   0016BA  EF68  F00B         	goto	l1669
  1875   0016BE                     u680:
  1876   0016BE  5005               	movf	fputc@fp^0,w,c
  1877   0016C0  1006               	iorwf	(fputc@fp+1)^0,w,c
  1878   0016C2  A4D8               	btfss	status,2,c
  1879   0016C4  EF66  F00B         	goto	u691
  1880   0016C8  EF68  F00B         	goto	u690
  1881   0016CC                     u691:
  1882   0016CC  EF6D  F00B         	goto	l1671
  1883   0016D0                     u690:
  1884   0016D0                     l1669:
  1885   0016D0  5003               	movf	fputc@c^0,w,c
  1886   0016D2  ECF7  F00E         	call	_putch
  1887   0016D6  EFBA  F00B         	goto	l1102
  1888   0016DA                     l1671:
  1889   0016DA  EE20 F009          	lfsr	2,9
  1890   0016DE  5005               	movf	fputc@fp^0,w,c
  1891   0016E0  26D9               	addwf	fsr2l,f,c
  1892   0016E2  5006               	movf	(fputc@fp+1)^0,w,c
  1893   0016E4  22DA               	addwfc	fsr2h,f,c
  1894   0016E6  50DE               	movf	postinc2,w,c
  1895   0016E8  10DE               	iorwf	postinc2,w,c
  1896   0016EA  B4D8               	btfsc	status,2,c
  1897   0016EC  EF7A  F00B         	goto	u701
  1898   0016F0  EF7C  F00B         	goto	u700
  1899   0016F4                     u701:
  1900   0016F4  EF97  F00B         	goto	l1675
  1901   0016F8                     u700:
  1902   0016F8  EE20 F009          	lfsr	2,9
  1903   0016FC  5005               	movf	fputc@fp^0,w,c
  1904   0016FE  26D9               	addwf	fsr2l,f,c
  1905   001700  5006               	movf	(fputc@fp+1)^0,w,c
  1906   001702  22DA               	addwfc	fsr2h,f,c
  1907   001704  EE10 F003          	lfsr	1,3
  1908   001708  5005               	movf	fputc@fp^0,w,c
  1909   00170A  26E1               	addwf	fsr1l,f,c
  1910   00170C  5006               	movf	(fputc@fp+1)^0,w,c
  1911   00170E  22E2               	addwfc	fsr1h,f,c
  1912   001710  50DE               	movf	postinc2,w,c
  1913   001712  5CE6               	subwf	postinc1,w,c
  1914   001714  50E6               	movf	postinc1,w,c
  1915   001716  0A80               	xorlw	128
  1916   001718  6E0B               	movwf	(??_fputc+4)^0,c
  1917   00171A  50DE               	movf	postinc2,w,c
  1918   00171C  0A80               	xorlw	128
  1919   00171E  580B               	subwfb	(??_fputc+4)^0,w,c
  1920   001720  B0D8               	btfsc	status,0,c
  1921   001722  EF95  F00B         	goto	u711
  1922   001726  EF97  F00B         	goto	u710
  1923   00172A                     u711:
  1924   00172A  EFBA  F00B         	goto	l1102
  1925   00172E                     u710:
  1926   00172E                     l1675:
  1927   00172E  EE20 F003          	lfsr	2,3
  1928   001732  5005               	movf	fputc@fp^0,w,c
  1929   001734  26D9               	addwf	fsr2l,f,c
  1930   001736  5006               	movf	(fputc@fp+1)^0,w,c
  1931   001738  22DA               	addwfc	fsr2h,f,c
  1932   00173A  CFDE F007          	movff	postinc2,??_fputc
  1933   00173E  CFDD F008          	movff	postdec2,??_fputc+1
  1934   001742  C005  FFD9         	movff	fputc@fp,fsr2l
  1935   001746  C006  FFDA         	movff	fputc@fp+1,fsr2h
  1936   00174A  CFDE F009          	movff	postinc2,??_fputc+2
  1937   00174E  CFDD F00A          	movff	postdec2,??_fputc+3
  1938   001752  5007               	movf	??_fputc^0,w,c
  1939   001754  2409               	addwf	(??_fputc+2)^0,w,c
  1940   001756  6ED9               	movwf	fsr2l,c
  1941   001758  5008               	movf	(??_fputc+1)^0,w,c
  1942   00175A  200A               	addwfc	(??_fputc+3)^0,w,c
  1943   00175C  6EDA               	movwf	fsr2h,c
  1944   00175E  C003  FFDF         	movff	fputc@c,indf2
  1945   001762  EE20 F003          	lfsr	2,3
  1946   001766  5005               	movf	fputc@fp^0,w,c
  1947   001768  26D9               	addwf	fsr2l,f,c
  1948   00176A  5006               	movf	(fputc@fp+1)^0,w,c
  1949   00176C  22DA               	addwfc	fsr2h,f,c
  1950   00176E  2ADE               	incf	postinc2,f,c
  1951   001770  0E00               	movlw	0
  1952   001772  22DD               	addwfc	postdec2,f,c
  1953   001774                     l1102:
  1954   001774  0012               	return		;funcret
  1955   001776                     __end_of_fputc:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _putch *****************
  1959 ;; Defined at:
  1960 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  c               1    wreg     unsigned char 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  c               1    0[COMRAM] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 2
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_fputc
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text8
  1989   001DEE                     __ptext8:
  1990                           	callstack 0
  1991   001DEE                     _putch:
  1992                           	callstack 24
  1993   001DEE  0012               	return		;funcret
  1994   001DF0                     __end_of_putch:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function _abs *****************
  1998 ;; Defined at:
  1999 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  a               2   20[COMRAM] int 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2   20[COMRAM] int 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;Total ram usage:        4 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 2
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_dtoa
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text9
  2028   001C48                     __ptext9:
  2029                           	callstack 0
  2030   001C48                     _abs:
  2031                           	callstack 24
  2032   001C48  BE16               	btfsc	(abs@a+1)^0,7,c
  2033   001C4A  EF31  F00E         	goto	u880
  2034   001C4E  5016               	movf	(abs@a+1)^0,w,c
  2035   001C50  E106               	bnz	u881
  2036   001C52  0415               	decf	abs@a^0,w,c
  2037   001C54  B0D8               	btfsc	status,0,c
  2038   001C56  EF2F  F00E         	goto	u881
  2039   001C5A  EF31  F00E         	goto	u880
  2040   001C5E                     u881:
  2041   001C5E  EF3F  F00E         	goto	l1087
  2042   001C62                     u880:
  2043   001C62  C015  F017         	movff	abs@a,??_abs
  2044   001C66  C016  F018         	movff	abs@a+1,??_abs+1
  2045   001C6A  1E17               	comf	??_abs^0,f,c
  2046   001C6C  1E18               	comf	(??_abs+1)^0,f,c
  2047   001C6E  4A17               	infsnz	??_abs^0,f,c
  2048   001C70  2A18               	incf	(??_abs+1)^0,f,c
  2049   001C72  C017  F015         	movff	??_abs,?_abs
  2050   001C76  C018  F016         	movff	??_abs+1,?_abs+1
  2051   001C7A  EF43  F00E         	goto	l1090
  2052   001C7E                     l1087:
  2053   001C7E  C015  F015         	movff	abs@a,?_abs
  2054   001C82  C016  F016         	movff	abs@a+1,?_abs+1
  2055   001C86                     l1090:
  2056   001C86  0012               	return		;funcret
  2057   001C88                     __end_of_abs:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function ___aomod *****************
  2061 ;; Defined at:
  2062 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  dividend        8    2[COMRAM] long long 
  2065 ;;  divisor         8   10[COMRAM] long long 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  sign            1   19[COMRAM] unsigned char 
  2068 ;;  counter         1   18[COMRAM] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  8    2[COMRAM] long long 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2078 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;Total ram usage:       18 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 2
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_dtoa
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text10
  2093   0013FA                     __ptext10:
  2094                           	callstack 0
  2095   0013FA                     ___aomod:
  2096                           	callstack 24
  2097   0013FA  0E00               	movlw	0
  2098   0013FC  6E14               	movwf	___aomod@sign^0,c
  2099   0013FE  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2100   001400  EF06  F00A         	goto	u800
  2101   001404  EF04  F00A         	goto	u801
  2102   001408                     u801:
  2103   001408  EF18  F00A         	goto	l1739
  2104   00140C                     u800:
  2105   00140C  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2106   00140E  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2107   001410  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2108   001412  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2109   001414  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2110   001416  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2111   001418  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2112   00141A  6C03               	negf	___aomod@dividend^0,c
  2113   00141C  0E00               	movlw	0
  2114   00141E  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2115   001420  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2116   001422  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2117   001424  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2118   001426  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2119   001428  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2120   00142A  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2121   00142C  0E01               	movlw	1
  2122   00142E  6E14               	movwf	___aomod@sign^0,c
  2123   001430                     l1739:
  2124   001430  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2125   001432  EF1F  F00A         	goto	u810
  2126   001436  EF1D  F00A         	goto	u811
  2127   00143A                     u811:
  2128   00143A  EF2F  F00A         	goto	l1743
  2129   00143E                     u810:
  2130   00143E  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2131   001440  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2132   001442  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2133   001444  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2134   001446  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2135   001448  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2136   00144A  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2137   00144C  6C0B               	negf	___aomod@divisor^0,c
  2138   00144E  0E00               	movlw	0
  2139   001450  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2140   001452  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2141   001454  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2142   001456  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2143   001458  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2144   00145A  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2145   00145C  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2146   00145E                     l1743:
  2147   00145E  500B               	movf	___aomod@divisor^0,w,c
  2148   001460  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2149   001462  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2150   001464  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2151   001466  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2152   001468  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2153   00146A  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2154   00146C  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2155   00146E  B4D8               	btfsc	status,2,c
  2156   001470  EF3C  F00A         	goto	u821
  2157   001474  EF3E  F00A         	goto	u820
  2158   001478                     u821:
  2159   001478  EF86  F00A         	goto	l1759
  2160   00147C                     u820:
  2161   00147C  0E01               	movlw	1
  2162   00147E  6E13               	movwf	___aomod@counter^0,c
  2163   001480  EF4C  F00A         	goto	l1749
  2164   001484                     l1747:
  2165   001484  90D8               	bcf	status,0,c
  2166   001486  360B               	rlcf	___aomod@divisor^0,f,c
  2167   001488  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2168   00148A  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2169   00148C  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2170   00148E  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2171   001490  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2172   001492  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2173   001494  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2174   001496  2A13               	incf	___aomod@counter^0,f,c
  2175   001498                     l1749:
  2176   001498  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2177   00149A  EF51  F00A         	goto	u831
  2178   00149E  EF53  F00A         	goto	u830
  2179   0014A2                     u831:
  2180   0014A2  EF42  F00A         	goto	l1747
  2181   0014A6                     u830:
  2182   0014A6                     l1751:
  2183   0014A6  500B               	movf	___aomod@divisor^0,w,c
  2184   0014A8  5C03               	subwf	___aomod@dividend^0,w,c
  2185   0014AA  500C               	movf	(___aomod@divisor+1)^0,w,c
  2186   0014AC  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2187   0014AE  500D               	movf	(___aomod@divisor+2)^0,w,c
  2188   0014B0  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2189   0014B2  500E               	movf	(___aomod@divisor+3)^0,w,c
  2190   0014B4  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2191   0014B6  500F               	movf	(___aomod@divisor+4)^0,w,c
  2192   0014B8  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2193   0014BA  5010               	movf	(___aomod@divisor+5)^0,w,c
  2194   0014BC  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2195   0014BE  5011               	movf	(___aomod@divisor+6)^0,w,c
  2196   0014C0  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2197   0014C2  5012               	movf	(___aomod@divisor+7)^0,w,c
  2198   0014C4  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2199   0014C6  A0D8               	btfss	status,0,c
  2200   0014C8  EF68  F00A         	goto	u841
  2201   0014CC  EF6A  F00A         	goto	u840
  2202   0014D0                     u841:
  2203   0014D0  EF7A  F00A         	goto	l1755
  2204   0014D4                     u840:
  2205   0014D4  500B               	movf	___aomod@divisor^0,w,c
  2206   0014D6  5E03               	subwf	___aomod@dividend^0,f,c
  2207   0014D8  500C               	movf	(___aomod@divisor+1)^0,w,c
  2208   0014DA  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2209   0014DC  500D               	movf	(___aomod@divisor+2)^0,w,c
  2210   0014DE  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2211   0014E0  500E               	movf	(___aomod@divisor+3)^0,w,c
  2212   0014E2  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2213   0014E4  500F               	movf	(___aomod@divisor+4)^0,w,c
  2214   0014E6  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2215   0014E8  5010               	movf	(___aomod@divisor+5)^0,w,c
  2216   0014EA  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2217   0014EC  5011               	movf	(___aomod@divisor+6)^0,w,c
  2218   0014EE  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2219   0014F0  5012               	movf	(___aomod@divisor+7)^0,w,c
  2220   0014F2  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2221   0014F4                     l1755:
  2222   0014F4  90D8               	bcf	status,0,c
  2223   0014F6  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2224   0014F8  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2225   0014FA  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2226   0014FC  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2227   0014FE  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2228   001500  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2229   001502  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2230   001504  320B               	rrcf	___aomod@divisor^0,f,c
  2231   001506  2E13               	decfsz	___aomod@counter^0,f,c
  2232   001508  EF53  F00A         	goto	l1751
  2233   00150C                     l1759:
  2234   00150C  5014               	movf	___aomod@sign^0,w,c
  2235   00150E  B4D8               	btfsc	status,2,c
  2236   001510  EF8C  F00A         	goto	u851
  2237   001514  EF8E  F00A         	goto	u850
  2238   001518                     u851:
  2239   001518  EF9E  F00A         	goto	l1763
  2240   00151C                     u850:
  2241   00151C  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2242   00151E  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2243   001520  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2244   001522  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2245   001524  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2246   001526  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2247   001528  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2248   00152A  6C03               	negf	___aomod@dividend^0,c
  2249   00152C  0E00               	movlw	0
  2250   00152E  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2251   001530  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2252   001532  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2253   001534  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2254   001536  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2255   001538  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2256   00153A  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2257   00153C                     l1763:
  2258   00153C  C003  F003         	movff	___aomod@dividend,?___aomod
  2259   001540  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2260   001544  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2261   001548  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2262   00154C  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2263   001550  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2264   001554  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2265   001558  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2266   00155C  0012               	return		;funcret
  2267   00155E                     __end_of___aomod:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function ___aodiv *****************
  2271 ;; Defined at:
  2272 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  dividend        8    2[COMRAM] long long 
  2275 ;;  divisor         8   10[COMRAM] long long 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  quotient        8   20[COMRAM] long long 
  2278 ;;  sign            1   19[COMRAM] unsigned char 
  2279 ;;  counter         1   18[COMRAM] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  8    2[COMRAM] long long 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2289 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;Total ram usage:       26 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 2
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_dtoa
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text11
  2304   001272                     __ptext11:
  2305                           	callstack 0
  2306   001272                     ___aodiv:
  2307                           	callstack 24
  2308   001272  0E00               	movlw	0
  2309   001274  6E14               	movwf	___aodiv@sign^0,c
  2310   001276  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2311   001278  EF42  F009         	goto	u730
  2312   00127C  EF40  F009         	goto	u731
  2313   001280                     u731:
  2314   001280  EF54  F009         	goto	l1695
  2315   001284                     u730:
  2316   001284  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2317   001286  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2318   001288  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2319   00128A  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2320   00128C  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2321   00128E  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2322   001290  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2323   001292  6C0B               	negf	___aodiv@divisor^0,c
  2324   001294  0E00               	movlw	0
  2325   001296  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2326   001298  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2327   00129A  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2328   00129C  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2329   00129E  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2330   0012A0  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2331   0012A2  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2332   0012A4  0E01               	movlw	1
  2333   0012A6  6E14               	movwf	___aodiv@sign^0,c
  2334   0012A8                     l1695:
  2335   0012A8  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2336   0012AA  EF5B  F009         	goto	u740
  2337   0012AE  EF59  F009         	goto	u741
  2338   0012B2                     u741:
  2339   0012B2  EF6D  F009         	goto	l1701
  2340   0012B6                     u740:
  2341   0012B6  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2342   0012B8  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2343   0012BA  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2344   0012BC  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2345   0012BE  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2346   0012C0  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2347   0012C2  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2348   0012C4  6C03               	negf	___aodiv@dividend^0,c
  2349   0012C6  0E00               	movlw	0
  2350   0012C8  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2351   0012CA  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2352   0012CC  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2353   0012CE  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2354   0012D0  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2355   0012D2  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2356   0012D4  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2357   0012D6  0E01               	movlw	1
  2358   0012D8  1A14               	xorwf	___aodiv@sign^0,f,c
  2359   0012DA                     l1701:
  2360   0012DA  EE20  F015         	lfsr	2,___aodiv@quotient
  2361   0012DE  0E07               	movlw	7
  2362   0012E0                     u751:
  2363   0012E0  6ADE               	clrf	postinc2,c
  2364   0012E2  06E8               	decf	wreg,f,c
  2365   0012E4  E2FD               	bc	u751
  2366   0012E6  500B               	movf	___aodiv@divisor^0,w,c
  2367   0012E8  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2368   0012EA  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2369   0012EC  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2370   0012EE  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2371   0012F0  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2372   0012F2  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2373   0012F4  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2374   0012F6  B4D8               	btfsc	status,2,c
  2375   0012F8  EF80  F009         	goto	u761
  2376   0012FC  EF82  F009         	goto	u760
  2377   001300                     u761:
  2378   001300  EFD4  F009         	goto	l1723
  2379   001304                     u760:
  2380   001304  0E01               	movlw	1
  2381   001306  6E13               	movwf	___aodiv@counter^0,c
  2382   001308  EF90  F009         	goto	l1709
  2383   00130C                     l1707:
  2384   00130C  90D8               	bcf	status,0,c
  2385   00130E  360B               	rlcf	___aodiv@divisor^0,f,c
  2386   001310  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2387   001312  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2388   001314  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2389   001316  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2390   001318  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2391   00131A  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2392   00131C  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2393   00131E  2A13               	incf	___aodiv@counter^0,f,c
  2394   001320                     l1709:
  2395   001320  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2396   001322  EF95  F009         	goto	u771
  2397   001326  EF97  F009         	goto	u770
  2398   00132A                     u771:
  2399   00132A  EF86  F009         	goto	l1707
  2400   00132E                     u770:
  2401   00132E                     l1711:
  2402   00132E  90D8               	bcf	status,0,c
  2403   001330  3615               	rlcf	___aodiv@quotient^0,f,c
  2404   001332  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2405   001334  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2406   001336  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2407   001338  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2408   00133A  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2409   00133C  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2410   00133E  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2411   001340  500B               	movf	___aodiv@divisor^0,w,c
  2412   001342  5C03               	subwf	___aodiv@dividend^0,w,c
  2413   001344  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2414   001346  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2415   001348  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2416   00134A  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2417   00134C  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2418   00134E  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2419   001350  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2420   001352  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2421   001354  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2422   001356  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2423   001358  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2424   00135A  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2425   00135C  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2426   00135E  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2427   001360  A0D8               	btfss	status,0,c
  2428   001362  EFB5  F009         	goto	u781
  2429   001366  EFB7  F009         	goto	u780
  2430   00136A                     u781:
  2431   00136A  EFC8  F009         	goto	l1719
  2432   00136E                     u780:
  2433   00136E  500B               	movf	___aodiv@divisor^0,w,c
  2434   001370  5E03               	subwf	___aodiv@dividend^0,f,c
  2435   001372  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2436   001374  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2437   001376  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2438   001378  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2439   00137A  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2440   00137C  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2441   00137E  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2442   001380  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2443   001382  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2444   001384  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2445   001386  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2446   001388  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2447   00138A  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2448   00138C  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2449   00138E  8015               	bsf	___aodiv@quotient^0,0,c
  2450   001390                     l1719:
  2451   001390  90D8               	bcf	status,0,c
  2452   001392  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2453   001394  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2454   001396  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2455   001398  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2456   00139A  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2457   00139C  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2458   00139E  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2459   0013A0  320B               	rrcf	___aodiv@divisor^0,f,c
  2460   0013A2  2E13               	decfsz	___aodiv@counter^0,f,c
  2461   0013A4  EF97  F009         	goto	l1711
  2462   0013A8                     l1723:
  2463   0013A8  5014               	movf	___aodiv@sign^0,w,c
  2464   0013AA  B4D8               	btfsc	status,2,c
  2465   0013AC  EFDA  F009         	goto	u791
  2466   0013B0  EFDC  F009         	goto	u790
  2467   0013B4                     u791:
  2468   0013B4  EFEC  F009         	goto	l1727
  2469   0013B8                     u790:
  2470   0013B8  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2471   0013BA  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2472   0013BC  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2473   0013BE  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2474   0013C0  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2475   0013C2  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2476   0013C4  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2477   0013C6  6C15               	negf	___aodiv@quotient^0,c
  2478   0013C8  0E00               	movlw	0
  2479   0013CA  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2480   0013CC  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2481   0013CE  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2482   0013D0  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2483   0013D2  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2484   0013D4  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2485   0013D6  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2486   0013D8                     l1727:
  2487   0013D8  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2488   0013DC  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2489   0013E0  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2490   0013E4  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2491   0013E8  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2492   0013EC  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2493   0013F0  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2494   0013F4  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2495   0013F8  0012               	return		;funcret
  2496   0013FA                     __end_of___aodiv:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _sendStringSerial4 *****************
  2500 ;; Defined at:
  2501 ;;		line 37 in file "../serial.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  string          2    3[COMRAM] PTR unsigned char 
  2504 ;;		 -> main@readout_752(50), main@readout(50), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 3
  2523 ;; This function calls:
  2524 ;;		_sendCharSerial4
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text12
  2531   001C88                     __ptext12:
  2532                           	callstack 0
  2533   001C88                     _sendStringSerial4:
  2534                           	callstack 27
  2535   001C88                     
  2536                           ;../serial.c: 40:     while (*string != 0)
  2537   001C88  EF4F  F00E         	goto	l2073
  2538   001C8C                     l2069:
  2539                           
  2540                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  2541   001C8C  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2542   001C90  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2543   001C94  50DF               	movf	indf2,w,c
  2544   001C96  ECCB  F00E         	call	_sendCharSerial4
  2545   001C9A  4A04               	infsnz	sendStringSerial4@string^0,f,c
  2546   001C9C  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  2547   001C9E                     l2073:
  2548                           
  2549                           ;../serial.c: 40:     while (*string != 0)
  2550   001C9E  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2551   001CA2  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2552   001CA6  50DF               	movf	indf2,w,c
  2553   001CA8  A4D8               	btfss	status,2,c
  2554   001CAA  EF59  F00E         	goto	u1121
  2555   001CAE  EF5B  F00E         	goto	u1120
  2556   001CB2                     u1121:
  2557   001CB2  EF46  F00E         	goto	l2069
  2558   001CB6                     u1120:
  2559   001CB6  0012               	return		;funcret
  2560   001CB8                     __end_of_sendStringSerial4:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _sendCharSerial4 *****************
  2564 ;; Defined at:
  2565 ;;		line 30 in file "../serial.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  charToSend      1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  charToSend      1    2[COMRAM] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 2
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_sendStringSerial4
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text13
  2594   001D96                     __ptext13:
  2595                           	callstack 0
  2596   001D96                     _sendCharSerial4:
  2597                           	callstack 27
  2598                           
  2599                           ;incstack = 0
  2600                           ;sendCharSerial4@charToSend stored from wreg
  2601   001D96  6E03               	movwf	sendCharSerial4@charToSend^0,c
  2602   001D98                     l335:
  2603   001D98  010E               	movlb	14	; () banked
  2604   001D9A  A537               	btfss	55,2,b	;volatile
  2605   001D9C  EFD2  F00E         	goto	u1061
  2606   001DA0  EFD4  F00E         	goto	u1060
  2607   001DA4                     u1061:
  2608   001DA4  EFCC  F00E         	goto	l335
  2609   001DA8                     u1060:
  2610   001DA8                     
  2611                           ; BSR set to: 14
  2612                           ;../serial.c: 32:     TX4REG = charToSend;
  2613   001DA8  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2614   001DAC                     
  2615                           ; BSR set to: 14
  2616   001DAC  0012               	return		;funcret
  2617   001DAE                     __end_of_sendCharSerial4:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _initUSART4 *****************
  2621 ;; Defined at:
  2622 ;;		line 5 in file "../serial.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 2
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text14
  2651   001D78                     __ptext14:
  2652                           	callstack 0
  2653   001D78                     _initUSART4:
  2654                           	callstack 28
  2655   001D78                     
  2656                           ;../serial.c: 9:     RC0PPS = 0x12;
  2657   001D78  0E12               	movlw	18
  2658   001D7A  010E               	movlb	14	; () banked
  2659   001D7C  6F62               	movwf	98,b	;volatile
  2660                           
  2661                           ;../serial.c: 10:     RX4PPS = 0x11;
  2662   001D7E  0E11               	movlw	17
  2663   001D80  6F15               	movwf	21,b	;volatile
  2664   001D82                     
  2665                           ; BSR set to: 14
  2666                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2667   001D82  97E9               	bcf	233,3,b	;volatile
  2668   001D84                     
  2669                           ; BSR set to: 14
  2670                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  2671   001D84  95E8               	bcf	232,2,b	;volatile
  2672                           
  2673                           ;../serial.c: 14:     SP4BRGL = 103;
  2674   001D86  0E67               	movlw	103
  2675   001D88  6FE5               	movwf	229,b	;volatile
  2676                           
  2677                           ;../serial.c: 15:     SP4BRGH = 0;
  2678   001D8A  0E00               	movlw	0
  2679   001D8C  6FE6               	movwf	230,b	;volatile
  2680   001D8E                     
  2681                           ; BSR set to: 14
  2682                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  2683   001D8E  89E7               	bsf	231,4,b	;volatile
  2684   001D90                     
  2685                           ; BSR set to: 14
  2686                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  2687   001D90  8BE8               	bsf	232,5,b	;volatile
  2688   001D92                     
  2689                           ; BSR set to: 14
  2690                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  2691   001D92  8FE7               	bsf	231,7,b	;volatile
  2692   001D94                     
  2693                           ; BSR set to: 14
  2694   001D94  0012               	return		;funcret
  2695   001D96                     __end_of_initUSART4:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _initDCmotorsPWM *****************
  2699 ;; Defined at:
  2700 ;;		line 5 in file "../dc_motor.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  PWMperiod       2    2[COMRAM] int 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, prodl, prodh
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 2
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text15
  2729   001B7C                     __ptext15:
  2730                           	callstack 0
  2731   001B7C                     _initDCmotorsPWM:
  2732                           	callstack 28
  2733   001B7C                     
  2734                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2735   001B7C  9485               	bcf	133,2,c	;volatile
  2736                           
  2737                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2738   001B7E  9885               	bcf	133,4,c	;volatile
  2739                           
  2740                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2741   001B80  9E83               	bcf	131,7,c	;volatile
  2742                           
  2743                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2744   001B82  9C87               	bcf	135,6,c	;volatile
  2745                           
  2746                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2747   001B84  947D               	bcf	125,2,c	;volatile
  2748                           
  2749                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2750   001B86  987D               	bcf	125,4,c	;volatile
  2751                           
  2752                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2753   001B88  9E7B               	bcf	123,7,c	;volatile
  2754                           
  2755                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2756   001B8A  9C7F               	bcf	127,6,c	;volatile
  2757   001B8C                     
  2758                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  2759   001B8C  50BD               	movf	189,w,c	;volatile
  2760   001B8E  0B8F               	andlw	-113
  2761   001B90  0930               	iorlw	48
  2762   001B92  6EBD               	movwf	189,c	;volatile
  2763                           
  2764                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2765   001B94  0EE0               	movlw	-32
  2766   001B96  16BE               	andwf	190,f,c	;volatile
  2767                           
  2768                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2769   001B98  50BF               	movf	191,w,c	;volatile
  2770   001B9A  0BF0               	andlw	-16
  2771   001B9C  0901               	iorlw	1
  2772   001B9E  6EBF               	movwf	191,c	;volatile
  2773   001BA0                     
  2774                           ;../dc_motor.c: 23:     T2PR=PWMperiod * 2000000 - 1;
  2775   001BA0  5003               	movf	initDCmotorsPWM@PWMperiod^0,w,c
  2776   001BA2  0D80               	mullw	-128
  2777   001BA4  04F3               	decf	243,w,c
  2778   001BA6  6EBC               	movwf	188,c	;volatile
  2779   001BA8                     
  2780                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  2781   001BA8  8EBD               	bsf	189,7,c	;volatile
  2782   001BAA                     
  2783                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  2784   001BAA  0E0A               	movlw	10
  2785   001BAC  010E               	movlb	14	; () banked
  2786   001BAE  6F74               	movwf	116,b	;volatile
  2787   001BB0                     
  2788                           ; BSR set to: 14
  2789                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  2790   001BB0  0E0B               	movlw	11
  2791   001BB2  6F69               	movwf	105,b	;volatile
  2792   001BB4                     
  2793                           ; BSR set to: 14
  2794                           ;../dc_motor.c: 29:     PWM6DCH=0;
  2795   001BB4  0E00               	movlw	0
  2796   001BB6  6EA3               	movwf	163,c	;volatile
  2797   001BB8                     
  2798                           ; BSR set to: 14
  2799                           ;../dc_motor.c: 30:     PWM7DCH=0;
  2800   001BB8  0E00               	movlw	0
  2801   001BBA  6EA0               	movwf	160,c	;volatile
  2802   001BBC                     
  2803                           ; BSR set to: 14
  2804                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  2805   001BBC  8EA4               	bsf	164,7,c	;volatile
  2806   001BBE                     
  2807                           ; BSR set to: 14
  2808                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  2809   001BBE  8EA1               	bsf	161,7,c	;volatile
  2810   001BC0                     
  2811                           ; BSR set to: 14
  2812   001BC0  0012               	return		;funcret
  2813   001BC2                     __end_of_initDCmotorsPWM:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _color_read *****************
  2817 ;; Defined at:
  2818 ;;		line 99 in file "../color.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  rgb             2   13[COMRAM] PTR struct RGB_val
  2821 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;Total ram usage:        4 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 5
  2840 ;; This function calls:
  2841 ;;		_color_read_Blue
  2842 ;;		_color_read_Green
  2843 ;;		_color_read_Luminosity
  2844 ;;		_color_read_Red
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text16
  2851   001834                     __ptext16:
  2852                           	callstack 0
  2853   001834                     _color_read:
  2854                           	callstack 25
  2855   001834                     
  2856                           ;../color.c: 99: void color_read(struct RGB_val *rgb);../color.c: 100: {;../color.c: 101
      +                          :     rgb->L = color_read_Luminosity();
  2857   001834  ECFB  F00C         	call	_color_read_Luminosity	;wreg free
  2858   001838  C00E  FFD9         	movff	color_read@rgb,fsr2l
  2859   00183C  C00F  FFDA         	movff	color_read@rgb+1,fsr2h
  2860   001840  C007  FFDE         	movff	?_color_read_Luminosity,postinc2
  2861   001844  C008  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  2862   001848                     
  2863                           ;../color.c: 102:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2864   001848  0E09               	movlw	9
  2865   00184A  6E11               	movwf	(??_color_read+1)^0,c
  2866   00184C  0E1E               	movlw	30
  2867   00184E  6E10               	movwf	??_color_read^0,c
  2868   001850  0EE4               	movlw	228
  2869   001852                     u1387:
  2870   001852  2EE8               	decfsz	wreg,f,c
  2871   001854  D7FE               	bra	u1387
  2872   001856  2E10               	decfsz	??_color_read^0,f,c
  2873   001858  D7FC               	bra	u1387
  2874   00185A  2E11               	decfsz	(??_color_read+1)^0,f,c
  2875   00185C  D7FA               	bra	u1387
  2876   00185E  D000               	nop2	
  2877   001860                     
  2878                           ;../color.c: 103:     rgb->R = color_read_Red();
  2879   001860  ECD3  F00C         	call	_color_read_Red	;wreg free
  2880   001864  EE20 F002          	lfsr	2,2
  2881   001868  500E               	movf	color_read@rgb^0,w,c
  2882   00186A  26D9               	addwf	fsr2l,f,c
  2883   00186C  500F               	movf	(color_read@rgb+1)^0,w,c
  2884   00186E  22DA               	addwfc	fsr2h,f,c
  2885   001870  C007  FFDE         	movff	?_color_read_Red,postinc2
  2886   001874  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  2887                           
  2888                           ;../color.c: 104:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2889   001878  0E09               	movlw	9
  2890   00187A  6E11               	movwf	(??_color_read+1)^0,c
  2891   00187C  0E1E               	movlw	30
  2892   00187E  6E10               	movwf	??_color_read^0,c
  2893   001880  0EE4               	movlw	228
  2894   001882                     u1397:
  2895   001882  2EE8               	decfsz	wreg,f,c
  2896   001884  D7FE               	bra	u1397
  2897   001886  2E10               	decfsz	??_color_read^0,f,c
  2898   001888  D7FC               	bra	u1397
  2899   00188A  2E11               	decfsz	(??_color_read+1)^0,f,c
  2900   00188C  D7FA               	bra	u1397
  2901   00188E  D000               	nop2	
  2902   001890                     
  2903                           ;../color.c: 105:     rgb->G = color_read_Green();
  2904   001890  EC23  F00D         	call	_color_read_Green	;wreg free
  2905   001894  EE20 F004          	lfsr	2,4
  2906   001898  500E               	movf	color_read@rgb^0,w,c
  2907   00189A  26D9               	addwf	fsr2l,f,c
  2908   00189C  500F               	movf	(color_read@rgb+1)^0,w,c
  2909   00189E  22DA               	addwfc	fsr2h,f,c
  2910   0018A0  C007  FFDE         	movff	?_color_read_Green,postinc2
  2911   0018A4  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  2912   0018A8                     
  2913                           ;../color.c: 106:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2914   0018A8  0E09               	movlw	9
  2915   0018AA  6E11               	movwf	(??_color_read+1)^0,c
  2916   0018AC  0E1E               	movlw	30
  2917   0018AE  6E10               	movwf	??_color_read^0,c
  2918   0018B0  0EE4               	movlw	228
  2919   0018B2                     u1407:
  2920   0018B2  2EE8               	decfsz	wreg,f,c
  2921   0018B4  D7FE               	bra	u1407
  2922   0018B6  2E10               	decfsz	??_color_read^0,f,c
  2923   0018B8  D7FC               	bra	u1407
  2924   0018BA  2E11               	decfsz	(??_color_read+1)^0,f,c
  2925   0018BC  D7FA               	bra	u1407
  2926   0018BE  D000               	nop2	
  2927                           
  2928                           ;../color.c: 107:     rgb->B = color_read_Blue();
  2929   0018C0  EC4B  F00D         	call	_color_read_Blue	;wreg free
  2930   0018C4  EE20 F006          	lfsr	2,6
  2931   0018C8  500E               	movf	color_read@rgb^0,w,c
  2932   0018CA  26D9               	addwf	fsr2l,f,c
  2933   0018CC  500F               	movf	(color_read@rgb+1)^0,w,c
  2934   0018CE  22DA               	addwfc	fsr2h,f,c
  2935   0018D0  C007  FFDE         	movff	?_color_read_Blue,postinc2
  2936   0018D4  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  2937   0018D8  0012               	return		;funcret
  2938   0018DA                     __end_of_color_read:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function _color_read_Red *****************
  2942 ;; Defined at:
  2943 ;;		line 57 in file "../color.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  tmp             2   11[COMRAM] unsigned int 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2    6[COMRAM] unsigned int 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2960 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;Total ram usage:        7 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; Hardware stack levels required when called: 4
  2964 ;; This function calls:
  2965 ;;		_I2C_2_Master_Read
  2966 ;;		_I2C_2_Master_RepStart
  2967 ;;		_I2C_2_Master_Start
  2968 ;;		_I2C_2_Master_Stop
  2969 ;;		_I2C_2_Master_Write
  2970 ;; This function is called by:
  2971 ;;		_color_read
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text17
  2976   0019A6                     __ptext17:
  2977                           	callstack 0
  2978   0019A6                     _color_read_Red:
  2979                           	callstack 25
  2980   0019A6                     
  2981                           ;../color.c: 59:  unsigned int tmp;;../color.c: 60:  I2C_2_Master_Start();
  2982   0019A6  ECED  F00E         	call	_I2C_2_Master_Start	;wreg free
  2983                           
  2984                           ;../color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  2985   0019AA  0E52               	movlw	82
  2986   0019AC  ECD7  F00E         	call	_I2C_2_Master_Write
  2987                           
  2988                           ;../color.c: 62:  I2C_2_Master_Write(0xA0 | 0x16);
  2989   0019B0  0EB6               	movlw	182
  2990   0019B2  ECD7  F00E         	call	_I2C_2_Master_Write
  2991                           
  2992                           ;../color.c: 63:  I2C_2_Master_RepStart();
  2993   0019B6  ECE3  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2994                           
  2995                           ;../color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  2996   0019BA  0E53               	movlw	83
  2997   0019BC  ECD7  F00E         	call	_I2C_2_Master_Write
  2998                           
  2999                           ;../color.c: 65:  tmp=I2C_2_Master_Read(1);
  3000   0019C0  0E01               	movlw	1
  3001   0019C2  EC03  F00E         	call	_I2C_2_Master_Read
  3002   0019C6  6E09               	movwf	??_color_read_Red^0,c
  3003   0019C8  5009               	movf	??_color_read_Red^0,w,c
  3004   0019CA  6E0C               	movwf	color_read_Red@tmp^0,c
  3005   0019CC  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  3006                           
  3007                           ;../color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3008   0019CE  0E00               	movlw	0
  3009   0019D0  EC03  F00E         	call	_I2C_2_Master_Read
  3010   0019D4  6E09               	movwf	??_color_read_Red^0,c
  3011   0019D6  5009               	movf	??_color_read_Red^0,w,c
  3012   0019D8  6E0B               	movwf	(??_color_read_Red+2)^0,c
  3013   0019DA  6A0A               	clrf	(??_color_read_Red+1)^0,c
  3014   0019DC  500C               	movf	color_read_Red@tmp^0,w,c
  3015   0019DE  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  3016   0019E0  6E0C               	movwf	color_read_Red@tmp^0,c
  3017   0019E2  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  3018   0019E4  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  3019   0019E6  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  3020                           
  3021                           ;../color.c: 67:  I2C_2_Master_Stop();
  3022   0019E8  ECE8  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3023   0019EC                     
  3024                           ;../color.c: 68:  return tmp;
  3025   0019EC  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  3026   0019F0  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3027   0019F4  0012               	return		;funcret
  3028   0019F6                     __end_of_color_read_Red:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _color_read_Luminosity *****************
  3032 ;; Defined at:
  3033 ;;		line 43 in file "../color.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  tmp             2   11[COMRAM] unsigned int 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2    6[COMRAM] unsigned int 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3049 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3050 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3051 ;;Total ram usage:        7 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 4
  3054 ;; This function calls:
  3055 ;;		_I2C_2_Master_Read
  3056 ;;		_I2C_2_Master_RepStart
  3057 ;;		_I2C_2_Master_Start
  3058 ;;		_I2C_2_Master_Stop
  3059 ;;		_I2C_2_Master_Write
  3060 ;; This function is called by:
  3061 ;;		_color_read
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text18
  3066   0019F6                     __ptext18:
  3067                           	callstack 0
  3068   0019F6                     _color_read_Luminosity:
  3069                           	callstack 25
  3070   0019F6                     
  3071                           ;../color.c: 45:  unsigned int tmp;;../color.c: 46:  I2C_2_Master_Start();
  3072   0019F6  ECED  F00E         	call	_I2C_2_Master_Start	;wreg free
  3073                           
  3074                           ;../color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3075   0019FA  0E52               	movlw	82
  3076   0019FC  ECD7  F00E         	call	_I2C_2_Master_Write
  3077                           
  3078                           ;../color.c: 48:  I2C_2_Master_Write(0xA0 | 0x14);
  3079   001A00  0EB4               	movlw	180
  3080   001A02  ECD7  F00E         	call	_I2C_2_Master_Write
  3081                           
  3082                           ;../color.c: 49:  I2C_2_Master_RepStart();
  3083   001A06  ECE3  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3084                           
  3085                           ;../color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3086   001A0A  0E53               	movlw	83
  3087   001A0C  ECD7  F00E         	call	_I2C_2_Master_Write
  3088                           
  3089                           ;../color.c: 51:  tmp=I2C_2_Master_Read(1);
  3090   001A10  0E01               	movlw	1
  3091   001A12  EC03  F00E         	call	_I2C_2_Master_Read
  3092   001A16  6E09               	movwf	??_color_read_Luminosity^0,c
  3093   001A18  5009               	movf	??_color_read_Luminosity^0,w,c
  3094   001A1A  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3095   001A1C  6A0D               	clrf	(color_read_Luminosity@tmp+1)^0,c
  3096                           
  3097                           ;../color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3098   001A1E  0E00               	movlw	0
  3099   001A20  EC03  F00E         	call	_I2C_2_Master_Read
  3100   001A24  6E09               	movwf	??_color_read_Luminosity^0,c
  3101   001A26  5009               	movf	??_color_read_Luminosity^0,w,c
  3102   001A28  6E0B               	movwf	(??_color_read_Luminosity+2)^0,c
  3103   001A2A  6A0A               	clrf	(??_color_read_Luminosity+1)^0,c
  3104   001A2C  500C               	movf	color_read_Luminosity@tmp^0,w,c
  3105   001A2E  100A               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  3106   001A30  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3107   001A32  500D               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  3108   001A34  100B               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  3109   001A36  6E0D               	movwf	(color_read_Luminosity@tmp+1)^0,c
  3110                           
  3111                           ;../color.c: 53:  I2C_2_Master_Stop();
  3112   001A38  ECE8  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3113   001A3C                     
  3114                           ;../color.c: 54:  return tmp;
  3115   001A3C  C00C  F007         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  3116   001A40  C00D  F008         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  3117   001A44  0012               	return		;funcret
  3118   001A46                     __end_of_color_read_Luminosity:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _color_read_Green *****************
  3122 ;; Defined at:
  3123 ;;		line 71 in file "../color.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  tmp             2   11[COMRAM] unsigned int 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  2    6[COMRAM] unsigned int 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;Total ram usage:        7 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 4
  3144 ;; This function calls:
  3145 ;;		_I2C_2_Master_Read
  3146 ;;		_I2C_2_Master_RepStart
  3147 ;;		_I2C_2_Master_Start
  3148 ;;		_I2C_2_Master_Stop
  3149 ;;		_I2C_2_Master_Write
  3150 ;; This function is called by:
  3151 ;;		_color_read
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text19
  3156   001A46                     __ptext19:
  3157                           	callstack 0
  3158   001A46                     _color_read_Green:
  3159                           	callstack 25
  3160   001A46                     
  3161                           ;../color.c: 73:  unsigned int tmp;;../color.c: 74:  I2C_2_Master_Start();
  3162   001A46  ECED  F00E         	call	_I2C_2_Master_Start	;wreg free
  3163                           
  3164                           ;../color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3165   001A4A  0E52               	movlw	82
  3166   001A4C  ECD7  F00E         	call	_I2C_2_Master_Write
  3167                           
  3168                           ;../color.c: 76:  I2C_2_Master_Write(0xA0 | 0x18);
  3169   001A50  0EB8               	movlw	184
  3170   001A52  ECD7  F00E         	call	_I2C_2_Master_Write
  3171                           
  3172                           ;../color.c: 77:  I2C_2_Master_RepStart();
  3173   001A56  ECE3  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3174                           
  3175                           ;../color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3176   001A5A  0E53               	movlw	83
  3177   001A5C  ECD7  F00E         	call	_I2C_2_Master_Write
  3178                           
  3179                           ;../color.c: 79:  tmp=I2C_2_Master_Read(1);
  3180   001A60  0E01               	movlw	1
  3181   001A62  EC03  F00E         	call	_I2C_2_Master_Read
  3182   001A66  6E09               	movwf	??_color_read_Green^0,c
  3183   001A68  5009               	movf	??_color_read_Green^0,w,c
  3184   001A6A  6E0C               	movwf	color_read_Green@tmp^0,c
  3185   001A6C  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  3186                           
  3187                           ;../color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3188   001A6E  0E00               	movlw	0
  3189   001A70  EC03  F00E         	call	_I2C_2_Master_Read
  3190   001A74  6E09               	movwf	??_color_read_Green^0,c
  3191   001A76  5009               	movf	??_color_read_Green^0,w,c
  3192   001A78  6E0B               	movwf	(??_color_read_Green+2)^0,c
  3193   001A7A  6A0A               	clrf	(??_color_read_Green+1)^0,c
  3194   001A7C  500C               	movf	color_read_Green@tmp^0,w,c
  3195   001A7E  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  3196   001A80  6E0C               	movwf	color_read_Green@tmp^0,c
  3197   001A82  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  3198   001A84  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  3199   001A86  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  3200                           
  3201                           ;../color.c: 81:  I2C_2_Master_Stop();
  3202   001A88  ECE8  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3203   001A8C                     
  3204                           ;../color.c: 82:  return tmp;
  3205   001A8C  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  3206   001A90  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3207   001A94  0012               	return		;funcret
  3208   001A96                     __end_of_color_read_Green:
  3209                           	callstack 0
  3210                           
  3211 ;; *************** function _color_read_Blue *****************
  3212 ;; Defined at:
  3213 ;;		line 85 in file "../color.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  tmp             2   11[COMRAM] unsigned int 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  2    6[COMRAM] unsigned int 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;Total ram usage:        7 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; Hardware stack levels required when called: 4
  3234 ;; This function calls:
  3235 ;;		_I2C_2_Master_Read
  3236 ;;		_I2C_2_Master_RepStart
  3237 ;;		_I2C_2_Master_Start
  3238 ;;		_I2C_2_Master_Stop
  3239 ;;		_I2C_2_Master_Write
  3240 ;; This function is called by:
  3241 ;;		_color_read
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text20
  3246   001A96                     __ptext20:
  3247                           	callstack 0
  3248   001A96                     _color_read_Blue:
  3249                           	callstack 25
  3250   001A96                     
  3251                           ;../color.c: 87:  unsigned int tmp;;../color.c: 88:  I2C_2_Master_Start();
  3252   001A96  ECED  F00E         	call	_I2C_2_Master_Start	;wreg free
  3253                           
  3254                           ;../color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  3255   001A9A  0E52               	movlw	82
  3256   001A9C  ECD7  F00E         	call	_I2C_2_Master_Write
  3257                           
  3258                           ;../color.c: 90:  I2C_2_Master_Write(0xA0 | 0x1A);
  3259   001AA0  0EBA               	movlw	186
  3260   001AA2  ECD7  F00E         	call	_I2C_2_Master_Write
  3261                           
  3262                           ;../color.c: 91:  I2C_2_Master_RepStart();
  3263   001AA6  ECE3  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3264                           
  3265                           ;../color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  3266   001AAA  0E53               	movlw	83
  3267   001AAC  ECD7  F00E         	call	_I2C_2_Master_Write
  3268                           
  3269                           ;../color.c: 93:  tmp=I2C_2_Master_Read(1);
  3270   001AB0  0E01               	movlw	1
  3271   001AB2  EC03  F00E         	call	_I2C_2_Master_Read
  3272   001AB6  6E09               	movwf	??_color_read_Blue^0,c
  3273   001AB8  5009               	movf	??_color_read_Blue^0,w,c
  3274   001ABA  6E0C               	movwf	color_read_Blue@tmp^0,c
  3275   001ABC  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  3276                           
  3277                           ;../color.c: 94:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3278   001ABE  0E00               	movlw	0
  3279   001AC0  EC03  F00E         	call	_I2C_2_Master_Read
  3280   001AC4  6E09               	movwf	??_color_read_Blue^0,c
  3281   001AC6  5009               	movf	??_color_read_Blue^0,w,c
  3282   001AC8  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  3283   001ACA  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  3284   001ACC  500C               	movf	color_read_Blue@tmp^0,w,c
  3285   001ACE  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  3286   001AD0  6E0C               	movwf	color_read_Blue@tmp^0,c
  3287   001AD2  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  3288   001AD4  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  3289   001AD6  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  3290                           
  3291                           ;../color.c: 95:  I2C_2_Master_Stop();
  3292   001AD8  ECE8  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3293   001ADC                     
  3294                           ;../color.c: 96:  return tmp;
  3295   001ADC  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  3296   001AE0  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3297   001AE4  0012               	return		;funcret
  3298   001AE6                     __end_of_color_read_Blue:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function _I2C_2_Master_RepStart *****************
  3302 ;; Defined at:
  3303 ;;		line 33 in file "../i2c.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 3
  3324 ;; This function calls:
  3325 ;;		_I2C_2_Master_Idle
  3326 ;; This function is called by:
  3327 ;;		_color_read_Luminosity
  3328 ;;		_color_read_Red
  3329 ;;		_color_read_Green
  3330 ;;		_color_read_Blue
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text21
  3335   001DC6                     __ptext21:
  3336                           	callstack 0
  3337   001DC6                     _I2C_2_Master_RepStart:
  3338                           	callstack 25
  3339   001DC6                     
  3340                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3341   001DC6  EC88  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3342   001DCA                     
  3343                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3344   001DCA  010E               	movlb	14	; () banked
  3345   001DCC  83DA               	bsf	218,1,b	;volatile
  3346   001DCE                     
  3347                           ; BSR set to: 14
  3348   001DCE  0012               	return		;funcret
  3349   001DD0                     __end_of_I2C_2_Master_RepStart:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _I2C_2_Master_Read *****************
  3353 ;; Defined at:
  3354 ;;		line 51 in file "../i2c.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  ack             1    wreg     unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  ack             1    4[COMRAM] unsigned char 
  3359 ;;  tmp             1    5[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      unsigned char 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;Total ram usage:        3 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 3
  3376 ;; This function calls:
  3377 ;;		_I2C_2_Master_Idle
  3378 ;; This function is called by:
  3379 ;;		_color_read_Luminosity
  3380 ;;		_color_read_Red
  3381 ;;		_color_read_Green
  3382 ;;		_color_read_Blue
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text22
  3387   001C06                     __ptext22:
  3388                           	callstack 0
  3389   001C06                     _I2C_2_Master_Read:
  3390                           	callstack 25
  3391                           
  3392                           ; BSR set to: 14
  3393                           ;incstack = 0
  3394                           ;I2C_2_Master_Read@ack stored from wreg
  3395   001C06  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  3396   001C08                     
  3397                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  3398   001C08  EC88  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3399   001C0C                     
  3400                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3401   001C0C  010E               	movlb	14	; () banked
  3402   001C0E  87DA               	bsf	218,3,b	;volatile
  3403                           
  3404                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  3405   001C10  EC88  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3406   001C14                     
  3407                           ;../i2c.c: 57:   tmp = SSP2BUF;
  3408   001C14  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3409                           
  3410                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  3411   001C18  EC88  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3412   001C1C                     
  3413                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3414   001C1C  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  3415   001C1E  B4D8               	btfsc	status,2,c
  3416   001C20  EF14  F00E         	goto	u1011
  3417   001C24  EF18  F00E         	goto	u1010
  3418   001C28                     u1011:
  3419   001C28  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3420   001C2A  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  3421   001C2C  EF19  F00E         	goto	u1028
  3422   001C30                     u1010:
  3423   001C30  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3424   001C32                     u1028:
  3425   001C32  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  3426   001C34  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  3427   001C36  010E               	movlb	14	; () banked
  3428   001C38  51DA               	movf	218,w,b	;volatile
  3429   001C3A  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3430   001C3C  0BDF               	andlw	-33
  3431   001C3E  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3432   001C40  6FDA               	movwf	218,b	;volatile
  3433   001C42                     
  3434                           ; BSR set to: 14
  3435                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3436   001C42  89DA               	bsf	218,4,b	;volatile
  3437   001C44                     
  3438                           ; BSR set to: 14
  3439                           ;../i2c.c: 61:   return tmp;
  3440   001C44  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  3441   001C46                     
  3442                           ; BSR set to: 14
  3443   001C46  0012               	return		;funcret
  3444   001C48                     __end_of_I2C_2_Master_Read:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _color_processor_easy *****************
  3448 ;; Defined at:
  3449 ;;		line 122 in file "../color.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  3452 ;;		 -> main@RGB_recorded(8), 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  b               2   10[COMRAM] unsigned int 
  3455 ;;  a               2    8[COMRAM] unsigned int 
  3456 ;;  c               2    6[COMRAM] unsigned int 
  3457 ;;  color           2    4[COMRAM] unsigned int 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  2    2[COMRAM] unsigned int 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3471 ;;Total ram usage:       10 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 2
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text23
  3482   001776                     __ptext23:
  3483                           	callstack 0
  3484   001776                     _color_processor_easy:
  3485                           	callstack 28
  3486   001776                     
  3487                           ;../color.c: 122: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 123
      +                          : {;../color.c: 124:     unsigned int a = rgb->R;
  3488   001776  EE20 F002          	lfsr	2,2
  3489   00177A  5003               	movf	color_processor_easy@rgb^0,w,c
  3490   00177C  26D9               	addwf	fsr2l,f,c
  3491   00177E  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3492   001780  22DA               	addwfc	fsr2h,f,c
  3493   001782  CFDE F009          	movff	postinc2,color_processor_easy@a
  3494   001786  CFDD F00A          	movff	postdec2,color_processor_easy@a+1
  3495                           
  3496                           ;../color.c: 125:     unsigned int b = rgb->G;
  3497   00178A  EE20 F004          	lfsr	2,4
  3498   00178E  5003               	movf	color_processor_easy@rgb^0,w,c
  3499   001790  26D9               	addwf	fsr2l,f,c
  3500   001792  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3501   001794  22DA               	addwfc	fsr2h,f,c
  3502   001796  CFDE F00B          	movff	postinc2,color_processor_easy@b
  3503   00179A  CFDD F00C          	movff	postdec2,color_processor_easy@b+1
  3504                           
  3505                           ;../color.c: 126:     unsigned int c = rgb->B;
  3506   00179E  EE20 F006          	lfsr	2,6
  3507   0017A2  5003               	movf	color_processor_easy@rgb^0,w,c
  3508   0017A4  26D9               	addwf	fsr2l,f,c
  3509   0017A6  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3510   0017A8  22DA               	addwfc	fsr2h,f,c
  3511   0017AA  CFDE F007          	movff	postinc2,color_processor_easy@c
  3512   0017AE  CFDD F008          	movff	postdec2,color_processor_easy@c+1
  3513   0017B2                     
  3514                           ;../color.c: 127:     unsigned int color;;../color.c: 128:     if (a>=b & a>=c){color=1;
      +                          }
  3515   0017B2  500B               	movf	color_processor_easy@b^0,w,c
  3516   0017B4  5C09               	subwf	color_processor_easy@a^0,w,c
  3517   0017B6  500C               	movf	(color_processor_easy@b+1)^0,w,c
  3518   0017B8  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3519   0017BA  A0D8               	btfss	status,0,c
  3520   0017BC  EFE2  F00B         	goto	u1081
  3521   0017C0  EFE4  F00B         	goto	u1080
  3522   0017C4                     u1081:
  3523   0017C4  EFF5  F00B         	goto	l2001
  3524   0017C8                     u1080:
  3525   0017C8  5007               	movf	color_processor_easy@c^0,w,c
  3526   0017CA  5C09               	subwf	color_processor_easy@a^0,w,c
  3527   0017CC  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3528   0017CE  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3529   0017D0  A0D8               	btfss	status,0,c
  3530   0017D2  EFED  F00B         	goto	u1091
  3531   0017D6  EFEF  F00B         	goto	u1090
  3532   0017DA                     u1091:
  3533   0017DA  EFF5  F00B         	goto	l2001
  3534   0017DE                     u1090:
  3535   0017DE  0E00               	movlw	0
  3536   0017E0  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3537   0017E2  0E01               	movlw	1
  3538   0017E4  6E05               	movwf	color_processor_easy@color^0,c
  3539   0017E6  EF15  F00C         	goto	l2009
  3540   0017EA                     l2001:
  3541   0017EA  5009               	movf	color_processor_easy@a^0,w,c
  3542   0017EC  5C0B               	subwf	color_processor_easy@b^0,w,c
  3543   0017EE  500A               	movf	(color_processor_easy@a+1)^0,w,c
  3544   0017F0  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3545   0017F2  A0D8               	btfss	status,0,c
  3546   0017F4  EFFE  F00B         	goto	u1101
  3547   0017F8  EF00  F00C         	goto	u1100
  3548   0017FC                     u1101:
  3549   0017FC  EF11  F00C         	goto	l2007
  3550   001800                     u1100:
  3551   001800  5007               	movf	color_processor_easy@c^0,w,c
  3552   001802  5C0B               	subwf	color_processor_easy@b^0,w,c
  3553   001804  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3554   001806  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3555   001808  A0D8               	btfss	status,0,c
  3556   00180A  EF09  F00C         	goto	u1111
  3557   00180E  EF0B  F00C         	goto	u1110
  3558   001812                     u1111:
  3559   001812  EF11  F00C         	goto	l2007
  3560   001816                     u1110:
  3561   001816  0E00               	movlw	0
  3562   001818  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3563   00181A  0E02               	movlw	2
  3564   00181C  6E05               	movwf	color_processor_easy@color^0,c
  3565   00181E  EF15  F00C         	goto	l2009
  3566   001822                     l2007:
  3567   001822  0E00               	movlw	0
  3568   001824  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3569   001826  0E03               	movlw	3
  3570   001828  6E05               	movwf	color_processor_easy@color^0,c
  3571   00182A                     l2009:
  3572                           
  3573                           ;../color.c: 131:     return color;
  3574   00182A  C005  F003         	movff	color_processor_easy@color,?_color_processor_easy
  3575   00182E  C006  F004         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  3576   001832  0012               	return		;funcret
  3577   001834                     __end_of_color_processor_easy:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _color_click_init *****************
  3581 ;; Defined at:
  3582 ;;		line 5 in file "../color.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;Total ram usage:        1 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 5
  3603 ;; This function calls:
  3604 ;;		_I2C_2_Master_Init
  3605 ;;		_color_writetoaddr
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text24
  3612   001B34                     __ptext24:
  3613                           	callstack 0
  3614   001B34                     _color_click_init:
  3615                           	callstack 25
  3616   001B34                     
  3617                           ;../color.c: 8:     I2C_2_Master_Init();
  3618   001B34  EC73  F00E         	call	_I2C_2_Master_Init	;wreg free
  3619   001B38                     
  3620                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  3621   001B38  0E01               	movlw	1
  3622   001B3A  6E05               	movwf	color_writetoaddr@value^0,c
  3623   001B3C  0E00               	movlw	0
  3624   001B3E  EC9C  F00E         	call	_color_writetoaddr
  3625   001B42                     
  3626                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3627   001B42  0E3F               	movlw	63
  3628   001B44  6E07               	movwf	??_color_click_init^0,c
  3629   001B46  0E55               	movlw	85
  3630   001B48                     u1417:
  3631   001B48  2EE8               	decfsz	wreg,f,c
  3632   001B4A  D7FE               	bra	u1417
  3633   001B4C  2E07               	decfsz	??_color_click_init^0,f,c
  3634   001B4E  D7FC               	bra	u1417
  3635   001B50  F000               	nop	
  3636   001B52                     
  3637                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  3638   001B52  0E03               	movlw	3
  3639   001B54  6E05               	movwf	color_writetoaddr@value^0,c
  3640   001B56  0E00               	movlw	0
  3641   001B58  EC9C  F00E         	call	_color_writetoaddr
  3642   001B5C                     
  3643                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3644   001B5C  0ED5               	movlw	213
  3645   001B5E  6E05               	movwf	color_writetoaddr@value^0,c
  3646   001B60  0E01               	movlw	1
  3647   001B62  EC9C  F00E         	call	_color_writetoaddr
  3648   001B66                     
  3649                           ;../color.c: 21:     TRISHbits.TRISH1 = 0;
  3650   001B66  9288               	bcf	136,1,c	;volatile
  3651   001B68                     
  3652                           ;../color.c: 22:     TRISDbits.TRISD3 = 0;
  3653   001B68  9684               	bcf	132,3,c	;volatile
  3654   001B6A                     
  3655                           ;../color.c: 23:     TRISDbits.TRISD4 = 0;
  3656   001B6A  9884               	bcf	132,4,c	;volatile
  3657   001B6C                     
  3658                           ;../color.c: 24:     TRISHbits.TRISH0 = 0;
  3659   001B6C  9088               	bcf	136,0,c	;volatile
  3660   001B6E                     
  3661                           ;../color.c: 25:     TRISFbits.TRISF0 = 0;
  3662   001B6E  9086               	bcf	134,0,c	;volatile
  3663   001B70                     
  3664                           ;../color.c: 27:     LATHbits.LATH1 = 1;
  3665   001B70  8280               	bsf	128,1,c	;volatile
  3666   001B72                     
  3667                           ;../color.c: 28:     LATDbits.LATD3 = 1;
  3668   001B72  867C               	bsf	124,3,c	;volatile
  3669   001B74                     
  3670                           ;../color.c: 29:     LATDbits.LATD4 = 1;
  3671   001B74  887C               	bsf	124,4,c	;volatile
  3672   001B76                     
  3673                           ;../color.c: 30:     LATHbits.LATH0 = 1;
  3674   001B76  8080               	bsf	128,0,c	;volatile
  3675   001B78                     
  3676                           ;../color.c: 31:     LATFbits.LATF0 = 1;
  3677   001B78  807E               	bsf	126,0,c	;volatile
  3678   001B7A  0012               	return		;funcret
  3679   001B7C                     __end_of_color_click_init:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function _color_writetoaddr *****************
  3683 ;; Defined at:
  3684 ;;		line 34 in file "../color.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  address         1    wreg     unsigned char 
  3687 ;;  value           1    4[COMRAM] unsigned char 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  address         1    5[COMRAM] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3699 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3703 ;;Total ram usage:        2 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 4
  3706 ;; This function calls:
  3707 ;;		_I2C_2_Master_Start
  3708 ;;		_I2C_2_Master_Stop
  3709 ;;		_I2C_2_Master_Write
  3710 ;; This function is called by:
  3711 ;;		_color_click_init
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text25
  3716   001D38                     __ptext25:
  3717                           	callstack 0
  3718   001D38                     _color_writetoaddr:
  3719                           	callstack 25
  3720                           
  3721                           ;incstack = 0
  3722                           ;color_writetoaddr@address stored from wreg
  3723   001D38  6E06               	movwf	color_writetoaddr@address^0,c
  3724   001D3A                     
  3725                           ;../color.c: 34: void color_writetoaddr(char address, char value);../color.c: 35: {;../c
      +                          olor.c: 36:     I2C_2_Master_Start();
  3726   001D3A  ECED  F00E         	call	_I2C_2_Master_Start	;wreg free
  3727                           
  3728                           ;../color.c: 37:     I2C_2_Master_Write(0x52 | 0x00);
  3729   001D3E  0E52               	movlw	82
  3730   001D40  ECD7  F00E         	call	_I2C_2_Master_Write
  3731                           
  3732                           ;../color.c: 38:     I2C_2_Master_Write(0x80 | address);
  3733   001D44  5006               	movf	color_writetoaddr@address^0,w,c
  3734   001D46  0980               	iorlw	128
  3735   001D48  ECD7  F00E         	call	_I2C_2_Master_Write
  3736                           
  3737                           ;../color.c: 39:     I2C_2_Master_Write(value);
  3738   001D4C  5005               	movf	color_writetoaddr@value^0,w,c
  3739   001D4E  ECD7  F00E         	call	_I2C_2_Master_Write
  3740                           
  3741                           ;../color.c: 40:     I2C_2_Master_Stop();
  3742   001D52  ECE8  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3743   001D56  0012               	return		;funcret
  3744   001D58                     __end_of_color_writetoaddr:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _I2C_2_Master_Write *****************
  3748 ;; Defined at:
  3749 ;;		line 45 in file "../i2c.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  data_byte       1    wreg     unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  data_byte       1    3[COMRAM] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;Total ram usage:        1 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 3
  3770 ;; This function calls:
  3771 ;;		_I2C_2_Master_Idle
  3772 ;; This function is called by:
  3773 ;;		_color_writetoaddr
  3774 ;;		_color_read_Luminosity
  3775 ;;		_color_read_Red
  3776 ;;		_color_read_Green
  3777 ;;		_color_read_Blue
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text26
  3782   001DAE                     __ptext26:
  3783                           	callstack 0
  3784   001DAE                     _I2C_2_Master_Write:
  3785                           	callstack 25
  3786                           
  3787                           ;incstack = 0
  3788                           ;I2C_2_Master_Write@data_byte stored from wreg
  3789   001DAE  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  3790   001DB0                     
  3791                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  3792   001DB0  EC88  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3793   001DB4                     
  3794                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  3795   001DB4  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3796   001DB8  0012               	return		;funcret
  3797   001DBA                     __end_of_I2C_2_Master_Write:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _I2C_2_Master_Stop *****************
  3801 ;; Defined at:
  3802 ;;		line 39 in file "../i2c.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;Total ram usage:        0 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 3
  3823 ;; This function calls:
  3824 ;;		_I2C_2_Master_Idle
  3825 ;; This function is called by:
  3826 ;;		_color_writetoaddr
  3827 ;;		_color_read_Luminosity
  3828 ;;		_color_read_Red
  3829 ;;		_color_read_Green
  3830 ;;		_color_read_Blue
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text27
  3835   001DD0                     __ptext27:
  3836                           	callstack 0
  3837   001DD0                     _I2C_2_Master_Stop:
  3838                           	callstack 25
  3839   001DD0                     
  3840                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  3841   001DD0  EC88  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3842   001DD4                     
  3843                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3844   001DD4  010E               	movlb	14	; () banked
  3845   001DD6  85DA               	bsf	218,2,b	;volatile
  3846   001DD8                     
  3847                           ; BSR set to: 14
  3848   001DD8  0012               	return		;funcret
  3849   001DDA                     __end_of_I2C_2_Master_Stop:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _I2C_2_Master_Start *****************
  3853 ;; Defined at:
  3854 ;;		line 27 in file "../i2c.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 3
  3875 ;; This function calls:
  3876 ;;		_I2C_2_Master_Idle
  3877 ;; This function is called by:
  3878 ;;		_color_writetoaddr
  3879 ;;		_color_read_Luminosity
  3880 ;;		_color_read_Red
  3881 ;;		_color_read_Green
  3882 ;;		_color_read_Blue
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text28
  3887   001DDA                     __ptext28:
  3888                           	callstack 0
  3889   001DDA                     _I2C_2_Master_Start:
  3890                           	callstack 25
  3891   001DDA                     
  3892                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  3893   001DDA  EC88  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3894   001DDE                     
  3895                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3896   001DDE  010E               	movlb	14	; () banked
  3897   001DE0  81DA               	bsf	218,0,b	;volatile
  3898   001DE2                     
  3899                           ; BSR set to: 14
  3900   001DE2  0012               	return		;funcret
  3901   001DE4                     __end_of_I2C_2_Master_Start:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _I2C_2_Master_Idle *****************
  3905 ;; Defined at:
  3906 ;;		line 22 in file "../i2c.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;Total ram usage:        1 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 2
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_I2C_2_Master_Start
  3931 ;;		_I2C_2_Master_RepStart
  3932 ;;		_I2C_2_Master_Stop
  3933 ;;		_I2C_2_Master_Write
  3934 ;;		_I2C_2_Master_Read
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text29
  3939   001D10                     __ptext29:
  3940                           	callstack 0
  3941   001D10                     _I2C_2_Master_Idle:
  3942                           	callstack 25
  3943   001D10                     l93:
  3944   001D10  010E               	movlb	14	; () banked
  3945   001D12  B5D8               	btfsc	216,2,b	;volatile
  3946   001D14  EF8E  F00E         	goto	u891
  3947   001D18  EF90  F00E         	goto	u890
  3948   001D1C                     u891:
  3949   001D1C  EF88  F00E         	goto	l93
  3950   001D20                     u890:
  3951   001D20                     
  3952                           ; BSR set to: 14
  3953   001D20  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3954   001D24  0E1F               	movlw	31
  3955   001D26  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  3956   001D28  A4D8               	btfss	status,2,c
  3957   001D2A  EF99  F00E         	goto	u901
  3958   001D2E  EF9B  F00E         	goto	u900
  3959   001D32                     u901:
  3960   001D32  EF88  F00E         	goto	l93
  3961   001D36                     u900:
  3962   001D36                     
  3963                           ; BSR set to: 14
  3964   001D36  0012               	return		;funcret
  3965   001D38                     __end_of_I2C_2_Master_Idle:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _I2C_2_Master_Init *****************
  3969 ;; Defined at:
  3970 ;;		line 4 in file "../i2c.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 2
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_color_click_init
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text30
  4000   001CE6                     __ptext30:
  4001                           	callstack 0
  4002   001CE6                     _I2C_2_Master_Init:
  4003                           	callstack 27
  4004   001CE6                     
  4005                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4006   001CE6  010E               	movlb	14	; () banked
  4007   001CE8  51D9               	movf	217,w,b	;volatile
  4008   001CEA  0BF0               	andlw	-16
  4009   001CEC  0908               	iorlw	8
  4010   001CEE  6FD9               	movwf	217,b	;volatile
  4011   001CF0                     
  4012                           ; BSR set to: 14
  4013                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4014   001CF0  8BD9               	bsf	217,5,b	;volatile
  4015                           
  4016                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4017   001CF2  0E9F               	movlw	159
  4018   001CF4  6FD6               	movwf	214,b	;volatile
  4019   001CF6                     
  4020                           ; BSR set to: 14
  4021                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4022   001CF6  8A84               	bsf	132,5,c	;volatile
  4023   001CF8                     
  4024                           ; BSR set to: 14
  4025                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4026   001CF8  8C84               	bsf	132,6,c	;volatile
  4027   001CFA                     
  4028                           ; BSR set to: 14
  4029                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4030   001CFA  9BA7               	bcf	167,5,b	;volatile
  4031   001CFC                     
  4032                           ; BSR set to: 14
  4033                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4034   001CFC  9DA7               	bcf	167,6,b	;volatile
  4035                           
  4036                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  4037   001CFE  0E1D               	movlw	29
  4038   001D00  6F1D               	movwf	29,b	;volatile
  4039                           
  4040                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  4041   001D02  0E1E               	movlw	30
  4042   001D04  6F1C               	movwf	28,b	;volatile
  4043                           
  4044                           ;../i2c.c: 18:   RD5PPS=0x1C;
  4045   001D06  0E1C               	movlw	28
  4046   001D08  6F6F               	movwf	111,b	;volatile
  4047                           
  4048                           ;../i2c.c: 19:   RD6PPS=0x1B;
  4049   001D0A  0E1B               	movlw	27
  4050   001D0C  6F70               	movwf	112,b	;volatile
  4051   001D0E                     
  4052                           ; BSR set to: 14
  4053   001D0E  0012               	return		;funcret
  4054   001D10                     __end_of_I2C_2_Master_Init:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function _Timer0_init *****************
  4058 ;; Defined at:
  4059 ;;		line 40 in file "../rc_servo.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;Total ram usage:        0 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; Hardware stack levels required when called: 2
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text31
  4088   001D58                     __ptext31:
  4089                           	callstack 0
  4090   001D58                     _Timer0_init:
  4091                           	callstack 28
  4092   001D58                     
  4093                           ;../rc_servo.c: 42:     T0CON1bits.T0CS=0b010;
  4094   001D58  50D6               	movf	214,w,c	;volatile
  4095   001D5A  0B1F               	andlw	-225
  4096   001D5C  0940               	iorlw	64
  4097   001D5E  6ED6               	movwf	214,c	;volatile
  4098   001D60                     
  4099                           ;../rc_servo.c: 43:     T0CON1bits.T0ASYNC=1;
  4100   001D60  88D6               	bsf	214,4,c	;volatile
  4101                           
  4102                           ;../rc_servo.c: 44:     T0CON1bits.T0CKPS=0b0111;
  4103   001D62  50D6               	movf	214,w,c	;volatile
  4104   001D64  0BF0               	andlw	-16
  4105   001D66  0907               	iorlw	7
  4106   001D68  6ED6               	movwf	214,c	;volatile
  4107   001D6A                     
  4108                           ;../rc_servo.c: 46:     T0CON0bits.T016BIT=1;
  4109   001D6A  88D5               	bsf	213,4,c	;volatile
  4110                           
  4111                           ;../rc_servo.c: 49:     TMR0H=(65535-2500)>>8;
  4112   001D6C  0EF6               	movlw	246
  4113   001D6E  6ED4               	movwf	212,c	;volatile
  4114                           
  4115                           ;../rc_servo.c: 50:     TMR0L=(unsigned char)(65535-2500);
  4116   001D70  0E3B               	movlw	59
  4117   001D72  6ED3               	movwf	211,c	;volatile
  4118   001D74                     
  4119                           ;../rc_servo.c: 51:     T0CON0bits.T0EN=1;
  4120   001D74  8ED5               	bsf	213,7,c	;volatile
  4121   001D76  0012               	return		;funcret
  4122   001D78                     __end_of_Timer0_init:
  4123                           	callstack 0
  4124                           
  4125 ;; *************** function _Interrupts_init *****************
  4126 ;; Defined at:
  4127 ;;		line 8 in file "../rc_servo.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;		None
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		None
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;Total ram usage:        0 bytes
  4146 ;; Hardware stack levels used: 1
  4147 ;; Hardware stack levels required when called: 2
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_main
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text32
  4156   001DBA                     __ptext32:
  4157                           	callstack 0
  4158   001DBA                     _Interrupts_init:
  4159                           	callstack 28
  4160   001DBA                     
  4161                           ;../rc_servo.c: 10:     PIE0bits.TMR0IE=1;
  4162   001DBA  010E               	movlb	14	; () banked
  4163   001DBC  8B29               	bsf	41,5,b	;volatile
  4164                           
  4165                           ;../rc_servo.c: 11:     INTCONbits.PEIE=1;
  4166   001DBE  8CF2               	bsf	242,6,c	;volatile
  4167                           
  4168                           ;../rc_servo.c: 12:     INTCONbits.IPEN=0;
  4169   001DC0  9AF2               	bcf	242,5,c	;volatile
  4170                           
  4171                           ;../rc_servo.c: 13:     INTCONbits.GIE=1;
  4172   001DC2  8EF2               	bsf	242,7,c	;volatile
  4173   001DC4                     
  4174                           ; BSR set to: 14
  4175   001DC4  0012               	return		;funcret
  4176   001DC6                     __end_of_Interrupts_init:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function _HighISR *****************
  4180 ;; Defined at:
  4181 ;;		line 20 in file "../rc_servo.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 1
  4202 ;; This function calls:
  4203 ;;		_write16bitTMR0val
  4204 ;; This function is called by:
  4205 ;;		Interrupt level 2
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	intcode
  4210   000008                     __pintcode:
  4211                           	callstack 0
  4212   000008                     _HighISR:
  4213                           	callstack 21
  4214                           
  4215                           ; BSR set to: 14
  4216                           ;incstack = 0
  4217   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4218   00000A                     
  4219                           ;../rc_servo.c: 22:     if (PIR0bits.TMR0IF)
  4220   00000A  010E               	movlb	14	; () banked
  4221   00000C  AB33               	btfss	51,5,b	;volatile
  4222   00000E  EF0B  F000         	goto	i2u124_41
  4223   000012  EF0D  F000         	goto	i2u124_40
  4224   000016                     i2u124_41:
  4225   000016  EF26  F000         	goto	i2l2131
  4226   00001A                     i2u124_40:
  4227   00001A                     
  4228                           ; BSR set to: 14
  4229                           ;../rc_servo.c: 23:     {;../rc_servo.c: 24:         if(LATEbits.LATE2){
  4230   00001A  A47D               	btfss	125,2,c	;volatile
  4231   00001C  EF12  F000         	goto	i2u125_41
  4232   000020  EF14  F000         	goto	i2u125_40
  4233   000024                     i2u125_41:
  4234   000024  EF1E  F000         	goto	i2l2127
  4235   000028                     i2u125_40:
  4236   000028                     
  4237                           ; BSR set to: 14
  4238                           ;../rc_servo.c: 25:             write16bitTMR0val(65535-off_period);
  4239   000028  0100               	movlb	0	; () banked
  4240   00002A  1DF5               	comf	_off_period& (0+255),w,b
  4241   00002C  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4242   00002E  1DF6               	comf	(_off_period+1)& (0+255),w,b
  4243   000030  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4244   000032  ECF2  F00E         	call	_write16bitTMR0val	;wreg free
  4245   000036                     
  4246                           ;../rc_servo.c: 26:             LATEbits.LATE2=0;
  4247   000036  947D               	bcf	125,2,c	;volatile
  4248                           
  4249                           ;../rc_servo.c: 28:         } else {
  4250   000038  EF26  F000         	goto	i2l2131
  4251   00003C                     i2l2127:
  4252                           
  4253                           ; BSR set to: 14
  4254                           ;../rc_servo.c: 29:             write16bitTMR0val(65535-on_period);
  4255   00003C  0100               	movlb	0	; () banked
  4256   00003E  1DF7               	comf	_on_period& (0+255),w,b
  4257   000040  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4258   000042  1DF8               	comf	(_on_period+1)& (0+255),w,b
  4259   000044  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4260   000046  ECF2  F00E         	call	_write16bitTMR0val	;wreg free
  4261   00004A                     
  4262                           ;../rc_servo.c: 30:             LATEbits.LATE2=1;
  4263   00004A  847D               	bsf	125,2,c	;volatile
  4264   00004C                     i2l2131:
  4265                           
  4266                           ;../rc_servo.c: 34:     PIR0bits.TMR0IF=0;
  4267   00004C  010E               	movlb	14	; () banked
  4268   00004E  9B33               	bcf	51,5,b	;volatile
  4269   000050                     
  4270                           ; BSR set to: 14
  4271   000050  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4272   000052  0011               	retfie		f
  4273   000054                     __end_of_HighISR:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function _write16bitTMR0val *****************
  4277 ;; Defined at:
  4278 ;;		line 58 in file "../rc_servo.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  tmp             2    0[COMRAM] unsigned int 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4296 ;;Total ram usage:        2 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_HighISR
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text34
  4306   001DE4                     __ptext34:
  4307                           	callstack 0
  4308   001DE4                     _write16bitTMR0val:
  4309                           	callstack 21
  4310   001DE4                     
  4311                           ;../rc_servo.c: 58: void write16bitTMR0val(unsigned int tmp);../rc_servo.c: 59: {;../rc_
      +                          servo.c: 60:     TMR0H=tmp>>8;
  4312   001DE4  5002               	movf	(write16bitTMR0val@tmp+1)^0,w,c
  4313   001DE6  6ED4               	movwf	212,c	;volatile
  4314   001DE8                     
  4315                           ;../rc_servo.c: 61:     TMR0L=tmp;
  4316   001DE8  C001  FFD3         	movff	write16bitTMR0val@tmp,4051	;volatile
  4317   001DEC  0012               	return		;funcret
  4318   001DEE                     __end_of_write16bitTMR0val:
  4319                           	callstack 0
  4320                           
  4321                           	psect	rparam
  4322   000000                     
  4323                           	psect	temp
  4324   00005D                     btemp:
  4325                           	callstack 0
  4326   00005D                     	ds	1
  4327   000000                     int$flags	set	btemp
  4328   000000                     wtemp8	set	btemp+1
  4329   000000                     ttemp5	set	btemp+1
  4330   000000                     ttemp6	set	btemp+4
  4331   000000                     ttemp7	set	btemp+8
  4332                           
  4333                           	psect	idloc
  4334                           
  4335                           ;Config register IDLOC0 @ 0x200000
  4336                           ;	unspecified, using default values
  4337   200000                     	org	2097152
  4338   200000  0FFF               	dw	4095
  4339                           
  4340                           ;Config register IDLOC1 @ 0x200002
  4341                           ;	unspecified, using default values
  4342   200002                     	org	2097154
  4343   200002  0FFF               	dw	4095
  4344                           
  4345                           ;Config register IDLOC2 @ 0x200004
  4346                           ;	unspecified, using default values
  4347   200004                     	org	2097156
  4348   200004  0FFF               	dw	4095
  4349                           
  4350                           ;Config register IDLOC3 @ 0x200006
  4351                           ;	unspecified, using default values
  4352   200006                     	org	2097158
  4353   200006  0FFF               	dw	4095
  4354                           
  4355                           ;Config register IDLOC4 @ 0x200008
  4356                           ;	unspecified, using default values
  4357   200008                     	org	2097160
  4358   200008  0FFF               	dw	4095
  4359                           
  4360                           ;Config register IDLOC5 @ 0x20000A
  4361                           ;	unspecified, using default values
  4362   20000A                     	org	2097162
  4363   20000A  0FFF               	dw	4095
  4364                           
  4365                           ;Config register IDLOC6 @ 0x20000C
  4366                           ;	unspecified, using default values
  4367   20000C                     	org	2097164
  4368   20000C  0FFF               	dw	4095
  4369                           
  4370                           ;Config register IDLOC7 @ 0x20000E
  4371                           ;	unspecified, using default values
  4372   20000E                     	org	2097166
  4373   20000E  0FFF               	dw	4095
  4374                           
  4375                           	psect	config
  4376                           
  4377                           ;Config register CONFIG1L @ 0x300000
  4378                           ;	External Oscillator mode Selection bits
  4379                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4380                           ;	Power-up default value for COSC bits
  4381                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4382   300000                     	org	3145728
  4383   300000  AA                 	db	170
  4384                           
  4385                           ;Config register CONFIG1H @ 0x300001
  4386                           ;	unspecified, using default values
  4387                           ;	Clock Out Enable bit
  4388                           ;	CLKOUTEN = 0x1, unprogrammed default
  4389                           ;	Clock Switch Enable bit
  4390                           ;	CSWEN = 0x1, unprogrammed default
  4391                           ;	Fail-Safe Clock Monitor Enable bit
  4392                           ;	FCMEN = 0x1, unprogrammed default
  4393   300001                     	org	3145729
  4394   300001  FF                 	db	255
  4395                           
  4396                           ;Config register CONFIG2L @ 0x300002
  4397                           ;	unspecified, using default values
  4398                           ;	Master Clear Enable bit
  4399                           ;	MCLRE = 0x1, unprogrammed default
  4400                           ;	Power-up Timer Enable bit
  4401                           ;	PWRTE = 0x1, unprogrammed default
  4402                           ;	Low-power BOR enable bit
  4403                           ;	LPBOREN = 0x1, unprogrammed default
  4404                           ;	Brown-out Reset Enable bits
  4405                           ;	BOREN = 0x3, unprogrammed default
  4406   300002                     	org	3145730
  4407   300002  FF                 	db	255
  4408                           
  4409                           ;Config register CONFIG2H @ 0x300003
  4410                           ;	unspecified, using default values
  4411                           ;	Brown Out Reset Voltage selection bits
  4412                           ;	BORV = 0x3, unprogrammed default
  4413                           ;	ZCD Disable bit
  4414                           ;	ZCD = 0x1, unprogrammed default
  4415                           ;	PPSLOCK bit One-Way Set Enable bit
  4416                           ;	PPS1WAY = 0x1, unprogrammed default
  4417                           ;	Stack Full/Underflow Reset Enable bit
  4418                           ;	STVREN = 0x1, unprogrammed default
  4419                           ;	Debugger Enable bit
  4420                           ;	DEBUG = 0x1, unprogrammed default
  4421                           ;	Extended Instruction Set Enable bit
  4422                           ;	XINST = 0x1, unprogrammed default
  4423   300003                     	org	3145731
  4424   300003  FF                 	db	255
  4425                           
  4426                           ;Config register CONFIG3L @ 0x300004
  4427                           ;	WDT Period Select bits
  4428                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4429                           ;	WDT operating mode
  4430                           ;	WDTE = OFF, WDT Disabled
  4431   300004                     	org	3145732
  4432   300004  9F                 	db	159
  4433                           
  4434                           ;Config register CONFIG3H @ 0x300005
  4435                           ;	unspecified, using default values
  4436                           ;	WDT Window Select bits
  4437                           ;	WDTCWS = 0x7, unprogrammed default
  4438                           ;	WDT input clock selector
  4439                           ;	WDTCCS = 0x7, unprogrammed default
  4440   300005                     	org	3145733
  4441   300005  FF                 	db	255
  4442                           
  4443                           ;Config register CONFIG4L @ 0x300006
  4444                           ;	unspecified, using default values
  4445                           ;	Write Protection Block 0
  4446                           ;	WRT0 = 0x1, unprogrammed default
  4447                           ;	Write Protection Block 1
  4448                           ;	WRT1 = 0x1, unprogrammed default
  4449                           ;	Write Protection Block 2
  4450                           ;	WRT2 = 0x1, unprogrammed default
  4451                           ;	Write Protection Block 3
  4452                           ;	WRT3 = 0x1, unprogrammed default
  4453                           ;	Write Protection Block 3
  4454                           ;	WRT4 = 0x1, unprogrammed default
  4455                           ;	Write Protection Block 3
  4456                           ;	WRT5 = 0x1, unprogrammed default
  4457                           ;	Write Protection Block 3
  4458                           ;	WRT6 = 0x1, unprogrammed default
  4459                           ;	Write Protection Block 3
  4460                           ;	WRT7 = 0x1, unprogrammed default
  4461   300006                     	org	3145734
  4462   300006  FF                 	db	255
  4463                           
  4464                           ;Config register CONFIG4H @ 0x300007
  4465                           ;	unspecified, using default values
  4466                           ;	Configuration Register Write Protection bit
  4467                           ;	WRTC = 0x1, unprogrammed default
  4468                           ;	Boot Block Write Protection bit
  4469                           ;	WRTB = 0x1, unprogrammed default
  4470                           ;	Data EEPROM Write Protection bit
  4471                           ;	WRTD = 0x1, unprogrammed default
  4472                           ;	Scanner Enable bit
  4473                           ;	SCANE = 0x1, unprogrammed default
  4474                           ;	Low Voltage Programming Enable bit
  4475                           ;	LVP = 0x1, unprogrammed default
  4476   300007                     	org	3145735
  4477   300007  FF                 	db	255
  4478                           
  4479                           ;Config register CONFIG5L @ 0x300008
  4480                           ;	unspecified, using default values
  4481                           ;	UserNVM Program Memory Code Protection bit
  4482                           ;	CP = 0x1, unprogrammed default
  4483                           ;	DataNVM Memory Code Protection bit
  4484                           ;	CPD = 0x1, unprogrammed default
  4485   300008                     	org	3145736
  4486   300008  FF                 	db	255
  4487                           
  4488                           ;Config register CONFIG5H @ 0x300009
  4489                           ;	unspecified, using default values
  4490   300009                     	org	3145737
  4491   300009  FF                 	db	255
  4492                           
  4493                           ;Config register CONFIG6L @ 0x30000A
  4494                           ;	unspecified, using default values
  4495                           ;	Table Read Protection Block 0
  4496                           ;	EBTR0 = 0x1, unprogrammed default
  4497                           ;	Table Read Protection Block 1
  4498                           ;	EBTR1 = 0x1, unprogrammed default
  4499                           ;	Table Read Protection Block 2
  4500                           ;	EBTR2 = 0x1, unprogrammed default
  4501                           ;	Table Read Protection Block 3
  4502                           ;	EBTR3 = 0x1, unprogrammed default
  4503                           ;	Table Read Protection Block 4
  4504                           ;	EBTR4 = 0x1, unprogrammed default
  4505                           ;	Table Read Protection Block 5
  4506                           ;	EBTR5 = 0x1, unprogrammed default
  4507                           ;	Table Read Protection Block 6
  4508                           ;	EBTR6 = 0x1, unprogrammed default
  4509                           ;	Table Read Protection Block 7
  4510                           ;	EBTR7 = 0x1, unprogrammed default
  4511   30000A                     	org	3145738
  4512   30000A  FF                 	db	255
  4513                           
  4514                           ;Config register CONFIG6H @ 0x30000B
  4515                           ;	unspecified, using default values
  4516                           ;	Boot Block Table Read Protection bit
  4517                           ;	EBTRB = 0x1, unprogrammed default
  4518   30000B                     	org	3145739
  4519   30000B  FF                 	db	255
  4520                           tosu	equ	0xFFF
  4521                           tosh	equ	0xFFE
  4522                           tosl	equ	0xFFD
  4523                           stkptr	equ	0xFFC
  4524                           pclatu	equ	0xFFB
  4525                           pclath	equ	0xFFA
  4526                           pcl	equ	0xFF9
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           indf0	equ	0xFEF
  4534                           postinc0	equ	0xFEE
  4535                           postdec0	equ	0xFED
  4536                           preinc0	equ	0xFEC
  4537                           plusw0	equ	0xFEB
  4538                           fsr0h	equ	0xFEA
  4539                           fsr0l	equ	0xFE9
  4540                           wreg	equ	0xFE8
  4541                           indf1	equ	0xFE7
  4542                           postinc1	equ	0xFE6
  4543                           postdec1	equ	0xFE5
  4544                           preinc1	equ	0xFE4
  4545                           plusw1	equ	0xFE3
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           bsr	equ	0xFE0
  4549                           indf2	equ	0xFDF
  4550                           postinc2	equ	0xFDE
  4551                           postdec2	equ	0xFDD
  4552                           preinc2	equ	0xFDC
  4553                           plusw2	equ	0xFDB
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    145     156
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2119$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout_752(BANK0[50]), main@readout(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2066$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2066$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout_752(BANK0[50]), main@readout(BANK0[50]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1132DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S1132DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), main@RGB_calibrated(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_write16bitTMR0val

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               170   170      0    8195
                                             25 BANK0    120   120      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
                         _color_read
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             64 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     844
                                             13 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     196
                  _write16bitTMR0val
 ---------------------------------------------------------------------------------
 (10) _write16bitTMR0val                                   2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _write16bitTMR0val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     91      9C       5       97.5%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      54        0.0%
BITBIGSFRllllll     20      0       0      43        0.0%
BITBIGSFRhhhlh      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRhhlll      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      44        0.0%
BITBIGSFRllllll      B      0       0      52        0.0%
BITBIGSFRllllll      9      0       0      51        0.0%
BITBIGSFRllllhl      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhl          5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     168      55        0.0%
DATA                 0      0     168       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 19:37:34 2022

               _color_read_Red 19A6                _color_read_Blue 1A96                             l31 1B7A  
                           l40 19F4                             l34 1D56                             l43 1A94  
                           l37 1A44                             l46 1AE4                             l56 1832  
                           l49 18D8                             l90 1D0E                             l93 1D10  
                           l96 1D36                             l99 1DE2               _color_read_Green 1A46  
            ??_Interrupts_init 0003                            l102 1DCE                            l111 1C46  
                          l105 1DD8                            l108 1DB8                            l224 1BC0  
                          l171 1142                            l172 1178                            l326 1D94  
                          l335 1D98                            l344 1CB6                            l176 1238  
                          l274 1DC4                            l338 1DAC                            l285 1D76  
                          l461 13F8                            l474 155C                            u700 16F8  
                          u701 16F4                            u710 172E                            u711 172A  
                          u800 140C                            u720 1C04                            u801 1408  
                          u721 1C00                            u730 1284                            u810 143E  
                          u731 1280                            u811 143A                            u900 1D36  
                          u740 12B6                            u820 147C                            u901 1D32  
                          u741 12B2                            u821 1478                            u830 14A6  
                          u910 0E42                            u751 12E0                            u831 14A2  
                          u911 0E3C                            u760 1304                            u840 14D4  
                          u680 16BE                            u920 0E44                            u761 1300  
                          u841 14D0                            u681 16BA                            u770 132E  
                          u850 151C                            u690 16D0                            u930 0E56  
                          u771 132A                            u851 1518                            u691 16CC  
                          u931 0E52                            u780 136E                            u860 18E8  
                          u940 0E92                            u781 136A                            u861 18E4  
                          u941 0E8E                            u790 13B8                            u870 193E  
                          u950 0EBE                            u791 13B4                            u871 193A  
                          u951 0EBA                            u880 1C62                            u960 0ED4  
                          u881 1C5E                            u961 0ED0                            u890 1D20  
                          u970 1010                            u891 1D1C                            u971 100C  
                          u980 102E                            u981 102A                            u990 1048  
                          u991 1044                            _abs 1C48                            _pad 18DA  
                          wreg 000FE8                           l1102 1774                           l1110 1C04  
                         l2001 17EA                           l1113 1DEE                           l1025 19A4  
                         l2003 1800                           l1051 1952                           ?_abs 0015  
                         l2005 1816                           l2021 1BAA                           l2013 1B7C  
                         l1070 108E                           l2007 1822                           l2031 1BBE  
                         l2023 1BB0                           l2015 1B8C                           l1047 18FC  
                         l1056 0E9E                           l2033 1DBA                           l2041 1D74  
                         l2009 182A                           l2025 1BB4                           l2017 1BA0  
                         l1090 1C86                           l1058 0EA6                           l2035 1D58  
                         l2027 1BB8                           l2019 1BA8                           l2051 1D90  
                         l2043 1D78                           l1059 0EEC                           l1083 1B32  
                         l2037 1D60                           l2029 1BBC                           l2053 1D92  
                         l2045 1D82                           l1077 16AA                           l2061 1976  
                         l2141 10B2                           l2039 1D6A                           l2047 1D84  
                         l2071 1C9A                           l1087 1C7E                           l2063 1992  
                         l2055 1954                           l2151 10CE                           l2143 10B6  
                         l2135 1090                           l2049 1D8E                           l2073 1C9E  
                         l2057 1966                           l2161 11AC                           l2153 1104  
                         l2145 10BA                           l2137 10A2                           l2067 1C88  
                         l2059 196E                           l2171 1246                           l2163 11BA  
                         l2155 1110                           l2147 10BE                           l2139 10A6  
                         l2069 1C8C                           l1701 12DA                           l2165 11CE  
                         l2173 1252                           l2157 1150                           l2149 10C2  
                         l1711 132E                           l1703 12E6                           l2167 11F2  
                         l2159 1186                           l1721 13A2                           l1713 1340  
                         l1705 1304                           l1801 0EAE                           l2169 1228  
                         l1715 136E                           l1707 130C                           l1723 13A8  
                         l1731 13FA                           l1811 0EE8                           l1803 0EBE  
                         l1901 1CE6                           l1725 13B8                           l1717 138E  
                         l1709 1320                           l1741 143E                           l1733 13FE  
                         l1821 0F8C                           l1813 0EF4                           l1805 0EC4  
                         l1911 1CFC                           l1903 1CF0                           l1727 13D8  
                         l1719 1390                           l1751 14A6                           l1743 145E  
                         l1735 140C                           l1671 16DA                           l1831 1048  
                         l1823 0F92                           l1815 0EFE                           l1807 0ED4  
                         l1905 1CF6                           l1841 1DDA                           l1913 1D3A  
                         l1921 19A6                           l1761 151C                           l1753 14D4  
                         l1745 147C                           l1737 142C                           l1673 16F8  
                         l1665 16AC                           l1681 1BCE                           l1833 1058  
                         l1817 0F04                           l1825 0FF6                           l1809 0EE0  
                         l1907 1CF8                           l1843 1DDE                           l1851 1DD4  
                         l1915 19F6                           l1923 19EC                           l1691 1284  
                         l1763 153C                           l1755 14F4                           l1747 1484  
                         l1739 1430                           l1675 172E                           l1667 16BE  
                         l1683 1BE0                           l1771 18F4                           l1835 105E  
                         l1827 1010                           l1819 0F86                           l1909 1CFA  
                         l1845 1DB0                           l1861 1C14                           l1853 1DC6  
                         l1933 1A96                           l1917 1A3C                           l1941 1DA8  
                         l1693 12A4                           l1757 1506                           l1749 1498  
                         l1781 1C48                           l1669 16D0                           l1685 1BE4  
                         l1773 1908                           l1837 106E                           l1829 102E  
                         l1847 1DB4                           l1863 1C1C                           l1855 1DCA  
                         l1935 1ADC                           l1927 1A46                           l1695 12A8  
                         l1687 1272                           l1759 150C                           l1783 1C62  
                         l1679 1BC2                           l1775 191C                           l1767 18DA  
                         l1791 0E32                           l1871 155E                           l1943 1AE6  
                         l1785 1D10                           l1849 1DD0                           l1961 1B5C  
                         l1953 1B34                           l1865 1C42                           l1857 1C08  
                         l1929 1A8C                           l1697 12B6                           l1689 1276  
                         l1777 1920                           l1769 18E8                           l1793 0E46  
                         l1881 15B2                           l1873 1582                           l1945 1AF2  
                         l1787 1D20                           l1971 1B6E                           l1963 1B66  
                         l1955 1B38                           l1867 1C44                           l1859 1C0C  
                         l1939 1D98                           l1699 12D6                           l1779 193E  
                         l1795 0E56                           l1891 1670                           l1883 15CE  
                         l1875 1590                           l1947 1B0E                           l1981 1B78  
                         l1973 1B70                           l1965 1B68                           l1957 1B42  
                         l1797 0E76                           l1789 0E12                           l1885 15EA  
                         l1877 159E                           l1949 1B2A                           ?_pad 0013  
                         l1975 1B72                           l1967 1B6A                           l1959 1B52  
                         l1991 18A8                           l1983 1834                           l1799 0E92  
                         l1887 1640                           l1879 15A2                           l1895 1682  
                         l1977 1B74                           l1969 1B6C                           l1993 1776  
                         l1985 1848                           l1979 1B76                           l1995 17B2  
                         l1987 1860                           l1997 17C8                           l1989 1890  
                         l1999 17DE                           STR_1 0E01                           STR_2 0E01  
                         u1000 1058                           u1001 1054                           u1010 1C30  
                         u1011 1C28                           u1100 1800                           u1101 17FC  
                         u1110 1816                           u1030 1582                           u1111 1812  
                         u1031 157E                           u1120 1CB6                           u1040 15CE  
                         u1121 1CB2                           u1041 15CA                           u1050 15EA  
                         u1051 15E6                           u1028 1C32                           u1060 1DA8  
                         u1061 1DA4                           u1070 1B2A                           u1310 1186  
                         u1071 1B26                           u1311 1182                           u1080 17C8  
                         u1320 1198                           u1081 17C4                           u1321 1190  
                         u1090 17DE                           u1091 17DA                           u1340 11BA  
                         u1308 1166                           u1260 112E                           u1341 11B6  
                         u1261 1124                           u1350 11CE                           u1270 1142  
                         u1407 18B2                           u1351 11CA                           u1271 113E  
                         u1360 1246                           u1280 1150                   _BAUD4CONbits 000EE9  
                         u1417 1B48                           u1361 1242                           u1281 114C  
                         u1338 119C                           u1290 1162                           u1291 115A  
                         u1268 1132                           u1377 125E                           _T2PR 000FBC  
                         u1387 1852                           u1397 1882                    main@readout 007B  
                         abs@a 0015                           _dbuf 0150                           _main 1090  
                         _dtoa 0E12                           _prec 00F3                           pad@i 001A  
                         pad@p 0017                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001C  
                         fsr2l 000FD9                           btemp 005D                           prodl 000FF3  
                         start 0054         __end_of_color_read_Red 19F6                __end_of_HighISR 0054  
                 ___param_bank 000000                          ??_abs 0017                          ??_pad 0019  
              __end_of___aodiv 13FA                          ?_main 0001                          ?_dtoa 001E  
              __end_of___aomod 155E        ??_color_read_Luminosity 0009                          i2l282 0050  
                        i2l288 1DEC                   vfpfcnvrt@fmt 0043                          _TMR0H 000FD4  
                        _TMR0L 000FD3        __end_of_sendCharSerial4 1DAE     __end_of_I2C_2_Master_Start 1DE4  
   __end_of_I2C_2_Master_Write 1DBA                          _flags 00F9                          _fputc 16AC  
                        _fputs 1BC2                          pad@fp 0013                          _width 00F1  
                        _putch 1DEE                          dtoa@d 0020                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0032                          dtoa@s 0040  
                        dtoa@w 0034                          tablat 000FF5                          ttemp5 005E  
                        ttemp6 0061                          ttemp7 0065                          status 000FD8  
                        wtemp8 005E                __end_of_sprintf 19A6        __end_of_color_read_Blue 1AE6  
        _I2C_2_Master_RepStart 1DC6                ?_color_read_Red 0007                __initialization 1CB8  
                 __end_of_main 1272                   __end_of_dtoa 1090                         ??_main 0079  
                       ??_dtoa 0028                  __activetblptr 000001                         ?_fputc 0003  
                       ?_fputs 000C                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70                         i2l2121 001A  
                       i2l2123 0028                         i2l2131 004C                         i2l2125 0036  
                       i2l2127 003C                         i2l2119 000A                         i2l2129 004A  
                       i2l2075 1DE4                         i2l2077 1DE8                      ??_HighISR 0003  
     __end_of_color_click_init 1B7C                         _RX4PPS 000E15                         _TX4REG 000EE4  
                ??_Timer0_init 0003      color_processor_easy@color 0005                   vfprintf@cfmt 0059  
                    ??___aodiv 0013                      ??___aomod 0013                         clear_0 1CBE  
                       clear_1 1CCA                         isa$std 000001                         pad@buf 0015  
                       dtoa@fp 001E                         fputc@c 0003                         fputs@c 0010  
                       fputs@i 0011                         fputs@s 000C                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1B34  
            ??_initDCmotorsPWM 0005                      ??_sprintf 005B                     __accesstop 0060  
      __end_of__initialization 1CD4       __end_of_color_read_Green 1A96         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0007                _Interrupts_init 1DBA  
               __pcstackCOMRAM 0001                  color_read@rgb 000E                  __end_of_fputc 1776  
                __end_of_fputs 1C06                  __end_of_putch 1DF0            __end_of_Timer0_init 1D78  
                      ??_fputc 0007                        ??_fputs 0010                        ??_putch 0003  
                   __pbssBANK0 00F1                     __pbssBANK1 0100              _color_writetoaddr 1D38  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0005                 main@color_flag 00DF  
          ??_color_writetoaddr 0006  __end_of_color_read_Luminosity 1A46                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _PWM6DCH 000FA3                        _PWM7DCH 000FA0  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                     _color_read 1834  
      __end_of_Interrupts_init 1DC6         color_writetoaddr@value 0005               ??_color_read_Red 0009  
                      _HighISR 0008      __end_of_color_writetoaddr 1D58       color_read_Luminosity@tmp 000C  
           _I2C_2_Master_Start 1DDA                     _initUSART4 1D78             _I2C_2_Master_Write 1DAE  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000C  
                  _Timer0_init 1D58        sendStringSerial4@string 0004                        ___aodiv 1272  
                      ___aomod 13FA            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                   _off_period 00F5                      ?_vfprintf 0053                   __psmallconst 0E00  
                      __pcinit 1CB8                        __ramtop 0E00                        __ptext0 1090  
                      __ptext1 1954                        __ptext2 1AE6                        __ptext3 155E  
                      __ptext4 0E12                        __ptext5 18DA                        __ptext6 1BC2  
                      __ptext7 16AC                        __ptext8 1DEE                        __ptext9 1C48  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005C  
                      _sprintf 1954           ??_I2C_2_Master_Start 0004           ??_I2C_2_Master_Write 0004  
         end_of_initialization 1CD4                        fputc@fp 0005                        fputs@fp 000E  
            ?_color_click_init 0001   __end_of_color_processor_easy 1834             ??_color_click_init 0007  
            __end_of_vfpfcnvrt 16AC                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0049  
                   ??_vfprintf 0059                _initDCmotorsPWM 1B7C                      _PORTFbits 000F8E  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ?_color_read 000E       color_writetoaddr@address 0006        ??_I2C_2_Master_RepStart 0004  
             ?_Interrupts_init 0001                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0007                    ?_initUSART4 0001      sendCharSerial4@charToSend 0003  
           ??_color_read_Green 0009                    vfpfcnvrt@ap 0045                    vfpfcnvrt@cp 0051  
                  vfpfcnvrt@fp 0041            start_initialization 1CB8                    __end_of_abs 1C88  
                  __end_of_pad 1954                  _TxBufWriteCnt 00FB            color_read_Green@tmp 000C  
      __end_of_initDCmotorsPWM 1BC2                    vfprintf@fmt 0055                    __pbssCOMRAM 005B  
         _color_processor_easy 1776                  __pcstackBANK0 0060               ___aodiv@dividend 0003  
           main@RGB_calibrated 00E9                       ?_HighISR 0001        color_processor_easy@rgb 0003  
        color_processor_easy@a 0009          color_processor_easy@b 000B          color_processor_easy@c 0007  
                    _dtoa$2147 0030                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___aodiv 0003                       ?___aomod 0003               ___aodiv@quotient 0015  
         I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006                    __smallconst 0E00  
            _I2C_2_Master_Idle 1D10          ?_color_processor_easy 0003               main@RGB_recorded 00E1  
            _I2C_2_Master_Init 1CE6              _I2C_2_Master_Read 1C06              _I2C_2_Master_Stop 1DD0  
                 _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001          _color_read_Luminosity 19F6             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0003                       ?_sprintf 0060              _sendStringSerial4 1C88  
          ??_I2C_2_Master_Idle 0003            ??_I2C_2_Master_Init 0003            ??_I2C_2_Master_Read 0004  
          ??_I2C_2_Master_Stop 0004                       _LATCbits 000F7B                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E                      _on_period 00F7  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _PIE0bits 000E29  
           ?_sendStringSerial4 0004                       i2u124_40 001A                       i2u124_41 0016  
                     i2u125_40 0028                       i2u125_41 0024                       _PIR0bits 000E33  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0003              ??_sendCharSerial4 0003  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0006                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 155E      __end_of_I2C_2_Master_Idle 1D38      __end_of_I2C_2_Master_Init 1D10  
    __end_of_I2C_2_Master_Read 1C48      __end_of_I2C_2_Master_Stop 1DDA           write16bitTMR0val@tmp 0001  
  I2C_2_Master_Write@data_byte 0004              _write16bitTMR0val 1DE4              ??_color_read_Blue 0009  
                 _TxBufReadCnt 00FA             ?_write16bitTMR0val 0001                   ??_color_read 0010  
    __end_of_sendStringSerial4 1CB8  __end_of_I2C_2_Master_RepStart 1DD0             color_read_Blue@tmp 000C  
          ??_write16bitTMR0val 0003                main@readout_752 00AD                   ??_initUSART4 0003  
                     __Hrparam 0000                     vfprintf@ap 0057                       __Lrparam 0000  
                   vfprintf@fp 0053                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0041  
           __end_of_color_read 18DA                ___aodiv@divisor 000B                ___aodiv@counter 0013  
    __end_of_write16bitTMR0val 1DEE                     _ANSELDbits 000EA7         ??_color_processor_easy 0005  
                   _ANSELFbits 000EB4                     sprintf@fmt 0062                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6         ?_color_read_Luminosity 0007             __end_of_initUSART4 1D96  
                     __ptext10 13FA                       __ptext11 1272                       __ptext20 1A96  
                     __ptext12 1C88                       __ptext21 1DC6                       __ptext13 1D96  
                     __ptext30 1CE6                       __ptext22 1C06                       __ptext14 1D78  
                     __ptext31 1D58                       __ptext23 1776                       __ptext15 1B7C  
                     __ptext32 1DBA                       __ptext24 1B34                       __ptext16 1834  
                     __ptext25 1D38                       __ptext17 19A6                       __ptext34 1DE4  
                     __ptext26 1DAE                       __ptext18 19F6                       __ptext27 1DD0  
                     __ptext19 1A46                       __ptext28 1DDA                       __ptext29 1D10  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005D                       _vfprintf 1AE6  
             ___aomod@dividend 0003                     _INTCONbits 000FF2                    _PWM6CONbits 000FA4  
                  _PWM7CONbits 000FA1                       intlevel2 0000                      sprintf@ap 006C  
              ___aomod@divisor 000B                    ??_vfpfcnvrt 0047                ___aomod@counter 0013  
             _color_click_init 1B34                       sprintf@f 006E                       sprintf@s 0060  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0014                _sendCharSerial4 1D96                   ___aomod@sign 0014  
