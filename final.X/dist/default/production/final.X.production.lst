

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 01:58:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.35
    54                           ; Generated 05/05/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _TX4REG	set	3812
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _LATGbits	set	3967
    92   000000                     _LATEbits	set	3965
    93   000000                     _TRISGbits	set	3975
    94   000000                     _TRISEbits	set	3973
    95   000000                     _LATFbits	set	3966
    96   000000                     _TRISFbits	set	3974
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _ANSELFbits	set	3764
   103   000000                     _LATDbits	set	3964
   104   000000                     _LATHbits	set	3968
   105   000000                     _TRISDbits	set	3972
   106   000000                     _TRISHbits	set	3976
   107   000000                     _PORTFbits	set	3982
   108   000000                     _TRISCbits	set	3971
   109   000000                     _SSP2BUF	set	3797
   110   000000                     _SSP2ADD	set	3798
   111   000000                     _SSP2CON1bits	set	3801
   112   000000                     _RC4REG	set	3811
   113   000000                     _SP4BRGL	set	3813
   114   000000                     _TX4STAbits	set	3816
   115   000000                     _BAUD4CONbits	set	3817
   116   000000                     _LATCbits	set	3963
   117   000000                     _SSP2CON2	set	3802
   118   000000                     _SSP2STAT	set	3800
   119   000000                     _PIE0bits	set	3625
   120   000000                     _RC7PPS	set	3689
   121   000000                     _RD5PPS	set	3695
   122   000000                     _RE2PPS	set	3700
   123   000000                     _RD6PPS	set	3696
   124   000000                     _PWM7DCH	set	4000
   125   000000                     _PWM6DCH	set	4003
   126   000000                     _T2PR	set	4028
   127   000000                     _T2CONbits	set	4029
   128   000000                     _TMR0L	set	4051
   129   000000                     _TMR0H	set	4052
   130   000000                     _T0CON0bits	set	4053
   131   000000                     _T0CON1bits	set	4054
   132   000000                     _INTCONbits	set	4082
   133   000000                     _T2CLKCONbits	set	4031
   134   000000                     _T2HLTbits	set	4030
   135   000000                     _PWM6CONbits	set	4004
   136   000000                     _PWM7CONbits	set	4001
   137   000000                     _PIR0bits	set	3635
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140                           
   141                           	psect	smallconst
   142   000E00                     __psmallconst:
   143                           	callstack 0
   144   000E00  00                 	db	0
   145   000E01                     STR_1:
   146   000E01  25                 	db	37
   147   000E02  64                 	db	100	;'d'
   148   000E03  20                 	db	32
   149   000E04  25                 	db	37
   150   000E05  64                 	db	100	;'d'
   151   000E06  20                 	db	32
   152   000E07  25                 	db	37
   153   000E08  64                 	db	100	;'d'
   154   000E09  20                 	db	32
   155   000E0A  25                 	db	37
   156   000E0B  64                 	db	100	;'d'
   157   000E0C  20                 	db	32
   158   000E0D  0D                 	db	13
   159   000E0E  0A                 	db	10
   160   000E0F  00                 	db	0
   161   000E10  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   001D3C                     __pcinit:
   167                           	callstack 0
   168   001D3C                     start_initialization:
   169                           	callstack 0
   170   001D3C                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to BANK0 (123 bytes)
   174   001D3C  EE00  F060         	lfsr	0,__pbssBANK0
   175   001D40  0E7B               	movlw	123
   176   001D42                     clear_0:
   177   001D42  6AEE               	clrf	postinc0,c
   178   001D44  06E8               	decf	wreg,f,c
   179   001D46  E1FD               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to COMRAM (2 bytes)
   182   001D48  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   183   001D4A  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   184   001D4C                     end_of_initialization:
   185                           	callstack 0
   186   001D4C                     __end_of__initialization:
   187                           	callstack 0
   188   001D4C  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   189   001D4E  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   190   001D50  0E00               	movlw	low (__Lsmallconst shr (0+16))
   191   001D52  6EF8               	movwf	tblptru,c
   192   001D54  0E0E               	movlw	high __Lsmallconst
   193   001D56  6EF7               	movwf	tblptrh,c
   194   001D58  0100               	movlb	0
   195   001D5A  EF47  F008         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198   00005B                     __pbssCOMRAM:
   199                           	callstack 0
   200   00005B                     _RxBufReadCnt:
   201                           	callstack 0
   202   00005B                     	ds	1
   203   00005C                     _RxBufWriteCnt:
   204                           	callstack 0
   205   00005C                     	ds	1
   206                           
   207                           	psect	bssBANK0
   208   000060                     __pbssBANK0:
   209                           	callstack 0
   210   000060                     _EUSART4TXbuf:
   211                           	callstack 0
   212   000060                     	ds	60
   213   00009C                     _EUSART4RXbuf:
   214                           	callstack 0
   215   00009C                     	ds	20
   216   0000B0                     _width:
   217                           	callstack 0
   218   0000B0                     	ds	2
   219   0000B2                     _prec:
   220                           	callstack 0
   221   0000B2                     	ds	2
   222   0000B4                     _off_period:
   223                           	callstack 0
   224   0000B4                     	ds	2
   225   0000B6                     _on_period:
   226                           	callstack 0
   227   0000B6                     	ds	2
   228   0000B8                     _flags:
   229                           	callstack 0
   230   0000B8                     	ds	1
   231   0000B9                     _TxBufReadCnt:
   232                           	callstack 0
   233   0000B9                     	ds	1
   234   0000BA                     _TxBufWriteCnt:
   235                           	callstack 0
   236   0000BA                     	ds	1
   237   0000BB                     _dbuf:
   238                           	callstack 0
   239   0000BB                     	ds	32
   240                           
   241                           	psect	cstackBANK1
   242   000100                     __pcstackBANK1:
   243                           	callstack 0
   244   000100                     main@readout:
   245                           	callstack 0
   246                           
   247                           ; 50 bytes @ 0x0
   248   000100                     	ds	50
   249   000132                     main@color_storage:
   250                           	callstack 0
   251                           
   252                           ; 30 bytes @ 0x32
   253   000132                     	ds	30
   254   000150                     main@time_storage:
   255                           	callstack 0
   256                           
   257                           ; 30 bytes @ 0x50
   258   000150                     	ds	30
   259   00016E                     main@color_flag:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x6E
   263   00016E                     	ds	2
   264   000170                     main@time_flag:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x70
   268   000170                     	ds	2
   269   000172                     main@time:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x72
   273   000172                     	ds	2
   274   000174                     main@home:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x74
   278   000174                     	ds	2
   279   000176                     main@color_name:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x76
   283   000176                     	ds	2
   284   000178                     main@j:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x78
   288   000178                     	ds	2
   289   00017A                     main@k:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x7A
   293   00017A                     	ds	2
   294   00017C                     main@RGB_recorded:
   295                           	callstack 0
   296                           
   297                           ; 8 bytes @ 0x7C
   298   00017C                     	ds	8
   299   000184                     main@RGB_calibrated:
   300                           	callstack 0
   301                           
   302                           ; 8 bytes @ 0x84
   303   000184                     	ds	8
   304                           
   305                           	psect	cstackBANK0
   306   0000DB                     __pcstackBANK0:
   307                           	callstack 0
   308   0000DB                     ?_sprintf:
   309                           	callstack 0
   310   0000DB                     sprintf@s:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x0
   314   0000DB                     	ds	2
   315   0000DD                     sprintf@fmt:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x2
   319   0000DD                     	ds	10
   320   0000E7                     sprintf@ap:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0xC
   324   0000E7                     	ds	2
   325   0000E9                     sprintf@f:
   326                           	callstack 0
   327                           
   328                           ; 11 bytes @ 0xE
   329   0000E9                     	ds	11
   330   0000F4                     ??_main:
   331                           
   332                           ; 1 bytes @ 0x19
   333   0000F4                     	ds	2
   334                           
   335                           	psect	cstackCOMRAM
   336   000001                     __pcstackCOMRAM:
   337                           	callstack 0
   338   000001                     write16bitTMR0val@tmp:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x0
   342   000001                     	ds	2
   343   000003                     ??_I2C_2_Master_Idle:
   344   000003                     ?_color_processor_easy:
   345                           	callstack 0
   346   000003                     ?___aodiv:
   347                           	callstack 0
   348   000003                     ?___aomod:
   349                           	callstack 0
   350   000003                     sendCharSerial4@charToSend:
   351                           	callstack 0
   352   000003                     color_processor_easy@rgb:
   353                           	callstack 0
   354   000003                     initDCmotorsPWM@PWMperiod:
   355                           	callstack 0
   356   000003                     fputc@c:
   357                           	callstack 0
   358   000003                     ___aodiv@dividend:
   359                           	callstack 0
   360   000003                     ___aomod@dividend:
   361                           	callstack 0
   362                           
   363                           ; 8 bytes @ 0x2
   364   000003                     	ds	1
   365   000004                     ??_I2C_2_Master_Read:
   366   000004                     I2C_2_Master_Write@data_byte:
   367                           	callstack 0
   368   000004                     sendStringSerial4@string:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x3
   372   000004                     	ds	1
   373   000005                     color_writetoaddr@value:
   374                           	callstack 0
   375   000005                     I2C_2_Master_Read@ack:
   376                           	callstack 0
   377   000005                     color_processor_easy@color:
   378                           	callstack 0
   379   000005                     fputc@fp:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x4
   383   000005                     	ds	1
   384   000006                     color_writetoaddr@address:
   385                           	callstack 0
   386   000006                     I2C_2_Master_Read@tmp:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x5
   390   000006                     	ds	1
   391   000007                     ??_fputc:
   392   000007                     ??_color_click_init:
   393   000007                     ?_color_read_Luminosity:
   394                           	callstack 0
   395   000007                     ?_color_read_Red:
   396                           	callstack 0
   397   000007                     ?_color_read_Green:
   398                           	callstack 0
   399   000007                     ?_color_read_Blue:
   400                           	callstack 0
   401   000007                     color_processor_easy@c:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x6
   405   000007                     	ds	2
   406   000009                     ??_color_read_Luminosity:
   407   000009                     ??_color_read_Red:
   408   000009                     ??_color_read_Green:
   409   000009                     ??_color_read_Blue:
   410   000009                     color_processor_easy@a:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x8
   414   000009                     	ds	2
   415   00000B                     color_processor_easy@b:
   416                           	callstack 0
   417   00000B                     ___aodiv@divisor:
   418                           	callstack 0
   419   00000B                     ___aomod@divisor:
   420                           	callstack 0
   421                           
   422                           ; 8 bytes @ 0xA
   423   00000B                     	ds	1
   424   00000C                     color_read_Luminosity@tmp:
   425                           	callstack 0
   426   00000C                     color_read_Red@tmp:
   427                           	callstack 0
   428   00000C                     color_read_Green@tmp:
   429                           	callstack 0
   430   00000C                     color_read_Blue@tmp:
   431                           	callstack 0
   432   00000C                     fputs@s:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xB
   436   00000C                     	ds	2
   437   00000E                     color_read@rgb:
   438                           	callstack 0
   439   00000E                     fputs@fp:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xD
   443   00000E                     	ds	2
   444   000010                     ??_color_read:
   445   000010                     fputs@c:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0xF
   449   000010                     	ds	1
   450   000011                     fputs@i:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x10
   454   000011                     	ds	2
   455   000013                     ___aodiv@counter:
   456                           	callstack 0
   457   000013                     ___aomod@counter:
   458                           	callstack 0
   459   000013                     pad@fp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x12
   463   000013                     	ds	1
   464   000014                     ___aodiv@sign:
   465                           	callstack 0
   466   000014                     ___aomod@sign:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x13
   470   000014                     	ds	1
   471   000015                     ?_abs:
   472                           	callstack 0
   473   000015                     pad@buf:
   474                           	callstack 0
   475   000015                     abs@a:
   476                           	callstack 0
   477   000015                     ___aodiv@quotient:
   478                           	callstack 0
   479                           
   480                           ; 8 bytes @ 0x14
   481   000015                     	ds	2
   482   000017                     ??_abs:
   483   000017                     pad@p:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x16
   487   000017                     	ds	2
   488   000019                     ??_pad:
   489                           
   490                           ; 1 bytes @ 0x18
   491   000019                     	ds	1
   492   00001A                     pad@i:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x19
   496   00001A                     	ds	2
   497   00001C                     pad@w:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x1B
   501   00001C                     	ds	2
   502   00001E                     dtoa@fp:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1D
   506   00001E                     	ds	2
   507   000020                     dtoa@d:
   508                           	callstack 0
   509                           
   510                           ; 8 bytes @ 0x1F
   511   000020                     	ds	8
   512   000028                     ??_dtoa:
   513                           
   514                           ; 1 bytes @ 0x27
   515   000028                     	ds	8
   516   000030                     _dtoa$2120:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x2F
   520   000030                     	ds	2
   521   000032                     dtoa@p:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x31
   525   000032                     	ds	2
   526   000034                     dtoa@w:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x33
   530   000034                     	ds	2
   531   000036                     dtoa@n:
   532                           	callstack 0
   533                           
   534                           ; 8 bytes @ 0x35
   535   000036                     	ds	8
   536   00003E                     dtoa@i:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x3D
   540   00003E                     	ds	2
   541   000040                     dtoa@s:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x3F
   545   000040                     	ds	1
   546   000041                     vfpfcnvrt@fp:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x40
   550   000041                     	ds	2
   551   000043                     vfpfcnvrt@fmt:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x42
   555   000043                     	ds	2
   556   000045                     vfpfcnvrt@ap:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x44
   560   000045                     	ds	2
   561   000047                     ??_vfpfcnvrt:
   562                           
   563                           ; 1 bytes @ 0x46
   564   000047                     	ds	2
   565   000049                     vfpfcnvrt@convarg:
   566                           	callstack 0
   567                           
   568                           ; 8 bytes @ 0x48
   569   000049                     	ds	8
   570   000051                     vfpfcnvrt@cp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x50
   574   000051                     	ds	2
   575   000053                     ?_vfprintf:
   576                           	callstack 0
   577   000053                     vfprintf@fp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x52
   581   000053                     	ds	2
   582   000055                     vfprintf@fmt:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x54
   586   000055                     	ds	2
   587   000057                     vfprintf@ap:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x56
   591   000057                     	ds	2
   592   000059                     vfprintf@cfmt:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x58
   596   000059                     	ds	2
   597   00005B                     
   598                           ; 1 bytes @ 0x5A
   599 ;;
   600 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   601 ;;
   602 ;; *************** function _main *****************
   603 ;; Defined at:
   604 ;;		line 20 in file "../main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  k               2  122[BANK1 ] int 
   609 ;;  readout        50    0[BANK1 ] unsigned char [50]
   610 ;;  color_calibr   48    0        unsigned int [24]
   611 ;;  time_storage   30   80[BANK1 ] unsigned int [15]
   612 ;;  color_storag   30   50[BANK1 ] unsigned int [15]
   613 ;;  RGB_calibrat    8  132[BANK1 ] struct RGB_val
   614 ;;  RGB_recorded    8  124[BANK1 ] struct RGB_val
   615 ;;  j               2  120[BANK1 ] int 
   616 ;;  color_name      2  118[BANK1 ] unsigned int 
   617 ;;  home            2  116[BANK1 ] unsigned int 
   618 ;;  time            2  114[BANK1 ] unsigned int 
   619 ;;  time_flag       2  112[BANK1 ] unsigned int 
   620 ;;  color_flag      2  110[BANK1 ] unsigned int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   631 ;;      Locals:         0       0     140       0       0       0       0       0       0       0       0       0       
      +0       0       0
   632 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   633 ;;      Totals:         0       2     140       0       0       0       0       0       0       0       0       0       
      +0       0       0
   634 ;;Total ram usage:      142 bytes
   635 ;; Hardware stack levels required when called: 10
   636 ;; This function calls:
   637 ;;		_I2C_2_Master_Init
   638 ;;		_Interrupts_init
   639 ;;		_Timer0_init
   640 ;;		_color_click_init
   641 ;;		_color_processor_easy
   642 ;;		_color_read
   643 ;;		_initDCmotorsPWM
   644 ;;		_initUSART4
   645 ;;		_sendStringSerial4
   646 ;;		_sprintf
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text0
   653   00108E                     __ptext0:
   654                           	callstack 0
   655   00108E                     _main:
   656                           	callstack 21
   657   00108E                     
   658                           ;../main.c: 22:     color_click_init();
   659   00108E  ECBA  F00C         	call	_color_click_init	;wreg free
   660   001092                     
   661                           ;../main.c: 23:     initDCmotorsPWM(20);
   662   001092  0E00               	movlw	0
   663   001094  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   664   001096  0E14               	movlw	20
   665   001098  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
   666   00109A  ECD7  F00D         	call	_initDCmotorsPWM	;wreg free
   667   00109E                     
   668                           ;../main.c: 24:     Interrupts_init();
   669   00109E  ECF0  F00E         	call	_Interrupts_init	;wreg free
   670   0010A2                     
   671                           ;../main.c: 25:     Timer0_init();
   672   0010A2  ECBF  F00E         	call	_Timer0_init	;wreg free
   673   0010A6                     
   674                           ;../main.c: 26:     I2C_2_Master_Init();
   675   0010A6  EC75  F00E         	call	_I2C_2_Master_Init	;wreg free
   676   0010AA                     
   677                           ;../main.c: 27:     initUSART4();
   678   0010AA  ECCF  F00E         	call	_initUSART4	;wreg free
   679   0010AE                     
   680                           ;../main.c: 30:     unsigned int color_flag;;../main.c: 31:     unsigned int color_name;
      +                          ;../main.c: 32:     unsigned int color_storage[15];;../main.c: 33:     struct RGB_val RG
      +                          B_recorded;;../main.c: 35:     unsigned int time_storage[15];;../main.c: 36:     unsigne
      +                          d int time;;../main.c: 37:     unsigned int time_flag;;../main.c: 38:     int j;;../main
      +                          .c: 39:     unsigned int home = 0;
   681   0010AE  0E00               	movlw	0
   682   0010B0  0101               	movlb	1	; () banked
   683   0010B2  6F75               	movwf	(main@home+1)& (0+255),b
   684   0010B4  0E00               	movlw	0
   685   0010B6  6F74               	movwf	main@home& (0+255),b
   686   0010B8                     
   687                           ; BSR set to: 1
   688                           ;../main.c: 41:     unsigned int color_calibrated[24];;../main.c: 42:     struct RGB_val
      +                           RGB_calibrated;;../main.c: 45:     color_read(&RGB_calibrated);
   689   0010B8  0E84               	movlw	low main@RGB_calibrated
   690   0010BA  6E0E               	movwf	color_read@rgb^0,c
   691   0010BC  0E01               	movlw	high main@RGB_calibrated
   692   0010BE  6E0F               	movwf	(color_read@rgb+1)^0,c
   693   0010C0  EC2A  F00C         	call	_color_read	;wreg free
   694   0010C4                     
   695                           ;../main.c: 46:     char readout[50];;../main.c: 47:     sprintf(readout,"%d %d %d %d \r
      +                          \n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrated.B);
   696   0010C4  0E00               	movlw	low main@readout
   697   0010C6  0100               	movlb	0	; () banked
   698   0010C8  6FDB               	movwf	sprintf@s& (0+255),b
   699   0010CA  0E01               	movlw	high main@readout
   700   0010CC  6FDC               	movwf	(sprintf@s+1)& (0+255),b
   701   0010CE  0E01               	movlw	low STR_1
   702   0010D0  6FDD               	movwf	sprintf@fmt& (0+255),b
   703   0010D2  0E0E               	movlw	high STR_1
   704   0010D4  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
   705   0010D6  C184  F0DF         	movff	main@RGB_calibrated,?_sprintf+4
   706   0010DA  C185  F0E0         	movff	main@RGB_calibrated+1,?_sprintf+5
   707   0010DE  C186  F0E1         	movff	main@RGB_calibrated+2,?_sprintf+6
   708   0010E2  C187  F0E2         	movff	main@RGB_calibrated+3,?_sprintf+7
   709   0010E6  C188  F0E3         	movff	main@RGB_calibrated+4,?_sprintf+8
   710   0010EA  C189  F0E4         	movff	main@RGB_calibrated+5,?_sprintf+9
   711   0010EE  C18A  F0E5         	movff	main@RGB_calibrated+6,?_sprintf+10
   712   0010F2  C18B  F0E6         	movff	main@RGB_calibrated+7,?_sprintf+11
   713   0010F6  ECE7  F00C         	call	_sprintf	;wreg free
   714   0010FA                     
   715                           ;../main.c: 48:     sendStringSerial4(readout);
   716   0010FA  0E00               	movlw	low main@readout
   717   0010FC  6E04               	movwf	sendStringSerial4@string^0,c
   718   0010FE  0E01               	movlw	high main@readout
   719   001100  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   720   001102  EC5D  F00E         	call	_sendStringSerial4	;wreg free
   721   001106                     l2228:
   722                           
   723                           ;../main.c: 59:         if (time_flag==1){
   724   001106  0101               	movlb	1	; () banked
   725   001108  0570               	decf	main@time_flag& (0+255),w,b
   726   00110A  1171               	iorwf	(main@time_flag+1)& (0+255),w,b
   727   00110C  A4D8               	btfss	status,2,c
   728   00110E  EF8B  F008         	goto	u1241
   729   001112  EF8D  F008         	goto	u1240
   730   001116                     u1241:
   731   001116  EF93  F008         	goto	l2234
   732   00111A                     u1240:
   733   00111A                     
   734                           ; BSR set to: 1
   735                           ;../main.c: 60:             time++;
   736   00111A  4B72               	infsnz	main@time& (0+255),f,b
   737   00111C  2B73               	incf	(main@time+1)& (0+255),f,b
   738   00111E                     
   739                           ; BSR set to: 1
   740                           ;../main.c: 61:             time_flag = 0;
   741   00111E  0E00               	movlw	0
   742   001120  6F71               	movwf	(main@time_flag+1)& (0+255),b
   743   001122  0E00               	movlw	0
   744   001124  6F70               	movwf	main@time_flag& (0+255),b
   745   001126                     l2234:
   746   001126  0E01               	movlw	1
   747   001128  A68E               	btfss	142,3,c	;volatile
   748   00112A  0E00               	movlw	0
   749   00112C  A48E               	btfss	142,2,c	;volatile
   750   00112E  0E00               	movlw	0
   751   001130  B0E8               	btfsc	wreg,0,c
   752   001132  EF9D  F008         	goto	u1251
   753   001136  EFA2  F008         	goto	u1250
   754   00113A                     u1251:
   755   00113A  0100               	movlb	0	; () banked
   756   00113C  6BF4               	clrf	??_main& (0+255),b
   757   00113E  2BF4               	incf	??_main& (0+255),f,b
   758   001140  EFA4  F008         	goto	u1258
   759   001144                     u1250:
   760   001144  0100               	movlb	0	; () banked
   761   001146  6BF4               	clrf	??_main& (0+255),b
   762   001148                     u1258:
   763   001148  51F4               	movf	??_main& (0+255),w,b
   764   00114A  A4D8               	btfss	status,2,c
   765   00114C  EFAA  F008         	goto	u1261
   766   001150  EFAC  F008         	goto	u1260
   767   001154                     u1261:
   768   001154  EF93  F008         	goto	l2234
   769   001158                     u1260:
   770   001158                     
   771                           ; BSR set to: 0
   772                           ;../main.c: 66:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
   773   001158  B48E               	btfsc	142,2,c	;volatile
   774   00115A  EFB1  F008         	goto	u1271
   775   00115E  EFB3  F008         	goto	u1270
   776   001162                     u1271:
   777   001162  EFB6  F008         	goto	l167
   778   001166                     u1270:
   779   001166                     
   780                           ; BSR set to: 0
   781   001166  8E7C               	bsf	124,7,c	;volatile
   782   001168  EF27  F009         	goto	l2258
   783   00116C                     l167:
   784                           
   785                           ; BSR set to: 0
   786   00116C  8680               	bsf	128,3,c	;volatile
   787   00116E  EF27  F009         	goto	l2258
   788   001172                     l170:
   789                           
   790                           ; BSR set to: 1
   791                           ;../main.c: 71:             if (LATDbits.LATD7){
   792   001172  AE7C               	btfss	124,7,c	;volatile
   793   001174  EFBE  F008         	goto	u1281
   794   001178  EFC0  F008         	goto	u1280
   795   00117C                     u1281:
   796   00117C  EF0E  F009         	goto	l171
   797   001180                     u1280:
   798   001180                     
   799                           ; BSR set to: 1
   800                           ;../main.c: 72:                 if (color_flag){
   801   001180  516E               	movf	main@color_flag& (0+255),w,b
   802   001182  116F               	iorwf	(main@color_flag+1)& (0+255),w,b
   803   001184  B4D8               	btfsc	status,2,c
   804   001186  EFC7  F008         	goto	u1291
   805   00118A  EFC9  F008         	goto	u1290
   806   00118E                     u1291:
   807   00118E  EF1B  F009         	goto	l2256
   808   001192                     u1290:
   809   001192                     
   810                           ; BSR set to: 1
   811                           ;../main.c: 73:                     color_read(&RGB_recorded);
   812   001192  0E7C               	movlw	low main@RGB_recorded
   813   001194  6E0E               	movwf	color_read@rgb^0,c
   814   001196  0E01               	movlw	high main@RGB_recorded
   815   001198  6E0F               	movwf	(color_read@rgb+1)^0,c
   816   00119A  EC2A  F00C         	call	_color_read	;wreg free
   817                           
   818                           ;../main.c: 74:                     color_name = color_processor_easy(&RGB_recorded);
   819   00119E  0E7C               	movlw	low main@RGB_recorded
   820   0011A0  6E03               	movwf	color_processor_easy@rgb^0,c
   821   0011A2  0E01               	movlw	high main@RGB_recorded
   822   0011A4  6E04               	movwf	(color_processor_easy@rgb+1)^0,c
   823   0011A6  ECCB  F00B         	call	_color_processor_easy	;wreg free
   824   0011AA  C003  F176         	movff	?_color_processor_easy,main@color_name
   825   0011AE  C004  F177         	movff	?_color_processor_easy+1,main@color_name+1
   826   0011B2                     
   827                           ;../main.c: 75:                     color_storage[j] = color_name;
   828   0011B2  90D8               	bcf	status,0,c
   829   0011B4  0101               	movlb	1	; () banked
   830   0011B6  3578               	rlcf	main@j& (0+255),w,b
   831   0011B8  6ED9               	movwf	fsr2l,c
   832   0011BA  3579               	rlcf	(main@j+1)& (0+255),w,b
   833   0011BC  6EDA               	movwf	fsr2h,c
   834   0011BE  0E32               	movlw	low main@color_storage
   835   0011C0  26D9               	addwf	fsr2l,f,c
   836   0011C2  0E01               	movlw	high main@color_storage
   837   0011C4  22DA               	addwfc	fsr2h,f,c
   838   0011C6  C176  FFDE         	movff	main@color_name,postinc2
   839   0011CA  C177  FFDD         	movff	main@color_name+1,postdec2
   840   0011CE                     
   841                           ; BSR set to: 1
   842                           ;../main.c: 76:                     time_storage[j] = time;
   843   0011CE  90D8               	bcf	status,0,c
   844   0011D0  3578               	rlcf	main@j& (0+255),w,b
   845   0011D2  6ED9               	movwf	fsr2l,c
   846   0011D4  3579               	rlcf	(main@j+1)& (0+255),w,b
   847   0011D6  6EDA               	movwf	fsr2h,c
   848   0011D8  0E50               	movlw	low main@time_storage
   849   0011DA  26D9               	addwf	fsr2l,f,c
   850   0011DC  0E01               	movlw	high main@time_storage
   851   0011DE  22DA               	addwfc	fsr2h,f,c
   852   0011E0  C172  FFDE         	movff	main@time,postinc2
   853   0011E4  C173  FFDD         	movff	main@time+1,postdec2
   854   0011E8                     
   855                           ; BSR set to: 1
   856                           ;../main.c: 77:                     j++;
   857   0011E8  4B78               	infsnz	main@j& (0+255),f,b
   858   0011EA  2B79               	incf	(main@j+1)& (0+255),f,b
   859   0011EC                     
   860                           ; BSR set to: 1
   861                           ;../main.c: 78:                     time = 0;
   862   0011EC  0E00               	movlw	0
   863   0011EE  6F73               	movwf	(main@time+1)& (0+255),b
   864   0011F0  0E00               	movlw	0
   865   0011F2  6F72               	movwf	main@time& (0+255),b
   866   0011F4                     
   867                           ; BSR set to: 1
   868                           ;../main.c: 80:                     if (color_name != 8) {
   869   0011F4  0E08               	movlw	8
   870   0011F6  1976               	xorwf	main@color_name& (0+255),w,b
   871   0011F8  1177               	iorwf	(main@color_name+1)& (0+255),w,b
   872   0011FA  B4D8               	btfsc	status,2,c
   873   0011FC  EF02  F009         	goto	u1301
   874   001200  EF04  F009         	goto	u1300
   875   001204                     u1301:
   876   001204  EF1B  F009         	goto	l2256
   877   001208                     u1300:
   878   001208                     
   879                           ; BSR set to: 1
   880                           ;../main.c: 81:                         color_flag = 0;
   881   001208  0E00               	movlw	0
   882   00120A  6F6F               	movwf	(main@color_flag+1)& (0+255),b
   883   00120C  0E00               	movlw	0
   884   00120E  6F6E               	movwf	main@color_flag& (0+255),b
   885                           
   886                           ;../main.c: 82:                         home = 1;
   887   001210  0E00               	movlw	0
   888   001212  6F75               	movwf	(main@home+1)& (0+255),b
   889   001214  0E01               	movlw	1
   890   001216  6F74               	movwf	main@home& (0+255),b
   891   001218  EF1B  F009         	goto	l2256
   892   00121C                     l171:
   893                           
   894                           ; BSR set to: 1
   895   00121C  A680               	btfss	128,3,c	;volatile
   896   00121E  EF13  F009         	goto	u1311
   897   001222  EF15  F009         	goto	u1310
   898   001226                     u1311:
   899   001226  EF1B  F009         	goto	l2256
   900   00122A                     u1310:
   901   00122A                     
   902                           ; BSR set to: 1
   903                           ;../main.c: 89:                 color_read(&RGB_recorded);
   904   00122A  0E7C               	movlw	low main@RGB_recorded
   905   00122C  6E0E               	movwf	color_read@rgb^0,c
   906   00122E  0E01               	movlw	high main@RGB_recorded
   907   001230  6E0F               	movwf	(color_read@rgb+1)^0,c
   908   001232  EC2A  F00C         	call	_color_read	;wreg free
   909   001236                     l2256:
   910                           
   911                           ;../main.c: 91:             _delay((unsigned long)((200)*(64000000/4000.0)));
   912   001236  0E11               	movlw	17
   913   001238  0100               	movlb	0	; () banked
   914   00123A  6FF5               	movwf	(??_main+1)& (0+255),b
   915   00123C  0E3C               	movlw	60
   916   00123E  6FF4               	movwf	??_main& (0+255),b
   917   001240  0ECB               	movlw	203
   918   001242                     u1347:
   919   001242  2EE8               	decfsz	wreg,f,c
   920   001244  D7FE               	bra	u1347
   921   001246  2FF4               	decfsz	??_main& (0+255),f,b
   922   001248  D7FC               	bra	u1347
   923   00124A  2FF5               	decfsz	(??_main+1)& (0+255),f,b
   924   00124C  D7FA               	bra	u1347
   925   00124E                     l2258:
   926                           
   927                           ;../main.c: 70:         while (!home) {
   928   00124E  0101               	movlb	1	; () banked
   929   001250  5174               	movf	main@home& (0+255),w,b
   930   001252  1175               	iorwf	(main@home+1)& (0+255),w,b
   931   001254  B4D8               	btfsc	status,2,c
   932   001256  EF2F  F009         	goto	u1321
   933   00125A  EF31  F009         	goto	u1320
   934   00125E                     u1321:
   935   00125E  EFB9  F008         	goto	l170
   936   001262                     u1320:
   937   001262                     
   938                           ; BSR set to: 1
   939                           ;../main.c: 94:         int k;;../main.c: 95:         for (k=0;k<15;k++){
   940   001262  0E00               	movlw	0
   941   001264  6F7B               	movwf	(main@k+1)& (0+255),b
   942   001266  0E00               	movlw	0
   943   001268  6F7A               	movwf	main@k& (0+255),b
   944   00126A                     l2266:
   945                           
   946                           ; BSR set to: 1
   947                           ;../main.c: 97:         }
   948   00126A  4B7A               	infsnz	main@k& (0+255),f,b
   949   00126C  2B7B               	incf	(main@k+1)& (0+255),f,b
   950   00126E                     
   951                           ; BSR set to: 1
   952   00126E  BF7B               	btfsc	(main@k+1)& (0+255),7,b
   953   001270  EF43  F009         	goto	u1331
   954   001274  517B               	movf	(main@k+1)& (0+255),w,b
   955   001276  E109               	bnz	u1330
   956   001278  0E0F               	movlw	15
   957   00127A  5D7A               	subwf	main@k& (0+255),w,b
   958   00127C  A0D8               	btfss	status,0,c
   959   00127E  EF43  F009         	goto	u1331
   960   001282  EF45  F009         	goto	u1330
   961   001286                     u1331:
   962   001286  EF35  F009         	goto	l2266
   963   00128A                     u1330:
   964   00128A  EF83  F008         	goto	l2228
   965   00128E  EF2A  F000         	goto	start
   966   001292                     __end_of_main:
   967                           	callstack 0
   968                           
   969 ;; *************** function _sprintf *****************
   970 ;; Defined at:
   971 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  s               2    0[BANK0 ] PTR unsigned char 
   974 ;;		 -> main@readout(50), 
   975 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   976 ;;		 -> STR_1(15), 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  f              11   14[BANK0 ] struct _IO_FILE
   979 ;;  ap              2   12[BANK0 ] PTR void [1]
   980 ;;		 -> ?_sprintf(2), 
   981 ;;  ret             2    0        int 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2    0[BANK0 ] int 
   984 ;; Registers used:
   985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   991 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   992 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   994 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   995 ;;Total ram usage:       25 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 9
   998 ;; This function calls:
   999 ;;		_vfprintf
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text1
  1006   0019CE                     __ptext1:
  1007                           	callstack 0
  1008   0019CE                     _sprintf:
  1009                           	callstack 21
  1010   0019CE  0EDF               	movlw	low (?_sprintf+4)
  1011   0019D0  0100               	movlb	0	; () banked
  1012   0019D2  6FE7               	movwf	sprintf@ap& (0+255),b
  1013   0019D4  0E00               	movlw	high (?_sprintf+4)
  1014   0019D6  6FE8               	movwf	(sprintf@ap+1)& (0+255),b
  1015   0019D8  C0DB  F0E9         	movff	sprintf@s,sprintf@f
  1016   0019DC  C0DC  F0EA         	movff	sprintf@s+1,sprintf@f+1
  1017   0019E0                     
  1018                           ; BSR set to: 0
  1019   0019E0  0E00               	movlw	0
  1020   0019E2  6FED               	movwf	(sprintf@f+4)& (0+255),b
  1021   0019E4  0E00               	movlw	0
  1022   0019E6  6FEC               	movwf	(sprintf@f+3)& (0+255),b
  1023   0019E8                     
  1024                           ; BSR set to: 0
  1025   0019E8  0E00               	movlw	0
  1026   0019EA  6FF3               	movwf	(sprintf@f+10)& (0+255),b
  1027   0019EC  0E00               	movlw	0
  1028   0019EE  6FF2               	movwf	(sprintf@f+9)& (0+255),b
  1029   0019F0                     
  1030                           ; BSR set to: 0
  1031   0019F0  0EE9               	movlw	low sprintf@f
  1032   0019F2  6E53               	movwf	vfprintf@fp^0,c
  1033   0019F4  0E00               	movlw	high sprintf@f
  1034   0019F6  6E54               	movwf	(vfprintf@fp+1)^0,c
  1035   0019F8  C0DD  F055         	movff	sprintf@fmt,vfprintf@fmt
  1036   0019FC  C0DE  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1037   001A00  0EE7               	movlw	low sprintf@ap
  1038   001A02  6E57               	movwf	vfprintf@ap^0,c
  1039   001A04  0E00               	movlw	high sprintf@ap
  1040   001A06  6E58               	movwf	(vfprintf@ap+1)^0,c
  1041   001A08  ECB0  F00D         	call	_vfprintf	;wreg free
  1042   001A0C  0100               	movlb	0	; () banked
  1043   001A0E  51EC               	movf	(sprintf@f+3)& (0+255),w,b
  1044   001A10  25DB               	addwf	sprintf@s& (0+255),w,b
  1045   001A12  6ED9               	movwf	fsr2l,c
  1046   001A14  51ED               	movf	(sprintf@f+4)& (0+255),w,b
  1047   001A16  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1048   001A18  6EDA               	movwf	fsr2h,c
  1049   001A1A  0E00               	movlw	0
  1050   001A1C  6EDF               	movwf	indf2,c
  1051   001A1E                     
  1052                           ; BSR set to: 0
  1053   001A1E  0012               	return		;funcret
  1054   001A20                     __end_of_sprintf:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _vfprintf *****************
  1058 ;; Defined at:
  1059 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1062 ;;		 -> sprintf@f(11), 
  1063 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1064 ;;		 -> STR_1(15), 
  1065 ;;  ap              2   86[COMRAM] PTR PTR void 
  1066 ;;		 -> sprintf@ap(2), 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1069 ;;		 -> STR_1(15), 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2   82[COMRAM] int 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1079 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;Total ram usage:        8 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 8
  1086 ;; This function calls:
  1087 ;;		_vfpfcnvrt
  1088 ;; This function is called by:
  1089 ;;		_sprintf
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text2
  1094   001B60                     __ptext2:
  1095                           	callstack 0
  1096   001B60                     _vfprintf:
  1097                           	callstack 21
  1098   001B60                     
  1099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1100   001B60  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1101   001B64  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1102                           
  1103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1104   001B68  EFC4  F00D         	goto	l1982
  1105   001B6C                     l1980:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1108   001B6C  C053  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1109   001B70  C054  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1110   001B74  0E59               	movlw	low vfprintf@cfmt
  1111   001B76  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1112   001B78  0E00               	movlw	high vfprintf@cfmt
  1113   001B7A  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1114   001B7C  C057  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1115   001B80  C058  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1116   001B84  ECBF  F00A         	call	_vfpfcnvrt	;wreg free
  1117   001B88                     l1982:
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1120   001B88  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1121   001B8C  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1122   001B90                     	if	0	;tblptru may be non-zero
  1123   001B90                     	endif
  1124   001B90                     	if	0	;tblptru may be non-zero
  1125   001B90                     	endif
  1126   001B90  0008               	tblrd		*
  1127   001B92  50F5               	movf	tablat,w,c
  1128   001B94  0900               	iorlw	0
  1129   001B96  A4D8               	btfss	status,2,c
  1130   001B98  EFD0  F00D         	goto	u1061
  1131   001B9C  EFD2  F00D         	goto	u1060
  1132   001BA0                     u1061:
  1133   001BA0  EFB6  F00D         	goto	l1980
  1134   001BA4                     u1060:
  1135   001BA4                     
  1136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1137   001BA4  0E00               	movlw	0
  1138   001BA6  6E54               	movwf	(?_vfprintf+1)^0,c
  1139   001BA8  0E00               	movlw	0
  1140   001BAA  6E53               	movwf	?_vfprintf^0,c
  1141   001BAC  0012               	return		;funcret
  1142   001BAE                     __end_of_vfprintf:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _vfpfcnvrt *****************
  1146 ;; Defined at:
  1147 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1150 ;;		 -> sprintf@f(11), 
  1151 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1152 ;;		 -> vfprintf@cfmt(2), 
  1153 ;;  ap              2   68[COMRAM] PTR PTR void 
  1154 ;;		 -> sprintf@ap(2), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  convarg         8   72[COMRAM] struct .
  1157 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1158 ;;		 -> STR_1(15), 
  1159 ;;  i               2    0        int 
  1160 ;;  done            2    0        int 
  1161 ;;  c               1    0        unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1171 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1174 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1175 ;;Total ram usage:       18 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 7
  1178 ;; This function calls:
  1179 ;;		_dtoa
  1180 ;;		_fputc
  1181 ;; This function is called by:
  1182 ;;		_vfprintf
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text3
  1187   00157E                     __ptext3:
  1188                           	callstack 0
  1189   00157E                     _vfpfcnvrt:
  1190                           	callstack 21
  1191   00157E                     
  1192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1193   00157E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1194   001582  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1195   001586  CFDE FFF6          	movff	postinc2,tblptrl
  1196   00158A  CFDD FFF7          	movff	postdec2,tblptrh
  1197   00158E                     	if	0	;tblptru may be non-zero
  1198   00158E                     	endif
  1199   00158E                     	if	0	;tblptru may be non-zero
  1200   00158E                     	endif
  1201   00158E  0008               	tblrd		*
  1202   001590  50F5               	movf	tablat,w,c
  1203   001592  0A25               	xorlw	37
  1204   001594  A4D8               	btfss	status,2,c
  1205   001596  EFCF  F00A         	goto	u1021
  1206   00159A  EFD1  F00A         	goto	u1020
  1207   00159E                     u1021:
  1208   00159E  EF51  F00B         	goto	l1930
  1209   0015A2                     u1020:
  1210   0015A2                     
  1211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1212   0015A2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1213   0015A6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1214   0015AA  2ADE               	incf	postinc2,f,c
  1215   0015AC  0E00               	movlw	0
  1216   0015AE  22DD               	addwfc	postdec2,f,c
  1217   0015B0                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1219   0015B0  0E00               	movlw	0
  1220   0015B2  0100               	movlb	0	; () banked
  1221   0015B4  6FB1               	movwf	(_width+1)& (0+255),b
  1222   0015B6  0E00               	movlw	0
  1223   0015B8  6FB0               	movwf	_width& (0+255),b
  1224   0015BA  C0B0  F0B8         	movff	_width,_flags
  1225   0015BE                     
  1226                           ; BSR set to: 0
  1227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1228   0015BE  69B2               	setf	_prec& (0+255),b
  1229   0015C0  69B3               	setf	(_prec+1)& (0+255),b
  1230   0015C2                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1233   0015C2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1234   0015C6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1235   0015CA  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1236   0015CE  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1237   0015D2                     
  1238                           ; BSR set to: 0
  1239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1240   0015D2  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1241   0015D6  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1242   0015DA                     	if	0	;tblptru may be non-zero
  1243   0015DA                     	endif
  1244   0015DA                     	if	0	;tblptru may be non-zero
  1245   0015DA                     	endif
  1246   0015DA  0008               	tblrd		*
  1247   0015DC  50F5               	movf	tablat,w,c
  1248   0015DE  0A64               	xorlw	100
  1249   0015E0  B4D8               	btfsc	status,2,c
  1250   0015E2  EFF5  F00A         	goto	u1031
  1251   0015E6  EFF7  F00A         	goto	u1030
  1252   0015EA                     u1031:
  1253   0015EA  EF05  F00B         	goto	l1920
  1254   0015EE                     u1030:
  1255   0015EE                     
  1256                           ; BSR set to: 0
  1257   0015EE  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1258   0015F2  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1259   0015F6                     	if	0	;tblptru may be non-zero
  1260   0015F6                     	endif
  1261   0015F6                     	if	0	;tblptru may be non-zero
  1262   0015F6                     	endif
  1263   0015F6  0008               	tblrd		*
  1264   0015F8  50F5               	movf	tablat,w,c
  1265   0015FA  0A69               	xorlw	105
  1266   0015FC  A4D8               	btfss	status,2,c
  1267   0015FE  EF03  F00B         	goto	u1041
  1268   001602  EF05  F00B         	goto	u1040
  1269   001606                     u1041:
  1270   001606  EF48  F00B         	goto	l1926
  1271   00160A                     u1040:
  1272   00160A                     l1920:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1276   00160A  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1277   00160E  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1278   001612  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1279   001616  0E02               	movlw	2
  1280   001618  26DE               	addwf	postinc2,f,c
  1281   00161A  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1282   00161E  0E00               	movlw	0
  1283   001620  22DD               	addwfc	postdec2,f,c
  1284   001622  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1285   001626  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1286   00162A  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1287   00162E  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1288   001632  0E00               	movlw	0
  1289   001634  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1290   001636  0EFF               	movlw	-1
  1291   001638  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1292   00163A  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1293   00163C  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1294   00163E  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1295   001640  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1296   001642  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1299   001644  0E01               	movlw	1
  1300   001646  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1301   001648  6E47               	movwf	??_vfpfcnvrt^0,c
  1302   00164A  0E00               	movlw	0
  1303   00164C  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1304   00164E  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1305   001650  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1306   001654  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1307   001658  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1308   00165C  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1309   001660                     
  1310                           ; BSR set to: 0
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1312   001660  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1313   001664  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1314   001668  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1315   00166C  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1316   001670  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1317   001674  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1318   001678  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1319   00167C  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1320   001680  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1321   001684  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1322   001688  EC09  F007         	call	_dtoa	;wreg free
  1323   00168C  EF65  F00B         	goto	l1074
  1324   001690                     l1926:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1327   001690  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1328   001694  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1329   001698  2ADE               	incf	postinc2,f,c
  1330   00169A  0E00               	movlw	0
  1331   00169C  22DD               	addwfc	postdec2,f,c
  1332   00169E  EF65  F00B         	goto	l1074
  1333   0016A2                     l1930:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1336   0016A2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1337   0016A6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1338   0016AA  CFDE FFF6          	movff	postinc2,tblptrl
  1339   0016AE  CFDD FFF7          	movff	postdec2,tblptrh
  1340   0016B2                     	if	0	;tblptru may be non-zero
  1341   0016B2                     	endif
  1342   0016B2                     	if	0	;tblptru may be non-zero
  1343   0016B2                     	endif
  1344   0016B2  0008               	tblrd		*
  1345   0016B4  50F5               	movf	tablat,w,c
  1346   0016B6  6E03               	movwf	fputc@c^0,c
  1347   0016B8  6A04               	clrf	(fputc@c+1)^0,c
  1348   0016BA  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1349   0016BE  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1350   0016C2  EC66  F00B         	call	_fputc	;wreg free
  1351   0016C6  EF48  F00B         	goto	l1926
  1352   0016CA                     l1074:
  1353   0016CA  0012               	return		;funcret
  1354   0016CC                     __end_of_vfpfcnvrt:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _dtoa *****************
  1358 ;; Defined at:
  1359 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1362 ;;		 -> sprintf@f(11), 
  1363 ;;  d               8   31[COMRAM] long long 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  n               8   53[COMRAM] long long 
  1366 ;;  i               2   61[COMRAM] int 
  1367 ;;  w               2   51[COMRAM] int 
  1368 ;;  p               2   49[COMRAM] int 
  1369 ;;  s               1   63[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1379 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;Total ram usage:       35 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 6
  1386 ;; This function calls:
  1387 ;;		___aodiv
  1388 ;;		___aomod
  1389 ;;		_abs
  1390 ;;		_pad
  1391 ;; This function is called by:
  1392 ;;		_vfpfcnvrt
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text4
  1397   000E12                     __ptext4:
  1398                           	callstack 0
  1399   000E12                     _dtoa:
  1400                           	callstack 21
  1401   000E12                     
  1402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1403   000E12  C020  F036         	movff	dtoa@d,dtoa@n
  1404   000E16  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  1405   000E1A  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  1406   000E1E  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  1407   000E22  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  1408   000E26  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  1409   000E2A  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  1410   000E2E  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  1411   000E32                     
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1413   000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1414   000E34  EF1E  F007         	goto	u901
  1415   000E38  EF21  F007         	goto	u900
  1416   000E3C                     u901:
  1417   000E3C  0E01               	movlw	1
  1418   000E3E  EF22  F007         	goto	u910
  1419   000E42                     u900:
  1420   000E42  0E00               	movlw	0
  1421   000E44                     u910:
  1422   000E44  6E40               	movwf	dtoa@s^0,c
  1423   000E46                     
  1424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1425   000E46  5040               	movf	dtoa@s^0,w,c
  1426   000E48  B4D8               	btfsc	status,2,c
  1427   000E4A  EF29  F007         	goto	u921
  1428   000E4E  EF2B  F007         	goto	u920
  1429   000E52                     u921:
  1430   000E52  EF3B  F007         	goto	l1832
  1431   000E56                     u920:
  1432   000E56                     
  1433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1434   000E56  1E3D               	comf	(dtoa@n+7)^0,f,c
  1435   000E58  1E3C               	comf	(dtoa@n+6)^0,f,c
  1436   000E5A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1437   000E5C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1438   000E5E  1E39               	comf	(dtoa@n+3)^0,f,c
  1439   000E60  1E38               	comf	(dtoa@n+2)^0,f,c
  1440   000E62  1E37               	comf	(dtoa@n+1)^0,f,c
  1441   000E64  6C36               	negf	dtoa@n^0,c
  1442   000E66  0E00               	movlw	0
  1443   000E68  2237               	addwfc	(dtoa@n+1)^0,f,c
  1444   000E6A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1445   000E6C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1446   000E6E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1447   000E70  223B               	addwfc	(dtoa@n+5)^0,f,c
  1448   000E72  223C               	addwfc	(dtoa@n+6)^0,f,c
  1449   000E74  223D               	addwfc	(dtoa@n+7)^0,f,c
  1450   000E76                     l1832:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1453   000E76  0100               	movlb	0	; () banked
  1454   000E78  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  1455   000E7A  EF49  F007         	goto	u930
  1456   000E7E  51B3               	movf	(_prec+1)& (0+255),w,b
  1457   000E80  E106               	bnz	u931
  1458   000E82  05B2               	decf	_prec& (0+255),w,b
  1459   000E84  B0D8               	btfsc	status,0,c
  1460   000E86  EF47  F007         	goto	u931
  1461   000E8A  EF49  F007         	goto	u930
  1462   000E8E                     u931:
  1463   000E8E  EF4F  F007         	goto	l1053
  1464   000E92                     u930:
  1465   000E92                     
  1466                           ; BSR set to: 0
  1467   000E92  0E00               	movlw	0
  1468   000E94  6E33               	movwf	(dtoa@p+1)^0,c
  1469   000E96  0E01               	movlw	1
  1470   000E98  6E32               	movwf	dtoa@p^0,c
  1471   000E9A  EF53  F007         	goto	l1055
  1472   000E9E                     l1053:
  1473                           
  1474                           ; BSR set to: 0
  1475   000E9E  C0B2  F032         	movff	_prec,dtoa@p
  1476   000EA2  C0B3  F033         	movff	_prec+1,dtoa@p+1
  1477   000EA6                     l1055:
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1481   000EA6  C0B0  F034         	movff	_width,dtoa@w
  1482   000EAA  C0B1  F035         	movff	_width+1,dtoa@w+1
  1483   000EAE                     
  1484                           ; BSR set to: 0
  1485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1486   000EAE  5040               	movf	dtoa@s^0,w,c
  1487   000EB0  B4D8               	btfsc	status,2,c
  1488   000EB2  EF5D  F007         	goto	u941
  1489   000EB6  EF5F  F007         	goto	u940
  1490   000EBA                     u941:
  1491   000EBA  EF76  F007         	goto	l1056
  1492   000EBE                     u940:
  1493   000EBE                     
  1494                           ; BSR set to: 0
  1495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1496   000EBE  0634               	decf	dtoa@w^0,f,c
  1497   000EC0  A0D8               	btfss	status,0,c
  1498   000EC2  0635               	decf	(dtoa@w+1)^0,f,c
  1499   000EC4                     
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1502   000EC4  5040               	movf	dtoa@s^0,w,c
  1503   000EC6  A4D8               	btfss	status,2,c
  1504   000EC8  EF68  F007         	goto	u951
  1505   000ECC  EF6A  F007         	goto	u950
  1506   000ED0                     u951:
  1507   000ED0  EF70  F007         	goto	l1844
  1508   000ED4                     u950:
  1509   000ED4                     
  1510                           ; BSR set to: 0
  1511   000ED4  0E00               	movlw	0
  1512   000ED6  6E31               	movwf	(_dtoa$2120+1)^0,c
  1513   000ED8  0E2B               	movlw	43
  1514   000EDA  6E30               	movwf	_dtoa$2120^0,c
  1515   000EDC  EF74  F007         	goto	l1846
  1516   000EE0                     l1844:
  1517                           
  1518                           ; BSR set to: 0
  1519   000EE0  0E00               	movlw	0
  1520   000EE2  6E31               	movwf	(_dtoa$2120+1)^0,c
  1521   000EE4  0E2D               	movlw	45
  1522   000EE6  6E30               	movwf	_dtoa$2120^0,c
  1523   000EE8                     l1846:
  1524                           
  1525                           ; BSR set to: 0
  1526   000EE8  C030  F040         	movff	_dtoa$2120,dtoa@s
  1527   000EEC                     l1056:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1531   000EEC  0E00               	movlw	0
  1532   000EEE  6E3F               	movwf	(dtoa@i+1)^0,c
  1533   000EF0  0E1F               	movlw	31
  1534   000EF2  6E3E               	movwf	dtoa@i^0,c
  1535   000EF4                     
  1536                           ; BSR set to: 0
  1537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1538   000EF4  0E00               	movlw	0
  1539   000EF6  6FDA               	movwf	(_dbuf+31)& (0+255),b
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1542   000EF8  EFFA  F007         	goto	l1860
  1543   000EFC                     l1850:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1546   000EFC  063E               	decf	dtoa@i^0,f,c
  1547   000EFE  A0D8               	btfss	status,0,c
  1548   000F00  063F               	decf	(dtoa@i+1)^0,f,c
  1549   000F02                     
  1550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1551   000F02  0EBB               	movlw	low _dbuf
  1552   000F04  243E               	addwf	dtoa@i^0,w,c
  1553   000F06  6ED9               	movwf	fsr2l,c
  1554   000F08  0E00               	movlw	high _dbuf
  1555   000F0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  1556   000F0C  6EDA               	movwf	fsr2h,c
  1557   000F0E  C036  F003         	movff	dtoa@n,___aomod@dividend
  1558   000F12  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1559   000F16  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1560   000F1A  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1561   000F1E  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1562   000F22  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1563   000F26  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1564   000F2A  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1565   000F2E  0E0A               	movlw	10
  1566   000F30  6E0B               	movwf	___aomod@divisor^0,c
  1567   000F32  0E00               	movlw	0
  1568   000F34  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1569   000F36  0E00               	movlw	0
  1570   000F38  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1571   000F3A  0E00               	movlw	0
  1572   000F3C  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1573   000F3E  0E00               	movlw	0
  1574   000F40  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1575   000F42  0E00               	movlw	0
  1576   000F44  6E10               	movwf	(___aomod@divisor+5)^0,c
  1577   000F46  0E00               	movlw	0
  1578   000F48  6E11               	movwf	(___aomod@divisor+6)^0,c
  1579   000F4A  0E00               	movlw	0
  1580   000F4C  6E12               	movwf	(___aomod@divisor+7)^0,c
  1581   000F4E  EC0D  F00A         	call	___aomod	;wreg free
  1582   000F52  C003  F028         	movff	?___aomod,??_dtoa
  1583   000F56  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1584   000F5A  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1585   000F5E  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1586   000F62  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1587   000F66  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1588   000F6A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1589   000F6E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1590   000F72  C028  F015         	movff	??_dtoa,abs@a
  1591   000F76  C029  F016         	movff	??_dtoa+1,abs@a+1
  1592   000F7A  EC3D  F00E         	call	_abs	;wreg free
  1593   000F7E  5015               	movf	?_abs^0,w,c
  1594   000F80  0F30               	addlw	48
  1595   000F82  6EDF               	movwf	indf2,c
  1596   000F84                     
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1598   000F84  0632               	decf	dtoa@p^0,f,c
  1599   000F86  A0D8               	btfss	status,0,c
  1600   000F88  0633               	decf	(dtoa@p+1)^0,f,c
  1601   000F8A                     
  1602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1603   000F8A  0634               	decf	dtoa@w^0,f,c
  1604   000F8C  A0D8               	btfss	status,0,c
  1605   000F8E  0635               	decf	(dtoa@w+1)^0,f,c
  1606   000F90                     
  1607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1608   000F90  C036  F003         	movff	dtoa@n,___aodiv@dividend
  1609   000F94  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1610   000F98  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1611   000F9C  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1612   000FA0  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1613   000FA4  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1614   000FA8  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1615   000FAC  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  1616   000FB0  0E0A               	movlw	10
  1617   000FB2  6E0B               	movwf	___aodiv@divisor^0,c
  1618   000FB4  0E00               	movlw	0
  1619   000FB6  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  1620   000FB8  0E00               	movlw	0
  1621   000FBA  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  1622   000FBC  0E00               	movlw	0
  1623   000FBE  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  1624   000FC0  0E00               	movlw	0
  1625   000FC2  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  1626   000FC4  0E00               	movlw	0
  1627   000FC6  6E10               	movwf	(___aodiv@divisor+5)^0,c
  1628   000FC8  0E00               	movlw	0
  1629   000FCA  6E11               	movwf	(___aodiv@divisor+6)^0,c
  1630   000FCC  0E00               	movlw	0
  1631   000FCE  6E12               	movwf	(___aodiv@divisor+7)^0,c
  1632   000FD0  EC49  F009         	call	___aodiv	;wreg free
  1633   000FD4  C003  F036         	movff	?___aodiv,dtoa@n
  1634   000FD8  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  1635   000FDC  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  1636   000FE0  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  1637   000FE4  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  1638   000FE8  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  1639   000FEC  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  1640   000FF0  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  1641   000FF4                     l1860:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1644   000FF4  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1645   000FF6  EF05  F008         	goto	u961
  1646   000FFA  503F               	movf	(dtoa@i+1)^0,w,c
  1647   000FFC  E108               	bnz	u960
  1648   000FFE  043E               	decf	dtoa@i^0,w,c
  1649   001000  A0D8               	btfss	status,0,c
  1650   001002  EF05  F008         	goto	u961
  1651   001006  EF07  F008         	goto	u960
  1652   00100A                     u961:
  1653   00100A  EF23  F008         	goto	l1866
  1654   00100E                     u960:
  1655   00100E  5036               	movf	dtoa@n^0,w,c
  1656   001010  1037               	iorwf	(dtoa@n+1)^0,w,c
  1657   001012  1038               	iorwf	(dtoa@n+2)^0,w,c
  1658   001014  1039               	iorwf	(dtoa@n+3)^0,w,c
  1659   001016  103A               	iorwf	(dtoa@n+4)^0,w,c
  1660   001018  103B               	iorwf	(dtoa@n+5)^0,w,c
  1661   00101A  103C               	iorwf	(dtoa@n+6)^0,w,c
  1662   00101C  103D               	iorwf	(dtoa@n+7)^0,w,c
  1663   00101E  A4D8               	btfss	status,2,c
  1664   001020  EF14  F008         	goto	u971
  1665   001024  EF16  F008         	goto	u970
  1666   001028                     u971:
  1667   001028  EF7E  F007         	goto	l1850
  1668   00102C                     u970:
  1669   00102C  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1670   00102E  EF23  F008         	goto	u980
  1671   001032  5033               	movf	(dtoa@p+1)^0,w,c
  1672   001034  E106               	bnz	u981
  1673   001036  0432               	decf	dtoa@p^0,w,c
  1674   001038  B0D8               	btfsc	status,0,c
  1675   00103A  EF21  F008         	goto	u981
  1676   00103E  EF23  F008         	goto	u980
  1677   001042                     u981:
  1678   001042  EF7E  F007         	goto	l1850
  1679   001046                     u980:
  1680   001046                     l1866:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1683   001046  5040               	movf	dtoa@s^0,w,c
  1684   001048  B4D8               	btfsc	status,2,c
  1685   00104A  EF29  F008         	goto	u991
  1686   00104E  EF2B  F008         	goto	u990
  1687   001052                     u991:
  1688   001052  EF36  F008         	goto	l1872
  1689   001056                     u990:
  1690   001056                     
  1691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1692   001056  063E               	decf	dtoa@i^0,f,c
  1693   001058  A0D8               	btfss	status,0,c
  1694   00105A  063F               	decf	(dtoa@i+1)^0,f,c
  1695   00105C                     
  1696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1697   00105C  0EBB               	movlw	low _dbuf
  1698   00105E  243E               	addwf	dtoa@i^0,w,c
  1699   001060  6ED9               	movwf	fsr2l,c
  1700   001062  0E00               	movlw	high _dbuf
  1701   001064  203F               	addwfc	(dtoa@i+1)^0,w,c
  1702   001066  6EDA               	movwf	fsr2h,c
  1703   001068  C040  FFDF         	movff	dtoa@s,indf2
  1704   00106C                     l1872:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1707   00106C  C01E  F013         	movff	dtoa@fp,pad@fp
  1708   001070  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1709   001074  0EBB               	movlw	low _dbuf
  1710   001076  243E               	addwf	dtoa@i^0,w,c
  1711   001078  6E15               	movwf	pad@buf^0,c
  1712   00107A  0E00               	movlw	high _dbuf
  1713   00107C  203F               	addwfc	(dtoa@i+1)^0,w,c
  1714   00107E  6E16               	movwf	(pad@buf+1)^0,c
  1715   001080  C034  F017         	movff	dtoa@w,pad@p
  1716   001084  C035  F018         	movff	dtoa@w+1,pad@p+1
  1717   001088  EC7D  F00C         	call	_pad	;wreg free
  1718   00108C  0012               	return		;funcret
  1719   00108E                     __end_of_dtoa:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _pad *****************
  1723 ;; Defined at:
  1724 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1727 ;;		 -> sprintf@f(11), 
  1728 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1729 ;;		 -> dbuf(32), 
  1730 ;;  p               2   22[COMRAM] int 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  w               2   27[COMRAM] int 
  1733 ;;  i               2   25[COMRAM] int 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1743 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1747 ;;Total ram usage:       11 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 5
  1750 ;; This function calls:
  1751 ;;		_fputc
  1752 ;;		_fputs
  1753 ;; This function is called by:
  1754 ;;		_dtoa
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text5
  1759   0018FA                     __ptext5:
  1760                           	callstack 0
  1761   0018FA                     _pad:
  1762                           	callstack 21
  1763   0018FA                     
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1765   0018FA  BE18               	btfsc	(pad@p+1)^0,7,c
  1766   0018FC  EF82  F00C         	goto	u851
  1767   001900  EF84  F00C         	goto	u850
  1768   001904                     u851:
  1769   001904  EF8A  F00C         	goto	l1806
  1770   001908                     u850:
  1771   001908  C017  F01C         	movff	pad@p,pad@w
  1772   00190C  C018  F01D         	movff	pad@p+1,pad@w+1
  1773   001910  EF8E  F00C         	goto	l1044
  1774   001914                     l1806:
  1775   001914  0E00               	movlw	0
  1776   001916  6E1D               	movwf	(pad@w+1)^0,c
  1777   001918  0E00               	movlw	0
  1778   00191A  6E1C               	movwf	pad@w^0,c
  1779   00191C                     l1044:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1782   00191C  0E00               	movlw	0
  1783   00191E  6E1B               	movwf	(pad@i+1)^0,c
  1784   001920  0E00               	movlw	0
  1785   001922  6E1A               	movwf	pad@i^0,c
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1788   001924  EFA0  F00C         	goto	l1812
  1789   001928                     l1808:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1792   001928  0E00               	movlw	0
  1793   00192A  6E04               	movwf	(fputc@c+1)^0,c
  1794   00192C  0E20               	movlw	32
  1795   00192E  6E03               	movwf	fputc@c^0,c
  1796   001930  C013  F005         	movff	pad@fp,fputc@fp
  1797   001934  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1798   001938  EC66  F00B         	call	_fputc	;wreg free
  1799   00193C                     
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1801   00193C  4A1A               	infsnz	pad@i^0,f,c
  1802   00193E  2A1B               	incf	(pad@i+1)^0,f,c
  1803   001940                     l1812:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1806   001940  501C               	movf	pad@w^0,w,c
  1807   001942  5C1A               	subwf	pad@i^0,w,c
  1808   001944  501B               	movf	(pad@i+1)^0,w,c
  1809   001946  0A80               	xorlw	128
  1810   001948  6E19               	movwf	??_pad^0,c
  1811   00194A  501D               	movf	(pad@w+1)^0,w,c
  1812   00194C  0A80               	xorlw	128
  1813   00194E  5819               	subwfb	??_pad^0,w,c
  1814   001950  A0D8               	btfss	status,0,c
  1815   001952  EFAD  F00C         	goto	u861
  1816   001956  EFAF  F00C         	goto	u860
  1817   00195A                     u861:
  1818   00195A  EF94  F00C         	goto	l1808
  1819   00195E                     u860:
  1820   00195E                     
  1821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1822   00195E  C015  F00C         	movff	pad@buf,fputs@s
  1823   001962  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1824   001966  C013  F00E         	movff	pad@fp,fputs@fp
  1825   00196A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1826   00196E  ECFA  F00D         	call	_fputs	;wreg free
  1827   001972  0012               	return		;funcret
  1828   001974                     __end_of_pad:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _fputs *****************
  1832 ;; Defined at:
  1833 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1836 ;;		 -> dbuf(32), 
  1837 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1838 ;;		 -> sprintf@f(11), 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  i               2   16[COMRAM] int 
  1841 ;;  c               1   15[COMRAM] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  2   11[COMRAM] int 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;Total ram usage:        7 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 4
  1858 ;; This function calls:
  1859 ;;		_fputc
  1860 ;; This function is called by:
  1861 ;;		_pad
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text6
  1866   001BF4                     __ptext6:
  1867                           	callstack 0
  1868   001BF4                     _fputs:
  1869                           	callstack 21
  1870   001BF4  0E00               	movlw	0
  1871   001BF6  6E12               	movwf	(fputs@i+1)^0,c
  1872   001BF8  0E00               	movlw	0
  1873   001BFA  6E11               	movwf	fputs@i^0,c
  1874   001BFC  EF0B  F00E         	goto	l1720
  1875   001C00                     l1716:
  1876   001C00  C010  F003         	movff	fputs@c,fputc@c
  1877   001C04  6A04               	clrf	(fputc@c+1)^0,c
  1878   001C06  C00E  F005         	movff	fputs@fp,fputc@fp
  1879   001C0A  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1880   001C0E  EC66  F00B         	call	_fputc	;wreg free
  1881   001C12  4A11               	infsnz	fputs@i^0,f,c
  1882   001C14  2A12               	incf	(fputs@i+1)^0,f,c
  1883   001C16                     l1720:
  1884   001C16  5011               	movf	fputs@i^0,w,c
  1885   001C18  240C               	addwf	fputs@s^0,w,c
  1886   001C1A  6ED9               	movwf	fsr2l,c
  1887   001C1C  5012               	movf	(fputs@i+1)^0,w,c
  1888   001C1E  200D               	addwfc	(fputs@s+1)^0,w,c
  1889   001C20  6EDA               	movwf	fsr2h,c
  1890   001C22  50DF               	movf	indf2,w,c
  1891   001C24  6E10               	movwf	fputs@c^0,c
  1892   001C26  5010               	movf	fputs@c^0,w,c
  1893   001C28  A4D8               	btfss	status,2,c
  1894   001C2A  EF19  F00E         	goto	u711
  1895   001C2E  EF1B  F00E         	goto	u710
  1896   001C32                     u711:
  1897   001C32  EF00  F00E         	goto	l1716
  1898   001C36                     u710:
  1899   001C36  0012               	return		;funcret
  1900   001C38                     __end_of_fputs:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _fputc *****************
  1904 ;; Defined at:
  1905 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  c               2    2[COMRAM] int 
  1908 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1909 ;;		 -> sprintf@f(11), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    2[COMRAM] int 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;Total ram usage:        9 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 3
  1928 ;; This function calls:
  1929 ;;		_putch
  1930 ;; This function is called by:
  1931 ;;		_pad
  1932 ;;		_vfpfcnvrt
  1933 ;;		_fputs
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text7
  1938   0016CC                     __ptext7:
  1939                           	callstack 0
  1940   0016CC                     _fputc:
  1941                           	callstack 24
  1942   0016CC  5005               	movf	fputc@fp^0,w,c
  1943   0016CE  1006               	iorwf	(fputc@fp+1)^0,w,c
  1944   0016D0  B4D8               	btfsc	status,2,c
  1945   0016D2  EF6D  F00B         	goto	u671
  1946   0016D6  EF6F  F00B         	goto	u670
  1947   0016DA                     u671:
  1948   0016DA  EF78  F00B         	goto	l1704
  1949   0016DE                     u670:
  1950   0016DE  5005               	movf	fputc@fp^0,w,c
  1951   0016E0  1006               	iorwf	(fputc@fp+1)^0,w,c
  1952   0016E2  A4D8               	btfss	status,2,c
  1953   0016E4  EF76  F00B         	goto	u681
  1954   0016E8  EF78  F00B         	goto	u680
  1955   0016EC                     u681:
  1956   0016EC  EF7D  F00B         	goto	l1706
  1957   0016F0                     u680:
  1958   0016F0                     l1704:
  1959   0016F0  5003               	movf	fputc@c^0,w,c
  1960   0016F2  EC0A  F00F         	call	_putch
  1961   0016F6  EFCA  F00B         	goto	l1099
  1962   0016FA                     l1706:
  1963   0016FA  EE20 F009          	lfsr	2,9
  1964   0016FE  5005               	movf	fputc@fp^0,w,c
  1965   001700  26D9               	addwf	fsr2l,f,c
  1966   001702  5006               	movf	(fputc@fp+1)^0,w,c
  1967   001704  22DA               	addwfc	fsr2h,f,c
  1968   001706  50DE               	movf	postinc2,w,c
  1969   001708  10DE               	iorwf	postinc2,w,c
  1970   00170A  B4D8               	btfsc	status,2,c
  1971   00170C  EF8A  F00B         	goto	u691
  1972   001710  EF8C  F00B         	goto	u690
  1973   001714                     u691:
  1974   001714  EFA7  F00B         	goto	l1710
  1975   001718                     u690:
  1976   001718  EE20 F009          	lfsr	2,9
  1977   00171C  5005               	movf	fputc@fp^0,w,c
  1978   00171E  26D9               	addwf	fsr2l,f,c
  1979   001720  5006               	movf	(fputc@fp+1)^0,w,c
  1980   001722  22DA               	addwfc	fsr2h,f,c
  1981   001724  EE10 F003          	lfsr	1,3
  1982   001728  5005               	movf	fputc@fp^0,w,c
  1983   00172A  26E1               	addwf	fsr1l,f,c
  1984   00172C  5006               	movf	(fputc@fp+1)^0,w,c
  1985   00172E  22E2               	addwfc	fsr1h,f,c
  1986   001730  50DE               	movf	postinc2,w,c
  1987   001732  5CE6               	subwf	postinc1,w,c
  1988   001734  50E6               	movf	postinc1,w,c
  1989   001736  0A80               	xorlw	128
  1990   001738  6E0B               	movwf	(??_fputc+4)^0,c
  1991   00173A  50DE               	movf	postinc2,w,c
  1992   00173C  0A80               	xorlw	128
  1993   00173E  580B               	subwfb	(??_fputc+4)^0,w,c
  1994   001740  B0D8               	btfsc	status,0,c
  1995   001742  EFA5  F00B         	goto	u701
  1996   001746  EFA7  F00B         	goto	u700
  1997   00174A                     u701:
  1998   00174A  EFCA  F00B         	goto	l1099
  1999   00174E                     u700:
  2000   00174E                     l1710:
  2001   00174E  EE20 F003          	lfsr	2,3
  2002   001752  5005               	movf	fputc@fp^0,w,c
  2003   001754  26D9               	addwf	fsr2l,f,c
  2004   001756  5006               	movf	(fputc@fp+1)^0,w,c
  2005   001758  22DA               	addwfc	fsr2h,f,c
  2006   00175A  CFDE F007          	movff	postinc2,??_fputc
  2007   00175E  CFDD F008          	movff	postdec2,??_fputc+1
  2008   001762  C005  FFD9         	movff	fputc@fp,fsr2l
  2009   001766  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2010   00176A  CFDE F009          	movff	postinc2,??_fputc+2
  2011   00176E  CFDD F00A          	movff	postdec2,??_fputc+3
  2012   001772  5007               	movf	??_fputc^0,w,c
  2013   001774  2409               	addwf	(??_fputc+2)^0,w,c
  2014   001776  6ED9               	movwf	fsr2l,c
  2015   001778  5008               	movf	(??_fputc+1)^0,w,c
  2016   00177A  200A               	addwfc	(??_fputc+3)^0,w,c
  2017   00177C  6EDA               	movwf	fsr2h,c
  2018   00177E  C003  FFDF         	movff	fputc@c,indf2
  2019   001782  EE20 F003          	lfsr	2,3
  2020   001786  5005               	movf	fputc@fp^0,w,c
  2021   001788  26D9               	addwf	fsr2l,f,c
  2022   00178A  5006               	movf	(fputc@fp+1)^0,w,c
  2023   00178C  22DA               	addwfc	fsr2h,f,c
  2024   00178E  2ADE               	incf	postinc2,f,c
  2025   001790  0E00               	movlw	0
  2026   001792  22DD               	addwfc	postdec2,f,c
  2027   001794                     l1099:
  2028   001794  0012               	return		;funcret
  2029   001796                     __end_of_fputc:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _putch *****************
  2033 ;; Defined at:
  2034 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  c               1    wreg     unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  c               1    0[COMRAM] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 2
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_fputc
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text8
  2063   001E14                     __ptext8:
  2064                           	callstack 0
  2065   001E14                     _putch:
  2066                           	callstack 24
  2067   001E14  0012               	return		;funcret
  2068   001E16                     __end_of_putch:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _abs *****************
  2072 ;; Defined at:
  2073 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  a               2   20[COMRAM] int 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  2   20[COMRAM] int 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;Total ram usage:        4 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 2
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_dtoa
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text9
  2102   001C7A                     __ptext9:
  2103                           	callstack 0
  2104   001C7A                     _abs:
  2105                           	callstack 24
  2106   001C7A  BE16               	btfsc	(abs@a+1)^0,7,c
  2107   001C7C  EF4A  F00E         	goto	u870
  2108   001C80  5016               	movf	(abs@a+1)^0,w,c
  2109   001C82  E106               	bnz	u871
  2110   001C84  0415               	decf	abs@a^0,w,c
  2111   001C86  B0D8               	btfsc	status,0,c
  2112   001C88  EF48  F00E         	goto	u871
  2113   001C8C  EF4A  F00E         	goto	u870
  2114   001C90                     u871:
  2115   001C90  EF58  F00E         	goto	l1084
  2116   001C94                     u870:
  2117   001C94  C015  F017         	movff	abs@a,??_abs
  2118   001C98  C016  F018         	movff	abs@a+1,??_abs+1
  2119   001C9C  1E17               	comf	??_abs^0,f,c
  2120   001C9E  1E18               	comf	(??_abs+1)^0,f,c
  2121   001CA0  4A17               	infsnz	??_abs^0,f,c
  2122   001CA2  2A18               	incf	(??_abs+1)^0,f,c
  2123   001CA4  C017  F015         	movff	??_abs,?_abs
  2124   001CA8  C018  F016         	movff	??_abs+1,?_abs+1
  2125   001CAC  EF5C  F00E         	goto	l1087
  2126   001CB0                     l1084:
  2127   001CB0  C015  F015         	movff	abs@a,?_abs
  2128   001CB4  C016  F016         	movff	abs@a+1,?_abs+1
  2129   001CB8                     l1087:
  2130   001CB8  0012               	return		;funcret
  2131   001CBA                     __end_of_abs:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function ___aomod *****************
  2135 ;; Defined at:
  2136 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  dividend        8    2[COMRAM] long long 
  2139 ;;  divisor         8   10[COMRAM] long long 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  sign            1   19[COMRAM] unsigned char 
  2142 ;;  counter         1   18[COMRAM] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  8    2[COMRAM] long long 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2152 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;Total ram usage:       18 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_dtoa
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text10
  2167   00141A                     __ptext10:
  2168                           	callstack 0
  2169   00141A                     ___aomod:
  2170                           	callstack 24
  2171   00141A  0E00               	movlw	0
  2172   00141C  6E14               	movwf	___aomod@sign^0,c
  2173   00141E  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2174   001420  EF16  F00A         	goto	u790
  2175   001424  EF14  F00A         	goto	u791
  2176   001428                     u791:
  2177   001428  EF28  F00A         	goto	l1774
  2178   00142C                     u790:
  2179   00142C  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2180   00142E  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2181   001430  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2182   001432  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2183   001434  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2184   001436  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2185   001438  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2186   00143A  6C03               	negf	___aomod@dividend^0,c
  2187   00143C  0E00               	movlw	0
  2188   00143E  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2189   001440  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2190   001442  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2191   001444  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2192   001446  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2193   001448  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2194   00144A  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2195   00144C  0E01               	movlw	1
  2196   00144E  6E14               	movwf	___aomod@sign^0,c
  2197   001450                     l1774:
  2198   001450  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2199   001452  EF2F  F00A         	goto	u800
  2200   001456  EF2D  F00A         	goto	u801
  2201   00145A                     u801:
  2202   00145A  EF3F  F00A         	goto	l1778
  2203   00145E                     u800:
  2204   00145E  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2205   001460  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2206   001462  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2207   001464  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2208   001466  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2209   001468  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2210   00146A  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2211   00146C  6C0B               	negf	___aomod@divisor^0,c
  2212   00146E  0E00               	movlw	0
  2213   001470  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2214   001472  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2215   001474  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2216   001476  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2217   001478  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2218   00147A  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2219   00147C  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2220   00147E                     l1778:
  2221   00147E  500B               	movf	___aomod@divisor^0,w,c
  2222   001480  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2223   001482  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2224   001484  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2225   001486  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2226   001488  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2227   00148A  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2228   00148C  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2229   00148E  B4D8               	btfsc	status,2,c
  2230   001490  EF4C  F00A         	goto	u811
  2231   001494  EF4E  F00A         	goto	u810
  2232   001498                     u811:
  2233   001498  EF96  F00A         	goto	l1794
  2234   00149C                     u810:
  2235   00149C  0E01               	movlw	1
  2236   00149E  6E13               	movwf	___aomod@counter^0,c
  2237   0014A0  EF5C  F00A         	goto	l1784
  2238   0014A4                     l1782:
  2239   0014A4  90D8               	bcf	status,0,c
  2240   0014A6  360B               	rlcf	___aomod@divisor^0,f,c
  2241   0014A8  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2242   0014AA  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2243   0014AC  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2244   0014AE  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2245   0014B0  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2246   0014B2  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2247   0014B4  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2248   0014B6  2A13               	incf	___aomod@counter^0,f,c
  2249   0014B8                     l1784:
  2250   0014B8  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2251   0014BA  EF61  F00A         	goto	u821
  2252   0014BE  EF63  F00A         	goto	u820
  2253   0014C2                     u821:
  2254   0014C2  EF52  F00A         	goto	l1782
  2255   0014C6                     u820:
  2256   0014C6                     l1786:
  2257   0014C6  500B               	movf	___aomod@divisor^0,w,c
  2258   0014C8  5C03               	subwf	___aomod@dividend^0,w,c
  2259   0014CA  500C               	movf	(___aomod@divisor+1)^0,w,c
  2260   0014CC  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2261   0014CE  500D               	movf	(___aomod@divisor+2)^0,w,c
  2262   0014D0  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2263   0014D2  500E               	movf	(___aomod@divisor+3)^0,w,c
  2264   0014D4  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2265   0014D6  500F               	movf	(___aomod@divisor+4)^0,w,c
  2266   0014D8  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2267   0014DA  5010               	movf	(___aomod@divisor+5)^0,w,c
  2268   0014DC  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2269   0014DE  5011               	movf	(___aomod@divisor+6)^0,w,c
  2270   0014E0  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2271   0014E2  5012               	movf	(___aomod@divisor+7)^0,w,c
  2272   0014E4  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2273   0014E6  A0D8               	btfss	status,0,c
  2274   0014E8  EF78  F00A         	goto	u831
  2275   0014EC  EF7A  F00A         	goto	u830
  2276   0014F0                     u831:
  2277   0014F0  EF8A  F00A         	goto	l1790
  2278   0014F4                     u830:
  2279   0014F4  500B               	movf	___aomod@divisor^0,w,c
  2280   0014F6  5E03               	subwf	___aomod@dividend^0,f,c
  2281   0014F8  500C               	movf	(___aomod@divisor+1)^0,w,c
  2282   0014FA  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2283   0014FC  500D               	movf	(___aomod@divisor+2)^0,w,c
  2284   0014FE  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2285   001500  500E               	movf	(___aomod@divisor+3)^0,w,c
  2286   001502  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2287   001504  500F               	movf	(___aomod@divisor+4)^0,w,c
  2288   001506  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2289   001508  5010               	movf	(___aomod@divisor+5)^0,w,c
  2290   00150A  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2291   00150C  5011               	movf	(___aomod@divisor+6)^0,w,c
  2292   00150E  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2293   001510  5012               	movf	(___aomod@divisor+7)^0,w,c
  2294   001512  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2295   001514                     l1790:
  2296   001514  90D8               	bcf	status,0,c
  2297   001516  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2298   001518  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2299   00151A  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2300   00151C  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2301   00151E  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2302   001520  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2303   001522  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2304   001524  320B               	rrcf	___aomod@divisor^0,f,c
  2305   001526  2E13               	decfsz	___aomod@counter^0,f,c
  2306   001528  EF63  F00A         	goto	l1786
  2307   00152C                     l1794:
  2308   00152C  5014               	movf	___aomod@sign^0,w,c
  2309   00152E  B4D8               	btfsc	status,2,c
  2310   001530  EF9C  F00A         	goto	u841
  2311   001534  EF9E  F00A         	goto	u840
  2312   001538                     u841:
  2313   001538  EFAE  F00A         	goto	l1798
  2314   00153C                     u840:
  2315   00153C  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2316   00153E  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2317   001540  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2318   001542  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2319   001544  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2320   001546  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2321   001548  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2322   00154A  6C03               	negf	___aomod@dividend^0,c
  2323   00154C  0E00               	movlw	0
  2324   00154E  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2325   001550  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2326   001552  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2327   001554  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2328   001556  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2329   001558  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2330   00155A  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2331   00155C                     l1798:
  2332   00155C  C003  F003         	movff	___aomod@dividend,?___aomod
  2333   001560  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2334   001564  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2335   001568  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2336   00156C  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2337   001570  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2338   001574  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2339   001578  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2340   00157C  0012               	return		;funcret
  2341   00157E                     __end_of___aomod:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function ___aodiv *****************
  2345 ;; Defined at:
  2346 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  dividend        8    2[COMRAM] long long 
  2349 ;;  divisor         8   10[COMRAM] long long 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  quotient        8   20[COMRAM] long long 
  2352 ;;  sign            1   19[COMRAM] unsigned char 
  2353 ;;  counter         1   18[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  8    2[COMRAM] long long 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2363 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;Total ram usage:       26 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 2
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_dtoa
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text11
  2378   001292                     __ptext11:
  2379                           	callstack 0
  2380   001292                     ___aodiv:
  2381                           	callstack 24
  2382   001292  0E00               	movlw	0
  2383   001294  6E14               	movwf	___aodiv@sign^0,c
  2384   001296  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2385   001298  EF52  F009         	goto	u720
  2386   00129C  EF50  F009         	goto	u721
  2387   0012A0                     u721:
  2388   0012A0  EF64  F009         	goto	l1730
  2389   0012A4                     u720:
  2390   0012A4  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2391   0012A6  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2392   0012A8  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2393   0012AA  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2394   0012AC  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2395   0012AE  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2396   0012B0  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2397   0012B2  6C0B               	negf	___aodiv@divisor^0,c
  2398   0012B4  0E00               	movlw	0
  2399   0012B6  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2400   0012B8  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2401   0012BA  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2402   0012BC  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2403   0012BE  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2404   0012C0  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2405   0012C2  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2406   0012C4  0E01               	movlw	1
  2407   0012C6  6E14               	movwf	___aodiv@sign^0,c
  2408   0012C8                     l1730:
  2409   0012C8  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2410   0012CA  EF6B  F009         	goto	u730
  2411   0012CE  EF69  F009         	goto	u731
  2412   0012D2                     u731:
  2413   0012D2  EF7D  F009         	goto	l1736
  2414   0012D6                     u730:
  2415   0012D6  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2416   0012D8  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2417   0012DA  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2418   0012DC  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2419   0012DE  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2420   0012E0  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2421   0012E2  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2422   0012E4  6C03               	negf	___aodiv@dividend^0,c
  2423   0012E6  0E00               	movlw	0
  2424   0012E8  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2425   0012EA  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2426   0012EC  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2427   0012EE  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2428   0012F0  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2429   0012F2  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2430   0012F4  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2431   0012F6  0E01               	movlw	1
  2432   0012F8  1A14               	xorwf	___aodiv@sign^0,f,c
  2433   0012FA                     l1736:
  2434   0012FA  EE20  F015         	lfsr	2,___aodiv@quotient
  2435   0012FE  0E07               	movlw	7
  2436   001300                     u741:
  2437   001300  6ADE               	clrf	postinc2,c
  2438   001302  06E8               	decf	wreg,f,c
  2439   001304  E2FD               	bc	u741
  2440   001306  500B               	movf	___aodiv@divisor^0,w,c
  2441   001308  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2442   00130A  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2443   00130C  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2444   00130E  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2445   001310  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2446   001312  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2447   001314  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2448   001316  B4D8               	btfsc	status,2,c
  2449   001318  EF90  F009         	goto	u751
  2450   00131C  EF92  F009         	goto	u750
  2451   001320                     u751:
  2452   001320  EFE4  F009         	goto	l1758
  2453   001324                     u750:
  2454   001324  0E01               	movlw	1
  2455   001326  6E13               	movwf	___aodiv@counter^0,c
  2456   001328  EFA0  F009         	goto	l1744
  2457   00132C                     l1742:
  2458   00132C  90D8               	bcf	status,0,c
  2459   00132E  360B               	rlcf	___aodiv@divisor^0,f,c
  2460   001330  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2461   001332  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2462   001334  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2463   001336  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2464   001338  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2465   00133A  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2466   00133C  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2467   00133E  2A13               	incf	___aodiv@counter^0,f,c
  2468   001340                     l1744:
  2469   001340  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2470   001342  EFA5  F009         	goto	u761
  2471   001346  EFA7  F009         	goto	u760
  2472   00134A                     u761:
  2473   00134A  EF96  F009         	goto	l1742
  2474   00134E                     u760:
  2475   00134E                     l1746:
  2476   00134E  90D8               	bcf	status,0,c
  2477   001350  3615               	rlcf	___aodiv@quotient^0,f,c
  2478   001352  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2479   001354  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2480   001356  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2481   001358  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2482   00135A  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2483   00135C  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2484   00135E  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2485   001360  500B               	movf	___aodiv@divisor^0,w,c
  2486   001362  5C03               	subwf	___aodiv@dividend^0,w,c
  2487   001364  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2488   001366  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2489   001368  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2490   00136A  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2491   00136C  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2492   00136E  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2493   001370  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2494   001372  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2495   001374  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2496   001376  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2497   001378  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2498   00137A  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2499   00137C  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2500   00137E  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2501   001380  A0D8               	btfss	status,0,c
  2502   001382  EFC5  F009         	goto	u771
  2503   001386  EFC7  F009         	goto	u770
  2504   00138A                     u771:
  2505   00138A  EFD8  F009         	goto	l1754
  2506   00138E                     u770:
  2507   00138E  500B               	movf	___aodiv@divisor^0,w,c
  2508   001390  5E03               	subwf	___aodiv@dividend^0,f,c
  2509   001392  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2510   001394  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2511   001396  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2512   001398  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2513   00139A  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2514   00139C  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2515   00139E  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2516   0013A0  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2517   0013A2  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2518   0013A4  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2519   0013A6  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2520   0013A8  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2521   0013AA  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2522   0013AC  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2523   0013AE  8015               	bsf	___aodiv@quotient^0,0,c
  2524   0013B0                     l1754:
  2525   0013B0  90D8               	bcf	status,0,c
  2526   0013B2  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2527   0013B4  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2528   0013B6  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2529   0013B8  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2530   0013BA  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2531   0013BC  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2532   0013BE  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2533   0013C0  320B               	rrcf	___aodiv@divisor^0,f,c
  2534   0013C2  2E13               	decfsz	___aodiv@counter^0,f,c
  2535   0013C4  EFA7  F009         	goto	l1746
  2536   0013C8                     l1758:
  2537   0013C8  5014               	movf	___aodiv@sign^0,w,c
  2538   0013CA  B4D8               	btfsc	status,2,c
  2539   0013CC  EFEA  F009         	goto	u781
  2540   0013D0  EFEC  F009         	goto	u780
  2541   0013D4                     u781:
  2542   0013D4  EFFC  F009         	goto	l1762
  2543   0013D8                     u780:
  2544   0013D8  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2545   0013DA  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2546   0013DC  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2547   0013DE  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2548   0013E0  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2549   0013E2  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2550   0013E4  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2551   0013E6  6C15               	negf	___aodiv@quotient^0,c
  2552   0013E8  0E00               	movlw	0
  2553   0013EA  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2554   0013EC  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2555   0013EE  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2556   0013F0  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2557   0013F2  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2558   0013F4  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2559   0013F6  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2560   0013F8                     l1762:
  2561   0013F8  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2562   0013FC  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2563   001400  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2564   001404  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2565   001408  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2566   00140C  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2567   001410  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2568   001414  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2569   001418  0012               	return		;funcret
  2570   00141A                     __end_of___aodiv:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _sendStringSerial4 *****************
  2574 ;; Defined at:
  2575 ;;		line 37 in file "../serial.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  string          2    3[COMRAM] PTR unsigned char 
  2578 ;;		 -> main@readout(50), 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;Total ram usage:        2 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 3
  2597 ;; This function calls:
  2598 ;;		_sendCharSerial4
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text12
  2605   001CBA                     __ptext12:
  2606                           	callstack 0
  2607   001CBA                     _sendStringSerial4:
  2608                           	callstack 27
  2609   001CBA                     
  2610                           ;../serial.c: 40:     while (*string != 0)
  2611   001CBA  EF68  F00E         	goto	l2124
  2612   001CBE                     l2120:
  2613                           
  2614                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  2615   001CBE  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2616   001CC2  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2617   001CC6  50DF               	movf	indf2,w,c
  2618   001CC8  ECDE  F00E         	call	_sendCharSerial4
  2619   001CCC  4A04               	infsnz	sendStringSerial4@string^0,f,c
  2620   001CCE  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  2621   001CD0                     l2124:
  2622                           
  2623                           ;../serial.c: 40:     while (*string != 0)
  2624   001CD0  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2625   001CD4  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2626   001CD8  50DF               	movf	indf2,w,c
  2627   001CDA  A4D8               	btfss	status,2,c
  2628   001CDC  EF72  F00E         	goto	u1111
  2629   001CE0  EF74  F00E         	goto	u1110
  2630   001CE4                     u1111:
  2631   001CE4  EF5F  F00E         	goto	l2120
  2632   001CE8                     u1110:
  2633   001CE8  0012               	return		;funcret
  2634   001CEA                     __end_of_sendStringSerial4:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _sendCharSerial4 *****************
  2638 ;; Defined at:
  2639 ;;		line 30 in file "../serial.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  charToSend      1    wreg     unsigned char 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  charToSend      1    2[COMRAM] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;Total ram usage:        1 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 2
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_sendStringSerial4
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text13
  2668   001DBC                     __ptext13:
  2669                           	callstack 0
  2670   001DBC                     _sendCharSerial4:
  2671                           	callstack 27
  2672                           
  2673                           ;incstack = 0
  2674                           ;sendCharSerial4@charToSend stored from wreg
  2675   001DBC  6E03               	movwf	sendCharSerial4@charToSend^0,c
  2676   001DBE                     l332:
  2677   001DBE  010E               	movlb	14	; () banked
  2678   001DC0  A537               	btfss	55,2,b	;volatile
  2679   001DC2  EFE5  F00E         	goto	u1051
  2680   001DC6  EFE7  F00E         	goto	u1050
  2681   001DCA                     u1051:
  2682   001DCA  EFDF  F00E         	goto	l332
  2683   001DCE                     u1050:
  2684   001DCE                     
  2685                           ; BSR set to: 14
  2686                           ;../serial.c: 32:     TX4REG = charToSend;
  2687   001DCE  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2688   001DD2                     
  2689                           ; BSR set to: 14
  2690   001DD2  0012               	return		;funcret
  2691   001DD4                     __end_of_sendCharSerial4:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _initUSART4 *****************
  2695 ;; Defined at:
  2696 ;;		line 5 in file "../serial.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 2
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text14
  2725   001D9E                     __ptext14:
  2726                           	callstack 0
  2727   001D9E                     _initUSART4:
  2728                           	callstack 28
  2729   001D9E                     
  2730                           ;../serial.c: 9:     RC0PPS = 0x12;
  2731   001D9E  0E12               	movlw	18
  2732   001DA0  010E               	movlb	14	; () banked
  2733   001DA2  6F62               	movwf	98,b	;volatile
  2734                           
  2735                           ;../serial.c: 10:     RX4PPS = 0x11;
  2736   001DA4  0E11               	movlw	17
  2737   001DA6  6F15               	movwf	21,b	;volatile
  2738   001DA8                     
  2739                           ; BSR set to: 14
  2740                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2741   001DA8  97E9               	bcf	233,3,b	;volatile
  2742   001DAA                     
  2743                           ; BSR set to: 14
  2744                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  2745   001DAA  95E8               	bcf	232,2,b	;volatile
  2746                           
  2747                           ;../serial.c: 14:     SP4BRGL = 103;
  2748   001DAC  0E67               	movlw	103
  2749   001DAE  6FE5               	movwf	229,b	;volatile
  2750                           
  2751                           ;../serial.c: 15:     SP4BRGH = 0;
  2752   001DB0  0E00               	movlw	0
  2753   001DB2  6FE6               	movwf	230,b	;volatile
  2754   001DB4                     
  2755                           ; BSR set to: 14
  2756                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  2757   001DB4  89E7               	bsf	231,4,b	;volatile
  2758   001DB6                     
  2759                           ; BSR set to: 14
  2760                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  2761   001DB6  8BE8               	bsf	232,5,b	;volatile
  2762   001DB8                     
  2763                           ; BSR set to: 14
  2764                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  2765   001DB8  8FE7               	bsf	231,7,b	;volatile
  2766   001DBA                     
  2767                           ; BSR set to: 14
  2768   001DBA  0012               	return		;funcret
  2769   001DBC                     __end_of_initUSART4:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _initDCmotorsPWM *****************
  2773 ;; Defined at:
  2774 ;;		line 5 in file "../dc_motor.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  PWMperiod       2    2[COMRAM] int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, prodl, prodh
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 2
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text15
  2803   001BAE                     __ptext15:
  2804                           	callstack 0
  2805   001BAE                     _initDCmotorsPWM:
  2806                           	callstack 28
  2807   001BAE                     
  2808                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2809   001BAE  9485               	bcf	133,2,c	;volatile
  2810                           
  2811                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2812   001BB0  9885               	bcf	133,4,c	;volatile
  2813                           
  2814                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2815   001BB2  9E83               	bcf	131,7,c	;volatile
  2816                           
  2817                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2818   001BB4  9C87               	bcf	135,6,c	;volatile
  2819                           
  2820                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2821   001BB6  947D               	bcf	125,2,c	;volatile
  2822                           
  2823                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2824   001BB8  987D               	bcf	125,4,c	;volatile
  2825                           
  2826                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2827   001BBA  9E7B               	bcf	123,7,c	;volatile
  2828                           
  2829                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2830   001BBC  9C7F               	bcf	127,6,c	;volatile
  2831   001BBE                     
  2832                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  2833   001BBE  50BD               	movf	189,w,c	;volatile
  2834   001BC0  0B8F               	andlw	-113
  2835   001BC2  0930               	iorlw	48
  2836   001BC4  6EBD               	movwf	189,c	;volatile
  2837                           
  2838                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2839   001BC6  0EE0               	movlw	-32
  2840   001BC8  16BE               	andwf	190,f,c	;volatile
  2841                           
  2842                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2843   001BCA  50BF               	movf	191,w,c	;volatile
  2844   001BCC  0BF0               	andlw	-16
  2845   001BCE  0901               	iorlw	1
  2846   001BD0  6EBF               	movwf	191,c	;volatile
  2847   001BD2                     
  2848                           ;../dc_motor.c: 23:     T2PR=PWMperiod * 2000000 - 1;
  2849   001BD2  5003               	movf	initDCmotorsPWM@PWMperiod^0,w,c
  2850   001BD4  0D80               	mullw	-128
  2851   001BD6  04F3               	decf	243,w,c
  2852   001BD8  6EBC               	movwf	188,c	;volatile
  2853   001BDA                     
  2854                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  2855   001BDA  8EBD               	bsf	189,7,c	;volatile
  2856   001BDC                     
  2857                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  2858   001BDC  0E0A               	movlw	10
  2859   001BDE  010E               	movlb	14	; () banked
  2860   001BE0  6F74               	movwf	116,b	;volatile
  2861   001BE2                     
  2862                           ; BSR set to: 14
  2863                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  2864   001BE2  0E0B               	movlw	11
  2865   001BE4  6F69               	movwf	105,b	;volatile
  2866   001BE6                     
  2867                           ; BSR set to: 14
  2868                           ;../dc_motor.c: 29:     PWM6DCH=0;
  2869   001BE6  0E00               	movlw	0
  2870   001BE8  6EA3               	movwf	163,c	;volatile
  2871   001BEA                     
  2872                           ; BSR set to: 14
  2873                           ;../dc_motor.c: 30:     PWM7DCH=0;
  2874   001BEA  0E00               	movlw	0
  2875   001BEC  6EA0               	movwf	160,c	;volatile
  2876   001BEE                     
  2877                           ; BSR set to: 14
  2878                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  2879   001BEE  8EA4               	bsf	164,7,c	;volatile
  2880   001BF0                     
  2881                           ; BSR set to: 14
  2882                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  2883   001BF0  8EA1               	bsf	161,7,c	;volatile
  2884   001BF2                     
  2885                           ; BSR set to: 14
  2886   001BF2  0012               	return		;funcret
  2887   001BF4                     __end_of_initDCmotorsPWM:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _color_read *****************
  2891 ;; Defined at:
  2892 ;;		line 110 in file "../color.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  rgb             2   13[COMRAM] PTR struct RGB_val
  2895 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;Total ram usage:        4 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 5
  2914 ;; This function calls:
  2915 ;;		_color_read_Blue
  2916 ;;		_color_read_Green
  2917 ;;		_color_read_Luminosity
  2918 ;;		_color_read_Red
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text16
  2925   001854                     __ptext16:
  2926                           	callstack 0
  2927   001854                     _color_read:
  2928                           	callstack 25
  2929   001854                     
  2930                           ;../color.c: 110: void color_read(struct RGB_val *rgb);../color.c: 111: {;../color.c: 11
      +                          2:     rgb->L = color_read_Luminosity();
  2931   001854  EC38  F00D         	call	_color_read_Luminosity	;wreg free
  2932   001858  C00E  FFD9         	movff	color_read@rgb,fsr2l
  2933   00185C  C00F  FFDA         	movff	color_read@rgb+1,fsr2h
  2934   001860  C007  FFDE         	movff	?_color_read_Luminosity,postinc2
  2935   001864  C008  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  2936   001868                     
  2937                           ;../color.c: 113:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2938   001868  0E09               	movlw	9
  2939   00186A  6E11               	movwf	(??_color_read+1)^0,c
  2940   00186C  0E1E               	movlw	30
  2941   00186E  6E10               	movwf	??_color_read^0,c
  2942   001870  0EE4               	movlw	228
  2943   001872                     u1357:
  2944   001872  2EE8               	decfsz	wreg,f,c
  2945   001874  D7FE               	bra	u1357
  2946   001876  2E10               	decfsz	??_color_read^0,f,c
  2947   001878  D7FC               	bra	u1357
  2948   00187A  2E11               	decfsz	(??_color_read+1)^0,f,c
  2949   00187C  D7FA               	bra	u1357
  2950   00187E  D000               	nop2	
  2951   001880                     
  2952                           ;../color.c: 114:     rgb->R = color_read_Red();
  2953   001880  EC10  F00D         	call	_color_read_Red	;wreg free
  2954   001884  EE20 F002          	lfsr	2,2
  2955   001888  500E               	movf	color_read@rgb^0,w,c
  2956   00188A  26D9               	addwf	fsr2l,f,c
  2957   00188C  500F               	movf	(color_read@rgb+1)^0,w,c
  2958   00188E  22DA               	addwfc	fsr2h,f,c
  2959   001890  C007  FFDE         	movff	?_color_read_Red,postinc2
  2960   001894  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  2961                           
  2962                           ;../color.c: 115:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2963   001898  0E09               	movlw	9
  2964   00189A  6E11               	movwf	(??_color_read+1)^0,c
  2965   00189C  0E1E               	movlw	30
  2966   00189E  6E10               	movwf	??_color_read^0,c
  2967   0018A0  0EE4               	movlw	228
  2968   0018A2                     u1367:
  2969   0018A2  2EE8               	decfsz	wreg,f,c
  2970   0018A4  D7FE               	bra	u1367
  2971   0018A6  2E10               	decfsz	??_color_read^0,f,c
  2972   0018A8  D7FC               	bra	u1367
  2973   0018AA  2E11               	decfsz	(??_color_read+1)^0,f,c
  2974   0018AC  D7FA               	bra	u1367
  2975   0018AE  D000               	nop2	
  2976   0018B0                     
  2977                           ;../color.c: 116:     rgb->G = color_read_Green();
  2978   0018B0  EC60  F00D         	call	_color_read_Green	;wreg free
  2979   0018B4  EE20 F004          	lfsr	2,4
  2980   0018B8  500E               	movf	color_read@rgb^0,w,c
  2981   0018BA  26D9               	addwf	fsr2l,f,c
  2982   0018BC  500F               	movf	(color_read@rgb+1)^0,w,c
  2983   0018BE  22DA               	addwfc	fsr2h,f,c
  2984   0018C0  C007  FFDE         	movff	?_color_read_Green,postinc2
  2985   0018C4  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  2986   0018C8                     
  2987                           ;../color.c: 117:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2988   0018C8  0E09               	movlw	9
  2989   0018CA  6E11               	movwf	(??_color_read+1)^0,c
  2990   0018CC  0E1E               	movlw	30
  2991   0018CE  6E10               	movwf	??_color_read^0,c
  2992   0018D0  0EE4               	movlw	228
  2993   0018D2                     u1377:
  2994   0018D2  2EE8               	decfsz	wreg,f,c
  2995   0018D4  D7FE               	bra	u1377
  2996   0018D6  2E10               	decfsz	??_color_read^0,f,c
  2997   0018D8  D7FC               	bra	u1377
  2998   0018DA  2E11               	decfsz	(??_color_read+1)^0,f,c
  2999   0018DC  D7FA               	bra	u1377
  3000   0018DE  D000               	nop2	
  3001                           
  3002                           ;../color.c: 118:     rgb->B = color_read_Blue();
  3003   0018E0  EC88  F00D         	call	_color_read_Blue	;wreg free
  3004   0018E4  EE20 F006          	lfsr	2,6
  3005   0018E8  500E               	movf	color_read@rgb^0,w,c
  3006   0018EA  26D9               	addwf	fsr2l,f,c
  3007   0018EC  500F               	movf	(color_read@rgb+1)^0,w,c
  3008   0018EE  22DA               	addwfc	fsr2h,f,c
  3009   0018F0  C007  FFDE         	movff	?_color_read_Blue,postinc2
  3010   0018F4  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  3011   0018F8  0012               	return		;funcret
  3012   0018FA                     __end_of_color_read:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function _color_read_Red *****************
  3016 ;; Defined at:
  3017 ;;		line 68 in file "../color.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  tmp             2   11[COMRAM] unsigned int 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    6[COMRAM] unsigned int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;Total ram usage:        7 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 4
  3038 ;; This function calls:
  3039 ;;		_I2C_2_Master_Read
  3040 ;;		_I2C_2_Master_RepStart
  3041 ;;		_I2C_2_Master_Start
  3042 ;;		_I2C_2_Master_Stop
  3043 ;;		_I2C_2_Master_Write
  3044 ;; This function is called by:
  3045 ;;		_color_read
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text17
  3050   001A20                     __ptext17:
  3051                           	callstack 0
  3052   001A20                     _color_read_Red:
  3053                           	callstack 25
  3054   001A20                     
  3055                           ;../color.c: 70:  unsigned int tmp;;../color.c: 71:  I2C_2_Master_Start();
  3056   001A20  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3057                           
  3058                           ;../color.c: 72:  I2C_2_Master_Write(0x52 | 0x00);
  3059   001A24  0E52               	movlw	82
  3060   001A26  ECEA  F00E         	call	_I2C_2_Master_Write
  3061                           
  3062                           ;../color.c: 73:  I2C_2_Master_Write(0xA0 | 0x16);
  3063   001A2A  0EB6               	movlw	182
  3064   001A2C  ECEA  F00E         	call	_I2C_2_Master_Write
  3065                           
  3066                           ;../color.c: 74:  I2C_2_Master_RepStart();
  3067   001A30  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3068                           
  3069                           ;../color.c: 75:  I2C_2_Master_Write(0x52 | 0x01);
  3070   001A34  0E53               	movlw	83
  3071   001A36  ECEA  F00E         	call	_I2C_2_Master_Write
  3072                           
  3073                           ;../color.c: 76:  tmp=I2C_2_Master_Read(1);
  3074   001A3A  0E01               	movlw	1
  3075   001A3C  EC1C  F00E         	call	_I2C_2_Master_Read
  3076   001A40  6E09               	movwf	??_color_read_Red^0,c
  3077   001A42  5009               	movf	??_color_read_Red^0,w,c
  3078   001A44  6E0C               	movwf	color_read_Red@tmp^0,c
  3079   001A46  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  3080                           
  3081                           ;../color.c: 77:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3082   001A48  0E00               	movlw	0
  3083   001A4A  EC1C  F00E         	call	_I2C_2_Master_Read
  3084   001A4E  6E09               	movwf	??_color_read_Red^0,c
  3085   001A50  5009               	movf	??_color_read_Red^0,w,c
  3086   001A52  6E0B               	movwf	(??_color_read_Red+2)^0,c
  3087   001A54  6A0A               	clrf	(??_color_read_Red+1)^0,c
  3088   001A56  500C               	movf	color_read_Red@tmp^0,w,c
  3089   001A58  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  3090   001A5A  6E0C               	movwf	color_read_Red@tmp^0,c
  3091   001A5C  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  3092   001A5E  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  3093   001A60  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  3094                           
  3095                           ;../color.c: 78:  I2C_2_Master_Stop();
  3096   001A62  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3097   001A66                     
  3098                           ;../color.c: 79:  return tmp;
  3099   001A66  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  3100   001A6A  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3101   001A6E  0012               	return		;funcret
  3102   001A70                     __end_of_color_read_Red:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _color_read_Luminosity *****************
  3106 ;; Defined at:
  3107 ;;		line 54 in file "../color.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  tmp             2   11[COMRAM] unsigned int 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  2    6[COMRAM] unsigned int 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;Total ram usage:        7 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 4
  3128 ;; This function calls:
  3129 ;;		_I2C_2_Master_Read
  3130 ;;		_I2C_2_Master_RepStart
  3131 ;;		_I2C_2_Master_Start
  3132 ;;		_I2C_2_Master_Stop
  3133 ;;		_I2C_2_Master_Write
  3134 ;; This function is called by:
  3135 ;;		_color_read
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text18
  3140   001A70                     __ptext18:
  3141                           	callstack 0
  3142   001A70                     _color_read_Luminosity:
  3143                           	callstack 25
  3144   001A70                     
  3145                           ;../color.c: 56:  unsigned int tmp;;../color.c: 57:  I2C_2_Master_Start();
  3146   001A70  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3147                           
  3148                           ;../color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  3149   001A74  0E52               	movlw	82
  3150   001A76  ECEA  F00E         	call	_I2C_2_Master_Write
  3151                           
  3152                           ;../color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
  3153   001A7A  0EB4               	movlw	180
  3154   001A7C  ECEA  F00E         	call	_I2C_2_Master_Write
  3155                           
  3156                           ;../color.c: 60:  I2C_2_Master_RepStart();
  3157   001A80  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3158                           
  3159                           ;../color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  3160   001A84  0E53               	movlw	83
  3161   001A86  ECEA  F00E         	call	_I2C_2_Master_Write
  3162                           
  3163                           ;../color.c: 62:  tmp=I2C_2_Master_Read(1);
  3164   001A8A  0E01               	movlw	1
  3165   001A8C  EC1C  F00E         	call	_I2C_2_Master_Read
  3166   001A90  6E09               	movwf	??_color_read_Luminosity^0,c
  3167   001A92  5009               	movf	??_color_read_Luminosity^0,w,c
  3168   001A94  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3169   001A96  6A0D               	clrf	(color_read_Luminosity@tmp+1)^0,c
  3170                           
  3171                           ;../color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3172   001A98  0E00               	movlw	0
  3173   001A9A  EC1C  F00E         	call	_I2C_2_Master_Read
  3174   001A9E  6E09               	movwf	??_color_read_Luminosity^0,c
  3175   001AA0  5009               	movf	??_color_read_Luminosity^0,w,c
  3176   001AA2  6E0B               	movwf	(??_color_read_Luminosity+2)^0,c
  3177   001AA4  6A0A               	clrf	(??_color_read_Luminosity+1)^0,c
  3178   001AA6  500C               	movf	color_read_Luminosity@tmp^0,w,c
  3179   001AA8  100A               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  3180   001AAA  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3181   001AAC  500D               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  3182   001AAE  100B               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  3183   001AB0  6E0D               	movwf	(color_read_Luminosity@tmp+1)^0,c
  3184                           
  3185                           ;../color.c: 64:  I2C_2_Master_Stop();
  3186   001AB2  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3187   001AB6                     
  3188                           ;../color.c: 65:  return tmp;
  3189   001AB6  C00C  F007         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  3190   001ABA  C00D  F008         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  3191   001ABE  0012               	return		;funcret
  3192   001AC0                     __end_of_color_read_Luminosity:
  3193                           	callstack 0
  3194                           
  3195 ;; *************** function _color_read_Green *****************
  3196 ;; Defined at:
  3197 ;;		line 82 in file "../color.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  tmp             2   11[COMRAM] unsigned int 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2    6[COMRAM] unsigned int 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;Total ram usage:        7 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 4
  3218 ;; This function calls:
  3219 ;;		_I2C_2_Master_Read
  3220 ;;		_I2C_2_Master_RepStart
  3221 ;;		_I2C_2_Master_Start
  3222 ;;		_I2C_2_Master_Stop
  3223 ;;		_I2C_2_Master_Write
  3224 ;; This function is called by:
  3225 ;;		_color_read
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text19
  3230   001AC0                     __ptext19:
  3231                           	callstack 0
  3232   001AC0                     _color_read_Green:
  3233                           	callstack 25
  3234   001AC0                     
  3235                           ;../color.c: 84:  unsigned int tmp;;../color.c: 85:  I2C_2_Master_Start();
  3236   001AC0  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3237                           
  3238                           ;../color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  3239   001AC4  0E52               	movlw	82
  3240   001AC6  ECEA  F00E         	call	_I2C_2_Master_Write
  3241                           
  3242                           ;../color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  3243   001ACA  0EB8               	movlw	184
  3244   001ACC  ECEA  F00E         	call	_I2C_2_Master_Write
  3245                           
  3246                           ;../color.c: 88:  I2C_2_Master_RepStart();
  3247   001AD0  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3248                           
  3249                           ;../color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  3250   001AD4  0E53               	movlw	83
  3251   001AD6  ECEA  F00E         	call	_I2C_2_Master_Write
  3252                           
  3253                           ;../color.c: 90:  tmp=I2C_2_Master_Read(1);
  3254   001ADA  0E01               	movlw	1
  3255   001ADC  EC1C  F00E         	call	_I2C_2_Master_Read
  3256   001AE0  6E09               	movwf	??_color_read_Green^0,c
  3257   001AE2  5009               	movf	??_color_read_Green^0,w,c
  3258   001AE4  6E0C               	movwf	color_read_Green@tmp^0,c
  3259   001AE6  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  3260                           
  3261                           ;../color.c: 91:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3262   001AE8  0E00               	movlw	0
  3263   001AEA  EC1C  F00E         	call	_I2C_2_Master_Read
  3264   001AEE  6E09               	movwf	??_color_read_Green^0,c
  3265   001AF0  5009               	movf	??_color_read_Green^0,w,c
  3266   001AF2  6E0B               	movwf	(??_color_read_Green+2)^0,c
  3267   001AF4  6A0A               	clrf	(??_color_read_Green+1)^0,c
  3268   001AF6  500C               	movf	color_read_Green@tmp^0,w,c
  3269   001AF8  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  3270   001AFA  6E0C               	movwf	color_read_Green@tmp^0,c
  3271   001AFC  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  3272   001AFE  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  3273   001B00  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  3274                           
  3275                           ;../color.c: 92:  I2C_2_Master_Stop();
  3276   001B02  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3277   001B06                     
  3278                           ;../color.c: 93:  return tmp;
  3279   001B06  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  3280   001B0A  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3281   001B0E  0012               	return		;funcret
  3282   001B10                     __end_of_color_read_Green:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _color_read_Blue *****************
  3286 ;; Defined at:
  3287 ;;		line 96 in file "../color.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  tmp             2   11[COMRAM] unsigned int 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  2    6[COMRAM] unsigned int 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;Total ram usage:        7 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 4
  3308 ;; This function calls:
  3309 ;;		_I2C_2_Master_Read
  3310 ;;		_I2C_2_Master_RepStart
  3311 ;;		_I2C_2_Master_Start
  3312 ;;		_I2C_2_Master_Stop
  3313 ;;		_I2C_2_Master_Write
  3314 ;; This function is called by:
  3315 ;;		_color_read
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text20
  3320   001B10                     __ptext20:
  3321                           	callstack 0
  3322   001B10                     _color_read_Blue:
  3323                           	callstack 25
  3324   001B10                     
  3325                           ;../color.c: 98:  unsigned int tmp;;../color.c: 99:  I2C_2_Master_Start();
  3326   001B10  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3327                           
  3328                           ;../color.c: 100:  I2C_2_Master_Write(0x52 | 0x00);
  3329   001B14  0E52               	movlw	82
  3330   001B16  ECEA  F00E         	call	_I2C_2_Master_Write
  3331                           
  3332                           ;../color.c: 101:  I2C_2_Master_Write(0xA0 | 0x1A);
  3333   001B1A  0EBA               	movlw	186
  3334   001B1C  ECEA  F00E         	call	_I2C_2_Master_Write
  3335                           
  3336                           ;../color.c: 102:  I2C_2_Master_RepStart();
  3337   001B20  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3338                           
  3339                           ;../color.c: 103:  I2C_2_Master_Write(0x52 | 0x01);
  3340   001B24  0E53               	movlw	83
  3341   001B26  ECEA  F00E         	call	_I2C_2_Master_Write
  3342                           
  3343                           ;../color.c: 104:  tmp=I2C_2_Master_Read(1);
  3344   001B2A  0E01               	movlw	1
  3345   001B2C  EC1C  F00E         	call	_I2C_2_Master_Read
  3346   001B30  6E09               	movwf	??_color_read_Blue^0,c
  3347   001B32  5009               	movf	??_color_read_Blue^0,w,c
  3348   001B34  6E0C               	movwf	color_read_Blue@tmp^0,c
  3349   001B36  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  3350                           
  3351                           ;../color.c: 105:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3352   001B38  0E00               	movlw	0
  3353   001B3A  EC1C  F00E         	call	_I2C_2_Master_Read
  3354   001B3E  6E09               	movwf	??_color_read_Blue^0,c
  3355   001B40  5009               	movf	??_color_read_Blue^0,w,c
  3356   001B42  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  3357   001B44  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  3358   001B46  500C               	movf	color_read_Blue@tmp^0,w,c
  3359   001B48  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  3360   001B4A  6E0C               	movwf	color_read_Blue@tmp^0,c
  3361   001B4C  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  3362   001B4E  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  3363   001B50  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  3364                           
  3365                           ;../color.c: 106:  I2C_2_Master_Stop();
  3366   001B52  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3367   001B56                     
  3368                           ;../color.c: 107:  return tmp;
  3369   001B56  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  3370   001B5A  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3371   001B5E  0012               	return		;funcret
  3372   001B60                     __end_of_color_read_Blue:
  3373                           	callstack 0
  3374                           
  3375 ;; *************** function _I2C_2_Master_RepStart *****************
  3376 ;; Defined at:
  3377 ;;		line 33 in file "../i2c.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;Total ram usage:        0 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 3
  3398 ;; This function calls:
  3399 ;;		_I2C_2_Master_Idle
  3400 ;; This function is called by:
  3401 ;;		_color_read_Luminosity
  3402 ;;		_color_read_Red
  3403 ;;		_color_read_Green
  3404 ;;		_color_read_Blue
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text21
  3409   001DEC                     __ptext21:
  3410                           	callstack 0
  3411   001DEC                     _I2C_2_Master_RepStart:
  3412                           	callstack 25
  3413   001DEC                     
  3414                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3415   001DEC  EC8A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3416   001DF0                     
  3417                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3418   001DF0  010E               	movlb	14	; () banked
  3419   001DF2  83DA               	bsf	218,1,b	;volatile
  3420   001DF4                     
  3421                           ; BSR set to: 14
  3422   001DF4  0012               	return		;funcret
  3423   001DF6                     __end_of_I2C_2_Master_RepStart:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _I2C_2_Master_Read *****************
  3427 ;; Defined at:
  3428 ;;		line 51 in file "../i2c.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  ack             1    wreg     unsigned char 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  ack             1    4[COMRAM] unsigned char 
  3433 ;;  tmp             1    5[COMRAM] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      unsigned char 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3447 ;;Total ram usage:        3 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 3
  3450 ;; This function calls:
  3451 ;;		_I2C_2_Master_Idle
  3452 ;; This function is called by:
  3453 ;;		_color_read_Luminosity
  3454 ;;		_color_read_Red
  3455 ;;		_color_read_Green
  3456 ;;		_color_read_Blue
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text22
  3461   001C38                     __ptext22:
  3462                           	callstack 0
  3463   001C38                     _I2C_2_Master_Read:
  3464                           	callstack 25
  3465                           
  3466                           ; BSR set to: 14
  3467                           ;incstack = 0
  3468                           ;I2C_2_Master_Read@ack stored from wreg
  3469   001C38  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  3470   001C3A                     
  3471                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  3472   001C3A  EC8A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3473   001C3E                     
  3474                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3475   001C3E  010E               	movlb	14	; () banked
  3476   001C40  87DA               	bsf	218,3,b	;volatile
  3477                           
  3478                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  3479   001C42  EC8A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3480   001C46                     
  3481                           ;../i2c.c: 57:   tmp = SSP2BUF;
  3482   001C46  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3483                           
  3484                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  3485   001C4A  EC8A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3486   001C4E                     
  3487                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3488   001C4E  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  3489   001C50  B4D8               	btfsc	status,2,c
  3490   001C52  EF2D  F00E         	goto	u1001
  3491   001C56  EF31  F00E         	goto	u1000
  3492   001C5A                     u1001:
  3493   001C5A  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3494   001C5C  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  3495   001C5E  EF32  F00E         	goto	u1018
  3496   001C62                     u1000:
  3497   001C62  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3498   001C64                     u1018:
  3499   001C64  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  3500   001C66  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  3501   001C68  010E               	movlb	14	; () banked
  3502   001C6A  51DA               	movf	218,w,b	;volatile
  3503   001C6C  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3504   001C6E  0BDF               	andlw	-33
  3505   001C70  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3506   001C72  6FDA               	movwf	218,b	;volatile
  3507   001C74                     
  3508                           ; BSR set to: 14
  3509                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3510   001C74  89DA               	bsf	218,4,b	;volatile
  3511   001C76                     
  3512                           ; BSR set to: 14
  3513                           ;../i2c.c: 61:   return tmp;
  3514   001C76  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  3515   001C78                     
  3516                           ; BSR set to: 14
  3517   001C78  0012               	return		;funcret
  3518   001C7A                     __end_of_I2C_2_Master_Read:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _color_processor_easy *****************
  3522 ;; Defined at:
  3523 ;;		line 133 in file "../color.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  3526 ;;		 -> main@RGB_recorded(8), 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  b               2   10[COMRAM] unsigned int 
  3529 ;;  a               2    8[COMRAM] unsigned int 
  3530 ;;  c               2    6[COMRAM] unsigned int 
  3531 ;;  color           2    4[COMRAM] unsigned int 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    2[COMRAM] unsigned int 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;Total ram usage:       10 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 2
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text23
  3556   001796                     __ptext23:
  3557                           	callstack 0
  3558   001796                     _color_processor_easy:
  3559                           	callstack 28
  3560   001796                     
  3561                           ;../color.c: 133: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 134
      +                          : {;../color.c: 135:     unsigned int a = rgb->R;
  3562   001796  EE20 F002          	lfsr	2,2
  3563   00179A  5003               	movf	color_processor_easy@rgb^0,w,c
  3564   00179C  26D9               	addwf	fsr2l,f,c
  3565   00179E  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3566   0017A0  22DA               	addwfc	fsr2h,f,c
  3567   0017A2  CFDE F009          	movff	postinc2,color_processor_easy@a
  3568   0017A6  CFDD F00A          	movff	postdec2,color_processor_easy@a+1
  3569                           
  3570                           ;../color.c: 136:     unsigned int b = rgb->G;
  3571   0017AA  EE20 F004          	lfsr	2,4
  3572   0017AE  5003               	movf	color_processor_easy@rgb^0,w,c
  3573   0017B0  26D9               	addwf	fsr2l,f,c
  3574   0017B2  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3575   0017B4  22DA               	addwfc	fsr2h,f,c
  3576   0017B6  CFDE F00B          	movff	postinc2,color_processor_easy@b
  3577   0017BA  CFDD F00C          	movff	postdec2,color_processor_easy@b+1
  3578                           
  3579                           ;../color.c: 137:     unsigned int c = rgb->B;
  3580   0017BE  EE20 F006          	lfsr	2,6
  3581   0017C2  5003               	movf	color_processor_easy@rgb^0,w,c
  3582   0017C4  26D9               	addwf	fsr2l,f,c
  3583   0017C6  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3584   0017C8  22DA               	addwfc	fsr2h,f,c
  3585   0017CA  CFDE F007          	movff	postinc2,color_processor_easy@c
  3586   0017CE  CFDD F008          	movff	postdec2,color_processor_easy@c+1
  3587   0017D2                     
  3588                           ;../color.c: 138:     unsigned int color;;../color.c: 139:     if (a>=b & a>=c){color=1;
      +                          }
  3589   0017D2  500B               	movf	color_processor_easy@b^0,w,c
  3590   0017D4  5C09               	subwf	color_processor_easy@a^0,w,c
  3591   0017D6  500C               	movf	(color_processor_easy@b+1)^0,w,c
  3592   0017D8  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3593   0017DA  A0D8               	btfss	status,0,c
  3594   0017DC  EFF2  F00B         	goto	u1071
  3595   0017E0  EFF4  F00B         	goto	u1070
  3596   0017E4                     u1071:
  3597   0017E4  EF05  F00C         	goto	l2052
  3598   0017E8                     u1070:
  3599   0017E8  5007               	movf	color_processor_easy@c^0,w,c
  3600   0017EA  5C09               	subwf	color_processor_easy@a^0,w,c
  3601   0017EC  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3602   0017EE  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3603   0017F0  A0D8               	btfss	status,0,c
  3604   0017F2  EFFD  F00B         	goto	u1081
  3605   0017F6  EFFF  F00B         	goto	u1080
  3606   0017FA                     u1081:
  3607   0017FA  EF05  F00C         	goto	l2052
  3608   0017FE                     u1080:
  3609   0017FE  0E00               	movlw	0
  3610   001800  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3611   001802  0E01               	movlw	1
  3612   001804  6E05               	movwf	color_processor_easy@color^0,c
  3613   001806  EF25  F00C         	goto	l2060
  3614   00180A                     l2052:
  3615   00180A  5009               	movf	color_processor_easy@a^0,w,c
  3616   00180C  5C0B               	subwf	color_processor_easy@b^0,w,c
  3617   00180E  500A               	movf	(color_processor_easy@a+1)^0,w,c
  3618   001810  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3619   001812  A0D8               	btfss	status,0,c
  3620   001814  EF0E  F00C         	goto	u1091
  3621   001818  EF10  F00C         	goto	u1090
  3622   00181C                     u1091:
  3623   00181C  EF21  F00C         	goto	l2058
  3624   001820                     u1090:
  3625   001820  5007               	movf	color_processor_easy@c^0,w,c
  3626   001822  5C0B               	subwf	color_processor_easy@b^0,w,c
  3627   001824  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3628   001826  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3629   001828  A0D8               	btfss	status,0,c
  3630   00182A  EF19  F00C         	goto	u1101
  3631   00182E  EF1B  F00C         	goto	u1100
  3632   001832                     u1101:
  3633   001832  EF21  F00C         	goto	l2058
  3634   001836                     u1100:
  3635   001836  0E00               	movlw	0
  3636   001838  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3637   00183A  0E02               	movlw	2
  3638   00183C  6E05               	movwf	color_processor_easy@color^0,c
  3639   00183E  EF25  F00C         	goto	l2060
  3640   001842                     l2058:
  3641   001842  0E00               	movlw	0
  3642   001844  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3643   001846  0E03               	movlw	3
  3644   001848  6E05               	movwf	color_processor_easy@color^0,c
  3645   00184A                     l2060:
  3646                           
  3647                           ;../color.c: 142:     return color;
  3648   00184A  C005  F003         	movff	color_processor_easy@color,?_color_processor_easy
  3649   00184E  C006  F004         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  3650   001852  0012               	return		;funcret
  3651   001854                     __end_of_color_processor_easy:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _color_click_init *****************
  3655 ;; Defined at:
  3656 ;;		line 5 in file "../color.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;Total ram usage:        1 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 5
  3677 ;; This function calls:
  3678 ;;		_I2C_2_Master_Init
  3679 ;;		_color_writetoaddr
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text24
  3686   001974                     __ptext24:
  3687                           	callstack 0
  3688   001974                     _color_click_init:
  3689                           	callstack 25
  3690   001974                     
  3691                           ;../color.c: 8:     I2C_2_Master_Init();
  3692   001974  EC75  F00E         	call	_I2C_2_Master_Init	;wreg free
  3693   001978                     
  3694                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  3695   001978  0E01               	movlw	1
  3696   00197A  6E05               	movwf	color_writetoaddr@value^0,c
  3697   00197C  0E00               	movlw	0
  3698   00197E  ECAF  F00E         	call	_color_writetoaddr
  3699   001982                     
  3700                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3701   001982  0E3F               	movlw	63
  3702   001984  6E07               	movwf	??_color_click_init^0,c
  3703   001986  0E55               	movlw	85
  3704   001988                     u1387:
  3705   001988  2EE8               	decfsz	wreg,f,c
  3706   00198A  D7FE               	bra	u1387
  3707   00198C  2E07               	decfsz	??_color_click_init^0,f,c
  3708   00198E  D7FC               	bra	u1387
  3709   001990  F000               	nop	
  3710   001992                     
  3711                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  3712   001992  0E03               	movlw	3
  3713   001994  6E05               	movwf	color_writetoaddr@value^0,c
  3714   001996  0E00               	movlw	0
  3715   001998  ECAF  F00E         	call	_color_writetoaddr
  3716   00199C                     
  3717                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3718   00199C  0ED5               	movlw	213
  3719   00199E  6E05               	movwf	color_writetoaddr@value^0,c
  3720   0019A0  0E01               	movlw	1
  3721   0019A2  ECAF  F00E         	call	_color_writetoaddr
  3722   0019A6                     
  3723                           ;../color.c: 21:     TRISHbits.TRISH1 = 0;
  3724   0019A6  9288               	bcf	136,1,c	;volatile
  3725   0019A8                     
  3726                           ;../color.c: 22:     TRISDbits.TRISD3 = 0;
  3727   0019A8  9684               	bcf	132,3,c	;volatile
  3728   0019AA                     
  3729                           ;../color.c: 23:     TRISDbits.TRISD4 = 0;
  3730   0019AA  9884               	bcf	132,4,c	;volatile
  3731   0019AC                     
  3732                           ;../color.c: 24:     TRISHbits.TRISH0 = 0;
  3733   0019AC  9088               	bcf	136,0,c	;volatile
  3734   0019AE                     
  3735                           ;../color.c: 25:     TRISFbits.TRISF0 = 0;
  3736   0019AE  9086               	bcf	134,0,c	;volatile
  3737   0019B0                     
  3738                           ;../color.c: 27:     LATHbits.LATH1 = 1;
  3739   0019B0  8280               	bsf	128,1,c	;volatile
  3740   0019B2                     
  3741                           ;../color.c: 28:     LATDbits.LATD3 = 1;
  3742   0019B2  867C               	bsf	124,3,c	;volatile
  3743   0019B4                     
  3744                           ;../color.c: 29:     LATDbits.LATD4 = 1;
  3745   0019B4  887C               	bsf	124,4,c	;volatile
  3746   0019B6                     
  3747                           ;../color.c: 30:     LATHbits.LATH0 = 1;
  3748   0019B6  8080               	bsf	128,0,c	;volatile
  3749   0019B8                     
  3750                           ;../color.c: 31:     LATFbits.LATF0 = 1;
  3751   0019B8  807E               	bsf	126,0,c	;volatile
  3752   0019BA                     
  3753                           ;../color.c: 34:     LATDbits.LATD7=0;
  3754   0019BA  9E7C               	bcf	124,7,c	;volatile
  3755   0019BC                     
  3756                           ;../color.c: 35:     LATHbits.LATH3=0;
  3757   0019BC  9680               	bcf	128,3,c	;volatile
  3758   0019BE                     
  3759                           ;../color.c: 36:     TRISDbits.TRISD7=0;
  3760   0019BE  9E84               	bcf	132,7,c	;volatile
  3761   0019C0                     
  3762                           ;../color.c: 37:     TRISHbits.TRISH3=0;
  3763   0019C0  9688               	bcf	136,3,c	;volatile
  3764   0019C2                     
  3765                           ;../color.c: 39:     TRISFbits.TRISF2=1;
  3766   0019C2  8486               	bsf	134,2,c	;volatile
  3767   0019C4                     
  3768                           ;../color.c: 40:     ANSELFbits.ANSELF2=0;
  3769   0019C4  010E               	movlb	14	; () banked
  3770   0019C6  95B4               	bcf	180,2,b	;volatile
  3771   0019C8                     
  3772                           ; BSR set to: 14
  3773                           ;../color.c: 41:     TRISFbits.TRISF3=1;
  3774   0019C8  8686               	bsf	134,3,c	;volatile
  3775   0019CA                     
  3776                           ; BSR set to: 14
  3777                           ;../color.c: 42:     ANSELFbits.ANSELF3=0;
  3778   0019CA  97B4               	bcf	180,3,b	;volatile
  3779   0019CC                     
  3780                           ; BSR set to: 14
  3781   0019CC  0012               	return		;funcret
  3782   0019CE                     __end_of_color_click_init:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function _color_writetoaddr *****************
  3786 ;; Defined at:
  3787 ;;		line 45 in file "../color.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  address         1    wreg     unsigned char 
  3790 ;;  value           1    4[COMRAM] unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  address         1    5[COMRAM] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3802 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;Total ram usage:        2 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 4
  3809 ;; This function calls:
  3810 ;;		_I2C_2_Master_Start
  3811 ;;		_I2C_2_Master_Stop
  3812 ;;		_I2C_2_Master_Write
  3813 ;; This function is called by:
  3814 ;;		_color_click_init
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text25
  3819   001D5E                     __ptext25:
  3820                           	callstack 0
  3821   001D5E                     _color_writetoaddr:
  3822                           	callstack 25
  3823                           
  3824                           ; BSR set to: 14
  3825                           ;incstack = 0
  3826                           ;color_writetoaddr@address stored from wreg
  3827   001D5E  6E06               	movwf	color_writetoaddr@address^0,c
  3828   001D60                     
  3829                           ;../color.c: 45: void color_writetoaddr(char address, char value);../color.c: 46: {;../c
      +                          olor.c: 47:     I2C_2_Master_Start();
  3830   001D60  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3831                           
  3832                           ;../color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  3833   001D64  0E52               	movlw	82
  3834   001D66  ECEA  F00E         	call	_I2C_2_Master_Write
  3835                           
  3836                           ;../color.c: 49:     I2C_2_Master_Write(0x80 | address);
  3837   001D6A  5006               	movf	color_writetoaddr@address^0,w,c
  3838   001D6C  0980               	iorlw	128
  3839   001D6E  ECEA  F00E         	call	_I2C_2_Master_Write
  3840                           
  3841                           ;../color.c: 50:     I2C_2_Master_Write(value);
  3842   001D72  5005               	movf	color_writetoaddr@value^0,w,c
  3843   001D74  ECEA  F00E         	call	_I2C_2_Master_Write
  3844                           
  3845                           ;../color.c: 51:     I2C_2_Master_Stop();
  3846   001D78  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3847   001D7C  0012               	return		;funcret
  3848   001D7E                     __end_of_color_writetoaddr:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _I2C_2_Master_Write *****************
  3852 ;; Defined at:
  3853 ;;		line 45 in file "../i2c.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  data_byte       1    wreg     unsigned char 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  data_byte       1    3[COMRAM] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;Total ram usage:        1 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 3
  3874 ;; This function calls:
  3875 ;;		_I2C_2_Master_Idle
  3876 ;; This function is called by:
  3877 ;;		_color_writetoaddr
  3878 ;;		_color_read_Luminosity
  3879 ;;		_color_read_Red
  3880 ;;		_color_read_Green
  3881 ;;		_color_read_Blue
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text26
  3886   001DD4                     __ptext26:
  3887                           	callstack 0
  3888   001DD4                     _I2C_2_Master_Write:
  3889                           	callstack 25
  3890                           
  3891                           ;incstack = 0
  3892                           ;I2C_2_Master_Write@data_byte stored from wreg
  3893   001DD4  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  3894   001DD6                     
  3895                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  3896   001DD6  EC8A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3897   001DDA                     
  3898                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  3899   001DDA  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3900   001DDE  0012               	return		;funcret
  3901   001DE0                     __end_of_I2C_2_Master_Write:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _I2C_2_Master_Stop *****************
  3905 ;; Defined at:
  3906 ;;		line 39 in file "../i2c.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 3
  3927 ;; This function calls:
  3928 ;;		_I2C_2_Master_Idle
  3929 ;; This function is called by:
  3930 ;;		_color_writetoaddr
  3931 ;;		_color_read_Luminosity
  3932 ;;		_color_read_Red
  3933 ;;		_color_read_Green
  3934 ;;		_color_read_Blue
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text27
  3939   001DF6                     __ptext27:
  3940                           	callstack 0
  3941   001DF6                     _I2C_2_Master_Stop:
  3942                           	callstack 25
  3943   001DF6                     
  3944                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  3945   001DF6  EC8A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3946   001DFA                     
  3947                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3948   001DFA  010E               	movlb	14	; () banked
  3949   001DFC  85DA               	bsf	218,2,b	;volatile
  3950   001DFE                     
  3951                           ; BSR set to: 14
  3952   001DFE  0012               	return		;funcret
  3953   001E00                     __end_of_I2C_2_Master_Stop:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _I2C_2_Master_Start *****************
  3957 ;; Defined at:
  3958 ;;		line 27 in file "../i2c.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 3
  3979 ;; This function calls:
  3980 ;;		_I2C_2_Master_Idle
  3981 ;; This function is called by:
  3982 ;;		_color_writetoaddr
  3983 ;;		_color_read_Luminosity
  3984 ;;		_color_read_Red
  3985 ;;		_color_read_Green
  3986 ;;		_color_read_Blue
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text28
  3991   001E00                     __ptext28:
  3992                           	callstack 0
  3993   001E00                     _I2C_2_Master_Start:
  3994                           	callstack 25
  3995   001E00                     
  3996                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  3997   001E00  EC8A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3998   001E04                     
  3999                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4000   001E04  010E               	movlb	14	; () banked
  4001   001E06  81DA               	bsf	218,0,b	;volatile
  4002   001E08                     
  4003                           ; BSR set to: 14
  4004   001E08  0012               	return		;funcret
  4005   001E0A                     __end_of_I2C_2_Master_Start:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _I2C_2_Master_Idle *****************
  4009 ;; Defined at:
  4010 ;;		line 22 in file "../i2c.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 2
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_I2C_2_Master_Start
  4035 ;;		_I2C_2_Master_RepStart
  4036 ;;		_I2C_2_Master_Stop
  4037 ;;		_I2C_2_Master_Write
  4038 ;;		_I2C_2_Master_Read
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text29
  4043   001D14                     __ptext29:
  4044                           	callstack 0
  4045   001D14                     _I2C_2_Master_Idle:
  4046                           	callstack 25
  4047   001D14                     l95:
  4048   001D14  010E               	movlb	14	; () banked
  4049   001D16  B5D8               	btfsc	216,2,b	;volatile
  4050   001D18  EF90  F00E         	goto	u881
  4051   001D1C  EF92  F00E         	goto	u880
  4052   001D20                     u881:
  4053   001D20  EF8A  F00E         	goto	l95
  4054   001D24                     u880:
  4055   001D24                     
  4056                           ; BSR set to: 14
  4057   001D24  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4058   001D28  0E1F               	movlw	31
  4059   001D2A  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  4060   001D2C  A4D8               	btfss	status,2,c
  4061   001D2E  EF9B  F00E         	goto	u891
  4062   001D32  EF9D  F00E         	goto	u890
  4063   001D36                     u891:
  4064   001D36  EF8A  F00E         	goto	l95
  4065   001D3A                     u890:
  4066   001D3A                     
  4067                           ; BSR set to: 14
  4068   001D3A  0012               	return		;funcret
  4069   001D3C                     __end_of_I2C_2_Master_Idle:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _I2C_2_Master_Init *****************
  4073 ;; Defined at:
  4074 ;;		line 4 in file "../i2c.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; Hardware stack levels required when called: 2
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_color_click_init
  4099 ;;		_main
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text30
  4104   001CEA                     __ptext30:
  4105                           	callstack 0
  4106   001CEA                     _I2C_2_Master_Init:
  4107                           	callstack 27
  4108   001CEA                     
  4109                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4110   001CEA  010E               	movlb	14	; () banked
  4111   001CEC  51D9               	movf	217,w,b	;volatile
  4112   001CEE  0BF0               	andlw	-16
  4113   001CF0  0908               	iorlw	8
  4114   001CF2  6FD9               	movwf	217,b	;volatile
  4115   001CF4                     
  4116                           ; BSR set to: 14
  4117                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4118   001CF4  8BD9               	bsf	217,5,b	;volatile
  4119                           
  4120                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4121   001CF6  0E9F               	movlw	159
  4122   001CF8  6FD6               	movwf	214,b	;volatile
  4123   001CFA                     
  4124                           ; BSR set to: 14
  4125                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4126   001CFA  8A84               	bsf	132,5,c	;volatile
  4127   001CFC                     
  4128                           ; BSR set to: 14
  4129                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4130   001CFC  8C84               	bsf	132,6,c	;volatile
  4131   001CFE                     
  4132                           ; BSR set to: 14
  4133                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4134   001CFE  9BA7               	bcf	167,5,b	;volatile
  4135   001D00                     
  4136                           ; BSR set to: 14
  4137                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4138   001D00  9DA7               	bcf	167,6,b	;volatile
  4139                           
  4140                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  4141   001D02  0E1D               	movlw	29
  4142   001D04  6F1D               	movwf	29,b	;volatile
  4143                           
  4144                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  4145   001D06  0E1E               	movlw	30
  4146   001D08  6F1C               	movwf	28,b	;volatile
  4147                           
  4148                           ;../i2c.c: 18:   RD5PPS=0x1C;
  4149   001D0A  0E1C               	movlw	28
  4150   001D0C  6F6F               	movwf	111,b	;volatile
  4151                           
  4152                           ;../i2c.c: 19:   RD6PPS=0x1B;
  4153   001D0E  0E1B               	movlw	27
  4154   001D10  6F70               	movwf	112,b	;volatile
  4155   001D12                     
  4156                           ; BSR set to: 14
  4157   001D12  0012               	return		;funcret
  4158   001D14                     __end_of_I2C_2_Master_Init:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _Timer0_init *****************
  4162 ;; Defined at:
  4163 ;;		line 40 in file "../rc_servo.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 2
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text31
  4192   001D7E                     __ptext31:
  4193                           	callstack 0
  4194   001D7E                     _Timer0_init:
  4195                           	callstack 28
  4196   001D7E                     
  4197                           ;../rc_servo.c: 42:     T0CON1bits.T0CS=0b010;
  4198   001D7E  50D6               	movf	214,w,c	;volatile
  4199   001D80  0B1F               	andlw	-225
  4200   001D82  0940               	iorlw	64
  4201   001D84  6ED6               	movwf	214,c	;volatile
  4202   001D86                     
  4203                           ;../rc_servo.c: 43:     T0CON1bits.T0ASYNC=1;
  4204   001D86  88D6               	bsf	214,4,c	;volatile
  4205                           
  4206                           ;../rc_servo.c: 44:     T0CON1bits.T0CKPS=0b0111;
  4207   001D88  50D6               	movf	214,w,c	;volatile
  4208   001D8A  0BF0               	andlw	-16
  4209   001D8C  0907               	iorlw	7
  4210   001D8E  6ED6               	movwf	214,c	;volatile
  4211   001D90                     
  4212                           ;../rc_servo.c: 46:     T0CON0bits.T016BIT=1;
  4213   001D90  88D5               	bsf	213,4,c	;volatile
  4214                           
  4215                           ;../rc_servo.c: 49:     TMR0H=(65535-2500)>>8;
  4216   001D92  0EF6               	movlw	246
  4217   001D94  6ED4               	movwf	212,c	;volatile
  4218                           
  4219                           ;../rc_servo.c: 50:     TMR0L=(unsigned char)(65535-2500);
  4220   001D96  0E3B               	movlw	59
  4221   001D98  6ED3               	movwf	211,c	;volatile
  4222   001D9A                     
  4223                           ;../rc_servo.c: 51:     T0CON0bits.T0EN=1;
  4224   001D9A  8ED5               	bsf	213,7,c	;volatile
  4225   001D9C  0012               	return		;funcret
  4226   001D9E                     __end_of_Timer0_init:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _Interrupts_init *****************
  4230 ;; Defined at:
  4231 ;;		line 8 in file "../rc_servo.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		None
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 2
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text32
  4260   001DE0                     __ptext32:
  4261                           	callstack 0
  4262   001DE0                     _Interrupts_init:
  4263                           	callstack 28
  4264   001DE0                     
  4265                           ;../rc_servo.c: 10:     PIE0bits.TMR0IE=1;
  4266   001DE0  010E               	movlb	14	; () banked
  4267   001DE2  8B29               	bsf	41,5,b	;volatile
  4268                           
  4269                           ;../rc_servo.c: 11:     INTCONbits.PEIE=1;
  4270   001DE4  8CF2               	bsf	242,6,c	;volatile
  4271                           
  4272                           ;../rc_servo.c: 12:     INTCONbits.IPEN=0;
  4273   001DE6  9AF2               	bcf	242,5,c	;volatile
  4274                           
  4275                           ;../rc_servo.c: 13:     INTCONbits.GIE=1;
  4276   001DE8  8EF2               	bsf	242,7,c	;volatile
  4277   001DEA                     
  4278                           ; BSR set to: 14
  4279   001DEA  0012               	return		;funcret
  4280   001DEC                     __end_of_Interrupts_init:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _HighISR *****************
  4284 ;; Defined at:
  4285 ;;		line 20 in file "../rc_servo.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 1
  4306 ;; This function calls:
  4307 ;;		_write16bitTMR0val
  4308 ;; This function is called by:
  4309 ;;		Interrupt level 2
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	intcode
  4314   000008                     __pintcode:
  4315                           	callstack 0
  4316   000008                     _HighISR:
  4317                           	callstack 21
  4318                           
  4319                           ; BSR set to: 14
  4320                           ;incstack = 0
  4321   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4322   00000A                     
  4323                           ;../rc_servo.c: 22:     if (PIR0bits.TMR0IF)
  4324   00000A  010E               	movlb	14	; () banked
  4325   00000C  AB33               	btfss	51,5,b	;volatile
  4326   00000E  EF0B  F000         	goto	i2u122_41
  4327   000012  EF0D  F000         	goto	i2u122_40
  4328   000016                     i2u122_41:
  4329   000016  EF26  F000         	goto	i2l2204
  4330   00001A                     i2u122_40:
  4331   00001A                     
  4332                           ; BSR set to: 14
  4333                           ;../rc_servo.c: 23:     {;../rc_servo.c: 24:         if(LATEbits.LATE2){
  4334   00001A  A47D               	btfss	125,2,c	;volatile
  4335   00001C  EF12  F000         	goto	i2u123_41
  4336   000020  EF14  F000         	goto	i2u123_40
  4337   000024                     i2u123_41:
  4338   000024  EF1E  F000         	goto	i2l2200
  4339   000028                     i2u123_40:
  4340   000028                     
  4341                           ; BSR set to: 14
  4342                           ;../rc_servo.c: 25:             write16bitTMR0val(65535-off_period);
  4343   000028  0100               	movlb	0	; () banked
  4344   00002A  1DB4               	comf	_off_period& (0+255),w,b
  4345   00002C  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4346   00002E  1DB5               	comf	(_off_period+1)& (0+255),w,b
  4347   000030  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4348   000032  EC05  F00F         	call	_write16bitTMR0val	;wreg free
  4349   000036                     
  4350                           ;../rc_servo.c: 26:             LATEbits.LATE2=0;
  4351   000036  947D               	bcf	125,2,c	;volatile
  4352                           
  4353                           ;../rc_servo.c: 28:         } else {
  4354   000038  EF26  F000         	goto	i2l2204
  4355   00003C                     i2l2200:
  4356                           
  4357                           ; BSR set to: 14
  4358                           ;../rc_servo.c: 29:             write16bitTMR0val(65535-on_period);
  4359   00003C  0100               	movlb	0	; () banked
  4360   00003E  1DB6               	comf	_on_period& (0+255),w,b
  4361   000040  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4362   000042  1DB7               	comf	(_on_period+1)& (0+255),w,b
  4363   000044  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4364   000046  EC05  F00F         	call	_write16bitTMR0val	;wreg free
  4365   00004A                     
  4366                           ;../rc_servo.c: 30:             LATEbits.LATE2=1;
  4367   00004A  847D               	bsf	125,2,c	;volatile
  4368   00004C                     i2l2204:
  4369                           
  4370                           ;../rc_servo.c: 34:     PIR0bits.TMR0IF=0;
  4371   00004C  010E               	movlb	14	; () banked
  4372   00004E  9B33               	bcf	51,5,b	;volatile
  4373   000050                     
  4374                           ; BSR set to: 14
  4375   000050  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4376   000052  0011               	retfie		f
  4377   000054                     __end_of_HighISR:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _write16bitTMR0val *****************
  4381 ;; Defined at:
  4382 ;;		line 58 in file "../rc_servo.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  tmp             2    0[COMRAM] unsigned int 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;Total ram usage:        2 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_HighISR
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text34
  4410   001E0A                     __ptext34:
  4411                           	callstack 0
  4412   001E0A                     _write16bitTMR0val:
  4413                           	callstack 21
  4414   001E0A                     
  4415                           ;../rc_servo.c: 58: void write16bitTMR0val(unsigned int tmp);../rc_servo.c: 59: {;../rc_
      +                          servo.c: 60:     TMR0H=tmp>>8;
  4416   001E0A  5002               	movf	(write16bitTMR0val@tmp+1)^0,w,c
  4417   001E0C  6ED4               	movwf	212,c	;volatile
  4418   001E0E                     
  4419                           ;../rc_servo.c: 61:     TMR0L=tmp;
  4420   001E0E  C001  FFD3         	movff	write16bitTMR0val@tmp,4051	;volatile
  4421   001E12  0012               	return		;funcret
  4422   001E14                     __end_of_write16bitTMR0val:
  4423                           	callstack 0
  4424                           
  4425                           	psect	rparam
  4426   000000                     
  4427                           	psect	temp
  4428   00005D                     btemp:
  4429                           	callstack 0
  4430   00005D                     	ds	1
  4431   000000                     int$flags	set	btemp
  4432   000000                     wtemp8	set	btemp+1
  4433   000000                     ttemp5	set	btemp+1
  4434   000000                     ttemp6	set	btemp+4
  4435   000000                     ttemp7	set	btemp+8
  4436                           
  4437                           	psect	idloc
  4438                           
  4439                           ;Config register IDLOC0 @ 0x200000
  4440                           ;	unspecified, using default values
  4441   200000                     	org	2097152
  4442   200000  0FFF               	dw	4095
  4443                           
  4444                           ;Config register IDLOC1 @ 0x200002
  4445                           ;	unspecified, using default values
  4446   200002                     	org	2097154
  4447   200002  0FFF               	dw	4095
  4448                           
  4449                           ;Config register IDLOC2 @ 0x200004
  4450                           ;	unspecified, using default values
  4451   200004                     	org	2097156
  4452   200004  0FFF               	dw	4095
  4453                           
  4454                           ;Config register IDLOC3 @ 0x200006
  4455                           ;	unspecified, using default values
  4456   200006                     	org	2097158
  4457   200006  0FFF               	dw	4095
  4458                           
  4459                           ;Config register IDLOC4 @ 0x200008
  4460                           ;	unspecified, using default values
  4461   200008                     	org	2097160
  4462   200008  0FFF               	dw	4095
  4463                           
  4464                           ;Config register IDLOC5 @ 0x20000A
  4465                           ;	unspecified, using default values
  4466   20000A                     	org	2097162
  4467   20000A  0FFF               	dw	4095
  4468                           
  4469                           ;Config register IDLOC6 @ 0x20000C
  4470                           ;	unspecified, using default values
  4471   20000C                     	org	2097164
  4472   20000C  0FFF               	dw	4095
  4473                           
  4474                           ;Config register IDLOC7 @ 0x20000E
  4475                           ;	unspecified, using default values
  4476   20000E                     	org	2097166
  4477   20000E  0FFF               	dw	4095
  4478                           
  4479                           	psect	config
  4480                           
  4481                           ;Config register CONFIG1L @ 0x300000
  4482                           ;	External Oscillator mode Selection bits
  4483                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4484                           ;	Power-up default value for COSC bits
  4485                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4486   300000                     	org	3145728
  4487   300000  AA                 	db	170
  4488                           
  4489                           ;Config register CONFIG1H @ 0x300001
  4490                           ;	unspecified, using default values
  4491                           ;	Clock Out Enable bit
  4492                           ;	CLKOUTEN = 0x1, unprogrammed default
  4493                           ;	Clock Switch Enable bit
  4494                           ;	CSWEN = 0x1, unprogrammed default
  4495                           ;	Fail-Safe Clock Monitor Enable bit
  4496                           ;	FCMEN = 0x1, unprogrammed default
  4497   300001                     	org	3145729
  4498   300001  FF                 	db	255
  4499                           
  4500                           ;Config register CONFIG2L @ 0x300002
  4501                           ;	unspecified, using default values
  4502                           ;	Master Clear Enable bit
  4503                           ;	MCLRE = 0x1, unprogrammed default
  4504                           ;	Power-up Timer Enable bit
  4505                           ;	PWRTE = 0x1, unprogrammed default
  4506                           ;	Low-power BOR enable bit
  4507                           ;	LPBOREN = 0x1, unprogrammed default
  4508                           ;	Brown-out Reset Enable bits
  4509                           ;	BOREN = 0x3, unprogrammed default
  4510   300002                     	org	3145730
  4511   300002  FF                 	db	255
  4512                           
  4513                           ;Config register CONFIG2H @ 0x300003
  4514                           ;	unspecified, using default values
  4515                           ;	Brown Out Reset Voltage selection bits
  4516                           ;	BORV = 0x3, unprogrammed default
  4517                           ;	ZCD Disable bit
  4518                           ;	ZCD = 0x1, unprogrammed default
  4519                           ;	PPSLOCK bit One-Way Set Enable bit
  4520                           ;	PPS1WAY = 0x1, unprogrammed default
  4521                           ;	Stack Full/Underflow Reset Enable bit
  4522                           ;	STVREN = 0x1, unprogrammed default
  4523                           ;	Debugger Enable bit
  4524                           ;	DEBUG = 0x1, unprogrammed default
  4525                           ;	Extended Instruction Set Enable bit
  4526                           ;	XINST = 0x1, unprogrammed default
  4527   300003                     	org	3145731
  4528   300003  FF                 	db	255
  4529                           
  4530                           ;Config register CONFIG3L @ 0x300004
  4531                           ;	WDT Period Select bits
  4532                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4533                           ;	WDT operating mode
  4534                           ;	WDTE = OFF, WDT Disabled
  4535   300004                     	org	3145732
  4536   300004  9F                 	db	159
  4537                           
  4538                           ;Config register CONFIG3H @ 0x300005
  4539                           ;	unspecified, using default values
  4540                           ;	WDT Window Select bits
  4541                           ;	WDTCWS = 0x7, unprogrammed default
  4542                           ;	WDT input clock selector
  4543                           ;	WDTCCS = 0x7, unprogrammed default
  4544   300005                     	org	3145733
  4545   300005  FF                 	db	255
  4546                           
  4547                           ;Config register CONFIG4L @ 0x300006
  4548                           ;	unspecified, using default values
  4549                           ;	Write Protection Block 0
  4550                           ;	WRT0 = 0x1, unprogrammed default
  4551                           ;	Write Protection Block 1
  4552                           ;	WRT1 = 0x1, unprogrammed default
  4553                           ;	Write Protection Block 2
  4554                           ;	WRT2 = 0x1, unprogrammed default
  4555                           ;	Write Protection Block 3
  4556                           ;	WRT3 = 0x1, unprogrammed default
  4557                           ;	Write Protection Block 3
  4558                           ;	WRT4 = 0x1, unprogrammed default
  4559                           ;	Write Protection Block 3
  4560                           ;	WRT5 = 0x1, unprogrammed default
  4561                           ;	Write Protection Block 3
  4562                           ;	WRT6 = 0x1, unprogrammed default
  4563                           ;	Write Protection Block 3
  4564                           ;	WRT7 = 0x1, unprogrammed default
  4565   300006                     	org	3145734
  4566   300006  FF                 	db	255
  4567                           
  4568                           ;Config register CONFIG4H @ 0x300007
  4569                           ;	unspecified, using default values
  4570                           ;	Configuration Register Write Protection bit
  4571                           ;	WRTC = 0x1, unprogrammed default
  4572                           ;	Boot Block Write Protection bit
  4573                           ;	WRTB = 0x1, unprogrammed default
  4574                           ;	Data EEPROM Write Protection bit
  4575                           ;	WRTD = 0x1, unprogrammed default
  4576                           ;	Scanner Enable bit
  4577                           ;	SCANE = 0x1, unprogrammed default
  4578                           ;	Low Voltage Programming Enable bit
  4579                           ;	LVP = 0x1, unprogrammed default
  4580   300007                     	org	3145735
  4581   300007  FF                 	db	255
  4582                           
  4583                           ;Config register CONFIG5L @ 0x300008
  4584                           ;	unspecified, using default values
  4585                           ;	UserNVM Program Memory Code Protection bit
  4586                           ;	CP = 0x1, unprogrammed default
  4587                           ;	DataNVM Memory Code Protection bit
  4588                           ;	CPD = 0x1, unprogrammed default
  4589   300008                     	org	3145736
  4590   300008  FF                 	db	255
  4591                           
  4592                           ;Config register CONFIG5H @ 0x300009
  4593                           ;	unspecified, using default values
  4594   300009                     	org	3145737
  4595   300009  FF                 	db	255
  4596                           
  4597                           ;Config register CONFIG6L @ 0x30000A
  4598                           ;	unspecified, using default values
  4599                           ;	Table Read Protection Block 0
  4600                           ;	EBTR0 = 0x1, unprogrammed default
  4601                           ;	Table Read Protection Block 1
  4602                           ;	EBTR1 = 0x1, unprogrammed default
  4603                           ;	Table Read Protection Block 2
  4604                           ;	EBTR2 = 0x1, unprogrammed default
  4605                           ;	Table Read Protection Block 3
  4606                           ;	EBTR3 = 0x1, unprogrammed default
  4607                           ;	Table Read Protection Block 4
  4608                           ;	EBTR4 = 0x1, unprogrammed default
  4609                           ;	Table Read Protection Block 5
  4610                           ;	EBTR5 = 0x1, unprogrammed default
  4611                           ;	Table Read Protection Block 6
  4612                           ;	EBTR6 = 0x1, unprogrammed default
  4613                           ;	Table Read Protection Block 7
  4614                           ;	EBTR7 = 0x1, unprogrammed default
  4615   30000A                     	org	3145738
  4616   30000A  FF                 	db	255
  4617                           
  4618                           ;Config register CONFIG6H @ 0x30000B
  4619                           ;	unspecified, using default values
  4620                           ;	Boot Block Table Read Protection bit
  4621                           ;	EBTRB = 0x1, unprogrammed default
  4622   30000B                     	org	3145739
  4623   30000B  FF                 	db	255
  4624                           tosu	equ	0xFFF
  4625                           tosh	equ	0xFFE
  4626                           tosl	equ	0xFFD
  4627                           stkptr	equ	0xFFC
  4628                           pclatu	equ	0xFFB
  4629                           pclath	equ	0xFFA
  4630                           pcl	equ	0xFF9
  4631                           tblptru	equ	0xFF8
  4632                           tblptrh	equ	0xFF7
  4633                           tblptrl	equ	0xFF6
  4634                           tablat	equ	0xFF5
  4635                           prodh	equ	0xFF4
  4636                           prodl	equ	0xFF3
  4637                           indf0	equ	0xFEF
  4638                           postinc0	equ	0xFEE
  4639                           postdec0	equ	0xFED
  4640                           preinc0	equ	0xFEC
  4641                           plusw0	equ	0xFEB
  4642                           fsr0h	equ	0xFEA
  4643                           fsr0l	equ	0xFE9
  4644                           wreg	equ	0xFE8
  4645                           indf1	equ	0xFE7
  4646                           postinc1	equ	0xFE6
  4647                           postdec1	equ	0xFE5
  4648                           preinc1	equ	0xFE4
  4649                           plusw1	equ	0xFE3
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           bsr	equ	0xFE0
  4653                           indf2	equ	0xFDF
  4654                           postinc2	equ	0xFDE
  4655                           postdec2	equ	0xFDD
  4656                           preinc2	equ	0xFDC
  4657                           plusw2	equ	0xFDB
  4658                           fsr2h	equ	0xFDA
  4659                           fsr2l	equ	0xFD9
  4660                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     27     150
    BANK1           256    140     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2092$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2039$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2039$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK1[50]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1105DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S1105DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_write16bitTMR0val

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               190   190      0    8027
                                             25 BANK0      2     2      0
                                              0 BANK1    140   140      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
                         _color_read
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             64 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             13 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     196
                  _write16bitTMR0val
 ---------------------------------------------------------------------------------
 (10) _write16bitTMR0val                                   2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _write16bitTMR0val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     8C      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      96       5       93.8%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      54        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhhlh      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRhhlll      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllll      B      0       0      52        0.0%
BITBIGSFRllllll      9      0       0      51        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhl          5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17E      55        0.0%
DATA                 0      0     17E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 01:58:40 2022

               _color_read_Red 1A20                _color_read_Blue 1B10                             l33 19CC  
                           l42 1A6E                             l51 18F8                             l36 1D7C  
                           l45 1B0E                             l39 1ABE                             l48 1B5E  
                           l58 1852                             l92 1D12                             l95 1D14  
                           l98 1D3A               _color_read_Green 1AC0              ??_Interrupts_init 0003  
                          l101 1E08                            l110 1DDE                            l104 1DF4  
                          l113 1C78                            l107 1DFE                            l221 1BF2  
                          l170 1172                            l323 1DBA                            l171 121C  
                          l332 1DBE                            l341 1CE8                            l166 1158  
                          l271 1DEA                            l335 1DD2                            l167 116C  
                          l282 1D9C                            l471 157C                            l458 1418  
                          u700 174E                            u701 174A                            u710 1C36  
                          u711 1C32                            u720 12A4                            u800 145E  
                          u721 12A0                            u801 145A                            u730 12D6  
                          u810 149C                            u731 12D2                            u811 1498  
                          u820 14C6                            u900 0E42                            u741 1300  
                          u821 14C2                            u901 0E3C                            u750 1324  
                          u830 14F4                            u670 16DE                            u910 0E44  
                          u751 1320                            u831 14F0                            u671 16DA  
                          u760 134E                            u840 153C                            u680 16F0  
                          u920 0E56                            u761 134A                            u841 1538  
                          u681 16EC                            u921 0E52                            u770 138E  
                          u690 1718                            u850 1908                            u930 0E92  
                          u771 138A                            u691 1714                            u851 1904  
                          u931 0E8E                            u780 13D8                            u860 195E  
                          u940 0EBE                            u781 13D4                            u861 195A  
                          u941 0EBA                            u790 142C                            u870 1C94  
                          u950 0ED4                            u791 1428                            u871 1C90  
                          u951 0ED0                            u880 1D24                            u960 100E  
                          u881 1D20                            u961 100A                            u890 1D3A  
                          u970 102C                            u891 1D36                            u971 1028  
                          u980 1046                            u981 1042                            u990 1056  
                          u991 1052                            _abs 1C7A                            _pad 18FA  
                          wreg 000FE8                           l1110 1E14                           l1022 1A1E  
                         l2000 19A8                           l2010 19B2                           l2002 19AA  
                         l1107 1C36                           ?_abs 0015                           l2020 19BC  
                         l2012 19B4                           l2004 19AC                           l2100 1DB4  
                         l1044 191C                           l1053 0E9E                           l2030 19C8  
                         l2022 19BE                           l2014 19B6                           l2006 19AE  
                         l2102 1DB6                           l2110 19E8                           l1055 0EA6  
                         l2032 19CA                           l2024 19C0                           l2016 19B8  
                         l2008 19B0                           l2040 18B0                           l2104 1DB8  
                         l2120 1CBE                           l1048 1972                           l1056 0EEC  
                         l1080 1BAC                           l2112 19F0                           l2026 19C2  
                         l2018 19BA                           l2050 17FE                           l2042 18C8  
                         l2034 1854                           l2122 1CCC                           l1074 16CA  
                         l2114 1A0C                           l2106 19CE                           l2210 1092  
                         l1067 108C                           l2028 19C4                           l2060 184A  
                         l2052 180A                           l2044 1796                           l2036 1868  
                         l2124 1CD0                           l1084 1CB0                           l2108 19E0  
                         l2220 10AE                           l2212 109E                           l2054 1820  
                         l2046 17D2                           l2038 1880                           l2070 1BDA  
                         l2118 1CBA                           l2230 111A                           l2222 10B8  
                         l2214 10A2                           l1087 1CB8                           l2056 1836  
                         l2048 17E8                           l2080 1BEE                           l2072 1BDC  
                         l2064 1BAE                           l2240 1192                           l2232 111E  
                         l2224 10C4                           l2216 10A6                           l2208 108E  
                         l2090 1D90                           l2058 1842                           l2082 1BF0  
                         l2074 1BE2                           l2066 1BBE                           l2250 11F4  
                         l2242 11B2                           l2234 1126                           l2226 10FA  
                         l2218 10AA                           l1099 1794                           l2084 1DE0  
                         l2092 1D9A                           l2076 1BE6                           l2068 1BD2  
                         l1700 16CC                           l2260 1262                           l2252 1208  
                         l2244 11CE                           l2236 1166                           l2228 1106  
                         l2086 1D7E                           l2078 1BEA                           l2094 1D9E  
                         l1710 174E                           l1702 16DE                           l2254 122A  
                         l2246 11E8                           l2238 1180                           l2088 1D86  
                         l2096 1DA8                           l1704 16F0                           l1720 1C16  
                         l2248 11EC                           l2256 1236                           l2098 1DAA  
                         l1730 12C8                           l1722 1292                           l1706 16FA  
                         l1714 1BF4                           l1810 193C                           l1802 18FA  
                         l2266 126A                           l2258 124E                           l1820 1D14  
                         l1900 1C74                           l1740 1324                           l1732 12D6  
                         l1724 1296                           l1708 1718                           l1716 1C00  
                         l1812 1940                           l1804 1908                           l2268 126E  
                         l1822 1D24                           l1902 1C76                           l1750 138E  
                         l1742 132C                           l1734 12F6                           l1726 12A4  
                         l1718 1C12                           l1814 195E                           l1806 1914  
                         l1830 0E56                           l1910 15B0                           l1760 13D8  
                         l1752 13AE                           l1744 1340                           l1736 12FA  
                         l1728 12C4                           l1816 1C7A                           l1808 1928  
                         l1840 0EC4                           l1832 0E76                           l1824 0E12  
                         l1920 160A                           l1912 15BE                           l1762 13F8  
                         l1754 13B0                           l1746 134E                           l1738 1306  
                         l1770 142C                           l1818 1C94                           l1850 0EFC  
                         l1842 0ED4                           l1834 0E92                           l1826 0E32  
                         l1922 1660                           l1914 15C2                           l1930 16A2  
                         l1906 157E                           l1940 1CFA                           l1756 13C2  
                         l1748 1360                           l1780 149C                           l1772 144C  
                         l1852 0F02                           l1860 0FF4                           l1844 0EE0  
                         l1836 0EAE                           l1828 0E46                           l1916 15D2  
                         l1908 15A2                           l1942 1CFC                           l1950 1A70  
                         l1758 13C8                           l1790 1514                           l1782 14A4  
                         l1774 1450                           l1766 141A                           l1870 105C  
                         l1862 100E                           l1854 0F84                           l1846 0EE8  
                         l1838 0EBE                           l1926 1690                           l1918 15EE  
                         l1944 1CFE                           l1936 1CEA                           l1880 1DD6  
                         l1952 1AB6                           l1792 1526                           l1784 14B8  
                         l1776 145E                           l1768 141E                           l1872 106C  
                         l1864 102C                           l1856 0F8A                           l1848 0EF4  
                         l1946 1D00                           l1938 1CF4                           l1882 1DDA  
                         l1890 1DF0                           l1970 1B56                           l1962 1AC0  
                         l1786 14C6                           l1794 152C                           l1778 147E  
                         l1866 1046                           l1858 0F90                           l1876 1E00  
                         l1884 1DF6                           l1948 1D60                           l1892 1C3A  
                         l1964 1B06                           l1956 1A20                           l1796 153C  
                         l1788 14F4                           l1868 1056                           l1980 1B6C  
                         l1878 1E04                           l1886 1DFA                           l1990 1978  
                         l1894 1C3E                           l1958 1A66                           l1974 1DBE  
                         l1798 155C                           l1982 1B88                           ?_pad 0013  
                         l1992 1982                           l1896 1C46                           l1888 1DEC  
                         l1968 1B10                           l1976 1DCE                           l1984 1BA4  
                         l1994 1992                           l1898 1C4E                           l1978 1B60  
                         l1996 199C                           l1988 1974                           l1998 19A6  
                         STR_1 0E01                           u1000 1C62                           u1001 1C5A  
                         u1100 1836                           u1020 15A2                           u1101 1832  
                         u1021 159E                           u1110 1CE8                           u1030 15EE  
                         u1111 1CE4                           u1031 15EA                           u1040 160A  
                         u1041 1606                           u1018 1C64                           u1050 1DCE  
                         u1051 1DCA                           u1060 1BA4                           u1300 1208  
                         u1061 1BA0                           u1301 1204                           u1070 17E8  
                         u1310 122A                           u1071 17E4                           u1311 1226  
                         u1080 17FE                           u1320 1262                           u1240 111A  
                         u1081 17FA                           u1321 125E                           u1241 1116  
                         u1090 1820                           u1330 128A                           u1250 1144  
                         u1091 181C                           u1331 1286                           u1251 113A  
                         u1260 1158                           u1261 1154                           u1270 1166  
                         u1271 1162                           u1280 1180                   _BAUD4CONbits 000EE9  
                         u1281 117C                           u1290 1192                           u1258 1148  
                         u1347 1242                           u1291 118E                           u1357 1872  
                         u1367 18A2                           u1377 18D2                           _T2PR 000FBC  
                         u1387 1988                    main@readout 0100                           abs@a 0015  
                         _dbuf 00BB                           _main 108E                           _dtoa 0E12  
                         _prec 00B2                           pad@i 001A                           pad@p 0017  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001C                           fsr2l 000FD9  
                         btemp 005D                           prodl 000FF3                           start 0054  
       __end_of_color_read_Red 1A70                __end_of_HighISR 0054                   ___param_bank 000000  
                        ??_abs 0017                          ??_pad 0019                __end_of___aodiv 141A  
                        ?_main 0001                          ?_dtoa 001E                __end_of___aomod 157E  
      ??_color_read_Luminosity 0009                          i2l285 1E12                          i2l279 0050  
                 vfpfcnvrt@fmt 0043                          _TMR0H 000FD4                          _TMR0L 000FD3  
      __end_of_sendCharSerial4 1DD4     __end_of_I2C_2_Master_Start 1E0A     __end_of_I2C_2_Master_Write 1DE0  
                        _flags 00B8                          _fputc 16CC                          _fputs 1BF4  
                        pad@fp 0013                          _width 00B0                          _putch 1E14  
                        main@j 0178                          main@k 017A                          dtoa@d 0020  
                        dtoa@i 003E                          dtoa@n 0036                          dtoa@p 0032  
                        dtoa@s 0040                          dtoa@w 0034                          tablat 000FF5  
                        ttemp5 005E                          ttemp6 0061                          ttemp7 0065  
                        status 000FD8                          wtemp8 005E                __end_of_sprintf 1A20  
      __end_of_color_read_Blue 1B60          _I2C_2_Master_RepStart 1DEC                ?_color_read_Red 0007  
              __initialization 1D3C                   __end_of_main 1292                   __end_of_dtoa 108E  
                       ??_main 00F4                         ??_dtoa 0028                  __activetblptr 000001  
                       ?_fputc 0003                         ?_fputs 000C                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RD6PPS 000E70  
                       i2l2200 003C                         i2l2202 004A                         i2l2204 004C  
                       i2l2126 1E0A                         i2l2128 1E0E                         i2l2192 000A  
                       i2l2194 001A                         i2l2196 0028                         i2l2198 0036  
                    ??_HighISR 0003       __end_of_color_click_init 19CE                         _RX4PPS 000E15  
                       _TX4REG 000EE4                  ??_Timer0_init 0003      color_processor_easy@color 0005  
                 vfprintf@cfmt 0059                      ??___aodiv 0013                      ??___aomod 0013  
                       clear_0 1D42                         isa$std 000001                         pad@buf 0015  
                       dtoa@fp 001E                  main@time_flag 0170                         fputc@c 0003  
                       fputs@c 0010                         fputs@i 0011                         fputs@s 000C  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 1BAE              ??_initDCmotorsPWM 0005                      ??_sprintf 005B  
                   __accesstop 0060        __end_of__initialization 1D4C       __end_of_color_read_Green 1B10  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0007  
              _Interrupts_init 1DE0                 __pcstackCOMRAM 0001                  color_read@rgb 000E  
                __end_of_fputc 1796                  __end_of_fputs 1C38                  __end_of_putch 1E16  
          __end_of_Timer0_init 1D9E                        ??_fputc 0007                        ??_fputs 0010  
                      ??_putch 0003                     __pbssBANK0 0060              _color_writetoaddr 1D5E  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0005                 main@color_flag 016E  
               main@color_name 0176            ??_color_writetoaddr 0006  __end_of_color_read_Luminosity 1AC0  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _PWM6DCH 000FA3  
                      _PWM7DCH 000FA0                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _color_read 1854        __end_of_Interrupts_init 1DEC         color_writetoaddr@value 0005  
             ??_color_read_Red 0009                        _HighISR 0008      __end_of_color_writetoaddr 1D7E  
     color_read_Luminosity@tmp 000C             _I2C_2_Master_Start 1E00                     _initUSART4 1D9E  
           _I2C_2_Master_Write 1DD4                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000C                    _Timer0_init 1D7E        sendStringSerial4@string 0004  
                      ___aodiv 1292                        ___aomod 141A            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                     _off_period 00B4                      ?_vfprintf 0053  
                 __psmallconst 0E00                        __pcinit 1D3C                        __ramtop 0E00  
                      __ptext0 108E                        __ptext1 19CE                        __ptext2 1B60  
                      __ptext3 157E                        __ptext4 0E12                        __ptext5 18FA  
                      __ptext6 1BF4                        __ptext7 16CC                        __ptext8 1E14  
                      __ptext9 1C7A                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005C                        _sprintf 19CE           ??_I2C_2_Master_Start 0004  
         ??_I2C_2_Master_Write 0004           end_of_initialization 1D4C                        fputc@fp 0005  
                      fputs@fp 000E              ?_color_click_init 0001   __end_of_color_processor_easy 1854  
           ??_color_click_init 0007              __end_of_vfpfcnvrt 16CC                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0049                     ??_vfprintf 0059                _initDCmotorsPWM 1BAE  
                    _PORTFbits 000F8E                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ?_color_read 000E       color_writetoaddr@address 0006  
      ??_I2C_2_Master_RepStart 0004               ?_Interrupts_init 0001                   _EUSART4RXbuf 009C  
                 _EUSART4TXbuf 0060              ?_color_read_Green 0007                    ?_initUSART4 0001  
    sendCharSerial4@charToSend 0003             ??_color_read_Green 0009                    vfpfcnvrt@ap 0045  
                  vfpfcnvrt@cp 0051                    vfpfcnvrt@fp 0041            start_initialization 1D3C  
                  __end_of_abs 1CBA                    __end_of_pad 1974                  _TxBufWriteCnt 00BA  
          color_read_Green@tmp 000C        __end_of_initDCmotorsPWM 1BF4                    vfprintf@fmt 0055  
                  __pbssCOMRAM 005B           _color_processor_easy 1796                  __pcstackBANK0 00DB  
                __pcstackBANK1 0100               ___aodiv@dividend 0003             main@RGB_calibrated 0184  
                     ?_HighISR 0001        color_processor_easy@rgb 0003          color_processor_easy@a 0009  
        color_processor_easy@b 000B          color_processor_easy@c 0007                      _dtoa$2120 0030  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___aodiv 0003  
                     ?___aomod 0003               ___aodiv@quotient 0015           I2C_2_Master_Read@ack 0005  
         I2C_2_Master_Read@tmp 0006                    __smallconst 0E00              _I2C_2_Master_Idle 1D14  
        ?_color_processor_easy 0003               main@RGB_recorded 017C              _I2C_2_Master_Init 1CEA  
            _I2C_2_Master_Read 1C38              _I2C_2_Master_Stop 1DF6                   _RxBufReadCnt 005B  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
        _color_read_Luminosity 1A70             ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0003  
                     ?_sprintf 00DB              _sendStringSerial4 1CBA            ??_I2C_2_Master_Idle 0003  
          ??_I2C_2_Master_Init 0003            ??_I2C_2_Master_Read 0004            ??_I2C_2_Master_Stop 0004  
                     _LATCbits 000F7B                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                      _on_period 00B6                       _LATGbits 000F7F  
                     _LATHbits 000F80                       _PIE0bits 000E29             ?_sendStringSerial4 0004  
                     i2u122_40 001A                       i2u122_41 0016                       i2u123_40 0028  
                     i2u123_41 0024                       _PIR0bits 000E33                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0003              ??_sendCharSerial4 0003                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0006                       _SSP2STAT 000ED8                      _vfpfcnvrt 157E  
            main@color_storage 0132      __end_of_I2C_2_Master_Idle 1D3C      __end_of_I2C_2_Master_Init 1D14  
    __end_of_I2C_2_Master_Read 1C7A      __end_of_I2C_2_Master_Stop 1E00           write16bitTMR0val@tmp 0001  
  I2C_2_Master_Write@data_byte 0004              _write16bitTMR0val 1E0A              ??_color_read_Blue 0009  
                 _TxBufReadCnt 00B9             ?_write16bitTMR0val 0001                   ??_color_read 0010  
    __end_of_sendStringSerial4 1CEA  __end_of_I2C_2_Master_RepStart 1DF6             color_read_Blue@tmp 000C  
          ??_write16bitTMR0val 0003                   ??_initUSART4 0003               main@time_storage 0150  
                     __Hrparam 0000                     vfprintf@ap 0057                       __Lrparam 0000  
                   vfprintf@fp 0053                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0041  
           __end_of_color_read 18FA                ___aodiv@divisor 000B                ___aodiv@counter 0013  
    __end_of_write16bitTMR0val 1E14                     _ANSELDbits 000EA7         ??_color_processor_easy 0005  
                   _ANSELFbits 000EB4                     sprintf@fmt 00DD                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6         ?_color_read_Luminosity 0007             __end_of_initUSART4 1DBC  
                     __ptext10 141A                       __ptext11 1292                       __ptext20 1B10  
                     __ptext12 1CBA                       __ptext21 1DEC                       __ptext13 1DBC  
                     __ptext30 1CEA                       __ptext22 1C38                       __ptext14 1D9E  
                     __ptext31 1D7E                       __ptext23 1796                       __ptext15 1BAE  
                     __ptext32 1DE0                       __ptext24 1974                       __ptext16 1854  
                     __ptext25 1D5E                       __ptext17 1A20                       __ptext34 1E0A  
                     __ptext26 1DD4                       __ptext18 1A70                       __ptext27 1DF6  
                     __ptext19 1AC0                       __ptext28 1E00                       __ptext29 1D14  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005D                       _vfprintf 1B60  
                     main@home 0174                       main@time 0172               ___aomod@dividend 0003  
                   _INTCONbits 000FF2                    _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1  
                     intlevel2 0000                      sprintf@ap 00E7                ___aomod@divisor 000B  
                  ??_vfpfcnvrt 0047                ___aomod@counter 0013               _color_click_init 1974  
                     sprintf@f 00E9                       sprintf@s 00DB                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0014  
              _sendCharSerial4 1DBC                   ___aomod@sign 0014  
