

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 16:55:24 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Version 2.35
    67                           ; Generated 05/05/2021 GMT
    68                           ; 
    69                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F67K40 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     _TX4REG	set	3812
   102   000000                     _RC4STAbits	set	3815
   103   000000                     _SP4BRGH	set	3814
   104   000000                     _T0CON0bits	set	4053
   105   000000                     _T0CON1bits	set	4054
   106   000000                     _TMR0H	set	4052
   107   000000                     _TRISGbits	set	3975
   108   000000                     _TRISEbits	set	3973
   109   000000                     _LATFbits	set	3966
   110   000000                     _TRISFbits	set	3974
   111   000000                     _LATG	set	3967
   112   000000                     _LATE	set	3965
   113   000000                     _SSP2CON2bits	set	3802
   114   000000                     _LATGbits	set	3967
   115   000000                     _LATEbits	set	3965
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _ANSELDbits	set	3751
   120   000000                     _ANSELFbits	set	3764
   121   000000                     _LATDbits	set	3964
   122   000000                     _LATHbits	set	3968
   123   000000                     _TRISDbits	set	3972
   124   000000                     _TRISHbits	set	3976
   125   000000                     _PORTFbits	set	3982
   126   000000                     _PWM7DCH	set	4000
   127   000000                     _PWM6DCH	set	4003
   128   000000                     _TRISCbits	set	3971
   129   000000                     _SSP2BUF	set	3797
   130   000000                     _SSP2ADD	set	3798
   131   000000                     _SSP2CON1bits	set	3801
   132   000000                     _RC4REG	set	3811
   133   000000                     _SP4BRGL	set	3813
   134   000000                     _TX4STAbits	set	3816
   135   000000                     _BAUD4CONbits	set	3817
   136   000000                     _LATCbits	set	3963
   137   000000                     _SSP2CON2	set	3802
   138   000000                     _SSP2STAT	set	3800
   139   000000                     _IPR0bits	set	3615
   140   000000                     _PIE0bits	set	3625
   141   000000                     _RC7PPS	set	3689
   142   000000                     _RD5PPS	set	3695
   143   000000                     _RE2PPS	set	3700
   144   000000                     _RD6PPS	set	3696
   145   000000                     _PWM6CONbits	set	4004
   146   000000                     _T2PR	set	4028
   147   000000                     _T2CONbits	set	4029
   148   000000                     _INTCONbits	set	4082
   149   000000                     _PWM7CONbits	set	4001
   150   000000                     _TMR0L	set	4051
   151   000000                     _T2CLKCONbits	set	4031
   152   000000                     _T2HLTbits	set	4030
   153   000000                     _PIE2bits	set	3627
   154   000000                     _PIR0bits	set	3635
   155   000000                     _IPR2bits	set	3617
   156   000000                     _PIR2bits	set	3637
   157   000000                     _PIR4bits	set	3639
   158   000000                     _RC0PPS	set	3682
   159                           
   160                           	psect	smallconst
   161   000E00                     __psmallconst:
   162                           	callstack 0
   163   000E00  00                 	db	0
   164   000E01                     STR_2:
   165                           
   166                           ; BSR set to: 14
   167   000E01  25                 	db	37
   168   000E02  64                 	db	100	;'d'
   169   000E03  20                 	db	32
   170   000E04  25                 	db	37
   171   000E05  64                 	db	100	;'d'
   172   000E06  20                 	db	32
   173   000E07  25                 	db	37
   174   000E08  64                 	db	100	;'d'
   175   000E09  20                 	db	32
   176   000E0A  25                 	db	37
   177   000E0B  64                 	db	100	;'d'
   178   000E0C  20                 	db	32
   179   000E0D  25                 	db	37
   180   000E0E  64                 	db	100	;'d'
   181   000E0F  20                 	db	32
   182   000E10  0D                 	db	13
   183   000E11  0A                 	db	10
   184   000E12  00                 	db	0
   185   000E13  00                 	db	0	; dummy byte at the end
   186   000000                     
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190   002B42                     __pcinit:
   191                           	callstack 0
   192   002B42                     start_initialization:
   193                           	callstack 0
   194   002B42                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Clear objects allocated to BANK2 (112 bytes)
   198   002B42  EE02  F000         	lfsr	0,__pbssBANK2
   199   002B46  0E70               	movlw	112
   200   002B48                     clear_0:
   201   002B48  6AEE               	clrf	postinc0,c
   202   002B4A  06E8               	decf	wreg,f,c
   203   002B4C  E1FD               	bnz	clear_0
   204                           
   205                           ; Clear objects allocated to BANK1 (14 bytes)
   206   002B4E  EE01  F0EA         	lfsr	0,__pbssBANK1
   207   002B52  0E0E               	movlw	14
   208   002B54                     clear_1:
   209   002B54  6AEE               	clrf	postinc0,c
   210   002B56  06E8               	decf	wreg,f,c
   211   002B58  E1FD               	bnz	clear_1
   212                           
   213                           ; Clear objects allocated to BANK0 (1 bytes)
   214   002B5A  0100               	movlb	0
   215   002B5C  6BFF               	clrf	__pbssBANK0& (0+255),b
   216   002B5E                     end_of_initialization:
   217                           	callstack 0
   218   002B5E                     __end_of__initialization:
   219                           	callstack 0
   220   002B5E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   221   002B60  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   222   002B62  0100               	movlb	0
   223   002B64  EF0A  F007         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssBANK0
   226   0000FF                     __pbssBANK0:
   227                           	callstack 0
   228   0000FF                     _RxBufWriteCnt:
   229                           	callstack 0
   230   0000FF                     	ds	1
   231                           
   232                           	psect	bssBANK1
   233   0001EA                     __pbssBANK1:
   234                           	callstack 0
   235   0001EA                     _width:
   236                           	callstack 0
   237   0001EA                     	ds	2
   238   0001EC                     _prec:
   239                           	callstack 0
   240   0001EC                     	ds	2
   241   0001EE                     _time:
   242                           	callstack 0
   243   0001EE                     	ds	2
   244   0001F0                     _off_period:
   245                           	callstack 0
   246   0001F0                     	ds	2
   247   0001F2                     _on_period:
   248                           	callstack 0
   249   0001F2                     	ds	2
   250   0001F4                     _flags:
   251                           	callstack 0
   252   0001F4                     	ds	1
   253   0001F5                     _TxBufReadCnt:
   254                           	callstack 0
   255   0001F5                     	ds	1
   256   0001F6                     _TxBufWriteCnt:
   257                           	callstack 0
   258   0001F6                     	ds	1
   259   0001F7                     _RxBufReadCnt:
   260                           	callstack 0
   261   0001F7                     	ds	1
   262                           
   263                           	psect	bssBANK2
   264   000200                     __pbssBANK2:
   265                           	callstack 0
   266   000200                     _EUSART4TXbuf:
   267                           	callstack 0
   268   000200                     	ds	60
   269   00023C                     _EUSART4RXbuf:
   270                           	callstack 0
   271   00023C                     	ds	20
   272   000250                     _dbuf:
   273                           	callstack 0
   274   000250                     	ds	32
   275                           
   276                           	psect	cstackBANK1
   277   000100                     __pcstackBANK1:
   278                           	callstack 0
   279   000100                     main@readout3:
   280                           	callstack 0
   281                           
   282                           ; 100 bytes @ 0x0
   283   000100                     	ds	100
   284   000164                     main@time_path:
   285                           	callstack 0
   286                           
   287                           ; 30 bytes @ 0x64
   288   000164                     	ds	30
   289   000182                     main@color_calibrated:
   290                           	callstack 0
   291                           
   292                           ; 64 bytes @ 0x82
   293   000182                     	ds	64
   294   0001C2                     main@color_name:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0xC2
   298   0001C2                     	ds	2
   299   0001C4                     main@k:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0xC4
   303   0001C4                     	ds	2
   304   0001C6                     main@i:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xC6
   308   0001C6                     	ds	2
   309   0001C8                     main@RGB_calibrated:
   310                           	callstack 0
   311                           
   312                           ; 8 bytes @ 0xC8
   313   0001C8                     	ds	8
   314   0001D0                     main@RGB_recorded:
   315                           	callstack 0
   316                           
   317                           ; 8 bytes @ 0xD0
   318   0001D0                     	ds	8
   319   0001D8                     main@motorL:
   320                           	callstack 0
   321                           
   322                           ; 9 bytes @ 0xD8
   323   0001D8                     	ds	9
   324   0001E1                     main@motorR:
   325                           	callstack 0
   326                           
   327                           ; 9 bytes @ 0xE1
   328   0001E1                     	ds	9
   329                           
   330                           	psect	cstackBANK0
   331   000060                     __pcstackBANK0:
   332                           	callstack 0
   333   000060                     ?_sprintf:
   334                           	callstack 0
   335   000060                     sprintf@s:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x0
   339   000060                     	ds	2
   340   000062                     sprintf@fmt:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344   000062                     	ds	12
   345   00006E                     sprintf@ap:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xE
   349   00006E                     	ds	2
   350   000070                     sprintf@f:
   351                           	callstack 0
   352                           
   353                           ; 11 bytes @ 0x10
   354   000070                     	ds	11
   355   00007B                     main@readout2:
   356                           	callstack 0
   357                           
   358                           ; 100 bytes @ 0x1B
   359   00007B                     	ds	100
   360   0000DF                     main@color_path:
   361                           	callstack 0
   362                           
   363                           ; 30 bytes @ 0x7F
   364   0000DF                     	ds	30
   365   0000FD                     main@j:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x9D
   369   0000FD                     	ds	2
   370                           
   371                           	psect	cstackCOMRAM
   372   000001                     __pcstackCOMRAM:
   373                           	callstack 0
   374   000001                     ??_I2C_2_Master_Idle:
   375   000001                     ?_color_processor_easy:
   376                           	callstack 0
   377   000001                     ?_color_processor_hard:
   378                           	callstack 0
   379   000001                     ?___wmul:
   380                           	callstack 0
   381   000001                     ?___aodiv:
   382                           	callstack 0
   383   000001                     ?___aomod:
   384                           	callstack 0
   385   000001                     sendCharSerial4@charToSend:
   386                           	callstack 0
   387   000001                     color_processor_easy@rgb:
   388                           	callstack 0
   389   000001                     color_processor_hard@rgb:
   390                           	callstack 0
   391   000001                     initDCmotorsPWM@PWMperiod:
   392                           	callstack 0
   393   000001                     ___wmul@multiplier:
   394                           	callstack 0
   395   000001                     fputc@c:
   396                           	callstack 0
   397   000001                     ___aodiv@dividend:
   398                           	callstack 0
   399   000001                     ___aomod@dividend:
   400                           	callstack 0
   401                           
   402                           ; 8 bytes @ 0x0
   403   000001                     	ds	1
   404   000002                     ??_I2C_2_Master_Read:
   405   000002                     I2C_2_Master_Write@data_byte:
   406                           	callstack 0
   407   000002                     sendStringSerial4@string:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x1
   411   000002                     	ds	1
   412   000003                     color_writetoaddr@value:
   413                           	callstack 0
   414   000003                     I2C_2_Master_Read@ack:
   415                           	callstack 0
   416   000003                     color_processor_easy@color:
   417                           	callstack 0
   418   000003                     color_processor_hard@calibrated:
   419                           	callstack 0
   420   000003                     ___wmul@multiplicand:
   421                           	callstack 0
   422   000003                     fputc@fp:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426   000003                     	ds	1
   427   000004                     color_writetoaddr@address:
   428                           	callstack 0
   429   000004                     I2C_2_Master_Read@tmp:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x3
   433   000004                     	ds	1
   434   000005                     ??_fputc:
   435   000005                     ??_color_click_init:
   436   000005                     ??_color_processor_hard:
   437   000005                     ?_color_read_Luminosity:
   438                           	callstack 0
   439   000005                     ?_color_read_Red:
   440                           	callstack 0
   441   000005                     ?_color_read_Green:
   442                           	callstack 0
   443   000005                     ?_color_read_Blue:
   444                           	callstack 0
   445   000005                     color_processor_easy@c:
   446                           	callstack 0
   447   000005                     ___wmul@product:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x4
   451   000005                     	ds	2
   452   000007                     ??_color_read_Luminosity:
   453   000007                     ??_color_read_Red:
   454   000007                     ??_color_read_Green:
   455   000007                     ??_color_read_Blue:
   456   000007                     ?___awdiv:
   457                           	callstack 0
   458   000007                     color_processor_easy@a:
   459                           	callstack 0
   460   000007                     ___awdiv@dividend:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x6
   464   000007                     	ds	2
   465   000009                     color_processor_hard@condition_r:
   466                           	callstack 0
   467   000009                     color_processor_easy@b:
   468                           	callstack 0
   469   000009                     ___awdiv@divisor:
   470                           	callstack 0
   471   000009                     ___aodiv@divisor:
   472                           	callstack 0
   473   000009                     ___aomod@divisor:
   474                           	callstack 0
   475                           
   476                           ; 8 bytes @ 0x8
   477   000009                     	ds	1
   478   00000A                     color_processor_hard@condition_g:
   479                           	callstack 0
   480   00000A                     color_read_Luminosity@tmp:
   481                           	callstack 0
   482   00000A                     color_read_Red@tmp:
   483                           	callstack 0
   484   00000A                     color_read_Green@tmp:
   485                           	callstack 0
   486   00000A                     color_read_Blue@tmp:
   487                           	callstack 0
   488   00000A                     fputs@s:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x9
   492   00000A                     	ds	1
   493   00000B                     color_processor_hard@condition_b:
   494                           	callstack 0
   495   00000B                     ___awdiv@counter:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xA
   499   00000B                     	ds	1
   500   00000C                     _color_processor_hard$370:
   501                           	callstack 0
   502   00000C                     ___awdiv@sign:
   503                           	callstack 0
   504   00000C                     color_read@rgb:
   505                           	callstack 0
   506   00000C                     fputs@fp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xB
   510   00000C                     	ds	1
   511   00000D                     _color_processor_hard$372:
   512                           	callstack 0
   513   00000D                     ___awdiv@quotient:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xC
   517   00000D                     	ds	1
   518   00000E                     ??_color_read:
   519   00000E                     _color_processor_hard$374:
   520                           	callstack 0
   521   00000E                     fputs@c:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0xD
   525   00000E                     	ds	1
   526   00000F                     color_processor_hard@r:
   527                           	callstack 0
   528   00000F                     setMotorPWM@m:
   529                           	callstack 0
   530   00000F                     fputs@i:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xE
   534   00000F                     	ds	2
   535   000011                     ??_setMotorPWM:
   536   000011                     ___aodiv@counter:
   537                           	callstack 0
   538   000011                     ___aomod@counter:
   539                           	callstack 0
   540   000011                     color_processor_hard@g:
   541                           	callstack 0
   542   000011                     pad@fp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x10
   546   000011                     	ds	1
   547   000012                     ___aodiv@sign:
   548                           	callstack 0
   549   000012                     ___aomod@sign:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x11
   553   000012                     	ds	1
   554   000013                     ?_abs:
   555                           	callstack 0
   556   000013                     color_processor_hard@b:
   557                           	callstack 0
   558   000013                     pad@buf:
   559                           	callstack 0
   560   000013                     abs@a:
   561                           	callstack 0
   562   000013                     ___aodiv@quotient:
   563                           	callstack 0
   564                           
   565                           ; 8 bytes @ 0x12
   566   000013                     	ds	2
   567   000015                     ??_abs:
   568   000015                     color_processor_hard@cr:
   569                           	callstack 0
   570   000015                     pad@p:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x14
   574   000015                     	ds	2
   575   000017                     ??_pad:
   576   000017                     color_processor_hard@cg:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x16
   580   000017                     	ds	1
   581   000018                     setMotorPWM@PWMduty:
   582                           	callstack 0
   583   000018                     pad@i:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x17
   587   000018                     	ds	1
   588   000019                     color_processor_hard@cb:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x18
   592   000019                     	ds	1
   593   00001A                     stop@mL:
   594                           	callstack 0
   595   00001A                     forward@mL:
   596                           	callstack 0
   597   00001A                     reverse@mL:
   598                           	callstack 0
   599   00001A                     right_90@mL:
   600                           	callstack 0
   601   00001A                     left_90@mL:
   602                           	callstack 0
   603   00001A                     spin_180@mL:
   604                           	callstack 0
   605   00001A                     right_135@mL:
   606                           	callstack 0
   607   00001A                     left_135@mL:
   608                           	callstack 0
   609   00001A                     pad@w:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x19
   613   00001A                     	ds	1
   614   00001B                     color_processor_hard@i:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x1A
   618   00001B                     	ds	1
   619   00001C                     stop@mR:
   620                           	callstack 0
   621   00001C                     forward@mR:
   622                           	callstack 0
   623   00001C                     reverse@mR:
   624                           	callstack 0
   625   00001C                     right_90@mR:
   626                           	callstack 0
   627   00001C                     left_90@mR:
   628                           	callstack 0
   629   00001C                     spin_180@mR:
   630                           	callstack 0
   631   00001C                     right_135@mR:
   632                           	callstack 0
   633   00001C                     left_135@mR:
   634                           	callstack 0
   635   00001C                     dtoa@fp:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x1B
   639   00001C                     	ds	2
   640   00001E                     ??_stop:
   641   00001E                     ??_spin_180:
   642   00001E                     ??_reverse:
   643   00001E                     ??_right_90:
   644   00001E                     ??_left_90:
   645   00001E                     ??_right_135:
   646   00001E                     ??_left_135:
   647   00001E                     forward@i:
   648                           	callstack 0
   649   00001E                     dtoa@d:
   650                           	callstack 0
   651                           
   652                           ; 8 bytes @ 0x1D
   653   00001E                     	ds	1
   654   00001F                     stop@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x1E
   658   00001F                     	ds	1
   659   000020                     reverse@i:
   660                           	callstack 0
   661   000020                     right_90@i:
   662                           	callstack 0
   663   000020                     left_90@i:
   664                           	callstack 0
   665   000020                     spin_180@i:
   666                           	callstack 0
   667   000020                     right_135@i:
   668                           	callstack 0
   669   000020                     left_135@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x1F
   673   000020                     	ds	2
   674   000022                     motor_action@color:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x21
   678   000022                     	ds	2
   679   000024                     motor_action@l:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x23
   683   000024                     	ds	2
   684   000026                     ??_dtoa:
   685   000026                     motor_action@r:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x25
   689   000026                     	ds	2
   690   000028                     ??_motor_action:
   691                           
   692                           ; 1 bytes @ 0x27
   693   000028                     	ds	6
   694   00002E                     _dtoa$2395:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x2D
   698   00002E                     	ds	2
   699   000030                     dtoa@p:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x2F
   703   000030                     	ds	2
   704   000032                     dtoa@w:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x31
   708   000032                     	ds	2
   709   000034                     dtoa@n:
   710                           	callstack 0
   711                           
   712                           ; 8 bytes @ 0x33
   713   000034                     	ds	8
   714   00003C                     dtoa@i:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x3B
   718   00003C                     	ds	2
   719   00003E                     dtoa@s:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x3D
   723   00003E                     	ds	1
   724   00003F                     vfpfcnvrt@fp:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x3E
   728   00003F                     	ds	2
   729   000041                     vfpfcnvrt@fmt:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x40
   733   000041                     	ds	2
   734   000043                     vfpfcnvrt@ap:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x42
   738   000043                     	ds	2
   739   000045                     ??_vfpfcnvrt:
   740                           
   741                           ; 1 bytes @ 0x44
   742   000045                     	ds	2
   743   000047                     vfpfcnvrt@convarg:
   744                           	callstack 0
   745                           
   746                           ; 8 bytes @ 0x46
   747   000047                     	ds	8
   748   00004F                     vfpfcnvrt@cp:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x4E
   752   00004F                     	ds	2
   753   000051                     ?_vfprintf:
   754                           	callstack 0
   755   000051                     vfprintf@fp:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x50
   759   000051                     	ds	2
   760   000053                     vfprintf@fmt:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x52
   764   000053                     	ds	2
   765   000055                     vfprintf@ap:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x54
   769   000055                     	ds	2
   770   000057                     vfprintf@cfmt:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x56
   774   000057                     	ds	2
   775   000059                     ??_main:
   776                           
   777                           ; 1 bytes @ 0x58
   778   000059                     	ds	2
   779   00005B                     main@color_flag:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x5A
   783   00005B                     	ds	2
   784   00005D                     main@time_return:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x5C
   788   00005D                     	ds	2
   789                           
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 20 in file "../main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  readout3      100    0[BANK1 ] unsigned char [100]
   800 ;;  readout2      100   27[BANK0 ] unsigned char [100]
   801 ;;  k               2  196[BANK1 ] int 
   802 ;;  i               2  198[BANK1 ] int 
   803 ;;  color_calibr   64  130[BANK1 ] int [32]
   804 ;;  time_path      30  100[BANK1 ] unsigned int [15]
   805 ;;  color_path     30  127[BANK0 ] unsigned int [15]
   806 ;;  motorR          9  225[BANK1 ] struct DC_motor
   807 ;;  motorL          9  216[BANK1 ] struct DC_motor
   808 ;;  RGB_recorded    8  208[BANK1 ] struct RGB_val
   809 ;;  RGB_calibrat    8  200[BANK1 ] struct RGB_val
   810 ;;  L_calibrated    8    0        struct RGB_val
   811 ;;  color_name      2  194[BANK1 ] unsigned int 
   812 ;;  j               2  157[BANK0 ] int 
   813 ;;  time_return     2   92[COMRAM] unsigned int 
   814 ;;  color_flag      2   90[COMRAM] unsigned int 
   815 ;;  PWMcycle        1    0        unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Locals:         4     132     234       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Totals:         6     132     234       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;Total ram usage:      372 bytes
   830 ;; Hardware stack levels required when called: 9
   831 ;; This function calls:
   832 ;;		_I2C_2_Master_Init
   833 ;;		_Interrupts_init
   834 ;;		_Timer0_init
   835 ;;		_color_click_init
   836 ;;		_color_processor_easy
   837 ;;		_color_processor_hard
   838 ;;		_color_read
   839 ;;		_forward
   840 ;;		_initDCmotorsPWM
   841 ;;		_initUSART4
   842 ;;		_motor_action
   843 ;;		_sendStringSerial4
   844 ;;		_setMotorPWM
   845 ;;		_spin_180
   846 ;;		_sprintf
   847 ;;		_stop
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text0
   854   000E14                     __ptext0:
   855                           	callstack 0
   856   000E14                     _main:
   857                           	callstack 22
   858   000E14                     
   859                           ;../main.c: 22:     color_click_init();
   860   000E14  ECBD  F013         	call	_color_click_init	;wreg free
   861   000E18                     
   862                           ;../main.c: 23:     initDCmotorsPWM(20);
   863   000E18  0E00               	movlw	0
   864   000E1A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   865   000E1C  0E14               	movlw	20
   866   000E1E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   867   000E20  ECFE  F014         	call	_initDCmotorsPWM	;wreg free
   868   000E24                     
   869                           ;../main.c: 24:     Interrupts_init();
   870   000E24  EC02  F016         	call	_Interrupts_init	;wreg free
   871   000E28                     
   872                           ;../main.c: 25:     Timer0_init();
   873   000E28  ECD7  F015         	call	_Timer0_init	;wreg free
   874   000E2C                     
   875                           ;../main.c: 26:     I2C_2_Master_Init();
   876   000E2C  EC78  F015         	call	_I2C_2_Master_Init	;wreg free
   877   000E30                     
   878                           ;../main.c: 27:     initUSART4();
   879   000E30  ECE7  F015         	call	_initUSART4	;wreg free
   880   000E34                     
   881                           ;../main.c: 32:     motorL.power = 0;
   882   000E34  0E00               	movlw	0
   883   000E36  0101               	movlb	1	; () banked
   884   000E38  6FD8               	movwf	main@motorL& (0+255),b
   885   000E3A                     
   886                           ; BSR set to: 1
   887                           ;../main.c: 33:     motorL.direction = 0;
   888   000E3A  0E00               	movlw	0
   889   000E3C  6FD9               	movwf	(main@motorL+1)& (0+255),b
   890   000E3E                     
   891                           ; BSR set to: 1
   892                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   893   000E3E  0EA3               	movlw	163
   894   000E40  6FDA               	movwf	(main@motorL+2)& (0+255),b
   895   000E42  0E0F               	movlw	15
   896   000E44  6FDB               	movwf	(main@motorL+3)& (0+255),b
   897   000E46                     
   898                           ; BSR set to: 1
   899                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
   900   000E46  0E7D               	movlw	125
   901   000E48  6FDC               	movwf	(main@motorL+4)& (0+255),b
   902   000E4A  0E0F               	movlw	15
   903   000E4C  6FDD               	movwf	(main@motorL+5)& (0+255),b
   904   000E4E                     
   905                           ; BSR set to: 1
   906                           ;../main.c: 36:     motorL.dir_pin = 4;
   907   000E4E  0E04               	movlw	4
   908   000E50  6FDE               	movwf	(main@motorL+6)& (0+255),b
   909   000E52                     
   910                           ; BSR set to: 1
   911                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
   912   000E52  0E00               	movlw	0
   913   000E54  6FE0               	movwf	(main@motorL+8)& (0+255),b
   914   000E56  0EC8               	movlw	200
   915   000E58  6FDF               	movwf	(main@motorL+7)& (0+255),b
   916   000E5A                     
   917                           ; BSR set to: 1
   918                           ;../main.c: 38:     motorR.power = 0;
   919   000E5A  0E00               	movlw	0
   920   000E5C  6FE1               	movwf	main@motorR& (0+255),b
   921   000E5E                     
   922                           ; BSR set to: 1
   923                           ;../main.c: 39:     motorR.direction = 0;
   924   000E5E  0E00               	movlw	0
   925   000E60  6FE2               	movwf	(main@motorR+1)& (0+255),b
   926                           
   927                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   928   000E62  0EA0               	movlw	160
   929   000E64  6FE3               	movwf	(main@motorR+2)& (0+255),b
   930   000E66  0E0F               	movlw	15
   931   000E68  6FE4               	movwf	(main@motorR+3)& (0+255),b
   932                           
   933                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
   934   000E6A  0E7F               	movlw	127
   935   000E6C  6FE5               	movwf	(main@motorR+4)& (0+255),b
   936   000E6E  0E0F               	movlw	15
   937   000E70  6FE6               	movwf	(main@motorR+5)& (0+255),b
   938   000E72                     
   939                           ; BSR set to: 1
   940                           ;../main.c: 42:     motorR.dir_pin = 6;
   941   000E72  0E06               	movlw	6
   942   000E74  6FE7               	movwf	(main@motorR+6)& (0+255),b
   943   000E76                     
   944                           ; BSR set to: 1
   945                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
   946   000E76  0E00               	movlw	0
   947   000E78  6FE9               	movwf	(main@motorR+8)& (0+255),b
   948   000E7A  0EC8               	movlw	200
   949   000E7C  6FE8               	movwf	(main@motorR+7)& (0+255),b
   950   000E7E                     
   951                           ; BSR set to: 1
   952                           ;../main.c: 44:     setMotorPWM(&motorL);
   953   000E7E  0ED8               	movlw	low main@motorL
   954   000E80  6E0F               	movwf	setMotorPWM@m^0,c
   955   000E82  0E01               	movlw	high main@motorL
   956   000E84  6E10               	movwf	(setMotorPWM@m+1)^0,c
   957   000E86  ECEF  F00B         	call	_setMotorPWM	;wreg free
   958   000E8A                     
   959                           ;../main.c: 45:     setMotorPWM(&motorR);
   960   000E8A  0EE1               	movlw	low main@motorR
   961   000E8C  6E0F               	movwf	setMotorPWM@m^0,c
   962   000E8E  0E01               	movlw	high main@motorR
   963   000E90  6E10               	movwf	(setMotorPWM@m+1)^0,c
   964   000E92  ECEF  F00B         	call	_setMotorPWM	;wreg free
   965   000E96                     l192:
   966   000E96  B68E               	btfsc	142,3,c	;volatile
   967   000E98  EF50  F007         	goto	u1721
   968   000E9C  EF52  F007         	goto	u1720
   969   000EA0                     u1721:
   970   000EA0  EF4B  F007         	goto	l192
   971   000EA4                     u1720:
   972   000EA4                     
   973                           ;../main.c: 72:         for (int i=0;i<8;i++){
   974   000EA4  0E00               	movlw	0
   975   000EA6  0101               	movlb	1	; () banked
   976   000EA8  6FC7               	movwf	(main@i+1)& (0+255),b
   977   000EAA  0E00               	movlw	0
   978   000EAC  6FC6               	movwf	main@i& (0+255),b
   979   000EAE                     l2871:
   980                           
   981                           ; BSR set to: 1
   982                           ;../main.c: 73:             color_read(&RGB_calibrated);
   983   000EAE  0EC8               	movlw	low main@RGB_calibrated
   984   000EB0  6E0C               	movwf	color_read@rgb^0,c
   985   000EB2  0E01               	movlw	high main@RGB_calibrated
   986   000EB4  6E0D               	movwf	(color_read@rgb+1)^0,c
   987   000EB6  ECB9  F010         	call	_color_read	;wreg free
   988   000EBA                     
   989                           ;../main.c: 74:             color_calibrated[4*i] = RGB_calibrated.L;
   990   000EBA  C1C6  F059         	movff	main@i,??_main
   991   000EBE  C1C7  F05A         	movff	main@i+1,??_main+1
   992   000EC2  90D8               	bcf	status,0,c
   993   000EC4  3659               	rlcf	??_main^0,f,c
   994   000EC6  365A               	rlcf	(??_main+1)^0,f,c
   995   000EC8  90D8               	bcf	status,0,c
   996   000ECA  3659               	rlcf	??_main^0,f,c
   997   000ECC  365A               	rlcf	(??_main+1)^0,f,c
   998   000ECE  90D8               	bcf	status,0,c
   999   000ED0  3659               	rlcf	??_main^0,f,c
  1000   000ED2  365A               	rlcf	(??_main+1)^0,f,c
  1001   000ED4  0E82               	movlw	low main@color_calibrated
  1002   000ED6  2459               	addwf	??_main^0,w,c
  1003   000ED8  6ED9               	movwf	fsr2l,c
  1004   000EDA  0E01               	movlw	high main@color_calibrated
  1005   000EDC  205A               	addwfc	(??_main+1)^0,w,c
  1006   000EDE  6EDA               	movwf	fsr2h,c
  1007   000EE0  C1C8  FFDE         	movff	main@RGB_calibrated,postinc2
  1008   000EE4  C1C9  FFDD         	movff	main@RGB_calibrated+1,postdec2
  1009   000EE8                     
  1010                           ;../main.c: 75:             color_calibrated[4*i+1] = RGB_calibrated.R;
  1011   000EE8  C1C6  F059         	movff	main@i,??_main
  1012   000EEC  C1C7  F05A         	movff	main@i+1,??_main+1
  1013   000EF0  90D8               	bcf	status,0,c
  1014   000EF2  3659               	rlcf	??_main^0,f,c
  1015   000EF4  365A               	rlcf	(??_main+1)^0,f,c
  1016   000EF6  90D8               	bcf	status,0,c
  1017   000EF8  3659               	rlcf	??_main^0,f,c
  1018   000EFA  365A               	rlcf	(??_main+1)^0,f,c
  1019   000EFC  90D8               	bcf	status,0,c
  1020   000EFE  3659               	rlcf	??_main^0,f,c
  1021   000F00  365A               	rlcf	(??_main+1)^0,f,c
  1022   000F02  0E02               	movlw	2
  1023   000F04  2659               	addwf	??_main^0,f,c
  1024   000F06  0E00               	movlw	0
  1025   000F08  225A               	addwfc	(??_main+1)^0,f,c
  1026   000F0A  0E82               	movlw	low main@color_calibrated
  1027   000F0C  2459               	addwf	??_main^0,w,c
  1028   000F0E  6ED9               	movwf	fsr2l,c
  1029   000F10  0E01               	movlw	high main@color_calibrated
  1030   000F12  205A               	addwfc	(??_main+1)^0,w,c
  1031   000F14  6EDA               	movwf	fsr2h,c
  1032   000F16  C1CA  FFDE         	movff	main@RGB_calibrated+2,postinc2
  1033   000F1A  C1CB  FFDD         	movff	main@RGB_calibrated+3,postdec2
  1034   000F1E                     
  1035                           ;../main.c: 76:             color_calibrated[4*i+2] = RGB_calibrated.G;
  1036   000F1E  C1C6  F059         	movff	main@i,??_main
  1037   000F22  C1C7  F05A         	movff	main@i+1,??_main+1
  1038   000F26  90D8               	bcf	status,0,c
  1039   000F28  3659               	rlcf	??_main^0,f,c
  1040   000F2A  365A               	rlcf	(??_main+1)^0,f,c
  1041   000F2C  90D8               	bcf	status,0,c
  1042   000F2E  3659               	rlcf	??_main^0,f,c
  1043   000F30  365A               	rlcf	(??_main+1)^0,f,c
  1044   000F32  90D8               	bcf	status,0,c
  1045   000F34  3659               	rlcf	??_main^0,f,c
  1046   000F36  365A               	rlcf	(??_main+1)^0,f,c
  1047   000F38  0E04               	movlw	4
  1048   000F3A  2659               	addwf	??_main^0,f,c
  1049   000F3C  0E00               	movlw	0
  1050   000F3E  225A               	addwfc	(??_main+1)^0,f,c
  1051   000F40  0E82               	movlw	low main@color_calibrated
  1052   000F42  2459               	addwf	??_main^0,w,c
  1053   000F44  6ED9               	movwf	fsr2l,c
  1054   000F46  0E01               	movlw	high main@color_calibrated
  1055   000F48  205A               	addwfc	(??_main+1)^0,w,c
  1056   000F4A  6EDA               	movwf	fsr2h,c
  1057   000F4C  C1CC  FFDE         	movff	main@RGB_calibrated+4,postinc2
  1058   000F50  C1CD  FFDD         	movff	main@RGB_calibrated+5,postdec2
  1059   000F54                     
  1060                           ;../main.c: 77:             color_calibrated[4*i+3] = RGB_calibrated.B;
  1061   000F54  C1C6  F059         	movff	main@i,??_main
  1062   000F58  C1C7  F05A         	movff	main@i+1,??_main+1
  1063   000F5C  90D8               	bcf	status,0,c
  1064   000F5E  3659               	rlcf	??_main^0,f,c
  1065   000F60  365A               	rlcf	(??_main+1)^0,f,c
  1066   000F62  90D8               	bcf	status,0,c
  1067   000F64  3659               	rlcf	??_main^0,f,c
  1068   000F66  365A               	rlcf	(??_main+1)^0,f,c
  1069   000F68  90D8               	bcf	status,0,c
  1070   000F6A  3659               	rlcf	??_main^0,f,c
  1071   000F6C  365A               	rlcf	(??_main+1)^0,f,c
  1072   000F6E  0E06               	movlw	6
  1073   000F70  2659               	addwf	??_main^0,f,c
  1074   000F72  0E00               	movlw	0
  1075   000F74  225A               	addwfc	(??_main+1)^0,f,c
  1076   000F76  0E82               	movlw	low main@color_calibrated
  1077   000F78  2459               	addwf	??_main^0,w,c
  1078   000F7A  6ED9               	movwf	fsr2l,c
  1079   000F7C  0E01               	movlw	high main@color_calibrated
  1080   000F7E  205A               	addwfc	(??_main+1)^0,w,c
  1081   000F80  6EDA               	movwf	fsr2h,c
  1082   000F82  C1CE  FFDE         	movff	main@RGB_calibrated+6,postinc2
  1083   000F86  C1CF  FFDD         	movff	main@RGB_calibrated+7,postdec2
  1084   000F8A                     
  1085                           ;../main.c: 78:             LATHbits.LATH3 = 1;
  1086   000F8A  8680               	bsf	128,3,c	;volatile
  1087   000F8C                     
  1088                           ;../main.c: 80:             char readout2[100];;../main.c: 81:             sprintf(reado
      +                          ut2,"%d %d %d %d \r\n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrate
      +                          d.B);
  1089   000F8C  0E7B               	movlw	low main@readout2
  1090   000F8E  0100               	movlb	0	; () banked
  1091   000F90  6F60               	movwf	sprintf@s& (0+255),b
  1092   000F92  0E00               	movlw	high main@readout2
  1093   000F94  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1094   000F96  0E04               	movlw	low (STR_2+3)
  1095   000F98  6F62               	movwf	sprintf@fmt& (0+255),b
  1096   000F9A  0E0E               	movlw	high (STR_2+3)
  1097   000F9C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1098   000F9E  C1C8  F064         	movff	main@RGB_calibrated,?_sprintf+4
  1099   000FA2  C1C9  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
  1100   000FA6  C1CA  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
  1101   000FAA  C1CB  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
  1102   000FAE  C1CC  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
  1103   000FB2  C1CD  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
  1104   000FB6  C1CE  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
  1105   000FBA  C1CF  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
  1106   000FBE  ECEA  F013         	call	_sprintf	;wreg free
  1107   000FC2                     
  1108                           ;../main.c: 82:             sendStringSerial4(readout2);
  1109   000FC2  0E7B               	movlw	low main@readout2
  1110   000FC4  6E02               	movwf	sendStringSerial4@string^0,c
  1111   000FC6  0E00               	movlw	high main@readout2
  1112   000FC8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1113   000FCA  EC60  F015         	call	_sendStringSerial4	;wreg free
  1114   000FCE                     
  1115                           ;../main.c: 83:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1116   000FCE  0EA3               	movlw	163
  1117   000FD0  6E5A               	movwf	(??_main+1)^0,c
  1118   000FD2  0E57               	movlw	87
  1119   000FD4  6E59               	movwf	??_main^0,c
  1120   000FD6  0E02               	movlw	2
  1121   000FD8                     u1847:
  1122   000FD8  2EE8               	decfsz	wreg,f,c
  1123   000FDA  D7FE               	bra	u1847
  1124   000FDC  2E59               	decfsz	??_main^0,f,c
  1125   000FDE  D7FC               	bra	u1847
  1126   000FE0  2E5A               	decfsz	(??_main+1)^0,f,c
  1127   000FE2  D7FA               	bra	u1847
  1128   000FE4  D000               	nop2	
  1129   000FE6                     
  1130                           ;../main.c: 84:             LATHbits.LATH3 = 0;
  1131   000FE6  9680               	bcf	128,3,c	;volatile
  1132   000FE8                     
  1133                           ;../main.c: 85:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1134   000FE8  0EA3               	movlw	163
  1135   000FEA  6E5A               	movwf	(??_main+1)^0,c
  1136   000FEC  0E57               	movlw	87
  1137   000FEE  6E59               	movwf	??_main^0,c
  1138   000FF0  0E02               	movlw	2
  1139   000FF2                     u1857:
  1140   000FF2  2EE8               	decfsz	wreg,f,c
  1141   000FF4  D7FE               	bra	u1857
  1142   000FF6  2E59               	decfsz	??_main^0,f,c
  1143   000FF8  D7FC               	bra	u1857
  1144   000FFA  2E5A               	decfsz	(??_main+1)^0,f,c
  1145   000FFC  D7FA               	bra	u1857
  1146   000FFE  D000               	nop2	
  1147   001000                     
  1148                           ;../main.c: 86:         }
  1149   001000  0101               	movlb	1	; () banked
  1150   001002  4BC6               	infsnz	main@i& (0+255),f,b
  1151   001004  2BC7               	incf	(main@i+1)& (0+255),f,b
  1152   001006                     
  1153                           ; BSR set to: 1
  1154   001006  BFC7               	btfsc	(main@i+1)& (0+255),7,b
  1155   001008  EF0F  F008         	goto	u1731
  1156   00100C  51C7               	movf	(main@i+1)& (0+255),w,b
  1157   00100E  E109               	bnz	u1730
  1158   001010  0E08               	movlw	8
  1159   001012  5DC6               	subwf	main@i& (0+255),w,b
  1160   001014  A0D8               	btfss	status,0,c
  1161   001016  EF0F  F008         	goto	u1731
  1162   00101A  EF11  F008         	goto	u1730
  1163   00101E                     u1731:
  1164   00101E  EF57  F007         	goto	l2871
  1165   001022                     u1730:
  1166   001022                     l2897:
  1167   001022  0E01               	movlw	1
  1168   001024  A68E               	btfss	142,3,c	;volatile
  1169   001026  0E00               	movlw	0
  1170   001028  A48E               	btfss	142,2,c	;volatile
  1171   00102A  0E00               	movlw	0
  1172   00102C  B0E8               	btfsc	wreg,0,c
  1173   00102E  EF1B  F008         	goto	u1741
  1174   001032  EF1F  F008         	goto	u1740
  1175   001036                     u1741:
  1176   001036  6A59               	clrf	??_main^0,c
  1177   001038  2A59               	incf	??_main^0,f,c
  1178   00103A  EF20  F008         	goto	u1748
  1179   00103E                     u1740:
  1180   00103E  6A59               	clrf	??_main^0,c
  1181   001040                     u1748:
  1182   001040  5059               	movf	??_main^0,w,c
  1183   001042  A4D8               	btfss	status,2,c
  1184   001044  EF26  F008         	goto	u1751
  1185   001048  EF28  F008         	goto	u1750
  1186   00104C                     u1751:
  1187   00104C  EF11  F008         	goto	l2897
  1188   001050                     u1750:
  1189   001050                     
  1190                           ;../main.c: 90:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
  1191   001050  B48E               	btfsc	142,2,c	;volatile
  1192   001052  EF2D  F008         	goto	u1761
  1193   001056  EF2F  F008         	goto	u1760
  1194   00105A                     u1761:
  1195   00105A  EF32  F008         	goto	l200
  1196   00105E                     u1760:
  1197   00105E  8E7C               	bsf	124,7,c	;volatile
  1198   001060  EFEF  F008         	goto	l2937
  1199   001064                     l200:
  1200   001064  8680               	bsf	128,3,c	;volatile
  1201   001066  EFEF  F008         	goto	l2937
  1202   00106A                     l2901:
  1203                           
  1204                           ; BSR set to: 1
  1205                           ;../main.c: 95:             time = 0;
  1206   00106A  0E00               	movlw	0
  1207   00106C  6FEF               	movwf	(_time+1)& (0+255),b
  1208   00106E  0E00               	movlw	0
  1209   001070  6FEE               	movwf	_time& (0+255),b
  1210   001072                     
  1211                           ; BSR set to: 1
  1212                           ;../main.c: 96:             forward(&motorL,&motorR);
  1213   001072  0ED8               	movlw	low main@motorL
  1214   001074  6E1A               	movwf	forward@mL^0,c
  1215   001076  0E01               	movlw	high main@motorL
  1216   001078  6E1B               	movwf	(forward@mL+1)^0,c
  1217   00107A  0EE1               	movlw	low main@motorR
  1218   00107C  6E1C               	movwf	forward@mR^0,c
  1219   00107E  0E01               	movlw	high main@motorR
  1220   001080  6E1D               	movwf	(forward@mR+1)^0,c
  1221   001082  EC3B  F013         	call	_forward	;wreg free
  1222   001086                     
  1223                           ;../main.c: 97:             color_read(&RGB_recorded);
  1224   001086  0ED0               	movlw	low main@RGB_recorded
  1225   001088  6E0C               	movwf	color_read@rgb^0,c
  1226   00108A  0E01               	movlw	high main@RGB_recorded
  1227   00108C  6E0D               	movwf	(color_read@rgb+1)^0,c
  1228   00108E  ECB9  F010         	call	_color_read	;wreg free
  1229   001092                     
  1230                           ;../main.c: 98:             if (&RGB_recorded.L>color_calibrated[8]){
  1231   001092  0ED0               	movlw	low main@RGB_recorded
  1232   001094  6E59               	movwf	??_main^0,c
  1233   001096  0E01               	movlw	high main@RGB_recorded
  1234   001098  6E5A               	movwf	(??_main+1)^0,c
  1235   00109A  5059               	movf	??_main^0,w,c
  1236   00109C  0101               	movlb	1	; () banked
  1237   00109E  5D92               	subwf	(main@color_calibrated+16)& (0+255),w,b
  1238   0010A0  505A               	movf	(??_main+1)^0,w,c
  1239   0010A2  5993               	subwfb	(main@color_calibrated+17)& (0+255),w,b
  1240   0010A4  B0D8               	btfsc	status,0,c
  1241   0010A6  EF57  F008         	goto	u1771
  1242   0010AA  EF59  F008         	goto	u1770
  1243   0010AE                     u1771:
  1244   0010AE  EFE3  F008         	goto	l2935
  1245   0010B2                     u1770:
  1246   0010B2                     
  1247                           ; BSR set to: 1
  1248                           ;../main.c: 99:                 stop(&motorL,&motorR);
  1249   0010B2  0ED8               	movlw	low main@motorL
  1250   0010B4  6E1A               	movwf	stop@mL^0,c
  1251   0010B6  0E01               	movlw	high main@motorL
  1252   0010B8  6E1B               	movwf	(stop@mL+1)^0,c
  1253   0010BA  0EE1               	movlw	low main@motorR
  1254   0010BC  6E1C               	movwf	stop@mR^0,c
  1255   0010BE  0E01               	movlw	high main@motorR
  1256   0010C0  6E1D               	movwf	(stop@mR+1)^0,c
  1257   0010C2  ECF4  F012         	call	_stop	;wreg free
  1258   0010C6                     
  1259                           ;../main.c: 100:                 color_read(&RGB_recorded);
  1260   0010C6  0ED0               	movlw	low main@RGB_recorded
  1261   0010C8  6E0C               	movwf	color_read@rgb^0,c
  1262   0010CA  0E01               	movlw	high main@RGB_recorded
  1263   0010CC  6E0D               	movwf	(color_read@rgb+1)^0,c
  1264   0010CE  ECB9  F010         	call	_color_read	;wreg free
  1265   0010D2                     
  1266                           ;../main.c: 101:                 if (LATDbits.LATD7){color_name = color_processor_easy(&
      +                          RGB_recorded);}
  1267   0010D2  AE7C               	btfss	124,7,c	;volatile
  1268   0010D4  EF6E  F008         	goto	u1781
  1269   0010D8  EF70  F008         	goto	u1780
  1270   0010DC                     u1781:
  1271   0010DC  EF7C  F008         	goto	l2917
  1272   0010E0                     u1780:
  1273   0010E0  0ED0               	movlw	low main@RGB_recorded
  1274   0010E2  6E01               	movwf	color_processor_easy@rgb^0,c
  1275   0010E4  0E01               	movlw	high main@RGB_recorded
  1276   0010E6  6E02               	movwf	(color_processor_easy@rgb+1)^0,c
  1277   0010E8  EC5A  F010         	call	_color_processor_easy	;wreg free
  1278   0010EC  C001  F1C2         	movff	?_color_processor_easy,main@color_name
  1279   0010F0  C002  F1C3         	movff	?_color_processor_easy+1,main@color_name+1
  1280   0010F4  EF8A  F008         	goto	l2919
  1281   0010F8                     l2917:
  1282   0010F8  0ED0               	movlw	low main@RGB_recorded
  1283   0010FA  6E01               	movwf	color_processor_hard@rgb^0,c
  1284   0010FC  0E01               	movlw	high main@RGB_recorded
  1285   0010FE  6E02               	movwf	(color_processor_hard@rgb+1)^0,c
  1286   001100  0E82               	movlw	low main@color_calibrated
  1287   001102  6E03               	movwf	color_processor_hard@calibrated^0,c
  1288   001104  0E01               	movlw	high main@color_calibrated
  1289   001106  6E04               	movwf	(color_processor_hard@calibrated+1)^0,c
  1290   001108  ECB4  F00A         	call	_color_processor_hard	;wreg free
  1291   00110C  C001  F1C2         	movff	?_color_processor_hard,main@color_name
  1292   001110  C002  F1C3         	movff	?_color_processor_hard+1,main@color_name+1
  1293   001114                     l2919:
  1294                           
  1295                           ;../main.c: 103:                 color_path[j] = color_name;
  1296   001114  90D8               	bcf	status,0,c
  1297   001116  0100               	movlb	0	; () banked
  1298   001118  35FD               	rlcf	main@j& (0+255),w,b
  1299   00111A  6ED9               	movwf	fsr2l,c
  1300   00111C  35FE               	rlcf	(main@j+1)& (0+255),w,b
  1301   00111E  6EDA               	movwf	fsr2h,c
  1302   001120  0EDF               	movlw	low main@color_path
  1303   001122  26D9               	addwf	fsr2l,f,c
  1304   001124  0E00               	movlw	high main@color_path
  1305   001126  22DA               	addwfc	fsr2h,f,c
  1306   001128  C1C2  FFDE         	movff	main@color_name,postinc2
  1307   00112C  C1C3  FFDD         	movff	main@color_name+1,postdec2
  1308   001130                     
  1309                           ; BSR set to: 0
  1310                           ;../main.c: 104:                 time_path[j] = time;
  1311   001130  90D8               	bcf	status,0,c
  1312   001132  35FD               	rlcf	main@j& (0+255),w,b
  1313   001134  6ED9               	movwf	fsr2l,c
  1314   001136  35FE               	rlcf	(main@j+1)& (0+255),w,b
  1315   001138  6EDA               	movwf	fsr2h,c
  1316   00113A  0E64               	movlw	low main@time_path
  1317   00113C  26D9               	addwf	fsr2l,f,c
  1318   00113E  0E01               	movlw	high main@time_path
  1319   001140  22DA               	addwfc	fsr2h,f,c
  1320   001142  C1EE  FFDE         	movff	_time,postinc2
  1321   001146  C1EF  FFDD         	movff	_time+1,postdec2
  1322   00114A                     
  1323                           ; BSR set to: 0
  1324                           ;../main.c: 107:                 char readout3[100];;../main.c: 108:                 spr
      +                          intf(readout3,"%d %d %d %d %d \r\n", color_name,RGB_recorded.L,RGB_recorded.R,RGB_record
      +                          ed.G,RGB_recorded.B);
  1325   00114A  0E00               	movlw	low main@readout3
  1326   00114C  6F60               	movwf	sprintf@s& (0+255),b
  1327   00114E  0E01               	movlw	high main@readout3
  1328   001150  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1329   001152  0E01               	movlw	low STR_2
  1330   001154  6F62               	movwf	sprintf@fmt& (0+255),b
  1331   001156  0E0E               	movlw	high STR_2
  1332   001158  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1333   00115A  C1C2  F064         	movff	main@color_name,?_sprintf+4
  1334   00115E  C1C3  F065         	movff	main@color_name+1,?_sprintf+5
  1335   001162  C1D0  F066         	movff	main@RGB_recorded,?_sprintf+6
  1336   001166  C1D1  F067         	movff	main@RGB_recorded+1,?_sprintf+7
  1337   00116A  C1D2  F068         	movff	main@RGB_recorded+2,?_sprintf+8
  1338   00116E  C1D3  F069         	movff	main@RGB_recorded+3,?_sprintf+9
  1339   001172  C1D4  F06A         	movff	main@RGB_recorded+4,?_sprintf+10
  1340   001176  C1D5  F06B         	movff	main@RGB_recorded+5,?_sprintf+11
  1341   00117A  C1D6  F06C         	movff	main@RGB_recorded+6,?_sprintf+12
  1342   00117E  C1D7  F06D         	movff	main@RGB_recorded+7,?_sprintf+13
  1343   001182  ECEA  F013         	call	_sprintf	;wreg free
  1344   001186                     
  1345                           ;../main.c: 109:                 sendStringSerial4(readout3);
  1346   001186  0E00               	movlw	low main@readout3
  1347   001188  6E02               	movwf	sendStringSerial4@string^0,c
  1348   00118A  0E01               	movlw	high main@readout3
  1349   00118C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1350   00118E  EC60  F015         	call	_sendStringSerial4	;wreg free
  1351   001192                     
  1352                           ;../main.c: 111:                 motor_action(color_name,&motorL,&motorR);
  1353   001192  C1C2  F022         	movff	main@color_name,motor_action@color
  1354   001196  C1C3  F023         	movff	main@color_name+1,motor_action@color+1
  1355   00119A  0ED8               	movlw	low main@motorL
  1356   00119C  6E24               	movwf	motor_action@l^0,c
  1357   00119E  0E01               	movlw	high main@motorL
  1358   0011A0  6E25               	movwf	(motor_action@l+1)^0,c
  1359   0011A2  0EE1               	movlw	low main@motorR
  1360   0011A4  6E26               	movwf	motor_action@r^0,c
  1361   0011A6  0E01               	movlw	high main@motorR
  1362   0011A8  6E27               	movwf	(motor_action@r+1)^0,c
  1363   0011AA  ECFE  F00E         	call	_motor_action	;wreg free
  1364   0011AE                     
  1365                           ;../main.c: 113:                 j++;
  1366   0011AE  0100               	movlb	0	; () banked
  1367   0011B0  4BFD               	infsnz	main@j& (0+255),f,b
  1368   0011B2  2BFE               	incf	(main@j+1)& (0+255),f,b
  1369   0011B4                     
  1370                           ; BSR set to: 0
  1371                           ;../main.c: 114:                 time = 0;
  1372   0011B4  0E00               	movlw	0
  1373   0011B6  0101               	movlb	1	; () banked
  1374   0011B8  6FEF               	movwf	(_time+1)& (0+255),b
  1375   0011BA  0E00               	movlw	0
  1376   0011BC  6FEE               	movwf	_time& (0+255),b
  1377   0011BE                     
  1378                           ; BSR set to: 1
  1379                           ;../main.c: 115:                 color_flag = 0;
  1380   0011BE  0E00               	movlw	0
  1381   0011C0  6E5C               	movwf	(main@color_flag+1)^0,c
  1382   0011C2  0E00               	movlw	0
  1383   0011C4  6E5B               	movwf	main@color_flag^0,c
  1384   0011C6                     l2935:
  1385                           
  1386                           ; BSR set to: 1
  1387                           ;../main.c: 117:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1388   0011C6  0E11               	movlw	17
  1389   0011C8  6E5A               	movwf	(??_main+1)^0,c
  1390   0011CA  0E3C               	movlw	60
  1391   0011CC  6E59               	movwf	??_main^0,c
  1392   0011CE  0ECB               	movlw	203
  1393   0011D0                     u1867:
  1394   0011D0  2EE8               	decfsz	wreg,f,c
  1395   0011D2  D7FE               	bra	u1867
  1396   0011D4  2E59               	decfsz	??_main^0,f,c
  1397   0011D6  D7FC               	bra	u1867
  1398   0011D8  2E5A               	decfsz	(??_main+1)^0,f,c
  1399   0011DA  D7FA               	bra	u1867
  1400   0011DC  F000               	nop	
  1401   0011DE                     l2937:
  1402                           
  1403                           ;../main.c: 94:         while (color_name != 8){
  1404   0011DE  0E08               	movlw	8
  1405   0011E0  0101               	movlb	1	; () banked
  1406   0011E2  19C2               	xorwf	main@color_name& (0+255),w,b
  1407   0011E4  11C3               	iorwf	(main@color_name+1)& (0+255),w,b
  1408   0011E6  A4D8               	btfss	status,2,c
  1409   0011E8  EFF8  F008         	goto	u1791
  1410   0011EC  EFFA  F008         	goto	u1790
  1411   0011F0                     u1791:
  1412   0011F0  EF35  F008         	goto	l2901
  1413   0011F4                     u1790:
  1414   0011F4                     
  1415                           ; BSR set to: 1
  1416                           ;../main.c: 121:         spin_180(&motorL,&motorR);
  1417   0011F4  0ED8               	movlw	low main@motorL
  1418   0011F6  6E1A               	movwf	spin_180@mL^0,c
  1419   0011F8  0E01               	movlw	high main@motorL
  1420   0011FA  6E1B               	movwf	(spin_180@mL+1)^0,c
  1421   0011FC  0EE1               	movlw	low main@motorR
  1422   0011FE  6E1C               	movwf	spin_180@mR^0,c
  1423   001200  0E01               	movlw	high main@motorR
  1424   001202  6E1D               	movwf	(spin_180@mR+1)^0,c
  1425   001204  ECB0  F011         	call	_spin_180	;wreg free
  1426   001208                     
  1427                           ;../main.c: 122:         for (int k=0;k<15;k++){
  1428   001208  0E00               	movlw	0
  1429   00120A  0101               	movlb	1	; () banked
  1430   00120C  6FC5               	movwf	(main@k+1)& (0+255),b
  1431   00120E  0E00               	movlw	0
  1432   001210  6FC4               	movwf	main@k& (0+255),b
  1433   001212                     l2943:
  1434                           
  1435                           ; BSR set to: 1
  1436   001212  BFC5               	btfsc	(main@k+1)& (0+255),7,b
  1437   001214  EF15  F009         	goto	u1801
  1438   001218  51C5               	movf	(main@k+1)& (0+255),w,b
  1439   00121A  E109               	bnz	u1800
  1440   00121C  0E0F               	movlw	15
  1441   00121E  5DC4               	subwf	main@k& (0+255),w,b
  1442   001220  A0D8               	btfss	status,0,c
  1443   001222  EF15  F009         	goto	u1801
  1444   001226  EF17  F009         	goto	u1800
  1445   00122A                     u1801:
  1446   00122A  EF19  F009         	goto	l208
  1447   00122E                     u1800:
  1448   00122E  EF4B  F007         	goto	l192
  1449   001232                     l208:
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;../main.c: 123:             INTCONbits.GIE = 0;
  1453   001232  9EF2               	bcf	242,7,c	;volatile
  1454   001234                     
  1455                           ; BSR set to: 1
  1456                           ;../main.c: 124:             time_return = 0;
  1457   001234  0E00               	movlw	0
  1458   001236  6E5E               	movwf	(main@time_return+1)^0,c
  1459   001238  0E00               	movlw	0
  1460   00123A  6E5D               	movwf	main@time_return^0,c
  1461   00123C                     
  1462                           ; BSR set to: 1
  1463                           ;../main.c: 125:             motor_action(color_path[k],&motorL,&motorR);
  1464   00123C  90D8               	bcf	status,0,c
  1465   00123E  35C4               	rlcf	main@k& (0+255),w,b
  1466   001240  6ED9               	movwf	fsr2l,c
  1467   001242  35C5               	rlcf	(main@k+1)& (0+255),w,b
  1468   001244  6EDA               	movwf	fsr2h,c
  1469   001246  0EDF               	movlw	low main@color_path
  1470   001248  26D9               	addwf	fsr2l,f,c
  1471   00124A  0E00               	movlw	high main@color_path
  1472   00124C  22DA               	addwfc	fsr2h,f,c
  1473   00124E  CFDE F022          	movff	postinc2,motor_action@color
  1474   001252  CFDD F023          	movff	postdec2,motor_action@color+1
  1475   001256  0ED8               	movlw	low main@motorL
  1476   001258  6E24               	movwf	motor_action@l^0,c
  1477   00125A  0E01               	movlw	high main@motorL
  1478   00125C  6E25               	movwf	(motor_action@l+1)^0,c
  1479   00125E  0EE1               	movlw	low main@motorR
  1480   001260  6E26               	movwf	motor_action@r^0,c
  1481   001262  0E01               	movlw	high main@motorR
  1482   001264  6E27               	movwf	(motor_action@r+1)^0,c
  1483   001266  ECFE  F00E         	call	_motor_action	;wreg free
  1484   00126A                     
  1485                           ;../main.c: 126:             forward(&motorL,&motorR);
  1486   00126A  0ED8               	movlw	low main@motorL
  1487   00126C  6E1A               	movwf	forward@mL^0,c
  1488   00126E  0E01               	movlw	high main@motorL
  1489   001270  6E1B               	movwf	(forward@mL+1)^0,c
  1490   001272  0EE1               	movlw	low main@motorR
  1491   001274  6E1C               	movwf	forward@mR^0,c
  1492   001276  0E01               	movlw	high main@motorR
  1493   001278  6E1D               	movwf	(forward@mR+1)^0,c
  1494   00127A  EC3B  F013         	call	_forward	;wreg free
  1495                           
  1496                           ;../main.c: 127:             while (time_return < time_path[k]) {
  1497   00127E  EF4F  F009         	goto	l2957
  1498   001282                     l2953:
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;../main.c: 128:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1502   001282  0E05               	movlw	5
  1503   001284  6E5A               	movwf	(??_main+1)^0,c
  1504   001286  0E0F               	movlw	15
  1505   001288  6E59               	movwf	??_main^0,c
  1506   00128A  0EF1               	movlw	241
  1507   00128C                     u1877:
  1508   00128C  2EE8               	decfsz	wreg,f,c
  1509   00128E  D7FE               	bra	u1877
  1510   001290  2E59               	decfsz	??_main^0,f,c
  1511   001292  D7FC               	bra	u1877
  1512   001294  2E5A               	decfsz	(??_main+1)^0,f,c
  1513   001296  D7FA               	bra	u1877
  1514   001298  F000               	nop	
  1515   00129A                     
  1516                           ;../main.c: 129:                 time_return++;
  1517   00129A  4A5D               	infsnz	main@time_return^0,f,c
  1518   00129C  2A5E               	incf	(main@time_return+1)^0,f,c
  1519   00129E                     l2957:
  1520                           
  1521                           ;../main.c: 127:             while (time_return < time_path[k]) {
  1522   00129E  90D8               	bcf	status,0,c
  1523   0012A0  0101               	movlb	1	; () banked
  1524   0012A2  35C4               	rlcf	main@k& (0+255),w,b
  1525   0012A4  6ED9               	movwf	fsr2l,c
  1526   0012A6  35C5               	rlcf	(main@k+1)& (0+255),w,b
  1527   0012A8  6EDA               	movwf	fsr2h,c
  1528   0012AA  0E64               	movlw	low main@time_path
  1529   0012AC  26D9               	addwf	fsr2l,f,c
  1530   0012AE  0E01               	movlw	high main@time_path
  1531   0012B0  22DA               	addwfc	fsr2h,f,c
  1532   0012B2  50DE               	movf	postinc2,w,c
  1533   0012B4  5C5D               	subwf	main@time_return^0,w,c
  1534   0012B6  50DE               	movf	postinc2,w,c
  1535   0012B8  585E               	subwfb	(main@time_return+1)^0,w,c
  1536   0012BA  A0D8               	btfss	status,0,c
  1537   0012BC  EF62  F009         	goto	u1811
  1538   0012C0  EF64  F009         	goto	u1810
  1539   0012C4                     u1811:
  1540   0012C4  EF41  F009         	goto	l2953
  1541   0012C8                     u1810:
  1542   0012C8                     
  1543                           ; BSR set to: 1
  1544                           ;../main.c: 131:             stop(&motorL,&motorR);
  1545   0012C8  0ED8               	movlw	low main@motorL
  1546   0012CA  6E1A               	movwf	stop@mL^0,c
  1547   0012CC  0E01               	movlw	high main@motorL
  1548   0012CE  6E1B               	movwf	(stop@mL+1)^0,c
  1549   0012D0  0EE1               	movlw	low main@motorR
  1550   0012D2  6E1C               	movwf	stop@mR^0,c
  1551   0012D4  0E01               	movlw	high main@motorR
  1552   0012D6  6E1D               	movwf	(stop@mR+1)^0,c
  1553   0012D8  ECF4  F012         	call	_stop	;wreg free
  1554   0012DC                     
  1555                           ;../main.c: 133:         }
  1556   0012DC  0101               	movlb	1	; () banked
  1557   0012DE  4BC4               	infsnz	main@k& (0+255),f,b
  1558   0012E0  2BC5               	incf	(main@k+1)& (0+255),f,b
  1559   0012E2  EF09  F009         	goto	l2943
  1560   0012E6  EF1F  F000         	goto	start
  1561   0012EA                     __end_of_main:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _stop *****************
  1565 ;; Defined at:
  1566 ;;		line 61 in file "../dc_motor.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  1569 ;;		 -> main@motorL(9), 
  1570 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  1571 ;;		 -> main@motorR(9), 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  i               2   30[COMRAM] int 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;Total ram usage:        7 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 3
  1590 ;; This function calls:
  1591 ;;		_setMotorPWM
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text1
  1598   0025E8                     __ptext1:
  1599                           	callstack 0
  1600   0025E8                     _stop:
  1601                           	callstack 27
  1602   0025E8                     
  1603                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  1604   0025E8  EE20 F001          	lfsr	2,1
  1605   0025EC  501A               	movf	stop@mL^0,w,c
  1606   0025EE  26D9               	addwf	fsr2l,f,c
  1607   0025F0  501B               	movf	(stop@mL+1)^0,w,c
  1608   0025F2  22DA               	addwfc	fsr2h,f,c
  1609   0025F4  0E00               	movlw	0
  1610   0025F6  6EDF               	movwf	indf2,c
  1611                           
  1612                           ;../dc_motor.c: 64:     mR->direction = 0;
  1613   0025F8  EE20 F001          	lfsr	2,1
  1614   0025FC  501C               	movf	stop@mR^0,w,c
  1615   0025FE  26D9               	addwf	fsr2l,f,c
  1616   002600  501D               	movf	(stop@mR+1)^0,w,c
  1617   002602  22DA               	addwfc	fsr2h,f,c
  1618   002604  0E00               	movlw	0
  1619   002606  6EDF               	movwf	indf2,c
  1620   002608                     
  1621                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  1622   002608  0E00               	movlw	0
  1623   00260A  6E20               	movwf	(stop@i+1)^0,c
  1624   00260C  0E05               	movlw	5
  1625   00260E  6E1F               	movwf	stop@i^0,c
  1626   002610                     l2791:
  1627                           
  1628                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  1629   002610  C01A  FFD9         	movff	stop@mL,fsr2l
  1630   002614  C01B  FFDA         	movff	stop@mL+1,fsr2h
  1631   002618  C01F  FFDF         	movff	stop@i,indf2
  1632                           
  1633                           ;../dc_motor.c: 68:         mR->power = i;
  1634   00261C  C01C  FFD9         	movff	stop@mR,fsr2l
  1635   002620  C01D  FFDA         	movff	stop@mR+1,fsr2h
  1636   002624  C01F  FFDF         	movff	stop@i,indf2
  1637   002628                     
  1638                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  1639   002628  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  1640   00262C  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  1641   002630  ECEF  F00B         	call	_setMotorPWM	;wreg free
  1642   002634                     
  1643                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  1644   002634  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  1645   002638  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  1646   00263C  ECEF  F00B         	call	_setMotorPWM	;wreg free
  1647   002640                     
  1648                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1649   002640  0ED0               	movlw	208
  1650   002642  6E1E               	movwf	??_stop^0,c
  1651   002644  0ECA               	movlw	202
  1652   002646                     u1887:
  1653   002646  2EE8               	decfsz	wreg,f,c
  1654   002648  D7FE               	bra	u1887
  1655   00264A  2E1E               	decfsz	??_stop^0,f,c
  1656   00264C  D7FC               	bra	u1887
  1657   00264E                     
  1658                           ;../dc_motor.c: 72:     }
  1659   00264E  0EFF               	movlw	255
  1660   002650  241F               	addwf	stop@i^0,w,c
  1661   002652  6E1F               	movwf	stop@i^0,c
  1662   002654  0EFF               	movlw	255
  1663   002656  2020               	addwfc	(stop@i+1)^0,w,c
  1664   002658  6E20               	movwf	(stop@i+1)^0,c
  1665   00265A  BE20               	btfsc	(stop@i+1)^0,7,c
  1666   00265C  EF3A  F013         	goto	u1710
  1667   002660  5020               	movf	(stop@i+1)^0,w,c
  1668   002662  E106               	bnz	u1711
  1669   002664  041F               	decf	stop@i^0,w,c
  1670   002666  B0D8               	btfsc	status,0,c
  1671   002668  EF38  F013         	goto	u1711
  1672   00266C  EF3A  F013         	goto	u1710
  1673   002670                     u1711:
  1674   002670  EF08  F013         	goto	l2791
  1675   002674                     u1710:
  1676   002674  0012               	return		;funcret
  1677   002676                     __end_of_stop:
  1678                           	callstack 0
  1679                           
  1680 ;; *************** function _sprintf *****************
  1681 ;; Defined at:
  1682 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1685 ;;		 -> main@readout3(100), main@readout2(100), 
  1686 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1687 ;;		 -> STR_2(18), STR_1(15), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1690 ;;  ap              2   14[BANK0 ] PTR void [1]
  1691 ;;		 -> ?_sprintf(2), 
  1692 ;;  ret             2    0        int 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2    0[BANK0 ] int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1702 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;Total ram usage:       27 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 8
  1709 ;; This function calls:
  1710 ;;		_vfprintf
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text2
  1717   0027D4                     __ptext2:
  1718                           	callstack 0
  1719   0027D4                     _sprintf:
  1720                           	callstack 22
  1721   0027D4  0E64               	movlw	low (?_sprintf+4)
  1722   0027D6  0100               	movlb	0	; () banked
  1723   0027D8  6F6E               	movwf	sprintf@ap& (0+255),b
  1724   0027DA  0E00               	movlw	high (?_sprintf+4)
  1725   0027DC  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1726   0027DE  C060  F070         	movff	sprintf@s,sprintf@f
  1727   0027E2  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  1728   0027E6                     
  1729                           ; BSR set to: 0
  1730   0027E6  0E00               	movlw	0
  1731   0027E8  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1732   0027EA  0E00               	movlw	0
  1733   0027EC  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1734   0027EE                     
  1735                           ; BSR set to: 0
  1736   0027EE  0E00               	movlw	0
  1737   0027F0  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1738   0027F2  0E00               	movlw	0
  1739   0027F4  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1740   0027F6                     
  1741                           ; BSR set to: 0
  1742   0027F6  0E70               	movlw	low sprintf@f
  1743   0027F8  6E51               	movwf	vfprintf@fp^0,c
  1744   0027FA  0E00               	movlw	high sprintf@f
  1745   0027FC  6E52               	movwf	(vfprintf@fp+1)^0,c
  1746   0027FE  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1747   002802  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1748   002806  0E6E               	movlw	low sprintf@ap
  1749   002808  6E55               	movwf	vfprintf@ap^0,c
  1750   00280A  0E00               	movlw	high sprintf@ap
  1751   00280C  6E56               	movwf	(vfprintf@ap+1)^0,c
  1752   00280E  EC13  F014         	call	_vfprintf	;wreg free
  1753   002812  0100               	movlb	0	; () banked
  1754   002814  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1755   002816  2560               	addwf	sprintf@s& (0+255),w,b
  1756   002818  6ED9               	movwf	fsr2l,c
  1757   00281A  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1758   00281C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1759   00281E  6EDA               	movwf	fsr2h,c
  1760   002820  0E00               	movlw	0
  1761   002822  6EDF               	movwf	indf2,c
  1762   002824                     
  1763                           ; BSR set to: 0
  1764   002824  0012               	return		;funcret
  1765   002826                     __end_of_sprintf:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _vfprintf *****************
  1769 ;; Defined at:
  1770 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1773 ;;		 -> sprintf@f(11), 
  1774 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1775 ;;		 -> STR_2(18), STR_1(15), 
  1776 ;;  ap              2   84[COMRAM] PTR PTR void 
  1777 ;;		 -> sprintf@ap(2), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1780 ;;		 -> STR_2(18), STR_1(15), 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2   80[COMRAM] int 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1790 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;Total ram usage:        8 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 7
  1797 ;; This function calls:
  1798 ;;		_vfpfcnvrt
  1799 ;; This function is called by:
  1800 ;;		_sprintf
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text3
  1805   002826                     __ptext3:
  1806                           	callstack 0
  1807   002826                     _vfprintf:
  1808                           	callstack 22
  1809   002826                     
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1811   002826  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1812   00282A  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1815   00282E  EF27  F014         	goto	l2587
  1816   002832                     l2585:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1819   002832  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1820   002836  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1821   00283A  0E57               	movlw	low vfprintf@cfmt
  1822   00283C  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1823   00283E  0E00               	movlw	high vfprintf@cfmt
  1824   002840  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1825   002842  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1826   002846  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1827   00284A  EC4F  F00E         	call	_vfpfcnvrt	;wreg free
  1828   00284E                     l2587:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1831   00284E  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1832   002852  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1833   002856                     	if	0	;tblptru may be non-zero
  1834   002856                     	endif
  1835   002856                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1836   002856  0E00               	movlw	low (__mediumconst shr (0+16))
  1837   002858  6EF8               	movwf	tblptru,c
  1838   00285A                     	endif
  1839   00285A  0008               	tblrd		*
  1840   00285C  50F5               	movf	tablat,w,c
  1841   00285E  0900               	iorlw	0
  1842   002860  A4D8               	btfss	status,2,c
  1843   002862  EF35  F014         	goto	u1481
  1844   002866  EF37  F014         	goto	u1480
  1845   00286A                     u1481:
  1846   00286A  EF19  F014         	goto	l2585
  1847   00286E                     u1480:
  1848   00286E                     
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1850   00286E  0E00               	movlw	0
  1851   002870  6E52               	movwf	(?_vfprintf+1)^0,c
  1852   002872  0E00               	movlw	0
  1853   002874  6E51               	movwf	?_vfprintf^0,c
  1854   002876  0012               	return		;funcret
  1855   002878                     __end_of_vfprintf:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _vfpfcnvrt *****************
  1859 ;; Defined at:
  1860 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1863 ;;		 -> sprintf@f(11), 
  1864 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1865 ;;		 -> vfprintf@cfmt(2), 
  1866 ;;  ap              2   66[COMRAM] PTR PTR void 
  1867 ;;		 -> sprintf@ap(2), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  convarg         8   70[COMRAM] struct .
  1870 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1871 ;;		 -> STR_2(18), STR_1(15), 
  1872 ;;  i               2    0        int 
  1873 ;;  done            2    0        int 
  1874 ;;  c               1    0        unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1884 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;Total ram usage:       18 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 6
  1891 ;; This function calls:
  1892 ;;		_dtoa
  1893 ;;		_fputc
  1894 ;; This function is called by:
  1895 ;;		_vfprintf
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text4
  1900   001C9E                     __ptext4:
  1901                           	callstack 0
  1902   001C9E                     _vfpfcnvrt:
  1903                           	callstack 22
  1904   001C9E                     
  1905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1906   001C9E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1907   001CA2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1908   001CA6  CFDE FFF6          	movff	postinc2,tblptrl
  1909   001CAA  CFDD FFF7          	movff	postdec2,tblptrh
  1910   001CAE                     	if	0	;tblptru may be non-zero
  1911   001CAE                     	endif
  1912   001CAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1913   001CAE  0E00               	movlw	low (__mediumconst shr (0+16))
  1914   001CB0  6EF8               	movwf	tblptru,c
  1915   001CB2                     	endif
  1916   001CB2  0008               	tblrd		*
  1917   001CB4  50F5               	movf	tablat,w,c
  1918   001CB6  0A25               	xorlw	37
  1919   001CB8  A4D8               	btfss	status,2,c
  1920   001CBA  EF61  F00E         	goto	u1381
  1921   001CBE  EF63  F00E         	goto	u1380
  1922   001CC2                     u1381:
  1923   001CC2  EFE7  F00E         	goto	l2393
  1924   001CC6                     u1380:
  1925   001CC6                     
  1926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1927   001CC6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1928   001CCA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1929   001CCE  2ADE               	incf	postinc2,f,c
  1930   001CD0  0E00               	movlw	0
  1931   001CD2  22DD               	addwfc	postdec2,f,c
  1932   001CD4                     
  1933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1934   001CD4  0E00               	movlw	0
  1935   001CD6  0101               	movlb	1	; () banked
  1936   001CD8  6FEB               	movwf	(_width+1)& (0+255),b
  1937   001CDA  0E00               	movlw	0
  1938   001CDC  6FEA               	movwf	_width& (0+255),b
  1939   001CDE  C1EA  F1F4         	movff	_width,_flags
  1940   001CE2                     
  1941                           ; BSR set to: 1
  1942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1943   001CE2  69EC               	setf	_prec& (0+255),b
  1944   001CE4  69ED               	setf	(_prec+1)& (0+255),b
  1945   001CE6                     
  1946                           ; BSR set to: 1
  1947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1948   001CE6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1949   001CEA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1950   001CEE  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1951   001CF2  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1952   001CF6                     
  1953                           ; BSR set to: 1
  1954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1955   001CF6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1956   001CFA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1957   001CFE                     	if	0	;tblptru may be non-zero
  1958   001CFE                     	endif
  1959   001CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1960   001CFE  0E00               	movlw	low (__mediumconst shr (0+16))
  1961   001D00  6EF8               	movwf	tblptru,c
  1962   001D02                     	endif
  1963   001D02  0008               	tblrd		*
  1964   001D04  50F5               	movf	tablat,w,c
  1965   001D06  0A64               	xorlw	100
  1966   001D08  B4D8               	btfsc	status,2,c
  1967   001D0A  EF89  F00E         	goto	u1391
  1968   001D0E  EF8B  F00E         	goto	u1390
  1969   001D12                     u1391:
  1970   001D12  EF9B  F00E         	goto	l2383
  1971   001D16                     u1390:
  1972   001D16                     
  1973                           ; BSR set to: 1
  1974   001D16  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1975   001D1A  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1976   001D1E                     	if	0	;tblptru may be non-zero
  1977   001D1E                     	endif
  1978   001D1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1979   001D1E  0E00               	movlw	low (__mediumconst shr (0+16))
  1980   001D20  6EF8               	movwf	tblptru,c
  1981   001D22                     	endif
  1982   001D22  0008               	tblrd		*
  1983   001D24  50F5               	movf	tablat,w,c
  1984   001D26  0A69               	xorlw	105
  1985   001D28  A4D8               	btfss	status,2,c
  1986   001D2A  EF99  F00E         	goto	u1401
  1987   001D2E  EF9B  F00E         	goto	u1400
  1988   001D32                     u1401:
  1989   001D32  EFDE  F00E         	goto	l2389
  1990   001D36                     u1400:
  1991   001D36                     l2383:
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1995   001D36  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1996   001D3A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1997   001D3E  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1998   001D42  0E02               	movlw	2
  1999   001D44  26DE               	addwf	postinc2,f,c
  2000   001D46  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2001   001D4A  0E00               	movlw	0
  2002   001D4C  22DD               	addwfc	postdec2,f,c
  2003   001D4E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2004   001D52  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2005   001D56  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2006   001D5A  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2007   001D5E  0E00               	movlw	0
  2008   001D60  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2009   001D62  0EFF               	movlw	-1
  2010   001D64  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2011   001D66  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2012   001D68  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2013   001D6A  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2014   001D6C  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2015   001D6E  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2018   001D70  0E01               	movlw	1
  2019   001D72  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2020   001D74  6E45               	movwf	??_vfpfcnvrt^0,c
  2021   001D76  0E00               	movlw	0
  2022   001D78  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2023   001D7A  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2024   001D7C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2025   001D80  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2026   001D84  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2027   001D88  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2028   001D8C                     
  2029                           ; BSR set to: 1
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2031   001D8C  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2032   001D90  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2033   001D94  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2034   001D98  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2035   001D9C  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2036   001DA0  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2037   001DA4  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2038   001DA8  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2039   001DAC  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2040   001DB0  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2041   001DB4  EC75  F009         	call	_dtoa	;wreg free
  2042   001DB8  EFFD  F00E         	goto	l1151
  2043   001DBC                     l2389:
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2046   001DBC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2047   001DC0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2048   001DC4  2ADE               	incf	postinc2,f,c
  2049   001DC6  0E00               	movlw	0
  2050   001DC8  22DD               	addwfc	postdec2,f,c
  2051   001DCA  EFFD  F00E         	goto	l1151
  2052   001DCE                     l2393:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2055   001DCE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2056   001DD2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2057   001DD6  CFDE FFF6          	movff	postinc2,tblptrl
  2058   001DDA  CFDD FFF7          	movff	postdec2,tblptrh
  2059   001DDE                     	if	0	;tblptru may be non-zero
  2060   001DDE                     	endif
  2061   001DDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2062   001DDE  0E00               	movlw	low (__mediumconst shr (0+16))
  2063   001DE0  6EF8               	movwf	tblptru,c
  2064   001DE2                     	endif
  2065   001DE2  0008               	tblrd		*
  2066   001DE4  50F5               	movf	tablat,w,c
  2067   001DE6  6E01               	movwf	fputc@c^0,c
  2068   001DE8  6A02               	clrf	(fputc@c+1)^0,c
  2069   001DEA  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2070   001DEE  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2071   001DF2  EC93  F00F         	call	_fputc	;wreg free
  2072   001DF6  EFDE  F00E         	goto	l2389
  2073   001DFA                     l1151:
  2074   001DFA  0012               	return		;funcret
  2075   001DFC                     __end_of_vfpfcnvrt:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _dtoa *****************
  2079 ;; Defined at:
  2080 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2083 ;;		 -> sprintf@f(11), 
  2084 ;;  d               8   29[COMRAM] long long 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  n               8   51[COMRAM] long long 
  2087 ;;  i               2   59[COMRAM] int 
  2088 ;;  w               2   49[COMRAM] int 
  2089 ;;  p               2   47[COMRAM] int 
  2090 ;;  s               1   61[COMRAM] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2100 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2101 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2102 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2103 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;Total ram usage:       35 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 5
  2107 ;; This function calls:
  2108 ;;		___aodiv
  2109 ;;		___aomod
  2110 ;;		_abs
  2111 ;;		_pad
  2112 ;; This function is called by:
  2113 ;;		_vfpfcnvrt
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text5
  2118   0012EA                     __ptext5:
  2119                           	callstack 0
  2120   0012EA                     _dtoa:
  2121                           	callstack 22
  2122   0012EA                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2124   0012EA  C01E  F034         	movff	dtoa@d,dtoa@n
  2125   0012EE  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2126   0012F2  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2127   0012F6  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2128   0012FA  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2129   0012FE  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2130   001302  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2131   001306  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2132   00130A                     
  2133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2134   00130A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2135   00130C  EF8A  F009         	goto	u1221
  2136   001310  EF8D  F009         	goto	u1220
  2137   001314                     u1221:
  2138   001314  0E01               	movlw	1
  2139   001316  EF8E  F009         	goto	u1230
  2140   00131A                     u1220:
  2141   00131A  0E00               	movlw	0
  2142   00131C                     u1230:
  2143   00131C  6E3E               	movwf	dtoa@s^0,c
  2144   00131E                     
  2145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2146   00131E  503E               	movf	dtoa@s^0,w,c
  2147   001320  B4D8               	btfsc	status,2,c
  2148   001322  EF95  F009         	goto	u1241
  2149   001326  EF97  F009         	goto	u1240
  2150   00132A                     u1241:
  2151   00132A  EFA7  F009         	goto	l2281
  2152   00132E                     u1240:
  2153   00132E                     
  2154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2155   00132E  1E3B               	comf	(dtoa@n+7)^0,f,c
  2156   001330  1E3A               	comf	(dtoa@n+6)^0,f,c
  2157   001332  1E39               	comf	(dtoa@n+5)^0,f,c
  2158   001334  1E38               	comf	(dtoa@n+4)^0,f,c
  2159   001336  1E37               	comf	(dtoa@n+3)^0,f,c
  2160   001338  1E36               	comf	(dtoa@n+2)^0,f,c
  2161   00133A  1E35               	comf	(dtoa@n+1)^0,f,c
  2162   00133C  6C34               	negf	dtoa@n^0,c
  2163   00133E  0E00               	movlw	0
  2164   001340  2235               	addwfc	(dtoa@n+1)^0,f,c
  2165   001342  2236               	addwfc	(dtoa@n+2)^0,f,c
  2166   001344  2237               	addwfc	(dtoa@n+3)^0,f,c
  2167   001346  2238               	addwfc	(dtoa@n+4)^0,f,c
  2168   001348  2239               	addwfc	(dtoa@n+5)^0,f,c
  2169   00134A  223A               	addwfc	(dtoa@n+6)^0,f,c
  2170   00134C  223B               	addwfc	(dtoa@n+7)^0,f,c
  2171   00134E                     l2281:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2174   00134E  0101               	movlb	1	; () banked
  2175   001350  BFED               	btfsc	(_prec+1)& (0+255),7,b
  2176   001352  EFB5  F009         	goto	u1250
  2177   001356  51ED               	movf	(_prec+1)& (0+255),w,b
  2178   001358  E106               	bnz	u1251
  2179   00135A  05EC               	decf	_prec& (0+255),w,b
  2180   00135C  B0D8               	btfsc	status,0,c
  2181   00135E  EFB3  F009         	goto	u1251
  2182   001362  EFB5  F009         	goto	u1250
  2183   001366                     u1251:
  2184   001366  EFBB  F009         	goto	l1130
  2185   00136A                     u1250:
  2186   00136A                     
  2187                           ; BSR set to: 1
  2188   00136A  0E00               	movlw	0
  2189   00136C  6E31               	movwf	(dtoa@p+1)^0,c
  2190   00136E  0E01               	movlw	1
  2191   001370  6E30               	movwf	dtoa@p^0,c
  2192   001372  EFBF  F009         	goto	l1132
  2193   001376                     l1130:
  2194                           
  2195                           ; BSR set to: 1
  2196   001376  C1EC  F030         	movff	_prec,dtoa@p
  2197   00137A  C1ED  F031         	movff	_prec+1,dtoa@p+1
  2198   00137E                     l1132:
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2202   00137E  C1EA  F032         	movff	_width,dtoa@w
  2203   001382  C1EB  F033         	movff	_width+1,dtoa@w+1
  2204   001386                     
  2205                           ; BSR set to: 1
  2206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2207   001386  503E               	movf	dtoa@s^0,w,c
  2208   001388  B4D8               	btfsc	status,2,c
  2209   00138A  EFC9  F009         	goto	u1261
  2210   00138E  EFCB  F009         	goto	u1260
  2211   001392                     u1261:
  2212   001392  EFE2  F009         	goto	l1133
  2213   001396                     u1260:
  2214   001396                     
  2215                           ; BSR set to: 1
  2216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2217   001396  0632               	decf	dtoa@w^0,f,c
  2218   001398  A0D8               	btfss	status,0,c
  2219   00139A  0633               	decf	(dtoa@w+1)^0,f,c
  2220   00139C                     
  2221                           ; BSR set to: 1
  2222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2223   00139C  503E               	movf	dtoa@s^0,w,c
  2224   00139E  A4D8               	btfss	status,2,c
  2225   0013A0  EFD4  F009         	goto	u1271
  2226   0013A4  EFD6  F009         	goto	u1270
  2227   0013A8                     u1271:
  2228   0013A8  EFDC  F009         	goto	l2293
  2229   0013AC                     u1270:
  2230   0013AC                     
  2231                           ; BSR set to: 1
  2232   0013AC  0E00               	movlw	0
  2233   0013AE  6E2F               	movwf	(_dtoa$2395+1)^0,c
  2234   0013B0  0E2B               	movlw	43
  2235   0013B2  6E2E               	movwf	_dtoa$2395^0,c
  2236   0013B4  EFE0  F009         	goto	l2295
  2237   0013B8                     l2293:
  2238                           
  2239                           ; BSR set to: 1
  2240   0013B8  0E00               	movlw	0
  2241   0013BA  6E2F               	movwf	(_dtoa$2395+1)^0,c
  2242   0013BC  0E2D               	movlw	45
  2243   0013BE  6E2E               	movwf	_dtoa$2395^0,c
  2244   0013C0                     l2295:
  2245                           
  2246                           ; BSR set to: 1
  2247   0013C0  C02E  F03E         	movff	_dtoa$2395,dtoa@s
  2248   0013C4                     l1133:
  2249                           
  2250                           ; BSR set to: 1
  2251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2252   0013C4  0E00               	movlw	0
  2253   0013C6  6E3D               	movwf	(dtoa@i+1)^0,c
  2254   0013C8  0E1F               	movlw	31
  2255   0013CA  6E3C               	movwf	dtoa@i^0,c
  2256   0013CC                     
  2257                           ; BSR set to: 1
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2259   0013CC  0E00               	movlw	0
  2260   0013CE  0102               	movlb	2	; () banked
  2261   0013D0  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2264   0013D2  EF67  F00A         	goto	l2309
  2265   0013D6                     l2299:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2268   0013D6  063C               	decf	dtoa@i^0,f,c
  2269   0013D8  A0D8               	btfss	status,0,c
  2270   0013DA  063D               	decf	(dtoa@i+1)^0,f,c
  2271   0013DC                     
  2272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2273   0013DC  0E50               	movlw	low _dbuf
  2274   0013DE  243C               	addwf	dtoa@i^0,w,c
  2275   0013E0  6ED9               	movwf	fsr2l,c
  2276   0013E2  0E02               	movlw	high _dbuf
  2277   0013E4  203D               	addwfc	(dtoa@i+1)^0,w,c
  2278   0013E6  6EDA               	movwf	fsr2h,c
  2279   0013E8  C034  F001         	movff	dtoa@n,___aomod@dividend
  2280   0013EC  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2281   0013F0  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2282   0013F4  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2283   0013F8  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2284   0013FC  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2285   001400  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2286   001404  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2287   001408  0E0A               	movlw	10
  2288   00140A  6E09               	movwf	___aomod@divisor^0,c
  2289   00140C  0E00               	movlw	0
  2290   00140E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2291   001410  0E00               	movlw	0
  2292   001412  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2293   001414  0E00               	movlw	0
  2294   001416  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2295   001418  0E00               	movlw	0
  2296   00141A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2297   00141C  0E00               	movlw	0
  2298   00141E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2299   001420  0E00               	movlw	0
  2300   001422  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2301   001424  0E00               	movlw	0
  2302   001426  6E10               	movwf	(___aomod@divisor+7)^0,c
  2303   001428  EC9D  F00D         	call	___aomod	;wreg free
  2304   00142C  C001  F026         	movff	?___aomod,??_dtoa
  2305   001430  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2306   001434  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2307   001438  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2308   00143C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2309   001440  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2310   001444  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2311   001448  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2312   00144C  C026  F013         	movff	??_dtoa,abs@a
  2313   001450  C027  F014         	movff	??_dtoa+1,abs@a+1
  2314   001454  EC40  F015         	call	_abs	;wreg free
  2315   001458  5013               	movf	?_abs^0,w,c
  2316   00145A  0F30               	addlw	48
  2317   00145C  6EDF               	movwf	indf2,c
  2318   00145E                     
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2320   00145E  0630               	decf	dtoa@p^0,f,c
  2321   001460  A0D8               	btfss	status,0,c
  2322   001462  0631               	decf	(dtoa@p+1)^0,f,c
  2323   001464                     
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2325   001464  0632               	decf	dtoa@w^0,f,c
  2326   001466  A0D8               	btfss	status,0,c
  2327   001468  0633               	decf	(dtoa@w+1)^0,f,c
  2328   00146A                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2330   00146A  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2331   00146E  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2332   001472  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2333   001476  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2334   00147A  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2335   00147E  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2336   001482  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2337   001486  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2338   00148A  0E0A               	movlw	10
  2339   00148C  6E09               	movwf	___aodiv@divisor^0,c
  2340   00148E  0E00               	movlw	0
  2341   001490  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2342   001492  0E00               	movlw	0
  2343   001494  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2344   001496  0E00               	movlw	0
  2345   001498  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2346   00149A  0E00               	movlw	0
  2347   00149C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2348   00149E  0E00               	movlw	0
  2349   0014A0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2350   0014A2  0E00               	movlw	0
  2351   0014A4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2352   0014A6  0E00               	movlw	0
  2353   0014A8  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2354   0014AA  ECD9  F00C         	call	___aodiv	;wreg free
  2355   0014AE  C001  F034         	movff	?___aodiv,dtoa@n
  2356   0014B2  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2357   0014B6  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2358   0014BA  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2359   0014BE  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2360   0014C2  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2361   0014C6  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2362   0014CA  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2363   0014CE                     l2309:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2366   0014CE  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2367   0014D0  EF72  F00A         	goto	u1281
  2368   0014D4  503D               	movf	(dtoa@i+1)^0,w,c
  2369   0014D6  E108               	bnz	u1280
  2370   0014D8  043C               	decf	dtoa@i^0,w,c
  2371   0014DA  A0D8               	btfss	status,0,c
  2372   0014DC  EF72  F00A         	goto	u1281
  2373   0014E0  EF74  F00A         	goto	u1280
  2374   0014E4                     u1281:
  2375   0014E4  EF90  F00A         	goto	l2315
  2376   0014E8                     u1280:
  2377   0014E8  5034               	movf	dtoa@n^0,w,c
  2378   0014EA  1035               	iorwf	(dtoa@n+1)^0,w,c
  2379   0014EC  1036               	iorwf	(dtoa@n+2)^0,w,c
  2380   0014EE  1037               	iorwf	(dtoa@n+3)^0,w,c
  2381   0014F0  1038               	iorwf	(dtoa@n+4)^0,w,c
  2382   0014F2  1039               	iorwf	(dtoa@n+5)^0,w,c
  2383   0014F4  103A               	iorwf	(dtoa@n+6)^0,w,c
  2384   0014F6  103B               	iorwf	(dtoa@n+7)^0,w,c
  2385   0014F8  A4D8               	btfss	status,2,c
  2386   0014FA  EF81  F00A         	goto	u1291
  2387   0014FE  EF83  F00A         	goto	u1290
  2388   001502                     u1291:
  2389   001502  EFEB  F009         	goto	l2299
  2390   001506                     u1290:
  2391   001506  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2392   001508  EF90  F00A         	goto	u1300
  2393   00150C  5031               	movf	(dtoa@p+1)^0,w,c
  2394   00150E  E106               	bnz	u1301
  2395   001510  0430               	decf	dtoa@p^0,w,c
  2396   001512  B0D8               	btfsc	status,0,c
  2397   001514  EF8E  F00A         	goto	u1301
  2398   001518  EF90  F00A         	goto	u1300
  2399   00151C                     u1301:
  2400   00151C  EFEB  F009         	goto	l2299
  2401   001520                     u1300:
  2402   001520                     l2315:
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2405   001520  503E               	movf	dtoa@s^0,w,c
  2406   001522  B4D8               	btfsc	status,2,c
  2407   001524  EF96  F00A         	goto	u1311
  2408   001528  EF98  F00A         	goto	u1310
  2409   00152C                     u1311:
  2410   00152C  EFA3  F00A         	goto	l2321
  2411   001530                     u1310:
  2412   001530                     
  2413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2414   001530  063C               	decf	dtoa@i^0,f,c
  2415   001532  A0D8               	btfss	status,0,c
  2416   001534  063D               	decf	(dtoa@i+1)^0,f,c
  2417   001536                     
  2418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2419   001536  0E50               	movlw	low _dbuf
  2420   001538  243C               	addwf	dtoa@i^0,w,c
  2421   00153A  6ED9               	movwf	fsr2l,c
  2422   00153C  0E02               	movlw	high _dbuf
  2423   00153E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2424   001540  6EDA               	movwf	fsr2h,c
  2425   001542  C03E  FFDF         	movff	dtoa@s,indf2
  2426   001546                     l2321:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2429   001546  C01C  F011         	movff	dtoa@fp,pad@fp
  2430   00154A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2431   00154E  0E50               	movlw	low _dbuf
  2432   001550  243C               	addwf	dtoa@i^0,w,c
  2433   001552  6E13               	movwf	pad@buf^0,c
  2434   001554  0E02               	movlw	high _dbuf
  2435   001556  203D               	addwfc	(dtoa@i+1)^0,w,c
  2436   001558  6E14               	movwf	(pad@buf+1)^0,c
  2437   00155A  C032  F015         	movff	dtoa@w,pad@p
  2438   00155E  C033  F016         	movff	dtoa@w+1,pad@p+1
  2439   001562  EC80  F013         	call	_pad	;wreg free
  2440   001566  0012               	return		;funcret
  2441   001568                     __end_of_dtoa:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _pad *****************
  2445 ;; Defined at:
  2446 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2449 ;;		 -> sprintf@f(11), 
  2450 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2451 ;;		 -> dbuf(32), 
  2452 ;;  p               2   20[COMRAM] int 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  w               2   25[COMRAM] int 
  2455 ;;  i               2   23[COMRAM] int 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2465 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;Total ram usage:       11 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 4
  2472 ;; This function calls:
  2473 ;;		_fputc
  2474 ;;		_fputs
  2475 ;; This function is called by:
  2476 ;;		_dtoa
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text6
  2481   002700                     __ptext6:
  2482                           	callstack 0
  2483   002700                     _pad:
  2484                           	callstack 22
  2485   002700                     
  2486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2487   002700  BE16               	btfsc	(pad@p+1)^0,7,c
  2488   002702  EF85  F013         	goto	u1111
  2489   002706  EF87  F013         	goto	u1110
  2490   00270A                     u1111:
  2491   00270A  EF8D  F013         	goto	l2205
  2492   00270E                     u1110:
  2493   00270E  C015  F01A         	movff	pad@p,pad@w
  2494   002712  C016  F01B         	movff	pad@p+1,pad@w+1
  2495   002716  EF91  F013         	goto	l1121
  2496   00271A                     l2205:
  2497   00271A  0E00               	movlw	0
  2498   00271C  6E1B               	movwf	(pad@w+1)^0,c
  2499   00271E  0E00               	movlw	0
  2500   002720  6E1A               	movwf	pad@w^0,c
  2501   002722                     l1121:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2504   002722  0E00               	movlw	0
  2505   002724  6E19               	movwf	(pad@i+1)^0,c
  2506   002726  0E00               	movlw	0
  2507   002728  6E18               	movwf	pad@i^0,c
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2510   00272A  EFA3  F013         	goto	l2211
  2511   00272E                     l2207:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2514   00272E  0E00               	movlw	0
  2515   002730  6E02               	movwf	(fputc@c+1)^0,c
  2516   002732  0E20               	movlw	32
  2517   002734  6E01               	movwf	fputc@c^0,c
  2518   002736  C011  F003         	movff	pad@fp,fputc@fp
  2519   00273A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2520   00273E  EC93  F00F         	call	_fputc	;wreg free
  2521   002742                     
  2522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2523   002742  4A18               	infsnz	pad@i^0,f,c
  2524   002744  2A19               	incf	(pad@i+1)^0,f,c
  2525   002746                     l2211:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2528   002746  501A               	movf	pad@w^0,w,c
  2529   002748  5C18               	subwf	pad@i^0,w,c
  2530   00274A  5019               	movf	(pad@i+1)^0,w,c
  2531   00274C  0A80               	xorlw	128
  2532   00274E  6E17               	movwf	??_pad^0,c
  2533   002750  501B               	movf	(pad@w+1)^0,w,c
  2534   002752  0A80               	xorlw	128
  2535   002754  5817               	subwfb	??_pad^0,w,c
  2536   002756  A0D8               	btfss	status,0,c
  2537   002758  EFB0  F013         	goto	u1121
  2538   00275C  EFB2  F013         	goto	u1120
  2539   002760                     u1121:
  2540   002760  EF97  F013         	goto	l2207
  2541   002764                     u1120:
  2542   002764                     
  2543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2544   002764  C013  F00A         	movff	pad@buf,fputs@s
  2545   002768  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2546   00276C  C011  F00C         	movff	pad@fp,fputs@fp
  2547   002770  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2548   002774  ECDC  F014         	call	_fputs	;wreg free
  2549   002778  0012               	return		;funcret
  2550   00277A                     __end_of_pad:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function _fputs *****************
  2554 ;; Defined at:
  2555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2558 ;;		 -> dbuf(32), 
  2559 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2560 ;;		 -> sprintf@f(11), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  i               2   14[COMRAM] int 
  2563 ;;  c               1   13[COMRAM] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    9[COMRAM] int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;Total ram usage:        7 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 3
  2580 ;; This function calls:
  2581 ;;		_fputc
  2582 ;; This function is called by:
  2583 ;;		_pad
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text7
  2588   0029B8                     __ptext7:
  2589                           	callstack 0
  2590   0029B8                     _fputs:
  2591                           	callstack 22
  2592   0029B8  0E00               	movlw	0
  2593   0029BA  6E10               	movwf	(fputs@i+1)^0,c
  2594   0029BC  0E00               	movlw	0
  2595   0029BE  6E0F               	movwf	fputs@i^0,c
  2596   0029C0  EFED  F014         	goto	l2119
  2597   0029C4                     l2115:
  2598   0029C4  C00E  F001         	movff	fputs@c,fputc@c
  2599   0029C8  6A02               	clrf	(fputc@c+1)^0,c
  2600   0029CA  C00C  F003         	movff	fputs@fp,fputc@fp
  2601   0029CE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2602   0029D2  EC93  F00F         	call	_fputc	;wreg free
  2603   0029D6  4A0F               	infsnz	fputs@i^0,f,c
  2604   0029D8  2A10               	incf	(fputs@i+1)^0,f,c
  2605   0029DA                     l2119:
  2606   0029DA  500F               	movf	fputs@i^0,w,c
  2607   0029DC  240A               	addwf	fputs@s^0,w,c
  2608   0029DE  6ED9               	movwf	fsr2l,c
  2609   0029E0  5010               	movf	(fputs@i+1)^0,w,c
  2610   0029E2  200B               	addwfc	(fputs@s+1)^0,w,c
  2611   0029E4  6EDA               	movwf	fsr2h,c
  2612   0029E6  50DF               	movf	indf2,w,c
  2613   0029E8  6E0E               	movwf	fputs@c^0,c
  2614   0029EA  500E               	movf	fputs@c^0,w,c
  2615   0029EC  A4D8               	btfss	status,2,c
  2616   0029EE  EFFB  F014         	goto	u971
  2617   0029F2  EFFD  F014         	goto	u970
  2618   0029F6                     u971:
  2619   0029F6  EFE2  F014         	goto	l2115
  2620   0029FA                     u970:
  2621   0029FA  0012               	return		;funcret
  2622   0029FC                     __end_of_fputs:
  2623                           	callstack 0
  2624                           
  2625 ;; *************** function _fputc *****************
  2626 ;; Defined at:
  2627 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  c               2    0[COMRAM] int 
  2630 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2631 ;;		 -> sprintf@f(11), 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  2    0[COMRAM] int 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;Total ram usage:        9 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 2
  2650 ;; This function calls:
  2651 ;;		_putch
  2652 ;; This function is called by:
  2653 ;;		_pad
  2654 ;;		_vfpfcnvrt
  2655 ;;		_fputs
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text8
  2660   001F26                     __ptext8:
  2661                           	callstack 0
  2662   001F26                     _fputc:
  2663                           	callstack 25
  2664   001F26  5003               	movf	fputc@fp^0,w,c
  2665   001F28  1004               	iorwf	(fputc@fp+1)^0,w,c
  2666   001F2A  B4D8               	btfsc	status,2,c
  2667   001F2C  EF9A  F00F         	goto	u931
  2668   001F30  EF9C  F00F         	goto	u930
  2669   001F34                     u931:
  2670   001F34  EFA5  F00F         	goto	l2103
  2671   001F38                     u930:
  2672   001F38  5003               	movf	fputc@fp^0,w,c
  2673   001F3A  1004               	iorwf	(fputc@fp+1)^0,w,c
  2674   001F3C  A4D8               	btfss	status,2,c
  2675   001F3E  EFA3  F00F         	goto	u941
  2676   001F42  EFA5  F00F         	goto	u940
  2677   001F46                     u941:
  2678   001F46  EFAA  F00F         	goto	l2105
  2679   001F4A                     u940:
  2680   001F4A                     l2103:
  2681   001F4A  5001               	movf	fputc@c^0,w,c
  2682   001F4C  EC22  F016         	call	_putch
  2683   001F50  EFF7  F00F         	goto	l1176
  2684   001F54                     l2105:
  2685   001F54  EE20 F009          	lfsr	2,9
  2686   001F58  5003               	movf	fputc@fp^0,w,c
  2687   001F5A  26D9               	addwf	fsr2l,f,c
  2688   001F5C  5004               	movf	(fputc@fp+1)^0,w,c
  2689   001F5E  22DA               	addwfc	fsr2h,f,c
  2690   001F60  50DE               	movf	postinc2,w,c
  2691   001F62  10DE               	iorwf	postinc2,w,c
  2692   001F64  B4D8               	btfsc	status,2,c
  2693   001F66  EFB7  F00F         	goto	u951
  2694   001F6A  EFB9  F00F         	goto	u950
  2695   001F6E                     u951:
  2696   001F6E  EFD4  F00F         	goto	l2109
  2697   001F72                     u950:
  2698   001F72  EE20 F009          	lfsr	2,9
  2699   001F76  5003               	movf	fputc@fp^0,w,c
  2700   001F78  26D9               	addwf	fsr2l,f,c
  2701   001F7A  5004               	movf	(fputc@fp+1)^0,w,c
  2702   001F7C  22DA               	addwfc	fsr2h,f,c
  2703   001F7E  EE10 F003          	lfsr	1,3
  2704   001F82  5003               	movf	fputc@fp^0,w,c
  2705   001F84  26E1               	addwf	fsr1l,f,c
  2706   001F86  5004               	movf	(fputc@fp+1)^0,w,c
  2707   001F88  22E2               	addwfc	fsr1h,f,c
  2708   001F8A  50DE               	movf	postinc2,w,c
  2709   001F8C  5CE6               	subwf	postinc1,w,c
  2710   001F8E  50E6               	movf	postinc1,w,c
  2711   001F90  0A80               	xorlw	128
  2712   001F92  6E09               	movwf	(??_fputc+4)^0,c
  2713   001F94  50DE               	movf	postinc2,w,c
  2714   001F96  0A80               	xorlw	128
  2715   001F98  5809               	subwfb	(??_fputc+4)^0,w,c
  2716   001F9A  B0D8               	btfsc	status,0,c
  2717   001F9C  EFD2  F00F         	goto	u961
  2718   001FA0  EFD4  F00F         	goto	u960
  2719   001FA4                     u961:
  2720   001FA4  EFF7  F00F         	goto	l1176
  2721   001FA8                     u960:
  2722   001FA8                     l2109:
  2723   001FA8  EE20 F003          	lfsr	2,3
  2724   001FAC  5003               	movf	fputc@fp^0,w,c
  2725   001FAE  26D9               	addwf	fsr2l,f,c
  2726   001FB0  5004               	movf	(fputc@fp+1)^0,w,c
  2727   001FB2  22DA               	addwfc	fsr2h,f,c
  2728   001FB4  CFDE F005          	movff	postinc2,??_fputc
  2729   001FB8  CFDD F006          	movff	postdec2,??_fputc+1
  2730   001FBC  C003  FFD9         	movff	fputc@fp,fsr2l
  2731   001FC0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2732   001FC4  CFDE F007          	movff	postinc2,??_fputc+2
  2733   001FC8  CFDD F008          	movff	postdec2,??_fputc+3
  2734   001FCC  5005               	movf	??_fputc^0,w,c
  2735   001FCE  2407               	addwf	(??_fputc+2)^0,w,c
  2736   001FD0  6ED9               	movwf	fsr2l,c
  2737   001FD2  5006               	movf	(??_fputc+1)^0,w,c
  2738   001FD4  2008               	addwfc	(??_fputc+3)^0,w,c
  2739   001FD6  6EDA               	movwf	fsr2h,c
  2740   001FD8  C001  FFDF         	movff	fputc@c,indf2
  2741   001FDC  EE20 F003          	lfsr	2,3
  2742   001FE0  5003               	movf	fputc@fp^0,w,c
  2743   001FE2  26D9               	addwf	fsr2l,f,c
  2744   001FE4  5004               	movf	(fputc@fp+1)^0,w,c
  2745   001FE6  22DA               	addwfc	fsr2h,f,c
  2746   001FE8  2ADE               	incf	postinc2,f,c
  2747   001FEA  0E00               	movlw	0
  2748   001FEC  22DD               	addwfc	postdec2,f,c
  2749   001FEE                     l1176:
  2750   001FEE  0012               	return		;funcret
  2751   001FF0                     __end_of_fputc:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _putch *****************
  2755 ;; Defined at:
  2756 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  c               1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  c               1    0[COMRAM] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_fputc
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text9
  2785   002C44                     __ptext9:
  2786                           	callstack 0
  2787   002C44                     _putch:
  2788                           	callstack 25
  2789   002C44  0012               	return		;funcret
  2790   002C46                     __end_of_putch:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _abs *****************
  2794 ;; Defined at:
  2795 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  a               2   18[COMRAM] int 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  2   18[COMRAM] int 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;Total ram usage:        4 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_dtoa
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text10
  2824   002A80                     __ptext10:
  2825                           	callstack 0
  2826   002A80                     _abs:
  2827                           	callstack 25
  2828   002A80  BE14               	btfsc	(abs@a+1)^0,7,c
  2829   002A82  EF4D  F015         	goto	u1130
  2830   002A86  5014               	movf	(abs@a+1)^0,w,c
  2831   002A88  E106               	bnz	u1131
  2832   002A8A  0413               	decf	abs@a^0,w,c
  2833   002A8C  B0D8               	btfsc	status,0,c
  2834   002A8E  EF4B  F015         	goto	u1131
  2835   002A92  EF4D  F015         	goto	u1130
  2836   002A96                     u1131:
  2837   002A96  EF5B  F015         	goto	l1161
  2838   002A9A                     u1130:
  2839   002A9A  C013  F015         	movff	abs@a,??_abs
  2840   002A9E  C014  F016         	movff	abs@a+1,??_abs+1
  2841   002AA2  1E15               	comf	??_abs^0,f,c
  2842   002AA4  1E16               	comf	(??_abs+1)^0,f,c
  2843   002AA6  4A15               	infsnz	??_abs^0,f,c
  2844   002AA8  2A16               	incf	(??_abs+1)^0,f,c
  2845   002AAA  C015  F013         	movff	??_abs,?_abs
  2846   002AAE  C016  F014         	movff	??_abs+1,?_abs+1
  2847   002AB2  EF5F  F015         	goto	l1164
  2848   002AB6                     l1161:
  2849   002AB6  C013  F013         	movff	abs@a,?_abs
  2850   002ABA  C014  F014         	movff	abs@a+1,?_abs+1
  2851   002ABE                     l1164:
  2852   002ABE  0012               	return		;funcret
  2853   002AC0                     __end_of_abs:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function ___aomod *****************
  2857 ;; Defined at:
  2858 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  dividend        8    0[COMRAM] long long 
  2861 ;;  divisor         8    8[COMRAM] long long 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  sign            1   17[COMRAM] unsigned char 
  2864 ;;  counter         1   16[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  8    0[COMRAM] long long 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2874 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;Total ram usage:       18 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_dtoa
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text11
  2889   001B3A                     __ptext11:
  2890                           	callstack 0
  2891   001B3A                     ___aomod:
  2892                           	callstack 25
  2893   001B3A  0E00               	movlw	0
  2894   001B3C  6E12               	movwf	___aomod@sign^0,c
  2895   001B3E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2896   001B40  EFA6  F00D         	goto	u1050
  2897   001B44  EFA4  F00D         	goto	u1051
  2898   001B48                     u1051:
  2899   001B48  EFB8  F00D         	goto	l2173
  2900   001B4C                     u1050:
  2901   001B4C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2902   001B4E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2903   001B50  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2904   001B52  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2905   001B54  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2906   001B56  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2907   001B58  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2908   001B5A  6C01               	negf	___aomod@dividend^0,c
  2909   001B5C  0E00               	movlw	0
  2910   001B5E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2911   001B60  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2912   001B62  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2913   001B64  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2914   001B66  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2915   001B68  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2916   001B6A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2917   001B6C  0E01               	movlw	1
  2918   001B6E  6E12               	movwf	___aomod@sign^0,c
  2919   001B70                     l2173:
  2920   001B70  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2921   001B72  EFBF  F00D         	goto	u1060
  2922   001B76  EFBD  F00D         	goto	u1061
  2923   001B7A                     u1061:
  2924   001B7A  EFCF  F00D         	goto	l2177
  2925   001B7E                     u1060:
  2926   001B7E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2927   001B80  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2928   001B82  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2929   001B84  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2930   001B86  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2931   001B88  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2932   001B8A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2933   001B8C  6C09               	negf	___aomod@divisor^0,c
  2934   001B8E  0E00               	movlw	0
  2935   001B90  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2936   001B92  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2937   001B94  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2938   001B96  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2939   001B98  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2940   001B9A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2941   001B9C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2942   001B9E                     l2177:
  2943   001B9E  5009               	movf	___aomod@divisor^0,w,c
  2944   001BA0  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2945   001BA2  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2946   001BA4  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2947   001BA6  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2948   001BA8  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2949   001BAA  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2950   001BAC  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2951   001BAE  B4D8               	btfsc	status,2,c
  2952   001BB0  EFDC  F00D         	goto	u1071
  2953   001BB4  EFDE  F00D         	goto	u1070
  2954   001BB8                     u1071:
  2955   001BB8  EF26  F00E         	goto	l2193
  2956   001BBC                     u1070:
  2957   001BBC  0E01               	movlw	1
  2958   001BBE  6E11               	movwf	___aomod@counter^0,c
  2959   001BC0  EFEC  F00D         	goto	l2183
  2960   001BC4                     l2181:
  2961   001BC4  90D8               	bcf	status,0,c
  2962   001BC6  3609               	rlcf	___aomod@divisor^0,f,c
  2963   001BC8  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2964   001BCA  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2965   001BCC  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2966   001BCE  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2967   001BD0  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2968   001BD2  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2969   001BD4  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2970   001BD6  2A11               	incf	___aomod@counter^0,f,c
  2971   001BD8                     l2183:
  2972   001BD8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2973   001BDA  EFF1  F00D         	goto	u1081
  2974   001BDE  EFF3  F00D         	goto	u1080
  2975   001BE2                     u1081:
  2976   001BE2  EFE2  F00D         	goto	l2181
  2977   001BE6                     u1080:
  2978   001BE6                     l2185:
  2979   001BE6  5009               	movf	___aomod@divisor^0,w,c
  2980   001BE8  5C01               	subwf	___aomod@dividend^0,w,c
  2981   001BEA  500A               	movf	(___aomod@divisor+1)^0,w,c
  2982   001BEC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2983   001BEE  500B               	movf	(___aomod@divisor+2)^0,w,c
  2984   001BF0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2985   001BF2  500C               	movf	(___aomod@divisor+3)^0,w,c
  2986   001BF4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2987   001BF6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2988   001BF8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2989   001BFA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2990   001BFC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2991   001BFE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2992   001C00  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2993   001C02  5010               	movf	(___aomod@divisor+7)^0,w,c
  2994   001C04  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2995   001C06  A0D8               	btfss	status,0,c
  2996   001C08  EF08  F00E         	goto	u1091
  2997   001C0C  EF0A  F00E         	goto	u1090
  2998   001C10                     u1091:
  2999   001C10  EF1A  F00E         	goto	l2189
  3000   001C14                     u1090:
  3001   001C14  5009               	movf	___aomod@divisor^0,w,c
  3002   001C16  5E01               	subwf	___aomod@dividend^0,f,c
  3003   001C18  500A               	movf	(___aomod@divisor+1)^0,w,c
  3004   001C1A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3005   001C1C  500B               	movf	(___aomod@divisor+2)^0,w,c
  3006   001C1E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3007   001C20  500C               	movf	(___aomod@divisor+3)^0,w,c
  3008   001C22  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3009   001C24  500D               	movf	(___aomod@divisor+4)^0,w,c
  3010   001C26  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3011   001C28  500E               	movf	(___aomod@divisor+5)^0,w,c
  3012   001C2A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3013   001C2C  500F               	movf	(___aomod@divisor+6)^0,w,c
  3014   001C2E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3015   001C30  5010               	movf	(___aomod@divisor+7)^0,w,c
  3016   001C32  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3017   001C34                     l2189:
  3018   001C34  90D8               	bcf	status,0,c
  3019   001C36  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3020   001C38  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3021   001C3A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3022   001C3C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3023   001C3E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3024   001C40  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3025   001C42  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3026   001C44  3209               	rrcf	___aomod@divisor^0,f,c
  3027   001C46  2E11               	decfsz	___aomod@counter^0,f,c
  3028   001C48  EFF3  F00D         	goto	l2185
  3029   001C4C                     l2193:
  3030   001C4C  5012               	movf	___aomod@sign^0,w,c
  3031   001C4E  B4D8               	btfsc	status,2,c
  3032   001C50  EF2C  F00E         	goto	u1101
  3033   001C54  EF2E  F00E         	goto	u1100
  3034   001C58                     u1101:
  3035   001C58  EF3E  F00E         	goto	l2197
  3036   001C5C                     u1100:
  3037   001C5C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3038   001C5E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3039   001C60  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3040   001C62  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3041   001C64  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3042   001C66  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3043   001C68  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3044   001C6A  6C01               	negf	___aomod@dividend^0,c
  3045   001C6C  0E00               	movlw	0
  3046   001C6E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3047   001C70  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3048   001C72  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3049   001C74  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3050   001C76  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3051   001C78  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3052   001C7A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3053   001C7C                     l2197:
  3054   001C7C  C001  F001         	movff	___aomod@dividend,?___aomod
  3055   001C80  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3056   001C84  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3057   001C88  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3058   001C8C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3059   001C90  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3060   001C94  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3061   001C98  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3062   001C9C  0012               	return		;funcret
  3063   001C9E                     __end_of___aomod:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function ___aodiv *****************
  3067 ;; Defined at:
  3068 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  dividend        8    0[COMRAM] long long 
  3071 ;;  divisor         8    8[COMRAM] long long 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  quotient        8   18[COMRAM] long long 
  3074 ;;  sign            1   17[COMRAM] unsigned char 
  3075 ;;  counter         1   16[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  8    0[COMRAM] long long 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3085 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:       26 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_dtoa
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text12
  3100   0019B2                     __ptext12:
  3101                           	callstack 0
  3102   0019B2                     ___aodiv:
  3103                           	callstack 25
  3104   0019B2  0E00               	movlw	0
  3105   0019B4  6E12               	movwf	___aodiv@sign^0,c
  3106   0019B6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3107   0019B8  EFE2  F00C         	goto	u980
  3108   0019BC  EFE0  F00C         	goto	u981
  3109   0019C0                     u981:
  3110   0019C0  EFF4  F00C         	goto	l2129
  3111   0019C4                     u980:
  3112   0019C4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3113   0019C6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3114   0019C8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3115   0019CA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3116   0019CC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3117   0019CE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3118   0019D0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3119   0019D2  6C09               	negf	___aodiv@divisor^0,c
  3120   0019D4  0E00               	movlw	0
  3121   0019D6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3122   0019D8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3123   0019DA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3124   0019DC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3125   0019DE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3126   0019E0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3127   0019E2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3128   0019E4  0E01               	movlw	1
  3129   0019E6  6E12               	movwf	___aodiv@sign^0,c
  3130   0019E8                     l2129:
  3131   0019E8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3132   0019EA  EFFB  F00C         	goto	u990
  3133   0019EE  EFF9  F00C         	goto	u991
  3134   0019F2                     u991:
  3135   0019F2  EF0D  F00D         	goto	l2135
  3136   0019F6                     u990:
  3137   0019F6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3138   0019F8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3139   0019FA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3140   0019FC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3141   0019FE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3142   001A00  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3143   001A02  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3144   001A04  6C01               	negf	___aodiv@dividend^0,c
  3145   001A06  0E00               	movlw	0
  3146   001A08  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3147   001A0A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3148   001A0C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3149   001A0E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3150   001A10  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3151   001A12  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3152   001A14  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3153   001A16  0E01               	movlw	1
  3154   001A18  1A12               	xorwf	___aodiv@sign^0,f,c
  3155   001A1A                     l2135:
  3156   001A1A  EE20  F013         	lfsr	2,___aodiv@quotient
  3157   001A1E  0E07               	movlw	7
  3158   001A20                     u1001:
  3159   001A20  6ADE               	clrf	postinc2,c
  3160   001A22  06E8               	decf	wreg,f,c
  3161   001A24  E2FD               	bc	u1001
  3162   001A26  5009               	movf	___aodiv@divisor^0,w,c
  3163   001A28  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3164   001A2A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3165   001A2C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3166   001A2E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3167   001A30  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3168   001A32  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3169   001A34  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3170   001A36  B4D8               	btfsc	status,2,c
  3171   001A38  EF20  F00D         	goto	u1011
  3172   001A3C  EF22  F00D         	goto	u1010
  3173   001A40                     u1011:
  3174   001A40  EF74  F00D         	goto	l2157
  3175   001A44                     u1010:
  3176   001A44  0E01               	movlw	1
  3177   001A46  6E11               	movwf	___aodiv@counter^0,c
  3178   001A48  EF30  F00D         	goto	l2143
  3179   001A4C                     l2141:
  3180   001A4C  90D8               	bcf	status,0,c
  3181   001A4E  3609               	rlcf	___aodiv@divisor^0,f,c
  3182   001A50  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3183   001A52  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3184   001A54  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3185   001A56  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3186   001A58  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3187   001A5A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3188   001A5C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3189   001A5E  2A11               	incf	___aodiv@counter^0,f,c
  3190   001A60                     l2143:
  3191   001A60  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3192   001A62  EF35  F00D         	goto	u1021
  3193   001A66  EF37  F00D         	goto	u1020
  3194   001A6A                     u1021:
  3195   001A6A  EF26  F00D         	goto	l2141
  3196   001A6E                     u1020:
  3197   001A6E                     l2145:
  3198   001A6E  90D8               	bcf	status,0,c
  3199   001A70  3613               	rlcf	___aodiv@quotient^0,f,c
  3200   001A72  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3201   001A74  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3202   001A76  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3203   001A78  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3204   001A7A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3205   001A7C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3206   001A7E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3207   001A80  5009               	movf	___aodiv@divisor^0,w,c
  3208   001A82  5C01               	subwf	___aodiv@dividend^0,w,c
  3209   001A84  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3210   001A86  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3211   001A88  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3212   001A8A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3213   001A8C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3214   001A8E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3215   001A90  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3216   001A92  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3217   001A94  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3218   001A96  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3219   001A98  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3220   001A9A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3221   001A9C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3222   001A9E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3223   001AA0  A0D8               	btfss	status,0,c
  3224   001AA2  EF55  F00D         	goto	u1031
  3225   001AA6  EF57  F00D         	goto	u1030
  3226   001AAA                     u1031:
  3227   001AAA  EF68  F00D         	goto	l2153
  3228   001AAE                     u1030:
  3229   001AAE  5009               	movf	___aodiv@divisor^0,w,c
  3230   001AB0  5E01               	subwf	___aodiv@dividend^0,f,c
  3231   001AB2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3232   001AB4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3233   001AB6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3234   001AB8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3235   001ABA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3236   001ABC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3237   001ABE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3238   001AC0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3239   001AC2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3240   001AC4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3241   001AC6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3242   001AC8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3243   001ACA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3244   001ACC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3245   001ACE  8013               	bsf	___aodiv@quotient^0,0,c
  3246   001AD0                     l2153:
  3247   001AD0  90D8               	bcf	status,0,c
  3248   001AD2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3249   001AD4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3250   001AD6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3251   001AD8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3252   001ADA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3253   001ADC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3254   001ADE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3255   001AE0  3209               	rrcf	___aodiv@divisor^0,f,c
  3256   001AE2  2E11               	decfsz	___aodiv@counter^0,f,c
  3257   001AE4  EF37  F00D         	goto	l2145
  3258   001AE8                     l2157:
  3259   001AE8  5012               	movf	___aodiv@sign^0,w,c
  3260   001AEA  B4D8               	btfsc	status,2,c
  3261   001AEC  EF7A  F00D         	goto	u1041
  3262   001AF0  EF7C  F00D         	goto	u1040
  3263   001AF4                     u1041:
  3264   001AF4  EF8C  F00D         	goto	l2161
  3265   001AF8                     u1040:
  3266   001AF8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3267   001AFA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3268   001AFC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3269   001AFE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3270   001B00  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3271   001B02  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3272   001B04  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3273   001B06  6C13               	negf	___aodiv@quotient^0,c
  3274   001B08  0E00               	movlw	0
  3275   001B0A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3276   001B0C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3277   001B0E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3278   001B10  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3279   001B12  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3280   001B14  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3281   001B16  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3282   001B18                     l2161:
  3283   001B18  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3284   001B1C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3285   001B20  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3286   001B24  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3287   001B28  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3288   001B2C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3289   001B30  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3290   001B34  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3291   001B38  0012               	return		;funcret
  3292   001B3A                     __end_of___aodiv:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _sendStringSerial4 *****************
  3296 ;; Defined at:
  3297 ;;		line 37 in file "../serial.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  string          2    1[COMRAM] PTR unsigned char 
  3300 ;;		 -> main@readout3(100), main@readout2(100), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;Total ram usage:        2 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 2
  3319 ;; This function calls:
  3320 ;;		_sendCharSerial4
  3321 ;; This function is called by:
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text13
  3327   002AC0                     __ptext13:
  3328                           	callstack 0
  3329   002AC0                     _sendStringSerial4:
  3330                           	callstack 28
  3331   002AC0                     
  3332                           ;../serial.c: 40:     while (*string != 0)
  3333   002AC0  EF6B  F015         	goto	l2761
  3334   002AC4                     l2757:
  3335                           
  3336                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  3337   002AC4  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3338   002AC8  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3339   002ACC  50DF               	movf	indf2,w,c
  3340   002ACE  ECF6  F015         	call	_sendCharSerial4
  3341   002AD2  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3342   002AD4  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3343   002AD6                     l2761:
  3344                           
  3345                           ;../serial.c: 40:     while (*string != 0)
  3346   002AD6  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3347   002ADA  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3348   002ADE  50DF               	movf	indf2,w,c
  3349   002AE0  A4D8               	btfss	status,2,c
  3350   002AE2  EF75  F015         	goto	u1691
  3351   002AE6  EF77  F015         	goto	u1690
  3352   002AEA                     u1691:
  3353   002AEA  EF62  F015         	goto	l2757
  3354   002AEE                     u1690:
  3355   002AEE  0012               	return		;funcret
  3356   002AF0                     __end_of_sendStringSerial4:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _sendCharSerial4 *****************
  3360 ;; Defined at:
  3361 ;;		line 30 in file "../serial.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  charToSend      1    wreg     unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  charToSend      1    0[COMRAM] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;Total ram usage:        1 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_sendStringSerial4
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text14
  3390   002BEC                     __ptext14:
  3391                           	callstack 0
  3392   002BEC                     _sendCharSerial4:
  3393                           	callstack 28
  3394                           
  3395                           ;incstack = 0
  3396                           ;sendCharSerial4@charToSend stored from wreg
  3397   002BEC  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3398   002BEE                     l409:
  3399   002BEE  010E               	movlb	14	; () banked
  3400   002BF0  A537               	btfss	55,2,b	;volatile
  3401   002BF2  EFFD  F015         	goto	u1471
  3402   002BF6  EFFF  F015         	goto	u1470
  3403   002BFA                     u1471:
  3404   002BFA  EFF7  F015         	goto	l409
  3405   002BFE                     u1470:
  3406   002BFE                     
  3407                           ; BSR set to: 14
  3408                           ;../serial.c: 32:     TX4REG = charToSend;
  3409   002BFE  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3410   002C02                     
  3411                           ; BSR set to: 14
  3412   002C02  0012               	return		;funcret
  3413   002C04                     __end_of_sendCharSerial4:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _motor_action *****************
  3417 ;; Defined at:
  3418 ;;		line 181 in file "../dc_motor.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  color           2   33[COMRAM] unsigned int 
  3421 ;;  l               2   35[COMRAM] PTR struct DC_motor
  3422 ;;		 -> main@motorL(9), 
  3423 ;;  r               2   37[COMRAM] PTR struct DC_motor
  3424 ;;		 -> main@motorR(9), 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3436 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;Total ram usage:        8 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 4
  3443 ;; This function calls:
  3444 ;;		_left_135
  3445 ;;		_left_90
  3446 ;;		_reverse
  3447 ;;		_right_135
  3448 ;;		_right_90
  3449 ;;		_spin_180
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text15
  3456   001DFC                     __ptext15:
  3457                           	callstack 0
  3458   001DFC                     _motor_action:
  3459                           	callstack 26
  3460   001DFC                     
  3461                           ;../dc_motor.c: 181: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 182: {;../dc_motor.c: 183:     switch (color){
  3462   001DFC  EF68  F00F         	goto	l2821
  3463   001E00                     l2805:
  3464                           
  3465                           ;../dc_motor.c: 185:             right_90(l,r);
  3466   001E00  C024  F01A         	movff	motor_action@l,right_90@mL
  3467   001E04  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  3468   001E08  C026  F01C         	movff	motor_action@r,right_90@mR
  3469   001E0C  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  3470   001E10  EC0C  F011         	call	_right_90	;wreg free
  3471                           
  3472                           ;../dc_motor.c: 186:             break;
  3473   001E14  EF92  F00F         	goto	l315
  3474   001E18                     l2807:
  3475                           
  3476                           ;../dc_motor.c: 188:             left_90(l,r);
  3477   001E18  C024  F01A         	movff	motor_action@l,left_90@mL
  3478   001E1C  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  3479   001E20  C026  F01C         	movff	motor_action@r,left_90@mR
  3480   001E24  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  3481   001E28  EC5E  F011         	call	_left_90	;wreg free
  3482                           
  3483                           ;../dc_motor.c: 189:             break;
  3484   001E2C  EF92  F00F         	goto	l315
  3485   001E30                     l2809:
  3486                           
  3487                           ;../dc_motor.c: 191:             spin_180(l,r);
  3488   001E30  C024  F01A         	movff	motor_action@l,spin_180@mL
  3489   001E34  C025  F01B         	movff	motor_action@l+1,spin_180@mL+1
  3490   001E38  C026  F01C         	movff	motor_action@r,spin_180@mR
  3491   001E3C  C027  F01D         	movff	motor_action@r+1,spin_180@mR+1
  3492   001E40  ECB0  F011         	call	_spin_180	;wreg free
  3493                           
  3494                           ;../dc_motor.c: 192:             break;
  3495   001E44  EF92  F00F         	goto	l315
  3496   001E48                     l2811:
  3497                           
  3498                           ;../dc_motor.c: 194:             reverse(l,r);
  3499   001E48  C024  F01A         	movff	motor_action@l,reverse@mL
  3500   001E4C  C025  F01B         	movff	motor_action@l+1,reverse@mL+1
  3501   001E50  C026  F01C         	movff	motor_action@r,reverse@mR
  3502   001E54  C027  F01D         	movff	motor_action@r+1,reverse@mR+1
  3503   001E58  EC52  F012         	call	_reverse	;wreg free
  3504                           
  3505                           ;../dc_motor.c: 195:             right_90(l,r);
  3506   001E5C  C024  F01A         	movff	motor_action@l,right_90@mL
  3507   001E60  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  3508   001E64  C026  F01C         	movff	motor_action@r,right_90@mR
  3509   001E68  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  3510   001E6C  EC0C  F011         	call	_right_90	;wreg free
  3511                           
  3512                           ;../dc_motor.c: 196:             break;
  3513   001E70  EF92  F00F         	goto	l315
  3514   001E74                     l2813:
  3515                           
  3516                           ;../dc_motor.c: 198:             reverse(l,r);
  3517   001E74  C024  F01A         	movff	motor_action@l,reverse@mL
  3518   001E78  C025  F01B         	movff	motor_action@l+1,reverse@mL+1
  3519   001E7C  C026  F01C         	movff	motor_action@r,reverse@mR
  3520   001E80  C027  F01D         	movff	motor_action@r+1,reverse@mR+1
  3521   001E84  EC52  F012         	call	_reverse	;wreg free
  3522                           
  3523                           ;../dc_motor.c: 199:             left_90(l,r);
  3524   001E88  C024  F01A         	movff	motor_action@l,left_90@mL
  3525   001E8C  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  3526   001E90  C026  F01C         	movff	motor_action@r,left_90@mR
  3527   001E94  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  3528   001E98  EC5E  F011         	call	_left_90	;wreg free
  3529                           
  3530                           ;../dc_motor.c: 200:             break;
  3531   001E9C  EF92  F00F         	goto	l315
  3532   001EA0                     l2815:
  3533                           
  3534                           ;../dc_motor.c: 202:             right_135(l,r);
  3535   001EA0  C024  F01A         	movff	motor_action@l,right_135@mL
  3536   001EA4  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  3537   001EA8  C026  F01C         	movff	motor_action@r,right_135@mR
  3538   001EAC  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  3539   001EB0  EC01  F012         	call	_right_135	;wreg free
  3540                           
  3541                           ;../dc_motor.c: 203:             break;
  3542   001EB4  EF92  F00F         	goto	l315
  3543   001EB8                     l2817:
  3544                           
  3545                           ;../dc_motor.c: 205:             left_135(l,r);
  3546   001EB8  C024  F01A         	movff	motor_action@l,left_135@mL
  3547   001EBC  C025  F01B         	movff	motor_action@l+1,left_135@mL+1
  3548   001EC0  C026  F01C         	movff	motor_action@r,left_135@mR
  3549   001EC4  C027  F01D         	movff	motor_action@r+1,left_135@mR+1
  3550   001EC8  ECA3  F012         	call	_left_135	;wreg free
  3551                           
  3552                           ;../dc_motor.c: 206:             break;
  3553   001ECC  EF92  F00F         	goto	l315
  3554   001ED0                     l2821:
  3555   001ED0  C022  F028         	movff	motor_action@color,??_motor_action
  3556   001ED4  C023  F029         	movff	motor_action@color+1,??_motor_action+1
  3557                           
  3558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3559                           ; Switch size 1, requested type "simple"
  3560                           ; Number of cases is 1, Range of values is 0 to 0
  3561                           ; switch strategies available:
  3562                           ; Name         Instructions Cycles
  3563                           ; simple_byte            4     3 (average)
  3564                           ;	Chosen strategy is simple_byte
  3565   001ED8  5029               	movf	(??_motor_action+1)^0,w,c
  3566   001EDA  0A00               	xorlw	0	; case 0
  3567   001EDC  B4D8               	btfsc	status,2,c
  3568   001EDE  EF73  F00F         	goto	l2999
  3569   001EE2  EF92  F00F         	goto	l315
  3570   001EE6                     l2999:
  3571                           
  3572                           ; Switch size 1, requested type "simple"
  3573                           ; Number of cases is 7, Range of values is 1 to 7
  3574                           ; switch strategies available:
  3575                           ; Name         Instructions Cycles
  3576                           ; simple_byte           22    12 (average)
  3577                           ;	Chosen strategy is simple_byte
  3578   001EE6  5028               	movf	??_motor_action^0,w,c
  3579   001EE8  0A01               	xorlw	1	; case 1
  3580   001EEA  B4D8               	btfsc	status,2,c
  3581   001EEC  EF00  F00F         	goto	l2805
  3582   001EF0  0A03               	xorlw	3	; case 2
  3583   001EF2  B4D8               	btfsc	status,2,c
  3584   001EF4  EF0C  F00F         	goto	l2807
  3585   001EF8  0A01               	xorlw	1	; case 3
  3586   001EFA  B4D8               	btfsc	status,2,c
  3587   001EFC  EF18  F00F         	goto	l2809
  3588   001F00  0A07               	xorlw	7	; case 4
  3589   001F02  B4D8               	btfsc	status,2,c
  3590   001F04  EF24  F00F         	goto	l2811
  3591   001F08  0A01               	xorlw	1	; case 5
  3592   001F0A  B4D8               	btfsc	status,2,c
  3593   001F0C  EF3A  F00F         	goto	l2813
  3594   001F10  0A03               	xorlw	3	; case 6
  3595   001F12  B4D8               	btfsc	status,2,c
  3596   001F14  EF50  F00F         	goto	l2815
  3597   001F18  0A01               	xorlw	1	; case 7
  3598   001F1A  B4D8               	btfsc	status,2,c
  3599   001F1C  EF5C  F00F         	goto	l2817
  3600   001F20  EF92  F00F         	goto	l315
  3601   001F24                     l315:
  3602   001F24  0012               	return		;funcret
  3603   001F26                     __end_of_motor_action:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function _spin_180 *****************
  3607 ;; Defined at:
  3608 ;;		line 136 in file "../dc_motor.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3611 ;;		 -> main@motorL(9), 
  3612 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3613 ;;		 -> main@motorR(9), 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  i               2   31[COMRAM] int 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;Total ram usage:        8 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 3
  3632 ;; This function calls:
  3633 ;;		_setMotorPWM
  3634 ;; This function is called by:
  3635 ;;		_main
  3636 ;;		_motor_action
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text16
  3641   002360                     __ptext16:
  3642                           	callstack 0
  3643   002360                     _spin_180:
  3644                           	callstack 27
  3645   002360                     
  3646                           ;../dc_motor.c: 136: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 137: {;../dc_motor.c: 138:     mL->direction = 1;
  3647   002360  EE20 F001          	lfsr	2,1
  3648   002364  501A               	movf	spin_180@mL^0,w,c
  3649   002366  26D9               	addwf	fsr2l,f,c
  3650   002368  501B               	movf	(spin_180@mL+1)^0,w,c
  3651   00236A  22DA               	addwfc	fsr2h,f,c
  3652   00236C  0E01               	movlw	1
  3653   00236E  6EDF               	movwf	indf2,c
  3654                           
  3655                           ;../dc_motor.c: 139:     mR->direction = 0;
  3656   002370  EE20 F001          	lfsr	2,1
  3657   002374  501C               	movf	spin_180@mR^0,w,c
  3658   002376  26D9               	addwf	fsr2l,f,c
  3659   002378  501D               	movf	(spin_180@mR+1)^0,w,c
  3660   00237A  22DA               	addwfc	fsr2h,f,c
  3661   00237C  0E00               	movlw	0
  3662   00237E  6EDF               	movwf	indf2,c
  3663   002380                     
  3664                           ;../dc_motor.c: 140:     for (int i = 0;i<50;i = i + 2)
  3665   002380  0E00               	movlw	0
  3666   002382  6E21               	movwf	(spin_180@i+1)^0,c
  3667   002384  0E00               	movlw	0
  3668   002386  6E20               	movwf	spin_180@i^0,c
  3669   002388                     l2445:
  3670                           
  3671                           ;../dc_motor.c: 141:     {;../dc_motor.c: 142:         mL->power = i;
  3672   002388  C01A  FFD9         	movff	spin_180@mL,fsr2l
  3673   00238C  C01B  FFDA         	movff	spin_180@mL+1,fsr2h
  3674   002390  C020  FFDF         	movff	spin_180@i,indf2
  3675   002394                     
  3676                           ;../dc_motor.c: 143:         mR->power = 50 + i;
  3677   002394  5020               	movf	spin_180@i^0,w,c
  3678   002396  0F32               	addlw	50
  3679   002398  C01C  FFD9         	movff	spin_180@mR,fsr2l
  3680   00239C  C01D  FFDA         	movff	spin_180@mR+1,fsr2h
  3681   0023A0  6EDF               	movwf	indf2,c
  3682   0023A2                     
  3683                           ;../dc_motor.c: 144:         setMotorPWM(mL);
  3684   0023A2  C01A  F00F         	movff	spin_180@mL,setMotorPWM@m
  3685   0023A6  C01B  F010         	movff	spin_180@mL+1,setMotorPWM@m+1
  3686   0023AA  ECEF  F00B         	call	_setMotorPWM	;wreg free
  3687   0023AE                     
  3688                           ;../dc_motor.c: 145:         setMotorPWM(mR);
  3689   0023AE  C01C  F00F         	movff	spin_180@mR,setMotorPWM@m
  3690   0023B2  C01D  F010         	movff	spin_180@mR+1,setMotorPWM@m+1
  3691   0023B6  ECEF  F00B         	call	_setMotorPWM	;wreg free
  3692   0023BA                     
  3693                           ;../dc_motor.c: 146:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3694   0023BA  0E35               	movlw	53
  3695   0023BC                     u1897:
  3696   0023BC  2EE8               	decfsz	wreg,f,c
  3697   0023BE  D7FE               	bra	u1897
  3698   0023C0  F000               	nop	
  3699   0023C2                     
  3700                           ;../dc_motor.c: 147:     }
  3701   0023C2  0E02               	movlw	2
  3702   0023C4  2420               	addwf	spin_180@i^0,w,c
  3703   0023C6  6E20               	movwf	spin_180@i^0,c
  3704   0023C8  0E00               	movlw	0
  3705   0023CA  2021               	addwfc	(spin_180@i+1)^0,w,c
  3706   0023CC  6E21               	movwf	(spin_180@i+1)^0,c
  3707   0023CE  BE21               	btfsc	(spin_180@i+1)^0,7,c
  3708   0023D0  EFF3  F011         	goto	u1411
  3709   0023D4  5021               	movf	(spin_180@i+1)^0,w,c
  3710   0023D6  E109               	bnz	u1410
  3711   0023D8  0E32               	movlw	50
  3712   0023DA  5C20               	subwf	spin_180@i^0,w,c
  3713   0023DC  A0D8               	btfss	status,0,c
  3714   0023DE  EFF3  F011         	goto	u1411
  3715   0023E2  EFF5  F011         	goto	u1410
  3716   0023E6                     u1411:
  3717   0023E6  EFC4  F011         	goto	l2445
  3718   0023EA                     u1410:
  3719   0023EA                     
  3720                           ;../dc_motor.c: 148:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3721   0023EA  0E18               	movlw	24
  3722   0023EC  6E1F               	movwf	(??_spin_180+1)^0,c
  3723   0023EE  0E8A               	movlw	138
  3724   0023F0  6E1E               	movwf	??_spin_180^0,c
  3725   0023F2  0EE8               	movlw	232
  3726   0023F4                     u1907:
  3727   0023F4  2EE8               	decfsz	wreg,f,c
  3728   0023F6  D7FE               	bra	u1907
  3729   0023F8  2E1E               	decfsz	??_spin_180^0,f,c
  3730   0023FA  D7FC               	bra	u1907
  3731   0023FC  2E1F               	decfsz	(??_spin_180+1)^0,f,c
  3732   0023FE  D7FA               	bra	u1907
  3733   002400  0012               	return		;funcret
  3734   002402                     __end_of_spin_180:
  3735                           	callstack 0
  3736                           
  3737 ;; *************** function _right_90 *****************
  3738 ;; Defined at:
  3739 ;;		line 106 in file "../dc_motor.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3742 ;;		 -> main@motorL(9), 
  3743 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3744 ;;		 -> main@motorR(9), 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  i               2   31[COMRAM] int 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;Total ram usage:        8 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 3
  3763 ;; This function calls:
  3764 ;;		_setMotorPWM
  3765 ;; This function is called by:
  3766 ;;		_motor_action
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text17
  3771   002218                     __ptext17:
  3772                           	callstack 0
  3773   002218                     _right_90:
  3774                           	callstack 26
  3775   002218                     
  3776                           ;../dc_motor.c: 106: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 107: {;../dc_motor.c: 108:     mL->direction = 1;
  3777   002218  EE20 F001          	lfsr	2,1
  3778   00221C  501A               	movf	right_90@mL^0,w,c
  3779   00221E  26D9               	addwf	fsr2l,f,c
  3780   002220  501B               	movf	(right_90@mL+1)^0,w,c
  3781   002222  22DA               	addwfc	fsr2h,f,c
  3782   002224  0E01               	movlw	1
  3783   002226  6EDF               	movwf	indf2,c
  3784                           
  3785                           ;../dc_motor.c: 109:     mR->direction = 0;
  3786   002228  EE20 F001          	lfsr	2,1
  3787   00222C  501C               	movf	right_90@mR^0,w,c
  3788   00222E  26D9               	addwf	fsr2l,f,c
  3789   002230  501D               	movf	(right_90@mR+1)^0,w,c
  3790   002232  22DA               	addwfc	fsr2h,f,c
  3791   002234  0E00               	movlw	0
  3792   002236  6EDF               	movwf	indf2,c
  3793   002238                     
  3794                           ;../dc_motor.c: 110:     for (int i = 0;i<50;i = i + 2)
  3795   002238  0E00               	movlw	0
  3796   00223A  6E21               	movwf	(right_90@i+1)^0,c
  3797   00223C  0E00               	movlw	0
  3798   00223E  6E20               	movwf	right_90@i^0,c
  3799   002240                     l2491:
  3800                           
  3801                           ;../dc_motor.c: 111:     {;../dc_motor.c: 112:         mL->power = i;
  3802   002240  C01A  FFD9         	movff	right_90@mL,fsr2l
  3803   002244  C01B  FFDA         	movff	right_90@mL+1,fsr2h
  3804   002248  C020  FFDF         	movff	right_90@i,indf2
  3805   00224C                     
  3806                           ;../dc_motor.c: 113:         mR->power = 50 + i;
  3807   00224C  5020               	movf	right_90@i^0,w,c
  3808   00224E  0F32               	addlw	50
  3809   002250  C01C  FFD9         	movff	right_90@mR,fsr2l
  3810   002254  C01D  FFDA         	movff	right_90@mR+1,fsr2h
  3811   002258  6EDF               	movwf	indf2,c
  3812   00225A                     
  3813                           ;../dc_motor.c: 114:         setMotorPWM(mL);
  3814   00225A  C01A  F00F         	movff	right_90@mL,setMotorPWM@m
  3815   00225E  C01B  F010         	movff	right_90@mL+1,setMotorPWM@m+1
  3816   002262  ECEF  F00B         	call	_setMotorPWM	;wreg free
  3817   002266                     
  3818                           ;../dc_motor.c: 115:         setMotorPWM(mR);
  3819   002266  C01C  F00F         	movff	right_90@mR,setMotorPWM@m
  3820   00226A  C01D  F010         	movff	right_90@mR+1,setMotorPWM@m+1
  3821   00226E  ECEF  F00B         	call	_setMotorPWM	;wreg free
  3822   002272                     
  3823                           ;../dc_motor.c: 116:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3824   002272  0E35               	movlw	53
  3825   002274                     u1917:
  3826   002274  2EE8               	decfsz	wreg,f,c
  3827   002276  D7FE               	bra	u1917
  3828   002278  F000               	nop	
  3829   00227A                     
  3830                           ;../dc_motor.c: 117:     }
  3831   00227A  0E02               	movlw	2
  3832   00227C  2420               	addwf	right_90@i^0,w,c
  3833   00227E  6E20               	movwf	right_90@i^0,c
  3834   002280  0E00               	movlw	0
  3835   002282  2021               	addwfc	(right_90@i+1)^0,w,c
  3836   002284  6E21               	movwf	(right_90@i+1)^0,c
  3837   002286  BE21               	btfsc	(right_90@i+1)^0,7,c
  3838   002288  EF4F  F011         	goto	u1431
  3839   00228C  5021               	movf	(right_90@i+1)^0,w,c
  3840   00228E  E109               	bnz	u1430
  3841   002290  0E32               	movlw	50
  3842   002292  5C20               	subwf	right_90@i^0,w,c
  3843   002294  A0D8               	btfss	status,0,c
  3844   002296  EF4F  F011         	goto	u1431
  3845   00229A  EF51  F011         	goto	u1430
  3846   00229E                     u1431:
  3847   00229E  EF20  F011         	goto	l2491
  3848   0022A2                     u1430:
  3849   0022A2                     
  3850                           ;../dc_motor.c: 118:     _delay((unsigned long)((165)*(64000000/4000.0)));
  3851   0022A2  0E0E               	movlw	14
  3852   0022A4  6E1F               	movwf	(??_right_90+1)^0,c
  3853   0022A6  0E65               	movlw	101
  3854   0022A8  6E1E               	movwf	??_right_90^0,c
  3855   0022AA  0E87               	movlw	135
  3856   0022AC                     u1927:
  3857   0022AC  2EE8               	decfsz	wreg,f,c
  3858   0022AE  D7FE               	bra	u1927
  3859   0022B0  2E1E               	decfsz	??_right_90^0,f,c
  3860   0022B2  D7FC               	bra	u1927
  3861   0022B4  2E1F               	decfsz	(??_right_90+1)^0,f,c
  3862   0022B6  D7FA               	bra	u1927
  3863   0022B8  F000               	nop	
  3864   0022BA  0012               	return		;funcret
  3865   0022BC                     __end_of_right_90:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _right_135 *****************
  3869 ;; Defined at:
  3870 ;;		line 151 in file "../dc_motor.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3873 ;;		 -> main@motorL(9), 
  3874 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3875 ;;		 -> main@motorR(9), 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  i               2   31[COMRAM] int 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;Total ram usage:        8 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 3
  3894 ;; This function calls:
  3895 ;;		_setMotorPWM
  3896 ;; This function is called by:
  3897 ;;		_motor_action
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text18
  3902   002402                     __ptext18:
  3903                           	callstack 0
  3904   002402                     _right_135:
  3905                           	callstack 26
  3906   002402                     
  3907                           ;../dc_motor.c: 151: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 152: {;../dc_motor.c: 153:     mL->direction = 1;
  3908   002402  EE20 F001          	lfsr	2,1
  3909   002406  501A               	movf	right_135@mL^0,w,c
  3910   002408  26D9               	addwf	fsr2l,f,c
  3911   00240A  501B               	movf	(right_135@mL+1)^0,w,c
  3912   00240C  22DA               	addwfc	fsr2h,f,c
  3913   00240E  0E01               	movlw	1
  3914   002410  6EDF               	movwf	indf2,c
  3915                           
  3916                           ;../dc_motor.c: 154:     mR->direction = 0;
  3917   002412  EE20 F001          	lfsr	2,1
  3918   002416  501C               	movf	right_135@mR^0,w,c
  3919   002418  26D9               	addwf	fsr2l,f,c
  3920   00241A  501D               	movf	(right_135@mR+1)^0,w,c
  3921   00241C  22DA               	addwfc	fsr2h,f,c
  3922   00241E  0E00               	movlw	0
  3923   002420  6EDF               	movwf	indf2,c
  3924   002422                     
  3925                           ;../dc_motor.c: 155:     for (int i = 0;i<50;i = i + 2)
  3926   002422  0E00               	movlw	0
  3927   002424  6E21               	movwf	(right_135@i+1)^0,c
  3928   002426  0E00               	movlw	0
  3929   002428  6E20               	movwf	right_135@i^0,c
  3930   00242A                     l2539:
  3931                           
  3932                           ;../dc_motor.c: 156:     {;../dc_motor.c: 157:         mL->power = i;
  3933   00242A  C01A  FFD9         	movff	right_135@mL,fsr2l
  3934   00242E  C01B  FFDA         	movff	right_135@mL+1,fsr2h
  3935   002432  C020  FFDF         	movff	right_135@i,indf2
  3936   002436                     
  3937                           ;../dc_motor.c: 158:         mR->power = 50 + i;
  3938   002436  5020               	movf	right_135@i^0,w,c
  3939   002438  0F32               	addlw	50
  3940   00243A  C01C  FFD9         	movff	right_135@mR,fsr2l
  3941   00243E  C01D  FFDA         	movff	right_135@mR+1,fsr2h
  3942   002442  6EDF               	movwf	indf2,c
  3943   002444                     
  3944                           ;../dc_motor.c: 159:         setMotorPWM(mL);
  3945   002444  C01A  F00F         	movff	right_135@mL,setMotorPWM@m
  3946   002448  C01B  F010         	movff	right_135@mL+1,setMotorPWM@m+1
  3947   00244C  ECEF  F00B         	call	_setMotorPWM	;wreg free
  3948   002450                     
  3949                           ;../dc_motor.c: 160:         setMotorPWM(mR);
  3950   002450  C01C  F00F         	movff	right_135@mR,setMotorPWM@m
  3951   002454  C01D  F010         	movff	right_135@mR+1,setMotorPWM@m+1
  3952   002458  ECEF  F00B         	call	_setMotorPWM	;wreg free
  3953   00245C                     
  3954                           ;../dc_motor.c: 161:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3955   00245C  0E35               	movlw	53
  3956   00245E                     u1937:
  3957   00245E  2EE8               	decfsz	wreg,f,c
  3958   002460  D7FE               	bra	u1937
  3959   002462  F000               	nop	
  3960   002464                     
  3961                           ;../dc_motor.c: 162:     }
  3962   002464  0E02               	movlw	2
  3963   002466  2420               	addwf	right_135@i^0,w,c
  3964   002468  6E20               	movwf	right_135@i^0,c
  3965   00246A  0E00               	movlw	0
  3966   00246C  2021               	addwfc	(right_135@i+1)^0,w,c
  3967   00246E  6E21               	movwf	(right_135@i+1)^0,c
  3968   002470  BE21               	btfsc	(right_135@i+1)^0,7,c
  3969   002472  EF44  F012         	goto	u1451
  3970   002476  5021               	movf	(right_135@i+1)^0,w,c
  3971   002478  E109               	bnz	u1450
  3972   00247A  0E32               	movlw	50
  3973   00247C  5C20               	subwf	right_135@i^0,w,c
  3974   00247E  A0D8               	btfss	status,0,c
  3975   002480  EF44  F012         	goto	u1451
  3976   002484  EF46  F012         	goto	u1450
  3977   002488                     u1451:
  3978   002488  EF15  F012         	goto	l2539
  3979   00248C                     u1450:
  3980   00248C                     
  3981                           ;../dc_motor.c: 163:     _delay((unsigned long)((230)*(64000000/4000.0)));
  3982   00248C  0E13               	movlw	19
  3983   00248E  6E1F               	movwf	(??_right_135+1)^0,c
  3984   002490  0EAC               	movlw	172
  3985   002492  6E1E               	movwf	??_right_135^0,c
  3986   002494  0E2A               	movlw	42
  3987   002496                     u1947:
  3988   002496  2EE8               	decfsz	wreg,f,c
  3989   002498  D7FE               	bra	u1947
  3990   00249A  2E1E               	decfsz	??_right_135^0,f,c
  3991   00249C  D7FC               	bra	u1947
  3992   00249E  2E1F               	decfsz	(??_right_135+1)^0,f,c
  3993   0024A0  D7FA               	bra	u1947
  3994   0024A2  0012               	return		;funcret
  3995   0024A4                     __end_of_right_135:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function _reverse *****************
  3999 ;; Defined at:
  4000 ;;		line 91 in file "../dc_motor.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4003 ;;		 -> main@motorL(9), 
  4004 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4005 ;;		 -> main@motorR(9), 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  i               2   31[COMRAM] int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;Total ram usage:        8 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		_setMotorPWM
  4026 ;; This function is called by:
  4027 ;;		_motor_action
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text19
  4032   0024A4                     __ptext19:
  4033                           	callstack 0
  4034   0024A4                     _reverse:
  4035                           	callstack 26
  4036   0024A4                     
  4037                           ;../dc_motor.c: 91: void reverse (struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 92: {;../dc_motor.c: 93:     mL->direction = 0;
  4038   0024A4  EE20 F001          	lfsr	2,1
  4039   0024A8  501A               	movf	reverse@mL^0,w,c
  4040   0024AA  26D9               	addwf	fsr2l,f,c
  4041   0024AC  501B               	movf	(reverse@mL+1)^0,w,c
  4042   0024AE  22DA               	addwfc	fsr2h,f,c
  4043   0024B0  0E00               	movlw	0
  4044   0024B2  6EDF               	movwf	indf2,c
  4045                           
  4046                           ;../dc_motor.c: 94:     mR->direction = 0;
  4047   0024B4  EE20 F001          	lfsr	2,1
  4048   0024B8  501C               	movf	reverse@mR^0,w,c
  4049   0024BA  26D9               	addwf	fsr2l,f,c
  4050   0024BC  501D               	movf	(reverse@mR+1)^0,w,c
  4051   0024BE  22DA               	addwfc	fsr2h,f,c
  4052   0024C0  0E00               	movlw	0
  4053   0024C2  6EDF               	movwf	indf2,c
  4054   0024C4                     
  4055                           ;../dc_motor.c: 95:     for (int i=0;i<51;i=i + 2)
  4056   0024C4  0E00               	movlw	0
  4057   0024C6  6E21               	movwf	(reverse@i+1)^0,c
  4058   0024C8  0E00               	movlw	0
  4059   0024CA  6E20               	movwf	reverse@i^0,c
  4060   0024CC                     l2469:
  4061                           
  4062                           ;../dc_motor.c: 96:     {;../dc_motor.c: 97:         mL->power = i;
  4063   0024CC  C01A  FFD9         	movff	reverse@mL,fsr2l
  4064   0024D0  C01B  FFDA         	movff	reverse@mL+1,fsr2h
  4065   0024D4  C020  FFDF         	movff	reverse@i,indf2
  4066                           
  4067                           ;../dc_motor.c: 98:         mR->power = i;
  4068   0024D8  C01C  FFD9         	movff	reverse@mR,fsr2l
  4069   0024DC  C01D  FFDA         	movff	reverse@mR+1,fsr2h
  4070   0024E0  C020  FFDF         	movff	reverse@i,indf2
  4071   0024E4                     
  4072                           ;../dc_motor.c: 99:         setMotorPWM(mL);
  4073   0024E4  C01A  F00F         	movff	reverse@mL,setMotorPWM@m
  4074   0024E8  C01B  F010         	movff	reverse@mL+1,setMotorPWM@m+1
  4075   0024EC  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4076   0024F0                     
  4077                           ;../dc_motor.c: 100:         setMotorPWM(mR);
  4078   0024F0  C01C  F00F         	movff	reverse@mR,setMotorPWM@m
  4079   0024F4  C01D  F010         	movff	reverse@mR+1,setMotorPWM@m+1
  4080   0024F8  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4081   0024FC                     
  4082                           ;../dc_motor.c: 101:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4083   0024FC  0E35               	movlw	53
  4084   0024FE                     u1957:
  4085   0024FE  2EE8               	decfsz	wreg,f,c
  4086   002500  D7FE               	bra	u1957
  4087   002502  F000               	nop	
  4088   002504                     
  4089                           ;../dc_motor.c: 102:     }
  4090   002504  0E02               	movlw	2
  4091   002506  2420               	addwf	reverse@i^0,w,c
  4092   002508  6E20               	movwf	reverse@i^0,c
  4093   00250A  0E00               	movlw	0
  4094   00250C  2021               	addwfc	(reverse@i+1)^0,w,c
  4095   00250E  6E21               	movwf	(reverse@i+1)^0,c
  4096   002510  BE21               	btfsc	(reverse@i+1)^0,7,c
  4097   002512  EF94  F012         	goto	u1421
  4098   002516  5021               	movf	(reverse@i+1)^0,w,c
  4099   002518  E109               	bnz	u1420
  4100   00251A  0E33               	movlw	51
  4101   00251C  5C20               	subwf	reverse@i^0,w,c
  4102   00251E  A0D8               	btfss	status,0,c
  4103   002520  EF94  F012         	goto	u1421
  4104   002524  EF96  F012         	goto	u1420
  4105   002528                     u1421:
  4106   002528  EF66  F012         	goto	l2469
  4107   00252C                     u1420:
  4108   00252C                     
  4109                           ;../dc_motor.c: 103:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  4110   00252C  0E5A               	movlw	90
  4111   00252E  6E1F               	movwf	(??_reverse+1)^0,c
  4112   002530  0E49               	movlw	73
  4113   002532  6E1E               	movwf	??_reverse^0,c
  4114   002534  0EE7               	movlw	231
  4115   002536                     u1967:
  4116   002536  2EE8               	decfsz	wreg,f,c
  4117   002538  D7FE               	bra	u1967
  4118   00253A  2E1E               	decfsz	??_reverse^0,f,c
  4119   00253C  D7FC               	bra	u1967
  4120   00253E  2E1F               	decfsz	(??_reverse+1)^0,f,c
  4121   002540  D7FA               	bra	u1967
  4122   002542  F000               	nop	
  4123   002544  0012               	return		;funcret
  4124   002546                     __end_of_reverse:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _left_90 *****************
  4128 ;; Defined at:
  4129 ;;		line 121 in file "../dc_motor.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4132 ;;		 -> main@motorL(9), 
  4133 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4134 ;;		 -> main@motorR(9), 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  i               2   31[COMRAM] int 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;Total ram usage:        8 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 3
  4153 ;; This function calls:
  4154 ;;		_setMotorPWM
  4155 ;; This function is called by:
  4156 ;;		_motor_action
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text20
  4161   0022BC                     __ptext20:
  4162                           	callstack 0
  4163   0022BC                     _left_90:
  4164                           	callstack 26
  4165   0022BC                     
  4166                           ;../dc_motor.c: 121: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 122: {;../dc_motor.c: 123:     mL->direction = 0;
  4167   0022BC  EE20 F001          	lfsr	2,1
  4168   0022C0  501A               	movf	left_90@mL^0,w,c
  4169   0022C2  26D9               	addwf	fsr2l,f,c
  4170   0022C4  501B               	movf	(left_90@mL+1)^0,w,c
  4171   0022C6  22DA               	addwfc	fsr2h,f,c
  4172   0022C8  0E00               	movlw	0
  4173   0022CA  6EDF               	movwf	indf2,c
  4174                           
  4175                           ;../dc_motor.c: 124:     mR->direction = 1;
  4176   0022CC  EE20 F001          	lfsr	2,1
  4177   0022D0  501C               	movf	left_90@mR^0,w,c
  4178   0022D2  26D9               	addwf	fsr2l,f,c
  4179   0022D4  501D               	movf	(left_90@mR+1)^0,w,c
  4180   0022D6  22DA               	addwfc	fsr2h,f,c
  4181   0022D8  0E01               	movlw	1
  4182   0022DA  6EDF               	movwf	indf2,c
  4183   0022DC                     
  4184                           ;../dc_motor.c: 125:     for (int i = 0;i<50;i = i + 2)
  4185   0022DC  0E00               	movlw	0
  4186   0022DE  6E21               	movwf	(left_90@i+1)^0,c
  4187   0022E0  0E00               	movlw	0
  4188   0022E2  6E20               	movwf	left_90@i^0,c
  4189   0022E4                     l2515:
  4190                           
  4191                           ;../dc_motor.c: 126:     {;../dc_motor.c: 127:         mL->power = 50 + i;
  4192   0022E4  5020               	movf	left_90@i^0,w,c
  4193   0022E6  0F32               	addlw	50
  4194   0022E8  C01A  FFD9         	movff	left_90@mL,fsr2l
  4195   0022EC  C01B  FFDA         	movff	left_90@mL+1,fsr2h
  4196   0022F0  6EDF               	movwf	indf2,c
  4197   0022F2                     
  4198                           ;../dc_motor.c: 128:         mR->power = i;
  4199   0022F2  C01C  FFD9         	movff	left_90@mR,fsr2l
  4200   0022F6  C01D  FFDA         	movff	left_90@mR+1,fsr2h
  4201   0022FA  C020  FFDF         	movff	left_90@i,indf2
  4202   0022FE                     
  4203                           ;../dc_motor.c: 129:         setMotorPWM(mL);
  4204   0022FE  C01A  F00F         	movff	left_90@mL,setMotorPWM@m
  4205   002302  C01B  F010         	movff	left_90@mL+1,setMotorPWM@m+1
  4206   002306  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4207   00230A                     
  4208                           ;../dc_motor.c: 130:         setMotorPWM(mR);
  4209   00230A  C01C  F00F         	movff	left_90@mR,setMotorPWM@m
  4210   00230E  C01D  F010         	movff	left_90@mR+1,setMotorPWM@m+1
  4211   002312  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4212   002316                     
  4213                           ;../dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4214   002316  0E35               	movlw	53
  4215   002318                     u1977:
  4216   002318  2EE8               	decfsz	wreg,f,c
  4217   00231A  D7FE               	bra	u1977
  4218   00231C  F000               	nop	
  4219   00231E                     
  4220                           ;../dc_motor.c: 132:     }
  4221   00231E  0E02               	movlw	2
  4222   002320  2420               	addwf	left_90@i^0,w,c
  4223   002322  6E20               	movwf	left_90@i^0,c
  4224   002324  0E00               	movlw	0
  4225   002326  2021               	addwfc	(left_90@i+1)^0,w,c
  4226   002328  6E21               	movwf	(left_90@i+1)^0,c
  4227   00232A  BE21               	btfsc	(left_90@i+1)^0,7,c
  4228   00232C  EFA1  F011         	goto	u1441
  4229   002330  5021               	movf	(left_90@i+1)^0,w,c
  4230   002332  E109               	bnz	u1440
  4231   002334  0E32               	movlw	50
  4232   002336  5C20               	subwf	left_90@i^0,w,c
  4233   002338  A0D8               	btfss	status,0,c
  4234   00233A  EFA1  F011         	goto	u1441
  4235   00233E  EFA3  F011         	goto	u1440
  4236   002342                     u1441:
  4237   002342  EF72  F011         	goto	l2515
  4238   002346                     u1440:
  4239   002346                     
  4240                           ;../dc_motor.c: 133:     _delay((unsigned long)((165)*(64000000/4000.0)));
  4241   002346  0E0E               	movlw	14
  4242   002348  6E1F               	movwf	(??_left_90+1)^0,c
  4243   00234A  0E65               	movlw	101
  4244   00234C  6E1E               	movwf	??_left_90^0,c
  4245   00234E  0E87               	movlw	135
  4246   002350                     u1987:
  4247   002350  2EE8               	decfsz	wreg,f,c
  4248   002352  D7FE               	bra	u1987
  4249   002354  2E1E               	decfsz	??_left_90^0,f,c
  4250   002356  D7FC               	bra	u1987
  4251   002358  2E1F               	decfsz	(??_left_90+1)^0,f,c
  4252   00235A  D7FA               	bra	u1987
  4253   00235C  F000               	nop	
  4254   00235E  0012               	return		;funcret
  4255   002360                     __end_of_left_90:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _left_135 *****************
  4259 ;; Defined at:
  4260 ;;		line 166 in file "../dc_motor.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4263 ;;		 -> main@motorL(9), 
  4264 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4265 ;;		 -> main@motorR(9), 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  i               2   31[COMRAM] int 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;Total ram usage:        8 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 3
  4284 ;; This function calls:
  4285 ;;		_setMotorPWM
  4286 ;; This function is called by:
  4287 ;;		_motor_action
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text21
  4292   002546                     __ptext21:
  4293                           	callstack 0
  4294   002546                     _left_135:
  4295                           	callstack 26
  4296   002546                     
  4297                           ;../dc_motor.c: 166: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 167: {;../dc_motor.c: 168:     mL->direction = 0;
  4298   002546  EE20 F001          	lfsr	2,1
  4299   00254A  501A               	movf	left_135@mL^0,w,c
  4300   00254C  26D9               	addwf	fsr2l,f,c
  4301   00254E  501B               	movf	(left_135@mL+1)^0,w,c
  4302   002550  22DA               	addwfc	fsr2h,f,c
  4303   002552  0E00               	movlw	0
  4304   002554  6EDF               	movwf	indf2,c
  4305                           
  4306                           ;../dc_motor.c: 169:     mR->direction = 1;
  4307   002556  EE20 F001          	lfsr	2,1
  4308   00255A  501C               	movf	left_135@mR^0,w,c
  4309   00255C  26D9               	addwf	fsr2l,f,c
  4310   00255E  501D               	movf	(left_135@mR+1)^0,w,c
  4311   002560  22DA               	addwfc	fsr2h,f,c
  4312   002562  0E01               	movlw	1
  4313   002564  6EDF               	movwf	indf2,c
  4314   002566                     
  4315                           ;../dc_motor.c: 170:     for (int i = 0;i<50;i = i + 2)
  4316   002566  0E00               	movlw	0
  4317   002568  6E21               	movwf	(left_135@i+1)^0,c
  4318   00256A  0E00               	movlw	0
  4319   00256C  6E20               	movwf	left_135@i^0,c
  4320   00256E                     l2563:
  4321                           
  4322                           ;../dc_motor.c: 171:     {;../dc_motor.c: 172:         mL->power = 50 + i;
  4323   00256E  5020               	movf	left_135@i^0,w,c
  4324   002570  0F32               	addlw	50
  4325   002572  C01A  FFD9         	movff	left_135@mL,fsr2l
  4326   002576  C01B  FFDA         	movff	left_135@mL+1,fsr2h
  4327   00257A  6EDF               	movwf	indf2,c
  4328   00257C                     
  4329                           ;../dc_motor.c: 173:         mR->power = i;
  4330   00257C  C01C  FFD9         	movff	left_135@mR,fsr2l
  4331   002580  C01D  FFDA         	movff	left_135@mR+1,fsr2h
  4332   002584  C020  FFDF         	movff	left_135@i,indf2
  4333   002588                     
  4334                           ;../dc_motor.c: 174:         setMotorPWM(mL);
  4335   002588  C01A  F00F         	movff	left_135@mL,setMotorPWM@m
  4336   00258C  C01B  F010         	movff	left_135@mL+1,setMotorPWM@m+1
  4337   002590  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4338   002594                     
  4339                           ;../dc_motor.c: 175:         setMotorPWM(mR);
  4340   002594  C01C  F00F         	movff	left_135@mR,setMotorPWM@m
  4341   002598  C01D  F010         	movff	left_135@mR+1,setMotorPWM@m+1
  4342   00259C  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4343   0025A0                     
  4344                           ;../dc_motor.c: 176:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4345   0025A0  0E35               	movlw	53
  4346   0025A2                     u1997:
  4347   0025A2  2EE8               	decfsz	wreg,f,c
  4348   0025A4  D7FE               	bra	u1997
  4349   0025A6  F000               	nop	
  4350   0025A8                     
  4351                           ;../dc_motor.c: 177:     }
  4352   0025A8  0E02               	movlw	2
  4353   0025AA  2420               	addwf	left_135@i^0,w,c
  4354   0025AC  6E20               	movwf	left_135@i^0,c
  4355   0025AE  0E00               	movlw	0
  4356   0025B0  2021               	addwfc	(left_135@i+1)^0,w,c
  4357   0025B2  6E21               	movwf	(left_135@i+1)^0,c
  4358   0025B4  BE21               	btfsc	(left_135@i+1)^0,7,c
  4359   0025B6  EFE6  F012         	goto	u1461
  4360   0025BA  5021               	movf	(left_135@i+1)^0,w,c
  4361   0025BC  E109               	bnz	u1460
  4362   0025BE  0E32               	movlw	50
  4363   0025C0  5C20               	subwf	left_135@i^0,w,c
  4364   0025C2  A0D8               	btfss	status,0,c
  4365   0025C4  EFE6  F012         	goto	u1461
  4366   0025C8  EFE8  F012         	goto	u1460
  4367   0025CC                     u1461:
  4368   0025CC  EFB7  F012         	goto	l2563
  4369   0025D0                     u1460:
  4370   0025D0                     
  4371                           ;../dc_motor.c: 178:     _delay((unsigned long)((230)*(64000000/4000.0)));
  4372   0025D0  0E13               	movlw	19
  4373   0025D2  6E1F               	movwf	(??_left_135+1)^0,c
  4374   0025D4  0EAC               	movlw	172
  4375   0025D6  6E1E               	movwf	??_left_135^0,c
  4376   0025D8  0E2A               	movlw	42
  4377   0025DA                     u2007:
  4378   0025DA  2EE8               	decfsz	wreg,f,c
  4379   0025DC  D7FE               	bra	u2007
  4380   0025DE  2E1E               	decfsz	??_left_135^0,f,c
  4381   0025E0  D7FC               	bra	u2007
  4382   0025E2  2E1F               	decfsz	(??_left_135+1)^0,f,c
  4383   0025E4  D7FA               	bra	u2007
  4384   0025E6  0012               	return		;funcret
  4385   0025E8                     __end_of_left_135:
  4386                           	callstack 0
  4387                           
  4388 ;; *************** function _initUSART4 *****************
  4389 ;; Defined at:
  4390 ;;		line 5 in file "../serial.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;Total ram usage:        0 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 1
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text22
  4419   002BCE                     __ptext22:
  4420                           	callstack 0
  4421   002BCE                     _initUSART4:
  4422                           	callstack 29
  4423   002BCE                     
  4424                           ;../serial.c: 9:     RC0PPS = 0x12;
  4425   002BCE  0E12               	movlw	18
  4426   002BD0  010E               	movlb	14	; () banked
  4427   002BD2  6F62               	movwf	98,b	;volatile
  4428                           
  4429                           ;../serial.c: 10:     RX4PPS = 0x11;
  4430   002BD4  0E11               	movlw	17
  4431   002BD6  6F15               	movwf	21,b	;volatile
  4432   002BD8                     
  4433                           ; BSR set to: 14
  4434                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4435   002BD8  97E9               	bcf	233,3,b	;volatile
  4436   002BDA                     
  4437                           ; BSR set to: 14
  4438                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  4439   002BDA  95E8               	bcf	232,2,b	;volatile
  4440                           
  4441                           ;../serial.c: 14:     SP4BRGL = 103;
  4442   002BDC  0E67               	movlw	103
  4443   002BDE  6FE5               	movwf	229,b	;volatile
  4444                           
  4445                           ;../serial.c: 15:     SP4BRGH = 0;
  4446   002BE0  0E00               	movlw	0
  4447   002BE2  6FE6               	movwf	230,b	;volatile
  4448   002BE4                     
  4449                           ; BSR set to: 14
  4450                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  4451   002BE4  89E7               	bsf	231,4,b	;volatile
  4452   002BE6                     
  4453                           ; BSR set to: 14
  4454                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  4455   002BE6  8BE8               	bsf	232,5,b	;volatile
  4456   002BE8                     
  4457                           ; BSR set to: 14
  4458                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  4459   002BE8  8FE7               	bsf	231,7,b	;volatile
  4460   002BEA                     
  4461                           ; BSR set to: 14
  4462   002BEA  0012               	return		;funcret
  4463   002BEC                     __end_of_initUSART4:
  4464                           	callstack 0
  4465                           
  4466 ;; *************** function _initDCmotorsPWM *****************
  4467 ;; Defined at:
  4468 ;;		line 5 in file "../dc_motor.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  PWMperiod       2    0[COMRAM] int 
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;		None
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      void 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4486 ;;Total ram usage:        2 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_main
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text23
  4497   0029FC                     __ptext23:
  4498                           	callstack 0
  4499   0029FC                     _initDCmotorsPWM:
  4500                           	callstack 29
  4501   0029FC                     
  4502                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  4503   0029FC  9485               	bcf	133,2,c	;volatile
  4504                           
  4505                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  4506   0029FE  9885               	bcf	133,4,c	;volatile
  4507                           
  4508                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  4509   002A00  9E83               	bcf	131,7,c	;volatile
  4510                           
  4511                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  4512   002A02  9C87               	bcf	135,6,c	;volatile
  4513                           
  4514                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  4515   002A04  947D               	bcf	125,2,c	;volatile
  4516                           
  4517                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  4518   002A06  987D               	bcf	125,4,c	;volatile
  4519                           
  4520                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  4521   002A08  9E7B               	bcf	123,7,c	;volatile
  4522                           
  4523                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  4524   002A0A  9C7F               	bcf	127,6,c	;volatile
  4525   002A0C                     
  4526                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  4527   002A0C  50BD               	movf	189,w,c	;volatile
  4528   002A0E  0B8F               	andlw	-113
  4529   002A10  0930               	iorlw	48
  4530   002A12  6EBD               	movwf	189,c	;volatile
  4531                           
  4532                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4533   002A14  0EE0               	movlw	-32
  4534   002A16  16BE               	andwf	190,f,c	;volatile
  4535                           
  4536                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4537   002A18  50BF               	movf	191,w,c	;volatile
  4538   002A1A  0BF0               	andlw	-16
  4539   002A1C  0901               	iorlw	1
  4540   002A1E  6EBF               	movwf	191,c	;volatile
  4541   002A20                     
  4542                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  4543   002A20  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4544   002A24                     
  4545                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  4546   002A24  8EBD               	bsf	189,7,c	;volatile
  4547                           
  4548                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  4549   002A26  0E0A               	movlw	10
  4550   002A28  010E               	movlb	14	; () banked
  4551   002A2A  6F74               	movwf	116,b	;volatile
  4552                           
  4553                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  4554   002A2C  0E0B               	movlw	11
  4555   002A2E  6F69               	movwf	105,b	;volatile
  4556                           
  4557                           ;../dc_motor.c: 29:     PWM6DCH=0;
  4558   002A30  0E00               	movlw	0
  4559   002A32  6EA3               	movwf	163,c	;volatile
  4560                           
  4561                           ;../dc_motor.c: 30:     PWM7DCH=0;
  4562   002A34  0E00               	movlw	0
  4563   002A36  6EA0               	movwf	160,c	;volatile
  4564   002A38                     
  4565                           ; BSR set to: 14
  4566                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  4567   002A38  8EA4               	bsf	164,7,c	;volatile
  4568   002A3A                     
  4569                           ; BSR set to: 14
  4570                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  4571   002A3A  8EA1               	bsf	161,7,c	;volatile
  4572   002A3C                     
  4573                           ; BSR set to: 14
  4574   002A3C  0012               	return		;funcret
  4575   002A3E                     __end_of_initDCmotorsPWM:
  4576                           	callstack 0
  4577                           
  4578 ;; *************** function _forward *****************
  4579 ;; Defined at:
  4580 ;;		line 77 in file "../dc_motor.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4583 ;;		 -> main@motorL(9), 
  4584 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4585 ;;		 -> main@motorR(9), 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  i               2   29[COMRAM] int 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;Total ram usage:        6 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 3
  4604 ;; This function calls:
  4605 ;;		_setMotorPWM
  4606 ;; This function is called by:
  4607 ;;		_main
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text24
  4612   002676                     __ptext24:
  4613                           	callstack 0
  4614   002676                     _forward:
  4615                           	callstack 27
  4616   002676                     
  4617                           ;../dc_motor.c: 77: void forward(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c
      +                          : 78: {;../dc_motor.c: 79:     mL->direction = 1;
  4618   002676  EE20 F001          	lfsr	2,1
  4619   00267A  501A               	movf	forward@mL^0,w,c
  4620   00267C  26D9               	addwf	fsr2l,f,c
  4621   00267E  501B               	movf	(forward@mL+1)^0,w,c
  4622   002680  22DA               	addwfc	fsr2h,f,c
  4623   002682  0E01               	movlw	1
  4624   002684  6EDF               	movwf	indf2,c
  4625                           
  4626                           ;../dc_motor.c: 80:     mR->direction = 1;
  4627   002686  EE20 F001          	lfsr	2,1
  4628   00268A  501C               	movf	forward@mR^0,w,c
  4629   00268C  26D9               	addwf	fsr2l,f,c
  4630   00268E  501D               	movf	(forward@mR+1)^0,w,c
  4631   002690  22DA               	addwfc	fsr2h,f,c
  4632   002692  0E01               	movlw	1
  4633   002694  6EDF               	movwf	indf2,c
  4634   002696                     
  4635                           ;../dc_motor.c: 81:     for (int i=0;i<31;i = i+2)
  4636   002696  0E00               	movlw	0
  4637   002698  6E1F               	movwf	(forward@i+1)^0,c
  4638   00269A  0E00               	movlw	0
  4639   00269C  6E1E               	movwf	forward@i^0,c
  4640   00269E                     l2771:
  4641                           
  4642                           ;../dc_motor.c: 82:     {;../dc_motor.c: 83:         mL->power = i;
  4643   00269E  C01A  FFD9         	movff	forward@mL,fsr2l
  4644   0026A2  C01B  FFDA         	movff	forward@mL+1,fsr2h
  4645   0026A6  C01E  FFDF         	movff	forward@i,indf2
  4646                           
  4647                           ;../dc_motor.c: 84:         mR->power = i;
  4648   0026AA  C01C  FFD9         	movff	forward@mR,fsr2l
  4649   0026AE  C01D  FFDA         	movff	forward@mR+1,fsr2h
  4650   0026B2  C01E  FFDF         	movff	forward@i,indf2
  4651   0026B6                     
  4652                           ;../dc_motor.c: 85:         setMotorPWM(mL);
  4653   0026B6  C01A  F00F         	movff	forward@mL,setMotorPWM@m
  4654   0026BA  C01B  F010         	movff	forward@mL+1,setMotorPWM@m+1
  4655   0026BE  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4656   0026C2                     
  4657                           ;../dc_motor.c: 86:         setMotorPWM(mR);
  4658   0026C2  C01C  F00F         	movff	forward@mR,setMotorPWM@m
  4659   0026C6  C01D  F010         	movff	forward@mR+1,setMotorPWM@m+1
  4660   0026CA  ECEF  F00B         	call	_setMotorPWM	;wreg free
  4661   0026CE                     
  4662                           ;../dc_motor.c: 87:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  4663   0026CE  0E6A               	movlw	106
  4664   0026D0                     u2017:
  4665   0026D0  2EE8               	decfsz	wreg,f,c
  4666   0026D2  D7FE               	bra	u2017
  4667   0026D4  D000               	nop2	
  4668   0026D6                     
  4669                           ;../dc_motor.c: 88:     }
  4670   0026D6  0E02               	movlw	2
  4671   0026D8  241E               	addwf	forward@i^0,w,c
  4672   0026DA  6E1E               	movwf	forward@i^0,c
  4673   0026DC  0E00               	movlw	0
  4674   0026DE  201F               	addwfc	(forward@i+1)^0,w,c
  4675   0026E0  6E1F               	movwf	(forward@i+1)^0,c
  4676   0026E2  BE1F               	btfsc	(forward@i+1)^0,7,c
  4677   0026E4  EF7D  F013         	goto	u1701
  4678   0026E8  501F               	movf	(forward@i+1)^0,w,c
  4679   0026EA  E109               	bnz	u1700
  4680   0026EC  0E1F               	movlw	31
  4681   0026EE  5C1E               	subwf	forward@i^0,w,c
  4682   0026F0  A0D8               	btfss	status,0,c
  4683   0026F2  EF7D  F013         	goto	u1701
  4684   0026F6  EF7F  F013         	goto	u1700
  4685   0026FA                     u1701:
  4686   0026FA  EF4F  F013         	goto	l2771
  4687   0026FE                     u1700:
  4688   0026FE  0012               	return		;funcret
  4689   002700                     __end_of_forward:
  4690                           	callstack 0
  4691                           
  4692 ;; *************** function _setMotorPWM *****************
  4693 ;; Defined at:
  4694 ;;		line 38 in file "../dc_motor.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  m               2   14[COMRAM] PTR struct DC_motor
  4697 ;;		 -> main@motorR(9), main@motorL(9), 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  PWMduty         2   23[COMRAM] int 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4711 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;Total ram usage:       11 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; Hardware stack levels required when called: 2
  4716 ;; This function calls:
  4717 ;;		___awdiv
  4718 ;;		___wmul
  4719 ;; This function is called by:
  4720 ;;		_main
  4721 ;;		_stop
  4722 ;;		_forward
  4723 ;;		_reverse
  4724 ;;		_right_90
  4725 ;;		_left_90
  4726 ;;		_spin_180
  4727 ;;		_right_135
  4728 ;;		_left_135
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text25
  4733   0017DE                     __ptext25:
  4734                           	callstack 0
  4735   0017DE                     _setMotorPWM:
  4736                           	callstack 27
  4737   0017DE                     
  4738                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  4739   0017DE  EE20 F001          	lfsr	2,1
  4740   0017E2  500F               	movf	setMotorPWM@m^0,w,c
  4741   0017E4  26D9               	addwf	fsr2l,f,c
  4742   0017E6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4743   0017E8  22DA               	addwfc	fsr2h,f,c
  4744   0017EA  50DF               	movf	indf2,w,c
  4745   0017EC  B4D8               	btfsc	status,2,c
  4746   0017EE  EFFB  F00B         	goto	u1341
  4747   0017F2  EFFD  F00B         	goto	u1340
  4748   0017F6                     u1341:
  4749   0017F6  EF2E  F00C         	goto	l2359
  4750   0017FA                     u1340:
  4751   0017FA                     
  4752                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  4753   0017FA  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4754   0017FE  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4755   001802  50DF               	movf	indf2,w,c
  4756   001804  6E11               	movwf	??_setMotorPWM^0,c
  4757   001806  5011               	movf	??_setMotorPWM^0,w,c
  4758   001808  6E01               	movwf	___wmul@multiplier^0,c
  4759   00180A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4760   00180C  EE20 F007          	lfsr	2,7
  4761   001810  500F               	movf	setMotorPWM@m^0,w,c
  4762   001812  26D9               	addwf	fsr2l,f,c
  4763   001814  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4764   001816  22DA               	addwfc	fsr2h,f,c
  4765   001818  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4766   00181C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4767   001820  ECB4  F015         	call	___wmul	;wreg free
  4768   001824  C001  F007         	movff	?___wmul,___awdiv@dividend
  4769   001828  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  4770   00182C  0E00               	movlw	0
  4771   00182E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4772   001830  0E64               	movlw	100
  4773   001832  6E09               	movwf	___awdiv@divisor^0,c
  4774   001834  ECF8  F00F         	call	___awdiv	;wreg free
  4775   001838  EE20 F007          	lfsr	2,7
  4776   00183C  500F               	movf	setMotorPWM@m^0,w,c
  4777   00183E  26D9               	addwf	fsr2l,f,c
  4778   001840  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4779   001842  22DA               	addwfc	fsr2h,f,c
  4780   001844  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  4781   001848  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  4782   00184C  5007               	movf	?___awdiv^0,w,c
  4783   00184E  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  4784   001850  6E18               	movwf	setMotorPWM@PWMduty^0,c
  4785   001852  5008               	movf	(?___awdiv+1)^0,w,c
  4786   001854  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  4787   001856  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  4788                           
  4789                           ;../dc_motor.c: 45:  }
  4790   001858  EF51  F00C         	goto	l2361
  4791   00185C                     l2359:
  4792                           
  4793                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  4794   00185C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4795   001860  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4796   001864  50DF               	movf	indf2,w,c
  4797   001866  6E11               	movwf	??_setMotorPWM^0,c
  4798   001868  5011               	movf	??_setMotorPWM^0,w,c
  4799   00186A  6E01               	movwf	___wmul@multiplier^0,c
  4800   00186C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4801   00186E  EE20 F007          	lfsr	2,7
  4802   001872  500F               	movf	setMotorPWM@m^0,w,c
  4803   001874  26D9               	addwf	fsr2l,f,c
  4804   001876  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4805   001878  22DA               	addwfc	fsr2h,f,c
  4806   00187A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4807   00187E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4808   001882  ECB4  F015         	call	___wmul	;wreg free
  4809   001886  C001  F007         	movff	?___wmul,___awdiv@dividend
  4810   00188A  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  4811   00188E  0E00               	movlw	0
  4812   001890  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4813   001892  0E64               	movlw	100
  4814   001894  6E09               	movwf	___awdiv@divisor^0,c
  4815   001896  ECF8  F00F         	call	___awdiv	;wreg free
  4816   00189A  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  4817   00189E  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  4818   0018A2                     l2361:
  4819                           
  4820                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  4821   0018A2  EE20 F002          	lfsr	2,2
  4822   0018A6  500F               	movf	setMotorPWM@m^0,w,c
  4823   0018A8  26D9               	addwf	fsr2l,f,c
  4824   0018AA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4825   0018AC  22DA               	addwfc	fsr2h,f,c
  4826   0018AE  CFDE F011          	movff	postinc2,??_setMotorPWM
  4827   0018B2  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4828   0018B6  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4829   0018BA  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4830   0018BE  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  4831   0018C2                     
  4832                           ;../dc_motor.c: 53:  if (m->direction){
  4833   0018C2  EE20 F001          	lfsr	2,1
  4834   0018C6  500F               	movf	setMotorPWM@m^0,w,c
  4835   0018C8  26D9               	addwf	fsr2l,f,c
  4836   0018CA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4837   0018CC  22DA               	addwfc	fsr2h,f,c
  4838   0018CE  50DF               	movf	indf2,w,c
  4839   0018D0  B4D8               	btfsc	status,2,c
  4840   0018D2  EF6D  F00C         	goto	u1351
  4841   0018D6  EF6F  F00C         	goto	u1350
  4842   0018DA                     u1351:
  4843   0018DA  EFA4  F00C         	goto	l2367
  4844   0018DE                     u1350:
  4845   0018DE                     
  4846                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  4847   0018DE  EE20 F004          	lfsr	2,4
  4848   0018E2  500F               	movf	setMotorPWM@m^0,w,c
  4849   0018E4  26D9               	addwf	fsr2l,f,c
  4850   0018E6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4851   0018E8  22DA               	addwfc	fsr2h,f,c
  4852   0018EA  CFDE F011          	movff	postinc2,??_setMotorPWM
  4853   0018EE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4854   0018F2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4855   0018F6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4856   0018FA  EE10 F004          	lfsr	1,4
  4857   0018FE  500F               	movf	setMotorPWM@m^0,w,c
  4858   001900  26E1               	addwf	fsr1l,f,c
  4859   001902  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4860   001904  22E2               	addwfc	fsr1h,f,c
  4861   001906  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  4862   00190A  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  4863   00190E  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4864   001912  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4865   001916  50E7               	movf	indf1,w,c
  4866   001918  6E15               	movwf	(??_setMotorPWM+4)^0,c
  4867   00191A  EE10 F006          	lfsr	1,6
  4868   00191E  500F               	movf	setMotorPWM@m^0,w,c
  4869   001920  26E1               	addwf	fsr1l,f,c
  4870   001922  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4871   001924  22E2               	addwfc	fsr1h,f,c
  4872   001926  50E7               	movf	indf1,w,c
  4873   001928  6E16               	movwf	(??_setMotorPWM+5)^0,c
  4874   00192A  0E01               	movlw	1
  4875   00192C  6E17               	movwf	(??_setMotorPWM+6)^0,c
  4876   00192E  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  4877   001930  EF9C  F00C         	goto	u1364
  4878   001934                     u1365:
  4879   001934  90D8               	bcf	status,0,c
  4880   001936  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  4881   001938                     u1364:
  4882   001938  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  4883   00193A  EF9A  F00C         	goto	u1365
  4884   00193E  5017               	movf	(??_setMotorPWM+6)^0,w,c
  4885   001940  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  4886   001942  6EDF               	movwf	indf2,c
  4887                           
  4888                           ;../dc_motor.c: 55:  } else {
  4889   001944  EFD8  F00C         	goto	l262
  4890   001948                     l2367:
  4891                           
  4892                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  4893   001948  EE20 F004          	lfsr	2,4
  4894   00194C  500F               	movf	setMotorPWM@m^0,w,c
  4895   00194E  26D9               	addwf	fsr2l,f,c
  4896   001950  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4897   001952  22DA               	addwfc	fsr2h,f,c
  4898   001954  CFDE F011          	movff	postinc2,??_setMotorPWM
  4899   001958  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4900   00195C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4901   001960  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4902   001964  EE10 F004          	lfsr	1,4
  4903   001968  500F               	movf	setMotorPWM@m^0,w,c
  4904   00196A  26E1               	addwf	fsr1l,f,c
  4905   00196C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4906   00196E  22E2               	addwfc	fsr1h,f,c
  4907   001970  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  4908   001974  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  4909   001978  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4910   00197C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4911   001980  50E7               	movf	indf1,w,c
  4912   001982  6E15               	movwf	(??_setMotorPWM+4)^0,c
  4913   001984  EE10 F006          	lfsr	1,6
  4914   001988  500F               	movf	setMotorPWM@m^0,w,c
  4915   00198A  26E1               	addwf	fsr1l,f,c
  4916   00198C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4917   00198E  22E2               	addwfc	fsr1h,f,c
  4918   001990  50E7               	movf	indf1,w,c
  4919   001992  6E16               	movwf	(??_setMotorPWM+5)^0,c
  4920   001994  0E01               	movlw	1
  4921   001996  6E17               	movwf	(??_setMotorPWM+6)^0,c
  4922   001998  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  4923   00199A  EFD1  F00C         	goto	u1374
  4924   00199E                     u1375:
  4925   00199E  90D8               	bcf	status,0,c
  4926   0019A0  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  4927   0019A2                     u1374:
  4928   0019A2  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  4929   0019A4  EFCF  F00C         	goto	u1375
  4930   0019A8  5017               	movf	(??_setMotorPWM+6)^0,w,c
  4931   0019AA  0AFF               	xorlw	255
  4932   0019AC  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  4933   0019AE  6EDF               	movwf	indf2,c
  4934   0019B0                     l262:
  4935   0019B0  0012               	return		;funcret
  4936   0019B2                     __end_of_setMotorPWM:
  4937                           	callstack 0
  4938                           
  4939 ;; *************** function ___wmul *****************
  4940 ;; Defined at:
  4941 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  multiplier      2    0[COMRAM] unsigned int 
  4944 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  product         2    4[COMRAM] unsigned int 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  2    0[COMRAM] unsigned int 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, prodl, prodh
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;Total ram usage:        6 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_setMotorPWM
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text26
  4971   002B68                     __ptext26:
  4972                           	callstack 0
  4973   002B68                     ___wmul:
  4974                           	callstack 27
  4975   002B68  5001               	movf	___wmul@multiplier^0,w,c
  4976   002B6A  0203               	mulwf	___wmul@multiplicand^0,c
  4977   002B6C  CFF3 F005          	movff	prodl,___wmul@product
  4978   002B70  CFF4 F006          	movff	prodh,___wmul@product+1
  4979   002B74  5001               	movf	___wmul@multiplier^0,w,c
  4980   002B76  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4981   002B78  50F3               	movf	243,w,c
  4982   002B7A  2606               	addwf	(___wmul@product+1)^0,f,c
  4983   002B7C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4984   002B7E  0203               	mulwf	___wmul@multiplicand^0,c
  4985   002B80  50F3               	movf	243,w,c
  4986   002B82  2606               	addwf	(___wmul@product+1)^0,f,c
  4987   002B84  C005  F001         	movff	___wmul@product,?___wmul
  4988   002B88  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4989   002B8C  0012               	return		;funcret
  4990   002B8E                     __end_of___wmul:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function ___awdiv *****************
  4994 ;; Defined at:
  4995 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  dividend        2    6[COMRAM] int 
  4998 ;;  divisor         2    8[COMRAM] int 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  quotient        2   12[COMRAM] int 
  5001 ;;  sign            1   11[COMRAM] unsigned char 
  5002 ;;  counter         1   10[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  2    6[COMRAM] int 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5015 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;Total ram usage:        8 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_setMotorPWM
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text27
  5027   001FF0                     __ptext27:
  5028                           	callstack 0
  5029   001FF0                     ___awdiv:
  5030                           	callstack 27
  5031   001FF0  0E00               	movlw	0
  5032   001FF2  6E0C               	movwf	___awdiv@sign^0,c
  5033   001FF4  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  5034   001FF6  EF01  F010         	goto	u1160
  5035   001FFA  EFFF  F00F         	goto	u1161
  5036   001FFE                     u1161:
  5037   001FFE  EF07  F010         	goto	l2237
  5038   002002                     u1160:
  5039   002002  6C09               	negf	___awdiv@divisor^0,c
  5040   002004  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  5041   002006  B0D8               	btfsc	status,0,c
  5042   002008  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  5043   00200A  0E01               	movlw	1
  5044   00200C  6E0C               	movwf	___awdiv@sign^0,c
  5045   00200E                     l2237:
  5046   00200E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  5047   002010  EF0E  F010         	goto	u1170
  5048   002014  EF0C  F010         	goto	u1171
  5049   002018                     u1171:
  5050   002018  EF14  F010         	goto	l2243
  5051   00201C                     u1170:
  5052   00201C  6C07               	negf	___awdiv@dividend^0,c
  5053   00201E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  5054   002020  B0D8               	btfsc	status,0,c
  5055   002022  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  5056   002024  0E01               	movlw	1
  5057   002026  1A0C               	xorwf	___awdiv@sign^0,f,c
  5058   002028                     l2243:
  5059   002028  0E00               	movlw	0
  5060   00202A  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  5061   00202C  0E00               	movlw	0
  5062   00202E  6E0D               	movwf	___awdiv@quotient^0,c
  5063   002030  5009               	movf	___awdiv@divisor^0,w,c
  5064   002032  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  5065   002034  B4D8               	btfsc	status,2,c
  5066   002036  EF1F  F010         	goto	u1181
  5067   00203A  EF21  F010         	goto	u1180
  5068   00203E                     u1181:
  5069   00203E  EF49  F010         	goto	l2265
  5070   002042                     u1180:
  5071   002042  0E01               	movlw	1
  5072   002044  6E0B               	movwf	___awdiv@counter^0,c
  5073   002046  EF29  F010         	goto	l2251
  5074   00204A                     l2249:
  5075   00204A  90D8               	bcf	status,0,c
  5076   00204C  3609               	rlcf	___awdiv@divisor^0,f,c
  5077   00204E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  5078   002050  2A0B               	incf	___awdiv@counter^0,f,c
  5079   002052                     l2251:
  5080   002052  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  5081   002054  EF2E  F010         	goto	u1191
  5082   002058  EF30  F010         	goto	u1190
  5083   00205C                     u1191:
  5084   00205C  EF25  F010         	goto	l2249
  5085   002060                     u1190:
  5086   002060                     l2253:
  5087   002060  90D8               	bcf	status,0,c
  5088   002062  360D               	rlcf	___awdiv@quotient^0,f,c
  5089   002064  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  5090   002066  5009               	movf	___awdiv@divisor^0,w,c
  5091   002068  5C07               	subwf	___awdiv@dividend^0,w,c
  5092   00206A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5093   00206C  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  5094   00206E  A0D8               	btfss	status,0,c
  5095   002070  EF3C  F010         	goto	u1201
  5096   002074  EF3E  F010         	goto	u1200
  5097   002078                     u1201:
  5098   002078  EF43  F010         	goto	l2261
  5099   00207C                     u1200:
  5100   00207C  5009               	movf	___awdiv@divisor^0,w,c
  5101   00207E  5E07               	subwf	___awdiv@dividend^0,f,c
  5102   002080  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5103   002082  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  5104   002084  800D               	bsf	___awdiv@quotient^0,0,c
  5105   002086                     l2261:
  5106   002086  90D8               	bcf	status,0,c
  5107   002088  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  5108   00208A  3209               	rrcf	___awdiv@divisor^0,f,c
  5109   00208C  2E0B               	decfsz	___awdiv@counter^0,f,c
  5110   00208E  EF30  F010         	goto	l2253
  5111   002092                     l2265:
  5112   002092  500C               	movf	___awdiv@sign^0,w,c
  5113   002094  B4D8               	btfsc	status,2,c
  5114   002096  EF4F  F010         	goto	u1211
  5115   00209A  EF51  F010         	goto	u1210
  5116   00209E                     u1211:
  5117   00209E  EF55  F010         	goto	l2269
  5118   0020A2                     u1210:
  5119   0020A2  6C0D               	negf	___awdiv@quotient^0,c
  5120   0020A4  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  5121   0020A6  B0D8               	btfsc	status,0,c
  5122   0020A8  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  5123   0020AA                     l2269:
  5124   0020AA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5125   0020AE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5126   0020B2  0012               	return		;funcret
  5127   0020B4                     __end_of___awdiv:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function _color_read *****************
  5131 ;; Defined at:
  5132 ;;		line 111 in file "../color.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  rgb             2   11[COMRAM] PTR struct RGB_val
  5135 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;Total ram usage:        4 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; Hardware stack levels required when called: 4
  5154 ;; This function calls:
  5155 ;;		_color_read_Blue
  5156 ;;		_color_read_Green
  5157 ;;		_color_read_Luminosity
  5158 ;;		_color_read_Red
  5159 ;; This function is called by:
  5160 ;;		_main
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text28
  5165   002172                     __ptext28:
  5166                           	callstack 0
  5167   002172                     _color_read:
  5168                           	callstack 26
  5169   002172                     
  5170                           ;../color.c: 111: void color_read(struct RGB_val *rgb);../color.c: 112: {;../color.c: 11
      +                          3:     rgb->L = color_read_Luminosity();
  5171   002172  EC64  F014         	call	_color_read_Luminosity	;wreg free
  5172   002176  C00C  FFD9         	movff	color_read@rgb,fsr2l
  5173   00217A  C00D  FFDA         	movff	color_read@rgb+1,fsr2h
  5174   00217E  C005  FFDE         	movff	?_color_read_Luminosity,postinc2
  5175   002182  C006  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  5176   002186                     
  5177                           ;../color.c: 114:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5178   002186  0E09               	movlw	9
  5179   002188  6E0F               	movwf	(??_color_read+1)^0,c
  5180   00218A  0E1E               	movlw	30
  5181   00218C  6E0E               	movwf	??_color_read^0,c
  5182   00218E  0EE4               	movlw	228
  5183   002190                     u2027:
  5184   002190  2EE8               	decfsz	wreg,f,c
  5185   002192  D7FE               	bra	u2027
  5186   002194  2E0E               	decfsz	??_color_read^0,f,c
  5187   002196  D7FC               	bra	u2027
  5188   002198  2E0F               	decfsz	(??_color_read+1)^0,f,c
  5189   00219A  D7FA               	bra	u2027
  5190   00219C  D000               	nop2	
  5191   00219E                     
  5192                           ;../color.c: 115:     rgb->R = color_read_Red();
  5193   00219E  EC3C  F014         	call	_color_read_Red	;wreg free
  5194   0021A2  EE20 F002          	lfsr	2,2
  5195   0021A6  500C               	movf	color_read@rgb^0,w,c
  5196   0021A8  26D9               	addwf	fsr2l,f,c
  5197   0021AA  500D               	movf	(color_read@rgb+1)^0,w,c
  5198   0021AC  22DA               	addwfc	fsr2h,f,c
  5199   0021AE  C005  FFDE         	movff	?_color_read_Red,postinc2
  5200   0021B2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5201                           
  5202                           ;../color.c: 116:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5203   0021B6  0E09               	movlw	9
  5204   0021B8  6E0F               	movwf	(??_color_read+1)^0,c
  5205   0021BA  0E1E               	movlw	30
  5206   0021BC  6E0E               	movwf	??_color_read^0,c
  5207   0021BE  0EE4               	movlw	228
  5208   0021C0                     u2037:
  5209   0021C0  2EE8               	decfsz	wreg,f,c
  5210   0021C2  D7FE               	bra	u2037
  5211   0021C4  2E0E               	decfsz	??_color_read^0,f,c
  5212   0021C6  D7FC               	bra	u2037
  5213   0021C8  2E0F               	decfsz	(??_color_read+1)^0,f,c
  5214   0021CA  D7FA               	bra	u2037
  5215   0021CC  D000               	nop2	
  5216   0021CE                     
  5217                           ;../color.c: 117:     rgb->G = color_read_Green();
  5218   0021CE  EC8C  F014         	call	_color_read_Green	;wreg free
  5219   0021D2  EE20 F004          	lfsr	2,4
  5220   0021D6  500C               	movf	color_read@rgb^0,w,c
  5221   0021D8  26D9               	addwf	fsr2l,f,c
  5222   0021DA  500D               	movf	(color_read@rgb+1)^0,w,c
  5223   0021DC  22DA               	addwfc	fsr2h,f,c
  5224   0021DE  C005  FFDE         	movff	?_color_read_Green,postinc2
  5225   0021E2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5226   0021E6                     
  5227                           ;../color.c: 118:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5228   0021E6  0E09               	movlw	9
  5229   0021E8  6E0F               	movwf	(??_color_read+1)^0,c
  5230   0021EA  0E1E               	movlw	30
  5231   0021EC  6E0E               	movwf	??_color_read^0,c
  5232   0021EE  0EE4               	movlw	228
  5233   0021F0                     u2047:
  5234   0021F0  2EE8               	decfsz	wreg,f,c
  5235   0021F2  D7FE               	bra	u2047
  5236   0021F4  2E0E               	decfsz	??_color_read^0,f,c
  5237   0021F6  D7FC               	bra	u2047
  5238   0021F8  2E0F               	decfsz	(??_color_read+1)^0,f,c
  5239   0021FA  D7FA               	bra	u2047
  5240   0021FC  D000               	nop2	
  5241                           
  5242                           ;../color.c: 119:     rgb->B = color_read_Blue();
  5243   0021FE  ECB4  F014         	call	_color_read_Blue	;wreg free
  5244   002202  EE20 F006          	lfsr	2,6
  5245   002206  500C               	movf	color_read@rgb^0,w,c
  5246   002208  26D9               	addwf	fsr2l,f,c
  5247   00220A  500D               	movf	(color_read@rgb+1)^0,w,c
  5248   00220C  22DA               	addwfc	fsr2h,f,c
  5249   00220E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5250   002212  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5251   002216  0012               	return		;funcret
  5252   002218                     __end_of_color_read:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function _color_read_Red *****************
  5256 ;; Defined at:
  5257 ;;		line 69 in file "../color.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  tmp             2    9[COMRAM] unsigned int 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  2    4[COMRAM] unsigned int 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;Total ram usage:        7 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; Hardware stack levels required when called: 3
  5278 ;; This function calls:
  5279 ;;		_I2C_2_Master_Read
  5280 ;;		_I2C_2_Master_RepStart
  5281 ;;		_I2C_2_Master_Start
  5282 ;;		_I2C_2_Master_Stop
  5283 ;;		_I2C_2_Master_Write
  5284 ;; This function is called by:
  5285 ;;		_color_read
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text29
  5290   002878                     __ptext29:
  5291                           	callstack 0
  5292   002878                     _color_read_Red:
  5293                           	callstack 26
  5294   002878                     
  5295                           ;../color.c: 71:  unsigned int tmp;;../color.c: 72:  I2C_2_Master_Start();
  5296   002878  EC1D  F016         	call	_I2C_2_Master_Start	;wreg free
  5297                           
  5298                           ;../color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  5299   00287C  0E52               	movlw	82
  5300   00287E  EC0D  F016         	call	_I2C_2_Master_Write
  5301                           
  5302                           ;../color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  5303   002882  0EB6               	movlw	182
  5304   002884  EC0D  F016         	call	_I2C_2_Master_Write
  5305                           
  5306                           ;../color.c: 75:  I2C_2_Master_RepStart();
  5307   002888  EC13  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5308                           
  5309                           ;../color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  5310   00288C  0E53               	movlw	83
  5311   00288E  EC0D  F016         	call	_I2C_2_Master_Write
  5312                           
  5313                           ;../color.c: 77:  tmp=I2C_2_Master_Read(1);
  5314   002892  0E01               	movlw	1
  5315   002894  EC1F  F015         	call	_I2C_2_Master_Read
  5316   002898  6E07               	movwf	??_color_read_Red^0,c
  5317   00289A  5007               	movf	??_color_read_Red^0,w,c
  5318   00289C  6E0A               	movwf	color_read_Red@tmp^0,c
  5319   00289E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5320                           
  5321                           ;../color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5322   0028A0  0E00               	movlw	0
  5323   0028A2  EC1F  F015         	call	_I2C_2_Master_Read
  5324   0028A6  6E07               	movwf	??_color_read_Red^0,c
  5325   0028A8  5007               	movf	??_color_read_Red^0,w,c
  5326   0028AA  6E09               	movwf	(??_color_read_Red+2)^0,c
  5327   0028AC  6A08               	clrf	(??_color_read_Red+1)^0,c
  5328   0028AE  500A               	movf	color_read_Red@tmp^0,w,c
  5329   0028B0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5330   0028B2  6E0A               	movwf	color_read_Red@tmp^0,c
  5331   0028B4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5332   0028B6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5333   0028B8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5334                           
  5335                           ;../color.c: 79:  I2C_2_Master_Stop();
  5336   0028BA  EC18  F016         	call	_I2C_2_Master_Stop	;wreg free
  5337   0028BE                     
  5338                           ;../color.c: 80:  return tmp;
  5339   0028BE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5340   0028C2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5341   0028C6  0012               	return		;funcret
  5342   0028C8                     __end_of_color_read_Red:
  5343                           	callstack 0
  5344                           
  5345 ;; *************** function _color_read_Luminosity *****************
  5346 ;; Defined at:
  5347 ;;		line 55 in file "../color.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  tmp             2    9[COMRAM] unsigned int 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2    4[COMRAM] unsigned int 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5365 ;;Total ram usage:        7 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; Hardware stack levels required when called: 3
  5368 ;; This function calls:
  5369 ;;		_I2C_2_Master_Read
  5370 ;;		_I2C_2_Master_RepStart
  5371 ;;		_I2C_2_Master_Start
  5372 ;;		_I2C_2_Master_Stop
  5373 ;;		_I2C_2_Master_Write
  5374 ;; This function is called by:
  5375 ;;		_color_read
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text30
  5380   0028C8                     __ptext30:
  5381                           	callstack 0
  5382   0028C8                     _color_read_Luminosity:
  5383                           	callstack 26
  5384   0028C8                     
  5385                           ;../color.c: 57:  unsigned int tmp;;../color.c: 58:  I2C_2_Master_Start();
  5386   0028C8  EC1D  F016         	call	_I2C_2_Master_Start	;wreg free
  5387                           
  5388                           ;../color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  5389   0028CC  0E52               	movlw	82
  5390   0028CE  EC0D  F016         	call	_I2C_2_Master_Write
  5391                           
  5392                           ;../color.c: 60:  I2C_2_Master_Write(0xA0 | 0x14);
  5393   0028D2  0EB4               	movlw	180
  5394   0028D4  EC0D  F016         	call	_I2C_2_Master_Write
  5395                           
  5396                           ;../color.c: 61:  I2C_2_Master_RepStart();
  5397   0028D8  EC13  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5398                           
  5399                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  5400   0028DC  0E53               	movlw	83
  5401   0028DE  EC0D  F016         	call	_I2C_2_Master_Write
  5402                           
  5403                           ;../color.c: 63:  tmp=I2C_2_Master_Read(1);
  5404   0028E2  0E01               	movlw	1
  5405   0028E4  EC1F  F015         	call	_I2C_2_Master_Read
  5406   0028E8  6E07               	movwf	??_color_read_Luminosity^0,c
  5407   0028EA  5007               	movf	??_color_read_Luminosity^0,w,c
  5408   0028EC  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  5409   0028EE  6A0B               	clrf	(color_read_Luminosity@tmp+1)^0,c
  5410                           
  5411                           ;../color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5412   0028F0  0E00               	movlw	0
  5413   0028F2  EC1F  F015         	call	_I2C_2_Master_Read
  5414   0028F6  6E07               	movwf	??_color_read_Luminosity^0,c
  5415   0028F8  5007               	movf	??_color_read_Luminosity^0,w,c
  5416   0028FA  6E09               	movwf	(??_color_read_Luminosity+2)^0,c
  5417   0028FC  6A08               	clrf	(??_color_read_Luminosity+1)^0,c
  5418   0028FE  500A               	movf	color_read_Luminosity@tmp^0,w,c
  5419   002900  1008               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  5420   002902  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  5421   002904  500B               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  5422   002906  1009               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  5423   002908  6E0B               	movwf	(color_read_Luminosity@tmp+1)^0,c
  5424                           
  5425                           ;../color.c: 65:  I2C_2_Master_Stop();
  5426   00290A  EC18  F016         	call	_I2C_2_Master_Stop	;wreg free
  5427   00290E                     
  5428                           ;../color.c: 66:  return tmp;
  5429   00290E  C00A  F005         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  5430   002912  C00B  F006         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  5431   002916  0012               	return		;funcret
  5432   002918                     __end_of_color_read_Luminosity:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function _color_read_Green *****************
  5436 ;; Defined at:
  5437 ;;		line 83 in file "../color.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  tmp             2    9[COMRAM] unsigned int 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  2    4[COMRAM] unsigned int 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5454 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5455 ;;Total ram usage:        7 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 3
  5458 ;; This function calls:
  5459 ;;		_I2C_2_Master_Read
  5460 ;;		_I2C_2_Master_RepStart
  5461 ;;		_I2C_2_Master_Start
  5462 ;;		_I2C_2_Master_Stop
  5463 ;;		_I2C_2_Master_Write
  5464 ;; This function is called by:
  5465 ;;		_color_read
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text31
  5470   002918                     __ptext31:
  5471                           	callstack 0
  5472   002918                     _color_read_Green:
  5473                           	callstack 26
  5474   002918                     
  5475                           ;../color.c: 85:  unsigned int tmp;;../color.c: 86:  I2C_2_Master_Start();
  5476   002918  EC1D  F016         	call	_I2C_2_Master_Start	;wreg free
  5477                           
  5478                           ;../color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  5479   00291C  0E52               	movlw	82
  5480   00291E  EC0D  F016         	call	_I2C_2_Master_Write
  5481                           
  5482                           ;../color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  5483   002922  0EB8               	movlw	184
  5484   002924  EC0D  F016         	call	_I2C_2_Master_Write
  5485                           
  5486                           ;../color.c: 89:  I2C_2_Master_RepStart();
  5487   002928  EC13  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5488                           
  5489                           ;../color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  5490   00292C  0E53               	movlw	83
  5491   00292E  EC0D  F016         	call	_I2C_2_Master_Write
  5492                           
  5493                           ;../color.c: 91:  tmp=I2C_2_Master_Read(1);
  5494   002932  0E01               	movlw	1
  5495   002934  EC1F  F015         	call	_I2C_2_Master_Read
  5496   002938  6E07               	movwf	??_color_read_Green^0,c
  5497   00293A  5007               	movf	??_color_read_Green^0,w,c
  5498   00293C  6E0A               	movwf	color_read_Green@tmp^0,c
  5499   00293E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5500                           
  5501                           ;../color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5502   002940  0E00               	movlw	0
  5503   002942  EC1F  F015         	call	_I2C_2_Master_Read
  5504   002946  6E07               	movwf	??_color_read_Green^0,c
  5505   002948  5007               	movf	??_color_read_Green^0,w,c
  5506   00294A  6E09               	movwf	(??_color_read_Green+2)^0,c
  5507   00294C  6A08               	clrf	(??_color_read_Green+1)^0,c
  5508   00294E  500A               	movf	color_read_Green@tmp^0,w,c
  5509   002950  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5510   002952  6E0A               	movwf	color_read_Green@tmp^0,c
  5511   002954  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5512   002956  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5513   002958  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5514                           
  5515                           ;../color.c: 93:  I2C_2_Master_Stop();
  5516   00295A  EC18  F016         	call	_I2C_2_Master_Stop	;wreg free
  5517   00295E                     
  5518                           ;../color.c: 94:  return tmp;
  5519   00295E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5520   002962  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5521   002966  0012               	return		;funcret
  5522   002968                     __end_of_color_read_Green:
  5523                           	callstack 0
  5524                           
  5525 ;; *************** function _color_read_Blue *****************
  5526 ;; Defined at:
  5527 ;;		line 97 in file "../color.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  tmp             2    9[COMRAM] unsigned int 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  2    4[COMRAM] unsigned int 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;Total ram usage:        7 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 3
  5548 ;; This function calls:
  5549 ;;		_I2C_2_Master_Read
  5550 ;;		_I2C_2_Master_RepStart
  5551 ;;		_I2C_2_Master_Start
  5552 ;;		_I2C_2_Master_Stop
  5553 ;;		_I2C_2_Master_Write
  5554 ;; This function is called by:
  5555 ;;		_color_read
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text32
  5560   002968                     __ptext32:
  5561                           	callstack 0
  5562   002968                     _color_read_Blue:
  5563                           	callstack 26
  5564   002968                     
  5565                           ;../color.c: 99:  unsigned int tmp;;../color.c: 100:  I2C_2_Master_Start();
  5566   002968  EC1D  F016         	call	_I2C_2_Master_Start	;wreg free
  5567                           
  5568                           ;../color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  5569   00296C  0E52               	movlw	82
  5570   00296E  EC0D  F016         	call	_I2C_2_Master_Write
  5571                           
  5572                           ;../color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  5573   002972  0EBA               	movlw	186
  5574   002974  EC0D  F016         	call	_I2C_2_Master_Write
  5575                           
  5576                           ;../color.c: 103:  I2C_2_Master_RepStart();
  5577   002978  EC13  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5578                           
  5579                           ;../color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  5580   00297C  0E53               	movlw	83
  5581   00297E  EC0D  F016         	call	_I2C_2_Master_Write
  5582                           
  5583                           ;../color.c: 105:  tmp=I2C_2_Master_Read(1);
  5584   002982  0E01               	movlw	1
  5585   002984  EC1F  F015         	call	_I2C_2_Master_Read
  5586   002988  6E07               	movwf	??_color_read_Blue^0,c
  5587   00298A  5007               	movf	??_color_read_Blue^0,w,c
  5588   00298C  6E0A               	movwf	color_read_Blue@tmp^0,c
  5589   00298E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5590                           
  5591                           ;../color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5592   002990  0E00               	movlw	0
  5593   002992  EC1F  F015         	call	_I2C_2_Master_Read
  5594   002996  6E07               	movwf	??_color_read_Blue^0,c
  5595   002998  5007               	movf	??_color_read_Blue^0,w,c
  5596   00299A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5597   00299C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5598   00299E  500A               	movf	color_read_Blue@tmp^0,w,c
  5599   0029A0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5600   0029A2  6E0A               	movwf	color_read_Blue@tmp^0,c
  5601   0029A4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5602   0029A6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5603   0029A8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5604                           
  5605                           ;../color.c: 107:  I2C_2_Master_Stop();
  5606   0029AA  EC18  F016         	call	_I2C_2_Master_Stop	;wreg free
  5607   0029AE                     
  5608                           ;../color.c: 108:  return tmp;
  5609   0029AE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5610   0029B2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5611   0029B6  0012               	return		;funcret
  5612   0029B8                     __end_of_color_read_Blue:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _I2C_2_Master_RepStart *****************
  5616 ;; Defined at:
  5617 ;;		line 33 in file "../i2c.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 2
  5638 ;; This function calls:
  5639 ;;		_I2C_2_Master_Idle
  5640 ;; This function is called by:
  5641 ;;		_color_read_Luminosity
  5642 ;;		_color_read_Red
  5643 ;;		_color_read_Green
  5644 ;;		_color_read_Blue
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text33
  5649   002C26                     __ptext33:
  5650                           	callstack 0
  5651   002C26                     _I2C_2_Master_RepStart:
  5652                           	callstack 26
  5653   002C26                     
  5654                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  5655   002C26  EC8D  F015         	call	_I2C_2_Master_Idle	;wreg free
  5656   002C2A                     
  5657                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5658   002C2A  010E               	movlb	14	; () banked
  5659   002C2C  83DA               	bsf	218,1,b	;volatile
  5660   002C2E                     
  5661                           ; BSR set to: 14
  5662   002C2E  0012               	return		;funcret
  5663   002C30                     __end_of_I2C_2_Master_RepStart:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _I2C_2_Master_Read *****************
  5667 ;; Defined at:
  5668 ;;		line 51 in file "../i2c.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  ack             1    wreg     unsigned char 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  ack             1    2[COMRAM] unsigned char 
  5673 ;;  tmp             1    3[COMRAM] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      unsigned char 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5686 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;Total ram usage:        3 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 2
  5690 ;; This function calls:
  5691 ;;		_I2C_2_Master_Idle
  5692 ;; This function is called by:
  5693 ;;		_color_read_Luminosity
  5694 ;;		_color_read_Red
  5695 ;;		_color_read_Green
  5696 ;;		_color_read_Blue
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text34
  5701   002A3E                     __ptext34:
  5702                           	callstack 0
  5703   002A3E                     _I2C_2_Master_Read:
  5704                           	callstack 26
  5705                           
  5706                           ; BSR set to: 14
  5707                           ;incstack = 0
  5708                           ;I2C_2_Master_Read@ack stored from wreg
  5709   002A3E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5710   002A40                     
  5711                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  5712   002A40  EC8D  F015         	call	_I2C_2_Master_Idle	;wreg free
  5713   002A44                     
  5714                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5715   002A44  010E               	movlb	14	; () banked
  5716   002A46  87DA               	bsf	218,3,b	;volatile
  5717                           
  5718                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  5719   002A48  EC8D  F015         	call	_I2C_2_Master_Idle	;wreg free
  5720   002A4C                     
  5721                           ;../i2c.c: 57:   tmp = SSP2BUF;
  5722   002A4C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5723                           
  5724                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  5725   002A50  EC8D  F015         	call	_I2C_2_Master_Idle	;wreg free
  5726   002A54                     
  5727                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5728   002A54  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5729   002A56  B4D8               	btfsc	status,2,c
  5730   002A58  EF30  F015         	goto	u1321
  5731   002A5C  EF34  F015         	goto	u1320
  5732   002A60                     u1321:
  5733   002A60  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5734   002A62  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5735   002A64  EF35  F015         	goto	u1338
  5736   002A68                     u1320:
  5737   002A68  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5738   002A6A                     u1338:
  5739   002A6A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5740   002A6C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5741   002A6E  010E               	movlb	14	; () banked
  5742   002A70  51DA               	movf	218,w,b	;volatile
  5743   002A72  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5744   002A74  0BDF               	andlw	-33
  5745   002A76  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5746   002A78  6FDA               	movwf	218,b	;volatile
  5747   002A7A                     
  5748                           ; BSR set to: 14
  5749                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5750   002A7A  89DA               	bsf	218,4,b	;volatile
  5751   002A7C                     
  5752                           ; BSR set to: 14
  5753                           ;../i2c.c: 61:   return tmp;
  5754   002A7C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5755   002A7E                     
  5756                           ; BSR set to: 14
  5757   002A7E  0012               	return		;funcret
  5758   002A80                     __end_of_I2C_2_Master_Read:
  5759                           	callstack 0
  5760                           
  5761 ;; *************** function _color_processor_hard *****************
  5762 ;; Defined at:
  5763 ;;		line 152 in file "../color.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  5766 ;;		 -> main@RGB_recorded(8), 
  5767 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  5768 ;;		 -> main@color_calibrated(64), 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  cb              2   24[COMRAM] unsigned int 
  5771 ;;  cg              2   22[COMRAM] unsigned int 
  5772 ;;  cr              2   20[COMRAM] unsigned int 
  5773 ;;  condition_b     1   10[COMRAM] _Bool 
  5774 ;;  condition_g     1    9[COMRAM] _Bool 
  5775 ;;  condition_r     1    8[COMRAM] _Bool 
  5776 ;;  i               2   26[COMRAM] int 
  5777 ;;  b               2   18[COMRAM] unsigned int 
  5778 ;;  g               2   16[COMRAM] unsigned int 
  5779 ;;  r               2   14[COMRAM] unsigned int 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  2    0[COMRAM] unsigned int 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5792 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5793 ;;Total ram usage:       28 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_main
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text35
  5804   001568                     __ptext35:
  5805                           	callstack 0
  5806   001568                     _color_processor_hard:
  5807                           	callstack 29
  5808   001568                     
  5809                           ;../color.c: 152: unsigned int color_processor_hard(struct RGB_val *rgb, unsigned int *c
      +                          alibrated);../color.c: 153: {;../color.c: 154:     unsigned int r = rgb->R;
  5810   001568  EE20 F002          	lfsr	2,2
  5811   00156C  5001               	movf	color_processor_hard@rgb^0,w,c
  5812   00156E  26D9               	addwf	fsr2l,f,c
  5813   001570  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5814   001572  22DA               	addwfc	fsr2h,f,c
  5815   001574  CFDE F00F          	movff	postinc2,color_processor_hard@r
  5816   001578  CFDD F010          	movff	postdec2,color_processor_hard@r+1
  5817                           
  5818                           ;../color.c: 155:     unsigned int g = rgb->G;
  5819   00157C  EE20 F004          	lfsr	2,4
  5820   001580  5001               	movf	color_processor_hard@rgb^0,w,c
  5821   001582  26D9               	addwf	fsr2l,f,c
  5822   001584  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5823   001586  22DA               	addwfc	fsr2h,f,c
  5824   001588  CFDE F011          	movff	postinc2,color_processor_hard@g
  5825   00158C  CFDD F012          	movff	postdec2,color_processor_hard@g+1
  5826                           
  5827                           ;../color.c: 156:     unsigned int b = rgb->B;
  5828   001590  EE20 F006          	lfsr	2,6
  5829   001594  5001               	movf	color_processor_hard@rgb^0,w,c
  5830   001596  26D9               	addwf	fsr2l,f,c
  5831   001598  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5832   00159A  22DA               	addwfc	fsr2h,f,c
  5833   00159C  CFDE F013          	movff	postinc2,color_processor_hard@b
  5834   0015A0  CFDD F014          	movff	postdec2,color_processor_hard@b+1
  5835   0015A4                     
  5836                           ;../color.c: 159:     for (int i=0;i<8;i++){
  5837   0015A4  0E00               	movlw	0
  5838   0015A6  6E1C               	movwf	(color_processor_hard@i+1)^0,c
  5839   0015A8  0E00               	movlw	0
  5840   0015AA  6E1B               	movwf	color_processor_hard@i^0,c
  5841   0015AC                     l2677:
  5842                           
  5843                           ;../color.c: 160:         unsigned int cr = calibrated[4*i+1];
  5844   0015AC  C01B  F005         	movff	color_processor_hard@i,??_color_processor_hard
  5845   0015B0  C01C  F006         	movff	color_processor_hard@i+1,??_color_processor_hard+1
  5846   0015B4  90D8               	bcf	status,0,c
  5847   0015B6  3605               	rlcf	??_color_processor_hard^0,f,c
  5848   0015B8  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5849   0015BA  90D8               	bcf	status,0,c
  5850   0015BC  3605               	rlcf	??_color_processor_hard^0,f,c
  5851   0015BE  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5852   0015C0  90D8               	bcf	status,0,c
  5853   0015C2  3605               	rlcf	??_color_processor_hard^0,f,c
  5854   0015C4  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5855   0015C6  5005               	movf	??_color_processor_hard^0,w,c
  5856   0015C8  2403               	addwf	color_processor_hard@calibrated^0,w,c
  5857   0015CA  6E07               	movwf	(??_color_processor_hard+2)^0,c
  5858   0015CC  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5859   0015CE  2004               	addwfc	(color_processor_hard@calibrated+1)^0,w,c
  5860   0015D0  6E08               	movwf	(??_color_processor_hard+3)^0,c
  5861   0015D2  0E02               	movlw	2
  5862   0015D4  2407               	addwf	(??_color_processor_hard+2)^0,w,c
  5863   0015D6  6ED9               	movwf	fsr2l,c
  5864   0015D8  0E00               	movlw	0
  5865   0015DA  2008               	addwfc	(??_color_processor_hard+3)^0,w,c
  5866   0015DC  6EDA               	movwf	fsr2h,c
  5867   0015DE  CFDE F015          	movff	postinc2,color_processor_hard@cr
  5868   0015E2  CFDD F016          	movff	postdec2,color_processor_hard@cr+1
  5869                           
  5870                           ;../color.c: 161:         unsigned int cg = calibrated[4*i+2];
  5871   0015E6  C01B  F005         	movff	color_processor_hard@i,??_color_processor_hard
  5872   0015EA  C01C  F006         	movff	color_processor_hard@i+1,??_color_processor_hard+1
  5873   0015EE  90D8               	bcf	status,0,c
  5874   0015F0  3605               	rlcf	??_color_processor_hard^0,f,c
  5875   0015F2  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5876   0015F4  90D8               	bcf	status,0,c
  5877   0015F6  3605               	rlcf	??_color_processor_hard^0,f,c
  5878   0015F8  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5879   0015FA  90D8               	bcf	status,0,c
  5880   0015FC  3605               	rlcf	??_color_processor_hard^0,f,c
  5881   0015FE  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5882   001600  5005               	movf	??_color_processor_hard^0,w,c
  5883   001602  2403               	addwf	color_processor_hard@calibrated^0,w,c
  5884   001604  6E07               	movwf	(??_color_processor_hard+2)^0,c
  5885   001606  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5886   001608  2004               	addwfc	(color_processor_hard@calibrated+1)^0,w,c
  5887   00160A  6E08               	movwf	(??_color_processor_hard+3)^0,c
  5888   00160C  0E04               	movlw	4
  5889   00160E  2407               	addwf	(??_color_processor_hard+2)^0,w,c
  5890   001610  6ED9               	movwf	fsr2l,c
  5891   001612  0E00               	movlw	0
  5892   001614  2008               	addwfc	(??_color_processor_hard+3)^0,w,c
  5893   001616  6EDA               	movwf	fsr2h,c
  5894   001618  CFDE F017          	movff	postinc2,color_processor_hard@cg
  5895   00161C  CFDD F018          	movff	postdec2,color_processor_hard@cg+1
  5896                           
  5897                           ;../color.c: 162:         unsigned int cb = calibrated[4*i+3];
  5898   001620  C01B  F005         	movff	color_processor_hard@i,??_color_processor_hard
  5899   001624  C01C  F006         	movff	color_processor_hard@i+1,??_color_processor_hard+1
  5900   001628  90D8               	bcf	status,0,c
  5901   00162A  3605               	rlcf	??_color_processor_hard^0,f,c
  5902   00162C  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5903   00162E  90D8               	bcf	status,0,c
  5904   001630  3605               	rlcf	??_color_processor_hard^0,f,c
  5905   001632  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5906   001634  90D8               	bcf	status,0,c
  5907   001636  3605               	rlcf	??_color_processor_hard^0,f,c
  5908   001638  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5909   00163A  5005               	movf	??_color_processor_hard^0,w,c
  5910   00163C  2403               	addwf	color_processor_hard@calibrated^0,w,c
  5911   00163E  6E07               	movwf	(??_color_processor_hard+2)^0,c
  5912   001640  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5913   001642  2004               	addwfc	(color_processor_hard@calibrated+1)^0,w,c
  5914   001644  6E08               	movwf	(??_color_processor_hard+3)^0,c
  5915   001646  0E06               	movlw	6
  5916   001648  2407               	addwf	(??_color_processor_hard+2)^0,w,c
  5917   00164A  6ED9               	movwf	fsr2l,c
  5918   00164C  0E00               	movlw	0
  5919   00164E  2008               	addwfc	(??_color_processor_hard+3)^0,w,c
  5920   001650  6EDA               	movwf	fsr2h,c
  5921   001652  CFDE F019          	movff	postinc2,color_processor_hard@cb
  5922   001656  CFDD F01A          	movff	postdec2,color_processor_hard@cb+1
  5923   00165A                     
  5924                           ;../color.c: 163:         _Bool condition_r = r>cr-20 && r<cr+20;
  5925   00165A  0E00               	movlw	0
  5926   00165C  6E0C               	movwf	_color_processor_hard$370^0,c
  5927   00165E  0EEC               	movlw	236
  5928   001660  2415               	addwf	color_processor_hard@cr^0,w,c
  5929   001662  6E05               	movwf	??_color_processor_hard^0,c
  5930   001664  0EFF               	movlw	255
  5931   001666  2016               	addwfc	(color_processor_hard@cr+1)^0,w,c
  5932   001668  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5933   00166A  500F               	movf	color_processor_hard@r^0,w,c
  5934   00166C  5C05               	subwf	??_color_processor_hard^0,w,c
  5935   00166E  5010               	movf	(color_processor_hard@r+1)^0,w,c
  5936   001670  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  5937   001672  B0D8               	btfsc	status,0,c
  5938   001674  EF3E  F00B         	goto	u1531
  5939   001678  EF40  F00B         	goto	u1530
  5940   00167C                     u1531:
  5941   00167C  EF53  F00B         	goto	l64
  5942   001680                     u1530:
  5943   001680  0E14               	movlw	20
  5944   001682  2415               	addwf	color_processor_hard@cr^0,w,c
  5945   001684  6E05               	movwf	??_color_processor_hard^0,c
  5946   001686  0E00               	movlw	0
  5947   001688  2016               	addwfc	(color_processor_hard@cr+1)^0,w,c
  5948   00168A  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5949   00168C  5005               	movf	??_color_processor_hard^0,w,c
  5950   00168E  5C0F               	subwf	color_processor_hard@r^0,w,c
  5951   001690  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5952   001692  5810               	subwfb	(color_processor_hard@r+1)^0,w,c
  5953   001694  B0D8               	btfsc	status,0,c
  5954   001696  EF4F  F00B         	goto	u1541
  5955   00169A  EF51  F00B         	goto	u1540
  5956   00169E                     u1541:
  5957   00169E  EF53  F00B         	goto	l64
  5958   0016A2                     u1540:
  5959   0016A2  0E01               	movlw	1
  5960   0016A4  6E0C               	movwf	_color_processor_hard$370^0,c
  5961   0016A6                     l64:
  5962   0016A6  500C               	movf	_color_processor_hard$370^0,w,c
  5963   0016A8  A4D8               	btfss	status,2,c
  5964   0016AA  EF59  F00B         	goto	u1551
  5965   0016AE  EF5C  F00B         	goto	u1550
  5966   0016B2                     u1551:
  5967   0016B2  0E01               	movlw	1
  5968   0016B4  EF5D  F00B         	goto	u1560
  5969   0016B8                     u1550:
  5970   0016B8  0E00               	movlw	0
  5971   0016BA                     u1560:
  5972   0016BA  6E09               	movwf	color_processor_hard@condition_r^0,c
  5973                           
  5974                           ;../color.c: 164:         _Bool condition_g = b>cb-20 && b<cb+20;
  5975   0016BC  0E00               	movlw	0
  5976   0016BE  6E0D               	movwf	_color_processor_hard$372^0,c
  5977   0016C0  0EEC               	movlw	236
  5978   0016C2  2419               	addwf	color_processor_hard@cb^0,w,c
  5979   0016C4  6E05               	movwf	??_color_processor_hard^0,c
  5980   0016C6  0EFF               	movlw	255
  5981   0016C8  201A               	addwfc	(color_processor_hard@cb+1)^0,w,c
  5982   0016CA  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5983   0016CC  5013               	movf	color_processor_hard@b^0,w,c
  5984   0016CE  5C05               	subwf	??_color_processor_hard^0,w,c
  5985   0016D0  5014               	movf	(color_processor_hard@b+1)^0,w,c
  5986   0016D2  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  5987   0016D4  B0D8               	btfsc	status,0,c
  5988   0016D6  EF6F  F00B         	goto	u1571
  5989   0016DA  EF71  F00B         	goto	u1570
  5990   0016DE                     u1571:
  5991   0016DE  EF84  F00B         	goto	l66
  5992   0016E2                     u1570:
  5993   0016E2  0E14               	movlw	20
  5994   0016E4  2419               	addwf	color_processor_hard@cb^0,w,c
  5995   0016E6  6E05               	movwf	??_color_processor_hard^0,c
  5996   0016E8  0E00               	movlw	0
  5997   0016EA  201A               	addwfc	(color_processor_hard@cb+1)^0,w,c
  5998   0016EC  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5999   0016EE  5005               	movf	??_color_processor_hard^0,w,c
  6000   0016F0  5C13               	subwf	color_processor_hard@b^0,w,c
  6001   0016F2  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6002   0016F4  5814               	subwfb	(color_processor_hard@b+1)^0,w,c
  6003   0016F6  B0D8               	btfsc	status,0,c
  6004   0016F8  EF80  F00B         	goto	u1581
  6005   0016FC  EF82  F00B         	goto	u1580
  6006   001700                     u1581:
  6007   001700  EF84  F00B         	goto	l66
  6008   001704                     u1580:
  6009   001704  0E01               	movlw	1
  6010   001706  6E0D               	movwf	_color_processor_hard$372^0,c
  6011   001708                     l66:
  6012   001708  500D               	movf	_color_processor_hard$372^0,w,c
  6013   00170A  A4D8               	btfss	status,2,c
  6014   00170C  EF8A  F00B         	goto	u1591
  6015   001710  EF8D  F00B         	goto	u1590
  6016   001714                     u1591:
  6017   001714  0E01               	movlw	1
  6018   001716  EF8E  F00B         	goto	u1600
  6019   00171A                     u1590:
  6020   00171A  0E00               	movlw	0
  6021   00171C                     u1600:
  6022   00171C  6E0A               	movwf	color_processor_hard@condition_g^0,c
  6023                           
  6024                           ;../color.c: 165:         _Bool condition_b = g>cg-20 && g<cg+20;
  6025   00171E  0E00               	movlw	0
  6026   001720  6E0E               	movwf	_color_processor_hard$374^0,c
  6027   001722  0EEC               	movlw	236
  6028   001724  2417               	addwf	color_processor_hard@cg^0,w,c
  6029   001726  6E05               	movwf	??_color_processor_hard^0,c
  6030   001728  0EFF               	movlw	255
  6031   00172A  2018               	addwfc	(color_processor_hard@cg+1)^0,w,c
  6032   00172C  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6033   00172E  5011               	movf	color_processor_hard@g^0,w,c
  6034   001730  5C05               	subwf	??_color_processor_hard^0,w,c
  6035   001732  5012               	movf	(color_processor_hard@g+1)^0,w,c
  6036   001734  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  6037   001736  B0D8               	btfsc	status,0,c
  6038   001738  EFA0  F00B         	goto	u1611
  6039   00173C  EFA2  F00B         	goto	u1610
  6040   001740                     u1611:
  6041   001740  EFB5  F00B         	goto	l68
  6042   001744                     u1610:
  6043   001744  0E14               	movlw	20
  6044   001746  2417               	addwf	color_processor_hard@cg^0,w,c
  6045   001748  6E05               	movwf	??_color_processor_hard^0,c
  6046   00174A  0E00               	movlw	0
  6047   00174C  2018               	addwfc	(color_processor_hard@cg+1)^0,w,c
  6048   00174E  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6049   001750  5005               	movf	??_color_processor_hard^0,w,c
  6050   001752  5C11               	subwf	color_processor_hard@g^0,w,c
  6051   001754  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6052   001756  5812               	subwfb	(color_processor_hard@g+1)^0,w,c
  6053   001758  B0D8               	btfsc	status,0,c
  6054   00175A  EFB1  F00B         	goto	u1621
  6055   00175E  EFB3  F00B         	goto	u1620
  6056   001762                     u1621:
  6057   001762  EFB5  F00B         	goto	l68
  6058   001766                     u1620:
  6059   001766  0E01               	movlw	1
  6060   001768  6E0E               	movwf	_color_processor_hard$374^0,c
  6061   00176A                     l68:
  6062   00176A  500E               	movf	_color_processor_hard$374^0,w,c
  6063   00176C  A4D8               	btfss	status,2,c
  6064   00176E  EFBB  F00B         	goto	u1631
  6065   001772  EFBE  F00B         	goto	u1630
  6066   001776                     u1631:
  6067   001776  0E01               	movlw	1
  6068   001778  EFBF  F00B         	goto	u1640
  6069   00177C                     u1630:
  6070   00177C  0E00               	movlw	0
  6071   00177E                     u1640:
  6072   00177E  6E0B               	movwf	color_processor_hard@condition_b^0,c
  6073                           
  6074                           ;../color.c: 167:         if (condition_r && condition_g && condition_b){
  6075   001780  5009               	movf	color_processor_hard@condition_r^0,w,c
  6076   001782  B4D8               	btfsc	status,2,c
  6077   001784  EFC6  F00B         	goto	u1651
  6078   001788  EFC8  F00B         	goto	u1650
  6079   00178C                     u1651:
  6080   00178C  EFDE  F00B         	goto	l2705
  6081   001790                     u1650:
  6082   001790  500A               	movf	color_processor_hard@condition_g^0,w,c
  6083   001792  B4D8               	btfsc	status,2,c
  6084   001794  EFCE  F00B         	goto	u1661
  6085   001798  EFD0  F00B         	goto	u1660
  6086   00179C                     u1661:
  6087   00179C  EFDE  F00B         	goto	l2705
  6088   0017A0                     u1660:
  6089   0017A0  500B               	movf	color_processor_hard@condition_b^0,w,c
  6090   0017A2  B4D8               	btfsc	status,2,c
  6091   0017A4  EFD6  F00B         	goto	u1671
  6092   0017A8  EFD8  F00B         	goto	u1670
  6093   0017AC                     u1671:
  6094   0017AC  EFDE  F00B         	goto	l2705
  6095   0017B0                     u1670:
  6096   0017B0                     
  6097                           ;../color.c: 168:             return i;
  6098   0017B0  C01B  F001         	movff	color_processor_hard@i,?_color_processor_hard
  6099   0017B4  C01C  F002         	movff	color_processor_hard@i+1,?_color_processor_hard+1
  6100   0017B8  EFEE  F00B         	goto	l70
  6101   0017BC                     l2705:
  6102                           
  6103                           ;../color.c: 170:     }
  6104   0017BC  4A1B               	infsnz	color_processor_hard@i^0,f,c
  6105   0017BE  2A1C               	incf	(color_processor_hard@i+1)^0,f,c
  6106   0017C0  BE1C               	btfsc	(color_processor_hard@i+1)^0,7,c
  6107   0017C2  EFEC  F00B         	goto	u1681
  6108   0017C6  501C               	movf	(color_processor_hard@i+1)^0,w,c
  6109   0017C8  E109               	bnz	u1680
  6110   0017CA  0E08               	movlw	8
  6111   0017CC  5C1B               	subwf	color_processor_hard@i^0,w,c
  6112   0017CE  A0D8               	btfss	status,0,c
  6113   0017D0  EFEC  F00B         	goto	u1681
  6114   0017D4  EFEE  F00B         	goto	u1680
  6115   0017D8                     u1681:
  6116   0017D8  EFD6  F00A         	goto	l2677
  6117   0017DC                     u1680:
  6118   0017DC                     l70:
  6119   0017DC  0012               	return		;funcret
  6120   0017DE                     __end_of_color_processor_hard:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function _color_processor_easy *****************
  6124 ;; Defined at:
  6125 ;;		line 134 in file "../color.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  6128 ;;		 -> main@RGB_recorded(8), 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  b               2    8[COMRAM] unsigned int 
  6131 ;;  a               2    6[COMRAM] unsigned int 
  6132 ;;  c               2    4[COMRAM] unsigned int 
  6133 ;;  color           2    2[COMRAM] unsigned int 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  2    0[COMRAM] unsigned int 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;Total ram usage:       10 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; Hardware stack levels required when called: 1
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text36
  6158   0020B4                     __ptext36:
  6159                           	callstack 0
  6160   0020B4                     _color_processor_easy:
  6161                           	callstack 29
  6162   0020B4                     
  6163                           ;../color.c: 134: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 135
      +                          : {;../color.c: 136:     unsigned int a = rgb->R;
  6164   0020B4  EE20 F002          	lfsr	2,2
  6165   0020B8  5001               	movf	color_processor_easy@rgb^0,w,c
  6166   0020BA  26D9               	addwf	fsr2l,f,c
  6167   0020BC  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6168   0020BE  22DA               	addwfc	fsr2h,f,c
  6169   0020C0  CFDE F007          	movff	postinc2,color_processor_easy@a
  6170   0020C4  CFDD F008          	movff	postdec2,color_processor_easy@a+1
  6171                           
  6172                           ;../color.c: 137:     unsigned int b = rgb->G;
  6173   0020C8  EE20 F004          	lfsr	2,4
  6174   0020CC  5001               	movf	color_processor_easy@rgb^0,w,c
  6175   0020CE  26D9               	addwf	fsr2l,f,c
  6176   0020D0  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6177   0020D2  22DA               	addwfc	fsr2h,f,c
  6178   0020D4  CFDE F009          	movff	postinc2,color_processor_easy@b
  6179   0020D8  CFDD F00A          	movff	postdec2,color_processor_easy@b+1
  6180                           
  6181                           ;../color.c: 138:     unsigned int c = rgb->B;
  6182   0020DC  EE20 F006          	lfsr	2,6
  6183   0020E0  5001               	movf	color_processor_easy@rgb^0,w,c
  6184   0020E2  26D9               	addwf	fsr2l,f,c
  6185   0020E4  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6186   0020E6  22DA               	addwfc	fsr2h,f,c
  6187   0020E8  CFDE F005          	movff	postinc2,color_processor_easy@c
  6188   0020EC  CFDD F006          	movff	postdec2,color_processor_easy@c+1
  6189   0020F0                     
  6190                           ;../color.c: 139:     unsigned int color;;../color.c: 140:     if (a>=b & a>=c){
  6191   0020F0  5009               	movf	color_processor_easy@b^0,w,c
  6192   0020F2  5C07               	subwf	color_processor_easy@a^0,w,c
  6193   0020F4  500A               	movf	(color_processor_easy@b+1)^0,w,c
  6194   0020F6  5808               	subwfb	(color_processor_easy@a+1)^0,w,c
  6195   0020F8  A0D8               	btfss	status,0,c
  6196   0020FA  EF81  F010         	goto	u1491
  6197   0020FE  EF83  F010         	goto	u1490
  6198   002102                     u1491:
  6199   002102  EF94  F010         	goto	l2657
  6200   002106                     u1490:
  6201   002106  5005               	movf	color_processor_easy@c^0,w,c
  6202   002108  5C07               	subwf	color_processor_easy@a^0,w,c
  6203   00210A  5006               	movf	(color_processor_easy@c+1)^0,w,c
  6204   00210C  5808               	subwfb	(color_processor_easy@a+1)^0,w,c
  6205   00210E  A0D8               	btfss	status,0,c
  6206   002110  EF8C  F010         	goto	u1501
  6207   002114  EF8E  F010         	goto	u1500
  6208   002118                     u1501:
  6209   002118  EF94  F010         	goto	l2657
  6210   00211C                     u1500:
  6211   00211C                     
  6212                           ;../color.c: 141:         color=1;
  6213   00211C  0E00               	movlw	0
  6214   00211E  6E04               	movwf	(color_processor_easy@color+1)^0,c
  6215   002120  0E01               	movlw	1
  6216   002122  6E03               	movwf	color_processor_easy@color^0,c
  6217                           
  6218                           ;../color.c: 142:     }
  6219   002124  EFB4  F010         	goto	l2665
  6220   002128                     l2657:
  6221   002128  5007               	movf	color_processor_easy@a^0,w,c
  6222   00212A  5C09               	subwf	color_processor_easy@b^0,w,c
  6223   00212C  5008               	movf	(color_processor_easy@a+1)^0,w,c
  6224   00212E  580A               	subwfb	(color_processor_easy@b+1)^0,w,c
  6225   002130  A0D8               	btfss	status,0,c
  6226   002132  EF9D  F010         	goto	u1511
  6227   002136  EF9F  F010         	goto	u1510
  6228   00213A                     u1511:
  6229   00213A  EFB0  F010         	goto	l2663
  6230   00213E                     u1510:
  6231   00213E  5005               	movf	color_processor_easy@c^0,w,c
  6232   002140  5C09               	subwf	color_processor_easy@b^0,w,c
  6233   002142  5006               	movf	(color_processor_easy@c+1)^0,w,c
  6234   002144  580A               	subwfb	(color_processor_easy@b+1)^0,w,c
  6235   002146  A0D8               	btfss	status,0,c
  6236   002148  EFA8  F010         	goto	u1521
  6237   00214C  EFAA  F010         	goto	u1520
  6238   002150                     u1521:
  6239   002150  EFB0  F010         	goto	l2663
  6240   002154                     u1520:
  6241   002154                     
  6242                           ;../color.c: 144:         color=2;
  6243   002154  0E00               	movlw	0
  6244   002156  6E04               	movwf	(color_processor_easy@color+1)^0,c
  6245   002158  0E02               	movlw	2
  6246   00215A  6E03               	movwf	color_processor_easy@color^0,c
  6247                           
  6248                           ;../color.c: 145:     }
  6249   00215C  EFB4  F010         	goto	l2665
  6250   002160                     l2663:
  6251                           
  6252                           ;../color.c: 147:         color=3;
  6253   002160  0E00               	movlw	0
  6254   002162  6E04               	movwf	(color_processor_easy@color+1)^0,c
  6255   002164  0E03               	movlw	3
  6256   002166  6E03               	movwf	color_processor_easy@color^0,c
  6257   002168                     l2665:
  6258                           
  6259                           ;../color.c: 149:     return color;
  6260   002168  C003  F001         	movff	color_processor_easy@color,?_color_processor_easy
  6261   00216C  C004  F002         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  6262   002170  0012               	return		;funcret
  6263   002172                     __end_of_color_processor_easy:
  6264                           	callstack 0
  6265                           
  6266 ;; *************** function _color_click_init *****************
  6267 ;; Defined at:
  6268 ;;		line 6 in file "../color.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      void 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;Total ram usage:        1 bytes
  6287 ;; Hardware stack levels used: 1
  6288 ;; Hardware stack levels required when called: 4
  6289 ;; This function calls:
  6290 ;;		_I2C_2_Master_Init
  6291 ;;		_color_writetoaddr
  6292 ;; This function is called by:
  6293 ;;		_main
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text37
  6298   00277A                     __ptext37:
  6299                           	callstack 0
  6300   00277A                     _color_click_init:
  6301                           	callstack 26
  6302   00277A                     
  6303                           ;../color.c: 9:     I2C_2_Master_Init();
  6304   00277A  EC78  F015         	call	_I2C_2_Master_Init	;wreg free
  6305   00277E                     
  6306                           ;../color.c: 12:   color_writetoaddr(0x00, 0x01);
  6307   00277E  0E01               	movlw	1
  6308   002780  6E03               	movwf	color_writetoaddr@value^0,c
  6309   002782  0E00               	movlw	0
  6310   002784  ECC7  F015         	call	_color_writetoaddr
  6311   002788                     
  6312                           ;../color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6313   002788  0E3F               	movlw	63
  6314   00278A  6E05               	movwf	??_color_click_init^0,c
  6315   00278C  0E55               	movlw	85
  6316   00278E                     u2057:
  6317   00278E  2EE8               	decfsz	wreg,f,c
  6318   002790  D7FE               	bra	u2057
  6319   002792  2E05               	decfsz	??_color_click_init^0,f,c
  6320   002794  D7FC               	bra	u2057
  6321   002796  F000               	nop	
  6322   002798                     
  6323                           ;../color.c: 16:  color_writetoaddr(0x00, 0x03);
  6324   002798  0E03               	movlw	3
  6325   00279A  6E03               	movwf	color_writetoaddr@value^0,c
  6326   00279C  0E00               	movlw	0
  6327   00279E  ECC7  F015         	call	_color_writetoaddr
  6328   0027A2                     
  6329                           ;../color.c: 19:  color_writetoaddr(0x01, 0xD5);
  6330   0027A2  0ED5               	movlw	213
  6331   0027A4  6E03               	movwf	color_writetoaddr@value^0,c
  6332   0027A6  0E01               	movlw	1
  6333   0027A8  ECC7  F015         	call	_color_writetoaddr
  6334   0027AC                     
  6335                           ;../color.c: 22:     TRISHbits.TRISH1 = 0;
  6336   0027AC  9288               	bcf	136,1,c	;volatile
  6337   0027AE                     
  6338                           ;../color.c: 23:     TRISDbits.TRISD3 = 0;
  6339   0027AE  9684               	bcf	132,3,c	;volatile
  6340   0027B0                     
  6341                           ;../color.c: 24:     TRISDbits.TRISD4 = 0;
  6342   0027B0  9884               	bcf	132,4,c	;volatile
  6343   0027B2                     
  6344                           ;../color.c: 25:     TRISHbits.TRISH0 = 0;
  6345   0027B2  9088               	bcf	136,0,c	;volatile
  6346   0027B4                     
  6347                           ;../color.c: 26:     TRISFbits.TRISF0 = 0;
  6348   0027B4  9086               	bcf	134,0,c	;volatile
  6349   0027B6                     
  6350                           ;../color.c: 28:     LATHbits.LATH1 = 1;
  6351   0027B6  8280               	bsf	128,1,c	;volatile
  6352   0027B8                     
  6353                           ;../color.c: 29:     LATDbits.LATD3 = 1;
  6354   0027B8  867C               	bsf	124,3,c	;volatile
  6355   0027BA                     
  6356                           ;../color.c: 30:     LATDbits.LATD4 = 0;
  6357   0027BA  987C               	bcf	124,4,c	;volatile
  6358   0027BC                     
  6359                           ;../color.c: 31:     LATHbits.LATH0 = 0;
  6360   0027BC  9080               	bcf	128,0,c	;volatile
  6361   0027BE                     
  6362                           ;../color.c: 32:     LATFbits.LATF0 = 0;
  6363   0027BE  907E               	bcf	126,0,c	;volatile
  6364   0027C0                     
  6365                           ;../color.c: 35:     LATDbits.LATD7=0;
  6366   0027C0  9E7C               	bcf	124,7,c	;volatile
  6367   0027C2                     
  6368                           ;../color.c: 36:     LATHbits.LATH3=0;
  6369   0027C2  9680               	bcf	128,3,c	;volatile
  6370   0027C4                     
  6371                           ;../color.c: 37:     TRISDbits.TRISD7=0;
  6372   0027C4  9E84               	bcf	132,7,c	;volatile
  6373   0027C6                     
  6374                           ;../color.c: 38:     TRISHbits.TRISH3=0;
  6375   0027C6  9688               	bcf	136,3,c	;volatile
  6376   0027C8                     
  6377                           ;../color.c: 40:     TRISFbits.TRISF2=1;
  6378   0027C8  8486               	bsf	134,2,c	;volatile
  6379   0027CA                     
  6380                           ;../color.c: 41:     ANSELFbits.ANSELF2=0;
  6381   0027CA  010E               	movlb	14	; () banked
  6382   0027CC  95B4               	bcf	180,2,b	;volatile
  6383   0027CE                     
  6384                           ; BSR set to: 14
  6385                           ;../color.c: 42:     TRISFbits.TRISF3=1;
  6386   0027CE  8686               	bsf	134,3,c	;volatile
  6387   0027D0                     
  6388                           ; BSR set to: 14
  6389                           ;../color.c: 43:     ANSELFbits.ANSELF3=0;
  6390   0027D0  97B4               	bcf	180,3,b	;volatile
  6391   0027D2                     
  6392                           ; BSR set to: 14
  6393   0027D2  0012               	return		;funcret
  6394   0027D4                     __end_of_color_click_init:
  6395                           	callstack 0
  6396                           
  6397 ;; *************** function _color_writetoaddr *****************
  6398 ;; Defined at:
  6399 ;;		line 46 in file "../color.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;  address         1    wreg     unsigned char 
  6402 ;;  value           1    2[COMRAM] unsigned char 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;  address         1    3[COMRAM] unsigned char 
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      void 
  6407 ;; Registers used:
  6408 ;;		wreg, status,2, status,0, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6414 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;Total ram usage:        2 bytes
  6419 ;; Hardware stack levels used: 1
  6420 ;; Hardware stack levels required when called: 3
  6421 ;; This function calls:
  6422 ;;		_I2C_2_Master_Start
  6423 ;;		_I2C_2_Master_Stop
  6424 ;;		_I2C_2_Master_Write
  6425 ;; This function is called by:
  6426 ;;		_color_click_init
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text38
  6431   002B8E                     __ptext38:
  6432                           	callstack 0
  6433   002B8E                     _color_writetoaddr:
  6434                           	callstack 26
  6435                           
  6436                           ; BSR set to: 14
  6437                           ;incstack = 0
  6438                           ;color_writetoaddr@address stored from wreg
  6439   002B8E  6E04               	movwf	color_writetoaddr@address^0,c
  6440   002B90                     
  6441                           ;../color.c: 46: void color_writetoaddr(char address, char value);../color.c: 47: {;../c
      +                          olor.c: 48:     I2C_2_Master_Start();
  6442   002B90  EC1D  F016         	call	_I2C_2_Master_Start	;wreg free
  6443                           
  6444                           ;../color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  6445   002B94  0E52               	movlw	82
  6446   002B96  EC0D  F016         	call	_I2C_2_Master_Write
  6447                           
  6448                           ;../color.c: 50:     I2C_2_Master_Write(0x80 | address);
  6449   002B9A  5004               	movf	color_writetoaddr@address^0,w,c
  6450   002B9C  0980               	iorlw	128
  6451   002B9E  EC0D  F016         	call	_I2C_2_Master_Write
  6452                           
  6453                           ;../color.c: 51:     I2C_2_Master_Write(value);
  6454   002BA2  5003               	movf	color_writetoaddr@value^0,w,c
  6455   002BA4  EC0D  F016         	call	_I2C_2_Master_Write
  6456                           
  6457                           ;../color.c: 52:     I2C_2_Master_Stop();
  6458   002BA8  EC18  F016         	call	_I2C_2_Master_Stop	;wreg free
  6459   002BAC  0012               	return		;funcret
  6460   002BAE                     __end_of_color_writetoaddr:
  6461                           	callstack 0
  6462                           
  6463 ;; *************** function _I2C_2_Master_Write *****************
  6464 ;; Defined at:
  6465 ;;		line 45 in file "../i2c.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  data_byte       1    wreg     unsigned char 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  data_byte       1    1[COMRAM] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;Total ram usage:        1 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; Hardware stack levels required when called: 2
  6486 ;; This function calls:
  6487 ;;		_I2C_2_Master_Idle
  6488 ;; This function is called by:
  6489 ;;		_color_writetoaddr
  6490 ;;		_color_read_Luminosity
  6491 ;;		_color_read_Red
  6492 ;;		_color_read_Green
  6493 ;;		_color_read_Blue
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text39
  6498   002C1A                     __ptext39:
  6499                           	callstack 0
  6500   002C1A                     _I2C_2_Master_Write:
  6501                           	callstack 26
  6502                           
  6503                           ;incstack = 0
  6504                           ;I2C_2_Master_Write@data_byte stored from wreg
  6505   002C1A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6506   002C1C                     
  6507                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  6508   002C1C  EC8D  F015         	call	_I2C_2_Master_Idle	;wreg free
  6509   002C20                     
  6510                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  6511   002C20  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6512   002C24  0012               	return		;funcret
  6513   002C26                     __end_of_I2C_2_Master_Write:
  6514                           	callstack 0
  6515                           
  6516 ;; *************** function _I2C_2_Master_Stop *****************
  6517 ;; Defined at:
  6518 ;;		line 39 in file "../i2c.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      void 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 2
  6539 ;; This function calls:
  6540 ;;		_I2C_2_Master_Idle
  6541 ;; This function is called by:
  6542 ;;		_color_writetoaddr
  6543 ;;		_color_read_Luminosity
  6544 ;;		_color_read_Red
  6545 ;;		_color_read_Green
  6546 ;;		_color_read_Blue
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text40
  6551   002C30                     __ptext40:
  6552                           	callstack 0
  6553   002C30                     _I2C_2_Master_Stop:
  6554                           	callstack 26
  6555   002C30                     
  6556                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  6557   002C30  EC8D  F015         	call	_I2C_2_Master_Idle	;wreg free
  6558   002C34                     
  6559                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6560   002C34  010E               	movlb	14	; () banked
  6561   002C36  85DA               	bsf	218,2,b	;volatile
  6562   002C38                     
  6563                           ; BSR set to: 14
  6564   002C38  0012               	return		;funcret
  6565   002C3A                     __end_of_I2C_2_Master_Stop:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function _I2C_2_Master_Start *****************
  6569 ;; Defined at:
  6570 ;;		line 27 in file "../i2c.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 2
  6591 ;; This function calls:
  6592 ;;		_I2C_2_Master_Idle
  6593 ;; This function is called by:
  6594 ;;		_color_writetoaddr
  6595 ;;		_color_read_Luminosity
  6596 ;;		_color_read_Red
  6597 ;;		_color_read_Green
  6598 ;;		_color_read_Blue
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           	psect	text41
  6603   002C3A                     __ptext41:
  6604                           	callstack 0
  6605   002C3A                     _I2C_2_Master_Start:
  6606                           	callstack 26
  6607   002C3A                     
  6608                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  6609   002C3A  EC8D  F015         	call	_I2C_2_Master_Idle	;wreg free
  6610   002C3E                     
  6611                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6612   002C3E  010E               	movlb	14	; () banked
  6613   002C40  81DA               	bsf	218,0,b	;volatile
  6614   002C42                     
  6615                           ; BSR set to: 14
  6616   002C42  0012               	return		;funcret
  6617   002C44                     __end_of_I2C_2_Master_Start:
  6618                           	callstack 0
  6619                           
  6620 ;; *************** function _I2C_2_Master_Idle *****************
  6621 ;; Defined at:
  6622 ;;		line 22 in file "../i2c.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6640 ;;Total ram usage:        1 bytes
  6641 ;; Hardware stack levels used: 1
  6642 ;; Hardware stack levels required when called: 1
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_I2C_2_Master_Start
  6647 ;;		_I2C_2_Master_RepStart
  6648 ;;		_I2C_2_Master_Stop
  6649 ;;		_I2C_2_Master_Write
  6650 ;;		_I2C_2_Master_Read
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text42
  6655   002B1A                     __ptext42:
  6656                           	callstack 0
  6657   002B1A                     _I2C_2_Master_Idle:
  6658                           	callstack 26
  6659   002B1A                     l100:
  6660   002B1A  010E               	movlb	14	; () banked
  6661   002B1C  B5D8               	btfsc	216,2,b	;volatile
  6662   002B1E  EF93  F015         	goto	u1141
  6663   002B22  EF95  F015         	goto	u1140
  6664   002B26                     u1141:
  6665   002B26  EF8D  F015         	goto	l100
  6666   002B2A                     u1140:
  6667   002B2A                     
  6668                           ; BSR set to: 14
  6669   002B2A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6670   002B2E  0E1F               	movlw	31
  6671   002B30  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6672   002B32  A4D8               	btfss	status,2,c
  6673   002B34  EF9E  F015         	goto	u1151
  6674   002B38  EFA0  F015         	goto	u1150
  6675   002B3C                     u1151:
  6676   002B3C  EF8D  F015         	goto	l100
  6677   002B40                     u1150:
  6678   002B40                     
  6679                           ; BSR set to: 14
  6680   002B40  0012               	return		;funcret
  6681   002B42                     __end_of_I2C_2_Master_Idle:
  6682                           	callstack 0
  6683                           
  6684 ;; *************** function _I2C_2_Master_Init *****************
  6685 ;; Defined at:
  6686 ;;		line 4 in file "../i2c.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; Hardware stack levels required when called: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_color_click_init
  6711 ;;		_main
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text43
  6716   002AF0                     __ptext43:
  6717                           	callstack 0
  6718   002AF0                     _I2C_2_Master_Init:
  6719                           	callstack 28
  6720   002AF0                     
  6721                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6722   002AF0  010E               	movlb	14	; () banked
  6723   002AF2  51D9               	movf	217,w,b	;volatile
  6724   002AF4  0BF0               	andlw	-16
  6725   002AF6  0908               	iorlw	8
  6726   002AF8  6FD9               	movwf	217,b	;volatile
  6727   002AFA                     
  6728                           ; BSR set to: 14
  6729                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6730   002AFA  8BD9               	bsf	217,5,b	;volatile
  6731                           
  6732                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6733   002AFC  0E9F               	movlw	159
  6734   002AFE  6FD6               	movwf	214,b	;volatile
  6735   002B00                     
  6736                           ; BSR set to: 14
  6737                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6738   002B00  8A84               	bsf	132,5,c	;volatile
  6739   002B02                     
  6740                           ; BSR set to: 14
  6741                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6742   002B02  8C84               	bsf	132,6,c	;volatile
  6743   002B04                     
  6744                           ; BSR set to: 14
  6745                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6746   002B04  9BA7               	bcf	167,5,b	;volatile
  6747   002B06                     
  6748                           ; BSR set to: 14
  6749                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6750   002B06  9DA7               	bcf	167,6,b	;volatile
  6751                           
  6752                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  6753   002B08  0E1D               	movlw	29
  6754   002B0A  6F1D               	movwf	29,b	;volatile
  6755                           
  6756                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  6757   002B0C  0E1E               	movlw	30
  6758   002B0E  6F1C               	movwf	28,b	;volatile
  6759                           
  6760                           ;../i2c.c: 18:   RD5PPS=0x1C;
  6761   002B10  0E1C               	movlw	28
  6762   002B12  6F6F               	movwf	111,b	;volatile
  6763                           
  6764                           ;../i2c.c: 19:   RD6PPS=0x1B;
  6765   002B14  0E1B               	movlw	27
  6766   002B16  6F70               	movwf	112,b	;volatile
  6767   002B18                     
  6768                           ; BSR set to: 14
  6769   002B18  0012               	return		;funcret
  6770   002B1A                     __end_of_I2C_2_Master_Init:
  6771                           	callstack 0
  6772                           
  6773 ;; *************** function _Timer0_init *****************
  6774 ;; Defined at:
  6775 ;;		line 62 in file "../rc_servo.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;Total ram usage:        0 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 1
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_main
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text44
  6804   002BAE                     __ptext44:
  6805                           	callstack 0
  6806   002BAE                     _Timer0_init:
  6807                           	callstack 29
  6808   002BAE                     
  6809                           ;../rc_servo.c: 64:     T0CON1bits.T0CS=0b010;
  6810   002BAE  50D6               	movf	214,w,c	;volatile
  6811   002BB0  0B1F               	andlw	-225
  6812   002BB2  0940               	iorlw	64
  6813   002BB4  6ED6               	movwf	214,c	;volatile
  6814   002BB6                     
  6815                           ;../rc_servo.c: 65:     T0CON1bits.T0ASYNC=1;
  6816   002BB6  88D6               	bsf	214,4,c	;volatile
  6817                           
  6818                           ;../rc_servo.c: 66:     T0CON1bits.T0CKPS=0b0111;
  6819   002BB8  50D6               	movf	214,w,c	;volatile
  6820   002BBA  0BF0               	andlw	-16
  6821   002BBC  0907               	iorlw	7
  6822   002BBE  6ED6               	movwf	214,c	;volatile
  6823   002BC0                     
  6824                           ;../rc_servo.c: 68:     T0CON0bits.T016BIT=1;
  6825   002BC0  88D5               	bsf	213,4,c	;volatile
  6826                           
  6827                           ;../rc_servo.c: 71:     TMR0H=(65535-2500)>>8;
  6828   002BC2  0EF6               	movlw	246
  6829   002BC4  6ED4               	movwf	212,c	;volatile
  6830                           
  6831                           ;../rc_servo.c: 72:     TMR0L=(unsigned char)(65535-2500);
  6832   002BC6  0E3B               	movlw	59
  6833   002BC8  6ED3               	movwf	211,c	;volatile
  6834   002BCA                     
  6835                           ;../rc_servo.c: 73:     T0CON0bits.T0EN=1;
  6836   002BCA  8ED5               	bsf	213,7,c	;volatile
  6837   002BCC  0012               	return		;funcret
  6838   002BCE                     __end_of_Timer0_init:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function _Interrupts_init *****************
  6842 ;; Defined at:
  6843 ;;		line 8 in file "../rc_servo.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		None
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 1
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_main
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text45
  6872   002C04                     __ptext45:
  6873                           	callstack 0
  6874   002C04                     _Interrupts_init:
  6875                           	callstack 29
  6876   002C04                     
  6877                           ;../rc_servo.c: 12:     INTCONbits.IPEN = 1;
  6878   002C04  8AF2               	bsf	242,5,c	;volatile
  6879                           
  6880                           ;../rc_servo.c: 13:     INTCONbits.PEIE = 1;
  6881   002C06  8CF2               	bsf	242,6,c	;volatile
  6882                           
  6883                           ;../rc_servo.c: 16:     PIE0bits.TMR0IE = 1;
  6884   002C08  010E               	movlb	14	; () banked
  6885   002C0A  8B29               	bsf	41,5,b	;volatile
  6886                           
  6887                           ;../rc_servo.c: 17:     IPR0bits.TMR0IP = 1;
  6888   002C0C  8B1F               	bsf	31,5,b	;volatile
  6889                           
  6890                           ;../rc_servo.c: 18:     PIR0bits.TMR0IF = 0;
  6891   002C0E  9B33               	bcf	51,5,b	;volatile
  6892                           
  6893                           ;../rc_servo.c: 20:     PIE2bits.C1IE=1;
  6894   002C10  812B               	bsf	43,0,b	;volatile
  6895                           
  6896                           ;../rc_servo.c: 21:     IPR2bits.C1IP=0;
  6897   002C12  9121               	bcf	33,0,b	;volatile
  6898                           
  6899                           ;../rc_servo.c: 22:     PIR2bits.C1IF=0;
  6900   002C14  9135               	bcf	53,0,b	;volatile
  6901                           
  6902                           ;../rc_servo.c: 24:     INTCONbits.GIE = 1;
  6903   002C16  8EF2               	bsf	242,7,c	;volatile
  6904   002C18                     
  6905                           ; BSR set to: 14
  6906   002C18  0012               	return		;funcret
  6907   002C1A                     __end_of_Interrupts_init:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _HighISR *****************
  6911 ;; Defined at:
  6912 ;;		line 31 in file "../rc_servo.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;Total ram usage:        0 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		Interrupt level 2
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	intcode
  6940   000008                     __pintcode:
  6941                           	callstack 0
  6942   000008                     _HighISR:
  6943                           	callstack 22
  6944                           
  6945                           ; BSR set to: 14
  6946                           ;incstack = 0
  6947   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6948   00000A                     
  6949                           ;../rc_servo.c: 33:     if(PIR0bits.TMR0IF||!PORTFbits.RF2){
  6950   00000A  010E               	movlb	14	; () banked
  6951   00000C  BB33               	btfsc	51,5,b	;volatile
  6952   00000E  EF0B  F000         	goto	i2u182_41
  6953   000012  EF0D  F000         	goto	i2u182_40
  6954   000016                     i2u182_41:
  6955   000016  EF14  F000         	goto	i2l2969
  6956   00001A                     i2u182_40:
  6957   00001A                     
  6958                           ; BSR set to: 14
  6959   00001A  B48E               	btfsc	142,2,c	;volatile
  6960   00001C  EF12  F000         	goto	i2u183_41
  6961   000020  EF14  F000         	goto	i2u183_40
  6962   000024                     i2u183_41:
  6963   000024  EF1D  F000         	goto	i2l356
  6964   000028                     i2u183_40:
  6965   000028                     i2l2969:
  6966                           
  6967                           ; BSR set to: 14
  6968                           ;../rc_servo.c: 36:         time++;
  6969   000028  0101               	movlb	1	; () banked
  6970   00002A  4BEE               	infsnz	_time& (0+255),f,b
  6971   00002C  2BEF               	incf	(_time+1)& (0+255),f,b
  6972   00002E                     
  6973                           ; BSR set to: 1
  6974                           ;../rc_servo.c: 39:         TMR0L = 0b11011011;
  6975   00002E  0EDB               	movlw	219
  6976   000030  6ED3               	movwf	211,c	;volatile
  6977   000032                     
  6978                           ; BSR set to: 1
  6979                           ;../rc_servo.c: 40:         TMR0H = 0b00001011;
  6980   000032  0E0B               	movlw	11
  6981   000034  6ED4               	movwf	212,c	;volatile
  6982   000036                     
  6983                           ; BSR set to: 1
  6984                           ;../rc_servo.c: 42:         PIR0bits.TMR0IF=0;
  6985   000036  010E               	movlb	14	; () banked
  6986   000038  9B33               	bcf	51,5,b	;volatile
  6987   00003A                     i2l356:
  6988                           
  6989                           ; BSR set to: 14
  6990   00003A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6991   00003C  0011               	retfie		f
  6992   00003E                     __end_of_HighISR:
  6993                           	callstack 0
  6994                           
  6995                           	psect	rparam
  6996   000000                     
  6997                           	psect	temp
  6998   00005F                     btemp:
  6999                           	callstack 0
  7000   00005F                     	ds	1
  7001   000000                     int$flags	set	btemp
  7002   000000                     wtemp8	set	btemp+1
  7003   000000                     ttemp5	set	btemp+1
  7004   000000                     ttemp6	set	btemp+4
  7005   000000                     ttemp7	set	btemp+8
  7006                           
  7007                           	psect	idloc
  7008                           
  7009                           ;Config register IDLOC0 @ 0x200000
  7010                           ;	unspecified, using default values
  7011   200000                     	org	2097152
  7012   200000  0FFF               	dw	4095
  7013                           
  7014                           ;Config register IDLOC1 @ 0x200002
  7015                           ;	unspecified, using default values
  7016   200002                     	org	2097154
  7017   200002  0FFF               	dw	4095
  7018                           
  7019                           ;Config register IDLOC2 @ 0x200004
  7020                           ;	unspecified, using default values
  7021   200004                     	org	2097156
  7022   200004  0FFF               	dw	4095
  7023                           
  7024                           ;Config register IDLOC3 @ 0x200006
  7025                           ;	unspecified, using default values
  7026   200006                     	org	2097158
  7027   200006  0FFF               	dw	4095
  7028                           
  7029                           ;Config register IDLOC4 @ 0x200008
  7030                           ;	unspecified, using default values
  7031   200008                     	org	2097160
  7032   200008  0FFF               	dw	4095
  7033                           
  7034                           ;Config register IDLOC5 @ 0x20000A
  7035                           ;	unspecified, using default values
  7036   20000A                     	org	2097162
  7037   20000A  0FFF               	dw	4095
  7038                           
  7039                           ;Config register IDLOC6 @ 0x20000C
  7040                           ;	unspecified, using default values
  7041   20000C                     	org	2097164
  7042   20000C  0FFF               	dw	4095
  7043                           
  7044                           ;Config register IDLOC7 @ 0x20000E
  7045                           ;	unspecified, using default values
  7046   20000E                     	org	2097166
  7047   20000E  0FFF               	dw	4095
  7048                           
  7049                           	psect	config
  7050                           
  7051                           ;Config register CONFIG1L @ 0x300000
  7052                           ;	External Oscillator mode Selection bits
  7053                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7054                           ;	Power-up default value for COSC bits
  7055                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7056   300000                     	org	3145728
  7057   300000  AA                 	db	170
  7058                           
  7059                           ;Config register CONFIG1H @ 0x300001
  7060                           ;	unspecified, using default values
  7061                           ;	Clock Out Enable bit
  7062                           ;	CLKOUTEN = 0x1, unprogrammed default
  7063                           ;	Clock Switch Enable bit
  7064                           ;	CSWEN = 0x1, unprogrammed default
  7065                           ;	Fail-Safe Clock Monitor Enable bit
  7066                           ;	FCMEN = 0x1, unprogrammed default
  7067   300001                     	org	3145729
  7068   300001  FF                 	db	255
  7069                           
  7070                           ;Config register CONFIG2L @ 0x300002
  7071                           ;	unspecified, using default values
  7072                           ;	Master Clear Enable bit
  7073                           ;	MCLRE = 0x1, unprogrammed default
  7074                           ;	Power-up Timer Enable bit
  7075                           ;	PWRTE = 0x1, unprogrammed default
  7076                           ;	Low-power BOR enable bit
  7077                           ;	LPBOREN = 0x1, unprogrammed default
  7078                           ;	Brown-out Reset Enable bits
  7079                           ;	BOREN = 0x3, unprogrammed default
  7080   300002                     	org	3145730
  7081   300002  FF                 	db	255
  7082                           
  7083                           ;Config register CONFIG2H @ 0x300003
  7084                           ;	unspecified, using default values
  7085                           ;	Brown Out Reset Voltage selection bits
  7086                           ;	BORV = 0x3, unprogrammed default
  7087                           ;	ZCD Disable bit
  7088                           ;	ZCD = 0x1, unprogrammed default
  7089                           ;	PPSLOCK bit One-Way Set Enable bit
  7090                           ;	PPS1WAY = 0x1, unprogrammed default
  7091                           ;	Stack Full/Underflow Reset Enable bit
  7092                           ;	STVREN = 0x1, unprogrammed default
  7093                           ;	Debugger Enable bit
  7094                           ;	DEBUG = 0x1, unprogrammed default
  7095                           ;	Extended Instruction Set Enable bit
  7096                           ;	XINST = 0x1, unprogrammed default
  7097   300003                     	org	3145731
  7098   300003  FF                 	db	255
  7099                           
  7100                           ;Config register CONFIG3L @ 0x300004
  7101                           ;	WDT Period Select bits
  7102                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7103                           ;	WDT operating mode
  7104                           ;	WDTE = OFF, WDT Disabled
  7105   300004                     	org	3145732
  7106   300004  9F                 	db	159
  7107                           
  7108                           ;Config register CONFIG3H @ 0x300005
  7109                           ;	unspecified, using default values
  7110                           ;	WDT Window Select bits
  7111                           ;	WDTCWS = 0x7, unprogrammed default
  7112                           ;	WDT input clock selector
  7113                           ;	WDTCCS = 0x7, unprogrammed default
  7114   300005                     	org	3145733
  7115   300005  FF                 	db	255
  7116                           
  7117                           ;Config register CONFIG4L @ 0x300006
  7118                           ;	unspecified, using default values
  7119                           ;	Write Protection Block 0
  7120                           ;	WRT0 = 0x1, unprogrammed default
  7121                           ;	Write Protection Block 1
  7122                           ;	WRT1 = 0x1, unprogrammed default
  7123                           ;	Write Protection Block 2
  7124                           ;	WRT2 = 0x1, unprogrammed default
  7125                           ;	Write Protection Block 3
  7126                           ;	WRT3 = 0x1, unprogrammed default
  7127                           ;	Write Protection Block 3
  7128                           ;	WRT4 = 0x1, unprogrammed default
  7129                           ;	Write Protection Block 3
  7130                           ;	WRT5 = 0x1, unprogrammed default
  7131                           ;	Write Protection Block 3
  7132                           ;	WRT6 = 0x1, unprogrammed default
  7133                           ;	Write Protection Block 3
  7134                           ;	WRT7 = 0x1, unprogrammed default
  7135   300006                     	org	3145734
  7136   300006  FF                 	db	255
  7137                           
  7138                           ;Config register CONFIG4H @ 0x300007
  7139                           ;	unspecified, using default values
  7140                           ;	Configuration Register Write Protection bit
  7141                           ;	WRTC = 0x1, unprogrammed default
  7142                           ;	Boot Block Write Protection bit
  7143                           ;	WRTB = 0x1, unprogrammed default
  7144                           ;	Data EEPROM Write Protection bit
  7145                           ;	WRTD = 0x1, unprogrammed default
  7146                           ;	Scanner Enable bit
  7147                           ;	SCANE = 0x1, unprogrammed default
  7148                           ;	Low Voltage Programming Enable bit
  7149                           ;	LVP = 0x1, unprogrammed default
  7150   300007                     	org	3145735
  7151   300007  FF                 	db	255
  7152                           
  7153                           ;Config register CONFIG5L @ 0x300008
  7154                           ;	unspecified, using default values
  7155                           ;	UserNVM Program Memory Code Protection bit
  7156                           ;	CP = 0x1, unprogrammed default
  7157                           ;	DataNVM Memory Code Protection bit
  7158                           ;	CPD = 0x1, unprogrammed default
  7159   300008                     	org	3145736
  7160   300008  FF                 	db	255
  7161                           
  7162                           ;Config register CONFIG5H @ 0x300009
  7163                           ;	unspecified, using default values
  7164   300009                     	org	3145737
  7165   300009  FF                 	db	255
  7166                           
  7167                           ;Config register CONFIG6L @ 0x30000A
  7168                           ;	unspecified, using default values
  7169                           ;	Table Read Protection Block 0
  7170                           ;	EBTR0 = 0x1, unprogrammed default
  7171                           ;	Table Read Protection Block 1
  7172                           ;	EBTR1 = 0x1, unprogrammed default
  7173                           ;	Table Read Protection Block 2
  7174                           ;	EBTR2 = 0x1, unprogrammed default
  7175                           ;	Table Read Protection Block 3
  7176                           ;	EBTR3 = 0x1, unprogrammed default
  7177                           ;	Table Read Protection Block 4
  7178                           ;	EBTR4 = 0x1, unprogrammed default
  7179                           ;	Table Read Protection Block 5
  7180                           ;	EBTR5 = 0x1, unprogrammed default
  7181                           ;	Table Read Protection Block 6
  7182                           ;	EBTR6 = 0x1, unprogrammed default
  7183                           ;	Table Read Protection Block 7
  7184                           ;	EBTR7 = 0x1, unprogrammed default
  7185   30000A                     	org	3145738
  7186   30000A  FF                 	db	255
  7187                           
  7188                           ;Config register CONFIG6H @ 0x30000B
  7189                           ;	unspecified, using default values
  7190                           ;	Boot Block Table Read Protection bit
  7191                           ;	EBTRB = 0x1, unprogrammed default
  7192   30000B                     	org	3145739
  7193   30000B  FF                 	db	255
  7194                           tosu	equ	0xFFF
  7195                           tosh	equ	0xFFE
  7196                           tosl	equ	0xFFD
  7197                           stkptr	equ	0xFFC
  7198                           pclatu	equ	0xFFB
  7199                           pclath	equ	0xFFA
  7200                           pcl	equ	0xFF9
  7201                           tblptru	equ	0xFF8
  7202                           tblptrh	equ	0xFF7
  7203                           tblptrl	equ	0xFF6
  7204                           tablat	equ	0xFF5
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           indf0	equ	0xFEF
  7208                           postinc0	equ	0xFEE
  7209                           postdec0	equ	0xFED
  7210                           preinc0	equ	0xFEC
  7211                           plusw0	equ	0xFEB
  7212                           fsr0h	equ	0xFEA
  7213                           fsr0l	equ	0xFE9
  7214                           wreg	equ	0xFE8
  7215                           indf1	equ	0xFE7
  7216                           postinc1	equ	0xFE6
  7217                           postdec1	equ	0xFE5
  7218                           preinc1	equ	0xFE4
  7219                           plusw1	equ	0xFE3
  7220                           fsr1h	equ	0xFE2
  7221                           fsr1l	equ	0xFE1
  7222                           bsr	equ	0xFE0
  7223                           indf2	equ	0xFDF
  7224                           postinc2	equ	0xFDE
  7225                           postdec2	equ	0xFDD
  7226                           preinc2	equ	0xFDC
  7227                           plusw2	equ	0xFDB
  7228                           fsr2h	equ	0xFDA
  7229                           fsr2l	equ	0xFD9
  7230                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         127
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    159     160
    BANK1           256    234     248
    BANK2           256      0     112
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2367$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout3(BANK1[100]), main@readout2(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2314$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2314$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout3(BANK1[100]), main@readout2(BANK0[100]), 

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S589DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S589DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK1[64]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _stop->_setMotorPWM
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse
    _motor_action->_right_135
    _motor_action->_right_90
    _motor_action->_spin_180
    _spin_180->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               381   381      0   41168
                                             88 COMRAM     6     6      0
                                             27 BANK0    132   132      0
                                              0 BANK1    234   234      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                  _sendStringSerial4
                        _setMotorPWM
                           _spin_180
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    3099
                                             25 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5722
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   19164
                                             33 COMRAM     8     2      6
                           _left_135
                            _left_90
                            _reverse
                          _right_135
                           _right_90
                           _spin_180
 ---------------------------------------------------------------------------------
 (1) _spin_180                                             8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    2947
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    2947
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    3099
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2551
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                28    24      4     829
                                              0 COMRAM    28    24      4
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _left_135
       _setMotorPWM
     _left_90
       _setMotorPWM
     _reverse
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _spin_180
       _setMotorPWM
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
   _spin_180
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop
     _setMotorPWM

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      70       9       43.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     EA      F8       7       96.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhlhhh     1B      0       0      33        0.0%
BITBIGSFRhhll       17      0       0      35        0.0%
BITBIGSFRhhlhl      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRllllll      7      0       0      52        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     266      59        0.0%
DATA                 0      0     266       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 16:55:24 2022

                 _color_read_Red 2878                  _color_read_Blue 2968  
                             l33 27D2                               l42 28C6  
                             l51 2216                               l36 2BAC  
                             l45 2966                               l70 17DC  
                             l39 2916                               l64 16A6  
                             l48 29B6                               l58 2170  
                             l66 1708                               l68 176A  
                             l97 2B18                     ___awdiv@sign 000C  
            ___wmul@multiplicand 0003                 _color_read_Green 2918  
              ??_Interrupts_init 0001                              l100 2B1A  
                            l103 2B40                              l112 2C38  
                            l200 1064                              l106 2C42  
                            l115 2C24                              l109 2C2E  
                            l118 2A7E                              l302 25E6  
                            l400 2BEA                              l208 1232  
                            l315 1F24                              l412 2C02  
                            l421 2B8C                              l262 19B0  
                            l255 2A3C                              l272 26FE  
                            l192 0E96                              l409 2BEE  
                            l282 22BA                              l418 2AEE  
                            l267 2674                              l348 2C18  
                            l292 2400                              l277 2544  
                            l359 2BCC                              l287 235E  
                            l535 1B38                              l199 1050  
                            l297 24A2                              l652 20B2  
                            l548 1C9C                motor_action@color 0022  
                            u930 1F38                              u931 1F34  
                            u940 1F4A                              u941 1F46  
                            u950 1F72                              u951 1F6E  
                            u960 1FA8                              u961 1FA4  
                            u970 29FA                              u971 29F6  
                            u980 19C4                              u981 19C0  
                            u990 19F6                              u991 19F2  
                            _abs 2A80                              _pad 2700  
                            wreg 000FE8                             l1121 2722  
                           l1130 1376                             ?_abs 0013  
                           l1132 137E                             l2101 1F38  
                           l1125 2778                             l1133 13C4  
                           l2103 1F4A                             l1151 1DFA  
                           l1144 1566                             l2121 19B2  
                           l1161 2AB6                             l2105 1F54  
                           l2113 29B8                             l2201 2700  
                           l2131 19F6                             l2123 19B6  
                           l2107 1F72                             l2115 29C4  
                           l2211 2746                             l2203 270E  
                           l1164 2ABE                             l2221 2B2A  
                           l2141 1A4C                             l2133 1A16  
                           l2125 19C4                             l2109 1FA8  
                           l2117 29D6                             l2213 2764  
                           l2205 271A                             l2301 13DC  
                           l1157 2876                             l2231 1FF4  
                           l2223 2B68                             l2151 1ACE  
                           l2143 1A60                             l2135 1A1A  
                           l2127 19E4                             l2215 2A80  
                           l2119 29DA                             l2207 272E  
                           l2311 14E8                             l2303 145E  
                           l1176 1FEE                             l1184 29FA  
                           l2401 2AFA                             l2241 2024  
                           l2233 2002                             l2225 2B84  
                           l2161 1B18                             l2153 1AD0  
                           l2145 1A6E                             l2137 1A26  
                           l2129 19E8                             l2217 2A9A  
                           l2209 2742                             l2321 1546  
                           l2313 1506                             l2305 1464  
                           l2403 2B00                             l2219 2B1A  
                           l2331 2C20                             l2411 2B90  
                           l2251 2052                             l2243 2028  
                           l2235 200A                             l2155 1AE2  
                           l2147 1A80                             l2139 1A44  
                           l2171 1B6C                             l1187 2C44  
                           l2315 1520                             l2307 146A  
                           l1099 2824                             l2405 2B02  
                           l2325 2C3A                             l2333 2C30  
                           l2341 2A40                             l2413 28C8  
                           l2421 28BE                             l2261 2086  
                           l2253 2060                             l2245 2030  
                           l2237 200E                             l2229 1FF0  
                           l2501 227A                             l2149 1AAE  
                           l2157 1AE8                             l2181 1BC4  
                           l2173 1B70                             l2165 1B3A  
                           l2317 1530                             l2309 14CE  
                           l2407 2B04                             l2327 2C3E  
                           l2335 2C34                             l2351 2A7C  
                           l2343 2A44                             l2431 2968  
                           l2415 290E                             l2263 208C  
                           l2255 2066                             l2247 2042  
                           l2239 201C                             l2503 2286  
                           l2159 1AF8                             l2191 1C46  
                           l2183 1BD8                             l2175 1B7E  
                           l2167 1B3E                             l2319 1536  
                           l2409 2B06                             l2329 2C1C  
                           l2601 27A2                             l2345 2A4C  
                           l2337 2C26                             l2433 29AE  
                           l2425 2918                             l2257 207C  
                           l2249 204A                             l2265 2092  
                           l2361 18A2                             l2521 230A  
                           l2505 22A2                             l2185 1BE6  
                           l2193 1C4C                             l2177 1B9E  
                           l2169 1B4C                             l2281 134E  
                           l2273 12EA                             l2611 27B4  
                           l2603 27AC                             l2347 2A54  
                           l2339 2C2A                             l2427 295E  
                           l2419 2878                             l2267 20A2  
                           l2259 2084                             l2363 18C2  
                           l2355 17DE                             l2523 2316  
                           l2515 22E4                             l2507 22BC  
                           l2531 2402                             l2451 23AE  
                           l2195 1C5C                             l2187 1C14  
                           l2179 1BBC                             l2099 1F26  
                           l2291 13AC                             l2283 136A  
                           l2275 130A                             l2371 1CC6  
                           l2621 27BE                             l2613 27B6  
                           l2605 27AE                             l2701 17A0  
                           l2349 2A7A                             l2269 20AA  
                           l2365 18DE                             l2357 17FA  
                           l2525 231E                             l2517 22F2  
                           l2509 22DC                             l2461 24A4  
                           l2541 2436                             l2533 2422  
                           l2453 23BA                             l2445 2388  
                           l2437 2360                             l2197 1C7C  
                           l2189 1C34                             l2293 13B8  
                           l2285 1386                             l2277 131E  
                           l2381 1D16                             l2373 1CD4  
                           l2631 27C8                             l2623 27C0  
                           l2615 27B8                             l2607 27B0  
                           l2703 17B0                             l2367 1948  
                           l2359 185C                             l2711 2A0C  
                           l2527 232A                             l2519 22FE  
                           l2471 24E4                             l2463 24C4  
                           l2551 2470                             l2543 2444  
                           l2455 23C2                             l2447 2394  
                           l2439 2380                             l2295 13C0  
                           l2287 1396                             l2279 132E  
                           l2383 1D36                             l2375 1CE2  
                           l2721 2C04                             l2633 27CA  
                           l2625 27C2                             l2617 27BA  
                           l2609 27B2                             l2705 17BC  
                           l2641 2186                             l2713 2A20  
                           l2529 2346                             l2481 252C  
                           l2473 24F0                             l2553 248C  
                           l2545 2450                             l2457 23CE  
                           l2449 23A2                             l2297 13CC  
                           l2289 139C                             l2385 1D8C  
                           l2377 1CE6                             l2393 1DCE  
                           l2369 1C9E                             l2801 265A  
                           l2723 2BAE                             l2635 27CE  
                           l2627 27C4                             l2619 27BC  
                           l2651 20F0                             l2707 17C0  
                           l2643 219E                             l2715 2A24  
                           l2731 2BCE                             l2571 25A0  
                           l2563 256E                             l2555 2546  
                           l2475 24FC                             l2547 245C  
                           l2539 242A                             l2491 2240  
                           l2483 2218                             l2459 23EA  
                           l2811 1E48                             l2803 1DFC  
                           l2299 13D6                             l2379 1CF6  
                           l2725 2BB6                             l2637 27D0  
                           l2629 27C6                             l2661 2154  
                           l2653 2106                             l2645 21CE  
                           l2717 2A38                             l2709 29FC  
                           l2741 2BE8                             l2733 2BD8  
                           l2573 25A8                             l2565 257C  
                           l2557 2566                             l2477 2504  
                           l2469 24CC                             l2549 2464  
                           l2493 224C                             l2485 2238  
                           l2813 1E74                             l2805 1E00  
                           l2821 1ED0                             l2581 2BFE  
                           l2389 1DBC                             l2901 106A  
                           l2727 2BC0                             l2399 2AF0  
                           l2663 2160                             l2655 211C  
                           l2671 15A4                             l2647 21E6  
                           l2639 2172                             l2719 2A3A  
                           l2735 2BDA                             l2575 25B4  
                           l2567 2588                             l2479 2510  
                           l2495 225A                             l2815 1EA0  
                           l2807 1E18                             l2583 2826  
                           l2751 2812                             l2743 27D4  
                           l2911 10C6                             l2903 1072  
                           l2831 0E24                             l2729 2BCA  
                           l2593 277A                             l2665 2168  
                           l2657 2128                             l2649 20B4  
                           l2681 165E                             l2737 2BE4  
                           l2577 25D0                             l2569 2594  
                           l2497 2266                             l2817 1EB8  
                           l2809 1E30                             l2761 2AD6  
                           l2585 2832                             l2745 27E6  
                           l2921 1130                             l2913 10D2  
                           l2905 1086                             l2841 0E34  
                           l2833 0E28                             l2595 277E  
                           l2659 213E                             l2691 1704  
                           l2683 1680                             l2771 269E  
                           l2763 2676                             l2739 2BE6  
                           l2499 2272                             l2579 2BEE  
                           l2755 2AC0                             l2587 284E  
                           l2747 27EE                             l2931 11B4  
                           l2923 114A                             l2915 10E0  
                           l2907 1092                             l2851 0E52  
                           l2843 0E3A                             l2835 0E2C  
                           l2827 0E14                             l2597 2788  
                           l2693 1722                             l2685 16A2  
                           l2677 15AC                             l2669 1568  
                           l2781 26E2                             l2773 26B6  
                           l2765 2696                             l2757 2AC4  
                           l2589 286E                             l2749 27F6  
                           l2941 1208                             l2933 11BE  
                           l2925 1186                             l2917 10F8  
                           l2909 10B2                             l2861 0E7E  
                           l2853 0E5A                             l2845 0E3E  
                           l2837 0E30                             l2829 0E18  
                           ?_pad 0011                             l2599 2798  
                           l2695 1744                             l2687 16C0  
                           l2679 165A                             l2775 26C2  
                           l2759 2AD2                             l2791 2610  
                           l2783 25E8                             l2951 126A  
                           l2943 1212                             l2927 1192  
                           l2919 1114                             l2935 11C6  
                           l2871 0EAE                             l2863 0E8A  
                           l2855 0E5E                             l2847 0E46  
                           l2839 0E34                             l2697 1766  
                           l2689 16E2                             l2777 26CE  
                           l2793 2628                             l2785 2608  
                           l2961 12DC                             l2953 1282  
                           l2929 11AE                             l2937 11DE  
                           l2881 0F8A                             l2873 0EBA  
                           l2865 0EA4                             l2857 0E72  
                           l2849 0E4E                             l2699 1790  
                           l2779 26D6                             l2795 2634  
                           l2955 129A                             l2947 1234  
                           l2939 11F4                             l2891 0FE8  
                           l2883 0F8C                             l2875 0EE8  
                           l2859 0E76                             l2797 2640  
                           l2957 129E                             l2949 123C  
                           l2893 1000                             l2885 0FC2  
                           l2877 0F1E                             l2799 264E  
                           l2959 12C8                             l2895 1006  
                           l2887 0FCE                             l2879 0F54  
                           l2897 1022                             l2889 0FE6  
                           l2899 105E                             l2999 1EE6  
                           STR_1 0E04                             STR_2 0E01  
                           u1001 1A20                             u1010 1A44  
                           u1011 1A40                             u1020 1A6E  
                           u1100 1C5C                             u1021 1A6A  
                           u1101 1C58                             u1030 1AAE  
                           u1110 270E                             u1031 1AAA  
                           u1111 270A                             u1200 207C  
                           u1040 1AF8                             u1120 2764  
                           u1201 2078                             u1041 1AF4  
                           u1121 2760                             u1210 20A2  
                           u1050 1B4C                             u1130 2A9A  
                           u1211 209E                             u1051 1B48  
                           u1131 2A96                             u1140 2B2A  
                           u1060 1B7E                             u1300 1520  
                           u1220 131A                             u1141 2B26  
                           u1061 1B7A                             u1301 151C  
                           u1221 1314                             u1150 2B40  
                           u1070 1BBC                             u1310 1530  
                           u1230 131C                             u1151 2B3C  
                           u2007 25DA                             u1071 1BB8  
                           u1311 152C                             u1320 2A68  
                           u1160 2002                             u1080 1BE6  
                           u1240 132E                             u1400 1D36  
                           u1321 2A60                             u1161 1FFE  
                           u2017 26D0                             u1081 1BE2  
                           u1241 132A                             u1401 1D32  
                           u1170 201C                             u1410 23EA  
                           u1090 1C14                             u1250 136A  
                           u2027 2190                             u1171 2018  
                           u1411 23E6                             u1091 1C10  
                           u1251 1366                             u1500 211C  
                           u1180 2042                             u1340 17FA  
                           u1420 252C                             u1260 1396  
                           u1501 2118                             u2037 21C0  
                           u1181 203E                             u1341 17F6  
                           u1421 2528                             u1261 1392  
                           u1510 213E                             u1190 2060  
                           u1350 18DE                             u1430 22A2  
                           u1270 13AC                             u1511 213A  
                           u2047 21F0                             u1191 205C  
                           u1351 18DA                             u1431 229E  
                           u1271 13A8                             u1520 2154  
                           u1600 171C                             u1440 2346  
                           u1280 14E8                     _BAUD4CONbits 000EE9  
                           u2057 278E                             u1521 2150  
                           u1441 2342                             u1281 14E4  
                           _LATE 000F7D                             u1610 1744  
                           u1530 1680                             u1338 2A6A  
                           u1450 248C                             u1290 1506  
                           u1611 1740                             u1531 167C  
                           u1451 2488                             u1291 1502  
                           _LATG 000F7F                             u1620 1766  
                           u1540 16A2                             u1364 1938  
                           u1700 26FE                             u1460 25D0  
                           u1380 1CC6                             u1621 1762  
                           u1541 169E                             u1365 1934  
                           u1701 26FA                             u1461 25CC  
                           u1381 1CC2                             u1630 177C  
                           u1550 16B8                             u1374 19A2  
                           u1470 2BFE                             u1390 1D16  
                           u1710 2674                             u1631 1776  
                           u1551 16B2                             u1375 199E  
                           u1471 2BFA                             u1391 1D12  
                           u1711 2670                             u1640 177E  
                           u1560 16BA                             u1480 286E  
                           u1800 122E                             u1720 0EA4  
                           u1481 286A                             u1801 122A  
                           u1721 0EA0                             u1490 2106  
                           u1650 1790                             u1570 16E2  
                           u1810 12C8                             u1730 1022  
                           _T2PR 000FBC                             u1491 2102  
                           u1651 178C                             u1571 16DE  
                           u1811 12C4                             u1731 101E  
                           u1660 17A0                             u1580 1704  
                           u1740 103E                             u1661 179C  
                           u1581 1700                             u1741 1036  
                           u1670 17B0                             u1590 171A  
                           u1750 1050                             u1671 17AC  
                           u1591 1714                             u1751 104C  
                           u1680 17DC                             u1760 105E  
                           u1681 17D8                             u1761 105A  
                           u1690 2AEE                             u1770 10B2  
                           u1907 23F4                             u1691 2AEA  
                           u1771 10AE                             u1780 10E0  
                           u1748 1040                             u1917 2274  
                           u1781 10DC                             u1790 11F4  
                           u1927 22AC                             u1791 11F0  
                           u1847 0FD8                             u1937 245E  
                           u1857 0FF2                             u1947 2496  
                           u1867 11D0                             u1957 24FE  
                           u1877 128C                             u1967 2536  
                           u1887 2646                             u1977 2318  
                           u1897 23BC                             u1987 2350  
                           u1997 25A2                             abs@a 0013  
                           _dbuf 0250                             _main 0E14  
                           _dtoa 12EA                             _prec 01EC  
                           _time 01EE                             pad@i 0018  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           btemp 005F                             _stop 25E8  
                           prodh 000FF4                             prodl 000FF3  
                           start 003E           __end_of_color_read_Red 28C8  
                __end_of_HighISR 003E                     ___param_bank 000000  
                          ??_abs 0015                            ??_pad 0017  
       _color_processor_hard$370 000C         _color_processor_hard$372 000D  
       _color_processor_hard$374 000E                  __end_of___aodiv 1B3A  
                          ?_main 0001                            ?_dtoa 001C  
                __end_of___aomod 1C9E                  __end_of___awdiv 20B4  
        ??_color_read_Luminosity 0007                            ?_stop 001A  
                ___awdiv@divisor 0009                            i2l356 003A  
                ___awdiv@counter 000B                     vfpfcnvrt@fmt 0041  
                          _TMR0H 000FD4                            _TMR0L 000FD3  
                   main@readout2 007B                     main@readout3 0100  
        __end_of_sendCharSerial4 2C04       __end_of_I2C_2_Master_Start 2C44  
     __end_of_I2C_2_Master_Write 2C26                  __end_of_left_90 2360  
                          _flags 01F4                            _fputc 1F26  
                __end_of_forward 2700                            _fputs 29B8  
                          pad@fp 0011                            _width 01EA  
                          _putch 2C44                            main@i 01C6  
                          main@j 00FD                            main@k 01C4  
                          dtoa@d 001E                            dtoa@i 003C  
                          dtoa@n 0034                            dtoa@p 0030  
                          dtoa@s 003E                            dtoa@w 0032  
                          tablat 000FF5                  __end_of_reverse 2546  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            stop@i 001F  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 2826          __end_of_color_read_Blue 29B8  
          _I2C_2_Master_RepStart 2C26                  ?_color_read_Red 0005  
                __initialization 2B42   color_processor_hard@calibrated 0003  
                   __end_of_main 12EA                     __end_of_dtoa 1568  
                   __end_of_stop 2676                           ??_main 0059  
                         ??_dtoa 0026                           ??_stop 001E  
                  __activetblptr 000003                     ?_setMotorPWM 000F  
                         ?_fputc 0001                           ?_fputs 000A  
               ___awdiv@dividend 0007                           ?_putch 0001  
                         _RC0PPS 000E62                           _RC4REG 000EE3  
                         _RE2PPS 000E74                           _RD5PPS 000E6F  
                         _RC7PPS 000E69                           _RD6PPS 000E70  
                         i2l2971 002E                           i2l2973 0032  
                         i2l2965 000A                           i2l2975 0036  
                         i2l2967 001A                           i2l2969 0028  
                      ??_HighISR 0001         __end_of_color_click_init 27D4  
                         _RX4PPS 000E15                           _TX4REG 000EE4  
                  ??_Timer0_init 0001        color_processor_easy@color 0003  
                   vfprintf@cfmt 0057                 __end_of_left_135 25E8  
                      ??___aodiv 0011                        ??___aomod 0011  
                         ___wmul 2B68                        ??___awdiv 000B  
                         clear_0 2B48                           clear_1 2B54  
               ___awdiv@quotient 000D                           isa$std 000001  
                         pad@buf 0013                           dtoa@fp 001C  
                      ??_left_90 001E                 __end_of_right_90 22BC  
                  main@time_path 0164                           fputc@c 0001  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A                        ??_forward 001E  
               __end_of_spin_180 2402                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_sendCharSerial4 0001  
                      ??_reverse 001E                           putch@c 0001  
               __end_of_vfprintf 2878                           stop@mL 001A  
                         stop@mR 001C                ??_initDCmotorsPWM 0003  
                      ??_sprintf 0059                       __accesstop 0060  
        __end_of__initialization 2B5E         __end_of_color_read_Green 2968  
         ?_I2C_2_Master_RepStart 0001                    ___rparam_used 000001  
               ?_color_read_Blue 0005                  _Interrupts_init 2C04  
                 __pcstackCOMRAM 0001                    color_read@rgb 000C  
                  __end_of_fputc 1FF0                    __end_of_fputs 29FC  
                  __end_of_putch 2C46              __end_of_Timer0_init 2BCE  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00FF  
                     __pbssBANK1 01EA                       __pbssBANK2 0200  
         color_processor_hard@cb 0019           color_processor_hard@cg 0017  
         color_processor_hard@cr 0015                _color_writetoaddr 2B8E  
                   _T2CLKCONbits 000FBF               ?_color_writetoaddr 0003  
                        ?___wmul 0001                   main@color_flag 005B  
                 main@color_name 01C2                   main@color_path 00DF  
                    right_135@mL 001A                      right_135@mR 001C  
            ??_color_writetoaddr 0004    __end_of_color_read_Luminosity 2918  
                        _SP4BRGH 000EE6                          _SP4BRGL 000EE5  
                        _PWM6DCH 000FA3                          _PWM7DCH 000FA0  
                        _SSP2ADD 000ED6                          _SSP2BUF 000ED5  
                      ?_left_135 001A                       _color_read 2172  
        __end_of_Interrupts_init 2C1A           color_writetoaddr@value 0003  
               ??_color_read_Red 0007                          _HighISR 0008  
      __end_of_color_writetoaddr 2BAE         color_read_Luminosity@tmp 000A  
             _I2C_2_Master_Start 2C3A                       _initUSART4 2BCE  
             _I2C_2_Master_Write 2C1A                        ?_right_90 001A  
                        __Hparam 0000                          __Lparam 0000  
color_processor_hard@condition_b 000B  color_processor_hard@condition_g 000A  
color_processor_hard@condition_r 0009                color_read_Red@tmp 000A  
                    _Timer0_init 2BAE                        ?_spin_180 001A  
        sendStringSerial4@string 0002                          ___aodiv 19B2  
                        ___aomod 1B3A                          ___awdiv 1FF0  
            ?_I2C_2_Master_Start 0001              ?_I2C_2_Master_Write 0001  
                     _off_period 01F0                        ?_vfprintf 0051  
                   __psmallconst 0E00                          __pcinit 2B42  
                        __ramtop 0E00                          __ptext0 0E14  
                        __ptext1 25E8                          __ptext2 27D4  
                        __ptext3 2826                          __ptext4 1C9E  
                        __ptext5 12EA                          __ptext6 2700  
                        __ptext7 29B8                          __ptext8 1F26  
                        __ptext9 2C44                          _left_90 22BC  
                      _T2CONbits 000FBD                          _forward 2676  
                      _T2HLTbits 000FBE                    ?_motor_action 0022  
                        _reverse 24A4                    _RxBufWriteCnt 00FF  
                        _sprintf 27D4             ??_I2C_2_Master_Start 0002  
                     ??_left_135 001E             ??_I2C_2_Master_Write 0002  
           end_of_initialization 2B5E                __end_of_right_135 24A4  
             setMotorPWM@PWMduty 0018                          fputc@fp 0003  
                        fputs@fp 000C                ?_color_click_init 0001  
   __end_of_color_processor_easy 2172     __end_of_color_processor_hard 17DE  
                     ??_right_90 001E               ??_color_click_init 0005  
              __end_of_vfpfcnvrt 1DFC                       ??_spin_180 001E  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                 vfpfcnvrt@convarg 0047  
                     ??_vfprintf 0057                  _initDCmotorsPWM 29FC  
                      _PORTFbits 000F8E                   ??_motor_action 0028  
                      _TRISCbits 000F83                        _TRISDbits 000F84  
                      _TRISEbits 000F85                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
                    ?_color_read 000C         color_writetoaddr@address 0004  
        ??_I2C_2_Master_RepStart 0002                 ?_Interrupts_init 0001  
                     left_135@mL 001A                       left_135@mR 001C  
                   _EUSART4RXbuf 023C                     _EUSART4TXbuf 0200  
              ?_color_read_Green 0005                      ?_initUSART4 0001  
      sendCharSerial4@charToSend 0001                       main@motorL 01D8  
                     main@motorR 01E1               ??_color_read_Green 0007  
                    vfpfcnvrt@ap 0043                      vfpfcnvrt@cp 004F  
                    vfpfcnvrt@fp 003F                   __end_of___wmul 2B8E  
            start_initialization 2B42                      __end_of_abs 2AC0  
                    __end_of_pad 277A                    _TxBufWriteCnt 01F6  
            color_read_Green@tmp 000A          __end_of_initDCmotorsPWM 2A3E  
                    vfprintf@fmt 0053                         ??___wmul 0005  
           _color_processor_easy 20B4             _color_processor_hard 1568  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
               ___aodiv@dividend 0001               main@RGB_calibrated 01C8  
                       ?_HighISR 0001          color_processor_easy@rgb 0001  
        color_processor_hard@rgb 0001            color_processor_easy@a 0007  
          color_processor_easy@b 0009            color_processor_easy@c 0005  
          color_processor_hard@b 0013            color_processor_hard@g 0011  
          color_processor_hard@i 001B            color_processor_hard@r 000F  
                      _dtoa$2395 002E             __end_of_motor_action 1F26  
                   ?_Timer0_init 0001                        __pintcode 0008  
                       ?___aodiv 0001                         ?___aomod 0001  
                       ?___awdiv 0007                 ___aodiv@quotient 0013  
                     right_135@i 0020                       right_90@mL 001A  
                     right_90@mR 001C             I2C_2_Master_Read@ack 0003  
           I2C_2_Master_Read@tmp 0004                         ?_left_90 001A  
                    __smallconst 0E00                         ?_forward 001A  
              _I2C_2_Master_Idle 2B1A            ?_color_processor_easy 0001  
          ?_color_processor_hard 0001                 main@RGB_recorded 01D0  
              _I2C_2_Master_Init 2AF0                _I2C_2_Master_Read 2A3E  
              _I2C_2_Master_Stop 2C30                     _RxBufReadCnt 01F7  
                       ?_reverse 001A               ?_I2C_2_Master_Idle 0001  
             ?_I2C_2_Master_Init 0001               ?_I2C_2_Master_Read 0001  
                  ??_setMotorPWM 0011            _color_read_Luminosity 28C8  
             ?_I2C_2_Master_Stop 0001         initDCmotorsPWM@PWMperiod 0001  
                       ?_sprintf 0060                _sendStringSerial4 2AC0  
            ??_I2C_2_Master_Idle 0001              ??_I2C_2_Master_Init 0001  
            ??_I2C_2_Master_Read 0002                   ___wmul@product 0005  
            ??_I2C_2_Master_Stop 0002                         _LATCbits 000F7B  
                       _LATDbits 000F7C                         _LATEbits 000F7D  
                       _LATFbits 000F7E                        _on_period 01F2  
                       _LATGbits 000F7F                         _LATHbits 000F80  
                      _right_135 2402                         _IPR0bits 000E1F  
                       _IPR2bits 000E21                         _PIE0bits 000E29  
                       _PIE2bits 000E2B               ?_sendStringSerial4 0002  
                     spin_180@mL 001A                       spin_180@mR 001C  
                       i2u182_40 001A                         i2u182_41 0016  
                       i2u183_40 0028                         i2u183_41 0024  
                       _PIR0bits 000E33                         _PIR2bits 000E35  
                       _PIR4bits 000E37                 ?_initDCmotorsPWM 0001  
              ??_sendCharSerial4 0001                         _SSP2CON2 000EDA  
            ??_sendStringSerial4 0004                         _SSP2STAT 000ED8  
                      _vfpfcnvrt 1C9E        __end_of_I2C_2_Master_Idle 2B42  
      __end_of_I2C_2_Master_Init 2B1A        __end_of_I2C_2_Master_Read 2A80  
              ___wmul@multiplier 0001        __end_of_I2C_2_Master_Stop 2C3A  
                   setMotorPWM@m 000F      I2C_2_Master_Write@data_byte 0002  
                      left_135@i 0020                        left_90@mL 001A  
                      left_90@mR 001C             main@color_calibrated 0182  
              ??_color_read_Blue 0007                     _TxBufReadCnt 01F5  
                   ??_color_read 000E        __end_of_sendStringSerial4 2AF0  
  __end_of_I2C_2_Master_RepStart 2C30               color_read_Blue@tmp 000A  
            __end_of_setMotorPWM 19B2                       ?_right_135 001A  
                   ??_initUSART4 0001                         __Hrparam 0000  
                     vfprintf@ap 0055                         __Lrparam 0000  
                     vfprintf@fp 0051                        forward@mL 001A  
                      forward@mR 001C                       ?_vfpfcnvrt 003F  
             __end_of_color_read 2218                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELDbits 000EA7  
         ??_color_processor_easy 0003           ??_color_processor_hard 0005  
                     _ANSELFbits 000EB4                       sprintf@fmt 0062  
                     _T0CON0bits 000FD5                       _T0CON1bits 000FD6  
         ?_color_read_Luminosity 0005               __end_of_initUSART4 2BEC  
                       __ptext10 2A80                         __ptext11 1B3A  
                       __ptext20 22BC                         __ptext12 19B2  
                       __ptext21 2546                         __ptext13 2AC0  
                       __ptext30 28C8                         __ptext22 2BCE  
                       __ptext14 2BEC                         __ptext31 2918  
                       __ptext23 29FC                         __ptext15 1DFC  
                       __ptext40 2C30                         __ptext32 2968  
                       __ptext24 2676                         __ptext16 2360  
                       __ptext41 2C3A                         __ptext33 2C26  
                       __ptext25 17DE                         __ptext17 2218  
                       __ptext42 2B1A                         __ptext34 2A3E  
                       __ptext26 2B68                         __ptext18 2402  
                       __ptext43 2AF0                         __ptext35 1568  
                       __ptext27 1FF0                         __ptext19 24A4  
                       __ptext44 2BAE                         __ptext36 20B4  
                       __ptext28 2172                         __ptext45 2C04  
                       __ptext37 277A                         __ptext29 2878  
                       __ptext38 2B8E                         __ptext39 2C1A  
                      right_90@i 0020                         _left_135 2546  
                   _SSP2CON1bits 000ED9                     _SSP2CON2bits 000EDA  
                       _right_90 2218                        reverse@mL 001A  
                      reverse@mR 001C                        spin_180@i 0020  
                       _spin_180 2360                         isa$xinst 000000  
                     _RC4STAbits 000EE7                         int$flags 005F  
                  motor_action@l 0024                    motor_action@r 0026  
                       _vfprintf 2826                         left_90@i 0020  
               ___aomod@dividend 0001                  main@time_return 005D  
                     _INTCONbits 000FF2                     _motor_action 1DFC  
                       forward@i 001E                      _setMotorPWM 17DE  
                    _PWM6CONbits 000FA4                      _PWM7CONbits 000FA1  
                       intlevel2 0000                        sprintf@ap 006E  
                    ??_right_135 001E                         reverse@i 0020  
                ___aomod@divisor 0009                      ??_vfpfcnvrt 0045  
                ___aomod@counter 0011                 _color_click_init 277A  
                       sprintf@f 0070                         sprintf@s 0060  
                     _SSP2DATPPS 000E1D                       _SSP2CLKPPS 000E1C  
                     _TX4STAbits 000EE8                     ___aodiv@sign 0012  
                _sendCharSerial4 2BEC                     ___aomod@sign 0012  
