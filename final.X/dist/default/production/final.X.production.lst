

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 00:28:44 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.35
    54                           ; Generated 05/05/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _TX4REG	set	3812
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _LATGbits	set	3967
    92   000000                     _LATEbits	set	3965
    93   000000                     _TRISGbits	set	3975
    94   000000                     _TRISEbits	set	3973
    95   000000                     _LATFbits	set	3966
    96   000000                     _TRISFbits	set	3974
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _LATDbits	set	3964
   105   000000                     _LATHbits	set	3968
   106   000000                     _TRISDbits	set	3972
   107   000000                     _TRISHbits	set	3976
   108   000000                     _PORTFbits	set	3982
   109   000000                     _TRISCbits	set	3971
   110   000000                     _RC4REG	set	3811
   111   000000                     _SP4BRGL	set	3813
   112   000000                     _TX4STAbits	set	3816
   113   000000                     _BAUD4CONbits	set	3817
   114   000000                     _LATCbits	set	3963
   115   000000                     _SSP2CON2	set	3802
   116   000000                     _SSP2STAT	set	3800
   117   000000                     _ANSELFbits	set	3764
   118   000000                     _SSP2BUF	set	3797
   119   000000                     _PIE0bits	set	3625
   120   000000                     _RC7PPS	set	3689
   121   000000                     _RD5PPS	set	3695
   122   000000                     _RE2PPS	set	3700
   123   000000                     _RD6PPS	set	3696
   124   000000                     _PWM7DCH	set	4000
   125   000000                     _PWM6DCH	set	4003
   126   000000                     _T2PR	set	4028
   127   000000                     _T2CONbits	set	4029
   128   000000                     _TMR0L	set	4051
   129   000000                     _TMR0H	set	4052
   130   000000                     _T0CON0bits	set	4053
   131   000000                     _T0CON1bits	set	4054
   132   000000                     _INTCONbits	set	4082
   133   000000                     _T2CLKCONbits	set	4031
   134   000000                     _T2HLTbits	set	4030
   135   000000                     _PWM6CONbits	set	4004
   136   000000                     _PWM7CONbits	set	4001
   137   000000                     _PIR0bits	set	3635
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140                           
   141                           	psect	smallconst
   142   000E00                     __psmallconst:
   143                           	callstack 0
   144   000E00  00                 	db	0
   145   000E01                     STR_1:
   146   000E01  25                 	db	37
   147   000E02  64                 	db	100	;'d'
   148   000E03  20                 	db	32
   149   000E04  25                 	db	37
   150   000E05  64                 	db	100	;'d'
   151   000E06  20                 	db	32
   152   000E07  25                 	db	37
   153   000E08  64                 	db	100	;'d'
   154   000E09  20                 	db	32
   155   000E0A  25                 	db	37
   156   000E0B  64                 	db	100	;'d'
   157   000E0C  20                 	db	32
   158   000E0D  0D                 	db	13
   159   000E0E  0A                 	db	10
   160   000E0F  00                 	db	0
   161   000E10  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   001CE4                     __pcinit:
   167                           	callstack 0
   168   001CE4                     start_initialization:
   169                           	callstack 0
   170   001CE4                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to BANK1 (80 bytes)
   174   001CE4  EE01  F000         	lfsr	0,__pbssBANK1
   175   001CE8  0E50               	movlw	80
   176   001CEA                     clear_0:
   177   001CEA  6AEE               	clrf	postinc0,c
   178   001CEC  06E8               	decf	wreg,f,c
   179   001CEE  E1FD               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK0 (43 bytes)
   182   001CF0  EE00  F0C7         	lfsr	0,__pbssBANK0
   183   001CF4  0E2B               	movlw	43
   184   001CF6                     clear_1:
   185   001CF6  6AEE               	clrf	postinc0,c
   186   001CF8  06E8               	decf	wreg,f,c
   187   001CFA  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to COMRAM (2 bytes)
   190   001CFC  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   191   001CFE  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   192   001D00                     end_of_initialization:
   193                           	callstack 0
   194   001D00                     __end_of__initialization:
   195                           	callstack 0
   196   001D00  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197   001D02  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198   001D04  0E00               	movlw	low (__Lsmallconst shr (0+16))
   199   001D06  6EF8               	movwf	tblptru,c
   200   001D08  0E0E               	movlw	high __Lsmallconst
   201   001D0A  6EF7               	movwf	tblptrh,c
   202   001D0C  0100               	movlb	0
   203   001D0E  EF47  F008         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMRAM
   206   00005B                     __pbssCOMRAM:
   207                           	callstack 0
   208   00005B                     _RxBufReadCnt:
   209                           	callstack 0
   210   00005B                     	ds	1
   211   00005C                     _RxBufWriteCnt:
   212                           	callstack 0
   213   00005C                     	ds	1
   214                           
   215                           	psect	bssBANK0
   216   0000C7                     __pbssBANK0:
   217                           	callstack 0
   218   0000C7                     _width:
   219                           	callstack 0
   220   0000C7                     	ds	2
   221   0000C9                     _prec:
   222                           	callstack 0
   223   0000C9                     	ds	2
   224   0000CB                     _off_period:
   225                           	callstack 0
   226   0000CB                     	ds	2
   227   0000CD                     _on_period:
   228                           	callstack 0
   229   0000CD                     	ds	2
   230   0000CF                     _flags:
   231                           	callstack 0
   232   0000CF                     	ds	1
   233   0000D0                     _TxBufReadCnt:
   234                           	callstack 0
   235   0000D0                     	ds	1
   236   0000D1                     _TxBufWriteCnt:
   237                           	callstack 0
   238   0000D1                     	ds	1
   239   0000D2                     _dbuf:
   240                           	callstack 0
   241   0000D2                     	ds	32
   242                           
   243                           	psect	bssBANK1
   244   000100                     __pbssBANK1:
   245                           	callstack 0
   246   000100                     _EUSART4TXbuf:
   247                           	callstack 0
   248   000100                     	ds	60
   249   00013C                     _EUSART4RXbuf:
   250                           	callstack 0
   251   00013C                     	ds	20
   252                           
   253                           	psect	cstackBANK0
   254   000060                     __pcstackBANK0:
   255                           	callstack 0
   256   000060                     ?_sprintf:
   257                           	callstack 0
   258   000060                     sprintf@s:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x0
   262   000060                     	ds	2
   263   000062                     sprintf@fmt:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x2
   267   000062                     	ds	10
   268   00006C                     sprintf@ap:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0xC
   272   00006C                     	ds	2
   273   00006E                     sprintf@f:
   274                           	callstack 0
   275                           
   276                           ; 11 bytes @ 0xE
   277   00006E                     	ds	11
   278   000079                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x19
   281   000079                     	ds	2
   282   00007B                     main@readout:
   283                           	callstack 0
   284                           
   285                           ; 50 bytes @ 0x1B
   286   00007B                     	ds	50
   287   0000AD                     main@color_flag:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x4D
   291   0000AD                     	ds	2
   292   0000AF                     main@color_name:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x4F
   296   0000AF                     	ds	2
   297   0000B1                     main@n:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x51
   301   0000B1                     	ds	2
   302   0000B3                     main@home:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x53
   306   0000B3                     	ds	2
   307   0000B5                     main@j:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x55
   311   0000B5                     	ds	2
   312   0000B7                     main@RGB_recorded:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0x57
   316   0000B7                     	ds	8
   317   0000BF                     main@RGB_calibrated:
   318                           	callstack 0
   319                           
   320                           ; 8 bytes @ 0x5F
   321   0000BF                     	ds	8
   322                           
   323                           	psect	cstackCOMRAM
   324   000001                     __pcstackCOMRAM:
   325                           	callstack 0
   326   000001                     write16bitTMR0val@tmp:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x0
   330   000001                     	ds	2
   331   000003                     ??_I2C_2_Master_Idle:
   332   000003                     ?_color_processor_easy:
   333                           	callstack 0
   334   000003                     ?___aodiv:
   335                           	callstack 0
   336   000003                     ?___aomod:
   337                           	callstack 0
   338   000003                     sendCharSerial4@charToSend:
   339                           	callstack 0
   340   000003                     color_processor_easy@rgb:
   341                           	callstack 0
   342   000003                     initDCmotorsPWM@PWMperiod:
   343                           	callstack 0
   344   000003                     fputc@c:
   345                           	callstack 0
   346   000003                     ___aodiv@dividend:
   347                           	callstack 0
   348   000003                     ___aomod@dividend:
   349                           	callstack 0
   350                           
   351                           ; 8 bytes @ 0x2
   352   000003                     	ds	1
   353   000004                     ??_I2C_2_Master_Read:
   354   000004                     I2C_2_Master_Write@data_byte:
   355                           	callstack 0
   356   000004                     sendStringSerial4@string:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x3
   360   000004                     	ds	1
   361   000005                     color_writetoaddr@value:
   362                           	callstack 0
   363   000005                     I2C_2_Master_Read@ack:
   364                           	callstack 0
   365   000005                     color_processor_easy@color:
   366                           	callstack 0
   367   000005                     fputc@fp:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x4
   371   000005                     	ds	1
   372   000006                     color_writetoaddr@address:
   373                           	callstack 0
   374   000006                     I2C_2_Master_Read@tmp:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x5
   378   000006                     	ds	1
   379   000007                     ??_fputc:
   380   000007                     ??_color_click_init:
   381   000007                     ?_color_read_Luminosity:
   382                           	callstack 0
   383   000007                     ?_color_read_Red:
   384                           	callstack 0
   385   000007                     ?_color_read_Green:
   386                           	callstack 0
   387   000007                     ?_color_read_Blue:
   388                           	callstack 0
   389   000007                     color_processor_easy@c:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x6
   393   000007                     	ds	2
   394   000009                     ??_color_read_Luminosity:
   395   000009                     ??_color_read_Red:
   396   000009                     ??_color_read_Green:
   397   000009                     ??_color_read_Blue:
   398   000009                     color_processor_easy@a:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x8
   402   000009                     	ds	2
   403   00000B                     color_processor_easy@b:
   404                           	callstack 0
   405   00000B                     ___aodiv@divisor:
   406                           	callstack 0
   407   00000B                     ___aomod@divisor:
   408                           	callstack 0
   409                           
   410                           ; 8 bytes @ 0xA
   411   00000B                     	ds	1
   412   00000C                     color_read_Luminosity@tmp:
   413                           	callstack 0
   414   00000C                     color_read_Red@tmp:
   415                           	callstack 0
   416   00000C                     color_read_Green@tmp:
   417                           	callstack 0
   418   00000C                     color_read_Blue@tmp:
   419                           	callstack 0
   420   00000C                     fputs@s:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xB
   424   00000C                     	ds	2
   425   00000E                     color_read@rgb:
   426                           	callstack 0
   427   00000E                     fputs@fp:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xD
   431   00000E                     	ds	2
   432   000010                     ??_color_read:
   433   000010                     fputs@c:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0xF
   437   000010                     	ds	1
   438   000011                     fputs@i:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x10
   442   000011                     	ds	2
   443   000013                     ___aodiv@counter:
   444                           	callstack 0
   445   000013                     ___aomod@counter:
   446                           	callstack 0
   447   000013                     pad@fp:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x12
   451   000013                     	ds	1
   452   000014                     ___aodiv@sign:
   453                           	callstack 0
   454   000014                     ___aomod@sign:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x13
   458   000014                     	ds	1
   459   000015                     ?_abs:
   460                           	callstack 0
   461   000015                     pad@buf:
   462                           	callstack 0
   463   000015                     abs@a:
   464                           	callstack 0
   465   000015                     ___aodiv@quotient:
   466                           	callstack 0
   467                           
   468                           ; 8 bytes @ 0x14
   469   000015                     	ds	2
   470   000017                     ??_abs:
   471   000017                     pad@p:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x16
   475   000017                     	ds	2
   476   000019                     ??_pad:
   477                           
   478                           ; 1 bytes @ 0x18
   479   000019                     	ds	1
   480   00001A                     pad@i:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x19
   484   00001A                     	ds	2
   485   00001C                     pad@w:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x1B
   489   00001C                     	ds	2
   490   00001E                     dtoa@fp:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x1D
   494   00001E                     	ds	2
   495   000020                     dtoa@d:
   496                           	callstack 0
   497                           
   498                           ; 8 bytes @ 0x1F
   499   000020                     	ds	8
   500   000028                     ??_dtoa:
   501                           
   502                           ; 1 bytes @ 0x27
   503   000028                     	ds	8
   504   000030                     _dtoa$2151:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x2F
   508   000030                     	ds	2
   509   000032                     dtoa@p:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x31
   513   000032                     	ds	2
   514   000034                     dtoa@w:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x33
   518   000034                     	ds	2
   519   000036                     dtoa@n:
   520                           	callstack 0
   521                           
   522                           ; 8 bytes @ 0x35
   523   000036                     	ds	8
   524   00003E                     dtoa@i:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x3D
   528   00003E                     	ds	2
   529   000040                     dtoa@s:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x3F
   533   000040                     	ds	1
   534   000041                     vfpfcnvrt@fp:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x40
   538   000041                     	ds	2
   539   000043                     vfpfcnvrt@fmt:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x42
   543   000043                     	ds	2
   544   000045                     vfpfcnvrt@ap:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x44
   548   000045                     	ds	2
   549   000047                     ??_vfpfcnvrt:
   550                           
   551                           ; 1 bytes @ 0x46
   552   000047                     	ds	2
   553   000049                     vfpfcnvrt@convarg:
   554                           	callstack 0
   555                           
   556                           ; 8 bytes @ 0x48
   557   000049                     	ds	8
   558   000051                     vfpfcnvrt@cp:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x50
   562   000051                     	ds	2
   563   000053                     ?_vfprintf:
   564                           	callstack 0
   565   000053                     vfprintf@fp:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x52
   569   000053                     	ds	2
   570   000055                     vfprintf@fmt:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x54
   574   000055                     	ds	2
   575   000057                     vfprintf@ap:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x56
   579   000057                     	ds	2
   580   000059                     vfprintf@cfmt:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x58
   584   000059                     	ds	2
   585   00005B                     
   586                           ; 1 bytes @ 0x5A
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 20 in file "../main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  j               2   85[BANK0 ] int 
   597 ;;  n               2   81[BANK0 ] unsigned int 
   598 ;;  i_storage       2    0        int 
   599 ;;  time_storage  100    0        unsigned int [50]
   600 ;;  color_storag  100    0        unsigned int [50]
   601 ;;  readout        50   27[BANK0 ] unsigned char [50]
   602 ;;  color_calibr   48    0        unsigned int [24]
   603 ;;  RGB_calibrat    8   95[BANK0 ] struct RGB_val
   604 ;;  RGB_recorded    8   87[BANK0 ] struct RGB_val
   605 ;;  home            2   83[BANK0 ] unsigned int 
   606 ;;  color_name      2   79[BANK0 ] unsigned int 
   607 ;;  color_flag      2   77[BANK0 ] unsigned int 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   618 ;;      Locals:         0      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   620 ;;      Totals:         0      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;Total ram usage:       78 bytes
   622 ;; Hardware stack levels required when called: 10
   623 ;; This function calls:
   624 ;;		_I2C_2_Master_Init
   625 ;;		_Interrupts_init
   626 ;;		_Timer0_init
   627 ;;		_color_click_init
   628 ;;		_color_processor_easy
   629 ;;		_color_read
   630 ;;		_initDCmotorsPWM
   631 ;;		_initUSART4
   632 ;;		_sendStringSerial4
   633 ;;		_sprintf
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640   00108E                     __ptext0:
   641                           	callstack 0
   642   00108E                     _main:
   643                           	callstack 21
   644   00108E                     
   645                           ;../main.c: 22:     LATDbits.LATD7=0;
   646   00108E  9E7C               	bcf	124,7,c	;volatile
   647                           
   648                           ;../main.c: 23:     LATHbits.LATH3=0;
   649   001090  9680               	bcf	128,3,c	;volatile
   650                           
   651                           ;../main.c: 24:     TRISDbits.TRISD7=0;
   652   001092  9E84               	bcf	132,7,c	;volatile
   653                           
   654                           ;../main.c: 25:     TRISHbits.TRISH3=0;
   655   001094  9688               	bcf	136,3,c	;volatile
   656                           
   657                           ;../main.c: 28:     TRISFbits.TRISF2=1;
   658   001096  8486               	bsf	134,2,c	;volatile
   659                           
   660                           ;../main.c: 29:     ANSELFbits.ANSELF2=0;
   661   001098  010E               	movlb	14	; () banked
   662   00109A  95B4               	bcf	180,2,b	;volatile
   663                           
   664                           ;../main.c: 30:     TRISFbits.TRISF3=1;
   665   00109C  8686               	bsf	134,3,c	;volatile
   666                           
   667                           ;../main.c: 31:     ANSELFbits.ANSELF3=0;
   668   00109E  97B4               	bcf	180,3,b	;volatile
   669   0010A0                     
   670                           ; BSR set to: 14
   671                           ;../main.c: 34:     color_click_init();
   672   0010A0  ECB0  F00D         	call	_color_click_init	;wreg free
   673   0010A4                     
   674                           ;../main.c: 35:     initDCmotorsPWM(20);
   675   0010A4  0E00               	movlw	0
   676   0010A6  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   677   0010A8  0E14               	movlw	20
   678   0010AA  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
   679   0010AC  ECD4  F00D         	call	_initDCmotorsPWM	;wreg free
   680   0010B0                     
   681                           ;../main.c: 36:     Interrupts_init();
   682   0010B0  ECF3  F00E         	call	_Interrupts_init	;wreg free
   683   0010B4                     
   684                           ;../main.c: 37:     Timer0_init();
   685   0010B4  ECC2  F00E         	call	_Timer0_init	;wreg free
   686   0010B8                     
   687                           ;../main.c: 38:     I2C_2_Master_Init();
   688   0010B8  EC89  F00E         	call	_I2C_2_Master_Init	;wreg free
   689   0010BC                     
   690                           ;../main.c: 39:     initUSART4();
   691   0010BC  ECD2  F00E         	call	_initUSART4	;wreg free
   692   0010C0                     
   693                           ;../main.c: 43:     unsigned int color_flag;;../main.c: 44:     unsigned int color_name;
      +                          ;../main.c: 45:     unsigned int color_storage[50];;../main.c: 46:     unsigned int time
      +                          _storage[50];;../main.c: 47:     unsigned int home = 0;
   694   0010C0  0E00               	movlw	0
   695   0010C2  0100               	movlb	0	; () banked
   696   0010C4  6FB4               	movwf	(main@home+1)& (0+255),b
   697   0010C6  0E00               	movlw	0
   698   0010C8  6FB3               	movwf	main@home& (0+255),b
   699   0010CA                     
   700                           ; BSR set to: 0
   701                           ;../main.c: 48:     struct RGB_val RGB_calibrated;;../main.c: 49:     struct RGB_val RGB
      +                          _recorded;;../main.c: 52:     unsigned int color_calibrated[24];;../main.c: 67:     colo
      +                          r_read(&RGB_calibrated);
   702   0010CA  0EBF               	movlw	low main@RGB_calibrated
   703   0010CC  6E0E               	movwf	color_read@rgb^0,c
   704   0010CE  0E00               	movlw	high main@RGB_calibrated
   705   0010D0  6E0F               	movwf	(color_read@rgb+1)^0,c
   706   0010D2  EC30  F00C         	call	_color_read	;wreg free
   707   0010D6                     
   708                           ;../main.c: 68:     char readout[50];;../main.c: 69:     sprintf(readout,"%d %d %d %d \r
      +                          \n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrated.B);
   709   0010D6  0E7B               	movlw	low main@readout
   710   0010D8  0100               	movlb	0	; () banked
   711   0010DA  6F60               	movwf	sprintf@s& (0+255),b
   712   0010DC  0E00               	movlw	high main@readout
   713   0010DE  6F61               	movwf	(sprintf@s+1)& (0+255),b
   714   0010E0  0E01               	movlw	low STR_1
   715   0010E2  6F62               	movwf	sprintf@fmt& (0+255),b
   716   0010E4  0E0E               	movlw	high STR_1
   717   0010E6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   718   0010E8  C0BF  F064         	movff	main@RGB_calibrated,?_sprintf+4
   719   0010EC  C0C0  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
   720   0010F0  C0C1  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
   721   0010F4  C0C2  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
   722   0010F8  C0C3  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
   723   0010FC  C0C4  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
   724   001100  C0C5  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
   725   001104  C0C6  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
   726   001108  ECC0  F00C         	call	_sprintf	;wreg free
   727   00110C                     
   728                           ;../main.c: 70:     sendStringSerial4(readout);
   729   00110C  0E7B               	movlw	low main@readout
   730   00110E  6E04               	movwf	sendStringSerial4@string^0,c
   731   001110  0E00               	movlw	high main@readout
   732   001112  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   733   001114  EC5A  F00E         	call	_sendStringSerial4	;wreg free
   734   001118                     l2177:
   735   001118  0E01               	movlw	1
   736   00111A  A68E               	btfss	142,3,c	;volatile
   737   00111C  0E00               	movlw	0
   738   00111E  A48E               	btfss	142,2,c	;volatile
   739   001120  0E00               	movlw	0
   740   001122  B0E8               	btfsc	wreg,0,c
   741   001124  EF96  F008         	goto	u1321
   742   001128  EF9B  F008         	goto	u1320
   743   00112C                     u1321:
   744   00112C  0100               	movlb	0	; () banked
   745   00112E  6B79               	clrf	??_main& (0+255),b
   746   001130  2B79               	incf	??_main& (0+255),f,b
   747   001132  EF9D  F008         	goto	u1328
   748   001136                     u1320:
   749   001136  0100               	movlb	0	; () banked
   750   001138  6B79               	clrf	??_main& (0+255),b
   751   00113A                     u1328:
   752   00113A  5179               	movf	??_main& (0+255),w,b
   753   00113C  A4D8               	btfss	status,2,c
   754   00113E  EFA3  F008         	goto	u1331
   755   001142  EFA5  F008         	goto	u1330
   756   001146                     u1331:
   757   001146  EF8C  F008         	goto	l2177
   758   00114A                     u1330:
   759   00114A                     
   760                           ; BSR set to: 0
   761                           ;../main.c: 82:         if (!PORTFbits.RF2){LATDbits.LATD7 = !LATDbits.LATD7;}
   762   00114A  B48E               	btfsc	142,2,c	;volatile
   763   00114C  EFAA  F008         	goto	u1341
   764   001150  EFAC  F008         	goto	u1340
   765   001154                     u1341:
   766   001154  EFC0  F008         	goto	l172
   767   001158                     u1340:
   768   001158                     
   769                           ; BSR set to: 0
   770   001158  AE7C               	btfss	124,7,c	;volatile
   771   00115A  EFB1  F008         	goto	u1351
   772   00115E  EFB5  F008         	goto	u1350
   773   001162                     u1351:
   774   001162  6B79               	clrf	??_main& (0+255),b
   775   001164  2B79               	incf	??_main& (0+255),f,b
   776   001166  EFB7  F008         	goto	u1368
   777   00116A                     u1350:
   778   00116A  0100               	movlb	0	; () banked
   779   00116C  6B79               	clrf	??_main& (0+255),b
   780   00116E                     u1368:
   781   00116E  3379               	rrcf	??_main& (0+255),f,b
   782   001170  3379               	rrcf	??_main& (0+255),f,b
   783   001172  507C               	movf	124,w,c	;volatile
   784   001174  1979               	xorwf	??_main& (0+255),w,b
   785   001176  0B7F               	andlw	-129
   786   001178  1979               	xorwf	??_main& (0+255),w,b
   787   00117A  6E7C               	movwf	124,c	;volatile
   788   00117C  EF2A  F009         	goto	l2195
   789   001180                     l172:
   790                           
   791                           ; BSR set to: 0
   792   001180  B68E               	btfsc	142,3,c	;volatile
   793   001182  EFC5  F008         	goto	u1371
   794   001186  EFC7  F008         	goto	u1370
   795   00118A                     u1371:
   796   00118A  EF2A  F009         	goto	l2195
   797   00118E                     u1370:
   798   00118E                     
   799                           ; BSR set to: 0
   800   00118E  A680               	btfss	128,3,c	;volatile
   801   001190  EFCC  F008         	goto	u1381
   802   001194  EFD0  F008         	goto	u1380
   803   001198                     u1381:
   804   001198  6B79               	clrf	??_main& (0+255),b
   805   00119A  2B79               	incf	??_main& (0+255),f,b
   806   00119C  EFD2  F008         	goto	u1398
   807   0011A0                     u1380:
   808   0011A0  0100               	movlb	0	; () banked
   809   0011A2  6B79               	clrf	??_main& (0+255),b
   810   0011A4                     u1398:
   811   0011A4  4779               	rlncf	??_main& (0+255),f,b
   812   0011A6  4779               	rlncf	??_main& (0+255),f,b
   813   0011A8  4779               	rlncf	??_main& (0+255),f,b
   814   0011AA  5080               	movf	128,w,c	;volatile
   815   0011AC  1979               	xorwf	??_main& (0+255),w,b
   816   0011AE  0BF7               	andlw	-9
   817   0011B0  1979               	xorwf	??_main& (0+255),w,b
   818   0011B2  6E80               	movwf	128,c	;volatile
   819   0011B4  EF2A  F009         	goto	l2195
   820   0011B8                     l176:
   821                           
   822                           ; BSR set to: 0
   823                           ;../main.c: 88:             if (LATDbits.LATD7){
   824   0011B8  AE7C               	btfss	124,7,c	;volatile
   825   0011BA  EFE1  F008         	goto	u1401
   826   0011BE  EFE3  F008         	goto	u1400
   827   0011C2                     u1401:
   828   0011C2  EF11  F009         	goto	l177
   829   0011C6                     u1400:
   830   0011C6                     
   831                           ; BSR set to: 0
   832                           ;../main.c: 89:                 if (color_flag){
   833   0011C6  51AD               	movf	main@color_flag& (0+255),w,b
   834   0011C8  11AE               	iorwf	(main@color_flag+1)& (0+255),w,b
   835   0011CA  B4D8               	btfsc	status,2,c
   836   0011CC  EFEA  F008         	goto	u1411
   837   0011D0  EFEC  F008         	goto	u1410
   838   0011D4                     u1411:
   839   0011D4  EF1E  F009         	goto	l2193
   840   0011D8                     u1410:
   841   0011D8                     
   842                           ; BSR set to: 0
   843                           ;../main.c: 90:                     color_read(&RGB_recorded);
   844   0011D8  0EB7               	movlw	low main@RGB_recorded
   845   0011DA  6E0E               	movwf	color_read@rgb^0,c
   846   0011DC  0E00               	movlw	high main@RGB_recorded
   847   0011DE  6E0F               	movwf	(color_read@rgb+1)^0,c
   848   0011E0  EC30  F00C         	call	_color_read	;wreg free
   849                           
   850                           ;../main.c: 91:                     color_name = color_processor_easy(&RGB_recorded);
   851   0011E4  0EB7               	movlw	low main@RGB_recorded
   852   0011E6  6E03               	movwf	color_processor_easy@rgb^0,c
   853   0011E8  0E00               	movlw	high main@RGB_recorded
   854   0011EA  6E04               	movwf	(color_processor_easy@rgb+1)^0,c
   855   0011EC  ECD1  F00B         	call	_color_processor_easy	;wreg free
   856   0011F0  C003  F0AF         	movff	?_color_processor_easy,main@color_name
   857   0011F4  C004  F0B0         	movff	?_color_processor_easy+1,main@color_name+1
   858   0011F8                     
   859                           ;../main.c: 95:                     if (color_name != 8) {
   860   0011F8  0E08               	movlw	8
   861   0011FA  0100               	movlb	0	; () banked
   862   0011FC  19AF               	xorwf	main@color_name& (0+255),w,b
   863   0011FE  11B0               	iorwf	(main@color_name+1)& (0+255),w,b
   864   001200  B4D8               	btfsc	status,2,c
   865   001202  EF05  F009         	goto	u1421
   866   001206  EF07  F009         	goto	u1420
   867   00120A                     u1421:
   868   00120A  EF1E  F009         	goto	l2193
   869   00120E                     u1420:
   870   00120E                     
   871                           ; BSR set to: 0
   872                           ;../main.c: 96:                         color_flag = 0;
   873   00120E  0E00               	movlw	0
   874   001210  6FAE               	movwf	(main@color_flag+1)& (0+255),b
   875   001212  0E00               	movlw	0
   876   001214  6FAD               	movwf	main@color_flag& (0+255),b
   877                           
   878                           ;../main.c: 97:                         home = 1;
   879   001216  0E00               	movlw	0
   880   001218  6FB4               	movwf	(main@home+1)& (0+255),b
   881   00121A  0E01               	movlw	1
   882   00121C  6FB3               	movwf	main@home& (0+255),b
   883   00121E  EF1E  F009         	goto	l2193
   884   001222                     l177:
   885                           
   886                           ; BSR set to: 0
   887   001222  A680               	btfss	128,3,c	;volatile
   888   001224  EF16  F009         	goto	u1431
   889   001228  EF18  F009         	goto	u1430
   890   00122C                     u1431:
   891   00122C  EF1E  F009         	goto	l2193
   892   001230                     u1430:
   893   001230                     
   894                           ; BSR set to: 0
   895                           ;../main.c: 103:                 color_read(&RGB_recorded);
   896   001230  0EB7               	movlw	low main@RGB_recorded
   897   001232  6E0E               	movwf	color_read@rgb^0,c
   898   001234  0E00               	movlw	high main@RGB_recorded
   899   001236  6E0F               	movwf	(color_read@rgb+1)^0,c
   900   001238  EC30  F00C         	call	_color_read	;wreg free
   901   00123C                     l2193:
   902                           
   903                           ;../main.c: 105:             _delay((unsigned long)((200)*(64000000/4000.0)));
   904   00123C  0E11               	movlw	17
   905   00123E  0100               	movlb	0	; () banked
   906   001240  6F7A               	movwf	(??_main+1)& (0+255),b
   907   001242  0E3C               	movlw	60
   908   001244  6F79               	movwf	??_main& (0+255),b
   909   001246  0ECB               	movlw	203
   910   001248                     u1467:
   911   001248  2EE8               	decfsz	wreg,f,c
   912   00124A  D7FE               	bra	u1467
   913   00124C  2F79               	decfsz	??_main& (0+255),f,b
   914   00124E  D7FC               	bra	u1467
   915   001250  2F7A               	decfsz	(??_main+1)& (0+255),f,b
   916   001252  D7FA               	bra	u1467
   917   001254                     l2195:
   918                           
   919                           ;../main.c: 87:         while (!home) {
   920   001254  0100               	movlb	0	; () banked
   921   001256  51B3               	movf	main@home& (0+255),w,b
   922   001258  11B4               	iorwf	(main@home+1)& (0+255),w,b
   923   00125A  B4D8               	btfsc	status,2,c
   924   00125C  EF32  F009         	goto	u1441
   925   001260  EF34  F009         	goto	u1440
   926   001264                     u1441:
   927   001264  EFDC  F008         	goto	l176
   928   001268                     u1440:
   929   001268                     
   930                           ; BSR set to: 0
   931                           ;../main.c: 108:         int j;;../main.c: 109:         size_t n = sizeof(color_storage)
      +                          /sizeof(color_storage[0]);
   932   001268  0E00               	movlw	0
   933   00126A  6FB2               	movwf	(main@n+1)& (0+255),b
   934   00126C  0E32               	movlw	50
   935   00126E  6FB1               	movwf	main@n& (0+255),b
   936                           
   937                           ;../main.c: 110:         for (j=0;j<n;j++){
   938   001270  0E00               	movlw	0
   939   001272  6FB6               	movwf	(main@j+1)& (0+255),b
   940   001274  0E00               	movlw	0
   941   001276  6FB5               	movwf	main@j& (0+255),b
   942   001278  EF40  F009         	goto	l2201
   943   00127C                     l2199:
   944                           
   945                           ; BSR set to: 0
   946                           ;../main.c: 112:         }
   947   00127C  4BB5               	infsnz	main@j& (0+255),f,b
   948   00127E  2BB6               	incf	(main@j+1)& (0+255),f,b
   949   001280                     l2201:
   950                           
   951                           ; BSR set to: 0
   952   001280  51B1               	movf	main@n& (0+255),w,b
   953   001282  5DB5               	subwf	main@j& (0+255),w,b
   954   001284  51B2               	movf	(main@n+1)& (0+255),w,b
   955   001286  59B6               	subwfb	(main@j+1)& (0+255),w,b
   956   001288  A0D8               	btfss	status,0,c
   957   00128A  EF49  F009         	goto	u1451
   958   00128E  EF4B  F009         	goto	u1450
   959   001292                     u1451:
   960   001292  EF3E  F009         	goto	l2199
   961   001296                     u1450:
   962   001296  EF8C  F008         	goto	l2177
   963   00129A  EF2A  F000         	goto	start
   964   00129E                     __end_of_main:
   965                           	callstack 0
   966                           
   967 ;; *************** function _sprintf *****************
   968 ;; Defined at:
   969 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  s               2    0[BANK0 ] PTR unsigned char 
   972 ;;		 -> main@readout(50), 
   973 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   974 ;;		 -> STR_1(15), 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  f              11   14[BANK0 ] struct _IO_FILE
   977 ;;  ap              2   12[BANK0 ] PTR void [1]
   978 ;;		 -> ?_sprintf(2), 
   979 ;;  ret             2    0        int 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  2    0[BANK0 ] int 
   982 ;; Registers used:
   983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   989 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   990 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   992 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   993 ;;Total ram usage:       25 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 9
   996 ;; This function calls:
   997 ;;		_vfprintf
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text1
  1004   001980                     __ptext1:
  1005                           	callstack 0
  1006   001980                     _sprintf:
  1007                           	callstack 21
  1008   001980  0E64               	movlw	low (?_sprintf+4)
  1009   001982  0100               	movlb	0	; () banked
  1010   001984  6F6C               	movwf	sprintf@ap& (0+255),b
  1011   001986  0E00               	movlw	high (?_sprintf+4)
  1012   001988  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1013   00198A  C060  F06E         	movff	sprintf@s,sprintf@f
  1014   00198E  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1015   001992                     
  1016                           ; BSR set to: 0
  1017   001992  0E00               	movlw	0
  1018   001994  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1019   001996  0E00               	movlw	0
  1020   001998  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1021   00199A                     
  1022                           ; BSR set to: 0
  1023   00199A  0E00               	movlw	0
  1024   00199C  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1025   00199E  0E00               	movlw	0
  1026   0019A0  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1027   0019A2                     
  1028                           ; BSR set to: 0
  1029   0019A2  0E6E               	movlw	low sprintf@f
  1030   0019A4  6E53               	movwf	vfprintf@fp^0,c
  1031   0019A6  0E00               	movlw	high sprintf@f
  1032   0019A8  6E54               	movwf	(vfprintf@fp+1)^0,c
  1033   0019AA  C062  F055         	movff	sprintf@fmt,vfprintf@fmt
  1034   0019AE  C063  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1035   0019B2  0E6C               	movlw	low sprintf@ap
  1036   0019B4  6E57               	movwf	vfprintf@ap^0,c
  1037   0019B6  0E00               	movlw	high sprintf@ap
  1038   0019B8  6E58               	movwf	(vfprintf@ap+1)^0,c
  1039   0019BA  EC89  F00D         	call	_vfprintf	;wreg free
  1040   0019BE  0100               	movlb	0	; () banked
  1041   0019C0  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1042   0019C2  2560               	addwf	sprintf@s& (0+255),w,b
  1043   0019C4  6ED9               	movwf	fsr2l,c
  1044   0019C6  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1045   0019C8  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1046   0019CA  6EDA               	movwf	fsr2h,c
  1047   0019CC  0E00               	movlw	0
  1048   0019CE  6EDF               	movwf	indf2,c
  1049   0019D0                     
  1050                           ; BSR set to: 0
  1051   0019D0  0012               	return		;funcret
  1052   0019D2                     __end_of_sprintf:
  1053                           	callstack 0
  1054                           
  1055 ;; *************** function _vfprintf *****************
  1056 ;; Defined at:
  1057 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1060 ;;		 -> sprintf@f(11), 
  1061 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1062 ;;		 -> STR_1(15), 
  1063 ;;  ap              2   86[COMRAM] PTR PTR void 
  1064 ;;		 -> sprintf@ap(2), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1067 ;;		 -> STR_1(15), 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  2   82[COMRAM] int 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1077 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;Total ram usage:        8 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 8
  1084 ;; This function calls:
  1085 ;;		_vfpfcnvrt
  1086 ;; This function is called by:
  1087 ;;		_sprintf
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text2
  1092   001B12                     __ptext2:
  1093                           	callstack 0
  1094   001B12                     _vfprintf:
  1095                           	callstack 21
  1096   001B12                     
  1097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1098   001B12  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1099   001B16  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1102   001B1A  EF9D  F00D         	goto	l1959
  1103   001B1E                     l1957:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1106   001B1E  C053  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1107   001B22  C054  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1108   001B26  0E59               	movlw	low vfprintf@cfmt
  1109   001B28  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1110   001B2A  0E00               	movlw	high vfprintf@cfmt
  1111   001B2C  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1112   001B2E  C057  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1113   001B32  C058  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1114   001B36  ECC5  F00A         	call	_vfpfcnvrt	;wreg free
  1115   001B3A                     l1959:
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1118   001B3A  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1119   001B3E  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1120   001B42                     	if	0	;tblptru may be non-zero
  1121   001B42                     	endif
  1122   001B42                     	if	0	;tblptru may be non-zero
  1123   001B42                     	endif
  1124   001B42  0008               	tblrd		*
  1125   001B44  50F5               	movf	tablat,w,c
  1126   001B46  0900               	iorlw	0
  1127   001B48  A4D8               	btfss	status,2,c
  1128   001B4A  EFA9  F00D         	goto	u1101
  1129   001B4E  EFAB  F00D         	goto	u1100
  1130   001B52                     u1101:
  1131   001B52  EF8F  F00D         	goto	l1957
  1132   001B56                     u1100:
  1133   001B56                     
  1134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1135   001B56  0E00               	movlw	0
  1136   001B58  6E54               	movwf	(?_vfprintf+1)^0,c
  1137   001B5A  0E00               	movlw	0
  1138   001B5C  6E53               	movwf	?_vfprintf^0,c
  1139   001B5E  0012               	return		;funcret
  1140   001B60                     __end_of_vfprintf:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _vfpfcnvrt *****************
  1144 ;; Defined at:
  1145 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1148 ;;		 -> sprintf@f(11), 
  1149 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1150 ;;		 -> vfprintf@cfmt(2), 
  1151 ;;  ap              2   68[COMRAM] PTR PTR void 
  1152 ;;		 -> sprintf@ap(2), 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  convarg         8   72[COMRAM] struct .
  1155 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1156 ;;		 -> STR_1(15), 
  1157 ;;  i               2    0        int 
  1158 ;;  done            2    0        int 
  1159 ;;  c               1    0        unsigned char 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1173 ;;Total ram usage:       18 bytes
  1174 ;; Hardware stack levels used: 1
  1175 ;; Hardware stack levels required when called: 7
  1176 ;; This function calls:
  1177 ;;		_dtoa
  1178 ;;		_fputc
  1179 ;; This function is called by:
  1180 ;;		_vfprintf
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text3
  1185   00158A                     __ptext3:
  1186                           	callstack 0
  1187   00158A                     _vfpfcnvrt:
  1188                           	callstack 21
  1189   00158A                     
  1190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1191   00158A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1192   00158E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1193   001592  CFDE FFF6          	movff	postinc2,tblptrl
  1194   001596  CFDD FFF7          	movff	postdec2,tblptrh
  1195   00159A                     	if	0	;tblptru may be non-zero
  1196   00159A                     	endif
  1197   00159A                     	if	0	;tblptru may be non-zero
  1198   00159A                     	endif
  1199   00159A  0008               	tblrd		*
  1200   00159C  50F5               	movf	tablat,w,c
  1201   00159E  0A25               	xorlw	37
  1202   0015A0  A4D8               	btfss	status,2,c
  1203   0015A2  EFD5  F00A         	goto	u1061
  1204   0015A6  EFD7  F00A         	goto	u1060
  1205   0015AA                     u1061:
  1206   0015AA  EF57  F00B         	goto	l1907
  1207   0015AE                     u1060:
  1208   0015AE                     
  1209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1210   0015AE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1211   0015B2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1212   0015B6  2ADE               	incf	postinc2,f,c
  1213   0015B8  0E00               	movlw	0
  1214   0015BA  22DD               	addwfc	postdec2,f,c
  1215   0015BC                     
  1216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1217   0015BC  0E00               	movlw	0
  1218   0015BE  0100               	movlb	0	; () banked
  1219   0015C0  6FC8               	movwf	(_width+1)& (0+255),b
  1220   0015C2  0E00               	movlw	0
  1221   0015C4  6FC7               	movwf	_width& (0+255),b
  1222   0015C6  C0C7  F0CF         	movff	_width,_flags
  1223   0015CA                     
  1224                           ; BSR set to: 0
  1225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1226   0015CA  69C9               	setf	_prec& (0+255),b
  1227   0015CC  69CA               	setf	(_prec+1)& (0+255),b
  1228   0015CE                     
  1229                           ; BSR set to: 0
  1230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1231   0015CE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1232   0015D2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1233   0015D6  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1234   0015DA  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1235   0015DE                     
  1236                           ; BSR set to: 0
  1237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1238   0015DE  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1239   0015E2  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1240   0015E6                     	if	0	;tblptru may be non-zero
  1241   0015E6                     	endif
  1242   0015E6                     	if	0	;tblptru may be non-zero
  1243   0015E6                     	endif
  1244   0015E6  0008               	tblrd		*
  1245   0015E8  50F5               	movf	tablat,w,c
  1246   0015EA  0A64               	xorlw	100
  1247   0015EC  B4D8               	btfsc	status,2,c
  1248   0015EE  EFFB  F00A         	goto	u1071
  1249   0015F2  EFFD  F00A         	goto	u1070
  1250   0015F6                     u1071:
  1251   0015F6  EF0B  F00B         	goto	l1897
  1252   0015FA                     u1070:
  1253   0015FA                     
  1254                           ; BSR set to: 0
  1255   0015FA  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1256   0015FE  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1257   001602                     	if	0	;tblptru may be non-zero
  1258   001602                     	endif
  1259   001602                     	if	0	;tblptru may be non-zero
  1260   001602                     	endif
  1261   001602  0008               	tblrd		*
  1262   001604  50F5               	movf	tablat,w,c
  1263   001606  0A69               	xorlw	105
  1264   001608  A4D8               	btfss	status,2,c
  1265   00160A  EF09  F00B         	goto	u1081
  1266   00160E  EF0B  F00B         	goto	u1080
  1267   001612                     u1081:
  1268   001612  EF4E  F00B         	goto	l1903
  1269   001616                     u1080:
  1270   001616                     l1897:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1274   001616  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1275   00161A  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1276   00161E  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1277   001622  0E02               	movlw	2
  1278   001624  26DE               	addwf	postinc2,f,c
  1279   001626  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1280   00162A  0E00               	movlw	0
  1281   00162C  22DD               	addwfc	postdec2,f,c
  1282   00162E  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1283   001632  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1284   001636  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1285   00163A  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1286   00163E  0E00               	movlw	0
  1287   001640  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1288   001642  0EFF               	movlw	-1
  1289   001644  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1290   001646  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1291   001648  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1292   00164A  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1293   00164C  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1294   00164E  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1297   001650  0E01               	movlw	1
  1298   001652  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1299   001654  6E47               	movwf	??_vfpfcnvrt^0,c
  1300   001656  0E00               	movlw	0
  1301   001658  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1302   00165A  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1303   00165C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1304   001660  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1305   001664  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1306   001668  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1307   00166C                     
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1310   00166C  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1311   001670  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1312   001674  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1313   001678  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1314   00167C  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1315   001680  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1316   001684  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1317   001688  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1318   00168C  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1319   001690  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1320   001694  EC09  F007         	call	_dtoa	;wreg free
  1321   001698  EF6B  F00B         	goto	l1081
  1322   00169C                     l1903:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1325   00169C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1326   0016A0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1327   0016A4  2ADE               	incf	postinc2,f,c
  1328   0016A6  0E00               	movlw	0
  1329   0016A8  22DD               	addwfc	postdec2,f,c
  1330   0016AA  EF6B  F00B         	goto	l1081
  1331   0016AE                     l1907:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1334   0016AE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335   0016B2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336   0016B6  CFDE FFF6          	movff	postinc2,tblptrl
  1337   0016BA  CFDD FFF7          	movff	postdec2,tblptrh
  1338   0016BE                     	if	0	;tblptru may be non-zero
  1339   0016BE                     	endif
  1340   0016BE                     	if	0	;tblptru may be non-zero
  1341   0016BE                     	endif
  1342   0016BE  0008               	tblrd		*
  1343   0016C0  50F5               	movf	tablat,w,c
  1344   0016C2  6E03               	movwf	fputc@c^0,c
  1345   0016C4  6A04               	clrf	(fputc@c+1)^0,c
  1346   0016C6  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1347   0016CA  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1348   0016CE  EC6C  F00B         	call	_fputc	;wreg free
  1349   0016D2  EF4E  F00B         	goto	l1903
  1350   0016D6                     l1081:
  1351   0016D6  0012               	return		;funcret
  1352   0016D8                     __end_of_vfpfcnvrt:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _dtoa *****************
  1356 ;; Defined at:
  1357 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1360 ;;		 -> sprintf@f(11), 
  1361 ;;  d               8   31[COMRAM] long long 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  n               8   53[COMRAM] long long 
  1364 ;;  i               2   61[COMRAM] int 
  1365 ;;  w               2   51[COMRAM] int 
  1366 ;;  p               2   49[COMRAM] int 
  1367 ;;  s               1   63[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1377 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;Total ram usage:       35 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 6
  1384 ;; This function calls:
  1385 ;;		___aodiv
  1386 ;;		___aomod
  1387 ;;		_abs
  1388 ;;		_pad
  1389 ;; This function is called by:
  1390 ;;		_vfpfcnvrt
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text4
  1395   000E12                     __ptext4:
  1396                           	callstack 0
  1397   000E12                     _dtoa:
  1398                           	callstack 21
  1399   000E12                     
  1400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1401   000E12  C020  F036         	movff	dtoa@d,dtoa@n
  1402   000E16  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  1403   000E1A  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  1404   000E1E  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  1405   000E22  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  1406   000E26  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  1407   000E2A  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  1408   000E2E  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  1409   000E32                     
  1410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1411   000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1412   000E34  EF1E  F007         	goto	u941
  1413   000E38  EF21  F007         	goto	u940
  1414   000E3C                     u941:
  1415   000E3C  0E01               	movlw	1
  1416   000E3E  EF22  F007         	goto	u950
  1417   000E42                     u940:
  1418   000E42  0E00               	movlw	0
  1419   000E44                     u950:
  1420   000E44  6E40               	movwf	dtoa@s^0,c
  1421   000E46                     
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1423   000E46  5040               	movf	dtoa@s^0,w,c
  1424   000E48  B4D8               	btfsc	status,2,c
  1425   000E4A  EF29  F007         	goto	u961
  1426   000E4E  EF2B  F007         	goto	u960
  1427   000E52                     u961:
  1428   000E52  EF3B  F007         	goto	l1809
  1429   000E56                     u960:
  1430   000E56                     
  1431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1432   000E56  1E3D               	comf	(dtoa@n+7)^0,f,c
  1433   000E58  1E3C               	comf	(dtoa@n+6)^0,f,c
  1434   000E5A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1435   000E5C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1436   000E5E  1E39               	comf	(dtoa@n+3)^0,f,c
  1437   000E60  1E38               	comf	(dtoa@n+2)^0,f,c
  1438   000E62  1E37               	comf	(dtoa@n+1)^0,f,c
  1439   000E64  6C36               	negf	dtoa@n^0,c
  1440   000E66  0E00               	movlw	0
  1441   000E68  2237               	addwfc	(dtoa@n+1)^0,f,c
  1442   000E6A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1443   000E6C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1444   000E6E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1445   000E70  223B               	addwfc	(dtoa@n+5)^0,f,c
  1446   000E72  223C               	addwfc	(dtoa@n+6)^0,f,c
  1447   000E74  223D               	addwfc	(dtoa@n+7)^0,f,c
  1448   000E76                     l1809:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1451   000E76  0100               	movlb	0	; () banked
  1452   000E78  BFCA               	btfsc	(_prec+1)& (0+255),7,b
  1453   000E7A  EF49  F007         	goto	u970
  1454   000E7E  51CA               	movf	(_prec+1)& (0+255),w,b
  1455   000E80  E106               	bnz	u971
  1456   000E82  05C9               	decf	_prec& (0+255),w,b
  1457   000E84  B0D8               	btfsc	status,0,c
  1458   000E86  EF47  F007         	goto	u971
  1459   000E8A  EF49  F007         	goto	u970
  1460   000E8E                     u971:
  1461   000E8E  EF4F  F007         	goto	l1060
  1462   000E92                     u970:
  1463   000E92                     
  1464                           ; BSR set to: 0
  1465   000E92  0E00               	movlw	0
  1466   000E94  6E33               	movwf	(dtoa@p+1)^0,c
  1467   000E96  0E01               	movlw	1
  1468   000E98  6E32               	movwf	dtoa@p^0,c
  1469   000E9A  EF53  F007         	goto	l1062
  1470   000E9E                     l1060:
  1471                           
  1472                           ; BSR set to: 0
  1473   000E9E  C0C9  F032         	movff	_prec,dtoa@p
  1474   000EA2  C0CA  F033         	movff	_prec+1,dtoa@p+1
  1475   000EA6                     l1062:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1479   000EA6  C0C7  F034         	movff	_width,dtoa@w
  1480   000EAA  C0C8  F035         	movff	_width+1,dtoa@w+1
  1481   000EAE                     
  1482                           ; BSR set to: 0
  1483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1484   000EAE  5040               	movf	dtoa@s^0,w,c
  1485   000EB0  B4D8               	btfsc	status,2,c
  1486   000EB2  EF5D  F007         	goto	u981
  1487   000EB6  EF5F  F007         	goto	u980
  1488   000EBA                     u981:
  1489   000EBA  EF76  F007         	goto	l1063
  1490   000EBE                     u980:
  1491   000EBE                     
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1494   000EBE  0634               	decf	dtoa@w^0,f,c
  1495   000EC0  A0D8               	btfss	status,0,c
  1496   000EC2  0635               	decf	(dtoa@w+1)^0,f,c
  1497   000EC4                     
  1498                           ; BSR set to: 0
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1500   000EC4  5040               	movf	dtoa@s^0,w,c
  1501   000EC6  A4D8               	btfss	status,2,c
  1502   000EC8  EF68  F007         	goto	u991
  1503   000ECC  EF6A  F007         	goto	u990
  1504   000ED0                     u991:
  1505   000ED0  EF70  F007         	goto	l1821
  1506   000ED4                     u990:
  1507   000ED4                     
  1508                           ; BSR set to: 0
  1509   000ED4  0E00               	movlw	0
  1510   000ED6  6E31               	movwf	(_dtoa$2151+1)^0,c
  1511   000ED8  0E2B               	movlw	43
  1512   000EDA  6E30               	movwf	_dtoa$2151^0,c
  1513   000EDC  EF74  F007         	goto	l1823
  1514   000EE0                     l1821:
  1515                           
  1516                           ; BSR set to: 0
  1517   000EE0  0E00               	movlw	0
  1518   000EE2  6E31               	movwf	(_dtoa$2151+1)^0,c
  1519   000EE4  0E2D               	movlw	45
  1520   000EE6  6E30               	movwf	_dtoa$2151^0,c
  1521   000EE8                     l1823:
  1522                           
  1523                           ; BSR set to: 0
  1524   000EE8  C030  F040         	movff	_dtoa$2151,dtoa@s
  1525   000EEC                     l1063:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1529   000EEC  0E00               	movlw	0
  1530   000EEE  6E3F               	movwf	(dtoa@i+1)^0,c
  1531   000EF0  0E1F               	movlw	31
  1532   000EF2  6E3E               	movwf	dtoa@i^0,c
  1533   000EF4                     
  1534                           ; BSR set to: 0
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1536   000EF4  0E00               	movlw	0
  1537   000EF6  6FF1               	movwf	(_dbuf+31)& (0+255),b
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1540   000EF8  EFFA  F007         	goto	l1837
  1541   000EFC                     l1827:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1544   000EFC  063E               	decf	dtoa@i^0,f,c
  1545   000EFE  A0D8               	btfss	status,0,c
  1546   000F00  063F               	decf	(dtoa@i+1)^0,f,c
  1547   000F02                     
  1548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1549   000F02  0ED2               	movlw	low _dbuf
  1550   000F04  243E               	addwf	dtoa@i^0,w,c
  1551   000F06  6ED9               	movwf	fsr2l,c
  1552   000F08  0E00               	movlw	high _dbuf
  1553   000F0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  1554   000F0C  6EDA               	movwf	fsr2h,c
  1555   000F0E  C036  F003         	movff	dtoa@n,___aomod@dividend
  1556   000F12  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1557   000F16  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1558   000F1A  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1559   000F1E  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1560   000F22  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1561   000F26  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1562   000F2A  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1563   000F2E  0E0A               	movlw	10
  1564   000F30  6E0B               	movwf	___aomod@divisor^0,c
  1565   000F32  0E00               	movlw	0
  1566   000F34  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1567   000F36  0E00               	movlw	0
  1568   000F38  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1569   000F3A  0E00               	movlw	0
  1570   000F3C  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1571   000F3E  0E00               	movlw	0
  1572   000F40  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1573   000F42  0E00               	movlw	0
  1574   000F44  6E10               	movwf	(___aomod@divisor+5)^0,c
  1575   000F46  0E00               	movlw	0
  1576   000F48  6E11               	movwf	(___aomod@divisor+6)^0,c
  1577   000F4A  0E00               	movlw	0
  1578   000F4C  6E12               	movwf	(___aomod@divisor+7)^0,c
  1579   000F4E  EC13  F00A         	call	___aomod	;wreg free
  1580   000F52  C003  F028         	movff	?___aomod,??_dtoa
  1581   000F56  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1582   000F5A  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1583   000F5E  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1584   000F62  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1585   000F66  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1586   000F6A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1587   000F6E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1588   000F72  C028  F015         	movff	??_dtoa,abs@a
  1589   000F76  C029  F016         	movff	??_dtoa+1,abs@a+1
  1590   000F7A  EC3A  F00E         	call	_abs	;wreg free
  1591   000F7E  5015               	movf	?_abs^0,w,c
  1592   000F80  0F30               	addlw	48
  1593   000F82  6EDF               	movwf	indf2,c
  1594   000F84                     
  1595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1596   000F84  0632               	decf	dtoa@p^0,f,c
  1597   000F86  A0D8               	btfss	status,0,c
  1598   000F88  0633               	decf	(dtoa@p+1)^0,f,c
  1599   000F8A                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1601   000F8A  0634               	decf	dtoa@w^0,f,c
  1602   000F8C  A0D8               	btfss	status,0,c
  1603   000F8E  0635               	decf	(dtoa@w+1)^0,f,c
  1604   000F90                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1606   000F90  C036  F003         	movff	dtoa@n,___aodiv@dividend
  1607   000F94  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1608   000F98  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1609   000F9C  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1610   000FA0  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1611   000FA4  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1612   000FA8  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1613   000FAC  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  1614   000FB0  0E0A               	movlw	10
  1615   000FB2  6E0B               	movwf	___aodiv@divisor^0,c
  1616   000FB4  0E00               	movlw	0
  1617   000FB6  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  1618   000FB8  0E00               	movlw	0
  1619   000FBA  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  1620   000FBC  0E00               	movlw	0
  1621   000FBE  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  1622   000FC0  0E00               	movlw	0
  1623   000FC2  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  1624   000FC4  0E00               	movlw	0
  1625   000FC6  6E10               	movwf	(___aodiv@divisor+5)^0,c
  1626   000FC8  0E00               	movlw	0
  1627   000FCA  6E11               	movwf	(___aodiv@divisor+6)^0,c
  1628   000FCC  0E00               	movlw	0
  1629   000FCE  6E12               	movwf	(___aodiv@divisor+7)^0,c
  1630   000FD0  EC4F  F009         	call	___aodiv	;wreg free
  1631   000FD4  C003  F036         	movff	?___aodiv,dtoa@n
  1632   000FD8  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  1633   000FDC  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  1634   000FE0  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  1635   000FE4  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  1636   000FE8  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  1637   000FEC  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  1638   000FF0  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  1639   000FF4                     l1837:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1642   000FF4  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1643   000FF6  EF05  F008         	goto	u1001
  1644   000FFA  503F               	movf	(dtoa@i+1)^0,w,c
  1645   000FFC  E108               	bnz	u1000
  1646   000FFE  043E               	decf	dtoa@i^0,w,c
  1647   001000  A0D8               	btfss	status,0,c
  1648   001002  EF05  F008         	goto	u1001
  1649   001006  EF07  F008         	goto	u1000
  1650   00100A                     u1001:
  1651   00100A  EF23  F008         	goto	l1843
  1652   00100E                     u1000:
  1653   00100E  5036               	movf	dtoa@n^0,w,c
  1654   001010  1037               	iorwf	(dtoa@n+1)^0,w,c
  1655   001012  1038               	iorwf	(dtoa@n+2)^0,w,c
  1656   001014  1039               	iorwf	(dtoa@n+3)^0,w,c
  1657   001016  103A               	iorwf	(dtoa@n+4)^0,w,c
  1658   001018  103B               	iorwf	(dtoa@n+5)^0,w,c
  1659   00101A  103C               	iorwf	(dtoa@n+6)^0,w,c
  1660   00101C  103D               	iorwf	(dtoa@n+7)^0,w,c
  1661   00101E  A4D8               	btfss	status,2,c
  1662   001020  EF14  F008         	goto	u1011
  1663   001024  EF16  F008         	goto	u1010
  1664   001028                     u1011:
  1665   001028  EF7E  F007         	goto	l1827
  1666   00102C                     u1010:
  1667   00102C  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1668   00102E  EF23  F008         	goto	u1020
  1669   001032  5033               	movf	(dtoa@p+1)^0,w,c
  1670   001034  E106               	bnz	u1021
  1671   001036  0432               	decf	dtoa@p^0,w,c
  1672   001038  B0D8               	btfsc	status,0,c
  1673   00103A  EF21  F008         	goto	u1021
  1674   00103E  EF23  F008         	goto	u1020
  1675   001042                     u1021:
  1676   001042  EF7E  F007         	goto	l1827
  1677   001046                     u1020:
  1678   001046                     l1843:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1681   001046  5040               	movf	dtoa@s^0,w,c
  1682   001048  B4D8               	btfsc	status,2,c
  1683   00104A  EF29  F008         	goto	u1031
  1684   00104E  EF2B  F008         	goto	u1030
  1685   001052                     u1031:
  1686   001052  EF36  F008         	goto	l1849
  1687   001056                     u1030:
  1688   001056                     
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1690   001056  063E               	decf	dtoa@i^0,f,c
  1691   001058  A0D8               	btfss	status,0,c
  1692   00105A  063F               	decf	(dtoa@i+1)^0,f,c
  1693   00105C                     
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1695   00105C  0ED2               	movlw	low _dbuf
  1696   00105E  243E               	addwf	dtoa@i^0,w,c
  1697   001060  6ED9               	movwf	fsr2l,c
  1698   001062  0E00               	movlw	high _dbuf
  1699   001064  203F               	addwfc	(dtoa@i+1)^0,w,c
  1700   001066  6EDA               	movwf	fsr2h,c
  1701   001068  C040  FFDF         	movff	dtoa@s,indf2
  1702   00106C                     l1849:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1705   00106C  C01E  F013         	movff	dtoa@fp,pad@fp
  1706   001070  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1707   001074  0ED2               	movlw	low _dbuf
  1708   001076  243E               	addwf	dtoa@i^0,w,c
  1709   001078  6E15               	movwf	pad@buf^0,c
  1710   00107A  0E00               	movlw	high _dbuf
  1711   00107C  203F               	addwfc	(dtoa@i+1)^0,w,c
  1712   00107E  6E16               	movwf	(pad@buf+1)^0,c
  1713   001080  C034  F017         	movff	dtoa@w,pad@p
  1714   001084  C035  F018         	movff	dtoa@w+1,pad@p+1
  1715   001088  EC83  F00C         	call	_pad	;wreg free
  1716   00108C  0012               	return		;funcret
  1717   00108E                     __end_of_dtoa:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _pad *****************
  1721 ;; Defined at:
  1722 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1725 ;;		 -> sprintf@f(11), 
  1726 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1727 ;;		 -> dbuf(32), 
  1728 ;;  p               2   22[COMRAM] int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  w               2   27[COMRAM] int 
  1731 ;;  i               2   25[COMRAM] int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1741 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;Total ram usage:       11 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 5
  1748 ;; This function calls:
  1749 ;;		_fputc
  1750 ;;		_fputs
  1751 ;; This function is called by:
  1752 ;;		_dtoa
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text5
  1757   001906                     __ptext5:
  1758                           	callstack 0
  1759   001906                     _pad:
  1760                           	callstack 21
  1761   001906                     
  1762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1763   001906  BE18               	btfsc	(pad@p+1)^0,7,c
  1764   001908  EF88  F00C         	goto	u891
  1765   00190C  EF8A  F00C         	goto	u890
  1766   001910                     u891:
  1767   001910  EF90  F00C         	goto	l1783
  1768   001914                     u890:
  1769   001914  C017  F01C         	movff	pad@p,pad@w
  1770   001918  C018  F01D         	movff	pad@p+1,pad@w+1
  1771   00191C  EF94  F00C         	goto	l1051
  1772   001920                     l1783:
  1773   001920  0E00               	movlw	0
  1774   001922  6E1D               	movwf	(pad@w+1)^0,c
  1775   001924  0E00               	movlw	0
  1776   001926  6E1C               	movwf	pad@w^0,c
  1777   001928                     l1051:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1780   001928  0E00               	movlw	0
  1781   00192A  6E1B               	movwf	(pad@i+1)^0,c
  1782   00192C  0E00               	movlw	0
  1783   00192E  6E1A               	movwf	pad@i^0,c
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1786   001930  EFA6  F00C         	goto	l1789
  1787   001934                     l1785:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1790   001934  0E00               	movlw	0
  1791   001936  6E04               	movwf	(fputc@c+1)^0,c
  1792   001938  0E20               	movlw	32
  1793   00193A  6E03               	movwf	fputc@c^0,c
  1794   00193C  C013  F005         	movff	pad@fp,fputc@fp
  1795   001940  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1796   001944  EC6C  F00B         	call	_fputc	;wreg free
  1797   001948                     
  1798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1799   001948  4A1A               	infsnz	pad@i^0,f,c
  1800   00194A  2A1B               	incf	(pad@i+1)^0,f,c
  1801   00194C                     l1789:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1804   00194C  501C               	movf	pad@w^0,w,c
  1805   00194E  5C1A               	subwf	pad@i^0,w,c
  1806   001950  501B               	movf	(pad@i+1)^0,w,c
  1807   001952  0A80               	xorlw	128
  1808   001954  6E19               	movwf	??_pad^0,c
  1809   001956  501D               	movf	(pad@w+1)^0,w,c
  1810   001958  0A80               	xorlw	128
  1811   00195A  5819               	subwfb	??_pad^0,w,c
  1812   00195C  A0D8               	btfss	status,0,c
  1813   00195E  EFB3  F00C         	goto	u901
  1814   001962  EFB5  F00C         	goto	u900
  1815   001966                     u901:
  1816   001966  EF9A  F00C         	goto	l1785
  1817   00196A                     u900:
  1818   00196A                     
  1819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1820   00196A  C015  F00C         	movff	pad@buf,fputs@s
  1821   00196E  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1822   001972  C013  F00E         	movff	pad@fp,fputs@fp
  1823   001976  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1824   00197A  ECF7  F00D         	call	_fputs	;wreg free
  1825   00197E  0012               	return		;funcret
  1826   001980                     __end_of_pad:
  1827                           	callstack 0
  1828                           
  1829 ;; *************** function _fputs *****************
  1830 ;; Defined at:
  1831 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1834 ;;		 -> dbuf(32), 
  1835 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1836 ;;		 -> sprintf@f(11), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  i               2   16[COMRAM] int 
  1839 ;;  c               1   15[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2   11[COMRAM] int 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;Total ram usage:        7 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 4
  1856 ;; This function calls:
  1857 ;;		_fputc
  1858 ;; This function is called by:
  1859 ;;		_pad
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text6
  1864   001BEE                     __ptext6:
  1865                           	callstack 0
  1866   001BEE                     _fputs:
  1867                           	callstack 21
  1868   001BEE  0E00               	movlw	0
  1869   001BF0  6E12               	movwf	(fputs@i+1)^0,c
  1870   001BF2  0E00               	movlw	0
  1871   001BF4  6E11               	movwf	fputs@i^0,c
  1872   001BF6  EF08  F00E         	goto	l1697
  1873   001BFA                     l1693:
  1874   001BFA  C010  F003         	movff	fputs@c,fputc@c
  1875   001BFE  6A04               	clrf	(fputc@c+1)^0,c
  1876   001C00  C00E  F005         	movff	fputs@fp,fputc@fp
  1877   001C04  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1878   001C08  EC6C  F00B         	call	_fputc	;wreg free
  1879   001C0C  4A11               	infsnz	fputs@i^0,f,c
  1880   001C0E  2A12               	incf	(fputs@i+1)^0,f,c
  1881   001C10                     l1697:
  1882   001C10  5011               	movf	fputs@i^0,w,c
  1883   001C12  240C               	addwf	fputs@s^0,w,c
  1884   001C14  6ED9               	movwf	fsr2l,c
  1885   001C16  5012               	movf	(fputs@i+1)^0,w,c
  1886   001C18  200D               	addwfc	(fputs@s+1)^0,w,c
  1887   001C1A  6EDA               	movwf	fsr2h,c
  1888   001C1C  50DF               	movf	indf2,w,c
  1889   001C1E  6E10               	movwf	fputs@c^0,c
  1890   001C20  5010               	movf	fputs@c^0,w,c
  1891   001C22  A4D8               	btfss	status,2,c
  1892   001C24  EF16  F00E         	goto	u751
  1893   001C28  EF18  F00E         	goto	u750
  1894   001C2C                     u751:
  1895   001C2C  EFFD  F00D         	goto	l1693
  1896   001C30                     u750:
  1897   001C30  0012               	return		;funcret
  1898   001C32                     __end_of_fputs:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _fputc *****************
  1902 ;; Defined at:
  1903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  c               2    2[COMRAM] int 
  1906 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1907 ;;		 -> sprintf@f(11), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2    2[COMRAM] int 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;Total ram usage:        9 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 3
  1926 ;; This function calls:
  1927 ;;		_putch
  1928 ;; This function is called by:
  1929 ;;		_pad
  1930 ;;		_vfpfcnvrt
  1931 ;;		_fputs
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text7
  1936   0016D8                     __ptext7:
  1937                           	callstack 0
  1938   0016D8                     _fputc:
  1939                           	callstack 24
  1940   0016D8  5005               	movf	fputc@fp^0,w,c
  1941   0016DA  1006               	iorwf	(fputc@fp+1)^0,w,c
  1942   0016DC  B4D8               	btfsc	status,2,c
  1943   0016DE  EF73  F00B         	goto	u711
  1944   0016E2  EF75  F00B         	goto	u710
  1945   0016E6                     u711:
  1946   0016E6  EF7E  F00B         	goto	l1681
  1947   0016EA                     u710:
  1948   0016EA  5005               	movf	fputc@fp^0,w,c
  1949   0016EC  1006               	iorwf	(fputc@fp+1)^0,w,c
  1950   0016EE  A4D8               	btfss	status,2,c
  1951   0016F0  EF7C  F00B         	goto	u721
  1952   0016F4  EF7E  F00B         	goto	u720
  1953   0016F8                     u721:
  1954   0016F8  EF83  F00B         	goto	l1683
  1955   0016FC                     u720:
  1956   0016FC                     l1681:
  1957   0016FC  5003               	movf	fputc@c^0,w,c
  1958   0016FE  EC0D  F00F         	call	_putch
  1959   001702  EFD0  F00B         	goto	l1106
  1960   001706                     l1683:
  1961   001706  EE20 F009          	lfsr	2,9
  1962   00170A  5005               	movf	fputc@fp^0,w,c
  1963   00170C  26D9               	addwf	fsr2l,f,c
  1964   00170E  5006               	movf	(fputc@fp+1)^0,w,c
  1965   001710  22DA               	addwfc	fsr2h,f,c
  1966   001712  50DE               	movf	postinc2,w,c
  1967   001714  10DE               	iorwf	postinc2,w,c
  1968   001716  B4D8               	btfsc	status,2,c
  1969   001718  EF90  F00B         	goto	u731
  1970   00171C  EF92  F00B         	goto	u730
  1971   001720                     u731:
  1972   001720  EFAD  F00B         	goto	l1687
  1973   001724                     u730:
  1974   001724  EE20 F009          	lfsr	2,9
  1975   001728  5005               	movf	fputc@fp^0,w,c
  1976   00172A  26D9               	addwf	fsr2l,f,c
  1977   00172C  5006               	movf	(fputc@fp+1)^0,w,c
  1978   00172E  22DA               	addwfc	fsr2h,f,c
  1979   001730  EE10 F003          	lfsr	1,3
  1980   001734  5005               	movf	fputc@fp^0,w,c
  1981   001736  26E1               	addwf	fsr1l,f,c
  1982   001738  5006               	movf	(fputc@fp+1)^0,w,c
  1983   00173A  22E2               	addwfc	fsr1h,f,c
  1984   00173C  50DE               	movf	postinc2,w,c
  1985   00173E  5CE6               	subwf	postinc1,w,c
  1986   001740  50E6               	movf	postinc1,w,c
  1987   001742  0A80               	xorlw	128
  1988   001744  6E0B               	movwf	(??_fputc+4)^0,c
  1989   001746  50DE               	movf	postinc2,w,c
  1990   001748  0A80               	xorlw	128
  1991   00174A  580B               	subwfb	(??_fputc+4)^0,w,c
  1992   00174C  B0D8               	btfsc	status,0,c
  1993   00174E  EFAB  F00B         	goto	u741
  1994   001752  EFAD  F00B         	goto	u740
  1995   001756                     u741:
  1996   001756  EFD0  F00B         	goto	l1106
  1997   00175A                     u740:
  1998   00175A                     l1687:
  1999   00175A  EE20 F003          	lfsr	2,3
  2000   00175E  5005               	movf	fputc@fp^0,w,c
  2001   001760  26D9               	addwf	fsr2l,f,c
  2002   001762  5006               	movf	(fputc@fp+1)^0,w,c
  2003   001764  22DA               	addwfc	fsr2h,f,c
  2004   001766  CFDE F007          	movff	postinc2,??_fputc
  2005   00176A  CFDD F008          	movff	postdec2,??_fputc+1
  2006   00176E  C005  FFD9         	movff	fputc@fp,fsr2l
  2007   001772  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2008   001776  CFDE F009          	movff	postinc2,??_fputc+2
  2009   00177A  CFDD F00A          	movff	postdec2,??_fputc+3
  2010   00177E  5007               	movf	??_fputc^0,w,c
  2011   001780  2409               	addwf	(??_fputc+2)^0,w,c
  2012   001782  6ED9               	movwf	fsr2l,c
  2013   001784  5008               	movf	(??_fputc+1)^0,w,c
  2014   001786  200A               	addwfc	(??_fputc+3)^0,w,c
  2015   001788  6EDA               	movwf	fsr2h,c
  2016   00178A  C003  FFDF         	movff	fputc@c,indf2
  2017   00178E  EE20 F003          	lfsr	2,3
  2018   001792  5005               	movf	fputc@fp^0,w,c
  2019   001794  26D9               	addwf	fsr2l,f,c
  2020   001796  5006               	movf	(fputc@fp+1)^0,w,c
  2021   001798  22DA               	addwfc	fsr2h,f,c
  2022   00179A  2ADE               	incf	postinc2,f,c
  2023   00179C  0E00               	movlw	0
  2024   00179E  22DD               	addwfc	postdec2,f,c
  2025   0017A0                     l1106:
  2026   0017A0  0012               	return		;funcret
  2027   0017A2                     __end_of_fputc:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _putch *****************
  2031 ;; Defined at:
  2032 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  c               1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  c               1    0[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 2
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_fputc
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text8
  2061   001E1A                     __ptext8:
  2062                           	callstack 0
  2063   001E1A                     _putch:
  2064                           	callstack 24
  2065   001E1A  0012               	return		;funcret
  2066   001E1C                     __end_of_putch:
  2067                           	callstack 0
  2068                           
  2069 ;; *************** function _abs *****************
  2070 ;; Defined at:
  2071 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  a               2   20[COMRAM] int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   20[COMRAM] int 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;Total ram usage:        4 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 2
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_dtoa
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text9
  2100   001C74                     __ptext9:
  2101                           	callstack 0
  2102   001C74                     _abs:
  2103                           	callstack 24
  2104   001C74  BE16               	btfsc	(abs@a+1)^0,7,c
  2105   001C76  EF47  F00E         	goto	u910
  2106   001C7A  5016               	movf	(abs@a+1)^0,w,c
  2107   001C7C  E106               	bnz	u911
  2108   001C7E  0415               	decf	abs@a^0,w,c
  2109   001C80  B0D8               	btfsc	status,0,c
  2110   001C82  EF45  F00E         	goto	u911
  2111   001C86  EF47  F00E         	goto	u910
  2112   001C8A                     u911:
  2113   001C8A  EF55  F00E         	goto	l1091
  2114   001C8E                     u910:
  2115   001C8E  C015  F017         	movff	abs@a,??_abs
  2116   001C92  C016  F018         	movff	abs@a+1,??_abs+1
  2117   001C96  1E17               	comf	??_abs^0,f,c
  2118   001C98  1E18               	comf	(??_abs+1)^0,f,c
  2119   001C9A  4A17               	infsnz	??_abs^0,f,c
  2120   001C9C  2A18               	incf	(??_abs+1)^0,f,c
  2121   001C9E  C017  F015         	movff	??_abs,?_abs
  2122   001CA2  C018  F016         	movff	??_abs+1,?_abs+1
  2123   001CA6  EF59  F00E         	goto	l1094
  2124   001CAA                     l1091:
  2125   001CAA  C015  F015         	movff	abs@a,?_abs
  2126   001CAE  C016  F016         	movff	abs@a+1,?_abs+1
  2127   001CB2                     l1094:
  2128   001CB2  0012               	return		;funcret
  2129   001CB4                     __end_of_abs:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function ___aomod *****************
  2133 ;; Defined at:
  2134 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  dividend        8    2[COMRAM] long long 
  2137 ;;  divisor         8   10[COMRAM] long long 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  sign            1   19[COMRAM] unsigned char 
  2140 ;;  counter         1   18[COMRAM] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  8    2[COMRAM] long long 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2150 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;Total ram usage:       18 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 2
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_dtoa
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text10
  2165   001426                     __ptext10:
  2166                           	callstack 0
  2167   001426                     ___aomod:
  2168                           	callstack 24
  2169   001426  0E00               	movlw	0
  2170   001428  6E14               	movwf	___aomod@sign^0,c
  2171   00142A  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2172   00142C  EF1C  F00A         	goto	u830
  2173   001430  EF1A  F00A         	goto	u831
  2174   001434                     u831:
  2175   001434  EF2E  F00A         	goto	l1751
  2176   001438                     u830:
  2177   001438  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2178   00143A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2179   00143C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2180   00143E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2181   001440  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2182   001442  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2183   001444  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2184   001446  6C03               	negf	___aomod@dividend^0,c
  2185   001448  0E00               	movlw	0
  2186   00144A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2187   00144C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2188   00144E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2189   001450  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2190   001452  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2191   001454  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2192   001456  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2193   001458  0E01               	movlw	1
  2194   00145A  6E14               	movwf	___aomod@sign^0,c
  2195   00145C                     l1751:
  2196   00145C  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2197   00145E  EF35  F00A         	goto	u840
  2198   001462  EF33  F00A         	goto	u841
  2199   001466                     u841:
  2200   001466  EF45  F00A         	goto	l1755
  2201   00146A                     u840:
  2202   00146A  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2203   00146C  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2204   00146E  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2205   001470  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2206   001472  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2207   001474  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2208   001476  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2209   001478  6C0B               	negf	___aomod@divisor^0,c
  2210   00147A  0E00               	movlw	0
  2211   00147C  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2212   00147E  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2213   001480  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2214   001482  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2215   001484  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2216   001486  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2217   001488  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2218   00148A                     l1755:
  2219   00148A  500B               	movf	___aomod@divisor^0,w,c
  2220   00148C  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2221   00148E  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2222   001490  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2223   001492  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2224   001494  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2225   001496  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2226   001498  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2227   00149A  B4D8               	btfsc	status,2,c
  2228   00149C  EF52  F00A         	goto	u851
  2229   0014A0  EF54  F00A         	goto	u850
  2230   0014A4                     u851:
  2231   0014A4  EF9C  F00A         	goto	l1771
  2232   0014A8                     u850:
  2233   0014A8  0E01               	movlw	1
  2234   0014AA  6E13               	movwf	___aomod@counter^0,c
  2235   0014AC  EF62  F00A         	goto	l1761
  2236   0014B0                     l1759:
  2237   0014B0  90D8               	bcf	status,0,c
  2238   0014B2  360B               	rlcf	___aomod@divisor^0,f,c
  2239   0014B4  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2240   0014B6  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2241   0014B8  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2242   0014BA  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2243   0014BC  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2244   0014BE  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2245   0014C0  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2246   0014C2  2A13               	incf	___aomod@counter^0,f,c
  2247   0014C4                     l1761:
  2248   0014C4  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2249   0014C6  EF67  F00A         	goto	u861
  2250   0014CA  EF69  F00A         	goto	u860
  2251   0014CE                     u861:
  2252   0014CE  EF58  F00A         	goto	l1759
  2253   0014D2                     u860:
  2254   0014D2                     l1763:
  2255   0014D2  500B               	movf	___aomod@divisor^0,w,c
  2256   0014D4  5C03               	subwf	___aomod@dividend^0,w,c
  2257   0014D6  500C               	movf	(___aomod@divisor+1)^0,w,c
  2258   0014D8  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2259   0014DA  500D               	movf	(___aomod@divisor+2)^0,w,c
  2260   0014DC  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2261   0014DE  500E               	movf	(___aomod@divisor+3)^0,w,c
  2262   0014E0  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2263   0014E2  500F               	movf	(___aomod@divisor+4)^0,w,c
  2264   0014E4  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2265   0014E6  5010               	movf	(___aomod@divisor+5)^0,w,c
  2266   0014E8  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2267   0014EA  5011               	movf	(___aomod@divisor+6)^0,w,c
  2268   0014EC  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2269   0014EE  5012               	movf	(___aomod@divisor+7)^0,w,c
  2270   0014F0  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2271   0014F2  A0D8               	btfss	status,0,c
  2272   0014F4  EF7E  F00A         	goto	u871
  2273   0014F8  EF80  F00A         	goto	u870
  2274   0014FC                     u871:
  2275   0014FC  EF90  F00A         	goto	l1767
  2276   001500                     u870:
  2277   001500  500B               	movf	___aomod@divisor^0,w,c
  2278   001502  5E03               	subwf	___aomod@dividend^0,f,c
  2279   001504  500C               	movf	(___aomod@divisor+1)^0,w,c
  2280   001506  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2281   001508  500D               	movf	(___aomod@divisor+2)^0,w,c
  2282   00150A  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2283   00150C  500E               	movf	(___aomod@divisor+3)^0,w,c
  2284   00150E  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2285   001510  500F               	movf	(___aomod@divisor+4)^0,w,c
  2286   001512  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2287   001514  5010               	movf	(___aomod@divisor+5)^0,w,c
  2288   001516  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2289   001518  5011               	movf	(___aomod@divisor+6)^0,w,c
  2290   00151A  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2291   00151C  5012               	movf	(___aomod@divisor+7)^0,w,c
  2292   00151E  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2293   001520                     l1767:
  2294   001520  90D8               	bcf	status,0,c
  2295   001522  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2296   001524  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2297   001526  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2298   001528  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2299   00152A  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2300   00152C  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2301   00152E  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2302   001530  320B               	rrcf	___aomod@divisor^0,f,c
  2303   001532  2E13               	decfsz	___aomod@counter^0,f,c
  2304   001534  EF69  F00A         	goto	l1763
  2305   001538                     l1771:
  2306   001538  5014               	movf	___aomod@sign^0,w,c
  2307   00153A  B4D8               	btfsc	status,2,c
  2308   00153C  EFA2  F00A         	goto	u881
  2309   001540  EFA4  F00A         	goto	u880
  2310   001544                     u881:
  2311   001544  EFB4  F00A         	goto	l1775
  2312   001548                     u880:
  2313   001548  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2314   00154A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2315   00154C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2316   00154E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2317   001550  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2318   001552  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2319   001554  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2320   001556  6C03               	negf	___aomod@dividend^0,c
  2321   001558  0E00               	movlw	0
  2322   00155A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2323   00155C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2324   00155E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2325   001560  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2326   001562  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2327   001564  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2328   001566  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2329   001568                     l1775:
  2330   001568  C003  F003         	movff	___aomod@dividend,?___aomod
  2331   00156C  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2332   001570  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2333   001574  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2334   001578  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2335   00157C  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2336   001580  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2337   001584  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2338   001588  0012               	return		;funcret
  2339   00158A                     __end_of___aomod:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function ___aodiv *****************
  2343 ;; Defined at:
  2344 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  dividend        8    2[COMRAM] long long 
  2347 ;;  divisor         8   10[COMRAM] long long 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  quotient        8   20[COMRAM] long long 
  2350 ;;  sign            1   19[COMRAM] unsigned char 
  2351 ;;  counter         1   18[COMRAM] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  8    2[COMRAM] long long 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2361 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;Total ram usage:       26 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 2
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_dtoa
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text11
  2376   00129E                     __ptext11:
  2377                           	callstack 0
  2378   00129E                     ___aodiv:
  2379                           	callstack 24
  2380   00129E  0E00               	movlw	0
  2381   0012A0  6E14               	movwf	___aodiv@sign^0,c
  2382   0012A2  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2383   0012A4  EF58  F009         	goto	u760
  2384   0012A8  EF56  F009         	goto	u761
  2385   0012AC                     u761:
  2386   0012AC  EF6A  F009         	goto	l1707
  2387   0012B0                     u760:
  2388   0012B0  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2389   0012B2  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2390   0012B4  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2391   0012B6  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2392   0012B8  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2393   0012BA  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2394   0012BC  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2395   0012BE  6C0B               	negf	___aodiv@divisor^0,c
  2396   0012C0  0E00               	movlw	0
  2397   0012C2  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2398   0012C4  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2399   0012C6  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2400   0012C8  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2401   0012CA  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2402   0012CC  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2403   0012CE  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2404   0012D0  0E01               	movlw	1
  2405   0012D2  6E14               	movwf	___aodiv@sign^0,c
  2406   0012D4                     l1707:
  2407   0012D4  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2408   0012D6  EF71  F009         	goto	u770
  2409   0012DA  EF6F  F009         	goto	u771
  2410   0012DE                     u771:
  2411   0012DE  EF83  F009         	goto	l1713
  2412   0012E2                     u770:
  2413   0012E2  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2414   0012E4  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2415   0012E6  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2416   0012E8  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2417   0012EA  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2418   0012EC  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2419   0012EE  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2420   0012F0  6C03               	negf	___aodiv@dividend^0,c
  2421   0012F2  0E00               	movlw	0
  2422   0012F4  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2423   0012F6  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2424   0012F8  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2425   0012FA  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2426   0012FC  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2427   0012FE  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2428   001300  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2429   001302  0E01               	movlw	1
  2430   001304  1A14               	xorwf	___aodiv@sign^0,f,c
  2431   001306                     l1713:
  2432   001306  EE20  F015         	lfsr	2,___aodiv@quotient
  2433   00130A  0E07               	movlw	7
  2434   00130C                     u781:
  2435   00130C  6ADE               	clrf	postinc2,c
  2436   00130E  06E8               	decf	wreg,f,c
  2437   001310  E2FD               	bc	u781
  2438   001312  500B               	movf	___aodiv@divisor^0,w,c
  2439   001314  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2440   001316  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2441   001318  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2442   00131A  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2443   00131C  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2444   00131E  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2445   001320  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2446   001322  B4D8               	btfsc	status,2,c
  2447   001324  EF96  F009         	goto	u791
  2448   001328  EF98  F009         	goto	u790
  2449   00132C                     u791:
  2450   00132C  EFEA  F009         	goto	l1735
  2451   001330                     u790:
  2452   001330  0E01               	movlw	1
  2453   001332  6E13               	movwf	___aodiv@counter^0,c
  2454   001334  EFA6  F009         	goto	l1721
  2455   001338                     l1719:
  2456   001338  90D8               	bcf	status,0,c
  2457   00133A  360B               	rlcf	___aodiv@divisor^0,f,c
  2458   00133C  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2459   00133E  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2460   001340  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2461   001342  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2462   001344  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2463   001346  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2464   001348  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2465   00134A  2A13               	incf	___aodiv@counter^0,f,c
  2466   00134C                     l1721:
  2467   00134C  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2468   00134E  EFAB  F009         	goto	u801
  2469   001352  EFAD  F009         	goto	u800
  2470   001356                     u801:
  2471   001356  EF9C  F009         	goto	l1719
  2472   00135A                     u800:
  2473   00135A                     l1723:
  2474   00135A  90D8               	bcf	status,0,c
  2475   00135C  3615               	rlcf	___aodiv@quotient^0,f,c
  2476   00135E  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2477   001360  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2478   001362  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2479   001364  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2480   001366  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2481   001368  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2482   00136A  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2483   00136C  500B               	movf	___aodiv@divisor^0,w,c
  2484   00136E  5C03               	subwf	___aodiv@dividend^0,w,c
  2485   001370  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2486   001372  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2487   001374  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2488   001376  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2489   001378  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2490   00137A  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2491   00137C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2492   00137E  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2493   001380  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2494   001382  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2495   001384  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2496   001386  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2497   001388  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2498   00138A  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2499   00138C  A0D8               	btfss	status,0,c
  2500   00138E  EFCB  F009         	goto	u811
  2501   001392  EFCD  F009         	goto	u810
  2502   001396                     u811:
  2503   001396  EFDE  F009         	goto	l1731
  2504   00139A                     u810:
  2505   00139A  500B               	movf	___aodiv@divisor^0,w,c
  2506   00139C  5E03               	subwf	___aodiv@dividend^0,f,c
  2507   00139E  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2508   0013A0  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2509   0013A2  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2510   0013A4  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2511   0013A6  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2512   0013A8  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2513   0013AA  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2514   0013AC  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2515   0013AE  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2516   0013B0  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2517   0013B2  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2518   0013B4  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2519   0013B6  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2520   0013B8  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2521   0013BA  8015               	bsf	___aodiv@quotient^0,0,c
  2522   0013BC                     l1731:
  2523   0013BC  90D8               	bcf	status,0,c
  2524   0013BE  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2525   0013C0  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2526   0013C2  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2527   0013C4  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2528   0013C6  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2529   0013C8  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2530   0013CA  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2531   0013CC  320B               	rrcf	___aodiv@divisor^0,f,c
  2532   0013CE  2E13               	decfsz	___aodiv@counter^0,f,c
  2533   0013D0  EFAD  F009         	goto	l1723
  2534   0013D4                     l1735:
  2535   0013D4  5014               	movf	___aodiv@sign^0,w,c
  2536   0013D6  B4D8               	btfsc	status,2,c
  2537   0013D8  EFF0  F009         	goto	u821
  2538   0013DC  EFF2  F009         	goto	u820
  2539   0013E0                     u821:
  2540   0013E0  EF02  F00A         	goto	l1739
  2541   0013E4                     u820:
  2542   0013E4  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2543   0013E6  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2544   0013E8  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2545   0013EA  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2546   0013EC  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2547   0013EE  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2548   0013F0  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2549   0013F2  6C15               	negf	___aodiv@quotient^0,c
  2550   0013F4  0E00               	movlw	0
  2551   0013F6  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2552   0013F8  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2553   0013FA  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2554   0013FC  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2555   0013FE  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2556   001400  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2557   001402  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2558   001404                     l1739:
  2559   001404  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2560   001408  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2561   00140C  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2562   001410  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2563   001414  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2564   001418  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2565   00141C  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2566   001420  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2567   001424  0012               	return		;funcret
  2568   001426                     __end_of___aodiv:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _sendStringSerial4 *****************
  2572 ;; Defined at:
  2573 ;;		line 37 in file "../serial.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  string          2    3[COMRAM] PTR unsigned char 
  2576 ;;		 -> main@readout(50), 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;Total ram usage:        2 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 3
  2595 ;; This function calls:
  2596 ;;		_sendCharSerial4
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text12
  2603   001CB4                     __ptext12:
  2604                           	callstack 0
  2605   001CB4                     _sendStringSerial4:
  2606                           	callstack 27
  2607   001CB4                     
  2608                           ;../serial.c: 40:     while (*string != 0)
  2609   001CB4  EF65  F00E         	goto	l2085
  2610   001CB8                     l2081:
  2611                           
  2612                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  2613   001CB8  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2614   001CBC  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2615   001CC0  50DF               	movf	indf2,w,c
  2616   001CC2  ECE1  F00E         	call	_sendCharSerial4
  2617   001CC6  4A04               	infsnz	sendStringSerial4@string^0,f,c
  2618   001CC8  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  2619   001CCA                     l2085:
  2620                           
  2621                           ;../serial.c: 40:     while (*string != 0)
  2622   001CCA  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2623   001CCE  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2624   001CD2  50DF               	movf	indf2,w,c
  2625   001CD4  A4D8               	btfss	status,2,c
  2626   001CD6  EF6F  F00E         	goto	u1151
  2627   001CDA  EF71  F00E         	goto	u1150
  2628   001CDE                     u1151:
  2629   001CDE  EF5C  F00E         	goto	l2081
  2630   001CE2                     u1150:
  2631   001CE2  0012               	return		;funcret
  2632   001CE4                     __end_of_sendStringSerial4:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function _sendCharSerial4 *****************
  2636 ;; Defined at:
  2637 ;;		line 30 in file "../serial.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  charToSend      1    wreg     unsigned char 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  charToSend      1    2[COMRAM] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;Total ram usage:        1 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 2
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_sendStringSerial4
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text13
  2666   001DC2                     __ptext13:
  2667                           	callstack 0
  2668   001DC2                     _sendCharSerial4:
  2669                           	callstack 27
  2670                           
  2671                           ;incstack = 0
  2672                           ;sendCharSerial4@charToSend stored from wreg
  2673   001DC2  6E03               	movwf	sendCharSerial4@charToSend^0,c
  2674   001DC4                     l339:
  2675   001DC4  010E               	movlb	14	; () banked
  2676   001DC6  A537               	btfss	55,2,b	;volatile
  2677   001DC8  EFE8  F00E         	goto	u1091
  2678   001DCC  EFEA  F00E         	goto	u1090
  2679   001DD0                     u1091:
  2680   001DD0  EFE2  F00E         	goto	l339
  2681   001DD4                     u1090:
  2682   001DD4                     
  2683                           ; BSR set to: 14
  2684                           ;../serial.c: 32:     TX4REG = charToSend;
  2685   001DD4  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2686   001DD8                     
  2687                           ; BSR set to: 14
  2688   001DD8  0012               	return		;funcret
  2689   001DDA                     __end_of_sendCharSerial4:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _initUSART4 *****************
  2693 ;; Defined at:
  2694 ;;		line 5 in file "../serial.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 2
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text14
  2723   001DA4                     __ptext14:
  2724                           	callstack 0
  2725   001DA4                     _initUSART4:
  2726                           	callstack 28
  2727   001DA4                     
  2728                           ;../serial.c: 9:     RC0PPS = 0x12;
  2729   001DA4  0E12               	movlw	18
  2730   001DA6  010E               	movlb	14	; () banked
  2731   001DA8  6F62               	movwf	98,b	;volatile
  2732                           
  2733                           ;../serial.c: 10:     RX4PPS = 0x11;
  2734   001DAA  0E11               	movlw	17
  2735   001DAC  6F15               	movwf	21,b	;volatile
  2736   001DAE                     
  2737                           ; BSR set to: 14
  2738                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2739   001DAE  97E9               	bcf	233,3,b	;volatile
  2740   001DB0                     
  2741                           ; BSR set to: 14
  2742                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  2743   001DB0  95E8               	bcf	232,2,b	;volatile
  2744                           
  2745                           ;../serial.c: 14:     SP4BRGL = 103;
  2746   001DB2  0E67               	movlw	103
  2747   001DB4  6FE5               	movwf	229,b	;volatile
  2748                           
  2749                           ;../serial.c: 15:     SP4BRGH = 0;
  2750   001DB6  0E00               	movlw	0
  2751   001DB8  6FE6               	movwf	230,b	;volatile
  2752   001DBA                     
  2753                           ; BSR set to: 14
  2754                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  2755   001DBA  89E7               	bsf	231,4,b	;volatile
  2756   001DBC                     
  2757                           ; BSR set to: 14
  2758                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  2759   001DBC  8BE8               	bsf	232,5,b	;volatile
  2760   001DBE                     
  2761                           ; BSR set to: 14
  2762                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  2763   001DBE  8FE7               	bsf	231,7,b	;volatile
  2764   001DC0                     
  2765                           ; BSR set to: 14
  2766   001DC0  0012               	return		;funcret
  2767   001DC2                     __end_of_initUSART4:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _initDCmotorsPWM *****************
  2771 ;; Defined at:
  2772 ;;		line 5 in file "../dc_motor.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  PWMperiod       2    2[COMRAM] int 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, prodl, prodh
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;Total ram usage:        2 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 2
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text15
  2801   001BA8                     __ptext15:
  2802                           	callstack 0
  2803   001BA8                     _initDCmotorsPWM:
  2804                           	callstack 28
  2805   001BA8                     
  2806                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2807   001BA8  9485               	bcf	133,2,c	;volatile
  2808                           
  2809                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2810   001BAA  9885               	bcf	133,4,c	;volatile
  2811                           
  2812                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2813   001BAC  9E83               	bcf	131,7,c	;volatile
  2814                           
  2815                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2816   001BAE  9C87               	bcf	135,6,c	;volatile
  2817                           
  2818                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2819   001BB0  947D               	bcf	125,2,c	;volatile
  2820                           
  2821                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2822   001BB2  987D               	bcf	125,4,c	;volatile
  2823                           
  2824                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2825   001BB4  9E7B               	bcf	123,7,c	;volatile
  2826                           
  2827                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2828   001BB6  9C7F               	bcf	127,6,c	;volatile
  2829   001BB8                     
  2830                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  2831   001BB8  50BD               	movf	189,w,c	;volatile
  2832   001BBA  0B8F               	andlw	-113
  2833   001BBC  0930               	iorlw	48
  2834   001BBE  6EBD               	movwf	189,c	;volatile
  2835                           
  2836                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2837   001BC0  0EE0               	movlw	-32
  2838   001BC2  16BE               	andwf	190,f,c	;volatile
  2839                           
  2840                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2841   001BC4  50BF               	movf	191,w,c	;volatile
  2842   001BC6  0BF0               	andlw	-16
  2843   001BC8  0901               	iorlw	1
  2844   001BCA  6EBF               	movwf	191,c	;volatile
  2845   001BCC                     
  2846                           ;../dc_motor.c: 23:     T2PR=PWMperiod * 2000000 - 1;
  2847   001BCC  5003               	movf	initDCmotorsPWM@PWMperiod^0,w,c
  2848   001BCE  0D80               	mullw	-128
  2849   001BD0  04F3               	decf	243,w,c
  2850   001BD2  6EBC               	movwf	188,c	;volatile
  2851   001BD4                     
  2852                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  2853   001BD4  8EBD               	bsf	189,7,c	;volatile
  2854   001BD6                     
  2855                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  2856   001BD6  0E0A               	movlw	10
  2857   001BD8  010E               	movlb	14	; () banked
  2858   001BDA  6F74               	movwf	116,b	;volatile
  2859   001BDC                     
  2860                           ; BSR set to: 14
  2861                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  2862   001BDC  0E0B               	movlw	11
  2863   001BDE  6F69               	movwf	105,b	;volatile
  2864   001BE0                     
  2865                           ; BSR set to: 14
  2866                           ;../dc_motor.c: 29:     PWM6DCH=0;
  2867   001BE0  0E00               	movlw	0
  2868   001BE2  6EA3               	movwf	163,c	;volatile
  2869   001BE4                     
  2870                           ; BSR set to: 14
  2871                           ;../dc_motor.c: 30:     PWM7DCH=0;
  2872   001BE4  0E00               	movlw	0
  2873   001BE6  6EA0               	movwf	160,c	;volatile
  2874   001BE8                     
  2875                           ; BSR set to: 14
  2876                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  2877   001BE8  8EA4               	bsf	164,7,c	;volatile
  2878   001BEA                     
  2879                           ; BSR set to: 14
  2880                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  2881   001BEA  8EA1               	bsf	161,7,c	;volatile
  2882   001BEC                     
  2883                           ; BSR set to: 14
  2884   001BEC  0012               	return		;funcret
  2885   001BEE                     __end_of_initDCmotorsPWM:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _color_read *****************
  2889 ;; Defined at:
  2890 ;;		line 99 in file "../color.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  rgb             2   13[COMRAM] PTR struct RGB_val
  2893 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;Total ram usage:        4 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 5
  2912 ;; This function calls:
  2913 ;;		_color_read_Blue
  2914 ;;		_color_read_Green
  2915 ;;		_color_read_Luminosity
  2916 ;;		_color_read_Red
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text16
  2923   001860                     __ptext16:
  2924                           	callstack 0
  2925   001860                     _color_read:
  2926                           	callstack 25
  2927   001860                     
  2928                           ;../color.c: 99: void color_read(struct RGB_val *rgb);../color.c: 100: {;../color.c: 101
      +                          :     rgb->L = color_read_Luminosity();
  2929   001860  EC11  F00D         	call	_color_read_Luminosity	;wreg free
  2930   001864  C00E  FFD9         	movff	color_read@rgb,fsr2l
  2931   001868  C00F  FFDA         	movff	color_read@rgb+1,fsr2h
  2932   00186C  C007  FFDE         	movff	?_color_read_Luminosity,postinc2
  2933   001870  C008  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  2934   001874                     
  2935                           ;../color.c: 102:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2936   001874  0E09               	movlw	9
  2937   001876  6E11               	movwf	(??_color_read+1)^0,c
  2938   001878  0E1E               	movlw	30
  2939   00187A  6E10               	movwf	??_color_read^0,c
  2940   00187C  0EE4               	movlw	228
  2941   00187E                     u1477:
  2942   00187E  2EE8               	decfsz	wreg,f,c
  2943   001880  D7FE               	bra	u1477
  2944   001882  2E10               	decfsz	??_color_read^0,f,c
  2945   001884  D7FC               	bra	u1477
  2946   001886  2E11               	decfsz	(??_color_read+1)^0,f,c
  2947   001888  D7FA               	bra	u1477
  2948   00188A  D000               	nop2	
  2949   00188C                     
  2950                           ;../color.c: 103:     rgb->R = color_read_Red();
  2951   00188C  ECE9  F00C         	call	_color_read_Red	;wreg free
  2952   001890  EE20 F002          	lfsr	2,2
  2953   001894  500E               	movf	color_read@rgb^0,w,c
  2954   001896  26D9               	addwf	fsr2l,f,c
  2955   001898  500F               	movf	(color_read@rgb+1)^0,w,c
  2956   00189A  22DA               	addwfc	fsr2h,f,c
  2957   00189C  C007  FFDE         	movff	?_color_read_Red,postinc2
  2958   0018A0  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  2959                           
  2960                           ;../color.c: 104:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2961   0018A4  0E09               	movlw	9
  2962   0018A6  6E11               	movwf	(??_color_read+1)^0,c
  2963   0018A8  0E1E               	movlw	30
  2964   0018AA  6E10               	movwf	??_color_read^0,c
  2965   0018AC  0EE4               	movlw	228
  2966   0018AE                     u1487:
  2967   0018AE  2EE8               	decfsz	wreg,f,c
  2968   0018B0  D7FE               	bra	u1487
  2969   0018B2  2E10               	decfsz	??_color_read^0,f,c
  2970   0018B4  D7FC               	bra	u1487
  2971   0018B6  2E11               	decfsz	(??_color_read+1)^0,f,c
  2972   0018B8  D7FA               	bra	u1487
  2973   0018BA  D000               	nop2	
  2974   0018BC                     
  2975                           ;../color.c: 105:     rgb->G = color_read_Green();
  2976   0018BC  EC39  F00D         	call	_color_read_Green	;wreg free
  2977   0018C0  EE20 F004          	lfsr	2,4
  2978   0018C4  500E               	movf	color_read@rgb^0,w,c
  2979   0018C6  26D9               	addwf	fsr2l,f,c
  2980   0018C8  500F               	movf	(color_read@rgb+1)^0,w,c
  2981   0018CA  22DA               	addwfc	fsr2h,f,c
  2982   0018CC  C007  FFDE         	movff	?_color_read_Green,postinc2
  2983   0018D0  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  2984   0018D4                     
  2985                           ;../color.c: 106:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2986   0018D4  0E09               	movlw	9
  2987   0018D6  6E11               	movwf	(??_color_read+1)^0,c
  2988   0018D8  0E1E               	movlw	30
  2989   0018DA  6E10               	movwf	??_color_read^0,c
  2990   0018DC  0EE4               	movlw	228
  2991   0018DE                     u1497:
  2992   0018DE  2EE8               	decfsz	wreg,f,c
  2993   0018E0  D7FE               	bra	u1497
  2994   0018E2  2E10               	decfsz	??_color_read^0,f,c
  2995   0018E4  D7FC               	bra	u1497
  2996   0018E6  2E11               	decfsz	(??_color_read+1)^0,f,c
  2997   0018E8  D7FA               	bra	u1497
  2998   0018EA  D000               	nop2	
  2999                           
  3000                           ;../color.c: 107:     rgb->B = color_read_Blue();
  3001   0018EC  EC61  F00D         	call	_color_read_Blue	;wreg free
  3002   0018F0  EE20 F006          	lfsr	2,6
  3003   0018F4  500E               	movf	color_read@rgb^0,w,c
  3004   0018F6  26D9               	addwf	fsr2l,f,c
  3005   0018F8  500F               	movf	(color_read@rgb+1)^0,w,c
  3006   0018FA  22DA               	addwfc	fsr2h,f,c
  3007   0018FC  C007  FFDE         	movff	?_color_read_Blue,postinc2
  3008   001900  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  3009   001904  0012               	return		;funcret
  3010   001906                     __end_of_color_read:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function _color_read_Red *****************
  3014 ;; Defined at:
  3015 ;;		line 57 in file "../color.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  tmp             2   11[COMRAM] unsigned int 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  2    6[COMRAM] unsigned int 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;Total ram usage:        7 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 4
  3036 ;; This function calls:
  3037 ;;		_I2C_2_Master_Read
  3038 ;;		_I2C_2_Master_RepStart
  3039 ;;		_I2C_2_Master_Start
  3040 ;;		_I2C_2_Master_Stop
  3041 ;;		_I2C_2_Master_Write
  3042 ;; This function is called by:
  3043 ;;		_color_read
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text17
  3048   0019D2                     __ptext17:
  3049                           	callstack 0
  3050   0019D2                     _color_read_Red:
  3051                           	callstack 25
  3052   0019D2                     
  3053                           ;../color.c: 59:  unsigned int tmp;;../color.c: 60:  I2C_2_Master_Start();
  3054   0019D2  EC03  F00F         	call	_I2C_2_Master_Start	;wreg free
  3055                           
  3056                           ;../color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3057   0019D6  0E52               	movlw	82
  3058   0019D8  ECED  F00E         	call	_I2C_2_Master_Write
  3059                           
  3060                           ;../color.c: 62:  I2C_2_Master_Write(0xA0 | 0x16);
  3061   0019DC  0EB6               	movlw	182
  3062   0019DE  ECED  F00E         	call	_I2C_2_Master_Write
  3063                           
  3064                           ;../color.c: 63:  I2C_2_Master_RepStart();
  3065   0019E2  ECF9  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3066                           
  3067                           ;../color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3068   0019E6  0E53               	movlw	83
  3069   0019E8  ECED  F00E         	call	_I2C_2_Master_Write
  3070                           
  3071                           ;../color.c: 65:  tmp=I2C_2_Master_Read(1);
  3072   0019EC  0E01               	movlw	1
  3073   0019EE  EC19  F00E         	call	_I2C_2_Master_Read
  3074   0019F2  6E09               	movwf	??_color_read_Red^0,c
  3075   0019F4  5009               	movf	??_color_read_Red^0,w,c
  3076   0019F6  6E0C               	movwf	color_read_Red@tmp^0,c
  3077   0019F8  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  3078                           
  3079                           ;../color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3080   0019FA  0E00               	movlw	0
  3081   0019FC  EC19  F00E         	call	_I2C_2_Master_Read
  3082   001A00  6E09               	movwf	??_color_read_Red^0,c
  3083   001A02  5009               	movf	??_color_read_Red^0,w,c
  3084   001A04  6E0B               	movwf	(??_color_read_Red+2)^0,c
  3085   001A06  6A0A               	clrf	(??_color_read_Red+1)^0,c
  3086   001A08  500C               	movf	color_read_Red@tmp^0,w,c
  3087   001A0A  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  3088   001A0C  6E0C               	movwf	color_read_Red@tmp^0,c
  3089   001A0E  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  3090   001A10  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  3091   001A12  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  3092                           
  3093                           ;../color.c: 67:  I2C_2_Master_Stop();
  3094   001A14  ECFE  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3095   001A18                     
  3096                           ;../color.c: 68:  return tmp;
  3097   001A18  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  3098   001A1C  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3099   001A20  0012               	return		;funcret
  3100   001A22                     __end_of_color_read_Red:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _color_read_Luminosity *****************
  3104 ;; Defined at:
  3105 ;;		line 43 in file "../color.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  tmp             2   11[COMRAM] unsigned int 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    6[COMRAM] unsigned int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;Total ram usage:        7 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 4
  3126 ;; This function calls:
  3127 ;;		_I2C_2_Master_Read
  3128 ;;		_I2C_2_Master_RepStart
  3129 ;;		_I2C_2_Master_Start
  3130 ;;		_I2C_2_Master_Stop
  3131 ;;		_I2C_2_Master_Write
  3132 ;; This function is called by:
  3133 ;;		_color_read
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text18
  3138   001A22                     __ptext18:
  3139                           	callstack 0
  3140   001A22                     _color_read_Luminosity:
  3141                           	callstack 25
  3142   001A22                     
  3143                           ;../color.c: 45:  unsigned int tmp;;../color.c: 46:  I2C_2_Master_Start();
  3144   001A22  EC03  F00F         	call	_I2C_2_Master_Start	;wreg free
  3145                           
  3146                           ;../color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3147   001A26  0E52               	movlw	82
  3148   001A28  ECED  F00E         	call	_I2C_2_Master_Write
  3149                           
  3150                           ;../color.c: 48:  I2C_2_Master_Write(0xA0 | 0x14);
  3151   001A2C  0EB4               	movlw	180
  3152   001A2E  ECED  F00E         	call	_I2C_2_Master_Write
  3153                           
  3154                           ;../color.c: 49:  I2C_2_Master_RepStart();
  3155   001A32  ECF9  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3156                           
  3157                           ;../color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3158   001A36  0E53               	movlw	83
  3159   001A38  ECED  F00E         	call	_I2C_2_Master_Write
  3160                           
  3161                           ;../color.c: 51:  tmp=I2C_2_Master_Read(1);
  3162   001A3C  0E01               	movlw	1
  3163   001A3E  EC19  F00E         	call	_I2C_2_Master_Read
  3164   001A42  6E09               	movwf	??_color_read_Luminosity^0,c
  3165   001A44  5009               	movf	??_color_read_Luminosity^0,w,c
  3166   001A46  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3167   001A48  6A0D               	clrf	(color_read_Luminosity@tmp+1)^0,c
  3168                           
  3169                           ;../color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3170   001A4A  0E00               	movlw	0
  3171   001A4C  EC19  F00E         	call	_I2C_2_Master_Read
  3172   001A50  6E09               	movwf	??_color_read_Luminosity^0,c
  3173   001A52  5009               	movf	??_color_read_Luminosity^0,w,c
  3174   001A54  6E0B               	movwf	(??_color_read_Luminosity+2)^0,c
  3175   001A56  6A0A               	clrf	(??_color_read_Luminosity+1)^0,c
  3176   001A58  500C               	movf	color_read_Luminosity@tmp^0,w,c
  3177   001A5A  100A               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  3178   001A5C  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3179   001A5E  500D               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  3180   001A60  100B               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  3181   001A62  6E0D               	movwf	(color_read_Luminosity@tmp+1)^0,c
  3182                           
  3183                           ;../color.c: 53:  I2C_2_Master_Stop();
  3184   001A64  ECFE  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3185   001A68                     
  3186                           ;../color.c: 54:  return tmp;
  3187   001A68  C00C  F007         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  3188   001A6C  C00D  F008         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  3189   001A70  0012               	return		;funcret
  3190   001A72                     __end_of_color_read_Luminosity:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _color_read_Green *****************
  3194 ;; Defined at:
  3195 ;;		line 71 in file "../color.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  tmp             2   11[COMRAM] unsigned int 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  2    6[COMRAM] unsigned int 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;Total ram usage:        7 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; Hardware stack levels required when called: 4
  3216 ;; This function calls:
  3217 ;;		_I2C_2_Master_Read
  3218 ;;		_I2C_2_Master_RepStart
  3219 ;;		_I2C_2_Master_Start
  3220 ;;		_I2C_2_Master_Stop
  3221 ;;		_I2C_2_Master_Write
  3222 ;; This function is called by:
  3223 ;;		_color_read
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text19
  3228   001A72                     __ptext19:
  3229                           	callstack 0
  3230   001A72                     _color_read_Green:
  3231                           	callstack 25
  3232   001A72                     
  3233                           ;../color.c: 73:  unsigned int tmp;;../color.c: 74:  I2C_2_Master_Start();
  3234   001A72  EC03  F00F         	call	_I2C_2_Master_Start	;wreg free
  3235                           
  3236                           ;../color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3237   001A76  0E52               	movlw	82
  3238   001A78  ECED  F00E         	call	_I2C_2_Master_Write
  3239                           
  3240                           ;../color.c: 76:  I2C_2_Master_Write(0xA0 | 0x18);
  3241   001A7C  0EB8               	movlw	184
  3242   001A7E  ECED  F00E         	call	_I2C_2_Master_Write
  3243                           
  3244                           ;../color.c: 77:  I2C_2_Master_RepStart();
  3245   001A82  ECF9  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3246                           
  3247                           ;../color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3248   001A86  0E53               	movlw	83
  3249   001A88  ECED  F00E         	call	_I2C_2_Master_Write
  3250                           
  3251                           ;../color.c: 79:  tmp=I2C_2_Master_Read(1);
  3252   001A8C  0E01               	movlw	1
  3253   001A8E  EC19  F00E         	call	_I2C_2_Master_Read
  3254   001A92  6E09               	movwf	??_color_read_Green^0,c
  3255   001A94  5009               	movf	??_color_read_Green^0,w,c
  3256   001A96  6E0C               	movwf	color_read_Green@tmp^0,c
  3257   001A98  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  3258                           
  3259                           ;../color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3260   001A9A  0E00               	movlw	0
  3261   001A9C  EC19  F00E         	call	_I2C_2_Master_Read
  3262   001AA0  6E09               	movwf	??_color_read_Green^0,c
  3263   001AA2  5009               	movf	??_color_read_Green^0,w,c
  3264   001AA4  6E0B               	movwf	(??_color_read_Green+2)^0,c
  3265   001AA6  6A0A               	clrf	(??_color_read_Green+1)^0,c
  3266   001AA8  500C               	movf	color_read_Green@tmp^0,w,c
  3267   001AAA  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  3268   001AAC  6E0C               	movwf	color_read_Green@tmp^0,c
  3269   001AAE  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  3270   001AB0  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  3271   001AB2  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  3272                           
  3273                           ;../color.c: 81:  I2C_2_Master_Stop();
  3274   001AB4  ECFE  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3275   001AB8                     
  3276                           ;../color.c: 82:  return tmp;
  3277   001AB8  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  3278   001ABC  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3279   001AC0  0012               	return		;funcret
  3280   001AC2                     __end_of_color_read_Green:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function _color_read_Blue *****************
  3284 ;; Defined at:
  3285 ;;		line 85 in file "../color.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  tmp             2   11[COMRAM] unsigned int 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2    6[COMRAM] unsigned int 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;Total ram usage:        7 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 4
  3306 ;; This function calls:
  3307 ;;		_I2C_2_Master_Read
  3308 ;;		_I2C_2_Master_RepStart
  3309 ;;		_I2C_2_Master_Start
  3310 ;;		_I2C_2_Master_Stop
  3311 ;;		_I2C_2_Master_Write
  3312 ;; This function is called by:
  3313 ;;		_color_read
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text20
  3318   001AC2                     __ptext20:
  3319                           	callstack 0
  3320   001AC2                     _color_read_Blue:
  3321                           	callstack 25
  3322   001AC2                     
  3323                           ;../color.c: 87:  unsigned int tmp;;../color.c: 88:  I2C_2_Master_Start();
  3324   001AC2  EC03  F00F         	call	_I2C_2_Master_Start	;wreg free
  3325                           
  3326                           ;../color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  3327   001AC6  0E52               	movlw	82
  3328   001AC8  ECED  F00E         	call	_I2C_2_Master_Write
  3329                           
  3330                           ;../color.c: 90:  I2C_2_Master_Write(0xA0 | 0x1A);
  3331   001ACC  0EBA               	movlw	186
  3332   001ACE  ECED  F00E         	call	_I2C_2_Master_Write
  3333                           
  3334                           ;../color.c: 91:  I2C_2_Master_RepStart();
  3335   001AD2  ECF9  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3336                           
  3337                           ;../color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  3338   001AD6  0E53               	movlw	83
  3339   001AD8  ECED  F00E         	call	_I2C_2_Master_Write
  3340                           
  3341                           ;../color.c: 93:  tmp=I2C_2_Master_Read(1);
  3342   001ADC  0E01               	movlw	1
  3343   001ADE  EC19  F00E         	call	_I2C_2_Master_Read
  3344   001AE2  6E09               	movwf	??_color_read_Blue^0,c
  3345   001AE4  5009               	movf	??_color_read_Blue^0,w,c
  3346   001AE6  6E0C               	movwf	color_read_Blue@tmp^0,c
  3347   001AE8  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  3348                           
  3349                           ;../color.c: 94:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3350   001AEA  0E00               	movlw	0
  3351   001AEC  EC19  F00E         	call	_I2C_2_Master_Read
  3352   001AF0  6E09               	movwf	??_color_read_Blue^0,c
  3353   001AF2  5009               	movf	??_color_read_Blue^0,w,c
  3354   001AF4  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  3355   001AF6  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  3356   001AF8  500C               	movf	color_read_Blue@tmp^0,w,c
  3357   001AFA  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  3358   001AFC  6E0C               	movwf	color_read_Blue@tmp^0,c
  3359   001AFE  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  3360   001B00  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  3361   001B02  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  3362                           
  3363                           ;../color.c: 95:  I2C_2_Master_Stop();
  3364   001B04  ECFE  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3365   001B08                     
  3366                           ;../color.c: 96:  return tmp;
  3367   001B08  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  3368   001B0C  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3369   001B10  0012               	return		;funcret
  3370   001B12                     __end_of_color_read_Blue:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _I2C_2_Master_RepStart *****************
  3374 ;; Defined at:
  3375 ;;		line 33 in file "../i2c.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; Hardware stack levels required when called: 3
  3396 ;; This function calls:
  3397 ;;		_I2C_2_Master_Idle
  3398 ;; This function is called by:
  3399 ;;		_color_read_Luminosity
  3400 ;;		_color_read_Red
  3401 ;;		_color_read_Green
  3402 ;;		_color_read_Blue
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text21
  3407   001DF2                     __ptext21:
  3408                           	callstack 0
  3409   001DF2                     _I2C_2_Master_RepStart:
  3410                           	callstack 25
  3411   001DF2                     
  3412                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3413   001DF2  EC9E  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3414   001DF6                     
  3415                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3416   001DF6  010E               	movlb	14	; () banked
  3417   001DF8  83DA               	bsf	218,1,b	;volatile
  3418   001DFA                     
  3419                           ; BSR set to: 14
  3420   001DFA  0012               	return		;funcret
  3421   001DFC                     __end_of_I2C_2_Master_RepStart:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _I2C_2_Master_Read *****************
  3425 ;; Defined at:
  3426 ;;		line 51 in file "../i2c.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  ack             1    wreg     unsigned char 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  ack             1    4[COMRAM] unsigned char 
  3431 ;;  tmp             1    5[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      unsigned char 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:        3 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 3
  3448 ;; This function calls:
  3449 ;;		_I2C_2_Master_Idle
  3450 ;; This function is called by:
  3451 ;;		_color_read_Luminosity
  3452 ;;		_color_read_Red
  3453 ;;		_color_read_Green
  3454 ;;		_color_read_Blue
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text22
  3459   001C32                     __ptext22:
  3460                           	callstack 0
  3461   001C32                     _I2C_2_Master_Read:
  3462                           	callstack 25
  3463                           
  3464                           ; BSR set to: 14
  3465                           ;incstack = 0
  3466                           ;I2C_2_Master_Read@ack stored from wreg
  3467   001C32  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  3468   001C34                     
  3469                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  3470   001C34  EC9E  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3471   001C38                     
  3472                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3473   001C38  010E               	movlb	14	; () banked
  3474   001C3A  87DA               	bsf	218,3,b	;volatile
  3475                           
  3476                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  3477   001C3C  EC9E  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3478   001C40                     
  3479                           ;../i2c.c: 57:   tmp = SSP2BUF;
  3480   001C40  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3481                           
  3482                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  3483   001C44  EC9E  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3484   001C48                     
  3485                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3486   001C48  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  3487   001C4A  B4D8               	btfsc	status,2,c
  3488   001C4C  EF2A  F00E         	goto	u1041
  3489   001C50  EF2E  F00E         	goto	u1040
  3490   001C54                     u1041:
  3491   001C54  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3492   001C56  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  3493   001C58  EF2F  F00E         	goto	u1058
  3494   001C5C                     u1040:
  3495   001C5C  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3496   001C5E                     u1058:
  3497   001C5E  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  3498   001C60  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  3499   001C62  010E               	movlb	14	; () banked
  3500   001C64  51DA               	movf	218,w,b	;volatile
  3501   001C66  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3502   001C68  0BDF               	andlw	-33
  3503   001C6A  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3504   001C6C  6FDA               	movwf	218,b	;volatile
  3505   001C6E                     
  3506                           ; BSR set to: 14
  3507                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3508   001C6E  89DA               	bsf	218,4,b	;volatile
  3509   001C70                     
  3510                           ; BSR set to: 14
  3511                           ;../i2c.c: 61:   return tmp;
  3512   001C70  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  3513   001C72                     
  3514                           ; BSR set to: 14
  3515   001C72  0012               	return		;funcret
  3516   001C74                     __end_of_I2C_2_Master_Read:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _color_processor_easy *****************
  3520 ;; Defined at:
  3521 ;;		line 122 in file "../color.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  3524 ;;		 -> main@RGB_recorded(8), 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  b               2   10[COMRAM] unsigned int 
  3527 ;;  a               2    8[COMRAM] unsigned int 
  3528 ;;  c               2    6[COMRAM] unsigned int 
  3529 ;;  color           2    4[COMRAM] unsigned int 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2    2[COMRAM] unsigned int 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;Total ram usage:       10 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 2
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text23
  3554   0017A2                     __ptext23:
  3555                           	callstack 0
  3556   0017A2                     _color_processor_easy:
  3557                           	callstack 28
  3558   0017A2                     
  3559                           ;../color.c: 122: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 123
      +                          : {;../color.c: 124:     unsigned int a = rgb->R;
  3560   0017A2  EE20 F002          	lfsr	2,2
  3561   0017A6  5003               	movf	color_processor_easy@rgb^0,w,c
  3562   0017A8  26D9               	addwf	fsr2l,f,c
  3563   0017AA  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3564   0017AC  22DA               	addwfc	fsr2h,f,c
  3565   0017AE  CFDE F009          	movff	postinc2,color_processor_easy@a
  3566   0017B2  CFDD F00A          	movff	postdec2,color_processor_easy@a+1
  3567                           
  3568                           ;../color.c: 125:     unsigned int b = rgb->G;
  3569   0017B6  EE20 F004          	lfsr	2,4
  3570   0017BA  5003               	movf	color_processor_easy@rgb^0,w,c
  3571   0017BC  26D9               	addwf	fsr2l,f,c
  3572   0017BE  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3573   0017C0  22DA               	addwfc	fsr2h,f,c
  3574   0017C2  CFDE F00B          	movff	postinc2,color_processor_easy@b
  3575   0017C6  CFDD F00C          	movff	postdec2,color_processor_easy@b+1
  3576                           
  3577                           ;../color.c: 126:     unsigned int c = rgb->B;
  3578   0017CA  EE20 F006          	lfsr	2,6
  3579   0017CE  5003               	movf	color_processor_easy@rgb^0,w,c
  3580   0017D0  26D9               	addwf	fsr2l,f,c
  3581   0017D2  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3582   0017D4  22DA               	addwfc	fsr2h,f,c
  3583   0017D6  CFDE F007          	movff	postinc2,color_processor_easy@c
  3584   0017DA  CFDD F008          	movff	postdec2,color_processor_easy@c+1
  3585   0017DE                     
  3586                           ;../color.c: 127:     unsigned int color;;../color.c: 128:     if (a>=b & a>=c){color=1;
      +                          }
  3587   0017DE  500B               	movf	color_processor_easy@b^0,w,c
  3588   0017E0  5C09               	subwf	color_processor_easy@a^0,w,c
  3589   0017E2  500C               	movf	(color_processor_easy@b+1)^0,w,c
  3590   0017E4  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3591   0017E6  A0D8               	btfss	status,0,c
  3592   0017E8  EFF8  F00B         	goto	u1111
  3593   0017EC  EFFA  F00B         	goto	u1110
  3594   0017F0                     u1111:
  3595   0017F0  EF0B  F00C         	goto	l2013
  3596   0017F4                     u1110:
  3597   0017F4  5007               	movf	color_processor_easy@c^0,w,c
  3598   0017F6  5C09               	subwf	color_processor_easy@a^0,w,c
  3599   0017F8  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3600   0017FA  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3601   0017FC  A0D8               	btfss	status,0,c
  3602   0017FE  EF03  F00C         	goto	u1121
  3603   001802  EF05  F00C         	goto	u1120
  3604   001806                     u1121:
  3605   001806  EF0B  F00C         	goto	l2013
  3606   00180A                     u1120:
  3607   00180A  0E00               	movlw	0
  3608   00180C  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3609   00180E  0E01               	movlw	1
  3610   001810  6E05               	movwf	color_processor_easy@color^0,c
  3611   001812  EF2B  F00C         	goto	l2021
  3612   001816                     l2013:
  3613   001816  5009               	movf	color_processor_easy@a^0,w,c
  3614   001818  5C0B               	subwf	color_processor_easy@b^0,w,c
  3615   00181A  500A               	movf	(color_processor_easy@a+1)^0,w,c
  3616   00181C  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3617   00181E  A0D8               	btfss	status,0,c
  3618   001820  EF14  F00C         	goto	u1131
  3619   001824  EF16  F00C         	goto	u1130
  3620   001828                     u1131:
  3621   001828  EF27  F00C         	goto	l2019
  3622   00182C                     u1130:
  3623   00182C  5007               	movf	color_processor_easy@c^0,w,c
  3624   00182E  5C0B               	subwf	color_processor_easy@b^0,w,c
  3625   001830  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3626   001832  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3627   001834  A0D8               	btfss	status,0,c
  3628   001836  EF1F  F00C         	goto	u1141
  3629   00183A  EF21  F00C         	goto	u1140
  3630   00183E                     u1141:
  3631   00183E  EF27  F00C         	goto	l2019
  3632   001842                     u1140:
  3633   001842  0E00               	movlw	0
  3634   001844  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3635   001846  0E02               	movlw	2
  3636   001848  6E05               	movwf	color_processor_easy@color^0,c
  3637   00184A  EF2B  F00C         	goto	l2021
  3638   00184E                     l2019:
  3639   00184E  0E00               	movlw	0
  3640   001850  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3641   001852  0E03               	movlw	3
  3642   001854  6E05               	movwf	color_processor_easy@color^0,c
  3643   001856                     l2021:
  3644                           
  3645                           ;../color.c: 131:     return color;
  3646   001856  C005  F003         	movff	color_processor_easy@color,?_color_processor_easy
  3647   00185A  C006  F004         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  3648   00185E  0012               	return		;funcret
  3649   001860                     __end_of_color_processor_easy:
  3650                           	callstack 0
  3651                           
  3652 ;; *************** function _color_click_init *****************
  3653 ;; Defined at:
  3654 ;;		line 5 in file "../color.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;Total ram usage:        1 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 5
  3675 ;; This function calls:
  3676 ;;		_I2C_2_Master_Init
  3677 ;;		_color_writetoaddr
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text24
  3684   001B60                     __ptext24:
  3685                           	callstack 0
  3686   001B60                     _color_click_init:
  3687                           	callstack 25
  3688   001B60                     
  3689                           ;../color.c: 8:     I2C_2_Master_Init();
  3690   001B60  EC89  F00E         	call	_I2C_2_Master_Init	;wreg free
  3691   001B64                     
  3692                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  3693   001B64  0E01               	movlw	1
  3694   001B66  6E05               	movwf	color_writetoaddr@value^0,c
  3695   001B68  0E00               	movlw	0
  3696   001B6A  ECB2  F00E         	call	_color_writetoaddr
  3697   001B6E                     
  3698                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3699   001B6E  0E3F               	movlw	63
  3700   001B70  6E07               	movwf	??_color_click_init^0,c
  3701   001B72  0E55               	movlw	85
  3702   001B74                     u1507:
  3703   001B74  2EE8               	decfsz	wreg,f,c
  3704   001B76  D7FE               	bra	u1507
  3705   001B78  2E07               	decfsz	??_color_click_init^0,f,c
  3706   001B7A  D7FC               	bra	u1507
  3707   001B7C  F000               	nop	
  3708   001B7E                     
  3709                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  3710   001B7E  0E03               	movlw	3
  3711   001B80  6E05               	movwf	color_writetoaddr@value^0,c
  3712   001B82  0E00               	movlw	0
  3713   001B84  ECB2  F00E         	call	_color_writetoaddr
  3714   001B88                     
  3715                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3716   001B88  0ED5               	movlw	213
  3717   001B8A  6E05               	movwf	color_writetoaddr@value^0,c
  3718   001B8C  0E01               	movlw	1
  3719   001B8E  ECB2  F00E         	call	_color_writetoaddr
  3720   001B92                     
  3721                           ;../color.c: 21:     TRISHbits.TRISH1 = 0;
  3722   001B92  9288               	bcf	136,1,c	;volatile
  3723   001B94                     
  3724                           ;../color.c: 22:     TRISDbits.TRISD3 = 0;
  3725   001B94  9684               	bcf	132,3,c	;volatile
  3726   001B96                     
  3727                           ;../color.c: 23:     TRISDbits.TRISD4 = 0;
  3728   001B96  9884               	bcf	132,4,c	;volatile
  3729   001B98                     
  3730                           ;../color.c: 24:     TRISHbits.TRISH0 = 0;
  3731   001B98  9088               	bcf	136,0,c	;volatile
  3732   001B9A                     
  3733                           ;../color.c: 25:     TRISFbits.TRISF0 = 0;
  3734   001B9A  9086               	bcf	134,0,c	;volatile
  3735   001B9C                     
  3736                           ;../color.c: 27:     LATHbits.LATH1 = 1;
  3737   001B9C  8280               	bsf	128,1,c	;volatile
  3738   001B9E                     
  3739                           ;../color.c: 28:     LATDbits.LATD3 = 1;
  3740   001B9E  867C               	bsf	124,3,c	;volatile
  3741   001BA0                     
  3742                           ;../color.c: 29:     LATDbits.LATD4 = 1;
  3743   001BA0  887C               	bsf	124,4,c	;volatile
  3744   001BA2                     
  3745                           ;../color.c: 30:     LATHbits.LATH0 = 1;
  3746   001BA2  8080               	bsf	128,0,c	;volatile
  3747   001BA4                     
  3748                           ;../color.c: 31:     LATFbits.LATF0 = 1;
  3749   001BA4  807E               	bsf	126,0,c	;volatile
  3750   001BA6  0012               	return		;funcret
  3751   001BA8                     __end_of_color_click_init:
  3752                           	callstack 0
  3753                           
  3754 ;; *************** function _color_writetoaddr *****************
  3755 ;; Defined at:
  3756 ;;		line 34 in file "../color.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  address         1    wreg     unsigned char 
  3759 ;;  value           1    4[COMRAM] unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  address         1    5[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3771 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 4
  3778 ;; This function calls:
  3779 ;;		_I2C_2_Master_Start
  3780 ;;		_I2C_2_Master_Stop
  3781 ;;		_I2C_2_Master_Write
  3782 ;; This function is called by:
  3783 ;;		_color_click_init
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text25
  3788   001D64                     __ptext25:
  3789                           	callstack 0
  3790   001D64                     _color_writetoaddr:
  3791                           	callstack 25
  3792                           
  3793                           ;incstack = 0
  3794                           ;color_writetoaddr@address stored from wreg
  3795   001D64  6E06               	movwf	color_writetoaddr@address^0,c
  3796   001D66                     
  3797                           ;../color.c: 34: void color_writetoaddr(char address, char value);../color.c: 35: {;../c
      +                          olor.c: 36:     I2C_2_Master_Start();
  3798   001D66  EC03  F00F         	call	_I2C_2_Master_Start	;wreg free
  3799                           
  3800                           ;../color.c: 37:     I2C_2_Master_Write(0x52 | 0x00);
  3801   001D6A  0E52               	movlw	82
  3802   001D6C  ECED  F00E         	call	_I2C_2_Master_Write
  3803                           
  3804                           ;../color.c: 38:     I2C_2_Master_Write(0x80 | address);
  3805   001D70  5006               	movf	color_writetoaddr@address^0,w,c
  3806   001D72  0980               	iorlw	128
  3807   001D74  ECED  F00E         	call	_I2C_2_Master_Write
  3808                           
  3809                           ;../color.c: 39:     I2C_2_Master_Write(value);
  3810   001D78  5005               	movf	color_writetoaddr@value^0,w,c
  3811   001D7A  ECED  F00E         	call	_I2C_2_Master_Write
  3812                           
  3813                           ;../color.c: 40:     I2C_2_Master_Stop();
  3814   001D7E  ECFE  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3815   001D82  0012               	return		;funcret
  3816   001D84                     __end_of_color_writetoaddr:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _I2C_2_Master_Write *****************
  3820 ;; Defined at:
  3821 ;;		line 45 in file "../i2c.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  data_byte       1    wreg     unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  data_byte       1    3[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;Total ram usage:        1 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 3
  3842 ;; This function calls:
  3843 ;;		_I2C_2_Master_Idle
  3844 ;; This function is called by:
  3845 ;;		_color_writetoaddr
  3846 ;;		_color_read_Luminosity
  3847 ;;		_color_read_Red
  3848 ;;		_color_read_Green
  3849 ;;		_color_read_Blue
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text26
  3854   001DDA                     __ptext26:
  3855                           	callstack 0
  3856   001DDA                     _I2C_2_Master_Write:
  3857                           	callstack 25
  3858                           
  3859                           ;incstack = 0
  3860                           ;I2C_2_Master_Write@data_byte stored from wreg
  3861   001DDA  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  3862   001DDC                     
  3863                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  3864   001DDC  EC9E  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3865   001DE0                     
  3866                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  3867   001DE0  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3868   001DE4  0012               	return		;funcret
  3869   001DE6                     __end_of_I2C_2_Master_Write:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _I2C_2_Master_Stop *****************
  3873 ;; Defined at:
  3874 ;;		line 39 in file "../i2c.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;Total ram usage:        0 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 3
  3895 ;; This function calls:
  3896 ;;		_I2C_2_Master_Idle
  3897 ;; This function is called by:
  3898 ;;		_color_writetoaddr
  3899 ;;		_color_read_Luminosity
  3900 ;;		_color_read_Red
  3901 ;;		_color_read_Green
  3902 ;;		_color_read_Blue
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text27
  3907   001DFC                     __ptext27:
  3908                           	callstack 0
  3909   001DFC                     _I2C_2_Master_Stop:
  3910                           	callstack 25
  3911   001DFC                     
  3912                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  3913   001DFC  EC9E  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3914   001E00                     
  3915                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3916   001E00  010E               	movlb	14	; () banked
  3917   001E02  85DA               	bsf	218,2,b	;volatile
  3918   001E04                     
  3919                           ; BSR set to: 14
  3920   001E04  0012               	return		;funcret
  3921   001E06                     __end_of_I2C_2_Master_Stop:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function _I2C_2_Master_Start *****************
  3925 ;; Defined at:
  3926 ;;		line 27 in file "../i2c.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;Total ram usage:        0 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 3
  3947 ;; This function calls:
  3948 ;;		_I2C_2_Master_Idle
  3949 ;; This function is called by:
  3950 ;;		_color_writetoaddr
  3951 ;;		_color_read_Luminosity
  3952 ;;		_color_read_Red
  3953 ;;		_color_read_Green
  3954 ;;		_color_read_Blue
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text28
  3959   001E06                     __ptext28:
  3960                           	callstack 0
  3961   001E06                     _I2C_2_Master_Start:
  3962                           	callstack 25
  3963   001E06                     
  3964                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  3965   001E06  EC9E  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3966   001E0A                     
  3967                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3968   001E0A  010E               	movlb	14	; () banked
  3969   001E0C  81DA               	bsf	218,0,b	;volatile
  3970   001E0E                     
  3971                           ; BSR set to: 14
  3972   001E0E  0012               	return		;funcret
  3973   001E10                     __end_of_I2C_2_Master_Start:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function _I2C_2_Master_Idle *****************
  3977 ;; Defined at:
  3978 ;;		line 22 in file "../i2c.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;Total ram usage:        1 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 2
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_I2C_2_Master_Start
  4003 ;;		_I2C_2_Master_RepStart
  4004 ;;		_I2C_2_Master_Stop
  4005 ;;		_I2C_2_Master_Write
  4006 ;;		_I2C_2_Master_Read
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text29
  4011   001D3C                     __ptext29:
  4012                           	callstack 0
  4013   001D3C                     _I2C_2_Master_Idle:
  4014                           	callstack 25
  4015   001D3C                     l93:
  4016   001D3C  010E               	movlb	14	; () banked
  4017   001D3E  B5D8               	btfsc	216,2,b	;volatile
  4018   001D40  EFA4  F00E         	goto	u921
  4019   001D44  EFA6  F00E         	goto	u920
  4020   001D48                     u921:
  4021   001D48  EF9E  F00E         	goto	l93
  4022   001D4C                     u920:
  4023   001D4C                     
  4024                           ; BSR set to: 14
  4025   001D4C  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4026   001D50  0E1F               	movlw	31
  4027   001D52  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  4028   001D54  A4D8               	btfss	status,2,c
  4029   001D56  EFAF  F00E         	goto	u931
  4030   001D5A  EFB1  F00E         	goto	u930
  4031   001D5E                     u931:
  4032   001D5E  EF9E  F00E         	goto	l93
  4033   001D62                     u930:
  4034   001D62                     
  4035                           ; BSR set to: 14
  4036   001D62  0012               	return		;funcret
  4037   001D64                     __end_of_I2C_2_Master_Idle:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function _I2C_2_Master_Init *****************
  4041 ;; Defined at:
  4042 ;;		line 4 in file "../i2c.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 2
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_color_click_init
  4067 ;;		_main
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text30
  4072   001D12                     __ptext30:
  4073                           	callstack 0
  4074   001D12                     _I2C_2_Master_Init:
  4075                           	callstack 27
  4076   001D12                     
  4077                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4078   001D12  010E               	movlb	14	; () banked
  4079   001D14  51D9               	movf	217,w,b	;volatile
  4080   001D16  0BF0               	andlw	-16
  4081   001D18  0908               	iorlw	8
  4082   001D1A  6FD9               	movwf	217,b	;volatile
  4083   001D1C                     
  4084                           ; BSR set to: 14
  4085                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4086   001D1C  8BD9               	bsf	217,5,b	;volatile
  4087                           
  4088                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4089   001D1E  0E9F               	movlw	159
  4090   001D20  6FD6               	movwf	214,b	;volatile
  4091   001D22                     
  4092                           ; BSR set to: 14
  4093                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4094   001D22  8A84               	bsf	132,5,c	;volatile
  4095   001D24                     
  4096                           ; BSR set to: 14
  4097                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4098   001D24  8C84               	bsf	132,6,c	;volatile
  4099   001D26                     
  4100                           ; BSR set to: 14
  4101                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4102   001D26  9BA7               	bcf	167,5,b	;volatile
  4103   001D28                     
  4104                           ; BSR set to: 14
  4105                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4106   001D28  9DA7               	bcf	167,6,b	;volatile
  4107                           
  4108                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  4109   001D2A  0E1D               	movlw	29
  4110   001D2C  6F1D               	movwf	29,b	;volatile
  4111                           
  4112                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  4113   001D2E  0E1E               	movlw	30
  4114   001D30  6F1C               	movwf	28,b	;volatile
  4115                           
  4116                           ;../i2c.c: 18:   RD5PPS=0x1C;
  4117   001D32  0E1C               	movlw	28
  4118   001D34  6F6F               	movwf	111,b	;volatile
  4119                           
  4120                           ;../i2c.c: 19:   RD6PPS=0x1B;
  4121   001D36  0E1B               	movlw	27
  4122   001D38  6F70               	movwf	112,b	;volatile
  4123   001D3A                     
  4124                           ; BSR set to: 14
  4125   001D3A  0012               	return		;funcret
  4126   001D3C                     __end_of_I2C_2_Master_Init:
  4127                           	callstack 0
  4128                           
  4129 ;; *************** function _Timer0_init *****************
  4130 ;; Defined at:
  4131 ;;		line 40 in file "../rc_servo.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 2
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text31
  4160   001D84                     __ptext31:
  4161                           	callstack 0
  4162   001D84                     _Timer0_init:
  4163                           	callstack 28
  4164   001D84                     
  4165                           ;../rc_servo.c: 42:     T0CON1bits.T0CS=0b010;
  4166   001D84  50D6               	movf	214,w,c	;volatile
  4167   001D86  0B1F               	andlw	-225
  4168   001D88  0940               	iorlw	64
  4169   001D8A  6ED6               	movwf	214,c	;volatile
  4170   001D8C                     
  4171                           ;../rc_servo.c: 43:     T0CON1bits.T0ASYNC=1;
  4172   001D8C  88D6               	bsf	214,4,c	;volatile
  4173                           
  4174                           ;../rc_servo.c: 44:     T0CON1bits.T0CKPS=0b0111;
  4175   001D8E  50D6               	movf	214,w,c	;volatile
  4176   001D90  0BF0               	andlw	-16
  4177   001D92  0907               	iorlw	7
  4178   001D94  6ED6               	movwf	214,c	;volatile
  4179   001D96                     
  4180                           ;../rc_servo.c: 46:     T0CON0bits.T016BIT=1;
  4181   001D96  88D5               	bsf	213,4,c	;volatile
  4182                           
  4183                           ;../rc_servo.c: 49:     TMR0H=(65535-2500)>>8;
  4184   001D98  0EF6               	movlw	246
  4185   001D9A  6ED4               	movwf	212,c	;volatile
  4186                           
  4187                           ;../rc_servo.c: 50:     TMR0L=(unsigned char)(65535-2500);
  4188   001D9C  0E3B               	movlw	59
  4189   001D9E  6ED3               	movwf	211,c	;volatile
  4190   001DA0                     
  4191                           ;../rc_servo.c: 51:     T0CON0bits.T0EN=1;
  4192   001DA0  8ED5               	bsf	213,7,c	;volatile
  4193   001DA2  0012               	return		;funcret
  4194   001DA4                     __end_of_Timer0_init:
  4195                           	callstack 0
  4196                           
  4197 ;; *************** function _Interrupts_init *****************
  4198 ;; Defined at:
  4199 ;;		line 8 in file "../rc_servo.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;		None
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		None
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;Total ram usage:        0 bytes
  4218 ;; Hardware stack levels used: 1
  4219 ;; Hardware stack levels required when called: 2
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text32
  4228   001DE6                     __ptext32:
  4229                           	callstack 0
  4230   001DE6                     _Interrupts_init:
  4231                           	callstack 28
  4232   001DE6                     
  4233                           ;../rc_servo.c: 10:     PIE0bits.TMR0IE=1;
  4234   001DE6  010E               	movlb	14	; () banked
  4235   001DE8  8B29               	bsf	41,5,b	;volatile
  4236                           
  4237                           ;../rc_servo.c: 11:     INTCONbits.PEIE=1;
  4238   001DEA  8CF2               	bsf	242,6,c	;volatile
  4239                           
  4240                           ;../rc_servo.c: 12:     INTCONbits.IPEN=0;
  4241   001DEC  9AF2               	bcf	242,5,c	;volatile
  4242                           
  4243                           ;../rc_servo.c: 13:     INTCONbits.GIE=1;
  4244   001DEE  8EF2               	bsf	242,7,c	;volatile
  4245   001DF0                     
  4246                           ; BSR set to: 14
  4247   001DF0  0012               	return		;funcret
  4248   001DF2                     __end_of_Interrupts_init:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _HighISR *****************
  4252 ;; Defined at:
  4253 ;;		line 20 in file "../rc_servo.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;Total ram usage:        0 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 1
  4274 ;; This function calls:
  4275 ;;		_write16bitTMR0val
  4276 ;; This function is called by:
  4277 ;;		Interrupt level 2
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	intcode
  4282   000008                     __pintcode:
  4283                           	callstack 0
  4284   000008                     _HighISR:
  4285                           	callstack 21
  4286                           
  4287                           ; BSR set to: 14
  4288                           ;incstack = 0
  4289   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4290   00000A                     
  4291                           ;../rc_servo.c: 22:     if (PIR0bits.TMR0IF)
  4292   00000A  010E               	movlb	14	; () banked
  4293   00000C  AB33               	btfss	51,5,b	;volatile
  4294   00000E  EF0B  F000         	goto	i2u130_41
  4295   000012  EF0D  F000         	goto	i2u130_40
  4296   000016                     i2u130_41:
  4297   000016  EF26  F000         	goto	i2l2151
  4298   00001A                     i2u130_40:
  4299   00001A                     
  4300                           ; BSR set to: 14
  4301                           ;../rc_servo.c: 23:     {;../rc_servo.c: 24:         if(LATEbits.LATE2){
  4302   00001A  A47D               	btfss	125,2,c	;volatile
  4303   00001C  EF12  F000         	goto	i2u131_41
  4304   000020  EF14  F000         	goto	i2u131_40
  4305   000024                     i2u131_41:
  4306   000024  EF1E  F000         	goto	i2l2147
  4307   000028                     i2u131_40:
  4308   000028                     
  4309                           ; BSR set to: 14
  4310                           ;../rc_servo.c: 25:             write16bitTMR0val(65535-off_period);
  4311   000028  0100               	movlb	0	; () banked
  4312   00002A  1DCB               	comf	_off_period& (0+255),w,b
  4313   00002C  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4314   00002E  1DCC               	comf	(_off_period+1)& (0+255),w,b
  4315   000030  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4316   000032  EC08  F00F         	call	_write16bitTMR0val	;wreg free
  4317   000036                     
  4318                           ;../rc_servo.c: 26:             LATEbits.LATE2=0;
  4319   000036  947D               	bcf	125,2,c	;volatile
  4320                           
  4321                           ;../rc_servo.c: 28:         } else {
  4322   000038  EF26  F000         	goto	i2l2151
  4323   00003C                     i2l2147:
  4324                           
  4325                           ; BSR set to: 14
  4326                           ;../rc_servo.c: 29:             write16bitTMR0val(65535-on_period);
  4327   00003C  0100               	movlb	0	; () banked
  4328   00003E  1DCD               	comf	_on_period& (0+255),w,b
  4329   000040  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4330   000042  1DCE               	comf	(_on_period+1)& (0+255),w,b
  4331   000044  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4332   000046  EC08  F00F         	call	_write16bitTMR0val	;wreg free
  4333   00004A                     
  4334                           ;../rc_servo.c: 30:             LATEbits.LATE2=1;
  4335   00004A  847D               	bsf	125,2,c	;volatile
  4336   00004C                     i2l2151:
  4337                           
  4338                           ;../rc_servo.c: 34:     PIR0bits.TMR0IF=0;
  4339   00004C  010E               	movlb	14	; () banked
  4340   00004E  9B33               	bcf	51,5,b	;volatile
  4341   000050                     
  4342                           ; BSR set to: 14
  4343   000050  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4344   000052  0011               	retfie		f
  4345   000054                     __end_of_HighISR:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _write16bitTMR0val *****************
  4349 ;; Defined at:
  4350 ;;		line 58 in file "../rc_servo.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  tmp             2    0[COMRAM] unsigned int 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;Total ram usage:        2 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_HighISR
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text34
  4378   001E10                     __ptext34:
  4379                           	callstack 0
  4380   001E10                     _write16bitTMR0val:
  4381                           	callstack 21
  4382   001E10                     
  4383                           ;../rc_servo.c: 58: void write16bitTMR0val(unsigned int tmp);../rc_servo.c: 59: {;../rc_
      +                          servo.c: 60:     TMR0H=tmp>>8;
  4384   001E10  5002               	movf	(write16bitTMR0val@tmp+1)^0,w,c
  4385   001E12  6ED4               	movwf	212,c	;volatile
  4386   001E14                     
  4387                           ;../rc_servo.c: 61:     TMR0L=tmp;
  4388   001E14  C001  FFD3         	movff	write16bitTMR0val@tmp,4051	;volatile
  4389   001E18  0012               	return		;funcret
  4390   001E1A                     __end_of_write16bitTMR0val:
  4391                           	callstack 0
  4392                           
  4393                           	psect	rparam
  4394   000000                     
  4395                           	psect	temp
  4396   00005D                     btemp:
  4397                           	callstack 0
  4398   00005D                     	ds	1
  4399   000000                     int$flags	set	btemp
  4400   000000                     wtemp8	set	btemp+1
  4401   000000                     ttemp5	set	btemp+1
  4402   000000                     ttemp6	set	btemp+4
  4403   000000                     ttemp7	set	btemp+8
  4404                           
  4405                           	psect	idloc
  4406                           
  4407                           ;Config register IDLOC0 @ 0x200000
  4408                           ;	unspecified, using default values
  4409   200000                     	org	2097152
  4410   200000  0FFF               	dw	4095
  4411                           
  4412                           ;Config register IDLOC1 @ 0x200002
  4413                           ;	unspecified, using default values
  4414   200002                     	org	2097154
  4415   200002  0FFF               	dw	4095
  4416                           
  4417                           ;Config register IDLOC2 @ 0x200004
  4418                           ;	unspecified, using default values
  4419   200004                     	org	2097156
  4420   200004  0FFF               	dw	4095
  4421                           
  4422                           ;Config register IDLOC3 @ 0x200006
  4423                           ;	unspecified, using default values
  4424   200006                     	org	2097158
  4425   200006  0FFF               	dw	4095
  4426                           
  4427                           ;Config register IDLOC4 @ 0x200008
  4428                           ;	unspecified, using default values
  4429   200008                     	org	2097160
  4430   200008  0FFF               	dw	4095
  4431                           
  4432                           ;Config register IDLOC5 @ 0x20000A
  4433                           ;	unspecified, using default values
  4434   20000A                     	org	2097162
  4435   20000A  0FFF               	dw	4095
  4436                           
  4437                           ;Config register IDLOC6 @ 0x20000C
  4438                           ;	unspecified, using default values
  4439   20000C                     	org	2097164
  4440   20000C  0FFF               	dw	4095
  4441                           
  4442                           ;Config register IDLOC7 @ 0x20000E
  4443                           ;	unspecified, using default values
  4444   20000E                     	org	2097166
  4445   20000E  0FFF               	dw	4095
  4446                           
  4447                           	psect	config
  4448                           
  4449                           ;Config register CONFIG1L @ 0x300000
  4450                           ;	External Oscillator mode Selection bits
  4451                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4452                           ;	Power-up default value for COSC bits
  4453                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4454   300000                     	org	3145728
  4455   300000  AA                 	db	170
  4456                           
  4457                           ;Config register CONFIG1H @ 0x300001
  4458                           ;	unspecified, using default values
  4459                           ;	Clock Out Enable bit
  4460                           ;	CLKOUTEN = 0x1, unprogrammed default
  4461                           ;	Clock Switch Enable bit
  4462                           ;	CSWEN = 0x1, unprogrammed default
  4463                           ;	Fail-Safe Clock Monitor Enable bit
  4464                           ;	FCMEN = 0x1, unprogrammed default
  4465   300001                     	org	3145729
  4466   300001  FF                 	db	255
  4467                           
  4468                           ;Config register CONFIG2L @ 0x300002
  4469                           ;	unspecified, using default values
  4470                           ;	Master Clear Enable bit
  4471                           ;	MCLRE = 0x1, unprogrammed default
  4472                           ;	Power-up Timer Enable bit
  4473                           ;	PWRTE = 0x1, unprogrammed default
  4474                           ;	Low-power BOR enable bit
  4475                           ;	LPBOREN = 0x1, unprogrammed default
  4476                           ;	Brown-out Reset Enable bits
  4477                           ;	BOREN = 0x3, unprogrammed default
  4478   300002                     	org	3145730
  4479   300002  FF                 	db	255
  4480                           
  4481                           ;Config register CONFIG2H @ 0x300003
  4482                           ;	unspecified, using default values
  4483                           ;	Brown Out Reset Voltage selection bits
  4484                           ;	BORV = 0x3, unprogrammed default
  4485                           ;	ZCD Disable bit
  4486                           ;	ZCD = 0x1, unprogrammed default
  4487                           ;	PPSLOCK bit One-Way Set Enable bit
  4488                           ;	PPS1WAY = 0x1, unprogrammed default
  4489                           ;	Stack Full/Underflow Reset Enable bit
  4490                           ;	STVREN = 0x1, unprogrammed default
  4491                           ;	Debugger Enable bit
  4492                           ;	DEBUG = 0x1, unprogrammed default
  4493                           ;	Extended Instruction Set Enable bit
  4494                           ;	XINST = 0x1, unprogrammed default
  4495   300003                     	org	3145731
  4496   300003  FF                 	db	255
  4497                           
  4498                           ;Config register CONFIG3L @ 0x300004
  4499                           ;	WDT Period Select bits
  4500                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4501                           ;	WDT operating mode
  4502                           ;	WDTE = OFF, WDT Disabled
  4503   300004                     	org	3145732
  4504   300004  9F                 	db	159
  4505                           
  4506                           ;Config register CONFIG3H @ 0x300005
  4507                           ;	unspecified, using default values
  4508                           ;	WDT Window Select bits
  4509                           ;	WDTCWS = 0x7, unprogrammed default
  4510                           ;	WDT input clock selector
  4511                           ;	WDTCCS = 0x7, unprogrammed default
  4512   300005                     	org	3145733
  4513   300005  FF                 	db	255
  4514                           
  4515                           ;Config register CONFIG4L @ 0x300006
  4516                           ;	unspecified, using default values
  4517                           ;	Write Protection Block 0
  4518                           ;	WRT0 = 0x1, unprogrammed default
  4519                           ;	Write Protection Block 1
  4520                           ;	WRT1 = 0x1, unprogrammed default
  4521                           ;	Write Protection Block 2
  4522                           ;	WRT2 = 0x1, unprogrammed default
  4523                           ;	Write Protection Block 3
  4524                           ;	WRT3 = 0x1, unprogrammed default
  4525                           ;	Write Protection Block 3
  4526                           ;	WRT4 = 0x1, unprogrammed default
  4527                           ;	Write Protection Block 3
  4528                           ;	WRT5 = 0x1, unprogrammed default
  4529                           ;	Write Protection Block 3
  4530                           ;	WRT6 = 0x1, unprogrammed default
  4531                           ;	Write Protection Block 3
  4532                           ;	WRT7 = 0x1, unprogrammed default
  4533   300006                     	org	3145734
  4534   300006  FF                 	db	255
  4535                           
  4536                           ;Config register CONFIG4H @ 0x300007
  4537                           ;	unspecified, using default values
  4538                           ;	Configuration Register Write Protection bit
  4539                           ;	WRTC = 0x1, unprogrammed default
  4540                           ;	Boot Block Write Protection bit
  4541                           ;	WRTB = 0x1, unprogrammed default
  4542                           ;	Data EEPROM Write Protection bit
  4543                           ;	WRTD = 0x1, unprogrammed default
  4544                           ;	Scanner Enable bit
  4545                           ;	SCANE = 0x1, unprogrammed default
  4546                           ;	Low Voltage Programming Enable bit
  4547                           ;	LVP = 0x1, unprogrammed default
  4548   300007                     	org	3145735
  4549   300007  FF                 	db	255
  4550                           
  4551                           ;Config register CONFIG5L @ 0x300008
  4552                           ;	unspecified, using default values
  4553                           ;	UserNVM Program Memory Code Protection bit
  4554                           ;	CP = 0x1, unprogrammed default
  4555                           ;	DataNVM Memory Code Protection bit
  4556                           ;	CPD = 0x1, unprogrammed default
  4557   300008                     	org	3145736
  4558   300008  FF                 	db	255
  4559                           
  4560                           ;Config register CONFIG5H @ 0x300009
  4561                           ;	unspecified, using default values
  4562   300009                     	org	3145737
  4563   300009  FF                 	db	255
  4564                           
  4565                           ;Config register CONFIG6L @ 0x30000A
  4566                           ;	unspecified, using default values
  4567                           ;	Table Read Protection Block 0
  4568                           ;	EBTR0 = 0x1, unprogrammed default
  4569                           ;	Table Read Protection Block 1
  4570                           ;	EBTR1 = 0x1, unprogrammed default
  4571                           ;	Table Read Protection Block 2
  4572                           ;	EBTR2 = 0x1, unprogrammed default
  4573                           ;	Table Read Protection Block 3
  4574                           ;	EBTR3 = 0x1, unprogrammed default
  4575                           ;	Table Read Protection Block 4
  4576                           ;	EBTR4 = 0x1, unprogrammed default
  4577                           ;	Table Read Protection Block 5
  4578                           ;	EBTR5 = 0x1, unprogrammed default
  4579                           ;	Table Read Protection Block 6
  4580                           ;	EBTR6 = 0x1, unprogrammed default
  4581                           ;	Table Read Protection Block 7
  4582                           ;	EBTR7 = 0x1, unprogrammed default
  4583   30000A                     	org	3145738
  4584   30000A  FF                 	db	255
  4585                           
  4586                           ;Config register CONFIG6H @ 0x30000B
  4587                           ;	unspecified, using default values
  4588                           ;	Boot Block Table Read Protection bit
  4589                           ;	EBTRB = 0x1, unprogrammed default
  4590   30000B                     	org	3145739
  4591   30000B  FF                 	db	255
  4592                           tosu	equ	0xFFF
  4593                           tosh	equ	0xFFE
  4594                           tosl	equ	0xFFD
  4595                           stkptr	equ	0xFFC
  4596                           pclatu	equ	0xFFB
  4597                           pclath	equ	0xFFA
  4598                           pcl	equ	0xFF9
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           indf0	equ	0xFEF
  4606                           postinc0	equ	0xFEE
  4607                           postdec0	equ	0xFED
  4608                           preinc0	equ	0xFEC
  4609                           plusw0	equ	0xFEB
  4610                           fsr0h	equ	0xFEA
  4611                           fsr0l	equ	0xFE9
  4612                           wreg	equ	0xFE8
  4613                           indf1	equ	0xFE7
  4614                           postinc1	equ	0xFE6
  4615                           postdec1	equ	0xFE5
  4616                           preinc1	equ	0xFE4
  4617                           plusw1	equ	0xFE3
  4618                           fsr1h	equ	0xFE2
  4619                           fsr1l	equ	0xFE1
  4620                           bsr	equ	0xFE0
  4621                           indf2	equ	0xFDF
  4622                           postinc2	equ	0xFDE
  4623                           postdec2	equ	0xFDD
  4624                           preinc2	equ	0xFDC
  4625                           plusw2	equ	0xFDB
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    103     146
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2123$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2070$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2070$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK0[50]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1136DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S1136DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), main@RGB_calibrated(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_write16bitTMR0val

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               328   328      0    7789
                                             25 BANK0     78    78      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
                         _color_read
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             64 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             13 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     196
                  _write16bitTMR0val
 ---------------------------------------------------------------------------------
 (10) _write16bitTMR0val                                   2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _write16bitTMR0val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      92       5       91.2%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      54        0.0%
BITBIGSFRllllll     20      0       0      43        0.0%
BITBIGSFRhhhlh      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRhhlll      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      44        0.0%
BITBIGSFRllllll      B      0       0      52        0.0%
BITBIGSFRllllll      9      0       0      51        0.0%
BITBIGSFRllllhl      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhl          5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E      55        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 00:28:44 2022

               _color_read_Red 19D2                _color_read_Blue 1AC2                             l31 1BA6  
                           l40 1A20                             l34 1D82                             l43 1AC0  
                           l37 1A70                             l46 1B10                             l56 185E  
                           l49 1904                             l90 1D3A                             l93 1D3C  
                           l96 1D62                             l99 1E0E               _color_read_Green 1A72  
            ??_Interrupts_init 0003                            l102 1DFA                            l111 1C72  
                          l105 1E04                            l108 1DE4                            l330 1DC0  
                          l171 114A                            l228 1BEC                            l172 1180  
                          l342 1DD8                            l176 11B8                            l177 1222  
                          l339 1DC4                            l348 1CE2                            l278 1DF0  
                          l289 1DA2                            l465 1424                            l478 1588  
                          u710 16EA                            u711 16E6                            u800 135A  
                          u720 16FC                            u801 1356                            u721 16F8  
                          u810 139A                            u730 1724                            u811 1396  
                          u731 1720                            u820 13E4                            u740 175A  
                          u900 196A                            u821 13E0                            u741 1756  
                          u901 1966                            u830 1438                            u910 1C8E  
                          u750 1C30                            u831 1434                            u911 1C8A  
                          u751 1C2C                            u920 1D4C                            u760 12B0  
                          u840 146A                            u921 1D48                            u761 12AC  
                          u841 1466                            u930 1D62                            u770 12E2  
                          u850 14A8                            u931 1D5E                            u771 12DE  
                          u851 14A4                            u860 14D2                            u940 0E42  
                          u781 130C                            u861 14CE                            u941 0E3C  
                          u790 1330                            u870 1500                            u950 0E44  
                          u791 132C                            u871 14FC                            u880 1548  
                          u960 0E56                            u881 1544                            u961 0E52  
                          u890 1914                            u970 0E92                            u891 1910  
                          u971 0E8E                            u980 0EBE                            u981 0EBA  
                          u990 0ED4                            u991 0ED0                            _abs 1C74  
                          _pad 1906                            wreg 000FE8                           l2001 18BC  
                         l1106 17A0                           l1114 1C30                           l2011 180A  
                         l2003 18D4                           l1051 1928                           ?_abs 0015  
                         l1060 0E9E                           l2021 1856                           l2013 1816  
                         l2005 17A2                           l1117 1E1A                           l1029 19D0  
                         l1062 0EA6                           l2015 182C                           l2007 17DE  
                         l2031 1BD4                           l1055 197E                           l1063 0EEC  
                         l2017 1842                           l2009 17F4                           l2041 1BE8  
                         l2033 1BD6                           l2025 1BA8                           l1081 16D6  
                         l2201 1280                           l1074 108C                           l2051 1D96  
                         l2019 184E                           l2043 1BEA                           l2035 1BDC  
                         l2027 1BB8                           l1091 1CAA                           l2045 1DE6  
                         l2053 1DA0                           l2037 1BE0                           l2029 1BCC  
                         l2061 1DBA                           l1094 1CB2                           l2047 1D84  
                         l2039 1BE4                           l2063 1DBC                           l2055 1DA4  
                         l1087 1B5E                           l2071 199A                           l2049 1D8C  
                         l2065 1DBE                           l2057 1DAE                           l2081 1CB8  
                         l2073 19A2                           l2161 10B0                           l2059 1DB0  
                         l2083 1CC6                           l2075 19BE                           l2067 1980  
                         l2171 10CA                           l2163 10B4                           l2155 108E  
                         l2085 1CCA                           l1701 12A2                           l2069 1992  
                         l2181 118E                           l2173 10D6                           l2165 10B8  
                         l2157 10A0                           l2079 1CB4                           l1711 1302  
                         l1703 12B0                           l2191 1230                           l2183 11C6  
                         l2175 110C                           l2167 10BC                           l2159 10A4  
                         l1721 134C                           l1713 1306                           l1705 12D0  
                         l1801 0E12                           l2185 11D8                           l2193 123C  
                         l2177 1118                           l2169 10C0                           l1731 13BC  
                         l1723 135A                           l1715 1312                           l1707 12D4  
                         l1811 0E92                           l1803 0E32                           l2187 11F8  
                         l2195 1254                           l2179 1158                           l1733 13CE  
                         l1725 136C                           l1717 1330                           l1709 12E2  
                         l1821 0EE0                           l1813 0EAE                           l1805 0E46  
                         l2197 1268                           l2189 120E                           l1727 139A  
                         l1719 1338                           l1735 13D4                           l1751 145C  
                         l1743 1426                           l1831 0F84                           l1823 0EE8  
                         l1815 0EBE                           l1807 0E56                           l1903 169C  
                         l2199 127C                           l1921 1D26                           l1913 1D12  
                         l1737 13E4                           l1729 13BA                           l1761 14C4  
                         l1753 146A                           l1745 142A                           l1681 16FC  
                         l1841 102C                           l1833 0F8A                           l1825 0EF4  
                         l1817 0EC4                           l1809 0E76                           l1923 1D28  
                         l1915 1D1C                           l1739 1404                           l1763 14D2  
                         l1771 1538                           l1755 148A                           l1747 1438  
                         l1683 1706                           l1691 1BEE                           l1843 1046  
                         l1835 0F90                           l1827 0EFC                           l1819 0ED4  
                         l1907 16AE                           l1917 1D22                           l1853 1E06  
                         l1861 1DFC                           l1925 1D66                           l1941 1AB8  
                         l1933 19D2                           l1773 1548                           l1765 1500  
                         l1757 14A8                           l1749 1458                           l1685 1724  
                         l1677 16D8                           l1693 1BFA                           l1781 1914  
                         l1845 1056                           l1829 0F02                           l1837 0FF4  
                         l1919 1D24                           l1855 1E0A                           l1863 1E00  
                         l1871 1C38                           l1927 1A22                           l1935 1A18  
                         l1951 1DC4                           l1775 1568                           l1767 1520  
                         l1759 14B0                           l1687 175A                           l1679 16EA  
                         l1695 1C0C                           l1791 196A                           l1783 1920  
                         l1847 105C                           l1839 100E                           l1857 1DDC  
                         l1873 1C40                           l1865 1DF2                           l1945 1AC2  
                         l1929 1A68                           l1953 1DD4                           l1769 1532  
                         l1793 1C74                           l1697 1C10                           l1785 1934  
                         l1849 106C                           l1961 1B56                           l1859 1DE0  
                         l1971 1B7E                           l1875 1C48                           l1867 1DF6  
                         l1947 1B08                           l1939 1A72                           l1699 129E  
                         l1795 1C8E                           l1787 1948                           l1779 1906  
                         l1891 15CE                           l1883 158A                           l1955 1B12  
                         l1797 1D3C                           l1981 1B98                           l1973 1B88  
                         l1965 1B60                           l1877 1C6E                           l1869 1C34  
                         l1789 194C                           l1893 15DE                           l1885 15AE  
                         l1957 1B1E                           ?_pad 0013                           l1799 1D4C  
                         l1991 1BA2                           l1983 1B9A                           l1975 1B92  
                         l1967 1B64                           l1879 1C70                           l1895 15FA  
                         l1887 15BC                           l1959 1B3A                           l1993 1BA4  
                         l1985 1B9C                           l1977 1B94                           l1969 1B6E  
                         l1897 1616                           l1889 15CA                           l1987 1B9E  
                         l1979 1B96                           l1995 1860                           l1899 166C  
                         l1989 1BA0                           l1997 1874                           l1999 188C  
                         STR_1 0E01                           u1000 100E                           u1001 100A  
                         u1010 102C                           u1011 1028                           u1020 1046  
                         u1100 1B56                           u1021 1042                           u1101 1B52  
                         u1110 17F4                           u1030 1056                           u1111 17F0  
                         u1031 1052                           u1120 180A                           u1040 1C5C  
                         u1121 1806                           u1041 1C54                           u1130 182C  
                         u1131 1828                           u1140 1842                           u1060 15AE  
                         u1141 183E                           u1061 15AA                           u1150 1CE2  
                         u1070 15FA                           u1151 1CDE                           u1071 15F6  
                         u1080 1616                           u1400 11C6                           u1320 1136  
                         u1081 1612                           u1401 11C2                           u1321 112C  
                         u1058 1C5E                           u1090 1DD4                           u1410 11D8  
                         u1330 114A                           u1091 1DD0                           u1411 11D4  
                         u1331 1146                           u1420 120E                           u1340 1158  
                         u1421 120A                           u1341 1154                           u1430 1230  
                         u1350 116A                           u1431 122C                           u1351 1162  
                         u1440 1268                           u1328 113A                   _BAUD4CONbits 000EE9  
                         u1441 1264                           u1450 1296                           u1370 118E  
                         u1507 1B74                           u1451 1292                           u1371 118A  
                         u1380 11A0                           u1381 1198                           u1368 116E  
                         _T2PR 000FBC                           u1467 1248                           u1477 187E  
                         u1398 11A4                           u1487 18AE                           u1497 18DE  
                  main@readout 007B                           abs@a 0015                           _dbuf 00D2  
                         _main 108E                           _dtoa 0E12                           _prec 00C9  
                         pad@i 001A                           pad@p 0017                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001C                           fsr2l 000FD9                           btemp 005D  
                         prodl 000FF3                           start 0054         __end_of_color_read_Red 1A22  
              __end_of_HighISR 0054                   ___param_bank 000000                          ??_abs 0017  
                        ??_pad 0019                __end_of___aodiv 1426                          ?_main 0001  
                        ?_dtoa 001E                __end_of___aomod 158A        ??_color_read_Luminosity 0009  
                        i2l292 1E18                          i2l286 0050                   vfpfcnvrt@fmt 0043  
                        _TMR0H 000FD4                          _TMR0L 000FD3        __end_of_sendCharSerial4 1DDA  
   __end_of_I2C_2_Master_Start 1E10     __end_of_I2C_2_Master_Write 1DE6                          _flags 00CF  
                        _fputc 16D8                          _fputs 1BEE                          pad@fp 0013  
                        _width 00C7                          _putch 1E1A                          main@j 00B5  
                        main@n 00B1                          dtoa@d 0020                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0032                          dtoa@s 0040  
                        dtoa@w 0034                          tablat 000FF5                          ttemp5 005E  
                        ttemp6 0061                          ttemp7 0065                          status 000FD8  
                        wtemp8 005E                __end_of_sprintf 19D2        __end_of_color_read_Blue 1B12  
        _I2C_2_Master_RepStart 1DF2                ?_color_read_Red 0007                __initialization 1CE4  
                 __end_of_main 129E                   __end_of_dtoa 108E                         ??_main 0079  
                       ??_dtoa 0028                  __activetblptr 000001                         ?_fputc 0003  
                       ?_fputs 000C                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70                         i2l2141 001A  
                       i2l2143 0028                         i2l2151 004C                         i2l2145 0036  
                       i2l2147 003C                         i2l2139 000A                         i2l2149 004A  
                       i2l2087 1E10                         i2l2089 1E14                      ??_HighISR 0003  
     __end_of_color_click_init 1BA8                         _RX4PPS 000E15                         _TX4REG 000EE4  
                ??_Timer0_init 0003      color_processor_easy@color 0005                   vfprintf@cfmt 0059  
                    ??___aodiv 0013                      ??___aomod 0013                         clear_0 1CEA  
                       clear_1 1CF6                         isa$std 000001                         pad@buf 0015  
                       dtoa@fp 001E                         fputc@c 0003                         fputs@c 0010  
                       fputs@i 0011                         fputs@s 000C                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1B60  
            ??_initDCmotorsPWM 0005                      ??_sprintf 005B                     __accesstop 0060  
      __end_of__initialization 1D00       __end_of_color_read_Green 1AC2         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0007                _Interrupts_init 1DE6  
               __pcstackCOMRAM 0001                  color_read@rgb 000E                  __end_of_fputc 17A2  
                __end_of_fputs 1C32                  __end_of_putch 1E1C            __end_of_Timer0_init 1DA4  
                      ??_fputc 0007                        ??_fputs 0010                        ??_putch 0003  
                   __pbssBANK0 00C7                     __pbssBANK1 0100              _color_writetoaddr 1D64  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0005                 main@color_flag 00AD  
               main@color_name 00AF            ??_color_writetoaddr 0006  __end_of_color_read_Luminosity 1A72  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _PWM6DCH 000FA3  
                      _PWM7DCH 000FA0                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _color_read 1860        __end_of_Interrupts_init 1DF2         color_writetoaddr@value 0005  
             ??_color_read_Red 0009                        _HighISR 0008      __end_of_color_writetoaddr 1D84  
     color_read_Luminosity@tmp 000C             _I2C_2_Master_Start 1E06                     _initUSART4 1DA4  
           _I2C_2_Master_Write 1DDA                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000C                    _Timer0_init 1D84        sendStringSerial4@string 0004  
                      ___aodiv 129E                        ___aomod 1426            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                     _off_period 00CB                      ?_vfprintf 0053  
                 __psmallconst 0E00                        __pcinit 1CE4                        __ramtop 0E00  
                      __ptext0 108E                        __ptext1 1980                        __ptext2 1B12  
                      __ptext3 158A                        __ptext4 0E12                        __ptext5 1906  
                      __ptext6 1BEE                        __ptext7 16D8                        __ptext8 1E1A  
                      __ptext9 1C74                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005C                        _sprintf 1980           ??_I2C_2_Master_Start 0004  
         ??_I2C_2_Master_Write 0004           end_of_initialization 1D00                        fputc@fp 0005  
                      fputs@fp 000E              ?_color_click_init 0001   __end_of_color_processor_easy 1860  
           ??_color_click_init 0007              __end_of_vfpfcnvrt 16D8                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0049                     ??_vfprintf 0059                _initDCmotorsPWM 1BA8  
                    _PORTFbits 000F8E                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ?_color_read 000E       color_writetoaddr@address 0006  
      ??_I2C_2_Master_RepStart 0004               ?_Interrupts_init 0001                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0007                    ?_initUSART4 0001  
    sendCharSerial4@charToSend 0003             ??_color_read_Green 0009                    vfpfcnvrt@ap 0045  
                  vfpfcnvrt@cp 0051                    vfpfcnvrt@fp 0041            start_initialization 1CE4  
                  __end_of_abs 1CB4                    __end_of_pad 1980                  _TxBufWriteCnt 00D1  
          color_read_Green@tmp 000C        __end_of_initDCmotorsPWM 1BEE                    vfprintf@fmt 0055  
                  __pbssCOMRAM 005B           _color_processor_easy 17A2                  __pcstackBANK0 0060  
             ___aodiv@dividend 0003             main@RGB_calibrated 00BF                       ?_HighISR 0001  
      color_processor_easy@rgb 0003          color_processor_easy@a 0009          color_processor_easy@b 000B  
        color_processor_easy@c 0007                      _dtoa$2151 0030                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___aodiv 0003                       ?___aomod 0003  
             ___aodiv@quotient 0015           I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006  
                  __smallconst 0E00              _I2C_2_Master_Idle 1D3C          ?_color_processor_easy 0003  
             main@RGB_recorded 00B7              _I2C_2_Master_Init 1D12              _I2C_2_Master_Read 1C32  
            _I2C_2_Master_Stop 1DFC                   _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001          _color_read_Luminosity 1A22  
           ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0003                       ?_sprintf 0060  
            _sendStringSerial4 1CB4            ??_I2C_2_Master_Idle 0003            ??_I2C_2_Master_Init 0003  
          ??_I2C_2_Master_Read 0004            ??_I2C_2_Master_Stop 0004                       _LATCbits 000F7B  
                     _LATDbits 000F7C                       _LATEbits 000F7D                       _LATFbits 000F7E  
                    _on_period 00CD                       _LATGbits 000F7F                       _LATHbits 000F80  
                     _PIE0bits 000E29             ?_sendStringSerial4 0004                       i2u130_40 001A  
                     i2u130_41 0016                       i2u131_40 0028                       i2u131_41 0024  
                     _PIR0bits 000E33                       _PIR4bits 000E37               ?_initDCmotorsPWM 0003  
            ??_sendCharSerial4 0003                       _SSP2CON2 000EDA            ??_sendStringSerial4 0006  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 158A      __end_of_I2C_2_Master_Idle 1D64  
    __end_of_I2C_2_Master_Init 1D3C      __end_of_I2C_2_Master_Read 1C74      __end_of_I2C_2_Master_Stop 1E06  
         write16bitTMR0val@tmp 0001    I2C_2_Master_Write@data_byte 0004              _write16bitTMR0val 1E10  
            ??_color_read_Blue 0009                   _TxBufReadCnt 00D0             ?_write16bitTMR0val 0001  
                 ??_color_read 0010      __end_of_sendStringSerial4 1CE4  __end_of_I2C_2_Master_RepStart 1DFC  
           color_read_Blue@tmp 000C            ??_write16bitTMR0val 0003                   ??_initUSART4 0003  
                     __Hrparam 0000                     vfprintf@ap 0057                       __Lrparam 0000  
                   vfprintf@fp 0053                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0041  
           __end_of_color_read 1906                ___aodiv@divisor 000B                ___aodiv@counter 0013  
    __end_of_write16bitTMR0val 1E1A                     _ANSELDbits 000EA7         ??_color_processor_easy 0005  
                   _ANSELFbits 000EB4                     sprintf@fmt 0062                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6         ?_color_read_Luminosity 0007             __end_of_initUSART4 1DC2  
                     __ptext10 1426                       __ptext11 129E                       __ptext20 1AC2  
                     __ptext12 1CB4                       __ptext21 1DF2                       __ptext13 1DC2  
                     __ptext30 1D12                       __ptext22 1C32                       __ptext14 1DA4  
                     __ptext31 1D84                       __ptext23 17A2                       __ptext15 1BA8  
                     __ptext32 1DE6                       __ptext24 1B60                       __ptext16 1860  
                     __ptext25 1D64                       __ptext17 19D2                       __ptext34 1E10  
                     __ptext26 1DDA                       __ptext18 1A22                       __ptext27 1DFC  
                     __ptext19 1A72                       __ptext28 1E06                       __ptext29 1D3C  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005D                       _vfprintf 1B12  
                     main@home 00B3               ___aomod@dividend 0003                     _INTCONbits 000FF2  
                  _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1                       intlevel2 0000  
                    sprintf@ap 006C                ___aomod@divisor 000B                    ??_vfpfcnvrt 0047  
              ___aomod@counter 0013               _color_click_init 1B60                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0014                _sendCharSerial4 1DC2  
                 ___aomod@sign 0014  
