

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 02:55:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Version 2.35
    66                           ; Generated 05/05/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     _TX4REG	set	3812
   101   000000                     _RC4STAbits	set	3815
   102   000000                     _SP4BRGH	set	3814
   103   000000                     _TRISGbits	set	3975
   104   000000                     _TRISEbits	set	3973
   105   000000                     _LATFbits	set	3966
   106   000000                     _TRISFbits	set	3974
   107   000000                     _LATG	set	3967
   108   000000                     _LATE	set	3965
   109   000000                     _SSP2CON2bits	set	3802
   110   000000                     _LATGbits	set	3967
   111   000000                     _LATEbits	set	3965
   112   000000                     _RX4PPS	set	3605
   113   000000                     _SSP2CLKPPS	set	3612
   114   000000                     _SSP2DATPPS	set	3613
   115   000000                     _ANSELDbits	set	3751
   116   000000                     _ANSELFbits	set	3764
   117   000000                     _LATDbits	set	3964
   118   000000                     _LATHbits	set	3968
   119   000000                     _TRISDbits	set	3972
   120   000000                     _TRISHbits	set	3976
   121   000000                     _PORTFbits	set	3982
   122   000000                     _PWM7DCH	set	4000
   123   000000                     _PWM6DCH	set	4003
   124   000000                     _TRISCbits	set	3971
   125   000000                     _SSP2BUF	set	3797
   126   000000                     _SSP2ADD	set	3798
   127   000000                     _SSP2CON1bits	set	3801
   128   000000                     _RC4REG	set	3811
   129   000000                     _SP4BRGL	set	3813
   130   000000                     _TX4STAbits	set	3816
   131   000000                     _BAUD4CONbits	set	3817
   132   000000                     _LATCbits	set	3963
   133   000000                     _SSP2CON2	set	3802
   134   000000                     _SSP2STAT	set	3800
   135   000000                     _PIE0bits	set	3625
   136   000000                     _RC7PPS	set	3689
   137   000000                     _RD5PPS	set	3695
   138   000000                     _RE2PPS	set	3700
   139   000000                     _RD6PPS	set	3696
   140   000000                     _PWM6CONbits	set	4004
   141   000000                     _T2PR	set	4028
   142   000000                     _T2CONbits	set	4029
   143   000000                     _PWM7CONbits	set	4001
   144   000000                     _TMR0L	set	4051
   145   000000                     _TMR0H	set	4052
   146   000000                     _T0CON0bits	set	4053
   147   000000                     _T0CON1bits	set	4054
   148   000000                     _INTCONbits	set	4082
   149   000000                     _T2CLKCONbits	set	4031
   150   000000                     _T2HLTbits	set	4030
   151   000000                     _PIR0bits	set	3635
   152   000000                     _PIR4bits	set	3639
   153   000000                     _RC0PPS	set	3682
   154                           
   155                           	psect	smallconst
   156   000E00                     __psmallconst:
   157                           	callstack 0
   158   000E00  00                 	db	0
   159   000E01                     STR_1:
   160   000E01  25                 	db	37
   161   000E02  64                 	db	100	;'d'
   162   000E03  20                 	db	32
   163   000E04  25                 	db	37
   164   000E05  64                 	db	100	;'d'
   165   000E06  20                 	db	32
   166   000E07  25                 	db	37
   167   000E08  64                 	db	100	;'d'
   168   000E09  20                 	db	32
   169   000E0A  25                 	db	37
   170   000E0B  64                 	db	100	;'d'
   171   000E0C  20                 	db	32
   172   000E0D  0D                 	db	13
   173   000E0E  0A                 	db	10
   174   000E0F  00                 	db	0
   175   000E10  00                 	db	0	; dummy byte at the end
   176   000000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180   00275A                     __pcinit:
   181                           	callstack 0
   182   00275A                     start_initialization:
   183                           	callstack 0
   184   00275A                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to BANK0 (123 bytes)
   188   00275A  EE00  F060         	lfsr	0,__pbssBANK0
   189   00275E  0E7B               	movlw	123
   190   002760                     clear_0:
   191   002760  6AEE               	clrf	postinc0,c
   192   002762  06E8               	decf	wreg,f,c
   193   002764  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to COMRAM (2 bytes)
   196   002766  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   197   002768  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   198   00276A                     end_of_initialization:
   199                           	callstack 0
   200   00276A                     __end_of__initialization:
   201                           	callstack 0
   202   00276A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   203   00276C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   204   00276E  0100               	movlb	0
   205   002770  EF09  F007         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208   00005B                     __pbssCOMRAM:
   209                           	callstack 0
   210   00005B                     _RxBufReadCnt:
   211                           	callstack 0
   212   00005B                     	ds	1
   213   00005C                     _RxBufWriteCnt:
   214                           	callstack 0
   215   00005C                     	ds	1
   216                           
   217                           	psect	bssBANK0
   218   000060                     __pbssBANK0:
   219                           	callstack 0
   220   000060                     _EUSART4TXbuf:
   221                           	callstack 0
   222   000060                     	ds	60
   223   00009C                     _EUSART4RXbuf:
   224                           	callstack 0
   225   00009C                     	ds	20
   226   0000B0                     _width:
   227                           	callstack 0
   228   0000B0                     	ds	2
   229   0000B2                     _prec:
   230                           	callstack 0
   231   0000B2                     	ds	2
   232   0000B4                     _off_period:
   233                           	callstack 0
   234   0000B4                     	ds	2
   235   0000B6                     _on_period:
   236                           	callstack 0
   237   0000B6                     	ds	2
   238   0000B8                     _flags:
   239                           	callstack 0
   240   0000B8                     	ds	1
   241   0000B9                     _TxBufReadCnt:
   242                           	callstack 0
   243   0000B9                     	ds	1
   244   0000BA                     _TxBufWriteCnt:
   245                           	callstack 0
   246   0000BA                     	ds	1
   247   0000BB                     _dbuf:
   248                           	callstack 0
   249   0000BB                     	ds	32
   250                           
   251                           	psect	cstackBANK1
   252   000100                     __pcstackBANK1:
   253                           	callstack 0
   254   000100                     main@readout:
   255                           	callstack 0
   256                           
   257                           ; 50 bytes @ 0x0
   258   000100                     	ds	50
   259   000132                     main@color_path:
   260                           	callstack 0
   261                           
   262                           ; 30 bytes @ 0x32
   263   000132                     	ds	30
   264   000150                     main@time_path:
   265                           	callstack 0
   266                           
   267                           ; 30 bytes @ 0x50
   268   000150                     	ds	30
   269   00016E                     main@color_flag:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x6E
   273   00016E                     	ds	2
   274   000170                     main@time_flag:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x70
   278   000170                     	ds	2
   279   000172                     main@time:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x72
   283   000172                     	ds	2
   284   000174                     main@home:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x74
   288   000174                     	ds	2
   289   000176                     main@j:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x76
   293   000176                     	ds	2
   294   000178                     main@k:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x78
   298   000178                     	ds	2
   299   00017A                     main@color_name:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x7A
   303   00017A                     	ds	2
   304   00017C                     main@RGB_recorded:
   305                           	callstack 0
   306                           
   307                           ; 8 bytes @ 0x7C
   308   00017C                     	ds	8
   309   000184                     main@RGB_calibrated:
   310                           	callstack 0
   311                           
   312                           ; 8 bytes @ 0x84
   313   000184                     	ds	8
   314   00018C                     main@motorL:
   315                           	callstack 0
   316                           
   317                           ; 9 bytes @ 0x8C
   318   00018C                     	ds	9
   319   000195                     main@motorR:
   320                           	callstack 0
   321                           
   322                           ; 9 bytes @ 0x95
   323   000195                     	ds	9
   324                           
   325                           	psect	cstackBANK0
   326   0000DB                     __pcstackBANK0:
   327                           	callstack 0
   328   0000DB                     ?_sprintf:
   329                           	callstack 0
   330   0000DB                     sprintf@s:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x0
   334   0000DB                     	ds	2
   335   0000DD                     sprintf@fmt:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x2
   339   0000DD                     	ds	10
   340   0000E7                     sprintf@ap:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xC
   344   0000E7                     	ds	2
   345   0000E9                     sprintf@f:
   346                           	callstack 0
   347                           
   348                           ; 11 bytes @ 0xE
   349   0000E9                     	ds	11
   350   0000F4                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x19
   353   0000F4                     	ds	2
   354                           
   355                           	psect	cstackCOMRAM
   356   000001                     __pcstackCOMRAM:
   357                           	callstack 0
   358   000001                     write16bitTMR0val@tmp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362   000001                     	ds	2
   363   000003                     ??_I2C_2_Master_Idle:
   364   000003                     ?_color_processor_easy:
   365                           	callstack 0
   366   000003                     ?_color_processor_hard:
   367                           	callstack 0
   368   000003                     ?___wmul:
   369                           	callstack 0
   370   000003                     ?___aodiv:
   371                           	callstack 0
   372   000003                     ?___aomod:
   373                           	callstack 0
   374   000003                     sendCharSerial4@charToSend:
   375                           	callstack 0
   376   000003                     color_processor_easy@rgb:
   377                           	callstack 0
   378   000003                     color_processor_hard@rgb:
   379                           	callstack 0
   380   000003                     initDCmotorsPWM@PWMperiod:
   381                           	callstack 0
   382   000003                     ___wmul@multiplier:
   383                           	callstack 0
   384   000003                     fputc@c:
   385                           	callstack 0
   386   000003                     ___aodiv@dividend:
   387                           	callstack 0
   388   000003                     ___aomod@dividend:
   389                           	callstack 0
   390                           
   391                           ; 8 bytes @ 0x2
   392   000003                     	ds	1
   393   000004                     ??_I2C_2_Master_Read:
   394   000004                     I2C_2_Master_Write@data_byte:
   395                           	callstack 0
   396   000004                     sendStringSerial4@string:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x3
   400   000004                     	ds	1
   401   000005                     color_writetoaddr@value:
   402                           	callstack 0
   403   000005                     I2C_2_Master_Read@ack:
   404                           	callstack 0
   405   000005                     color_processor_easy@color:
   406                           	callstack 0
   407   000005                     color_processor_hard@color:
   408                           	callstack 0
   409   000005                     ___wmul@multiplicand:
   410                           	callstack 0
   411   000005                     fputc@fp:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x4
   415   000005                     	ds	1
   416   000006                     color_writetoaddr@address:
   417                           	callstack 0
   418   000006                     I2C_2_Master_Read@tmp:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x5
   422   000006                     	ds	1
   423   000007                     ??_fputc:
   424   000007                     ??_color_click_init:
   425   000007                     ?_color_read_Luminosity:
   426                           	callstack 0
   427   000007                     ?_color_read_Red:
   428                           	callstack 0
   429   000007                     ?_color_read_Green:
   430                           	callstack 0
   431   000007                     ?_color_read_Blue:
   432                           	callstack 0
   433   000007                     color_processor_easy@c:
   434                           	callstack 0
   435   000007                     color_processor_hard@c:
   436                           	callstack 0
   437   000007                     ___wmul@product:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x6
   441   000007                     	ds	2
   442   000009                     ??_color_read_Luminosity:
   443   000009                     ??_color_read_Red:
   444   000009                     ??_color_read_Green:
   445   000009                     ??_color_read_Blue:
   446   000009                     ?___awdiv:
   447                           	callstack 0
   448   000009                     color_processor_easy@a:
   449                           	callstack 0
   450   000009                     color_processor_hard@a:
   451                           	callstack 0
   452   000009                     ___awdiv@dividend:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x8
   456   000009                     	ds	2
   457   00000B                     color_processor_easy@b:
   458                           	callstack 0
   459   00000B                     color_processor_hard@b:
   460                           	callstack 0
   461   00000B                     ___awdiv@divisor:
   462                           	callstack 0
   463   00000B                     ___aodiv@divisor:
   464                           	callstack 0
   465   00000B                     ___aomod@divisor:
   466                           	callstack 0
   467                           
   468                           ; 8 bytes @ 0xA
   469   00000B                     	ds	1
   470   00000C                     color_read_Luminosity@tmp:
   471                           	callstack 0
   472   00000C                     color_read_Red@tmp:
   473                           	callstack 0
   474   00000C                     color_read_Green@tmp:
   475                           	callstack 0
   476   00000C                     color_read_Blue@tmp:
   477                           	callstack 0
   478   00000C                     fputs@s:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0xB
   482   00000C                     	ds	1
   483   00000D                     ___awdiv@counter:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0xC
   487   00000D                     	ds	1
   488   00000E                     ___awdiv@sign:
   489                           	callstack 0
   490   00000E                     color_read@rgb:
   491                           	callstack 0
   492   00000E                     fputs@fp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xD
   496   00000E                     	ds	1
   497   00000F                     ___awdiv@quotient:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xE
   501   00000F                     	ds	1
   502   000010                     ??_color_read:
   503   000010                     fputs@c:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0xF
   507   000010                     	ds	1
   508   000011                     setMotorPWM@m:
   509                           	callstack 0
   510   000011                     fputs@i:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x10
   514   000011                     	ds	2
   515   000013                     ??_setMotorPWM:
   516   000013                     ___aodiv@counter:
   517                           	callstack 0
   518   000013                     ___aomod@counter:
   519                           	callstack 0
   520   000013                     pad@fp:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x12
   524   000013                     	ds	1
   525   000014                     ___aodiv@sign:
   526                           	callstack 0
   527   000014                     ___aomod@sign:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x13
   531   000014                     	ds	1
   532   000015                     ?_abs:
   533                           	callstack 0
   534   000015                     pad@buf:
   535                           	callstack 0
   536   000015                     abs@a:
   537                           	callstack 0
   538   000015                     ___aodiv@quotient:
   539                           	callstack 0
   540                           
   541                           ; 8 bytes @ 0x14
   542   000015                     	ds	2
   543   000017                     ??_abs:
   544   000017                     pad@p:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x16
   548   000017                     	ds	2
   549   000019                     ??_pad:
   550                           
   551                           ; 1 bytes @ 0x18
   552   000019                     	ds	1
   553   00001A                     setMotorPWM@PWMduty:
   554                           	callstack 0
   555   00001A                     pad@i:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x19
   559   00001A                     	ds	2
   560   00001C                     stop@mL:
   561                           	callstack 0
   562   00001C                     reverse@mL:
   563                           	callstack 0
   564   00001C                     right_90@mL:
   565                           	callstack 0
   566   00001C                     left_90@mL:
   567                           	callstack 0
   568   00001C                     spin_180@mL:
   569                           	callstack 0
   570   00001C                     right_135@mL:
   571                           	callstack 0
   572   00001C                     left_135@mL:
   573                           	callstack 0
   574   00001C                     pad@w:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x1B
   578   00001C                     	ds	2
   579   00001E                     stop@mR:
   580                           	callstack 0
   581   00001E                     reverse@mR:
   582                           	callstack 0
   583   00001E                     right_90@mR:
   584                           	callstack 0
   585   00001E                     left_90@mR:
   586                           	callstack 0
   587   00001E                     spin_180@mR:
   588                           	callstack 0
   589   00001E                     right_135@mR:
   590                           	callstack 0
   591   00001E                     left_135@mR:
   592                           	callstack 0
   593   00001E                     dtoa@fp:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x1D
   597   00001E                     	ds	2
   598   000020                     ??_stop:
   599   000020                     ??_reverse:
   600   000020                     ??_right_90:
   601   000020                     ??_left_90:
   602   000020                     ??_spin_180:
   603   000020                     ??_right_135:
   604   000020                     ??_left_135:
   605   000020                     dtoa@d:
   606                           	callstack 0
   607                           
   608                           ; 8 bytes @ 0x1F
   609   000020                     	ds	1
   610   000021                     stop@i:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x20
   614   000021                     	ds	1
   615   000022                     reverse@i:
   616                           	callstack 0
   617   000022                     right_90@i:
   618                           	callstack 0
   619   000022                     left_90@i:
   620                           	callstack 0
   621   000022                     spin_180@i:
   622                           	callstack 0
   623   000022                     right_135@i:
   624                           	callstack 0
   625   000022                     left_135@i:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x21
   629   000022                     	ds	2
   630   000024                     motor_action@color:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x23
   634   000024                     	ds	2
   635   000026                     motor_action@l:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x25
   639   000026                     	ds	2
   640   000028                     ??_dtoa:
   641   000028                     motor_action@r:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x27
   645   000028                     	ds	2
   646   00002A                     ??_motor_action:
   647                           
   648                           ; 1 bytes @ 0x29
   649   00002A                     	ds	6
   650   000030                     _dtoa$2240:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2F
   654   000030                     	ds	2
   655   000032                     dtoa@p:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x31
   659   000032                     	ds	2
   660   000034                     dtoa@w:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x33
   664   000034                     	ds	2
   665   000036                     dtoa@n:
   666                           	callstack 0
   667                           
   668                           ; 8 bytes @ 0x35
   669   000036                     	ds	8
   670   00003E                     dtoa@i:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x3D
   674   00003E                     	ds	2
   675   000040                     dtoa@s:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x3F
   679   000040                     	ds	1
   680   000041                     vfpfcnvrt@fp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x40
   684   000041                     	ds	2
   685   000043                     vfpfcnvrt@fmt:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x42
   689   000043                     	ds	2
   690   000045                     vfpfcnvrt@ap:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x44
   694   000045                     	ds	2
   695   000047                     ??_vfpfcnvrt:
   696                           
   697                           ; 1 bytes @ 0x46
   698   000047                     	ds	2
   699   000049                     vfpfcnvrt@convarg:
   700                           	callstack 0
   701                           
   702                           ; 8 bytes @ 0x48
   703   000049                     	ds	8
   704   000051                     vfpfcnvrt@cp:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x50
   708   000051                     	ds	2
   709   000053                     ?_vfprintf:
   710                           	callstack 0
   711   000053                     vfprintf@fp:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x52
   715   000053                     	ds	2
   716   000055                     vfprintf@fmt:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x54
   720   000055                     	ds	2
   721   000057                     vfprintf@ap:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x56
   725   000057                     	ds	2
   726   000059                     vfprintf@cfmt:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x58
   730   000059                     	ds	2
   731   00005B                     
   732                           ; 1 bytes @ 0x5A
   733 ;;
   734 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   735 ;;
   736 ;; *************** function _main *****************
   737 ;; Defined at:
   738 ;;		line 20 in file "../main.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  k               2  120[BANK1 ] int 
   743 ;;  readout        50    0[BANK1 ] unsigned char [50]
   744 ;;  color_calibr   48    0        unsigned int [24]
   745 ;;  time_path      30   80[BANK1 ] unsigned int [15]
   746 ;;  color_path     30   50[BANK1 ] unsigned int [15]
   747 ;;  motorR          9  149[BANK1 ] struct DC_motor
   748 ;;  motorL          9  140[BANK1 ] struct DC_motor
   749 ;;  RGB_calibrat    8  132[BANK1 ] struct RGB_val
   750 ;;  RGB_recorded    8  124[BANK1 ] struct RGB_val
   751 ;;  color_name      2  122[BANK1 ] unsigned int 
   752 ;;  j               2  118[BANK1 ] int 
   753 ;;  home            2  116[BANK1 ] unsigned int 
   754 ;;  time            2  114[BANK1 ] unsigned int 
   755 ;;  time_flag       2  112[BANK1 ] unsigned int 
   756 ;;  color_flag      2  110[BANK1 ] unsigned int 
   757 ;;  PWMcycle        1    0        unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Locals:         0       0     158       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   770 ;;      Totals:         0       2     158       0       0       0       0       0       0       0       0       0       
      +0       0       0
   771 ;;Total ram usage:      160 bytes
   772 ;; Hardware stack levels required when called: 10
   773 ;; This function calls:
   774 ;;		_I2C_2_Master_Init
   775 ;;		_Interrupts_init
   776 ;;		_Timer0_init
   777 ;;		_color_click_init
   778 ;;		_color_processor_easy
   779 ;;		_color_processor_hard
   780 ;;		_color_read
   781 ;;		_initDCmotorsPWM
   782 ;;		_initUSART4
   783 ;;		_motor_action
   784 ;;		_sendStringSerial4
   785 ;;		_setMotorPWM
   786 ;;		_sprintf
   787 ;;		_stop
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text0
   794   000E12                     __ptext0:
   795                           	callstack 0
   796   000E12                     _main:
   797                           	callstack 21
   798   000E12                     
   799                           ;../main.c: 22:     color_click_init();
   800   000E12  EC87  F011         	call	_color_click_init	;wreg free
   801   000E16                     
   802                           ;../main.c: 23:     initDCmotorsPWM(20);
   803   000E16  0E00               	movlw	0
   804   000E18  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   805   000E1A  0E14               	movlw	20
   806   000E1C  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
   807   000E1E  ECC8  F012         	call	_initDCmotorsPWM	;wreg free
   808   000E22                     
   809                           ;../main.c: 24:     Interrupts_init();
   810   000E22  ECCC  F013         	call	_Interrupts_init	;wreg free
   811   000E26                     
   812                           ;../main.c: 25:     Timer0_init();
   813   000E26  EC8E  F013         	call	_Timer0_init	;wreg free
   814   000E2A                     
   815                           ;../main.c: 26:     I2C_2_Master_Init();
   816   000E2A  EC42  F013         	call	_I2C_2_Master_Init	;wreg free
   817   000E2E                     
   818                           ;../main.c: 27:     initUSART4();
   819   000E2E  EC9E  F013         	call	_initUSART4	;wreg free
   820   000E32                     
   821                           ;../main.c: 32:     motorL.power = 0;
   822   000E32  0E00               	movlw	0
   823   000E34  0101               	movlb	1	; () banked
   824   000E36  6F8C               	movwf	main@motorL& (0+255),b
   825   000E38                     
   826                           ; BSR set to: 1
   827                           ;../main.c: 33:     motorL.direction = 0;
   828   000E38  0E00               	movlw	0
   829   000E3A  6F8D               	movwf	(main@motorL+1)& (0+255),b
   830   000E3C                     
   831                           ; BSR set to: 1
   832                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   833   000E3C  0EA3               	movlw	163
   834   000E3E  6F8E               	movwf	(main@motorL+2)& (0+255),b
   835   000E40  0E0F               	movlw	15
   836   000E42  6F8F               	movwf	(main@motorL+3)& (0+255),b
   837   000E44                     
   838                           ; BSR set to: 1
   839                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
   840   000E44  0E7D               	movlw	125
   841   000E46  6F90               	movwf	(main@motorL+4)& (0+255),b
   842   000E48  0E0F               	movlw	15
   843   000E4A  6F91               	movwf	(main@motorL+5)& (0+255),b
   844   000E4C                     
   845                           ; BSR set to: 1
   846                           ;../main.c: 36:     motorL.dir_pin = 4;
   847   000E4C  0E04               	movlw	4
   848   000E4E  6F92               	movwf	(main@motorL+6)& (0+255),b
   849   000E50                     
   850                           ; BSR set to: 1
   851                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
   852   000E50  0E00               	movlw	0
   853   000E52  6F94               	movwf	(main@motorL+8)& (0+255),b
   854   000E54  0EC8               	movlw	200
   855   000E56  6F93               	movwf	(main@motorL+7)& (0+255),b
   856   000E58                     
   857                           ; BSR set to: 1
   858                           ;../main.c: 38:     motorR.power = 0;
   859   000E58  0E00               	movlw	0
   860   000E5A  6F95               	movwf	main@motorR& (0+255),b
   861   000E5C                     
   862                           ; BSR set to: 1
   863                           ;../main.c: 39:     motorR.direction = 0;
   864   000E5C  0E00               	movlw	0
   865   000E5E  6F96               	movwf	(main@motorR+1)& (0+255),b
   866                           
   867                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   868   000E60  0EA0               	movlw	160
   869   000E62  6F97               	movwf	(main@motorR+2)& (0+255),b
   870   000E64  0E0F               	movlw	15
   871   000E66  6F98               	movwf	(main@motorR+3)& (0+255),b
   872                           
   873                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
   874   000E68  0E7F               	movlw	127
   875   000E6A  6F99               	movwf	(main@motorR+4)& (0+255),b
   876   000E6C  0E0F               	movlw	15
   877   000E6E  6F9A               	movwf	(main@motorR+5)& (0+255),b
   878   000E70                     
   879                           ; BSR set to: 1
   880                           ;../main.c: 42:     motorR.dir_pin = 6;
   881   000E70  0E06               	movlw	6
   882   000E72  6F9B               	movwf	(main@motorR+6)& (0+255),b
   883   000E74                     
   884                           ; BSR set to: 1
   885                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
   886   000E74  0E00               	movlw	0
   887   000E76  6F9D               	movwf	(main@motorR+8)& (0+255),b
   888   000E78  0EC8               	movlw	200
   889   000E7A  6F9C               	movwf	(main@motorR+7)& (0+255),b
   890   000E7C                     
   891                           ; BSR set to: 1
   892                           ;../main.c: 44:     setMotorPWM(&motorL);
   893   000E7C  0E8C               	movlw	low main@motorL
   894   000E7E  6E11               	movwf	setMotorPWM@m^0,c
   895   000E80  0E01               	movlw	high main@motorL
   896   000E82  6E12               	movwf	(setMotorPWM@m+1)^0,c
   897   000E84  EC9F  F009         	call	_setMotorPWM	;wreg free
   898   000E88                     
   899                           ;../main.c: 45:     setMotorPWM(&motorR);
   900   000E88  0E95               	movlw	low main@motorR
   901   000E8A  6E11               	movwf	setMotorPWM@m^0,c
   902   000E8C  0E01               	movlw	high main@motorR
   903   000E8E  6E12               	movwf	(setMotorPWM@m+1)^0,c
   904   000E90  EC9F  F009         	call	_setMotorPWM	;wreg free
   905   000E94                     
   906                           ;../main.c: 48:     unsigned int color_flag;;../main.c: 49:     unsigned int color_name;
      +                          ;../main.c: 50:     unsigned int color_path[15];;../main.c: 51:     struct RGB_val RGB_r
      +                          ecorded;;../main.c: 53:     unsigned int time_path[15];;../main.c: 54:     unsigned int 
      +                          time;;../main.c: 55:     unsigned int time_flag;;../main.c: 56:     int j;;../main.c: 57
      +                          :     unsigned int home = 0;
   907   000E94  0E00               	movlw	0
   908   000E96  0101               	movlb	1	; () banked
   909   000E98  6F75               	movwf	(main@home+1)& (0+255),b
   910   000E9A  0E00               	movlw	0
   911   000E9C  6F74               	movwf	main@home& (0+255),b
   912   000E9E                     
   913                           ; BSR set to: 1
   914                           ;../main.c: 59:     unsigned int color_calibrated[24];;../main.c: 60:     struct RGB_val
      +                           RGB_calibrated;;../main.c: 63:     color_read(&RGB_calibrated);
   915   000E9E  0E84               	movlw	low main@RGB_calibrated
   916   000EA0  6E0E               	movwf	color_read@rgb^0,c
   917   000EA2  0E01               	movlw	high main@RGB_calibrated
   918   000EA4  6E0F               	movwf	(color_read@rgb+1)^0,c
   919   000EA6  ECC8  F00E         	call	_color_read	;wreg free
   920   000EAA                     
   921                           ;../main.c: 64:     char readout[50];;../main.c: 65:     sprintf(readout,"%d %d %d %d \r
      +                          \n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrated.B);
   922   000EAA  0E00               	movlw	low main@readout
   923   000EAC  0100               	movlb	0	; () banked
   924   000EAE  6FDB               	movwf	sprintf@s& (0+255),b
   925   000EB0  0E01               	movlw	high main@readout
   926   000EB2  6FDC               	movwf	(sprintf@s+1)& (0+255),b
   927   000EB4  0E01               	movlw	low STR_1
   928   000EB6  6FDD               	movwf	sprintf@fmt& (0+255),b
   929   000EB8  0E0E               	movlw	high STR_1
   930   000EBA  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
   931   000EBC  C184  F0DF         	movff	main@RGB_calibrated,?_sprintf+4
   932   000EC0  C185  F0E0         	movff	main@RGB_calibrated+1,?_sprintf+5
   933   000EC4  C186  F0E1         	movff	main@RGB_calibrated+2,?_sprintf+6
   934   000EC8  C187  F0E2         	movff	main@RGB_calibrated+3,?_sprintf+7
   935   000ECC  C188  F0E3         	movff	main@RGB_calibrated+4,?_sprintf+8
   936   000ED0  C189  F0E4         	movff	main@RGB_calibrated+5,?_sprintf+9
   937   000ED4  C18A  F0E5         	movff	main@RGB_calibrated+6,?_sprintf+10
   938   000ED8  C18B  F0E6         	movff	main@RGB_calibrated+7,?_sprintf+11
   939   000EDC  ECB4  F011         	call	_sprintf	;wreg free
   940   000EE0                     
   941                           ;../main.c: 66:     sendStringSerial4(readout);
   942   000EE0  0E00               	movlw	low main@readout
   943   000EE2  6E04               	movwf	sendStringSerial4@string^0,c
   944   000EE4  0E01               	movlw	high main@readout
   945   000EE6  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   946   000EE8  EC2A  F013         	call	_sendStringSerial4	;wreg free
   947   000EEC                     l2896:
   948                           
   949                           ;../main.c: 77:         if (time_flag==1){
   950   000EEC  0101               	movlb	1	; () banked
   951   000EEE  0570               	decf	main@time_flag& (0+255),w,b
   952   000EF0  1171               	iorwf	(main@time_flag+1)& (0+255),w,b
   953   000EF2  A4D8               	btfss	status,2,c
   954   000EF4  EF7E  F007         	goto	u1601
   955   000EF8  EF80  F007         	goto	u1600
   956   000EFC                     u1601:
   957   000EFC  EF86  F007         	goto	l2902
   958   000F00                     u1600:
   959   000F00                     
   960                           ; BSR set to: 1
   961                           ;../main.c: 78:             time++;
   962   000F00  4B72               	infsnz	main@time& (0+255),f,b
   963   000F02  2B73               	incf	(main@time+1)& (0+255),f,b
   964   000F04                     
   965                           ; BSR set to: 1
   966                           ;../main.c: 79:             time_flag = 0;
   967   000F04  0E00               	movlw	0
   968   000F06  6F71               	movwf	(main@time_flag+1)& (0+255),b
   969   000F08  0E00               	movlw	0
   970   000F0A  6F70               	movwf	main@time_flag& (0+255),b
   971   000F0C                     l2902:
   972   000F0C  0E01               	movlw	1
   973   000F0E  A68E               	btfss	142,3,c	;volatile
   974   000F10  0E00               	movlw	0
   975   000F12  A48E               	btfss	142,2,c	;volatile
   976   000F14  0E00               	movlw	0
   977   000F16  B0E8               	btfsc	wreg,0,c
   978   000F18  EF90  F007         	goto	u1611
   979   000F1C  EF95  F007         	goto	u1610
   980   000F20                     u1611:
   981   000F20  0100               	movlb	0	; () banked
   982   000F22  6BF4               	clrf	??_main& (0+255),b
   983   000F24  2BF4               	incf	??_main& (0+255),f,b
   984   000F26  EF97  F007         	goto	u1618
   985   000F2A                     u1610:
   986   000F2A  0100               	movlb	0	; () banked
   987   000F2C  6BF4               	clrf	??_main& (0+255),b
   988   000F2E                     u1618:
   989   000F2E  51F4               	movf	??_main& (0+255),w,b
   990   000F30  A4D8               	btfss	status,2,c
   991   000F32  EF9D  F007         	goto	u1621
   992   000F36  EF9F  F007         	goto	u1620
   993   000F3A                     u1621:
   994   000F3A  EF86  F007         	goto	l2902
   995   000F3E                     u1620:
   996   000F3E                     
   997                           ; BSR set to: 0
   998                           ;../main.c: 84:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
   999   000F3E  B48E               	btfsc	142,2,c	;volatile
  1000   000F40  EFA4  F007         	goto	u1631
  1001   000F44  EFA6  F007         	goto	u1630
  1002   000F48                     u1631:
  1003   000F48  EFA9  F007         	goto	l183
  1004   000F4C                     u1630:
  1005   000F4C                     
  1006                           ; BSR set to: 0
  1007   000F4C  8E7C               	bsf	124,7,c	;volatile
  1008   000F4E  EF3F  F008         	goto	l2936
  1009   000F52                     l183:
  1010                           
  1011                           ; BSR set to: 0
  1012   000F52  8680               	bsf	128,3,c	;volatile
  1013   000F54  EF3F  F008         	goto	l2936
  1014   000F58                     l2906:
  1015                           
  1016                           ; BSR set to: 1
  1017                           ;../main.c: 89:             if (color_flag){
  1018   000F58  516E               	movf	main@color_flag& (0+255),w,b
  1019   000F5A  116F               	iorwf	(main@color_flag+1)& (0+255),w,b
  1020   000F5C  B4D8               	btfsc	status,2,c
  1021   000F5E  EFB3  F007         	goto	u1641
  1022   000F62  EFB5  F007         	goto	u1640
  1023   000F66                     u1641:
  1024   000F66  EF26  F008         	goto	l187
  1025   000F6A                     u1640:
  1026   000F6A                     
  1027                           ; BSR set to: 1
  1028                           ;../main.c: 90:                 stop(&motorL,&motorR);
  1029   000F6A  0E8C               	movlw	low main@motorL
  1030   000F6C  6E1C               	movwf	stop@mL^0,c
  1031   000F6E  0E01               	movlw	high main@motorL
  1032   000F70  6E1D               	movwf	(stop@mL+1)^0,c
  1033   000F72  0E95               	movlw	low main@motorR
  1034   000F74  6E1E               	movwf	stop@mR^0,c
  1035   000F76  0E01               	movlw	high main@motorR
  1036   000F78  6E1F               	movwf	(stop@mR+1)^0,c
  1037   000F7A  EC03  F011         	call	_stop	;wreg free
  1038   000F7E                     
  1039                           ;../main.c: 91:                 color_read(&RGB_recorded);
  1040   000F7E  0E7C               	movlw	low main@RGB_recorded
  1041   000F80  6E0E               	movwf	color_read@rgb^0,c
  1042   000F82  0E01               	movlw	high main@RGB_recorded
  1043   000F84  6E0F               	movwf	(color_read@rgb+1)^0,c
  1044   000F86  ECC8  F00E         	call	_color_read	;wreg free
  1045   000F8A                     
  1046                           ;../main.c: 92:                 if (LATDbits.LATD7){color_name = color_processor_easy(&R
      +                          GB_recorded);}
  1047   000F8A  AE7C               	btfss	124,7,c	;volatile
  1048   000F8C  EFCA  F007         	goto	u1651
  1049   000F90  EFCC  F007         	goto	u1650
  1050   000F94                     u1651:
  1051   000F94  EFD8  F007         	goto	l2916
  1052   000F98                     u1650:
  1053   000F98  0E7C               	movlw	low main@RGB_recorded
  1054   000F9A  6E03               	movwf	color_processor_easy@rgb^0,c
  1055   000F9C  0E01               	movlw	high main@RGB_recorded
  1056   000F9E  6E04               	movwf	(color_processor_easy@rgb+1)^0,c
  1057   000FA0  EC69  F00E         	call	_color_processor_easy	;wreg free
  1058   000FA4  C003  F17A         	movff	?_color_processor_easy,main@color_name
  1059   000FA8  C004  F17B         	movff	?_color_processor_easy+1,main@color_name+1
  1060   000FAC  EFE2  F007         	goto	l2918
  1061   000FB0                     l2916:
  1062   000FB0  0E7C               	movlw	low main@RGB_recorded
  1063   000FB2  6E03               	movwf	color_processor_hard@rgb^0,c
  1064   000FB4  0E01               	movlw	high main@RGB_recorded
  1065   000FB6  6E04               	movwf	(color_processor_hard@rgb+1)^0,c
  1066   000FB8  EC0A  F00E         	call	_color_processor_hard	;wreg free
  1067   000FBC  C003  F17A         	movff	?_color_processor_hard,main@color_name
  1068   000FC0  C004  F17B         	movff	?_color_processor_hard+1,main@color_name+1
  1069   000FC4                     l2918:
  1070                           
  1071                           ;../main.c: 94:                 color_path[j] = color_name;
  1072   000FC4  90D8               	bcf	status,0,c
  1073   000FC6  0101               	movlb	1	; () banked
  1074   000FC8  3576               	rlcf	main@j& (0+255),w,b
  1075   000FCA  6ED9               	movwf	fsr2l,c
  1076   000FCC  3577               	rlcf	(main@j+1)& (0+255),w,b
  1077   000FCE  6EDA               	movwf	fsr2h,c
  1078   000FD0  0E32               	movlw	low main@color_path
  1079   000FD2  26D9               	addwf	fsr2l,f,c
  1080   000FD4  0E01               	movlw	high main@color_path
  1081   000FD6  22DA               	addwfc	fsr2h,f,c
  1082   000FD8  C17A  FFDE         	movff	main@color_name,postinc2
  1083   000FDC  C17B  FFDD         	movff	main@color_name+1,postdec2
  1084   000FE0                     
  1085                           ; BSR set to: 1
  1086                           ;../main.c: 95:                 time_path[j] = time;
  1087   000FE0  90D8               	bcf	status,0,c
  1088   000FE2  3576               	rlcf	main@j& (0+255),w,b
  1089   000FE4  6ED9               	movwf	fsr2l,c
  1090   000FE6  3577               	rlcf	(main@j+1)& (0+255),w,b
  1091   000FE8  6EDA               	movwf	fsr2h,c
  1092   000FEA  0E50               	movlw	low main@time_path
  1093   000FEC  26D9               	addwf	fsr2l,f,c
  1094   000FEE  0E01               	movlw	high main@time_path
  1095   000FF0  22DA               	addwfc	fsr2h,f,c
  1096   000FF2  C172  FFDE         	movff	main@time,postinc2
  1097   000FF6  C173  FFDD         	movff	main@time+1,postdec2
  1098   000FFA                     
  1099                           ; BSR set to: 1
  1100                           ;../main.c: 96:                 motor_action(color_name,&motorL,&motorR);
  1101   000FFA  C17A  F024         	movff	main@color_name,motor_action@color
  1102   000FFE  C17B  F025         	movff	main@color_name+1,motor_action@color+1
  1103   001002  0E8C               	movlw	low main@motorL
  1104   001004  6E26               	movwf	motor_action@l^0,c
  1105   001006  0E01               	movlw	high main@motorL
  1106   001008  6E27               	movwf	(motor_action@l+1)^0,c
  1107   00100A  0E95               	movlw	low main@motorR
  1108   00100C  6E28               	movwf	motor_action@r^0,c
  1109   00100E  0E01               	movlw	high main@motorR
  1110   001010  6E29               	movwf	(motor_action@r+1)^0,c
  1111   001012  ECAE  F00C         	call	_motor_action	;wreg free
  1112   001016                     
  1113                           ;../main.c: 97:                 j++;
  1114   001016  0101               	movlb	1	; () banked
  1115   001018  4B76               	infsnz	main@j& (0+255),f,b
  1116   00101A  2B77               	incf	(main@j+1)& (0+255),f,b
  1117   00101C                     
  1118                           ; BSR set to: 1
  1119                           ;../main.c: 98:                 time = 0;
  1120   00101C  0E00               	movlw	0
  1121   00101E  6F73               	movwf	(main@time+1)& (0+255),b
  1122   001020  0E00               	movlw	0
  1123   001022  6F72               	movwf	main@time& (0+255),b
  1124   001024                     
  1125                           ; BSR set to: 1
  1126                           ;../main.c: 100:                 if (color_name != 8) {
  1127   001024  0E08               	movlw	8
  1128   001026  197A               	xorwf	main@color_name& (0+255),w,b
  1129   001028  117B               	iorwf	(main@color_name+1)& (0+255),w,b
  1130   00102A  B4D8               	btfsc	status,2,c
  1131   00102C  EF1A  F008         	goto	u1661
  1132   001030  EF1C  F008         	goto	u1660
  1133   001034                     u1661:
  1134   001034  EF33  F008         	goto	l2934
  1135   001038                     u1660:
  1136   001038                     
  1137                           ; BSR set to: 1
  1138                           ;../main.c: 101:                     color_flag = 0;
  1139   001038  0E00               	movlw	0
  1140   00103A  6F6F               	movwf	(main@color_flag+1)& (0+255),b
  1141   00103C  0E00               	movlw	0
  1142   00103E  6F6E               	movwf	main@color_flag& (0+255),b
  1143                           
  1144                           ;../main.c: 102:                     home = 1;
  1145   001040  0E00               	movlw	0
  1146   001042  6F75               	movwf	(main@home+1)& (0+255),b
  1147   001044  0E01               	movlw	1
  1148   001046  6F74               	movwf	main@home& (0+255),b
  1149   001048  EF33  F008         	goto	l2934
  1150   00104C                     l187:
  1151                           
  1152                           ; BSR set to: 1
  1153   00104C  A680               	btfss	128,3,c	;volatile
  1154   00104E  EF2B  F008         	goto	u1671
  1155   001052  EF2D  F008         	goto	u1670
  1156   001056                     u1671:
  1157   001056  EF33  F008         	goto	l2934
  1158   00105A                     u1670:
  1159   00105A                     
  1160                           ; BSR set to: 1
  1161                           ;../main.c: 107:                 color_read(&RGB_recorded);
  1162   00105A  0E7C               	movlw	low main@RGB_recorded
  1163   00105C  6E0E               	movwf	color_read@rgb^0,c
  1164   00105E  0E01               	movlw	high main@RGB_recorded
  1165   001060  6E0F               	movwf	(color_read@rgb+1)^0,c
  1166   001062  ECC8  F00E         	call	_color_read	;wreg free
  1167   001066                     l2934:
  1168                           
  1169                           ;../main.c: 109:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1170   001066  0E11               	movlw	17
  1171   001068  0100               	movlb	0	; () banked
  1172   00106A  6FF5               	movwf	(??_main+1)& (0+255),b
  1173   00106C  0E3C               	movlw	60
  1174   00106E  6FF4               	movwf	??_main& (0+255),b
  1175   001070  0ECB               	movlw	203
  1176   001072                     u1707:
  1177   001072  2EE8               	decfsz	wreg,f,c
  1178   001074  D7FE               	bra	u1707
  1179   001076  2FF4               	decfsz	??_main& (0+255),f,b
  1180   001078  D7FC               	bra	u1707
  1181   00107A  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1182   00107C  D7FA               	bra	u1707
  1183   00107E                     l2936:
  1184                           
  1185                           ;../main.c: 88:         while (!home) {
  1186   00107E  0101               	movlb	1	; () banked
  1187   001080  5174               	movf	main@home& (0+255),w,b
  1188   001082  1175               	iorwf	(main@home+1)& (0+255),w,b
  1189   001084  B4D8               	btfsc	status,2,c
  1190   001086  EF47  F008         	goto	u1681
  1191   00108A  EF49  F008         	goto	u1680
  1192   00108E                     u1681:
  1193   00108E  EFAC  F007         	goto	l2906
  1194   001092                     u1680:
  1195   001092                     
  1196                           ; BSR set to: 1
  1197                           ;../main.c: 112:         int k;;../main.c: 113:         for (k=0;k<15;k++){
  1198   001092  0E00               	movlw	0
  1199   001094  6F79               	movwf	(main@k+1)& (0+255),b
  1200   001096  0E00               	movlw	0
  1201   001098  6F78               	movwf	main@k& (0+255),b
  1202   00109A                     l2944:
  1203                           
  1204                           ; BSR set to: 1
  1205                           ;../main.c: 115:         }
  1206   00109A  4B78               	infsnz	main@k& (0+255),f,b
  1207   00109C  2B79               	incf	(main@k+1)& (0+255),f,b
  1208   00109E                     
  1209                           ; BSR set to: 1
  1210   00109E  BF79               	btfsc	(main@k+1)& (0+255),7,b
  1211   0010A0  EF5B  F008         	goto	u1691
  1212   0010A4  5179               	movf	(main@k+1)& (0+255),w,b
  1213   0010A6  E109               	bnz	u1690
  1214   0010A8  0E0F               	movlw	15
  1215   0010AA  5D78               	subwf	main@k& (0+255),w,b
  1216   0010AC  A0D8               	btfss	status,0,c
  1217   0010AE  EF5B  F008         	goto	u1691
  1218   0010B2  EF5D  F008         	goto	u1690
  1219   0010B6                     u1691:
  1220   0010B6  EF4D  F008         	goto	l2944
  1221   0010BA                     u1690:
  1222   0010BA  EF76  F007         	goto	l2896
  1223   0010BE  EF2A  F000         	goto	start
  1224   0010C2                     __end_of_main:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _stop *****************
  1228 ;; Defined at:
  1229 ;;		line 61 in file "../dc_motor.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1232 ;;		 -> main@motorL(9), 
  1233 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1234 ;;		 -> main@motorR(9), 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  i               2   32[COMRAM] int 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;Total ram usage:        7 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 4
  1253 ;; This function calls:
  1254 ;;		_setMotorPWM
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text1
  1261   002206                     __ptext1:
  1262                           	callstack 0
  1263   002206                     _stop:
  1264                           	callstack 26
  1265   002206                     
  1266                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  1267   002206  EE20 F001          	lfsr	2,1
  1268   00220A  501C               	movf	stop@mL^0,w,c
  1269   00220C  26D9               	addwf	fsr2l,f,c
  1270   00220E  501D               	movf	(stop@mL+1)^0,w,c
  1271   002210  22DA               	addwfc	fsr2h,f,c
  1272   002212  0E00               	movlw	0
  1273   002214  6EDF               	movwf	indf2,c
  1274                           
  1275                           ;../dc_motor.c: 64:     mR->direction = 0;
  1276   002216  EE20 F001          	lfsr	2,1
  1277   00221A  501E               	movf	stop@mR^0,w,c
  1278   00221C  26D9               	addwf	fsr2l,f,c
  1279   00221E  501F               	movf	(stop@mR+1)^0,w,c
  1280   002220  22DA               	addwfc	fsr2h,f,c
  1281   002222  0E00               	movlw	0
  1282   002224  6EDF               	movwf	indf2,c
  1283   002226                     
  1284                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  1285   002226  0E00               	movlw	0
  1286   002228  6E22               	movwf	(stop@i+1)^0,c
  1287   00222A  0E05               	movlw	5
  1288   00222C  6E21               	movwf	stop@i^0,c
  1289   00222E                     l2662:
  1290                           
  1291                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  1292   00222E  C01C  FFD9         	movff	stop@mL,fsr2l
  1293   002232  C01D  FFDA         	movff	stop@mL+1,fsr2h
  1294   002236  C021  FFDF         	movff	stop@i,indf2
  1295                           
  1296                           ;../dc_motor.c: 68:         mR->power = i;
  1297   00223A  C01E  FFD9         	movff	stop@mR,fsr2l
  1298   00223E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  1299   002242  C021  FFDF         	movff	stop@i,indf2
  1300   002246                     
  1301                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  1302   002246  C01C  F011         	movff	stop@mL,setMotorPWM@m
  1303   00224A  C01D  F012         	movff	stop@mL+1,setMotorPWM@m+1
  1304   00224E  EC9F  F009         	call	_setMotorPWM	;wreg free
  1305   002252                     
  1306                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  1307   002252  C01E  F011         	movff	stop@mR,setMotorPWM@m
  1308   002256  C01F  F012         	movff	stop@mR+1,setMotorPWM@m+1
  1309   00225A  EC9F  F009         	call	_setMotorPWM	;wreg free
  1310   00225E                     
  1311                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1312   00225E  0ED0               	movlw	208
  1313   002260  6E20               	movwf	??_stop^0,c
  1314   002262  0ECA               	movlw	202
  1315   002264                     u1717:
  1316   002264  2EE8               	decfsz	wreg,f,c
  1317   002266  D7FE               	bra	u1717
  1318   002268  2E20               	decfsz	??_stop^0,f,c
  1319   00226A  D7FC               	bra	u1717
  1320   00226C                     
  1321                           ;../dc_motor.c: 72:     }
  1322   00226C  0EFF               	movlw	255
  1323   00226E  2421               	addwf	stop@i^0,w,c
  1324   002270  6E21               	movwf	stop@i^0,c
  1325   002272  0EFF               	movlw	255
  1326   002274  2022               	addwfc	(stop@i+1)^0,w,c
  1327   002276  6E22               	movwf	(stop@i+1)^0,c
  1328   002278  BE22               	btfsc	(stop@i+1)^0,7,c
  1329   00227A  EF49  F011         	goto	u1460
  1330   00227E  5022               	movf	(stop@i+1)^0,w,c
  1331   002280  E106               	bnz	u1461
  1332   002282  0421               	decf	stop@i^0,w,c
  1333   002284  B0D8               	btfsc	status,0,c
  1334   002286  EF47  F011         	goto	u1461
  1335   00228A  EF49  F011         	goto	u1460
  1336   00228E                     u1461:
  1337   00228E  EF17  F011         	goto	l2662
  1338   002292                     u1460:
  1339   002292  0012               	return		;funcret
  1340   002294                     __end_of_stop:
  1341                           	callstack 0
  1342                           
  1343 ;; *************** function _sprintf *****************
  1344 ;; Defined at:
  1345 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1348 ;;		 -> main@readout(50), 
  1349 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1350 ;;		 -> STR_1(15), 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1353 ;;  ap              2   12[BANK0 ] PTR void [1]
  1354 ;;		 -> ?_sprintf(2), 
  1355 ;;  ret             2    0        int 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  2    0[BANK0 ] int 
  1358 ;; Registers used:
  1359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1365 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1368 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1369 ;;Total ram usage:       25 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; Hardware stack levels required when called: 9
  1372 ;; This function calls:
  1373 ;;		_vfprintf
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text2
  1380   002368                     __ptext2:
  1381                           	callstack 0
  1382   002368                     _sprintf:
  1383                           	callstack 21
  1384   002368  0EDF               	movlw	low (?_sprintf+4)
  1385   00236A  0100               	movlb	0	; () banked
  1386   00236C  6FE7               	movwf	sprintf@ap& (0+255),b
  1387   00236E  0E00               	movlw	high (?_sprintf+4)
  1388   002370  6FE8               	movwf	(sprintf@ap+1)& (0+255),b
  1389   002372  C0DB  F0E9         	movff	sprintf@s,sprintf@f
  1390   002376  C0DC  F0EA         	movff	sprintf@s+1,sprintf@f+1
  1391   00237A                     
  1392                           ; BSR set to: 0
  1393   00237A  0E00               	movlw	0
  1394   00237C  6FED               	movwf	(sprintf@f+4)& (0+255),b
  1395   00237E  0E00               	movlw	0
  1396   002380  6FEC               	movwf	(sprintf@f+3)& (0+255),b
  1397   002382                     
  1398                           ; BSR set to: 0
  1399   002382  0E00               	movlw	0
  1400   002384  6FF3               	movwf	(sprintf@f+10)& (0+255),b
  1401   002386  0E00               	movlw	0
  1402   002388  6FF2               	movwf	(sprintf@f+9)& (0+255),b
  1403   00238A                     
  1404                           ; BSR set to: 0
  1405   00238A  0EE9               	movlw	low sprintf@f
  1406   00238C  6E53               	movwf	vfprintf@fp^0,c
  1407   00238E  0E00               	movlw	high sprintf@f
  1408   002390  6E54               	movwf	(vfprintf@fp+1)^0,c
  1409   002392  C0DD  F055         	movff	sprintf@fmt,vfprintf@fmt
  1410   002396  C0DE  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1411   00239A  0EE7               	movlw	low sprintf@ap
  1412   00239C  6E57               	movwf	vfprintf@ap^0,c
  1413   00239E  0E00               	movlw	high sprintf@ap
  1414   0023A0  6E58               	movwf	(vfprintf@ap+1)^0,c
  1415   0023A2  ECDD  F011         	call	_vfprintf	;wreg free
  1416   0023A6  0100               	movlb	0	; () banked
  1417   0023A8  51EC               	movf	(sprintf@f+3)& (0+255),w,b
  1418   0023AA  25DB               	addwf	sprintf@s& (0+255),w,b
  1419   0023AC  6ED9               	movwf	fsr2l,c
  1420   0023AE  51ED               	movf	(sprintf@f+4)& (0+255),w,b
  1421   0023B0  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1422   0023B2  6EDA               	movwf	fsr2h,c
  1423   0023B4  0E00               	movlw	0
  1424   0023B6  6EDF               	movwf	indf2,c
  1425   0023B8                     
  1426                           ; BSR set to: 0
  1427   0023B8  0012               	return		;funcret
  1428   0023BA                     __end_of_sprintf:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _vfprintf *****************
  1432 ;; Defined at:
  1433 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1436 ;;		 -> sprintf@f(11), 
  1437 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1438 ;;		 -> STR_1(15), 
  1439 ;;  ap              2   86[COMRAM] PTR PTR void 
  1440 ;;		 -> sprintf@ap(2), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1443 ;;		 -> STR_1(15), 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2   82[COMRAM] int 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1453 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;Total ram usage:        8 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 8
  1460 ;; This function calls:
  1461 ;;		_vfpfcnvrt
  1462 ;; This function is called by:
  1463 ;;		_sprintf
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text3
  1468   0023BA                     __ptext3:
  1469                           	callstack 0
  1470   0023BA                     _vfprintf:
  1471                           	callstack 21
  1472   0023BA                     
  1473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1474   0023BA  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1475   0023BE  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1478   0023C2  EFF1  F011         	goto	l2498
  1479   0023C6                     l2496:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1482   0023C6  C053  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1483   0023CA  C054  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1484   0023CE  0E59               	movlw	low vfprintf@cfmt
  1485   0023D0  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1486   0023D2  0E00               	movlw	high vfprintf@cfmt
  1487   0023D4  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1488   0023D6  C057  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1489   0023DA  C058  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1490   0023DE  ECFF  F00B         	call	_vfpfcnvrt	;wreg free
  1491   0023E2                     l2498:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1494   0023E2  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1495   0023E6  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1496   0023EA                     	if	0	;tblptru may be non-zero
  1497   0023EA                     	endif
  1498   0023EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1499   0023EA  0E00               	movlw	low (__mediumconst shr (0+16))
  1500   0023EC  6EF8               	movwf	tblptru,c
  1501   0023EE                     	endif
  1502   0023EE  0008               	tblrd		*
  1503   0023F0  50F5               	movf	tablat,w,c
  1504   0023F2  0900               	iorlw	0
  1505   0023F4  A4D8               	btfss	status,2,c
  1506   0023F6  EFFF  F011         	goto	u1361
  1507   0023FA  EF01  F012         	goto	u1360
  1508   0023FE                     u1361:
  1509   0023FE  EFE3  F011         	goto	l2496
  1510   002402                     u1360:
  1511   002402                     
  1512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1513   002402  0E00               	movlw	0
  1514   002404  6E54               	movwf	(?_vfprintf+1)^0,c
  1515   002406  0E00               	movlw	0
  1516   002408  6E53               	movwf	?_vfprintf^0,c
  1517   00240A  0012               	return		;funcret
  1518   00240C                     __end_of_vfprintf:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _vfpfcnvrt *****************
  1522 ;; Defined at:
  1523 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1526 ;;		 -> sprintf@f(11), 
  1527 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1528 ;;		 -> vfprintf@cfmt(2), 
  1529 ;;  ap              2   68[COMRAM] PTR PTR void 
  1530 ;;		 -> sprintf@ap(2), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  convarg         8   72[COMRAM] struct .
  1533 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1534 ;;		 -> STR_1(15), 
  1535 ;;  i               2    0        int 
  1536 ;;  done            2    0        int 
  1537 ;;  c               1    0        unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1547 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;Total ram usage:       18 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 7
  1554 ;; This function calls:
  1555 ;;		_dtoa
  1556 ;;		_fputc
  1557 ;; This function is called by:
  1558 ;;		_vfprintf
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text4
  1563   0017FE                     __ptext4:
  1564                           	callstack 0
  1565   0017FE                     _vfpfcnvrt:
  1566                           	callstack 21
  1567   0017FE                     
  1568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1569   0017FE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1570   001802  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1571   001806  CFDE FFF6          	movff	postinc2,tblptrl
  1572   00180A  CFDD FFF7          	movff	postdec2,tblptrh
  1573   00180E                     	if	0	;tblptru may be non-zero
  1574   00180E                     	endif
  1575   00180E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1576   00180E  0E00               	movlw	low (__mediumconst shr (0+16))
  1577   001810  6EF8               	movwf	tblptru,c
  1578   001812                     	endif
  1579   001812  0008               	tblrd		*
  1580   001814  50F5               	movf	tablat,w,c
  1581   001816  0A25               	xorlw	37
  1582   001818  A4D8               	btfss	status,2,c
  1583   00181A  EF11  F00C         	goto	u1261
  1584   00181E  EF13  F00C         	goto	u1260
  1585   001822                     u1261:
  1586   001822  EF97  F00C         	goto	l2304
  1587   001826                     u1260:
  1588   001826                     
  1589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1590   001826  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1591   00182A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1592   00182E  2ADE               	incf	postinc2,f,c
  1593   001830  0E00               	movlw	0
  1594   001832  22DD               	addwfc	postdec2,f,c
  1595   001834                     
  1596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1597   001834  0E00               	movlw	0
  1598   001836  0100               	movlb	0	; () banked
  1599   001838  6FB1               	movwf	(_width+1)& (0+255),b
  1600   00183A  0E00               	movlw	0
  1601   00183C  6FB0               	movwf	_width& (0+255),b
  1602   00183E  C0B0  F0B8         	movff	_width,_flags
  1603   001842                     
  1604                           ; BSR set to: 0
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1606   001842  69B2               	setf	_prec& (0+255),b
  1607   001844  69B3               	setf	(_prec+1)& (0+255),b
  1608   001846                     
  1609                           ; BSR set to: 0
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1611   001846  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1612   00184A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1613   00184E  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1614   001852  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1615   001856                     
  1616                           ; BSR set to: 0
  1617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1618   001856  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1619   00185A  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1620   00185E                     	if	0	;tblptru may be non-zero
  1621   00185E                     	endif
  1622   00185E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1623   00185E  0E00               	movlw	low (__mediumconst shr (0+16))
  1624   001860  6EF8               	movwf	tblptru,c
  1625   001862                     	endif
  1626   001862  0008               	tblrd		*
  1627   001864  50F5               	movf	tablat,w,c
  1628   001866  0A64               	xorlw	100
  1629   001868  B4D8               	btfsc	status,2,c
  1630   00186A  EF39  F00C         	goto	u1271
  1631   00186E  EF3B  F00C         	goto	u1270
  1632   001872                     u1271:
  1633   001872  EF4B  F00C         	goto	l2294
  1634   001876                     u1270:
  1635   001876                     
  1636                           ; BSR set to: 0
  1637   001876  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1638   00187A  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1639   00187E                     	if	0	;tblptru may be non-zero
  1640   00187E                     	endif
  1641   00187E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1642   00187E  0E00               	movlw	low (__mediumconst shr (0+16))
  1643   001880  6EF8               	movwf	tblptru,c
  1644   001882                     	endif
  1645   001882  0008               	tblrd		*
  1646   001884  50F5               	movf	tablat,w,c
  1647   001886  0A69               	xorlw	105
  1648   001888  A4D8               	btfss	status,2,c
  1649   00188A  EF49  F00C         	goto	u1281
  1650   00188E  EF4B  F00C         	goto	u1280
  1651   001892                     u1281:
  1652   001892  EF8E  F00C         	goto	l2300
  1653   001896                     u1280:
  1654   001896                     l2294:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1658   001896  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1659   00189A  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1660   00189E  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1661   0018A2  0E02               	movlw	2
  1662   0018A4  26DE               	addwf	postinc2,f,c
  1663   0018A6  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1664   0018AA  0E00               	movlw	0
  1665   0018AC  22DD               	addwfc	postdec2,f,c
  1666   0018AE  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1667   0018B2  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1668   0018B6  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1669   0018BA  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1670   0018BE  0E00               	movlw	0
  1671   0018C0  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1672   0018C2  0EFF               	movlw	-1
  1673   0018C4  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1674   0018C6  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1675   0018C8  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1676   0018CA  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1677   0018CC  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1678   0018CE  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1681   0018D0  0E01               	movlw	1
  1682   0018D2  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1683   0018D4  6E47               	movwf	??_vfpfcnvrt^0,c
  1684   0018D6  0E00               	movlw	0
  1685   0018D8  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1686   0018DA  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1687   0018DC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1688   0018E0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1689   0018E4  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1690   0018E8  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1691   0018EC                     
  1692                           ; BSR set to: 0
  1693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1694   0018EC  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1695   0018F0  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1696   0018F4  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1697   0018F8  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1698   0018FC  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1699   001900  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1700   001904  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1701   001908  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1702   00190C  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1703   001910  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1704   001914  EC61  F008         	call	_dtoa	;wreg free
  1705   001918  EFAD  F00C         	goto	l1126
  1706   00191C                     l2300:
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1709   00191C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1710   001920  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1711   001924  2ADE               	incf	postinc2,f,c
  1712   001926  0E00               	movlw	0
  1713   001928  22DD               	addwfc	postdec2,f,c
  1714   00192A  EFAD  F00C         	goto	l1126
  1715   00192E                     l2304:
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1718   00192E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1719   001932  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1720   001936  CFDE FFF6          	movff	postinc2,tblptrl
  1721   00193A  CFDD FFF7          	movff	postdec2,tblptrh
  1722   00193E                     	if	0	;tblptru may be non-zero
  1723   00193E                     	endif
  1724   00193E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1725   00193E  0E00               	movlw	low (__mediumconst shr (0+16))
  1726   001940  6EF8               	movwf	tblptru,c
  1727   001942                     	endif
  1728   001942  0008               	tblrd		*
  1729   001944  50F5               	movf	tablat,w,c
  1730   001946  6E03               	movwf	fputc@c^0,c
  1731   001948  6A04               	clrf	(fputc@c+1)^0,c
  1732   00194A  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1733   00194E  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1734   001952  EC43  F00D         	call	_fputc	;wreg free
  1735   001956  EF8E  F00C         	goto	l2300
  1736   00195A                     l1126:
  1737   00195A  0012               	return		;funcret
  1738   00195C                     __end_of_vfpfcnvrt:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _dtoa *****************
  1742 ;; Defined at:
  1743 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1746 ;;		 -> sprintf@f(11), 
  1747 ;;  d               8   31[COMRAM] long long 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  n               8   53[COMRAM] long long 
  1750 ;;  i               2   61[COMRAM] int 
  1751 ;;  w               2   51[COMRAM] int 
  1752 ;;  p               2   49[COMRAM] int 
  1753 ;;  s               1   63[COMRAM] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1763 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;Total ram usage:       35 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 6
  1770 ;; This function calls:
  1771 ;;		___aodiv
  1772 ;;		___aomod
  1773 ;;		_abs
  1774 ;;		_pad
  1775 ;; This function is called by:
  1776 ;;		_vfpfcnvrt
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text5
  1781   0010C2                     __ptext5:
  1782                           	callstack 0
  1783   0010C2                     _dtoa:
  1784                           	callstack 21
  1785   0010C2                     
  1786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1787   0010C2  C020  F036         	movff	dtoa@d,dtoa@n
  1788   0010C6  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  1789   0010CA  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  1790   0010CE  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  1791   0010D2  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  1792   0010D6  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  1793   0010DA  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  1794   0010DE  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  1795   0010E2                     
  1796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1797   0010E2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1798   0010E4  EF76  F008         	goto	u1101
  1799   0010E8  EF79  F008         	goto	u1100
  1800   0010EC                     u1101:
  1801   0010EC  0E01               	movlw	1
  1802   0010EE  EF7A  F008         	goto	u1110
  1803   0010F2                     u1100:
  1804   0010F2  0E00               	movlw	0
  1805   0010F4                     u1110:
  1806   0010F4  6E40               	movwf	dtoa@s^0,c
  1807   0010F6                     
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1809   0010F6  5040               	movf	dtoa@s^0,w,c
  1810   0010F8  B4D8               	btfsc	status,2,c
  1811   0010FA  EF81  F008         	goto	u1121
  1812   0010FE  EF83  F008         	goto	u1120
  1813   001102                     u1121:
  1814   001102  EF93  F008         	goto	l2192
  1815   001106                     u1120:
  1816   001106                     
  1817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1818   001106  1E3D               	comf	(dtoa@n+7)^0,f,c
  1819   001108  1E3C               	comf	(dtoa@n+6)^0,f,c
  1820   00110A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1821   00110C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1822   00110E  1E39               	comf	(dtoa@n+3)^0,f,c
  1823   001110  1E38               	comf	(dtoa@n+2)^0,f,c
  1824   001112  1E37               	comf	(dtoa@n+1)^0,f,c
  1825   001114  6C36               	negf	dtoa@n^0,c
  1826   001116  0E00               	movlw	0
  1827   001118  2237               	addwfc	(dtoa@n+1)^0,f,c
  1828   00111A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1829   00111C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1830   00111E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1831   001120  223B               	addwfc	(dtoa@n+5)^0,f,c
  1832   001122  223C               	addwfc	(dtoa@n+6)^0,f,c
  1833   001124  223D               	addwfc	(dtoa@n+7)^0,f,c
  1834   001126                     l2192:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1837   001126  0100               	movlb	0	; () banked
  1838   001128  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  1839   00112A  EFA1  F008         	goto	u1130
  1840   00112E  51B3               	movf	(_prec+1)& (0+255),w,b
  1841   001130  E106               	bnz	u1131
  1842   001132  05B2               	decf	_prec& (0+255),w,b
  1843   001134  B0D8               	btfsc	status,0,c
  1844   001136  EF9F  F008         	goto	u1131
  1845   00113A  EFA1  F008         	goto	u1130
  1846   00113E                     u1131:
  1847   00113E  EFA7  F008         	goto	l1105
  1848   001142                     u1130:
  1849   001142                     
  1850                           ; BSR set to: 0
  1851   001142  0E00               	movlw	0
  1852   001144  6E33               	movwf	(dtoa@p+1)^0,c
  1853   001146  0E01               	movlw	1
  1854   001148  6E32               	movwf	dtoa@p^0,c
  1855   00114A  EFAB  F008         	goto	l1107
  1856   00114E                     l1105:
  1857                           
  1858                           ; BSR set to: 0
  1859   00114E  C0B2  F032         	movff	_prec,dtoa@p
  1860   001152  C0B3  F033         	movff	_prec+1,dtoa@p+1
  1861   001156                     l1107:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1865   001156  C0B0  F034         	movff	_width,dtoa@w
  1866   00115A  C0B1  F035         	movff	_width+1,dtoa@w+1
  1867   00115E                     
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1870   00115E  5040               	movf	dtoa@s^0,w,c
  1871   001160  B4D8               	btfsc	status,2,c
  1872   001162  EFB5  F008         	goto	u1141
  1873   001166  EFB7  F008         	goto	u1140
  1874   00116A                     u1141:
  1875   00116A  EFCE  F008         	goto	l1108
  1876   00116E                     u1140:
  1877   00116E                     
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1880   00116E  0634               	decf	dtoa@w^0,f,c
  1881   001170  A0D8               	btfss	status,0,c
  1882   001172  0635               	decf	(dtoa@w+1)^0,f,c
  1883   001174                     
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1886   001174  5040               	movf	dtoa@s^0,w,c
  1887   001176  A4D8               	btfss	status,2,c
  1888   001178  EFC0  F008         	goto	u1151
  1889   00117C  EFC2  F008         	goto	u1150
  1890   001180                     u1151:
  1891   001180  EFC8  F008         	goto	l2204
  1892   001184                     u1150:
  1893   001184                     
  1894                           ; BSR set to: 0
  1895   001184  0E00               	movlw	0
  1896   001186  6E31               	movwf	(_dtoa$2240+1)^0,c
  1897   001188  0E2B               	movlw	43
  1898   00118A  6E30               	movwf	_dtoa$2240^0,c
  1899   00118C  EFCC  F008         	goto	l2206
  1900   001190                     l2204:
  1901                           
  1902                           ; BSR set to: 0
  1903   001190  0E00               	movlw	0
  1904   001192  6E31               	movwf	(_dtoa$2240+1)^0,c
  1905   001194  0E2D               	movlw	45
  1906   001196  6E30               	movwf	_dtoa$2240^0,c
  1907   001198                     l2206:
  1908                           
  1909                           ; BSR set to: 0
  1910   001198  C030  F040         	movff	_dtoa$2240,dtoa@s
  1911   00119C                     l1108:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1915   00119C  0E00               	movlw	0
  1916   00119E  6E3F               	movwf	(dtoa@i+1)^0,c
  1917   0011A0  0E1F               	movlw	31
  1918   0011A2  6E3E               	movwf	dtoa@i^0,c
  1919   0011A4                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1922   0011A4  0E00               	movlw	0
  1923   0011A6  6FDA               	movwf	(_dbuf+31)& (0+255),b
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1926   0011A8  EF52  F009         	goto	l2220
  1927   0011AC                     l2210:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1930   0011AC  063E               	decf	dtoa@i^0,f,c
  1931   0011AE  A0D8               	btfss	status,0,c
  1932   0011B0  063F               	decf	(dtoa@i+1)^0,f,c
  1933   0011B2                     
  1934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1935   0011B2  0EBB               	movlw	low _dbuf
  1936   0011B4  243E               	addwf	dtoa@i^0,w,c
  1937   0011B6  6ED9               	movwf	fsr2l,c
  1938   0011B8  0E00               	movlw	high _dbuf
  1939   0011BA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1940   0011BC  6EDA               	movwf	fsr2h,c
  1941   0011BE  C036  F003         	movff	dtoa@n,___aomod@dividend
  1942   0011C2  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1943   0011C6  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1944   0011CA  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1945   0011CE  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1946   0011D2  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1947   0011D6  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1948   0011DA  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1949   0011DE  0E0A               	movlw	10
  1950   0011E0  6E0B               	movwf	___aomod@divisor^0,c
  1951   0011E2  0E00               	movlw	0
  1952   0011E4  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1953   0011E6  0E00               	movlw	0
  1954   0011E8  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1955   0011EA  0E00               	movlw	0
  1956   0011EC  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1957   0011EE  0E00               	movlw	0
  1958   0011F0  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1959   0011F2  0E00               	movlw	0
  1960   0011F4  6E10               	movwf	(___aomod@divisor+5)^0,c
  1961   0011F6  0E00               	movlw	0
  1962   0011F8  6E11               	movwf	(___aomod@divisor+6)^0,c
  1963   0011FA  0E00               	movlw	0
  1964   0011FC  6E12               	movwf	(___aomod@divisor+7)^0,c
  1965   0011FE  EC4D  F00B         	call	___aomod	;wreg free
  1966   001202  C003  F028         	movff	?___aomod,??_dtoa
  1967   001206  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1968   00120A  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1969   00120E  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1970   001212  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1971   001216  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1972   00121A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1973   00121E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1974   001222  C028  F015         	movff	??_dtoa,abs@a
  1975   001226  C029  F016         	movff	??_dtoa+1,abs@a+1
  1976   00122A  EC0A  F013         	call	_abs	;wreg free
  1977   00122E  5015               	movf	?_abs^0,w,c
  1978   001230  0F30               	addlw	48
  1979   001232  6EDF               	movwf	indf2,c
  1980   001234                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1982   001234  0632               	decf	dtoa@p^0,f,c
  1983   001236  A0D8               	btfss	status,0,c
  1984   001238  0633               	decf	(dtoa@p+1)^0,f,c
  1985   00123A                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1987   00123A  0634               	decf	dtoa@w^0,f,c
  1988   00123C  A0D8               	btfss	status,0,c
  1989   00123E  0635               	decf	(dtoa@w+1)^0,f,c
  1990   001240                     
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1992   001240  C036  F003         	movff	dtoa@n,___aodiv@dividend
  1993   001244  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1994   001248  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1995   00124C  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1996   001250  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1997   001254  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1998   001258  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1999   00125C  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  2000   001260  0E0A               	movlw	10
  2001   001262  6E0B               	movwf	___aodiv@divisor^0,c
  2002   001264  0E00               	movlw	0
  2003   001266  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  2004   001268  0E00               	movlw	0
  2005   00126A  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  2006   00126C  0E00               	movlw	0
  2007   00126E  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  2008   001270  0E00               	movlw	0
  2009   001272  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  2010   001274  0E00               	movlw	0
  2011   001276  6E10               	movwf	(___aodiv@divisor+5)^0,c
  2012   001278  0E00               	movlw	0
  2013   00127A  6E11               	movwf	(___aodiv@divisor+6)^0,c
  2014   00127C  0E00               	movlw	0
  2015   00127E  6E12               	movwf	(___aodiv@divisor+7)^0,c
  2016   001280  EC89  F00A         	call	___aodiv	;wreg free
  2017   001284  C003  F036         	movff	?___aodiv,dtoa@n
  2018   001288  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  2019   00128C  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  2020   001290  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  2021   001294  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  2022   001298  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  2023   00129C  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  2024   0012A0  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  2025   0012A4                     l2220:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2028   0012A4  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2029   0012A6  EF5D  F009         	goto	u1161
  2030   0012AA  503F               	movf	(dtoa@i+1)^0,w,c
  2031   0012AC  E108               	bnz	u1160
  2032   0012AE  043E               	decf	dtoa@i^0,w,c
  2033   0012B0  A0D8               	btfss	status,0,c
  2034   0012B2  EF5D  F009         	goto	u1161
  2035   0012B6  EF5F  F009         	goto	u1160
  2036   0012BA                     u1161:
  2037   0012BA  EF7B  F009         	goto	l2226
  2038   0012BE                     u1160:
  2039   0012BE  5036               	movf	dtoa@n^0,w,c
  2040   0012C0  1037               	iorwf	(dtoa@n+1)^0,w,c
  2041   0012C2  1038               	iorwf	(dtoa@n+2)^0,w,c
  2042   0012C4  1039               	iorwf	(dtoa@n+3)^0,w,c
  2043   0012C6  103A               	iorwf	(dtoa@n+4)^0,w,c
  2044   0012C8  103B               	iorwf	(dtoa@n+5)^0,w,c
  2045   0012CA  103C               	iorwf	(dtoa@n+6)^0,w,c
  2046   0012CC  103D               	iorwf	(dtoa@n+7)^0,w,c
  2047   0012CE  A4D8               	btfss	status,2,c
  2048   0012D0  EF6C  F009         	goto	u1171
  2049   0012D4  EF6E  F009         	goto	u1170
  2050   0012D8                     u1171:
  2051   0012D8  EFD6  F008         	goto	l2210
  2052   0012DC                     u1170:
  2053   0012DC  BE33               	btfsc	(dtoa@p+1)^0,7,c
  2054   0012DE  EF7B  F009         	goto	u1180
  2055   0012E2  5033               	movf	(dtoa@p+1)^0,w,c
  2056   0012E4  E106               	bnz	u1181
  2057   0012E6  0432               	decf	dtoa@p^0,w,c
  2058   0012E8  B0D8               	btfsc	status,0,c
  2059   0012EA  EF79  F009         	goto	u1181
  2060   0012EE  EF7B  F009         	goto	u1180
  2061   0012F2                     u1181:
  2062   0012F2  EFD6  F008         	goto	l2210
  2063   0012F6                     u1180:
  2064   0012F6                     l2226:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2067   0012F6  5040               	movf	dtoa@s^0,w,c
  2068   0012F8  B4D8               	btfsc	status,2,c
  2069   0012FA  EF81  F009         	goto	u1191
  2070   0012FE  EF83  F009         	goto	u1190
  2071   001302                     u1191:
  2072   001302  EF8E  F009         	goto	l2232
  2073   001306                     u1190:
  2074   001306                     
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2076   001306  063E               	decf	dtoa@i^0,f,c
  2077   001308  A0D8               	btfss	status,0,c
  2078   00130A  063F               	decf	(dtoa@i+1)^0,f,c
  2079   00130C                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2081   00130C  0EBB               	movlw	low _dbuf
  2082   00130E  243E               	addwf	dtoa@i^0,w,c
  2083   001310  6ED9               	movwf	fsr2l,c
  2084   001312  0E00               	movlw	high _dbuf
  2085   001314  203F               	addwfc	(dtoa@i+1)^0,w,c
  2086   001316  6EDA               	movwf	fsr2h,c
  2087   001318  C040  FFDF         	movff	dtoa@s,indf2
  2088   00131C                     l2232:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2091   00131C  C01E  F013         	movff	dtoa@fp,pad@fp
  2092   001320  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  2093   001324  0EBB               	movlw	low _dbuf
  2094   001326  243E               	addwf	dtoa@i^0,w,c
  2095   001328  6E15               	movwf	pad@buf^0,c
  2096   00132A  0E00               	movlw	high _dbuf
  2097   00132C  203F               	addwfc	(dtoa@i+1)^0,w,c
  2098   00132E  6E16               	movwf	(pad@buf+1)^0,c
  2099   001330  C034  F017         	movff	dtoa@w,pad@p
  2100   001334  C035  F018         	movff	dtoa@w+1,pad@p+1
  2101   001338  EC4A  F011         	call	_pad	;wreg free
  2102   00133C  0012               	return		;funcret
  2103   00133E                     __end_of_dtoa:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _pad *****************
  2107 ;; Defined at:
  2108 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2111 ;;		 -> sprintf@f(11), 
  2112 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2113 ;;		 -> dbuf(32), 
  2114 ;;  p               2   22[COMRAM] int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  w               2   27[COMRAM] int 
  2117 ;;  i               2   25[COMRAM] int 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2127 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;Total ram usage:       11 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 5
  2134 ;; This function calls:
  2135 ;;		_fputc
  2136 ;;		_fputs
  2137 ;; This function is called by:
  2138 ;;		_dtoa
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text6
  2143   002294                     __ptext6:
  2144                           	callstack 0
  2145   002294                     _pad:
  2146                           	callstack 21
  2147   002294                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2149   002294  BE18               	btfsc	(pad@p+1)^0,7,c
  2150   002296  EF4F  F011         	goto	u991
  2151   00229A  EF51  F011         	goto	u990
  2152   00229E                     u991:
  2153   00229E  EF57  F011         	goto	l2116
  2154   0022A2                     u990:
  2155   0022A2  C017  F01C         	movff	pad@p,pad@w
  2156   0022A6  C018  F01D         	movff	pad@p+1,pad@w+1
  2157   0022AA  EF5B  F011         	goto	l1096
  2158   0022AE                     l2116:
  2159   0022AE  0E00               	movlw	0
  2160   0022B0  6E1D               	movwf	(pad@w+1)^0,c
  2161   0022B2  0E00               	movlw	0
  2162   0022B4  6E1C               	movwf	pad@w^0,c
  2163   0022B6                     l1096:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2166   0022B6  0E00               	movlw	0
  2167   0022B8  6E1B               	movwf	(pad@i+1)^0,c
  2168   0022BA  0E00               	movlw	0
  2169   0022BC  6E1A               	movwf	pad@i^0,c
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2172   0022BE  EF6D  F011         	goto	l2122
  2173   0022C2                     l2118:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2176   0022C2  0E00               	movlw	0
  2177   0022C4  6E04               	movwf	(fputc@c+1)^0,c
  2178   0022C6  0E20               	movlw	32
  2179   0022C8  6E03               	movwf	fputc@c^0,c
  2180   0022CA  C013  F005         	movff	pad@fp,fputc@fp
  2181   0022CE  C014  F006         	movff	pad@fp+1,fputc@fp+1
  2182   0022D2  EC43  F00D         	call	_fputc	;wreg free
  2183   0022D6                     
  2184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2185   0022D6  4A1A               	infsnz	pad@i^0,f,c
  2186   0022D8  2A1B               	incf	(pad@i+1)^0,f,c
  2187   0022DA                     l2122:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2190   0022DA  501C               	movf	pad@w^0,w,c
  2191   0022DC  5C1A               	subwf	pad@i^0,w,c
  2192   0022DE  501B               	movf	(pad@i+1)^0,w,c
  2193   0022E0  0A80               	xorlw	128
  2194   0022E2  6E19               	movwf	??_pad^0,c
  2195   0022E4  501D               	movf	(pad@w+1)^0,w,c
  2196   0022E6  0A80               	xorlw	128
  2197   0022E8  5819               	subwfb	??_pad^0,w,c
  2198   0022EA  A0D8               	btfss	status,0,c
  2199   0022EC  EF7A  F011         	goto	u1001
  2200   0022F0  EF7C  F011         	goto	u1000
  2201   0022F4                     u1001:
  2202   0022F4  EF61  F011         	goto	l2118
  2203   0022F8                     u1000:
  2204   0022F8                     
  2205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2206   0022F8  C015  F00C         	movff	pad@buf,fputs@s
  2207   0022FC  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2208   002300  C013  F00E         	movff	pad@fp,fputs@fp
  2209   002304  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2210   002308  ECA6  F012         	call	_fputs	;wreg free
  2211   00230C  0012               	return		;funcret
  2212   00230E                     __end_of_pad:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _fputs *****************
  2216 ;; Defined at:
  2217 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2220 ;;		 -> dbuf(32), 
  2221 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2222 ;;		 -> sprintf@f(11), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  i               2   16[COMRAM] int 
  2225 ;;  c               1   15[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  2   11[COMRAM] int 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2238 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;Total ram usage:        7 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 4
  2242 ;; This function calls:
  2243 ;;		_fputc
  2244 ;; This function is called by:
  2245 ;;		_pad
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text7
  2250   00254C                     __ptext7:
  2251                           	callstack 0
  2252   00254C                     _fputs:
  2253                           	callstack 21
  2254   00254C  0E00               	movlw	0
  2255   00254E  6E12               	movwf	(fputs@i+1)^0,c
  2256   002550  0E00               	movlw	0
  2257   002552  6E11               	movwf	fputs@i^0,c
  2258   002554  EFB7  F012         	goto	l2030
  2259   002558                     l2026:
  2260   002558  C010  F003         	movff	fputs@c,fputc@c
  2261   00255C  6A04               	clrf	(fputc@c+1)^0,c
  2262   00255E  C00E  F005         	movff	fputs@fp,fputc@fp
  2263   002562  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2264   002566  EC43  F00D         	call	_fputc	;wreg free
  2265   00256A  4A11               	infsnz	fputs@i^0,f,c
  2266   00256C  2A12               	incf	(fputs@i+1)^0,f,c
  2267   00256E                     l2030:
  2268   00256E  5011               	movf	fputs@i^0,w,c
  2269   002570  240C               	addwf	fputs@s^0,w,c
  2270   002572  6ED9               	movwf	fsr2l,c
  2271   002574  5012               	movf	(fputs@i+1)^0,w,c
  2272   002576  200D               	addwfc	(fputs@s+1)^0,w,c
  2273   002578  6EDA               	movwf	fsr2h,c
  2274   00257A  50DF               	movf	indf2,w,c
  2275   00257C  6E10               	movwf	fputs@c^0,c
  2276   00257E  5010               	movf	fputs@c^0,w,c
  2277   002580  A4D8               	btfss	status,2,c
  2278   002582  EFC5  F012         	goto	u851
  2279   002586  EFC7  F012         	goto	u850
  2280   00258A                     u851:
  2281   00258A  EFAC  F012         	goto	l2026
  2282   00258E                     u850:
  2283   00258E  0012               	return		;funcret
  2284   002590                     __end_of_fputs:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _fputc *****************
  2288 ;; Defined at:
  2289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  c               2    2[COMRAM] int 
  2292 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2293 ;;		 -> sprintf@f(11), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2    2[COMRAM] int 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;Total ram usage:        9 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 3
  2312 ;; This function calls:
  2313 ;;		_putch
  2314 ;; This function is called by:
  2315 ;;		_pad
  2316 ;;		_vfpfcnvrt
  2317 ;;		_fputs
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text8
  2322   001A86                     __ptext8:
  2323                           	callstack 0
  2324   001A86                     _fputc:
  2325                           	callstack 24
  2326   001A86  5005               	movf	fputc@fp^0,w,c
  2327   001A88  1006               	iorwf	(fputc@fp+1)^0,w,c
  2328   001A8A  B4D8               	btfsc	status,2,c
  2329   001A8C  EF4A  F00D         	goto	u811
  2330   001A90  EF4C  F00D         	goto	u810
  2331   001A94                     u811:
  2332   001A94  EF55  F00D         	goto	l2014
  2333   001A98                     u810:
  2334   001A98  5005               	movf	fputc@fp^0,w,c
  2335   001A9A  1006               	iorwf	(fputc@fp+1)^0,w,c
  2336   001A9C  A4D8               	btfss	status,2,c
  2337   001A9E  EF53  F00D         	goto	u821
  2338   001AA2  EF55  F00D         	goto	u820
  2339   001AA6                     u821:
  2340   001AA6  EF5A  F00D         	goto	l2016
  2341   001AAA                     u820:
  2342   001AAA                     l2014:
  2343   001AAA  5003               	movf	fputc@c^0,w,c
  2344   001AAC  ECE6  F013         	call	_putch
  2345   001AB0  EFA7  F00D         	goto	l1151
  2346   001AB4                     l2016:
  2347   001AB4  EE20 F009          	lfsr	2,9
  2348   001AB8  5005               	movf	fputc@fp^0,w,c
  2349   001ABA  26D9               	addwf	fsr2l,f,c
  2350   001ABC  5006               	movf	(fputc@fp+1)^0,w,c
  2351   001ABE  22DA               	addwfc	fsr2h,f,c
  2352   001AC0  50DE               	movf	postinc2,w,c
  2353   001AC2  10DE               	iorwf	postinc2,w,c
  2354   001AC4  B4D8               	btfsc	status,2,c
  2355   001AC6  EF67  F00D         	goto	u831
  2356   001ACA  EF69  F00D         	goto	u830
  2357   001ACE                     u831:
  2358   001ACE  EF84  F00D         	goto	l2020
  2359   001AD2                     u830:
  2360   001AD2  EE20 F009          	lfsr	2,9
  2361   001AD6  5005               	movf	fputc@fp^0,w,c
  2362   001AD8  26D9               	addwf	fsr2l,f,c
  2363   001ADA  5006               	movf	(fputc@fp+1)^0,w,c
  2364   001ADC  22DA               	addwfc	fsr2h,f,c
  2365   001ADE  EE10 F003          	lfsr	1,3
  2366   001AE2  5005               	movf	fputc@fp^0,w,c
  2367   001AE4  26E1               	addwf	fsr1l,f,c
  2368   001AE6  5006               	movf	(fputc@fp+1)^0,w,c
  2369   001AE8  22E2               	addwfc	fsr1h,f,c
  2370   001AEA  50DE               	movf	postinc2,w,c
  2371   001AEC  5CE6               	subwf	postinc1,w,c
  2372   001AEE  50E6               	movf	postinc1,w,c
  2373   001AF0  0A80               	xorlw	128
  2374   001AF2  6E0B               	movwf	(??_fputc+4)^0,c
  2375   001AF4  50DE               	movf	postinc2,w,c
  2376   001AF6  0A80               	xorlw	128
  2377   001AF8  580B               	subwfb	(??_fputc+4)^0,w,c
  2378   001AFA  B0D8               	btfsc	status,0,c
  2379   001AFC  EF82  F00D         	goto	u841
  2380   001B00  EF84  F00D         	goto	u840
  2381   001B04                     u841:
  2382   001B04  EFA7  F00D         	goto	l1151
  2383   001B08                     u840:
  2384   001B08                     l2020:
  2385   001B08  EE20 F003          	lfsr	2,3
  2386   001B0C  5005               	movf	fputc@fp^0,w,c
  2387   001B0E  26D9               	addwf	fsr2l,f,c
  2388   001B10  5006               	movf	(fputc@fp+1)^0,w,c
  2389   001B12  22DA               	addwfc	fsr2h,f,c
  2390   001B14  CFDE F007          	movff	postinc2,??_fputc
  2391   001B18  CFDD F008          	movff	postdec2,??_fputc+1
  2392   001B1C  C005  FFD9         	movff	fputc@fp,fsr2l
  2393   001B20  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2394   001B24  CFDE F009          	movff	postinc2,??_fputc+2
  2395   001B28  CFDD F00A          	movff	postdec2,??_fputc+3
  2396   001B2C  5007               	movf	??_fputc^0,w,c
  2397   001B2E  2409               	addwf	(??_fputc+2)^0,w,c
  2398   001B30  6ED9               	movwf	fsr2l,c
  2399   001B32  5008               	movf	(??_fputc+1)^0,w,c
  2400   001B34  200A               	addwfc	(??_fputc+3)^0,w,c
  2401   001B36  6EDA               	movwf	fsr2h,c
  2402   001B38  C003  FFDF         	movff	fputc@c,indf2
  2403   001B3C  EE20 F003          	lfsr	2,3
  2404   001B40  5005               	movf	fputc@fp^0,w,c
  2405   001B42  26D9               	addwf	fsr2l,f,c
  2406   001B44  5006               	movf	(fputc@fp+1)^0,w,c
  2407   001B46  22DA               	addwfc	fsr2h,f,c
  2408   001B48  2ADE               	incf	postinc2,f,c
  2409   001B4A  0E00               	movlw	0
  2410   001B4C  22DD               	addwfc	postdec2,f,c
  2411   001B4E                     l1151:
  2412   001B4E  0012               	return		;funcret
  2413   001B50                     __end_of_fputc:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _putch *****************
  2417 ;; Defined at:
  2418 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  c               1    wreg     unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  c               1    0[COMRAM] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 2
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_fputc
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text9
  2447   0027CC                     __ptext9:
  2448                           	callstack 0
  2449   0027CC                     _putch:
  2450                           	callstack 24
  2451   0027CC  0012               	return		;funcret
  2452   0027CE                     __end_of_putch:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _abs *****************
  2456 ;; Defined at:
  2457 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  a               2   20[COMRAM] int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2   20[COMRAM] int 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;Total ram usage:        4 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 2
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_dtoa
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text10
  2486   002614                     __ptext10:
  2487                           	callstack 0
  2488   002614                     _abs:
  2489                           	callstack 24
  2490   002614  BE16               	btfsc	(abs@a+1)^0,7,c
  2491   002616  EF17  F013         	goto	u1010
  2492   00261A  5016               	movf	(abs@a+1)^0,w,c
  2493   00261C  E106               	bnz	u1011
  2494   00261E  0415               	decf	abs@a^0,w,c
  2495   002620  B0D8               	btfsc	status,0,c
  2496   002622  EF15  F013         	goto	u1011
  2497   002626  EF17  F013         	goto	u1010
  2498   00262A                     u1011:
  2499   00262A  EF25  F013         	goto	l1136
  2500   00262E                     u1010:
  2501   00262E  C015  F017         	movff	abs@a,??_abs
  2502   002632  C016  F018         	movff	abs@a+1,??_abs+1
  2503   002636  1E17               	comf	??_abs^0,f,c
  2504   002638  1E18               	comf	(??_abs+1)^0,f,c
  2505   00263A  4A17               	infsnz	??_abs^0,f,c
  2506   00263C  2A18               	incf	(??_abs+1)^0,f,c
  2507   00263E  C017  F015         	movff	??_abs,?_abs
  2508   002642  C018  F016         	movff	??_abs+1,?_abs+1
  2509   002646  EF29  F013         	goto	l1139
  2510   00264A                     l1136:
  2511   00264A  C015  F015         	movff	abs@a,?_abs
  2512   00264E  C016  F016         	movff	abs@a+1,?_abs+1
  2513   002652                     l1139:
  2514   002652  0012               	return		;funcret
  2515   002654                     __end_of_abs:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function ___aomod *****************
  2519 ;; Defined at:
  2520 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  dividend        8    2[COMRAM] long long 
  2523 ;;  divisor         8   10[COMRAM] long long 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  sign            1   19[COMRAM] unsigned char 
  2526 ;;  counter         1   18[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  8    2[COMRAM] long long 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2536 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;Total ram usage:       18 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 2
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_dtoa
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text11
  2551   00169A                     __ptext11:
  2552                           	callstack 0
  2553   00169A                     ___aomod:
  2554                           	callstack 24
  2555   00169A  0E00               	movlw	0
  2556   00169C  6E14               	movwf	___aomod@sign^0,c
  2557   00169E  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2558   0016A0  EF56  F00B         	goto	u930
  2559   0016A4  EF54  F00B         	goto	u931
  2560   0016A8                     u931:
  2561   0016A8  EF68  F00B         	goto	l2084
  2562   0016AC                     u930:
  2563   0016AC  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2564   0016AE  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2565   0016B0  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2566   0016B2  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2567   0016B4  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2568   0016B6  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2569   0016B8  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2570   0016BA  6C03               	negf	___aomod@dividend^0,c
  2571   0016BC  0E00               	movlw	0
  2572   0016BE  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2573   0016C0  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2574   0016C2  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2575   0016C4  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2576   0016C6  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2577   0016C8  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2578   0016CA  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2579   0016CC  0E01               	movlw	1
  2580   0016CE  6E14               	movwf	___aomod@sign^0,c
  2581   0016D0                     l2084:
  2582   0016D0  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2583   0016D2  EF6F  F00B         	goto	u940
  2584   0016D6  EF6D  F00B         	goto	u941
  2585   0016DA                     u941:
  2586   0016DA  EF7F  F00B         	goto	l2088
  2587   0016DE                     u940:
  2588   0016DE  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2589   0016E0  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2590   0016E2  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2591   0016E4  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2592   0016E6  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2593   0016E8  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2594   0016EA  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2595   0016EC  6C0B               	negf	___aomod@divisor^0,c
  2596   0016EE  0E00               	movlw	0
  2597   0016F0  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2598   0016F2  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2599   0016F4  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2600   0016F6  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2601   0016F8  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2602   0016FA  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2603   0016FC  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2604   0016FE                     l2088:
  2605   0016FE  500B               	movf	___aomod@divisor^0,w,c
  2606   001700  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2607   001702  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2608   001704  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2609   001706  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2610   001708  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2611   00170A  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2612   00170C  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2613   00170E  B4D8               	btfsc	status,2,c
  2614   001710  EF8C  F00B         	goto	u951
  2615   001714  EF8E  F00B         	goto	u950
  2616   001718                     u951:
  2617   001718  EFD6  F00B         	goto	l2104
  2618   00171C                     u950:
  2619   00171C  0E01               	movlw	1
  2620   00171E  6E13               	movwf	___aomod@counter^0,c
  2621   001720  EF9C  F00B         	goto	l2094
  2622   001724                     l2092:
  2623   001724  90D8               	bcf	status,0,c
  2624   001726  360B               	rlcf	___aomod@divisor^0,f,c
  2625   001728  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2626   00172A  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2627   00172C  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2628   00172E  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2629   001730  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2630   001732  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2631   001734  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2632   001736  2A13               	incf	___aomod@counter^0,f,c
  2633   001738                     l2094:
  2634   001738  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2635   00173A  EFA1  F00B         	goto	u961
  2636   00173E  EFA3  F00B         	goto	u960
  2637   001742                     u961:
  2638   001742  EF92  F00B         	goto	l2092
  2639   001746                     u960:
  2640   001746                     l2096:
  2641   001746  500B               	movf	___aomod@divisor^0,w,c
  2642   001748  5C03               	subwf	___aomod@dividend^0,w,c
  2643   00174A  500C               	movf	(___aomod@divisor+1)^0,w,c
  2644   00174C  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2645   00174E  500D               	movf	(___aomod@divisor+2)^0,w,c
  2646   001750  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2647   001752  500E               	movf	(___aomod@divisor+3)^0,w,c
  2648   001754  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2649   001756  500F               	movf	(___aomod@divisor+4)^0,w,c
  2650   001758  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2651   00175A  5010               	movf	(___aomod@divisor+5)^0,w,c
  2652   00175C  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2653   00175E  5011               	movf	(___aomod@divisor+6)^0,w,c
  2654   001760  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2655   001762  5012               	movf	(___aomod@divisor+7)^0,w,c
  2656   001764  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2657   001766  A0D8               	btfss	status,0,c
  2658   001768  EFB8  F00B         	goto	u971
  2659   00176C  EFBA  F00B         	goto	u970
  2660   001770                     u971:
  2661   001770  EFCA  F00B         	goto	l2100
  2662   001774                     u970:
  2663   001774  500B               	movf	___aomod@divisor^0,w,c
  2664   001776  5E03               	subwf	___aomod@dividend^0,f,c
  2665   001778  500C               	movf	(___aomod@divisor+1)^0,w,c
  2666   00177A  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2667   00177C  500D               	movf	(___aomod@divisor+2)^0,w,c
  2668   00177E  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2669   001780  500E               	movf	(___aomod@divisor+3)^0,w,c
  2670   001782  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2671   001784  500F               	movf	(___aomod@divisor+4)^0,w,c
  2672   001786  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2673   001788  5010               	movf	(___aomod@divisor+5)^0,w,c
  2674   00178A  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2675   00178C  5011               	movf	(___aomod@divisor+6)^0,w,c
  2676   00178E  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2677   001790  5012               	movf	(___aomod@divisor+7)^0,w,c
  2678   001792  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2679   001794                     l2100:
  2680   001794  90D8               	bcf	status,0,c
  2681   001796  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2682   001798  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2683   00179A  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2684   00179C  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2685   00179E  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2686   0017A0  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2687   0017A2  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2688   0017A4  320B               	rrcf	___aomod@divisor^0,f,c
  2689   0017A6  2E13               	decfsz	___aomod@counter^0,f,c
  2690   0017A8  EFA3  F00B         	goto	l2096
  2691   0017AC                     l2104:
  2692   0017AC  5014               	movf	___aomod@sign^0,w,c
  2693   0017AE  B4D8               	btfsc	status,2,c
  2694   0017B0  EFDC  F00B         	goto	u981
  2695   0017B4  EFDE  F00B         	goto	u980
  2696   0017B8                     u981:
  2697   0017B8  EFEE  F00B         	goto	l2108
  2698   0017BC                     u980:
  2699   0017BC  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2700   0017BE  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2701   0017C0  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2702   0017C2  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2703   0017C4  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2704   0017C6  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2705   0017C8  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2706   0017CA  6C03               	negf	___aomod@dividend^0,c
  2707   0017CC  0E00               	movlw	0
  2708   0017CE  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2709   0017D0  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2710   0017D2  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2711   0017D4  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2712   0017D6  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2713   0017D8  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2714   0017DA  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2715   0017DC                     l2108:
  2716   0017DC  C003  F003         	movff	___aomod@dividend,?___aomod
  2717   0017E0  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2718   0017E4  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2719   0017E8  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2720   0017EC  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2721   0017F0  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2722   0017F4  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2723   0017F8  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2724   0017FC  0012               	return		;funcret
  2725   0017FE                     __end_of___aomod:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function ___aodiv *****************
  2729 ;; Defined at:
  2730 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  dividend        8    2[COMRAM] long long 
  2733 ;;  divisor         8   10[COMRAM] long long 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  quotient        8   20[COMRAM] long long 
  2736 ;;  sign            1   19[COMRAM] unsigned char 
  2737 ;;  counter         1   18[COMRAM] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  8    2[COMRAM] long long 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2747 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;Total ram usage:       26 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 2
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_dtoa
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text12
  2762   001512                     __ptext12:
  2763                           	callstack 0
  2764   001512                     ___aodiv:
  2765                           	callstack 24
  2766   001512  0E00               	movlw	0
  2767   001514  6E14               	movwf	___aodiv@sign^0,c
  2768   001516  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2769   001518  EF92  F00A         	goto	u860
  2770   00151C  EF90  F00A         	goto	u861
  2771   001520                     u861:
  2772   001520  EFA4  F00A         	goto	l2040
  2773   001524                     u860:
  2774   001524  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2775   001526  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2776   001528  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2777   00152A  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2778   00152C  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2779   00152E  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2780   001530  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2781   001532  6C0B               	negf	___aodiv@divisor^0,c
  2782   001534  0E00               	movlw	0
  2783   001536  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2784   001538  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2785   00153A  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2786   00153C  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2787   00153E  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2788   001540  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2789   001542  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2790   001544  0E01               	movlw	1
  2791   001546  6E14               	movwf	___aodiv@sign^0,c
  2792   001548                     l2040:
  2793   001548  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2794   00154A  EFAB  F00A         	goto	u870
  2795   00154E  EFA9  F00A         	goto	u871
  2796   001552                     u871:
  2797   001552  EFBD  F00A         	goto	l2046
  2798   001556                     u870:
  2799   001556  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2800   001558  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2801   00155A  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2802   00155C  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2803   00155E  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2804   001560  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2805   001562  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2806   001564  6C03               	negf	___aodiv@dividend^0,c
  2807   001566  0E00               	movlw	0
  2808   001568  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2809   00156A  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2810   00156C  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2811   00156E  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2812   001570  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2813   001572  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2814   001574  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2815   001576  0E01               	movlw	1
  2816   001578  1A14               	xorwf	___aodiv@sign^0,f,c
  2817   00157A                     l2046:
  2818   00157A  EE20  F015         	lfsr	2,___aodiv@quotient
  2819   00157E  0E07               	movlw	7
  2820   001580                     u881:
  2821   001580  6ADE               	clrf	postinc2,c
  2822   001582  06E8               	decf	wreg,f,c
  2823   001584  E2FD               	bc	u881
  2824   001586  500B               	movf	___aodiv@divisor^0,w,c
  2825   001588  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2826   00158A  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2827   00158C  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2828   00158E  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2829   001590  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2830   001592  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2831   001594  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2832   001596  B4D8               	btfsc	status,2,c
  2833   001598  EFD0  F00A         	goto	u891
  2834   00159C  EFD2  F00A         	goto	u890
  2835   0015A0                     u891:
  2836   0015A0  EF24  F00B         	goto	l2068
  2837   0015A4                     u890:
  2838   0015A4  0E01               	movlw	1
  2839   0015A6  6E13               	movwf	___aodiv@counter^0,c
  2840   0015A8  EFE0  F00A         	goto	l2054
  2841   0015AC                     l2052:
  2842   0015AC  90D8               	bcf	status,0,c
  2843   0015AE  360B               	rlcf	___aodiv@divisor^0,f,c
  2844   0015B0  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2845   0015B2  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2846   0015B4  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2847   0015B6  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2848   0015B8  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2849   0015BA  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2850   0015BC  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2851   0015BE  2A13               	incf	___aodiv@counter^0,f,c
  2852   0015C0                     l2054:
  2853   0015C0  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2854   0015C2  EFE5  F00A         	goto	u901
  2855   0015C6  EFE7  F00A         	goto	u900
  2856   0015CA                     u901:
  2857   0015CA  EFD6  F00A         	goto	l2052
  2858   0015CE                     u900:
  2859   0015CE                     l2056:
  2860   0015CE  90D8               	bcf	status,0,c
  2861   0015D0  3615               	rlcf	___aodiv@quotient^0,f,c
  2862   0015D2  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2863   0015D4  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2864   0015D6  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2865   0015D8  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2866   0015DA  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2867   0015DC  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2868   0015DE  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2869   0015E0  500B               	movf	___aodiv@divisor^0,w,c
  2870   0015E2  5C03               	subwf	___aodiv@dividend^0,w,c
  2871   0015E4  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2872   0015E6  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2873   0015E8  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2874   0015EA  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2875   0015EC  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2876   0015EE  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2877   0015F0  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2878   0015F2  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2879   0015F4  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2880   0015F6  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2881   0015F8  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2882   0015FA  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2883   0015FC  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2884   0015FE  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2885   001600  A0D8               	btfss	status,0,c
  2886   001602  EF05  F00B         	goto	u911
  2887   001606  EF07  F00B         	goto	u910
  2888   00160A                     u911:
  2889   00160A  EF18  F00B         	goto	l2064
  2890   00160E                     u910:
  2891   00160E  500B               	movf	___aodiv@divisor^0,w,c
  2892   001610  5E03               	subwf	___aodiv@dividend^0,f,c
  2893   001612  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2894   001614  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2895   001616  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2896   001618  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2897   00161A  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2898   00161C  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2899   00161E  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2900   001620  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2901   001622  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2902   001624  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2903   001626  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2904   001628  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2905   00162A  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2906   00162C  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2907   00162E  8015               	bsf	___aodiv@quotient^0,0,c
  2908   001630                     l2064:
  2909   001630  90D8               	bcf	status,0,c
  2910   001632  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2911   001634  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2912   001636  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2913   001638  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2914   00163A  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2915   00163C  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2916   00163E  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2917   001640  320B               	rrcf	___aodiv@divisor^0,f,c
  2918   001642  2E13               	decfsz	___aodiv@counter^0,f,c
  2919   001644  EFE7  F00A         	goto	l2056
  2920   001648                     l2068:
  2921   001648  5014               	movf	___aodiv@sign^0,w,c
  2922   00164A  B4D8               	btfsc	status,2,c
  2923   00164C  EF2A  F00B         	goto	u921
  2924   001650  EF2C  F00B         	goto	u920
  2925   001654                     u921:
  2926   001654  EF3C  F00B         	goto	l2072
  2927   001658                     u920:
  2928   001658  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2929   00165A  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2930   00165C  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2931   00165E  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2932   001660  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2933   001662  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2934   001664  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2935   001666  6C15               	negf	___aodiv@quotient^0,c
  2936   001668  0E00               	movlw	0
  2937   00166A  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2938   00166C  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2939   00166E  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2940   001670  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2941   001672  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2942   001674  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2943   001676  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2944   001678                     l2072:
  2945   001678  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2946   00167C  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2947   001680  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2948   001684  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2949   001688  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2950   00168C  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2951   001690  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2952   001694  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2953   001698  0012               	return		;funcret
  2954   00169A                     __end_of___aodiv:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _sendStringSerial4 *****************
  2958 ;; Defined at:
  2959 ;;		line 37 in file "../serial.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  string          2    3[COMRAM] PTR unsigned char 
  2962 ;;		 -> main@readout(50), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;Total ram usage:        2 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 3
  2981 ;; This function calls:
  2982 ;;		_sendCharSerial4
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text13
  2989   002654                     __ptext13:
  2990                           	callstack 0
  2991   002654                     _sendStringSerial4:
  2992                           	callstack 27
  2993   002654                     
  2994                           ;../serial.c: 40:     while (*string != 0)
  2995   002654  EF35  F013         	goto	l2652
  2996   002658                     l2648:
  2997                           
  2998                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  2999   002658  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  3000   00265C  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3001   002660  50DF               	movf	indf2,w,c
  3002   002662  ECBA  F013         	call	_sendCharSerial4
  3003   002666  4A04               	infsnz	sendStringSerial4@string^0,f,c
  3004   002668  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  3005   00266A                     l2652:
  3006                           
  3007                           ;../serial.c: 40:     while (*string != 0)
  3008   00266A  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  3009   00266E  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3010   002672  50DF               	movf	indf2,w,c
  3011   002674  A4D8               	btfss	status,2,c
  3012   002676  EF3F  F013         	goto	u1451
  3013   00267A  EF41  F013         	goto	u1450
  3014   00267E                     u1451:
  3015   00267E  EF2C  F013         	goto	l2648
  3016   002682                     u1450:
  3017   002682  0012               	return		;funcret
  3018   002684                     __end_of_sendStringSerial4:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _sendCharSerial4 *****************
  3022 ;; Defined at:
  3023 ;;		line 30 in file "../serial.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  charToSend      1    wreg     unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  charToSend      1    2[COMRAM] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;Total ram usage:        1 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 2
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_sendStringSerial4
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text14
  3052   002774                     __ptext14:
  3053                           	callstack 0
  3054   002774                     _sendCharSerial4:
  3055                           	callstack 27
  3056                           
  3057                           ;incstack = 0
  3058                           ;sendCharSerial4@charToSend stored from wreg
  3059   002774  6E03               	movwf	sendCharSerial4@charToSend^0,c
  3060   002776                     l384:
  3061   002776  010E               	movlb	14	; () banked
  3062   002778  A537               	btfss	55,2,b	;volatile
  3063   00277A  EFC1  F013         	goto	u1351
  3064   00277E  EFC3  F013         	goto	u1350
  3065   002782                     u1351:
  3066   002782  EFBB  F013         	goto	l384
  3067   002786                     u1350:
  3068   002786                     
  3069                           ; BSR set to: 14
  3070                           ;../serial.c: 32:     TX4REG = charToSend;
  3071   002786  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3072   00278A                     
  3073                           ; BSR set to: 14
  3074   00278A  0012               	return		;funcret
  3075   00278C                     __end_of_sendCharSerial4:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function _motor_action *****************
  3079 ;; Defined at:
  3080 ;;		line 181 in file "../dc_motor.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  color           2   35[COMRAM] unsigned int 
  3083 ;;  l               2   37[COMRAM] PTR struct DC_motor
  3084 ;;		 -> main@motorL(9), 
  3085 ;;  r               2   39[COMRAM] PTR struct DC_motor
  3086 ;;		 -> main@motorR(9), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3098 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;Total ram usage:        8 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 5
  3105 ;; This function calls:
  3106 ;;		_left_135
  3107 ;;		_left_90
  3108 ;;		_reverse
  3109 ;;		_right_135
  3110 ;;		_right_90
  3111 ;;		_spin_180
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text15
  3118   00195C                     __ptext15:
  3119                           	callstack 0
  3120   00195C                     _motor_action:
  3121                           	callstack 25
  3122   00195C                     
  3123                           ;../dc_motor.c: 181: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 182: {;../dc_motor.c: 183:     switch (color){
  3124   00195C  EF18  F00D         	goto	l2692
  3125   001960                     l2676:
  3126                           
  3127                           ;../dc_motor.c: 185:             right_90(l,r);
  3128   001960  C026  F01C         	movff	motor_action@l,right_90@mL
  3129   001964  C027  F01D         	movff	motor_action@l+1,right_90@mL+1
  3130   001968  C028  F01E         	movff	motor_action@r,right_90@mR
  3131   00196C  C029  F01F         	movff	motor_action@r+1,right_90@mR+1
  3132   001970  EC1B  F00F         	call	_right_90	;wreg free
  3133                           
  3134                           ;../dc_motor.c: 186:             break;
  3135   001974  EF42  F00D         	goto	l298
  3136   001978                     l2678:
  3137                           
  3138                           ;../dc_motor.c: 188:             left_90(l,r);
  3139   001978  C026  F01C         	movff	motor_action@l,left_90@mL
  3140   00197C  C027  F01D         	movff	motor_action@l+1,left_90@mL+1
  3141   001980  C028  F01E         	movff	motor_action@r,left_90@mR
  3142   001984  C029  F01F         	movff	motor_action@r+1,left_90@mR+1
  3143   001988  EC6D  F00F         	call	_left_90	;wreg free
  3144                           
  3145                           ;../dc_motor.c: 189:             break;
  3146   00198C  EF42  F00D         	goto	l298
  3147   001990                     l2680:
  3148                           
  3149                           ;../dc_motor.c: 191:             spin_180(l,r);
  3150   001990  C026  F01C         	movff	motor_action@l,spin_180@mL
  3151   001994  C027  F01D         	movff	motor_action@l+1,spin_180@mL+1
  3152   001998  C028  F01E         	movff	motor_action@r,spin_180@mR
  3153   00199C  C029  F01F         	movff	motor_action@r+1,spin_180@mR+1
  3154   0019A0  ECBF  F00F         	call	_spin_180	;wreg free
  3155                           
  3156                           ;../dc_motor.c: 192:             break;
  3157   0019A4  EF42  F00D         	goto	l298
  3158   0019A8                     l2682:
  3159                           
  3160                           ;../dc_motor.c: 194:             reverse(l,r);
  3161   0019A8  C026  F01C         	movff	motor_action@l,reverse@mL
  3162   0019AC  C027  F01D         	movff	motor_action@l+1,reverse@mL+1
  3163   0019B0  C028  F01E         	movff	motor_action@r,reverse@mR
  3164   0019B4  C029  F01F         	movff	motor_action@r+1,reverse@mR+1
  3165   0019B8  EC61  F010         	call	_reverse	;wreg free
  3166                           
  3167                           ;../dc_motor.c: 195:             right_90(l,r);
  3168   0019BC  C026  F01C         	movff	motor_action@l,right_90@mL
  3169   0019C0  C027  F01D         	movff	motor_action@l+1,right_90@mL+1
  3170   0019C4  C028  F01E         	movff	motor_action@r,right_90@mR
  3171   0019C8  C029  F01F         	movff	motor_action@r+1,right_90@mR+1
  3172   0019CC  EC1B  F00F         	call	_right_90	;wreg free
  3173                           
  3174                           ;../dc_motor.c: 196:             break;
  3175   0019D0  EF42  F00D         	goto	l298
  3176   0019D4                     l2684:
  3177                           
  3178                           ;../dc_motor.c: 198:             reverse(l,r);
  3179   0019D4  C026  F01C         	movff	motor_action@l,reverse@mL
  3180   0019D8  C027  F01D         	movff	motor_action@l+1,reverse@mL+1
  3181   0019DC  C028  F01E         	movff	motor_action@r,reverse@mR
  3182   0019E0  C029  F01F         	movff	motor_action@r+1,reverse@mR+1
  3183   0019E4  EC61  F010         	call	_reverse	;wreg free
  3184                           
  3185                           ;../dc_motor.c: 199:             left_90(l,r);
  3186   0019E8  C026  F01C         	movff	motor_action@l,left_90@mL
  3187   0019EC  C027  F01D         	movff	motor_action@l+1,left_90@mL+1
  3188   0019F0  C028  F01E         	movff	motor_action@r,left_90@mR
  3189   0019F4  C029  F01F         	movff	motor_action@r+1,left_90@mR+1
  3190   0019F8  EC6D  F00F         	call	_left_90	;wreg free
  3191                           
  3192                           ;../dc_motor.c: 200:             break;
  3193   0019FC  EF42  F00D         	goto	l298
  3194   001A00                     l2686:
  3195                           
  3196                           ;../dc_motor.c: 202:             right_135(l,r);
  3197   001A00  C026  F01C         	movff	motor_action@l,right_135@mL
  3198   001A04  C027  F01D         	movff	motor_action@l+1,right_135@mL+1
  3199   001A08  C028  F01E         	movff	motor_action@r,right_135@mR
  3200   001A0C  C029  F01F         	movff	motor_action@r+1,right_135@mR+1
  3201   001A10  EC10  F010         	call	_right_135	;wreg free
  3202                           
  3203                           ;../dc_motor.c: 203:             break;
  3204   001A14  EF42  F00D         	goto	l298
  3205   001A18                     l2688:
  3206                           
  3207                           ;../dc_motor.c: 205:             left_135(l,r);
  3208   001A18  C026  F01C         	movff	motor_action@l,left_135@mL
  3209   001A1C  C027  F01D         	movff	motor_action@l+1,left_135@mL+1
  3210   001A20  C028  F01E         	movff	motor_action@r,left_135@mR
  3211   001A24  C029  F01F         	movff	motor_action@r+1,left_135@mR+1
  3212   001A28  ECB2  F010         	call	_left_135	;wreg free
  3213                           
  3214                           ;../dc_motor.c: 206:             break;
  3215   001A2C  EF42  F00D         	goto	l298
  3216   001A30                     l2692:
  3217   001A30  C024  F02A         	movff	motor_action@color,??_motor_action
  3218   001A34  C025  F02B         	movff	motor_action@color+1,??_motor_action+1
  3219                           
  3220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3221                           ; Switch size 1, requested type "simple"
  3222                           ; Number of cases is 1, Range of values is 0 to 0
  3223                           ; switch strategies available:
  3224                           ; Name         Instructions Cycles
  3225                           ; simple_byte            4     3 (average)
  3226                           ;	Chosen strategy is simple_byte
  3227   001A38  502B               	movf	(??_motor_action+1)^0,w,c
  3228   001A3A  0A00               	xorlw	0	; case 0
  3229   001A3C  B4D8               	btfsc	status,2,c
  3230   001A3E  EF23  F00D         	goto	l2968
  3231   001A42  EF42  F00D         	goto	l298
  3232   001A46                     l2968:
  3233                           
  3234                           ; Switch size 1, requested type "simple"
  3235                           ; Number of cases is 7, Range of values is 1 to 7
  3236                           ; switch strategies available:
  3237                           ; Name         Instructions Cycles
  3238                           ; simple_byte           22    12 (average)
  3239                           ;	Chosen strategy is simple_byte
  3240   001A46  502A               	movf	??_motor_action^0,w,c
  3241   001A48  0A01               	xorlw	1	; case 1
  3242   001A4A  B4D8               	btfsc	status,2,c
  3243   001A4C  EFB0  F00C         	goto	l2676
  3244   001A50  0A03               	xorlw	3	; case 2
  3245   001A52  B4D8               	btfsc	status,2,c
  3246   001A54  EFBC  F00C         	goto	l2678
  3247   001A58  0A01               	xorlw	1	; case 3
  3248   001A5A  B4D8               	btfsc	status,2,c
  3249   001A5C  EFC8  F00C         	goto	l2680
  3250   001A60  0A07               	xorlw	7	; case 4
  3251   001A62  B4D8               	btfsc	status,2,c
  3252   001A64  EFD4  F00C         	goto	l2682
  3253   001A68  0A01               	xorlw	1	; case 5
  3254   001A6A  B4D8               	btfsc	status,2,c
  3255   001A6C  EFEA  F00C         	goto	l2684
  3256   001A70  0A03               	xorlw	3	; case 6
  3257   001A72  B4D8               	btfsc	status,2,c
  3258   001A74  EF00  F00D         	goto	l2686
  3259   001A78  0A01               	xorlw	1	; case 7
  3260   001A7A  B4D8               	btfsc	status,2,c
  3261   001A7C  EF0C  F00D         	goto	l2688
  3262   001A80  EF42  F00D         	goto	l298
  3263   001A84                     l298:
  3264   001A84  0012               	return		;funcret
  3265   001A86                     __end_of_motor_action:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _spin_180 *****************
  3269 ;; Defined at:
  3270 ;;		line 136 in file "../dc_motor.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3273 ;;		 -> main@motorL(9), 
  3274 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3275 ;;		 -> main@motorR(9), 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  i               2   33[COMRAM] int 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;Total ram usage:        8 bytes
  3292 ;; Hardware stack levels used: 1
  3293 ;; Hardware stack levels required when called: 4
  3294 ;; This function calls:
  3295 ;;		_setMotorPWM
  3296 ;; This function is called by:
  3297 ;;		_motor_action
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text16
  3302   001F7E                     __ptext16:
  3303                           	callstack 0
  3304   001F7E                     _spin_180:
  3305                           	callstack 25
  3306   001F7E                     
  3307                           ;../dc_motor.c: 136: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 137: {;../dc_motor.c: 138:     mL->direction = 1;
  3308   001F7E  EE20 F001          	lfsr	2,1
  3309   001F82  501C               	movf	spin_180@mL^0,w,c
  3310   001F84  26D9               	addwf	fsr2l,f,c
  3311   001F86  501D               	movf	(spin_180@mL+1)^0,w,c
  3312   001F88  22DA               	addwfc	fsr2h,f,c
  3313   001F8A  0E01               	movlw	1
  3314   001F8C  6EDF               	movwf	indf2,c
  3315                           
  3316                           ;../dc_motor.c: 139:     mR->direction = 0;
  3317   001F8E  EE20 F001          	lfsr	2,1
  3318   001F92  501E               	movf	spin_180@mR^0,w,c
  3319   001F94  26D9               	addwf	fsr2l,f,c
  3320   001F96  501F               	movf	(spin_180@mR+1)^0,w,c
  3321   001F98  22DA               	addwfc	fsr2h,f,c
  3322   001F9A  0E00               	movlw	0
  3323   001F9C  6EDF               	movwf	indf2,c
  3324   001F9E                     
  3325                           ;../dc_motor.c: 140:     for (int i = 0;i<50;i = i + 2)
  3326   001F9E  0E00               	movlw	0
  3327   001FA0  6E23               	movwf	(spin_180@i+1)^0,c
  3328   001FA2  0E00               	movlw	0
  3329   001FA4  6E22               	movwf	spin_180@i^0,c
  3330   001FA6                     l2426:
  3331                           
  3332                           ;../dc_motor.c: 141:     {;../dc_motor.c: 142:         mL->power = i;
  3333   001FA6  C01C  FFD9         	movff	spin_180@mL,fsr2l
  3334   001FAA  C01D  FFDA         	movff	spin_180@mL+1,fsr2h
  3335   001FAE  C022  FFDF         	movff	spin_180@i,indf2
  3336   001FB2                     
  3337                           ;../dc_motor.c: 143:         mR->power = 50 + i;
  3338   001FB2  5022               	movf	spin_180@i^0,w,c
  3339   001FB4  0F32               	addlw	50
  3340   001FB6  C01E  FFD9         	movff	spin_180@mR,fsr2l
  3341   001FBA  C01F  FFDA         	movff	spin_180@mR+1,fsr2h
  3342   001FBE  6EDF               	movwf	indf2,c
  3343   001FC0                     
  3344                           ;../dc_motor.c: 144:         setMotorPWM(mL);
  3345   001FC0  C01C  F011         	movff	spin_180@mL,setMotorPWM@m
  3346   001FC4  C01D  F012         	movff	spin_180@mL+1,setMotorPWM@m+1
  3347   001FC8  EC9F  F009         	call	_setMotorPWM	;wreg free
  3348   001FCC                     
  3349                           ;../dc_motor.c: 145:         setMotorPWM(mR);
  3350   001FCC  C01E  F011         	movff	spin_180@mR,setMotorPWM@m
  3351   001FD0  C01F  F012         	movff	spin_180@mR+1,setMotorPWM@m+1
  3352   001FD4  EC9F  F009         	call	_setMotorPWM	;wreg free
  3353   001FD8                     
  3354                           ;../dc_motor.c: 146:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3355   001FD8  0E35               	movlw	53
  3356   001FDA                     u1727:
  3357   001FDA  2EE8               	decfsz	wreg,f,c
  3358   001FDC  D7FE               	bra	u1727
  3359   001FDE  F000               	nop	
  3360   001FE0                     
  3361                           ;../dc_motor.c: 147:     }
  3362   001FE0  0E02               	movlw	2
  3363   001FE2  2422               	addwf	spin_180@i^0,w,c
  3364   001FE4  6E22               	movwf	spin_180@i^0,c
  3365   001FE6  0E00               	movlw	0
  3366   001FE8  2023               	addwfc	(spin_180@i+1)^0,w,c
  3367   001FEA  6E23               	movwf	(spin_180@i+1)^0,c
  3368   001FEC  BE23               	btfsc	(spin_180@i+1)^0,7,c
  3369   001FEE  EF02  F010         	goto	u1321
  3370   001FF2  5023               	movf	(spin_180@i+1)^0,w,c
  3371   001FF4  E109               	bnz	u1320
  3372   001FF6  0E32               	movlw	50
  3373   001FF8  5C22               	subwf	spin_180@i^0,w,c
  3374   001FFA  A0D8               	btfss	status,0,c
  3375   001FFC  EF02  F010         	goto	u1321
  3376   002000  EF04  F010         	goto	u1320
  3377   002004                     u1321:
  3378   002004  EFD3  F00F         	goto	l2426
  3379   002008                     u1320:
  3380   002008                     
  3381                           ;../dc_motor.c: 148:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3382   002008  0E18               	movlw	24
  3383   00200A  6E21               	movwf	(??_spin_180+1)^0,c
  3384   00200C  0E8A               	movlw	138
  3385   00200E  6E20               	movwf	??_spin_180^0,c
  3386   002010  0EE8               	movlw	232
  3387   002012                     u1737:
  3388   002012  2EE8               	decfsz	wreg,f,c
  3389   002014  D7FE               	bra	u1737
  3390   002016  2E20               	decfsz	??_spin_180^0,f,c
  3391   002018  D7FC               	bra	u1737
  3392   00201A  2E21               	decfsz	(??_spin_180+1)^0,f,c
  3393   00201C  D7FA               	bra	u1737
  3394   00201E  0012               	return		;funcret
  3395   002020                     __end_of_spin_180:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _right_90 *****************
  3399 ;; Defined at:
  3400 ;;		line 106 in file "../dc_motor.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3403 ;;		 -> main@motorL(9), 
  3404 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3405 ;;		 -> main@motorR(9), 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  i               2   33[COMRAM] int 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;Total ram usage:        8 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 4
  3424 ;; This function calls:
  3425 ;;		_setMotorPWM
  3426 ;; This function is called by:
  3427 ;;		_motor_action
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text17
  3432   001E36                     __ptext17:
  3433                           	callstack 0
  3434   001E36                     _right_90:
  3435                           	callstack 25
  3436   001E36                     
  3437                           ;../dc_motor.c: 106: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 107: {;../dc_motor.c: 108:     mL->direction = 1;
  3438   001E36  EE20 F001          	lfsr	2,1
  3439   001E3A  501C               	movf	right_90@mL^0,w,c
  3440   001E3C  26D9               	addwf	fsr2l,f,c
  3441   001E3E  501D               	movf	(right_90@mL+1)^0,w,c
  3442   001E40  22DA               	addwfc	fsr2h,f,c
  3443   001E42  0E01               	movlw	1
  3444   001E44  6EDF               	movwf	indf2,c
  3445                           
  3446                           ;../dc_motor.c: 109:     mR->direction = 0;
  3447   001E46  EE20 F001          	lfsr	2,1
  3448   001E4A  501E               	movf	right_90@mR^0,w,c
  3449   001E4C  26D9               	addwf	fsr2l,f,c
  3450   001E4E  501F               	movf	(right_90@mR+1)^0,w,c
  3451   001E50  22DA               	addwfc	fsr2h,f,c
  3452   001E52  0E00               	movlw	0
  3453   001E54  6EDF               	movwf	indf2,c
  3454   001E56                     
  3455                           ;../dc_motor.c: 110:     for (int i = 0;i<50;i = i + 2)
  3456   001E56  0E00               	movlw	0
  3457   001E58  6E23               	movwf	(right_90@i+1)^0,c
  3458   001E5A  0E00               	movlw	0
  3459   001E5C  6E22               	movwf	right_90@i^0,c
  3460   001E5E                     l2378:
  3461                           
  3462                           ;../dc_motor.c: 111:     {;../dc_motor.c: 112:         mL->power = i;
  3463   001E5E  C01C  FFD9         	movff	right_90@mL,fsr2l
  3464   001E62  C01D  FFDA         	movff	right_90@mL+1,fsr2h
  3465   001E66  C022  FFDF         	movff	right_90@i,indf2
  3466   001E6A                     
  3467                           ;../dc_motor.c: 113:         mR->power = 50 + i;
  3468   001E6A  5022               	movf	right_90@i^0,w,c
  3469   001E6C  0F32               	addlw	50
  3470   001E6E  C01E  FFD9         	movff	right_90@mR,fsr2l
  3471   001E72  C01F  FFDA         	movff	right_90@mR+1,fsr2h
  3472   001E76  6EDF               	movwf	indf2,c
  3473   001E78                     
  3474                           ;../dc_motor.c: 114:         setMotorPWM(mL);
  3475   001E78  C01C  F011         	movff	right_90@mL,setMotorPWM@m
  3476   001E7C  C01D  F012         	movff	right_90@mL+1,setMotorPWM@m+1
  3477   001E80  EC9F  F009         	call	_setMotorPWM	;wreg free
  3478   001E84                     
  3479                           ;../dc_motor.c: 115:         setMotorPWM(mR);
  3480   001E84  C01E  F011         	movff	right_90@mR,setMotorPWM@m
  3481   001E88  C01F  F012         	movff	right_90@mR+1,setMotorPWM@m+1
  3482   001E8C  EC9F  F009         	call	_setMotorPWM	;wreg free
  3483   001E90                     
  3484                           ;../dc_motor.c: 116:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3485   001E90  0E35               	movlw	53
  3486   001E92                     u1747:
  3487   001E92  2EE8               	decfsz	wreg,f,c
  3488   001E94  D7FE               	bra	u1747
  3489   001E96  F000               	nop	
  3490   001E98                     
  3491                           ;../dc_motor.c: 117:     }
  3492   001E98  0E02               	movlw	2
  3493   001E9A  2422               	addwf	right_90@i^0,w,c
  3494   001E9C  6E22               	movwf	right_90@i^0,c
  3495   001E9E  0E00               	movlw	0
  3496   001EA0  2023               	addwfc	(right_90@i+1)^0,w,c
  3497   001EA2  6E23               	movwf	(right_90@i+1)^0,c
  3498   001EA4  BE23               	btfsc	(right_90@i+1)^0,7,c
  3499   001EA6  EF5E  F00F         	goto	u1301
  3500   001EAA  5023               	movf	(right_90@i+1)^0,w,c
  3501   001EAC  E109               	bnz	u1300
  3502   001EAE  0E32               	movlw	50
  3503   001EB0  5C22               	subwf	right_90@i^0,w,c
  3504   001EB2  A0D8               	btfss	status,0,c
  3505   001EB4  EF5E  F00F         	goto	u1301
  3506   001EB8  EF60  F00F         	goto	u1300
  3507   001EBC                     u1301:
  3508   001EBC  EF2F  F00F         	goto	l2378
  3509   001EC0                     u1300:
  3510   001EC0                     
  3511                           ;../dc_motor.c: 118:     _delay((unsigned long)((165)*(64000000/4000.0)));
  3512   001EC0  0E0E               	movlw	14
  3513   001EC2  6E21               	movwf	(??_right_90+1)^0,c
  3514   001EC4  0E65               	movlw	101
  3515   001EC6  6E20               	movwf	??_right_90^0,c
  3516   001EC8  0E87               	movlw	135
  3517   001ECA                     u1757:
  3518   001ECA  2EE8               	decfsz	wreg,f,c
  3519   001ECC  D7FE               	bra	u1757
  3520   001ECE  2E20               	decfsz	??_right_90^0,f,c
  3521   001ED0  D7FC               	bra	u1757
  3522   001ED2  2E21               	decfsz	(??_right_90+1)^0,f,c
  3523   001ED4  D7FA               	bra	u1757
  3524   001ED6  F000               	nop	
  3525   001ED8  0012               	return		;funcret
  3526   001EDA                     __end_of_right_90:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _right_135 *****************
  3530 ;; Defined at:
  3531 ;;		line 151 in file "../dc_motor.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3534 ;;		 -> main@motorL(9), 
  3535 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3536 ;;		 -> main@motorR(9), 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  i               2   33[COMRAM] int 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;Total ram usage:        8 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 4
  3555 ;; This function calls:
  3556 ;;		_setMotorPWM
  3557 ;; This function is called by:
  3558 ;;		_motor_action
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text18
  3563   002020                     __ptext18:
  3564                           	callstack 0
  3565   002020                     _right_135:
  3566                           	callstack 25
  3567   002020                     
  3568                           ;../dc_motor.c: 151: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 152: {;../dc_motor.c: 153:     mL->direction = 1;
  3569   002020  EE20 F001          	lfsr	2,1
  3570   002024  501C               	movf	right_135@mL^0,w,c
  3571   002026  26D9               	addwf	fsr2l,f,c
  3572   002028  501D               	movf	(right_135@mL+1)^0,w,c
  3573   00202A  22DA               	addwfc	fsr2h,f,c
  3574   00202C  0E01               	movlw	1
  3575   00202E  6EDF               	movwf	indf2,c
  3576                           
  3577                           ;../dc_motor.c: 154:     mR->direction = 0;
  3578   002030  EE20 F001          	lfsr	2,1
  3579   002034  501E               	movf	right_135@mR^0,w,c
  3580   002036  26D9               	addwf	fsr2l,f,c
  3581   002038  501F               	movf	(right_135@mR+1)^0,w,c
  3582   00203A  22DA               	addwfc	fsr2h,f,c
  3583   00203C  0E00               	movlw	0
  3584   00203E  6EDF               	movwf	indf2,c
  3585   002040                     
  3586                           ;../dc_motor.c: 155:     for (int i = 0;i<50;i = i + 2)
  3587   002040  0E00               	movlw	0
  3588   002042  6E23               	movwf	(right_135@i+1)^0,c
  3589   002044  0E00               	movlw	0
  3590   002046  6E22               	movwf	right_135@i^0,c
  3591   002048                     l2450:
  3592                           
  3593                           ;../dc_motor.c: 156:     {;../dc_motor.c: 157:         mL->power = i;
  3594   002048  C01C  FFD9         	movff	right_135@mL,fsr2l
  3595   00204C  C01D  FFDA         	movff	right_135@mL+1,fsr2h
  3596   002050  C022  FFDF         	movff	right_135@i,indf2
  3597   002054                     
  3598                           ;../dc_motor.c: 158:         mR->power = 50 + i;
  3599   002054  5022               	movf	right_135@i^0,w,c
  3600   002056  0F32               	addlw	50
  3601   002058  C01E  FFD9         	movff	right_135@mR,fsr2l
  3602   00205C  C01F  FFDA         	movff	right_135@mR+1,fsr2h
  3603   002060  6EDF               	movwf	indf2,c
  3604   002062                     
  3605                           ;../dc_motor.c: 159:         setMotorPWM(mL);
  3606   002062  C01C  F011         	movff	right_135@mL,setMotorPWM@m
  3607   002066  C01D  F012         	movff	right_135@mL+1,setMotorPWM@m+1
  3608   00206A  EC9F  F009         	call	_setMotorPWM	;wreg free
  3609   00206E                     
  3610                           ;../dc_motor.c: 160:         setMotorPWM(mR);
  3611   00206E  C01E  F011         	movff	right_135@mR,setMotorPWM@m
  3612   002072  C01F  F012         	movff	right_135@mR+1,setMotorPWM@m+1
  3613   002076  EC9F  F009         	call	_setMotorPWM	;wreg free
  3614   00207A                     
  3615                           ;../dc_motor.c: 161:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3616   00207A  0E35               	movlw	53
  3617   00207C                     u1767:
  3618   00207C  2EE8               	decfsz	wreg,f,c
  3619   00207E  D7FE               	bra	u1767
  3620   002080  F000               	nop	
  3621   002082                     
  3622                           ;../dc_motor.c: 162:     }
  3623   002082  0E02               	movlw	2
  3624   002084  2422               	addwf	right_135@i^0,w,c
  3625   002086  6E22               	movwf	right_135@i^0,c
  3626   002088  0E00               	movlw	0
  3627   00208A  2023               	addwfc	(right_135@i+1)^0,w,c
  3628   00208C  6E23               	movwf	(right_135@i+1)^0,c
  3629   00208E  BE23               	btfsc	(right_135@i+1)^0,7,c
  3630   002090  EF53  F010         	goto	u1331
  3631   002094  5023               	movf	(right_135@i+1)^0,w,c
  3632   002096  E109               	bnz	u1330
  3633   002098  0E32               	movlw	50
  3634   00209A  5C22               	subwf	right_135@i^0,w,c
  3635   00209C  A0D8               	btfss	status,0,c
  3636   00209E  EF53  F010         	goto	u1331
  3637   0020A2  EF55  F010         	goto	u1330
  3638   0020A6                     u1331:
  3639   0020A6  EF24  F010         	goto	l2450
  3640   0020AA                     u1330:
  3641   0020AA                     
  3642                           ;../dc_motor.c: 163:     _delay((unsigned long)((230)*(64000000/4000.0)));
  3643   0020AA  0E13               	movlw	19
  3644   0020AC  6E21               	movwf	(??_right_135+1)^0,c
  3645   0020AE  0EAC               	movlw	172
  3646   0020B0  6E20               	movwf	??_right_135^0,c
  3647   0020B2  0E2A               	movlw	42
  3648   0020B4                     u1777:
  3649   0020B4  2EE8               	decfsz	wreg,f,c
  3650   0020B6  D7FE               	bra	u1777
  3651   0020B8  2E20               	decfsz	??_right_135^0,f,c
  3652   0020BA  D7FC               	bra	u1777
  3653   0020BC  2E21               	decfsz	(??_right_135+1)^0,f,c
  3654   0020BE  D7FA               	bra	u1777
  3655   0020C0  0012               	return		;funcret
  3656   0020C2                     __end_of_right_135:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function _reverse *****************
  3660 ;; Defined at:
  3661 ;;		line 91 in file "../dc_motor.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3664 ;;		 -> main@motorL(9), 
  3665 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3666 ;;		 -> main@motorR(9), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  i               2   33[COMRAM] int 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;Total ram usage:        8 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 4
  3685 ;; This function calls:
  3686 ;;		_setMotorPWM
  3687 ;; This function is called by:
  3688 ;;		_motor_action
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text19
  3693   0020C2                     __ptext19:
  3694                           	callstack 0
  3695   0020C2                     _reverse:
  3696                           	callstack 25
  3697   0020C2                     
  3698                           ;../dc_motor.c: 91: void reverse (struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 92: {;../dc_motor.c: 93:     mL->direction = 0;
  3699   0020C2  EE20 F001          	lfsr	2,1
  3700   0020C6  501C               	movf	reverse@mL^0,w,c
  3701   0020C8  26D9               	addwf	fsr2l,f,c
  3702   0020CA  501D               	movf	(reverse@mL+1)^0,w,c
  3703   0020CC  22DA               	addwfc	fsr2h,f,c
  3704   0020CE  0E00               	movlw	0
  3705   0020D0  6EDF               	movwf	indf2,c
  3706                           
  3707                           ;../dc_motor.c: 94:     mR->direction = 0;
  3708   0020D2  EE20 F001          	lfsr	2,1
  3709   0020D6  501E               	movf	reverse@mR^0,w,c
  3710   0020D8  26D9               	addwf	fsr2l,f,c
  3711   0020DA  501F               	movf	(reverse@mR+1)^0,w,c
  3712   0020DC  22DA               	addwfc	fsr2h,f,c
  3713   0020DE  0E00               	movlw	0
  3714   0020E0  6EDF               	movwf	indf2,c
  3715   0020E2                     
  3716                           ;../dc_motor.c: 95:     for (int i=0;i<51;i=i + 2)
  3717   0020E2  0E00               	movlw	0
  3718   0020E4  6E23               	movwf	(reverse@i+1)^0,c
  3719   0020E6  0E00               	movlw	0
  3720   0020E8  6E22               	movwf	reverse@i^0,c
  3721   0020EA                     l2356:
  3722                           
  3723                           ;../dc_motor.c: 96:     {;../dc_motor.c: 97:         mL->power = i;
  3724   0020EA  C01C  FFD9         	movff	reverse@mL,fsr2l
  3725   0020EE  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3726   0020F2  C022  FFDF         	movff	reverse@i,indf2
  3727                           
  3728                           ;../dc_motor.c: 98:         mR->power = i;
  3729   0020F6  C01E  FFD9         	movff	reverse@mR,fsr2l
  3730   0020FA  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3731   0020FE  C022  FFDF         	movff	reverse@i,indf2
  3732   002102                     
  3733                           ;../dc_motor.c: 99:         setMotorPWM(mL);
  3734   002102  C01C  F011         	movff	reverse@mL,setMotorPWM@m
  3735   002106  C01D  F012         	movff	reverse@mL+1,setMotorPWM@m+1
  3736   00210A  EC9F  F009         	call	_setMotorPWM	;wreg free
  3737   00210E                     
  3738                           ;../dc_motor.c: 100:         setMotorPWM(mR);
  3739   00210E  C01E  F011         	movff	reverse@mR,setMotorPWM@m
  3740   002112  C01F  F012         	movff	reverse@mR+1,setMotorPWM@m+1
  3741   002116  EC9F  F009         	call	_setMotorPWM	;wreg free
  3742   00211A                     
  3743                           ;../dc_motor.c: 101:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3744   00211A  0E35               	movlw	53
  3745   00211C                     u1787:
  3746   00211C  2EE8               	decfsz	wreg,f,c
  3747   00211E  D7FE               	bra	u1787
  3748   002120  F000               	nop	
  3749   002122                     
  3750                           ;../dc_motor.c: 102:     }
  3751   002122  0E02               	movlw	2
  3752   002124  2422               	addwf	reverse@i^0,w,c
  3753   002126  6E22               	movwf	reverse@i^0,c
  3754   002128  0E00               	movlw	0
  3755   00212A  2023               	addwfc	(reverse@i+1)^0,w,c
  3756   00212C  6E23               	movwf	(reverse@i+1)^0,c
  3757   00212E  BE23               	btfsc	(reverse@i+1)^0,7,c
  3758   002130  EFA3  F010         	goto	u1291
  3759   002134  5023               	movf	(reverse@i+1)^0,w,c
  3760   002136  E109               	bnz	u1290
  3761   002138  0E33               	movlw	51
  3762   00213A  5C22               	subwf	reverse@i^0,w,c
  3763   00213C  A0D8               	btfss	status,0,c
  3764   00213E  EFA3  F010         	goto	u1291
  3765   002142  EFA5  F010         	goto	u1290
  3766   002146                     u1291:
  3767   002146  EF75  F010         	goto	l2356
  3768   00214A                     u1290:
  3769   00214A                     
  3770                           ;../dc_motor.c: 103:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  3771   00214A  0E5A               	movlw	90
  3772   00214C  6E21               	movwf	(??_reverse+1)^0,c
  3773   00214E  0E49               	movlw	73
  3774   002150  6E20               	movwf	??_reverse^0,c
  3775   002152  0EE7               	movlw	231
  3776   002154                     u1797:
  3777   002154  2EE8               	decfsz	wreg,f,c
  3778   002156  D7FE               	bra	u1797
  3779   002158  2E20               	decfsz	??_reverse^0,f,c
  3780   00215A  D7FC               	bra	u1797
  3781   00215C  2E21               	decfsz	(??_reverse+1)^0,f,c
  3782   00215E  D7FA               	bra	u1797
  3783   002160  F000               	nop	
  3784   002162  0012               	return		;funcret
  3785   002164                     __end_of_reverse:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _left_90 *****************
  3789 ;; Defined at:
  3790 ;;		line 121 in file "../dc_motor.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3793 ;;		 -> main@motorL(9), 
  3794 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3795 ;;		 -> main@motorR(9), 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  i               2   33[COMRAM] int 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3811 ;;Total ram usage:        8 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 4
  3814 ;; This function calls:
  3815 ;;		_setMotorPWM
  3816 ;; This function is called by:
  3817 ;;		_motor_action
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text20
  3822   001EDA                     __ptext20:
  3823                           	callstack 0
  3824   001EDA                     _left_90:
  3825                           	callstack 25
  3826   001EDA                     
  3827                           ;../dc_motor.c: 121: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 122: {;../dc_motor.c: 123:     mL->direction = 0;
  3828   001EDA  EE20 F001          	lfsr	2,1
  3829   001EDE  501C               	movf	left_90@mL^0,w,c
  3830   001EE0  26D9               	addwf	fsr2l,f,c
  3831   001EE2  501D               	movf	(left_90@mL+1)^0,w,c
  3832   001EE4  22DA               	addwfc	fsr2h,f,c
  3833   001EE6  0E00               	movlw	0
  3834   001EE8  6EDF               	movwf	indf2,c
  3835                           
  3836                           ;../dc_motor.c: 124:     mR->direction = 1;
  3837   001EEA  EE20 F001          	lfsr	2,1
  3838   001EEE  501E               	movf	left_90@mR^0,w,c
  3839   001EF0  26D9               	addwf	fsr2l,f,c
  3840   001EF2  501F               	movf	(left_90@mR+1)^0,w,c
  3841   001EF4  22DA               	addwfc	fsr2h,f,c
  3842   001EF6  0E01               	movlw	1
  3843   001EF8  6EDF               	movwf	indf2,c
  3844   001EFA                     
  3845                           ;../dc_motor.c: 125:     for (int i = 0;i<50;i = i + 2)
  3846   001EFA  0E00               	movlw	0
  3847   001EFC  6E23               	movwf	(left_90@i+1)^0,c
  3848   001EFE  0E00               	movlw	0
  3849   001F00  6E22               	movwf	left_90@i^0,c
  3850   001F02                     l2402:
  3851                           
  3852                           ;../dc_motor.c: 126:     {;../dc_motor.c: 127:         mL->power = 50 + i;
  3853   001F02  5022               	movf	left_90@i^0,w,c
  3854   001F04  0F32               	addlw	50
  3855   001F06  C01C  FFD9         	movff	left_90@mL,fsr2l
  3856   001F0A  C01D  FFDA         	movff	left_90@mL+1,fsr2h
  3857   001F0E  6EDF               	movwf	indf2,c
  3858   001F10                     
  3859                           ;../dc_motor.c: 128:         mR->power = i;
  3860   001F10  C01E  FFD9         	movff	left_90@mR,fsr2l
  3861   001F14  C01F  FFDA         	movff	left_90@mR+1,fsr2h
  3862   001F18  C022  FFDF         	movff	left_90@i,indf2
  3863   001F1C                     
  3864                           ;../dc_motor.c: 129:         setMotorPWM(mL);
  3865   001F1C  C01C  F011         	movff	left_90@mL,setMotorPWM@m
  3866   001F20  C01D  F012         	movff	left_90@mL+1,setMotorPWM@m+1
  3867   001F24  EC9F  F009         	call	_setMotorPWM	;wreg free
  3868   001F28                     
  3869                           ;../dc_motor.c: 130:         setMotorPWM(mR);
  3870   001F28  C01E  F011         	movff	left_90@mR,setMotorPWM@m
  3871   001F2C  C01F  F012         	movff	left_90@mR+1,setMotorPWM@m+1
  3872   001F30  EC9F  F009         	call	_setMotorPWM	;wreg free
  3873   001F34                     
  3874                           ;../dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3875   001F34  0E35               	movlw	53
  3876   001F36                     u1807:
  3877   001F36  2EE8               	decfsz	wreg,f,c
  3878   001F38  D7FE               	bra	u1807
  3879   001F3A  F000               	nop	
  3880   001F3C                     
  3881                           ;../dc_motor.c: 132:     }
  3882   001F3C  0E02               	movlw	2
  3883   001F3E  2422               	addwf	left_90@i^0,w,c
  3884   001F40  6E22               	movwf	left_90@i^0,c
  3885   001F42  0E00               	movlw	0
  3886   001F44  2023               	addwfc	(left_90@i+1)^0,w,c
  3887   001F46  6E23               	movwf	(left_90@i+1)^0,c
  3888   001F48  BE23               	btfsc	(left_90@i+1)^0,7,c
  3889   001F4A  EFB0  F00F         	goto	u1311
  3890   001F4E  5023               	movf	(left_90@i+1)^0,w,c
  3891   001F50  E109               	bnz	u1310
  3892   001F52  0E32               	movlw	50
  3893   001F54  5C22               	subwf	left_90@i^0,w,c
  3894   001F56  A0D8               	btfss	status,0,c
  3895   001F58  EFB0  F00F         	goto	u1311
  3896   001F5C  EFB2  F00F         	goto	u1310
  3897   001F60                     u1311:
  3898   001F60  EF81  F00F         	goto	l2402
  3899   001F64                     u1310:
  3900   001F64                     
  3901                           ;../dc_motor.c: 133:     _delay((unsigned long)((165)*(64000000/4000.0)));
  3902   001F64  0E0E               	movlw	14
  3903   001F66  6E21               	movwf	(??_left_90+1)^0,c
  3904   001F68  0E65               	movlw	101
  3905   001F6A  6E20               	movwf	??_left_90^0,c
  3906   001F6C  0E87               	movlw	135
  3907   001F6E                     u1817:
  3908   001F6E  2EE8               	decfsz	wreg,f,c
  3909   001F70  D7FE               	bra	u1817
  3910   001F72  2E20               	decfsz	??_left_90^0,f,c
  3911   001F74  D7FC               	bra	u1817
  3912   001F76  2E21               	decfsz	(??_left_90+1)^0,f,c
  3913   001F78  D7FA               	bra	u1817
  3914   001F7A  F000               	nop	
  3915   001F7C  0012               	return		;funcret
  3916   001F7E                     __end_of_left_90:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _left_135 *****************
  3920 ;; Defined at:
  3921 ;;		line 166 in file "../dc_motor.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3924 ;;		 -> main@motorL(9), 
  3925 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3926 ;;		 -> main@motorR(9), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  i               2   33[COMRAM] int 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;Total ram usage:        8 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; Hardware stack levels required when called: 4
  3945 ;; This function calls:
  3946 ;;		_setMotorPWM
  3947 ;; This function is called by:
  3948 ;;		_motor_action
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text21
  3953   002164                     __ptext21:
  3954                           	callstack 0
  3955   002164                     _left_135:
  3956                           	callstack 25
  3957   002164                     
  3958                           ;../dc_motor.c: 166: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 167: {;../dc_motor.c: 168:     mL->direction = 0;
  3959   002164  EE20 F001          	lfsr	2,1
  3960   002168  501C               	movf	left_135@mL^0,w,c
  3961   00216A  26D9               	addwf	fsr2l,f,c
  3962   00216C  501D               	movf	(left_135@mL+1)^0,w,c
  3963   00216E  22DA               	addwfc	fsr2h,f,c
  3964   002170  0E00               	movlw	0
  3965   002172  6EDF               	movwf	indf2,c
  3966                           
  3967                           ;../dc_motor.c: 169:     mR->direction = 1;
  3968   002174  EE20 F001          	lfsr	2,1
  3969   002178  501E               	movf	left_135@mR^0,w,c
  3970   00217A  26D9               	addwf	fsr2l,f,c
  3971   00217C  501F               	movf	(left_135@mR+1)^0,w,c
  3972   00217E  22DA               	addwfc	fsr2h,f,c
  3973   002180  0E01               	movlw	1
  3974   002182  6EDF               	movwf	indf2,c
  3975   002184                     
  3976                           ;../dc_motor.c: 170:     for (int i = 0;i<50;i = i + 2)
  3977   002184  0E00               	movlw	0
  3978   002186  6E23               	movwf	(left_135@i+1)^0,c
  3979   002188  0E00               	movlw	0
  3980   00218A  6E22               	movwf	left_135@i^0,c
  3981   00218C                     l2474:
  3982                           
  3983                           ;../dc_motor.c: 171:     {;../dc_motor.c: 172:         mL->power = 50 + i;
  3984   00218C  5022               	movf	left_135@i^0,w,c
  3985   00218E  0F32               	addlw	50
  3986   002190  C01C  FFD9         	movff	left_135@mL,fsr2l
  3987   002194  C01D  FFDA         	movff	left_135@mL+1,fsr2h
  3988   002198  6EDF               	movwf	indf2,c
  3989   00219A                     
  3990                           ;../dc_motor.c: 173:         mR->power = i;
  3991   00219A  C01E  FFD9         	movff	left_135@mR,fsr2l
  3992   00219E  C01F  FFDA         	movff	left_135@mR+1,fsr2h
  3993   0021A2  C022  FFDF         	movff	left_135@i,indf2
  3994   0021A6                     
  3995                           ;../dc_motor.c: 174:         setMotorPWM(mL);
  3996   0021A6  C01C  F011         	movff	left_135@mL,setMotorPWM@m
  3997   0021AA  C01D  F012         	movff	left_135@mL+1,setMotorPWM@m+1
  3998   0021AE  EC9F  F009         	call	_setMotorPWM	;wreg free
  3999   0021B2                     
  4000                           ;../dc_motor.c: 175:         setMotorPWM(mR);
  4001   0021B2  C01E  F011         	movff	left_135@mR,setMotorPWM@m
  4002   0021B6  C01F  F012         	movff	left_135@mR+1,setMotorPWM@m+1
  4003   0021BA  EC9F  F009         	call	_setMotorPWM	;wreg free
  4004   0021BE                     
  4005                           ;../dc_motor.c: 176:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4006   0021BE  0E35               	movlw	53
  4007   0021C0                     u1827:
  4008   0021C0  2EE8               	decfsz	wreg,f,c
  4009   0021C2  D7FE               	bra	u1827
  4010   0021C4  F000               	nop	
  4011   0021C6                     
  4012                           ;../dc_motor.c: 177:     }
  4013   0021C6  0E02               	movlw	2
  4014   0021C8  2422               	addwf	left_135@i^0,w,c
  4015   0021CA  6E22               	movwf	left_135@i^0,c
  4016   0021CC  0E00               	movlw	0
  4017   0021CE  2023               	addwfc	(left_135@i+1)^0,w,c
  4018   0021D0  6E23               	movwf	(left_135@i+1)^0,c
  4019   0021D2  BE23               	btfsc	(left_135@i+1)^0,7,c
  4020   0021D4  EFF5  F010         	goto	u1341
  4021   0021D8  5023               	movf	(left_135@i+1)^0,w,c
  4022   0021DA  E109               	bnz	u1340
  4023   0021DC  0E32               	movlw	50
  4024   0021DE  5C22               	subwf	left_135@i^0,w,c
  4025   0021E0  A0D8               	btfss	status,0,c
  4026   0021E2  EFF5  F010         	goto	u1341
  4027   0021E6  EFF7  F010         	goto	u1340
  4028   0021EA                     u1341:
  4029   0021EA  EFC6  F010         	goto	l2474
  4030   0021EE                     u1340:
  4031   0021EE                     
  4032                           ;../dc_motor.c: 178:     _delay((unsigned long)((230)*(64000000/4000.0)));
  4033   0021EE  0E13               	movlw	19
  4034   0021F0  6E21               	movwf	(??_left_135+1)^0,c
  4035   0021F2  0EAC               	movlw	172
  4036   0021F4  6E20               	movwf	??_left_135^0,c
  4037   0021F6  0E2A               	movlw	42
  4038   0021F8                     u1837:
  4039   0021F8  2EE8               	decfsz	wreg,f,c
  4040   0021FA  D7FE               	bra	u1837
  4041   0021FC  2E20               	decfsz	??_left_135^0,f,c
  4042   0021FE  D7FC               	bra	u1837
  4043   002200  2E21               	decfsz	(??_left_135+1)^0,f,c
  4044   002202  D7FA               	bra	u1837
  4045   002204  0012               	return		;funcret
  4046   002206                     __end_of_left_135:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _setMotorPWM *****************
  4050 ;; Defined at:
  4051 ;;		line 38 in file "../dc_motor.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  m               2   16[COMRAM] PTR struct DC_motor
  4054 ;;		 -> main@motorR(9), main@motorL(9), 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  PWMduty         2   25[COMRAM] int 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;Total ram usage:       11 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 3
  4073 ;; This function calls:
  4074 ;;		___awdiv
  4075 ;;		___wmul
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;;		_stop
  4079 ;;		_reverse
  4080 ;;		_right_90
  4081 ;;		_left_90
  4082 ;;		_spin_180
  4083 ;;		_right_135
  4084 ;;		_left_135
  4085 ;;		_forward
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text22
  4090   00133E                     __ptext22:
  4091                           	callstack 0
  4092   00133E                     _setMotorPWM:
  4093                           	callstack 26
  4094   00133E                     
  4095                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  4096   00133E  EE20 F001          	lfsr	2,1
  4097   001342  5011               	movf	setMotorPWM@m^0,w,c
  4098   001344  26D9               	addwf	fsr2l,f,c
  4099   001346  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4100   001348  22DA               	addwfc	fsr2h,f,c
  4101   00134A  50DF               	movf	indf2,w,c
  4102   00134C  B4D8               	btfsc	status,2,c
  4103   00134E  EFAB  F009         	goto	u1221
  4104   001352  EFAD  F009         	goto	u1220
  4105   001356                     u1221:
  4106   001356  EFDE  F009         	goto	l2270
  4107   00135A                     u1220:
  4108   00135A                     
  4109                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  4110   00135A  C011  FFD9         	movff	setMotorPWM@m,fsr2l
  4111   00135E  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4112   001362  50DF               	movf	indf2,w,c
  4113   001364  6E13               	movwf	??_setMotorPWM^0,c
  4114   001366  5013               	movf	??_setMotorPWM^0,w,c
  4115   001368  6E03               	movwf	___wmul@multiplier^0,c
  4116   00136A  6A04               	clrf	(___wmul@multiplier+1)^0,c
  4117   00136C  EE20 F007          	lfsr	2,7
  4118   001370  5011               	movf	setMotorPWM@m^0,w,c
  4119   001372  26D9               	addwf	fsr2l,f,c
  4120   001374  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4121   001376  22DA               	addwfc	fsr2h,f,c
  4122   001378  CFDE F005          	movff	postinc2,___wmul@multiplicand
  4123   00137C  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
  4124   001380  EC6B  F013         	call	___wmul	;wreg free
  4125   001384  C003  F009         	movff	?___wmul,___awdiv@dividend
  4126   001388  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
  4127   00138C  0E00               	movlw	0
  4128   00138E  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  4129   001390  0E64               	movlw	100
  4130   001392  6E0B               	movwf	___awdiv@divisor^0,c
  4131   001394  ECA8  F00D         	call	___awdiv	;wreg free
  4132   001398  EE20 F007          	lfsr	2,7
  4133   00139C  5011               	movf	setMotorPWM@m^0,w,c
  4134   00139E  26D9               	addwf	fsr2l,f,c
  4135   0013A0  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4136   0013A2  22DA               	addwfc	fsr2h,f,c
  4137   0013A4  CFDE F014          	movff	postinc2,??_setMotorPWM+1
  4138   0013A8  CFDD F015          	movff	postdec2,??_setMotorPWM+2
  4139   0013AC  5009               	movf	?___awdiv^0,w,c
  4140   0013AE  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
  4141   0013B0  6E1A               	movwf	setMotorPWM@PWMduty^0,c
  4142   0013B2  500A               	movf	(?___awdiv+1)^0,w,c
  4143   0013B4  5815               	subwfb	(??_setMotorPWM+2)^0,w,c
  4144   0013B6  6E1B               	movwf	(setMotorPWM@PWMduty+1)^0,c
  4145                           
  4146                           ;../dc_motor.c: 45:  }
  4147   0013B8  EF01  F00A         	goto	l2272
  4148   0013BC                     l2270:
  4149                           
  4150                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  4151   0013BC  C011  FFD9         	movff	setMotorPWM@m,fsr2l
  4152   0013C0  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4153   0013C4  50DF               	movf	indf2,w,c
  4154   0013C6  6E13               	movwf	??_setMotorPWM^0,c
  4155   0013C8  5013               	movf	??_setMotorPWM^0,w,c
  4156   0013CA  6E03               	movwf	___wmul@multiplier^0,c
  4157   0013CC  6A04               	clrf	(___wmul@multiplier+1)^0,c
  4158   0013CE  EE20 F007          	lfsr	2,7
  4159   0013D2  5011               	movf	setMotorPWM@m^0,w,c
  4160   0013D4  26D9               	addwf	fsr2l,f,c
  4161   0013D6  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4162   0013D8  22DA               	addwfc	fsr2h,f,c
  4163   0013DA  CFDE F005          	movff	postinc2,___wmul@multiplicand
  4164   0013DE  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
  4165   0013E2  EC6B  F013         	call	___wmul	;wreg free
  4166   0013E6  C003  F009         	movff	?___wmul,___awdiv@dividend
  4167   0013EA  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
  4168   0013EE  0E00               	movlw	0
  4169   0013F0  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  4170   0013F2  0E64               	movlw	100
  4171   0013F4  6E0B               	movwf	___awdiv@divisor^0,c
  4172   0013F6  ECA8  F00D         	call	___awdiv	;wreg free
  4173   0013FA  C009  F01A         	movff	?___awdiv,setMotorPWM@PWMduty
  4174   0013FE  C00A  F01B         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  4175   001402                     l2272:
  4176                           
  4177                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  4178   001402  EE20 F002          	lfsr	2,2
  4179   001406  5011               	movf	setMotorPWM@m^0,w,c
  4180   001408  26D9               	addwf	fsr2l,f,c
  4181   00140A  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4182   00140C  22DA               	addwfc	fsr2h,f,c
  4183   00140E  CFDE F013          	movff	postinc2,??_setMotorPWM
  4184   001412  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  4185   001416  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  4186   00141A  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4187   00141E  C01A  FFDF         	movff	setMotorPWM@PWMduty,indf2
  4188   001422                     
  4189                           ;../dc_motor.c: 53:  if (m->direction){
  4190   001422  EE20 F001          	lfsr	2,1
  4191   001426  5011               	movf	setMotorPWM@m^0,w,c
  4192   001428  26D9               	addwf	fsr2l,f,c
  4193   00142A  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4194   00142C  22DA               	addwfc	fsr2h,f,c
  4195   00142E  50DF               	movf	indf2,w,c
  4196   001430  B4D8               	btfsc	status,2,c
  4197   001432  EF1D  F00A         	goto	u1231
  4198   001436  EF1F  F00A         	goto	u1230
  4199   00143A                     u1231:
  4200   00143A  EF54  F00A         	goto	l2278
  4201   00143E                     u1230:
  4202   00143E                     
  4203                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  4204   00143E  EE20 F004          	lfsr	2,4
  4205   001442  5011               	movf	setMotorPWM@m^0,w,c
  4206   001444  26D9               	addwf	fsr2l,f,c
  4207   001446  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4208   001448  22DA               	addwfc	fsr2h,f,c
  4209   00144A  CFDE F013          	movff	postinc2,??_setMotorPWM
  4210   00144E  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  4211   001452  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  4212   001456  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4213   00145A  EE10 F004          	lfsr	1,4
  4214   00145E  5011               	movf	setMotorPWM@m^0,w,c
  4215   001460  26E1               	addwf	fsr1l,f,c
  4216   001462  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4217   001464  22E2               	addwfc	fsr1h,f,c
  4218   001466  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
  4219   00146A  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
  4220   00146E  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4221   001472  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4222   001476  50E7               	movf	indf1,w,c
  4223   001478  6E17               	movwf	(??_setMotorPWM+4)^0,c
  4224   00147A  EE10 F006          	lfsr	1,6
  4225   00147E  5011               	movf	setMotorPWM@m^0,w,c
  4226   001480  26E1               	addwf	fsr1l,f,c
  4227   001482  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4228   001484  22E2               	addwfc	fsr1h,f,c
  4229   001486  50E7               	movf	indf1,w,c
  4230   001488  6E18               	movwf	(??_setMotorPWM+5)^0,c
  4231   00148A  0E01               	movlw	1
  4232   00148C  6E19               	movwf	(??_setMotorPWM+6)^0,c
  4233   00148E  2A18               	incf	(??_setMotorPWM+5)^0,f,c
  4234   001490  EF4C  F00A         	goto	u1244
  4235   001494                     u1245:
  4236   001494  90D8               	bcf	status,0,c
  4237   001496  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
  4238   001498                     u1244:
  4239   001498  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
  4240   00149A  EF4A  F00A         	goto	u1245
  4241   00149E  5019               	movf	(??_setMotorPWM+6)^0,w,c
  4242   0014A0  1017               	iorwf	(??_setMotorPWM+4)^0,w,c
  4243   0014A2  6EDF               	movwf	indf2,c
  4244                           
  4245                           ;../dc_motor.c: 55:  } else {
  4246   0014A4  EF88  F00A         	goto	l245
  4247   0014A8                     l2278:
  4248                           
  4249                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  4250   0014A8  EE20 F004          	lfsr	2,4
  4251   0014AC  5011               	movf	setMotorPWM@m^0,w,c
  4252   0014AE  26D9               	addwf	fsr2l,f,c
  4253   0014B0  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4254   0014B2  22DA               	addwfc	fsr2h,f,c
  4255   0014B4  CFDE F013          	movff	postinc2,??_setMotorPWM
  4256   0014B8  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  4257   0014BC  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  4258   0014C0  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4259   0014C4  EE10 F004          	lfsr	1,4
  4260   0014C8  5011               	movf	setMotorPWM@m^0,w,c
  4261   0014CA  26E1               	addwf	fsr1l,f,c
  4262   0014CC  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4263   0014CE  22E2               	addwfc	fsr1h,f,c
  4264   0014D0  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
  4265   0014D4  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
  4266   0014D8  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4267   0014DC  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4268   0014E0  50E7               	movf	indf1,w,c
  4269   0014E2  6E17               	movwf	(??_setMotorPWM+4)^0,c
  4270   0014E4  EE10 F006          	lfsr	1,6
  4271   0014E8  5011               	movf	setMotorPWM@m^0,w,c
  4272   0014EA  26E1               	addwf	fsr1l,f,c
  4273   0014EC  5012               	movf	(setMotorPWM@m+1)^0,w,c
  4274   0014EE  22E2               	addwfc	fsr1h,f,c
  4275   0014F0  50E7               	movf	indf1,w,c
  4276   0014F2  6E18               	movwf	(??_setMotorPWM+5)^0,c
  4277   0014F4  0E01               	movlw	1
  4278   0014F6  6E19               	movwf	(??_setMotorPWM+6)^0,c
  4279   0014F8  2A18               	incf	(??_setMotorPWM+5)^0,f,c
  4280   0014FA  EF81  F00A         	goto	u1254
  4281   0014FE                     u1255:
  4282   0014FE  90D8               	bcf	status,0,c
  4283   001500  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
  4284   001502                     u1254:
  4285   001502  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
  4286   001504  EF7F  F00A         	goto	u1255
  4287   001508  5019               	movf	(??_setMotorPWM+6)^0,w,c
  4288   00150A  0AFF               	xorlw	255
  4289   00150C  1417               	andwf	(??_setMotorPWM+4)^0,w,c
  4290   00150E  6EDF               	movwf	indf2,c
  4291   001510                     l245:
  4292   001510  0012               	return		;funcret
  4293   001512                     __end_of_setMotorPWM:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function ___wmul *****************
  4297 ;; Defined at:
  4298 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  multiplier      2    2[COMRAM] unsigned int 
  4301 ;;  multiplicand    2    4[COMRAM] unsigned int 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  product         2    6[COMRAM] unsigned int 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2    2[COMRAM] unsigned int 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, prodl, prodh
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;Total ram usage:        6 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 2
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_setMotorPWM
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text23
  4328   0026D6                     __ptext23:
  4329                           	callstack 0
  4330   0026D6                     ___wmul:
  4331                           	callstack 26
  4332   0026D6  5003               	movf	___wmul@multiplier^0,w,c
  4333   0026D8  0205               	mulwf	___wmul@multiplicand^0,c
  4334   0026DA  CFF3 F007          	movff	prodl,___wmul@product
  4335   0026DE  CFF4 F008          	movff	prodh,___wmul@product+1
  4336   0026E2  5003               	movf	___wmul@multiplier^0,w,c
  4337   0026E4  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  4338   0026E6  50F3               	movf	243,w,c
  4339   0026E8  2608               	addwf	(___wmul@product+1)^0,f,c
  4340   0026EA  5004               	movf	(___wmul@multiplier+1)^0,w,c
  4341   0026EC  0205               	mulwf	___wmul@multiplicand^0,c
  4342   0026EE  50F3               	movf	243,w,c
  4343   0026F0  2608               	addwf	(___wmul@product+1)^0,f,c
  4344   0026F2  C007  F003         	movff	___wmul@product,?___wmul
  4345   0026F6  C008  F004         	movff	___wmul@product+1,?___wmul+1
  4346   0026FA  0012               	return		;funcret
  4347   0026FC                     __end_of___wmul:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function ___awdiv *****************
  4351 ;; Defined at:
  4352 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  dividend        2    8[COMRAM] int 
  4355 ;;  divisor         2   10[COMRAM] int 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  quotient        2   14[COMRAM] int 
  4358 ;;  sign            1   13[COMRAM] unsigned char 
  4359 ;;  counter         1   12[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  2    8[COMRAM] int 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;Total ram usage:        8 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 2
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_setMotorPWM
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text24
  4384   001B50                     __ptext24:
  4385                           	callstack 0
  4386   001B50                     ___awdiv:
  4387                           	callstack 26
  4388   001B50  0E00               	movlw	0
  4389   001B52  6E0E               	movwf	___awdiv@sign^0,c
  4390   001B54  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
  4391   001B56  EFB1  F00D         	goto	u1040
  4392   001B5A  EFAF  F00D         	goto	u1041
  4393   001B5E                     u1041:
  4394   001B5E  EFB7  F00D         	goto	l2148
  4395   001B62                     u1040:
  4396   001B62  6C0B               	negf	___awdiv@divisor^0,c
  4397   001B64  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
  4398   001B66  B0D8               	btfsc	status,0,c
  4399   001B68  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
  4400   001B6A  0E01               	movlw	1
  4401   001B6C  6E0E               	movwf	___awdiv@sign^0,c
  4402   001B6E                     l2148:
  4403   001B6E  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
  4404   001B70  EFBE  F00D         	goto	u1050
  4405   001B74  EFBC  F00D         	goto	u1051
  4406   001B78                     u1051:
  4407   001B78  EFC4  F00D         	goto	l2154
  4408   001B7C                     u1050:
  4409   001B7C  6C09               	negf	___awdiv@dividend^0,c
  4410   001B7E  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
  4411   001B80  B0D8               	btfsc	status,0,c
  4412   001B82  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
  4413   001B84  0E01               	movlw	1
  4414   001B86  1A0E               	xorwf	___awdiv@sign^0,f,c
  4415   001B88                     l2154:
  4416   001B88  0E00               	movlw	0
  4417   001B8A  6E10               	movwf	(___awdiv@quotient+1)^0,c
  4418   001B8C  0E00               	movlw	0
  4419   001B8E  6E0F               	movwf	___awdiv@quotient^0,c
  4420   001B90  500B               	movf	___awdiv@divisor^0,w,c
  4421   001B92  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
  4422   001B94  B4D8               	btfsc	status,2,c
  4423   001B96  EFCF  F00D         	goto	u1061
  4424   001B9A  EFD1  F00D         	goto	u1060
  4425   001B9E                     u1061:
  4426   001B9E  EFF9  F00D         	goto	l2176
  4427   001BA2                     u1060:
  4428   001BA2  0E01               	movlw	1
  4429   001BA4  6E0D               	movwf	___awdiv@counter^0,c
  4430   001BA6  EFD9  F00D         	goto	l2162
  4431   001BAA                     l2160:
  4432   001BAA  90D8               	bcf	status,0,c
  4433   001BAC  360B               	rlcf	___awdiv@divisor^0,f,c
  4434   001BAE  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
  4435   001BB0  2A0D               	incf	___awdiv@counter^0,f,c
  4436   001BB2                     l2162:
  4437   001BB2  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
  4438   001BB4  EFDE  F00D         	goto	u1071
  4439   001BB8  EFE0  F00D         	goto	u1070
  4440   001BBC                     u1071:
  4441   001BBC  EFD5  F00D         	goto	l2160
  4442   001BC0                     u1070:
  4443   001BC0                     l2164:
  4444   001BC0  90D8               	bcf	status,0,c
  4445   001BC2  360F               	rlcf	___awdiv@quotient^0,f,c
  4446   001BC4  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
  4447   001BC6  500B               	movf	___awdiv@divisor^0,w,c
  4448   001BC8  5C09               	subwf	___awdiv@dividend^0,w,c
  4449   001BCA  500C               	movf	(___awdiv@divisor+1)^0,w,c
  4450   001BCC  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
  4451   001BCE  A0D8               	btfss	status,0,c
  4452   001BD0  EFEC  F00D         	goto	u1081
  4453   001BD4  EFEE  F00D         	goto	u1080
  4454   001BD8                     u1081:
  4455   001BD8  EFF3  F00D         	goto	l2172
  4456   001BDC                     u1080:
  4457   001BDC  500B               	movf	___awdiv@divisor^0,w,c
  4458   001BDE  5E09               	subwf	___awdiv@dividend^0,f,c
  4459   001BE0  500C               	movf	(___awdiv@divisor+1)^0,w,c
  4460   001BE2  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
  4461   001BE4  800F               	bsf	___awdiv@quotient^0,0,c
  4462   001BE6                     l2172:
  4463   001BE6  90D8               	bcf	status,0,c
  4464   001BE8  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
  4465   001BEA  320B               	rrcf	___awdiv@divisor^0,f,c
  4466   001BEC  2E0D               	decfsz	___awdiv@counter^0,f,c
  4467   001BEE  EFE0  F00D         	goto	l2164
  4468   001BF2                     l2176:
  4469   001BF2  500E               	movf	___awdiv@sign^0,w,c
  4470   001BF4  B4D8               	btfsc	status,2,c
  4471   001BF6  EFFF  F00D         	goto	u1091
  4472   001BFA  EF01  F00E         	goto	u1090
  4473   001BFE                     u1091:
  4474   001BFE  EF05  F00E         	goto	l2180
  4475   001C02                     u1090:
  4476   001C02  6C0F               	negf	___awdiv@quotient^0,c
  4477   001C04  1E10               	comf	(___awdiv@quotient+1)^0,f,c
  4478   001C06  B0D8               	btfsc	status,0,c
  4479   001C08  2A10               	incf	(___awdiv@quotient+1)^0,f,c
  4480   001C0A                     l2180:
  4481   001C0A  C00F  F009         	movff	___awdiv@quotient,?___awdiv
  4482   001C0E  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
  4483   001C12  0012               	return		;funcret
  4484   001C14                     __end_of___awdiv:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _initUSART4 *****************
  4488 ;; Defined at:
  4489 ;;		line 5 in file "../serial.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4507 ;;Total ram usage:        0 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 2
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text25
  4518   00273C                     __ptext25:
  4519                           	callstack 0
  4520   00273C                     _initUSART4:
  4521                           	callstack 28
  4522   00273C                     
  4523                           ;../serial.c: 9:     RC0PPS = 0x12;
  4524   00273C  0E12               	movlw	18
  4525   00273E  010E               	movlb	14	; () banked
  4526   002740  6F62               	movwf	98,b	;volatile
  4527                           
  4528                           ;../serial.c: 10:     RX4PPS = 0x11;
  4529   002742  0E11               	movlw	17
  4530   002744  6F15               	movwf	21,b	;volatile
  4531   002746                     
  4532                           ; BSR set to: 14
  4533                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4534   002746  97E9               	bcf	233,3,b	;volatile
  4535   002748                     
  4536                           ; BSR set to: 14
  4537                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  4538   002748  95E8               	bcf	232,2,b	;volatile
  4539                           
  4540                           ;../serial.c: 14:     SP4BRGL = 103;
  4541   00274A  0E67               	movlw	103
  4542   00274C  6FE5               	movwf	229,b	;volatile
  4543                           
  4544                           ;../serial.c: 15:     SP4BRGH = 0;
  4545   00274E  0E00               	movlw	0
  4546   002750  6FE6               	movwf	230,b	;volatile
  4547   002752                     
  4548                           ; BSR set to: 14
  4549                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  4550   002752  89E7               	bsf	231,4,b	;volatile
  4551   002754                     
  4552                           ; BSR set to: 14
  4553                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  4554   002754  8BE8               	bsf	232,5,b	;volatile
  4555   002756                     
  4556                           ; BSR set to: 14
  4557                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  4558   002756  8FE7               	bsf	231,7,b	;volatile
  4559   002758                     
  4560                           ; BSR set to: 14
  4561   002758  0012               	return		;funcret
  4562   00275A                     __end_of_initUSART4:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _initDCmotorsPWM *****************
  4566 ;; Defined at:
  4567 ;;		line 5 in file "../dc_motor.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  PWMperiod       2    2[COMRAM] int 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4585 ;;Total ram usage:        2 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 2
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_main
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text26
  4596   002590                     __ptext26:
  4597                           	callstack 0
  4598   002590                     _initDCmotorsPWM:
  4599                           	callstack 28
  4600   002590                     
  4601                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  4602   002590  9485               	bcf	133,2,c	;volatile
  4603                           
  4604                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  4605   002592  9885               	bcf	133,4,c	;volatile
  4606                           
  4607                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  4608   002594  9E83               	bcf	131,7,c	;volatile
  4609                           
  4610                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  4611   002596  9C87               	bcf	135,6,c	;volatile
  4612                           
  4613                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  4614   002598  947D               	bcf	125,2,c	;volatile
  4615                           
  4616                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  4617   00259A  987D               	bcf	125,4,c	;volatile
  4618                           
  4619                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  4620   00259C  9E7B               	bcf	123,7,c	;volatile
  4621                           
  4622                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  4623   00259E  9C7F               	bcf	127,6,c	;volatile
  4624   0025A0                     
  4625                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  4626   0025A0  50BD               	movf	189,w,c	;volatile
  4627   0025A2  0B8F               	andlw	-113
  4628   0025A4  0930               	iorlw	48
  4629   0025A6  6EBD               	movwf	189,c	;volatile
  4630                           
  4631                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4632   0025A8  0EE0               	movlw	-32
  4633   0025AA  16BE               	andwf	190,f,c	;volatile
  4634                           
  4635                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4636   0025AC  50BF               	movf	191,w,c	;volatile
  4637   0025AE  0BF0               	andlw	-16
  4638   0025B0  0901               	iorlw	1
  4639   0025B2  6EBF               	movwf	191,c	;volatile
  4640   0025B4                     
  4641                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  4642   0025B4  C003  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4643   0025B8                     
  4644                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  4645   0025B8  8EBD               	bsf	189,7,c	;volatile
  4646                           
  4647                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  4648   0025BA  0E0A               	movlw	10
  4649   0025BC  010E               	movlb	14	; () banked
  4650   0025BE  6F74               	movwf	116,b	;volatile
  4651                           
  4652                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  4653   0025C0  0E0B               	movlw	11
  4654   0025C2  6F69               	movwf	105,b	;volatile
  4655                           
  4656                           ;../dc_motor.c: 29:     PWM6DCH=0;
  4657   0025C4  0E00               	movlw	0
  4658   0025C6  6EA3               	movwf	163,c	;volatile
  4659                           
  4660                           ;../dc_motor.c: 30:     PWM7DCH=0;
  4661   0025C8  0E00               	movlw	0
  4662   0025CA  6EA0               	movwf	160,c	;volatile
  4663   0025CC                     
  4664                           ; BSR set to: 14
  4665                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  4666   0025CC  8EA4               	bsf	164,7,c	;volatile
  4667   0025CE                     
  4668                           ; BSR set to: 14
  4669                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  4670   0025CE  8EA1               	bsf	161,7,c	;volatile
  4671   0025D0                     
  4672                           ; BSR set to: 14
  4673   0025D0  0012               	return		;funcret
  4674   0025D2                     __end_of_initDCmotorsPWM:
  4675                           	callstack 0
  4676                           
  4677 ;; *************** function _color_read *****************
  4678 ;; Defined at:
  4679 ;;		line 110 in file "../color.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  rgb             2   13[COMRAM] PTR struct RGB_val
  4682 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;Total ram usage:        4 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 5
  4701 ;; This function calls:
  4702 ;;		_color_read_Blue
  4703 ;;		_color_read_Green
  4704 ;;		_color_read_Luminosity
  4705 ;;		_color_read_Red
  4706 ;; This function is called by:
  4707 ;;		_main
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text27
  4712   001D90                     __ptext27:
  4713                           	callstack 0
  4714   001D90                     _color_read:
  4715                           	callstack 25
  4716   001D90                     
  4717                           ;../color.c: 110: void color_read(struct RGB_val *rgb);../color.c: 111: {;../color.c: 11
      +                          2:     rgb->L = color_read_Luminosity();
  4718   001D90  EC2E  F012         	call	_color_read_Luminosity	;wreg free
  4719   001D94  C00E  FFD9         	movff	color_read@rgb,fsr2l
  4720   001D98  C00F  FFDA         	movff	color_read@rgb+1,fsr2h
  4721   001D9C  C007  FFDE         	movff	?_color_read_Luminosity,postinc2
  4722   001DA0  C008  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  4723   001DA4                     
  4724                           ;../color.c: 113:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4725   001DA4  0E09               	movlw	9
  4726   001DA6  6E11               	movwf	(??_color_read+1)^0,c
  4727   001DA8  0E1E               	movlw	30
  4728   001DAA  6E10               	movwf	??_color_read^0,c
  4729   001DAC  0EE4               	movlw	228
  4730   001DAE                     u1847:
  4731   001DAE  2EE8               	decfsz	wreg,f,c
  4732   001DB0  D7FE               	bra	u1847
  4733   001DB2  2E10               	decfsz	??_color_read^0,f,c
  4734   001DB4  D7FC               	bra	u1847
  4735   001DB6  2E11               	decfsz	(??_color_read+1)^0,f,c
  4736   001DB8  D7FA               	bra	u1847
  4737   001DBA  D000               	nop2	
  4738   001DBC                     
  4739                           ;../color.c: 114:     rgb->R = color_read_Red();
  4740   001DBC  EC06  F012         	call	_color_read_Red	;wreg free
  4741   001DC0  EE20 F002          	lfsr	2,2
  4742   001DC4  500E               	movf	color_read@rgb^0,w,c
  4743   001DC6  26D9               	addwf	fsr2l,f,c
  4744   001DC8  500F               	movf	(color_read@rgb+1)^0,w,c
  4745   001DCA  22DA               	addwfc	fsr2h,f,c
  4746   001DCC  C007  FFDE         	movff	?_color_read_Red,postinc2
  4747   001DD0  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  4748                           
  4749                           ;../color.c: 115:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4750   001DD4  0E09               	movlw	9
  4751   001DD6  6E11               	movwf	(??_color_read+1)^0,c
  4752   001DD8  0E1E               	movlw	30
  4753   001DDA  6E10               	movwf	??_color_read^0,c
  4754   001DDC  0EE4               	movlw	228
  4755   001DDE                     u1857:
  4756   001DDE  2EE8               	decfsz	wreg,f,c
  4757   001DE0  D7FE               	bra	u1857
  4758   001DE2  2E10               	decfsz	??_color_read^0,f,c
  4759   001DE4  D7FC               	bra	u1857
  4760   001DE6  2E11               	decfsz	(??_color_read+1)^0,f,c
  4761   001DE8  D7FA               	bra	u1857
  4762   001DEA  D000               	nop2	
  4763   001DEC                     
  4764                           ;../color.c: 116:     rgb->G = color_read_Green();
  4765   001DEC  EC56  F012         	call	_color_read_Green	;wreg free
  4766   001DF0  EE20 F004          	lfsr	2,4
  4767   001DF4  500E               	movf	color_read@rgb^0,w,c
  4768   001DF6  26D9               	addwf	fsr2l,f,c
  4769   001DF8  500F               	movf	(color_read@rgb+1)^0,w,c
  4770   001DFA  22DA               	addwfc	fsr2h,f,c
  4771   001DFC  C007  FFDE         	movff	?_color_read_Green,postinc2
  4772   001E00  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  4773   001E04                     
  4774                           ;../color.c: 117:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4775   001E04  0E09               	movlw	9
  4776   001E06  6E11               	movwf	(??_color_read+1)^0,c
  4777   001E08  0E1E               	movlw	30
  4778   001E0A  6E10               	movwf	??_color_read^0,c
  4779   001E0C  0EE4               	movlw	228
  4780   001E0E                     u1867:
  4781   001E0E  2EE8               	decfsz	wreg,f,c
  4782   001E10  D7FE               	bra	u1867
  4783   001E12  2E10               	decfsz	??_color_read^0,f,c
  4784   001E14  D7FC               	bra	u1867
  4785   001E16  2E11               	decfsz	(??_color_read+1)^0,f,c
  4786   001E18  D7FA               	bra	u1867
  4787   001E1A  D000               	nop2	
  4788                           
  4789                           ;../color.c: 118:     rgb->B = color_read_Blue();
  4790   001E1C  EC7E  F012         	call	_color_read_Blue	;wreg free
  4791   001E20  EE20 F006          	lfsr	2,6
  4792   001E24  500E               	movf	color_read@rgb^0,w,c
  4793   001E26  26D9               	addwf	fsr2l,f,c
  4794   001E28  500F               	movf	(color_read@rgb+1)^0,w,c
  4795   001E2A  22DA               	addwfc	fsr2h,f,c
  4796   001E2C  C007  FFDE         	movff	?_color_read_Blue,postinc2
  4797   001E30  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  4798   001E34  0012               	return		;funcret
  4799   001E36                     __end_of_color_read:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _color_read_Red *****************
  4803 ;; Defined at:
  4804 ;;		line 68 in file "../color.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  tmp             2   11[COMRAM] unsigned int 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  2    6[COMRAM] unsigned int 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4820 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4821 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4822 ;;Total ram usage:        7 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 4
  4825 ;; This function calls:
  4826 ;;		_I2C_2_Master_Read
  4827 ;;		_I2C_2_Master_RepStart
  4828 ;;		_I2C_2_Master_Start
  4829 ;;		_I2C_2_Master_Stop
  4830 ;;		_I2C_2_Master_Write
  4831 ;; This function is called by:
  4832 ;;		_color_read
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text28
  4837   00240C                     __ptext28:
  4838                           	callstack 0
  4839   00240C                     _color_read_Red:
  4840                           	callstack 25
  4841   00240C                     
  4842                           ;../color.c: 70:  unsigned int tmp;;../color.c: 71:  I2C_2_Master_Start();
  4843   00240C  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  4844                           
  4845                           ;../color.c: 72:  I2C_2_Master_Write(0x52 | 0x00);
  4846   002410  0E52               	movlw	82
  4847   002412  ECC6  F013         	call	_I2C_2_Master_Write
  4848                           
  4849                           ;../color.c: 73:  I2C_2_Master_Write(0xA0 | 0x16);
  4850   002416  0EB6               	movlw	182
  4851   002418  ECC6  F013         	call	_I2C_2_Master_Write
  4852                           
  4853                           ;../color.c: 74:  I2C_2_Master_RepStart();
  4854   00241C  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  4855                           
  4856                           ;../color.c: 75:  I2C_2_Master_Write(0x52 | 0x01);
  4857   002420  0E53               	movlw	83
  4858   002422  ECC6  F013         	call	_I2C_2_Master_Write
  4859                           
  4860                           ;../color.c: 76:  tmp=I2C_2_Master_Read(1);
  4861   002426  0E01               	movlw	1
  4862   002428  ECE9  F012         	call	_I2C_2_Master_Read
  4863   00242C  6E09               	movwf	??_color_read_Red^0,c
  4864   00242E  5009               	movf	??_color_read_Red^0,w,c
  4865   002430  6E0C               	movwf	color_read_Red@tmp^0,c
  4866   002432  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  4867                           
  4868                           ;../color.c: 77:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4869   002434  0E00               	movlw	0
  4870   002436  ECE9  F012         	call	_I2C_2_Master_Read
  4871   00243A  6E09               	movwf	??_color_read_Red^0,c
  4872   00243C  5009               	movf	??_color_read_Red^0,w,c
  4873   00243E  6E0B               	movwf	(??_color_read_Red+2)^0,c
  4874   002440  6A0A               	clrf	(??_color_read_Red+1)^0,c
  4875   002442  500C               	movf	color_read_Red@tmp^0,w,c
  4876   002444  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  4877   002446  6E0C               	movwf	color_read_Red@tmp^0,c
  4878   002448  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  4879   00244A  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  4880   00244C  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  4881                           
  4882                           ;../color.c: 78:  I2C_2_Master_Stop();
  4883   00244E  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  4884   002452                     
  4885                           ;../color.c: 79:  return tmp;
  4886   002452  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  4887   002456  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4888   00245A  0012               	return		;funcret
  4889   00245C                     __end_of_color_read_Red:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _color_read_Luminosity *****************
  4893 ;; Defined at:
  4894 ;;		line 54 in file "../color.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  tmp             2   11[COMRAM] unsigned int 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  2    6[COMRAM] unsigned int 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;Total ram usage:        7 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 4
  4915 ;; This function calls:
  4916 ;;		_I2C_2_Master_Read
  4917 ;;		_I2C_2_Master_RepStart
  4918 ;;		_I2C_2_Master_Start
  4919 ;;		_I2C_2_Master_Stop
  4920 ;;		_I2C_2_Master_Write
  4921 ;; This function is called by:
  4922 ;;		_color_read
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text29
  4927   00245C                     __ptext29:
  4928                           	callstack 0
  4929   00245C                     _color_read_Luminosity:
  4930                           	callstack 25
  4931   00245C                     
  4932                           ;../color.c: 56:  unsigned int tmp;;../color.c: 57:  I2C_2_Master_Start();
  4933   00245C  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  4934                           
  4935                           ;../color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  4936   002460  0E52               	movlw	82
  4937   002462  ECC6  F013         	call	_I2C_2_Master_Write
  4938                           
  4939                           ;../color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
  4940   002466  0EB4               	movlw	180
  4941   002468  ECC6  F013         	call	_I2C_2_Master_Write
  4942                           
  4943                           ;../color.c: 60:  I2C_2_Master_RepStart();
  4944   00246C  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  4945                           
  4946                           ;../color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  4947   002470  0E53               	movlw	83
  4948   002472  ECC6  F013         	call	_I2C_2_Master_Write
  4949                           
  4950                           ;../color.c: 62:  tmp=I2C_2_Master_Read(1);
  4951   002476  0E01               	movlw	1
  4952   002478  ECE9  F012         	call	_I2C_2_Master_Read
  4953   00247C  6E09               	movwf	??_color_read_Luminosity^0,c
  4954   00247E  5009               	movf	??_color_read_Luminosity^0,w,c
  4955   002480  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  4956   002482  6A0D               	clrf	(color_read_Luminosity@tmp+1)^0,c
  4957                           
  4958                           ;../color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4959   002484  0E00               	movlw	0
  4960   002486  ECE9  F012         	call	_I2C_2_Master_Read
  4961   00248A  6E09               	movwf	??_color_read_Luminosity^0,c
  4962   00248C  5009               	movf	??_color_read_Luminosity^0,w,c
  4963   00248E  6E0B               	movwf	(??_color_read_Luminosity+2)^0,c
  4964   002490  6A0A               	clrf	(??_color_read_Luminosity+1)^0,c
  4965   002492  500C               	movf	color_read_Luminosity@tmp^0,w,c
  4966   002494  100A               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  4967   002496  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  4968   002498  500D               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  4969   00249A  100B               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  4970   00249C  6E0D               	movwf	(color_read_Luminosity@tmp+1)^0,c
  4971                           
  4972                           ;../color.c: 64:  I2C_2_Master_Stop();
  4973   00249E  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  4974   0024A2                     
  4975                           ;../color.c: 65:  return tmp;
  4976   0024A2  C00C  F007         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  4977   0024A6  C00D  F008         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  4978   0024AA  0012               	return		;funcret
  4979   0024AC                     __end_of_color_read_Luminosity:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _color_read_Green *****************
  4983 ;; Defined at:
  4984 ;;		line 82 in file "../color.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  tmp             2   11[COMRAM] unsigned int 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  2    6[COMRAM] unsigned int 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;Total ram usage:        7 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 4
  5005 ;; This function calls:
  5006 ;;		_I2C_2_Master_Read
  5007 ;;		_I2C_2_Master_RepStart
  5008 ;;		_I2C_2_Master_Start
  5009 ;;		_I2C_2_Master_Stop
  5010 ;;		_I2C_2_Master_Write
  5011 ;; This function is called by:
  5012 ;;		_color_read
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text30
  5017   0024AC                     __ptext30:
  5018                           	callstack 0
  5019   0024AC                     _color_read_Green:
  5020                           	callstack 25
  5021   0024AC                     
  5022                           ;../color.c: 84:  unsigned int tmp;;../color.c: 85:  I2C_2_Master_Start();
  5023   0024AC  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  5024                           
  5025                           ;../color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  5026   0024B0  0E52               	movlw	82
  5027   0024B2  ECC6  F013         	call	_I2C_2_Master_Write
  5028                           
  5029                           ;../color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  5030   0024B6  0EB8               	movlw	184
  5031   0024B8  ECC6  F013         	call	_I2C_2_Master_Write
  5032                           
  5033                           ;../color.c: 88:  I2C_2_Master_RepStart();
  5034   0024BC  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  5035                           
  5036                           ;../color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  5037   0024C0  0E53               	movlw	83
  5038   0024C2  ECC6  F013         	call	_I2C_2_Master_Write
  5039                           
  5040                           ;../color.c: 90:  tmp=I2C_2_Master_Read(1);
  5041   0024C6  0E01               	movlw	1
  5042   0024C8  ECE9  F012         	call	_I2C_2_Master_Read
  5043   0024CC  6E09               	movwf	??_color_read_Green^0,c
  5044   0024CE  5009               	movf	??_color_read_Green^0,w,c
  5045   0024D0  6E0C               	movwf	color_read_Green@tmp^0,c
  5046   0024D2  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  5047                           
  5048                           ;../color.c: 91:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5049   0024D4  0E00               	movlw	0
  5050   0024D6  ECE9  F012         	call	_I2C_2_Master_Read
  5051   0024DA  6E09               	movwf	??_color_read_Green^0,c
  5052   0024DC  5009               	movf	??_color_read_Green^0,w,c
  5053   0024DE  6E0B               	movwf	(??_color_read_Green+2)^0,c
  5054   0024E0  6A0A               	clrf	(??_color_read_Green+1)^0,c
  5055   0024E2  500C               	movf	color_read_Green@tmp^0,w,c
  5056   0024E4  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  5057   0024E6  6E0C               	movwf	color_read_Green@tmp^0,c
  5058   0024E8  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  5059   0024EA  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  5060   0024EC  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  5061                           
  5062                           ;../color.c: 92:  I2C_2_Master_Stop();
  5063   0024EE  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  5064   0024F2                     
  5065                           ;../color.c: 93:  return tmp;
  5066   0024F2  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  5067   0024F6  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5068   0024FA  0012               	return		;funcret
  5069   0024FC                     __end_of_color_read_Green:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _color_read_Blue *****************
  5073 ;; Defined at:
  5074 ;;		line 96 in file "../color.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  tmp             2   11[COMRAM] unsigned int 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2    6[COMRAM] unsigned int 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;Total ram usage:        7 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 4
  5095 ;; This function calls:
  5096 ;;		_I2C_2_Master_Read
  5097 ;;		_I2C_2_Master_RepStart
  5098 ;;		_I2C_2_Master_Start
  5099 ;;		_I2C_2_Master_Stop
  5100 ;;		_I2C_2_Master_Write
  5101 ;; This function is called by:
  5102 ;;		_color_read
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text31
  5107   0024FC                     __ptext31:
  5108                           	callstack 0
  5109   0024FC                     _color_read_Blue:
  5110                           	callstack 25
  5111   0024FC                     
  5112                           ;../color.c: 98:  unsigned int tmp;;../color.c: 99:  I2C_2_Master_Start();
  5113   0024FC  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  5114                           
  5115                           ;../color.c: 100:  I2C_2_Master_Write(0x52 | 0x00);
  5116   002500  0E52               	movlw	82
  5117   002502  ECC6  F013         	call	_I2C_2_Master_Write
  5118                           
  5119                           ;../color.c: 101:  I2C_2_Master_Write(0xA0 | 0x1A);
  5120   002506  0EBA               	movlw	186
  5121   002508  ECC6  F013         	call	_I2C_2_Master_Write
  5122                           
  5123                           ;../color.c: 102:  I2C_2_Master_RepStart();
  5124   00250C  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  5125                           
  5126                           ;../color.c: 103:  I2C_2_Master_Write(0x52 | 0x01);
  5127   002510  0E53               	movlw	83
  5128   002512  ECC6  F013         	call	_I2C_2_Master_Write
  5129                           
  5130                           ;../color.c: 104:  tmp=I2C_2_Master_Read(1);
  5131   002516  0E01               	movlw	1
  5132   002518  ECE9  F012         	call	_I2C_2_Master_Read
  5133   00251C  6E09               	movwf	??_color_read_Blue^0,c
  5134   00251E  5009               	movf	??_color_read_Blue^0,w,c
  5135   002520  6E0C               	movwf	color_read_Blue@tmp^0,c
  5136   002522  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  5137                           
  5138                           ;../color.c: 105:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5139   002524  0E00               	movlw	0
  5140   002526  ECE9  F012         	call	_I2C_2_Master_Read
  5141   00252A  6E09               	movwf	??_color_read_Blue^0,c
  5142   00252C  5009               	movf	??_color_read_Blue^0,w,c
  5143   00252E  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  5144   002530  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  5145   002532  500C               	movf	color_read_Blue@tmp^0,w,c
  5146   002534  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  5147   002536  6E0C               	movwf	color_read_Blue@tmp^0,c
  5148   002538  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  5149   00253A  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  5150   00253C  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  5151                           
  5152                           ;../color.c: 106:  I2C_2_Master_Stop();
  5153   00253E  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  5154   002542                     
  5155                           ;../color.c: 107:  return tmp;
  5156   002542  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  5157   002546  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5158   00254A  0012               	return		;funcret
  5159   00254C                     __end_of_color_read_Blue:
  5160                           	callstack 0
  5161                           
  5162 ;; *************** function _I2C_2_Master_RepStart *****************
  5163 ;; Defined at:
  5164 ;;		line 33 in file "../i2c.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;		None
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0, cstack
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5182 ;;Total ram usage:        0 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; Hardware stack levels required when called: 3
  5185 ;; This function calls:
  5186 ;;		_I2C_2_Master_Idle
  5187 ;; This function is called by:
  5188 ;;		_color_read_Luminosity
  5189 ;;		_color_read_Red
  5190 ;;		_color_read_Green
  5191 ;;		_color_read_Blue
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text32
  5196   0027A4                     __ptext32:
  5197                           	callstack 0
  5198   0027A4                     _I2C_2_Master_RepStart:
  5199                           	callstack 25
  5200   0027A4                     
  5201                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  5202   0027A4  EC57  F013         	call	_I2C_2_Master_Idle	;wreg free
  5203   0027A8                     
  5204                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5205   0027A8  010E               	movlb	14	; () banked
  5206   0027AA  83DA               	bsf	218,1,b	;volatile
  5207   0027AC                     
  5208                           ; BSR set to: 14
  5209   0027AC  0012               	return		;funcret
  5210   0027AE                     __end_of_I2C_2_Master_RepStart:
  5211                           	callstack 0
  5212                           
  5213 ;; *************** function _I2C_2_Master_Read *****************
  5214 ;; Defined at:
  5215 ;;		line 51 in file "../i2c.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  ack             1    wreg     unsigned char 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  ack             1    4[COMRAM] unsigned char 
  5220 ;;  tmp             1    5[COMRAM] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      unsigned char 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5234 ;;Total ram usage:        3 bytes
  5235 ;; Hardware stack levels used: 1
  5236 ;; Hardware stack levels required when called: 3
  5237 ;; This function calls:
  5238 ;;		_I2C_2_Master_Idle
  5239 ;; This function is called by:
  5240 ;;		_color_read_Luminosity
  5241 ;;		_color_read_Red
  5242 ;;		_color_read_Green
  5243 ;;		_color_read_Blue
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text33
  5248   0025D2                     __ptext33:
  5249                           	callstack 0
  5250   0025D2                     _I2C_2_Master_Read:
  5251                           	callstack 25
  5252                           
  5253                           ; BSR set to: 14
  5254                           ;incstack = 0
  5255                           ;I2C_2_Master_Read@ack stored from wreg
  5256   0025D2  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  5257   0025D4                     
  5258                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  5259   0025D4  EC57  F013         	call	_I2C_2_Master_Idle	;wreg free
  5260   0025D8                     
  5261                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5262   0025D8  010E               	movlb	14	; () banked
  5263   0025DA  87DA               	bsf	218,3,b	;volatile
  5264                           
  5265                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  5266   0025DC  EC57  F013         	call	_I2C_2_Master_Idle	;wreg free
  5267   0025E0                     
  5268                           ;../i2c.c: 57:   tmp = SSP2BUF;
  5269   0025E0  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5270                           
  5271                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  5272   0025E4  EC57  F013         	call	_I2C_2_Master_Idle	;wreg free
  5273   0025E8                     
  5274                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5275   0025E8  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  5276   0025EA  B4D8               	btfsc	status,2,c
  5277   0025EC  EFFA  F012         	goto	u1201
  5278   0025F0  EFFE  F012         	goto	u1200
  5279   0025F4                     u1201:
  5280   0025F4  6A04               	clrf	??_I2C_2_Master_Read^0,c
  5281   0025F6  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  5282   0025F8  EFFF  F012         	goto	u1218
  5283   0025FC                     u1200:
  5284   0025FC  6A04               	clrf	??_I2C_2_Master_Read^0,c
  5285   0025FE                     u1218:
  5286   0025FE  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  5287   002600  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  5288   002602  010E               	movlb	14	; () banked
  5289   002604  51DA               	movf	218,w,b	;volatile
  5290   002606  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  5291   002608  0BDF               	andlw	-33
  5292   00260A  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  5293   00260C  6FDA               	movwf	218,b	;volatile
  5294   00260E                     
  5295                           ; BSR set to: 14
  5296                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5297   00260E  89DA               	bsf	218,4,b	;volatile
  5298   002610                     
  5299                           ; BSR set to: 14
  5300                           ;../i2c.c: 61:   return tmp;
  5301   002610  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  5302   002612                     
  5303                           ; BSR set to: 14
  5304   002612  0012               	return		;funcret
  5305   002614                     __end_of_I2C_2_Master_Read:
  5306                           	callstack 0
  5307                           
  5308 ;; *************** function _color_processor_hard *****************
  5309 ;; Defined at:
  5310 ;;		line 145 in file "../color.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  5313 ;;		 -> main@RGB_recorded(8), 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  b               2   10[COMRAM] unsigned int 
  5316 ;;  a               2    8[COMRAM] unsigned int 
  5317 ;;  c               2    6[COMRAM] unsigned int 
  5318 ;;  color           2    4[COMRAM] unsigned int 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  2    2[COMRAM] unsigned int 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;Total ram usage:       10 bytes
  5333 ;; Hardware stack levels used: 1
  5334 ;; Hardware stack levels required when called: 2
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text34
  5343   001C14                     __ptext34:
  5344                           	callstack 0
  5345   001C14                     _color_processor_hard:
  5346                           	callstack 28
  5347   001C14                     
  5348                           ;../color.c: 145: unsigned int color_processor_hard(struct RGB_val *rgb);../color.c: 146
      +                          : {;../color.c: 147:     unsigned int a = rgb->R;
  5349   001C14  EE20 F002          	lfsr	2,2
  5350   001C18  5003               	movf	color_processor_hard@rgb^0,w,c
  5351   001C1A  26D9               	addwf	fsr2l,f,c
  5352   001C1C  5004               	movf	(color_processor_hard@rgb+1)^0,w,c
  5353   001C1E  22DA               	addwfc	fsr2h,f,c
  5354   001C20  CFDE F009          	movff	postinc2,color_processor_hard@a
  5355   001C24  CFDD F00A          	movff	postdec2,color_processor_hard@a+1
  5356                           
  5357                           ;../color.c: 148:     unsigned int b = rgb->G;
  5358   001C28  EE20 F004          	lfsr	2,4
  5359   001C2C  5003               	movf	color_processor_hard@rgb^0,w,c
  5360   001C2E  26D9               	addwf	fsr2l,f,c
  5361   001C30  5004               	movf	(color_processor_hard@rgb+1)^0,w,c
  5362   001C32  22DA               	addwfc	fsr2h,f,c
  5363   001C34  CFDE F00B          	movff	postinc2,color_processor_hard@b
  5364   001C38  CFDD F00C          	movff	postdec2,color_processor_hard@b+1
  5365                           
  5366                           ;../color.c: 149:     unsigned int c = rgb->B;
  5367   001C3C  EE20 F006          	lfsr	2,6
  5368   001C40  5003               	movf	color_processor_hard@rgb^0,w,c
  5369   001C42  26D9               	addwf	fsr2l,f,c
  5370   001C44  5004               	movf	(color_processor_hard@rgb+1)^0,w,c
  5371   001C46  22DA               	addwfc	fsr2h,f,c
  5372   001C48  CFDE F007          	movff	postinc2,color_processor_hard@c
  5373   001C4C  CFDD F008          	movff	postdec2,color_processor_hard@c+1
  5374   001C50                     
  5375                           ;../color.c: 150:     unsigned int color;;../color.c: 151:     if (a>=b & a>=c){color=1;
      +                          }
  5376   001C50  500B               	movf	color_processor_hard@b^0,w,c
  5377   001C52  5C09               	subwf	color_processor_hard@a^0,w,c
  5378   001C54  500C               	movf	(color_processor_hard@b+1)^0,w,c
  5379   001C56  580A               	subwfb	(color_processor_hard@a+1)^0,w,c
  5380   001C58  A0D8               	btfss	status,0,c
  5381   001C5A  EF31  F00E         	goto	u1411
  5382   001C5E  EF33  F00E         	goto	u1410
  5383   001C62                     u1411:
  5384   001C62  EF44  F00E         	goto	l2588
  5385   001C66                     u1410:
  5386   001C66  5007               	movf	color_processor_hard@c^0,w,c
  5387   001C68  5C09               	subwf	color_processor_hard@a^0,w,c
  5388   001C6A  5008               	movf	(color_processor_hard@c+1)^0,w,c
  5389   001C6C  580A               	subwfb	(color_processor_hard@a+1)^0,w,c
  5390   001C6E  A0D8               	btfss	status,0,c
  5391   001C70  EF3C  F00E         	goto	u1421
  5392   001C74  EF3E  F00E         	goto	u1420
  5393   001C78                     u1421:
  5394   001C78  EF44  F00E         	goto	l2588
  5395   001C7C                     u1420:
  5396   001C7C  0E00               	movlw	0
  5397   001C7E  6E06               	movwf	(color_processor_hard@color+1)^0,c
  5398   001C80  0E01               	movlw	1
  5399   001C82  6E05               	movwf	color_processor_hard@color^0,c
  5400   001C84  EF64  F00E         	goto	l2596
  5401   001C88                     l2588:
  5402   001C88  5009               	movf	color_processor_hard@a^0,w,c
  5403   001C8A  5C0B               	subwf	color_processor_hard@b^0,w,c
  5404   001C8C  500A               	movf	(color_processor_hard@a+1)^0,w,c
  5405   001C8E  580C               	subwfb	(color_processor_hard@b+1)^0,w,c
  5406   001C90  A0D8               	btfss	status,0,c
  5407   001C92  EF4D  F00E         	goto	u1431
  5408   001C96  EF4F  F00E         	goto	u1430
  5409   001C9A                     u1431:
  5410   001C9A  EF60  F00E         	goto	l2594
  5411   001C9E                     u1430:
  5412   001C9E  5007               	movf	color_processor_hard@c^0,w,c
  5413   001CA0  5C0B               	subwf	color_processor_hard@b^0,w,c
  5414   001CA2  5008               	movf	(color_processor_hard@c+1)^0,w,c
  5415   001CA4  580C               	subwfb	(color_processor_hard@b+1)^0,w,c
  5416   001CA6  A0D8               	btfss	status,0,c
  5417   001CA8  EF58  F00E         	goto	u1441
  5418   001CAC  EF5A  F00E         	goto	u1440
  5419   001CB0                     u1441:
  5420   001CB0  EF60  F00E         	goto	l2594
  5421   001CB4                     u1440:
  5422   001CB4  0E00               	movlw	0
  5423   001CB6  6E06               	movwf	(color_processor_hard@color+1)^0,c
  5424   001CB8  0E02               	movlw	2
  5425   001CBA  6E05               	movwf	color_processor_hard@color^0,c
  5426   001CBC  EF64  F00E         	goto	l2596
  5427   001CC0                     l2594:
  5428   001CC0  0E00               	movlw	0
  5429   001CC2  6E06               	movwf	(color_processor_hard@color+1)^0,c
  5430   001CC4  0E03               	movlw	3
  5431   001CC6  6E05               	movwf	color_processor_hard@color^0,c
  5432   001CC8                     l2596:
  5433                           
  5434                           ;../color.c: 154:     return color;
  5435   001CC8  C005  F003         	movff	color_processor_hard@color,?_color_processor_hard
  5436   001CCC  C006  F004         	movff	color_processor_hard@color+1,?_color_processor_hard+1
  5437   001CD0  0012               	return		;funcret
  5438   001CD2                     __end_of_color_processor_hard:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _color_processor_easy *****************
  5442 ;; Defined at:
  5443 ;;		line 133 in file "../color.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  5446 ;;		 -> main@RGB_recorded(8), 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  b               2   10[COMRAM] unsigned int 
  5449 ;;  a               2    8[COMRAM] unsigned int 
  5450 ;;  c               2    6[COMRAM] unsigned int 
  5451 ;;  color           2    4[COMRAM] unsigned int 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2    2[COMRAM] unsigned int 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;Total ram usage:       10 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; Hardware stack levels required when called: 2
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_main
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text35
  5476   001CD2                     __ptext35:
  5477                           	callstack 0
  5478   001CD2                     _color_processor_easy:
  5479                           	callstack 28
  5480   001CD2                     
  5481                           ;../color.c: 133: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 134
      +                          : {;../color.c: 135:     unsigned int a = rgb->R;
  5482   001CD2  EE20 F002          	lfsr	2,2
  5483   001CD6  5003               	movf	color_processor_easy@rgb^0,w,c
  5484   001CD8  26D9               	addwf	fsr2l,f,c
  5485   001CDA  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  5486   001CDC  22DA               	addwfc	fsr2h,f,c
  5487   001CDE  CFDE F009          	movff	postinc2,color_processor_easy@a
  5488   001CE2  CFDD F00A          	movff	postdec2,color_processor_easy@a+1
  5489                           
  5490                           ;../color.c: 136:     unsigned int b = rgb->G;
  5491   001CE6  EE20 F004          	lfsr	2,4
  5492   001CEA  5003               	movf	color_processor_easy@rgb^0,w,c
  5493   001CEC  26D9               	addwf	fsr2l,f,c
  5494   001CEE  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  5495   001CF0  22DA               	addwfc	fsr2h,f,c
  5496   001CF2  CFDE F00B          	movff	postinc2,color_processor_easy@b
  5497   001CF6  CFDD F00C          	movff	postdec2,color_processor_easy@b+1
  5498                           
  5499                           ;../color.c: 137:     unsigned int c = rgb->B;
  5500   001CFA  EE20 F006          	lfsr	2,6
  5501   001CFE  5003               	movf	color_processor_easy@rgb^0,w,c
  5502   001D00  26D9               	addwf	fsr2l,f,c
  5503   001D02  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  5504   001D04  22DA               	addwfc	fsr2h,f,c
  5505   001D06  CFDE F007          	movff	postinc2,color_processor_easy@c
  5506   001D0A  CFDD F008          	movff	postdec2,color_processor_easy@c+1
  5507   001D0E                     
  5508                           ;../color.c: 138:     unsigned int color;;../color.c: 139:     if (a>=b & a>=c){color=1;
      +                          }
  5509   001D0E  500B               	movf	color_processor_easy@b^0,w,c
  5510   001D10  5C09               	subwf	color_processor_easy@a^0,w,c
  5511   001D12  500C               	movf	(color_processor_easy@b+1)^0,w,c
  5512   001D14  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  5513   001D16  A0D8               	btfss	status,0,c
  5514   001D18  EF90  F00E         	goto	u1371
  5515   001D1C  EF92  F00E         	goto	u1370
  5516   001D20                     u1371:
  5517   001D20  EFA3  F00E         	goto	l2568
  5518   001D24                     u1370:
  5519   001D24  5007               	movf	color_processor_easy@c^0,w,c
  5520   001D26  5C09               	subwf	color_processor_easy@a^0,w,c
  5521   001D28  5008               	movf	(color_processor_easy@c+1)^0,w,c
  5522   001D2A  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  5523   001D2C  A0D8               	btfss	status,0,c
  5524   001D2E  EF9B  F00E         	goto	u1381
  5525   001D32  EF9D  F00E         	goto	u1380
  5526   001D36                     u1381:
  5527   001D36  EFA3  F00E         	goto	l2568
  5528   001D3A                     u1380:
  5529   001D3A  0E00               	movlw	0
  5530   001D3C  6E06               	movwf	(color_processor_easy@color+1)^0,c
  5531   001D3E  0E01               	movlw	1
  5532   001D40  6E05               	movwf	color_processor_easy@color^0,c
  5533   001D42  EFC3  F00E         	goto	l2576
  5534   001D46                     l2568:
  5535   001D46  5009               	movf	color_processor_easy@a^0,w,c
  5536   001D48  5C0B               	subwf	color_processor_easy@b^0,w,c
  5537   001D4A  500A               	movf	(color_processor_easy@a+1)^0,w,c
  5538   001D4C  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  5539   001D4E  A0D8               	btfss	status,0,c
  5540   001D50  EFAC  F00E         	goto	u1391
  5541   001D54  EFAE  F00E         	goto	u1390
  5542   001D58                     u1391:
  5543   001D58  EFBF  F00E         	goto	l2574
  5544   001D5C                     u1390:
  5545   001D5C  5007               	movf	color_processor_easy@c^0,w,c
  5546   001D5E  5C0B               	subwf	color_processor_easy@b^0,w,c
  5547   001D60  5008               	movf	(color_processor_easy@c+1)^0,w,c
  5548   001D62  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  5549   001D64  A0D8               	btfss	status,0,c
  5550   001D66  EFB7  F00E         	goto	u1401
  5551   001D6A  EFB9  F00E         	goto	u1400
  5552   001D6E                     u1401:
  5553   001D6E  EFBF  F00E         	goto	l2574
  5554   001D72                     u1400:
  5555   001D72  0E00               	movlw	0
  5556   001D74  6E06               	movwf	(color_processor_easy@color+1)^0,c
  5557   001D76  0E02               	movlw	2
  5558   001D78  6E05               	movwf	color_processor_easy@color^0,c
  5559   001D7A  EFC3  F00E         	goto	l2576
  5560   001D7E                     l2574:
  5561   001D7E  0E00               	movlw	0
  5562   001D80  6E06               	movwf	(color_processor_easy@color+1)^0,c
  5563   001D82  0E03               	movlw	3
  5564   001D84  6E05               	movwf	color_processor_easy@color^0,c
  5565   001D86                     l2576:
  5566                           
  5567                           ;../color.c: 142:     return color;
  5568   001D86  C005  F003         	movff	color_processor_easy@color,?_color_processor_easy
  5569   001D8A  C006  F004         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  5570   001D8E  0012               	return		;funcret
  5571   001D90                     __end_of_color_processor_easy:
  5572                           	callstack 0
  5573                           
  5574 ;; *************** function _color_click_init *****************
  5575 ;; Defined at:
  5576 ;;		line 5 in file "../color.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;		None
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;Total ram usage:        1 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; Hardware stack levels required when called: 5
  5597 ;; This function calls:
  5598 ;;		_I2C_2_Master_Init
  5599 ;;		_color_writetoaddr
  5600 ;; This function is called by:
  5601 ;;		_main
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text36
  5606   00230E                     __ptext36:
  5607                           	callstack 0
  5608   00230E                     _color_click_init:
  5609                           	callstack 25
  5610   00230E                     
  5611                           ;../color.c: 8:     I2C_2_Master_Init();
  5612   00230E  EC42  F013         	call	_I2C_2_Master_Init	;wreg free
  5613   002312                     
  5614                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  5615   002312  0E01               	movlw	1
  5616   002314  6E05               	movwf	color_writetoaddr@value^0,c
  5617   002316  0E00               	movlw	0
  5618   002318  EC7E  F013         	call	_color_writetoaddr
  5619   00231C                     
  5620                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5621   00231C  0E3F               	movlw	63
  5622   00231E  6E07               	movwf	??_color_click_init^0,c
  5623   002320  0E55               	movlw	85
  5624   002322                     u1877:
  5625   002322  2EE8               	decfsz	wreg,f,c
  5626   002324  D7FE               	bra	u1877
  5627   002326  2E07               	decfsz	??_color_click_init^0,f,c
  5628   002328  D7FC               	bra	u1877
  5629   00232A  F000               	nop	
  5630   00232C                     
  5631                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  5632   00232C  0E03               	movlw	3
  5633   00232E  6E05               	movwf	color_writetoaddr@value^0,c
  5634   002330  0E00               	movlw	0
  5635   002332  EC7E  F013         	call	_color_writetoaddr
  5636   002336                     
  5637                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  5638   002336  0ED5               	movlw	213
  5639   002338  6E05               	movwf	color_writetoaddr@value^0,c
  5640   00233A  0E01               	movlw	1
  5641   00233C  EC7E  F013         	call	_color_writetoaddr
  5642   002340                     
  5643                           ;../color.c: 21:     TRISHbits.TRISH1 = 0;
  5644   002340  9288               	bcf	136,1,c	;volatile
  5645   002342                     
  5646                           ;../color.c: 22:     TRISDbits.TRISD3 = 0;
  5647   002342  9684               	bcf	132,3,c	;volatile
  5648   002344                     
  5649                           ;../color.c: 23:     TRISDbits.TRISD4 = 0;
  5650   002344  9884               	bcf	132,4,c	;volatile
  5651   002346                     
  5652                           ;../color.c: 24:     TRISHbits.TRISH0 = 0;
  5653   002346  9088               	bcf	136,0,c	;volatile
  5654   002348                     
  5655                           ;../color.c: 25:     TRISFbits.TRISF0 = 0;
  5656   002348  9086               	bcf	134,0,c	;volatile
  5657   00234A                     
  5658                           ;../color.c: 27:     LATHbits.LATH1 = 1;
  5659   00234A  8280               	bsf	128,1,c	;volatile
  5660   00234C                     
  5661                           ;../color.c: 28:     LATDbits.LATD3 = 1;
  5662   00234C  867C               	bsf	124,3,c	;volatile
  5663   00234E                     
  5664                           ;../color.c: 29:     LATDbits.LATD4 = 1;
  5665   00234E  887C               	bsf	124,4,c	;volatile
  5666   002350                     
  5667                           ;../color.c: 30:     LATHbits.LATH0 = 1;
  5668   002350  8080               	bsf	128,0,c	;volatile
  5669   002352                     
  5670                           ;../color.c: 31:     LATFbits.LATF0 = 1;
  5671   002352  807E               	bsf	126,0,c	;volatile
  5672   002354                     
  5673                           ;../color.c: 34:     LATDbits.LATD7=0;
  5674   002354  9E7C               	bcf	124,7,c	;volatile
  5675   002356                     
  5676                           ;../color.c: 35:     LATHbits.LATH3=0;
  5677   002356  9680               	bcf	128,3,c	;volatile
  5678   002358                     
  5679                           ;../color.c: 36:     TRISDbits.TRISD7=0;
  5680   002358  9E84               	bcf	132,7,c	;volatile
  5681   00235A                     
  5682                           ;../color.c: 37:     TRISHbits.TRISH3=0;
  5683   00235A  9688               	bcf	136,3,c	;volatile
  5684   00235C                     
  5685                           ;../color.c: 39:     TRISFbits.TRISF2=1;
  5686   00235C  8486               	bsf	134,2,c	;volatile
  5687   00235E                     
  5688                           ;../color.c: 40:     ANSELFbits.ANSELF2=0;
  5689   00235E  010E               	movlb	14	; () banked
  5690   002360  95B4               	bcf	180,2,b	;volatile
  5691   002362                     
  5692                           ; BSR set to: 14
  5693                           ;../color.c: 41:     TRISFbits.TRISF3=1;
  5694   002362  8686               	bsf	134,3,c	;volatile
  5695   002364                     
  5696                           ; BSR set to: 14
  5697                           ;../color.c: 42:     ANSELFbits.ANSELF3=0;
  5698   002364  97B4               	bcf	180,3,b	;volatile
  5699   002366                     
  5700                           ; BSR set to: 14
  5701   002366  0012               	return		;funcret
  5702   002368                     __end_of_color_click_init:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _color_writetoaddr *****************
  5706 ;; Defined at:
  5707 ;;		line 45 in file "../color.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  address         1    wreg     unsigned char 
  5710 ;;  value           1    4[COMRAM] unsigned char 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  address         1    5[COMRAM] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5722 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;Total ram usage:        2 bytes
  5727 ;; Hardware stack levels used: 1
  5728 ;; Hardware stack levels required when called: 4
  5729 ;; This function calls:
  5730 ;;		_I2C_2_Master_Start
  5731 ;;		_I2C_2_Master_Stop
  5732 ;;		_I2C_2_Master_Write
  5733 ;; This function is called by:
  5734 ;;		_color_click_init
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text37
  5739   0026FC                     __ptext37:
  5740                           	callstack 0
  5741   0026FC                     _color_writetoaddr:
  5742                           	callstack 25
  5743                           
  5744                           ; BSR set to: 14
  5745                           ;incstack = 0
  5746                           ;color_writetoaddr@address stored from wreg
  5747   0026FC  6E06               	movwf	color_writetoaddr@address^0,c
  5748   0026FE                     
  5749                           ;../color.c: 45: void color_writetoaddr(char address, char value);../color.c: 46: {;../c
      +                          olor.c: 47:     I2C_2_Master_Start();
  5750   0026FE  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  5751                           
  5752                           ;../color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  5753   002702  0E52               	movlw	82
  5754   002704  ECC6  F013         	call	_I2C_2_Master_Write
  5755                           
  5756                           ;../color.c: 49:     I2C_2_Master_Write(0x80 | address);
  5757   002708  5006               	movf	color_writetoaddr@address^0,w,c
  5758   00270A  0980               	iorlw	128
  5759   00270C  ECC6  F013         	call	_I2C_2_Master_Write
  5760                           
  5761                           ;../color.c: 50:     I2C_2_Master_Write(value);
  5762   002710  5005               	movf	color_writetoaddr@value^0,w,c
  5763   002712  ECC6  F013         	call	_I2C_2_Master_Write
  5764                           
  5765                           ;../color.c: 51:     I2C_2_Master_Stop();
  5766   002716  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  5767   00271A  0012               	return		;funcret
  5768   00271C                     __end_of_color_writetoaddr:
  5769                           	callstack 0
  5770                           
  5771 ;; *************** function _I2C_2_Master_Write *****************
  5772 ;; Defined at:
  5773 ;;		line 45 in file "../i2c.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  data_byte       1    wreg     unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  data_byte       1    3[COMRAM] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, status,0, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;Total ram usage:        1 bytes
  5792 ;; Hardware stack levels used: 1
  5793 ;; Hardware stack levels required when called: 3
  5794 ;; This function calls:
  5795 ;;		_I2C_2_Master_Idle
  5796 ;; This function is called by:
  5797 ;;		_color_writetoaddr
  5798 ;;		_color_read_Luminosity
  5799 ;;		_color_read_Red
  5800 ;;		_color_read_Green
  5801 ;;		_color_read_Blue
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text38
  5806   00278C                     __ptext38:
  5807                           	callstack 0
  5808   00278C                     _I2C_2_Master_Write:
  5809                           	callstack 25
  5810                           
  5811                           ;incstack = 0
  5812                           ;I2C_2_Master_Write@data_byte stored from wreg
  5813   00278C  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  5814   00278E                     
  5815                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  5816   00278E  EC57  F013         	call	_I2C_2_Master_Idle	;wreg free
  5817   002792                     
  5818                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  5819   002792  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5820   002796  0012               	return		;funcret
  5821   002798                     __end_of_I2C_2_Master_Write:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function _I2C_2_Master_Stop *****************
  5825 ;; Defined at:
  5826 ;;		line 39 in file "../i2c.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      void 
  5833 ;; Registers used:
  5834 ;;		wreg, status,2, status,0, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;Total ram usage:        0 bytes
  5845 ;; Hardware stack levels used: 1
  5846 ;; Hardware stack levels required when called: 3
  5847 ;; This function calls:
  5848 ;;		_I2C_2_Master_Idle
  5849 ;; This function is called by:
  5850 ;;		_color_writetoaddr
  5851 ;;		_color_read_Luminosity
  5852 ;;		_color_read_Red
  5853 ;;		_color_read_Green
  5854 ;;		_color_read_Blue
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text39
  5859   0027AE                     __ptext39:
  5860                           	callstack 0
  5861   0027AE                     _I2C_2_Master_Stop:
  5862                           	callstack 25
  5863   0027AE                     
  5864                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  5865   0027AE  EC57  F013         	call	_I2C_2_Master_Idle	;wreg free
  5866   0027B2                     
  5867                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5868   0027B2  010E               	movlb	14	; () banked
  5869   0027B4  85DA               	bsf	218,2,b	;volatile
  5870   0027B6                     
  5871                           ; BSR set to: 14
  5872   0027B6  0012               	return		;funcret
  5873   0027B8                     __end_of_I2C_2_Master_Stop:
  5874                           	callstack 0
  5875                           
  5876 ;; *************** function _I2C_2_Master_Start *****************
  5877 ;; Defined at:
  5878 ;;		line 27 in file "../i2c.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;		None
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;Total ram usage:        0 bytes
  5897 ;; Hardware stack levels used: 1
  5898 ;; Hardware stack levels required when called: 3
  5899 ;; This function calls:
  5900 ;;		_I2C_2_Master_Idle
  5901 ;; This function is called by:
  5902 ;;		_color_writetoaddr
  5903 ;;		_color_read_Luminosity
  5904 ;;		_color_read_Red
  5905 ;;		_color_read_Green
  5906 ;;		_color_read_Blue
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text40
  5911   0027B8                     __ptext40:
  5912                           	callstack 0
  5913   0027B8                     _I2C_2_Master_Start:
  5914                           	callstack 25
  5915   0027B8                     
  5916                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  5917   0027B8  EC57  F013         	call	_I2C_2_Master_Idle	;wreg free
  5918   0027BC                     
  5919                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5920   0027BC  010E               	movlb	14	; () banked
  5921   0027BE  81DA               	bsf	218,0,b	;volatile
  5922   0027C0                     
  5923                           ; BSR set to: 14
  5924   0027C0  0012               	return		;funcret
  5925   0027C2                     __end_of_I2C_2_Master_Start:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _I2C_2_Master_Idle *****************
  5929 ;; Defined at:
  5930 ;;		line 22 in file "../i2c.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;Total ram usage:        1 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 2
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_I2C_2_Master_Start
  5955 ;;		_I2C_2_Master_RepStart
  5956 ;;		_I2C_2_Master_Stop
  5957 ;;		_I2C_2_Master_Write
  5958 ;;		_I2C_2_Master_Read
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text41
  5963   0026AE                     __ptext41:
  5964                           	callstack 0
  5965   0026AE                     _I2C_2_Master_Idle:
  5966                           	callstack 25
  5967   0026AE                     l95:
  5968   0026AE  010E               	movlb	14	; () banked
  5969   0026B0  B5D8               	btfsc	216,2,b	;volatile
  5970   0026B2  EF5D  F013         	goto	u1021
  5971   0026B6  EF5F  F013         	goto	u1020
  5972   0026BA                     u1021:
  5973   0026BA  EF57  F013         	goto	l95
  5974   0026BE                     u1020:
  5975   0026BE                     
  5976                           ; BSR set to: 14
  5977   0026BE  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5978   0026C2  0E1F               	movlw	31
  5979   0026C4  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  5980   0026C6  A4D8               	btfss	status,2,c
  5981   0026C8  EF68  F013         	goto	u1031
  5982   0026CC  EF6A  F013         	goto	u1030
  5983   0026D0                     u1031:
  5984   0026D0  EF57  F013         	goto	l95
  5985   0026D4                     u1030:
  5986   0026D4                     
  5987                           ; BSR set to: 14
  5988   0026D4  0012               	return		;funcret
  5989   0026D6                     __end_of_I2C_2_Master_Idle:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function _I2C_2_Master_Init *****************
  5993 ;; Defined at:
  5994 ;;		line 4 in file "../i2c.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;Total ram usage:        0 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 2
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_color_click_init
  6019 ;;		_main
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text42
  6024   002684                     __ptext42:
  6025                           	callstack 0
  6026   002684                     _I2C_2_Master_Init:
  6027                           	callstack 27
  6028   002684                     
  6029                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6030   002684  010E               	movlb	14	; () banked
  6031   002686  51D9               	movf	217,w,b	;volatile
  6032   002688  0BF0               	andlw	-16
  6033   00268A  0908               	iorlw	8
  6034   00268C  6FD9               	movwf	217,b	;volatile
  6035   00268E                     
  6036                           ; BSR set to: 14
  6037                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6038   00268E  8BD9               	bsf	217,5,b	;volatile
  6039                           
  6040                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6041   002690  0E9F               	movlw	159
  6042   002692  6FD6               	movwf	214,b	;volatile
  6043   002694                     
  6044                           ; BSR set to: 14
  6045                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6046   002694  8A84               	bsf	132,5,c	;volatile
  6047   002696                     
  6048                           ; BSR set to: 14
  6049                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6050   002696  8C84               	bsf	132,6,c	;volatile
  6051   002698                     
  6052                           ; BSR set to: 14
  6053                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6054   002698  9BA7               	bcf	167,5,b	;volatile
  6055   00269A                     
  6056                           ; BSR set to: 14
  6057                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6058   00269A  9DA7               	bcf	167,6,b	;volatile
  6059                           
  6060                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  6061   00269C  0E1D               	movlw	29
  6062   00269E  6F1D               	movwf	29,b	;volatile
  6063                           
  6064                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  6065   0026A0  0E1E               	movlw	30
  6066   0026A2  6F1C               	movwf	28,b	;volatile
  6067                           
  6068                           ;../i2c.c: 18:   RD5PPS=0x1C;
  6069   0026A4  0E1C               	movlw	28
  6070   0026A6  6F6F               	movwf	111,b	;volatile
  6071                           
  6072                           ;../i2c.c: 19:   RD6PPS=0x1B;
  6073   0026A8  0E1B               	movlw	27
  6074   0026AA  6F70               	movwf	112,b	;volatile
  6075   0026AC                     
  6076                           ; BSR set to: 14
  6077   0026AC  0012               	return		;funcret
  6078   0026AE                     __end_of_I2C_2_Master_Init:
  6079                           	callstack 0
  6080                           
  6081 ;; *************** function _Timer0_init *****************
  6082 ;; Defined at:
  6083 ;;		line 40 in file "../rc_servo.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;Total ram usage:        0 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; Hardware stack levels required when called: 2
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text43
  6112   00271C                     __ptext43:
  6113                           	callstack 0
  6114   00271C                     _Timer0_init:
  6115                           	callstack 28
  6116   00271C                     
  6117                           ;../rc_servo.c: 42:     T0CON1bits.T0CS=0b010;
  6118   00271C  50D6               	movf	214,w,c	;volatile
  6119   00271E  0B1F               	andlw	-225
  6120   002720  0940               	iorlw	64
  6121   002722  6ED6               	movwf	214,c	;volatile
  6122   002724                     
  6123                           ;../rc_servo.c: 43:     T0CON1bits.T0ASYNC=1;
  6124   002724  88D6               	bsf	214,4,c	;volatile
  6125                           
  6126                           ;../rc_servo.c: 44:     T0CON1bits.T0CKPS=0b0111;
  6127   002726  50D6               	movf	214,w,c	;volatile
  6128   002728  0BF0               	andlw	-16
  6129   00272A  0907               	iorlw	7
  6130   00272C  6ED6               	movwf	214,c	;volatile
  6131   00272E                     
  6132                           ;../rc_servo.c: 46:     T0CON0bits.T016BIT=1;
  6133   00272E  88D5               	bsf	213,4,c	;volatile
  6134                           
  6135                           ;../rc_servo.c: 49:     TMR0H=(65535-2500)>>8;
  6136   002730  0EF6               	movlw	246
  6137   002732  6ED4               	movwf	212,c	;volatile
  6138                           
  6139                           ;../rc_servo.c: 50:     TMR0L=(unsigned char)(65535-2500);
  6140   002734  0E3B               	movlw	59
  6141   002736  6ED3               	movwf	211,c	;volatile
  6142   002738                     
  6143                           ;../rc_servo.c: 51:     T0CON0bits.T0EN=1;
  6144   002738  8ED5               	bsf	213,7,c	;volatile
  6145   00273A  0012               	return		;funcret
  6146   00273C                     __end_of_Timer0_init:
  6147                           	callstack 0
  6148                           
  6149 ;; *************** function _Interrupts_init *****************
  6150 ;; Defined at:
  6151 ;;		line 8 in file "../rc_servo.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;		None
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		None
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;Total ram usage:        0 bytes
  6170 ;; Hardware stack levels used: 1
  6171 ;; Hardware stack levels required when called: 2
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_main
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text44
  6180   002798                     __ptext44:
  6181                           	callstack 0
  6182   002798                     _Interrupts_init:
  6183                           	callstack 28
  6184   002798                     
  6185                           ;../rc_servo.c: 10:     PIE0bits.TMR0IE=1;
  6186   002798  010E               	movlb	14	; () banked
  6187   00279A  8B29               	bsf	41,5,b	;volatile
  6188                           
  6189                           ;../rc_servo.c: 11:     INTCONbits.PEIE=1;
  6190   00279C  8CF2               	bsf	242,6,c	;volatile
  6191                           
  6192                           ;../rc_servo.c: 12:     INTCONbits.IPEN=0;
  6193   00279E  9AF2               	bcf	242,5,c	;volatile
  6194                           
  6195                           ;../rc_servo.c: 13:     INTCONbits.GIE=1;
  6196   0027A0  8EF2               	bsf	242,7,c	;volatile
  6197   0027A2                     
  6198                           ; BSR set to: 14
  6199   0027A2  0012               	return		;funcret
  6200   0027A4                     __end_of_Interrupts_init:
  6201                           	callstack 0
  6202                           
  6203 ;; *************** function _HighISR *****************
  6204 ;; Defined at:
  6205 ;;		line 20 in file "../rc_servo.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;		None
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;		None
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;Total ram usage:        0 bytes
  6224 ;; Hardware stack levels used: 1
  6225 ;; Hardware stack levels required when called: 1
  6226 ;; This function calls:
  6227 ;;		_write16bitTMR0val
  6228 ;; This function is called by:
  6229 ;;		Interrupt level 2
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	intcode
  6234   000008                     __pintcode:
  6235                           	callstack 0
  6236   000008                     _HighISR:
  6237                           	callstack 21
  6238                           
  6239                           ; BSR set to: 14
  6240                           ;incstack = 0
  6241   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6242   00000A                     
  6243                           ;../rc_servo.c: 22:     if (PIR0bits.TMR0IF)
  6244   00000A  010E               	movlb	14	; () banked
  6245   00000C  AB33               	btfss	51,5,b	;volatile
  6246   00000E  EF0B  F000         	goto	i2u158_41
  6247   000012  EF0D  F000         	goto	i2u158_40
  6248   000016                     i2u158_41:
  6249   000016  EF26  F000         	goto	i2l2826
  6250   00001A                     i2u158_40:
  6251   00001A                     
  6252                           ; BSR set to: 14
  6253                           ;../rc_servo.c: 23:     {;../rc_servo.c: 24:         if(LATEbits.LATE2){
  6254   00001A  A47D               	btfss	125,2,c	;volatile
  6255   00001C  EF12  F000         	goto	i2u159_41
  6256   000020  EF14  F000         	goto	i2u159_40
  6257   000024                     i2u159_41:
  6258   000024  EF1E  F000         	goto	i2l2822
  6259   000028                     i2u159_40:
  6260   000028                     
  6261                           ; BSR set to: 14
  6262                           ;../rc_servo.c: 25:             write16bitTMR0val(65535-off_period);
  6263   000028  0100               	movlb	0	; () banked
  6264   00002A  1DB4               	comf	_off_period& (0+255),w,b
  6265   00002C  6E01               	movwf	write16bitTMR0val@tmp^0,c
  6266   00002E  1DB5               	comf	(_off_period+1)& (0+255),w,b
  6267   000030  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  6268   000032  ECE1  F013         	call	_write16bitTMR0val	;wreg free
  6269   000036                     
  6270                           ;../rc_servo.c: 26:             LATEbits.LATE2=0;
  6271   000036  947D               	bcf	125,2,c	;volatile
  6272                           
  6273                           ;../rc_servo.c: 28:         } else {
  6274   000038  EF26  F000         	goto	i2l2826
  6275   00003C                     i2l2822:
  6276                           
  6277                           ; BSR set to: 14
  6278                           ;../rc_servo.c: 29:             write16bitTMR0val(65535-on_period);
  6279   00003C  0100               	movlb	0	; () banked
  6280   00003E  1DB6               	comf	_on_period& (0+255),w,b
  6281   000040  6E01               	movwf	write16bitTMR0val@tmp^0,c
  6282   000042  1DB7               	comf	(_on_period+1)& (0+255),w,b
  6283   000044  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  6284   000046  ECE1  F013         	call	_write16bitTMR0val	;wreg free
  6285   00004A                     
  6286                           ;../rc_servo.c: 30:             LATEbits.LATE2=1;
  6287   00004A  847D               	bsf	125,2,c	;volatile
  6288   00004C                     i2l2826:
  6289                           
  6290                           ;../rc_servo.c: 34:     PIR0bits.TMR0IF=0;
  6291   00004C  010E               	movlb	14	; () banked
  6292   00004E  9B33               	bcf	51,5,b	;volatile
  6293   000050                     
  6294                           ; BSR set to: 14
  6295   000050  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6296   000052  0011               	retfie		f
  6297   000054                     __end_of_HighISR:
  6298                           	callstack 0
  6299                           
  6300 ;; *************** function _write16bitTMR0val *****************
  6301 ;; Defined at:
  6302 ;;		line 58 in file "../rc_servo.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  tmp             2    0[COMRAM] unsigned int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;Total ram usage:        2 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		_HighISR
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text46
  6330   0027C2                     __ptext46:
  6331                           	callstack 0
  6332   0027C2                     _write16bitTMR0val:
  6333                           	callstack 21
  6334   0027C2                     
  6335                           ;../rc_servo.c: 58: void write16bitTMR0val(unsigned int tmp);../rc_servo.c: 59: {;../rc_
      +                          servo.c: 60:     TMR0H=tmp>>8;
  6336   0027C2  5002               	movf	(write16bitTMR0val@tmp+1)^0,w,c
  6337   0027C4  6ED4               	movwf	212,c	;volatile
  6338   0027C6                     
  6339                           ;../rc_servo.c: 61:     TMR0L=tmp;
  6340   0027C6  C001  FFD3         	movff	write16bitTMR0val@tmp,4051	;volatile
  6341   0027CA  0012               	return		;funcret
  6342   0027CC                     __end_of_write16bitTMR0val:
  6343                           	callstack 0
  6344                           
  6345                           	psect	rparam
  6346   000000                     
  6347                           	psect	temp
  6348   00005D                     btemp:
  6349                           	callstack 0
  6350   00005D                     	ds	1
  6351   000000                     int$flags	set	btemp
  6352   000000                     wtemp8	set	btemp+1
  6353   000000                     ttemp5	set	btemp+1
  6354   000000                     ttemp6	set	btemp+4
  6355   000000                     ttemp7	set	btemp+8
  6356                           
  6357                           	psect	idloc
  6358                           
  6359                           ;Config register IDLOC0 @ 0x200000
  6360                           ;	unspecified, using default values
  6361   200000                     	org	2097152
  6362   200000  0FFF               	dw	4095
  6363                           
  6364                           ;Config register IDLOC1 @ 0x200002
  6365                           ;	unspecified, using default values
  6366   200002                     	org	2097154
  6367   200002  0FFF               	dw	4095
  6368                           
  6369                           ;Config register IDLOC2 @ 0x200004
  6370                           ;	unspecified, using default values
  6371   200004                     	org	2097156
  6372   200004  0FFF               	dw	4095
  6373                           
  6374                           ;Config register IDLOC3 @ 0x200006
  6375                           ;	unspecified, using default values
  6376   200006                     	org	2097158
  6377   200006  0FFF               	dw	4095
  6378                           
  6379                           ;Config register IDLOC4 @ 0x200008
  6380                           ;	unspecified, using default values
  6381   200008                     	org	2097160
  6382   200008  0FFF               	dw	4095
  6383                           
  6384                           ;Config register IDLOC5 @ 0x20000A
  6385                           ;	unspecified, using default values
  6386   20000A                     	org	2097162
  6387   20000A  0FFF               	dw	4095
  6388                           
  6389                           ;Config register IDLOC6 @ 0x20000C
  6390                           ;	unspecified, using default values
  6391   20000C                     	org	2097164
  6392   20000C  0FFF               	dw	4095
  6393                           
  6394                           ;Config register IDLOC7 @ 0x20000E
  6395                           ;	unspecified, using default values
  6396   20000E                     	org	2097166
  6397   20000E  0FFF               	dw	4095
  6398                           
  6399                           	psect	config
  6400                           
  6401                           ;Config register CONFIG1L @ 0x300000
  6402                           ;	External Oscillator mode Selection bits
  6403                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6404                           ;	Power-up default value for COSC bits
  6405                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6406   300000                     	org	3145728
  6407   300000  AA                 	db	170
  6408                           
  6409                           ;Config register CONFIG1H @ 0x300001
  6410                           ;	unspecified, using default values
  6411                           ;	Clock Out Enable bit
  6412                           ;	CLKOUTEN = 0x1, unprogrammed default
  6413                           ;	Clock Switch Enable bit
  6414                           ;	CSWEN = 0x1, unprogrammed default
  6415                           ;	Fail-Safe Clock Monitor Enable bit
  6416                           ;	FCMEN = 0x1, unprogrammed default
  6417   300001                     	org	3145729
  6418   300001  FF                 	db	255
  6419                           
  6420                           ;Config register CONFIG2L @ 0x300002
  6421                           ;	unspecified, using default values
  6422                           ;	Master Clear Enable bit
  6423                           ;	MCLRE = 0x1, unprogrammed default
  6424                           ;	Power-up Timer Enable bit
  6425                           ;	PWRTE = 0x1, unprogrammed default
  6426                           ;	Low-power BOR enable bit
  6427                           ;	LPBOREN = 0x1, unprogrammed default
  6428                           ;	Brown-out Reset Enable bits
  6429                           ;	BOREN = 0x3, unprogrammed default
  6430   300002                     	org	3145730
  6431   300002  FF                 	db	255
  6432                           
  6433                           ;Config register CONFIG2H @ 0x300003
  6434                           ;	unspecified, using default values
  6435                           ;	Brown Out Reset Voltage selection bits
  6436                           ;	BORV = 0x3, unprogrammed default
  6437                           ;	ZCD Disable bit
  6438                           ;	ZCD = 0x1, unprogrammed default
  6439                           ;	PPSLOCK bit One-Way Set Enable bit
  6440                           ;	PPS1WAY = 0x1, unprogrammed default
  6441                           ;	Stack Full/Underflow Reset Enable bit
  6442                           ;	STVREN = 0x1, unprogrammed default
  6443                           ;	Debugger Enable bit
  6444                           ;	DEBUG = 0x1, unprogrammed default
  6445                           ;	Extended Instruction Set Enable bit
  6446                           ;	XINST = 0x1, unprogrammed default
  6447   300003                     	org	3145731
  6448   300003  FF                 	db	255
  6449                           
  6450                           ;Config register CONFIG3L @ 0x300004
  6451                           ;	WDT Period Select bits
  6452                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6453                           ;	WDT operating mode
  6454                           ;	WDTE = OFF, WDT Disabled
  6455   300004                     	org	3145732
  6456   300004  9F                 	db	159
  6457                           
  6458                           ;Config register CONFIG3H @ 0x300005
  6459                           ;	unspecified, using default values
  6460                           ;	WDT Window Select bits
  6461                           ;	WDTCWS = 0x7, unprogrammed default
  6462                           ;	WDT input clock selector
  6463                           ;	WDTCCS = 0x7, unprogrammed default
  6464   300005                     	org	3145733
  6465   300005  FF                 	db	255
  6466                           
  6467                           ;Config register CONFIG4L @ 0x300006
  6468                           ;	unspecified, using default values
  6469                           ;	Write Protection Block 0
  6470                           ;	WRT0 = 0x1, unprogrammed default
  6471                           ;	Write Protection Block 1
  6472                           ;	WRT1 = 0x1, unprogrammed default
  6473                           ;	Write Protection Block 2
  6474                           ;	WRT2 = 0x1, unprogrammed default
  6475                           ;	Write Protection Block 3
  6476                           ;	WRT3 = 0x1, unprogrammed default
  6477                           ;	Write Protection Block 3
  6478                           ;	WRT4 = 0x1, unprogrammed default
  6479                           ;	Write Protection Block 3
  6480                           ;	WRT5 = 0x1, unprogrammed default
  6481                           ;	Write Protection Block 3
  6482                           ;	WRT6 = 0x1, unprogrammed default
  6483                           ;	Write Protection Block 3
  6484                           ;	WRT7 = 0x1, unprogrammed default
  6485   300006                     	org	3145734
  6486   300006  FF                 	db	255
  6487                           
  6488                           ;Config register CONFIG4H @ 0x300007
  6489                           ;	unspecified, using default values
  6490                           ;	Configuration Register Write Protection bit
  6491                           ;	WRTC = 0x1, unprogrammed default
  6492                           ;	Boot Block Write Protection bit
  6493                           ;	WRTB = 0x1, unprogrammed default
  6494                           ;	Data EEPROM Write Protection bit
  6495                           ;	WRTD = 0x1, unprogrammed default
  6496                           ;	Scanner Enable bit
  6497                           ;	SCANE = 0x1, unprogrammed default
  6498                           ;	Low Voltage Programming Enable bit
  6499                           ;	LVP = 0x1, unprogrammed default
  6500   300007                     	org	3145735
  6501   300007  FF                 	db	255
  6502                           
  6503                           ;Config register CONFIG5L @ 0x300008
  6504                           ;	unspecified, using default values
  6505                           ;	UserNVM Program Memory Code Protection bit
  6506                           ;	CP = 0x1, unprogrammed default
  6507                           ;	DataNVM Memory Code Protection bit
  6508                           ;	CPD = 0x1, unprogrammed default
  6509   300008                     	org	3145736
  6510   300008  FF                 	db	255
  6511                           
  6512                           ;Config register CONFIG5H @ 0x300009
  6513                           ;	unspecified, using default values
  6514   300009                     	org	3145737
  6515   300009  FF                 	db	255
  6516                           
  6517                           ;Config register CONFIG6L @ 0x30000A
  6518                           ;	unspecified, using default values
  6519                           ;	Table Read Protection Block 0
  6520                           ;	EBTR0 = 0x1, unprogrammed default
  6521                           ;	Table Read Protection Block 1
  6522                           ;	EBTR1 = 0x1, unprogrammed default
  6523                           ;	Table Read Protection Block 2
  6524                           ;	EBTR2 = 0x1, unprogrammed default
  6525                           ;	Table Read Protection Block 3
  6526                           ;	EBTR3 = 0x1, unprogrammed default
  6527                           ;	Table Read Protection Block 4
  6528                           ;	EBTR4 = 0x1, unprogrammed default
  6529                           ;	Table Read Protection Block 5
  6530                           ;	EBTR5 = 0x1, unprogrammed default
  6531                           ;	Table Read Protection Block 6
  6532                           ;	EBTR6 = 0x1, unprogrammed default
  6533                           ;	Table Read Protection Block 7
  6534                           ;	EBTR7 = 0x1, unprogrammed default
  6535   30000A                     	org	3145738
  6536   30000A  FF                 	db	255
  6537                           
  6538                           ;Config register CONFIG6H @ 0x30000B
  6539                           ;	unspecified, using default values
  6540                           ;	Boot Block Table Read Protection bit
  6541                           ;	EBTRB = 0x1, unprogrammed default
  6542   30000B                     	org	3145739
  6543   30000B  FF                 	db	255
  6544                           tosu	equ	0xFFF
  6545                           tosh	equ	0xFFE
  6546                           tosl	equ	0xFFD
  6547                           stkptr	equ	0xFFC
  6548                           pclatu	equ	0xFFB
  6549                           pclath	equ	0xFFA
  6550                           pcl	equ	0xFF9
  6551                           tblptru	equ	0xFF8
  6552                           tblptrh	equ	0xFF7
  6553                           tblptrl	equ	0xFF6
  6554                           tablat	equ	0xFF5
  6555                           prodh	equ	0xFF4
  6556                           prodl	equ	0xFF3
  6557                           indf0	equ	0xFEF
  6558                           postinc0	equ	0xFEE
  6559                           postdec0	equ	0xFED
  6560                           preinc0	equ	0xFEC
  6561                           plusw0	equ	0xFEB
  6562                           fsr0h	equ	0xFEA
  6563                           fsr0l	equ	0xFE9
  6564                           wreg	equ	0xFE8
  6565                           indf1	equ	0xFE7
  6566                           postinc1	equ	0xFE6
  6567                           postdec1	equ	0xFE5
  6568                           preinc1	equ	0xFE4
  6569                           plusw1	equ	0xFE3
  6570                           fsr1h	equ	0xFE2
  6571                           fsr1l	equ	0xFE1
  6572                           bsr	equ	0xFE0
  6573                           indf2	equ	0xFDF
  6574                           postinc2	equ	0xFDE
  6575                           postdec2	equ	0xFDD
  6576                           preinc2	equ	0xFDC
  6577                           plusw2	equ	0xFDB
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     27     150
    BANK1           256    158     158
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2212$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2159$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2159$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK1[50]), 

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S579DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S579DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _stop->_setMotorPWM
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse
    _motor_action->_right_135
    _motor_action->_right_90
    _motor_action->_spin_180
    _spin_180->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_write16bitTMR0val

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               209   209      0   33608
                                             25 BANK0      2     2      0
                                              0 BANK1    158   158      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    2947
                                             27 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             64 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   18784
                                             35 COMRAM     8     2      6
                           _left_135
                            _left_90
                            _reverse
                          _right_135
                           _right_90
                           _spin_180
 ---------------------------------------------------------------------------------
 (2) _spin_180                                             8     4      4    2947
                                             27 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    3099
                                             27 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    2947
                                             27 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              8     4      4    3099
                                             27 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    3099
                                             27 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    2947
                                             27 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2551
                                             16 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             13 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     196
                  _write16bitTMR0val
 ---------------------------------------------------------------------------------
 (10) _write16bitTMR0val                                   2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _left_135
       _setMotorPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _left_90
       _setMotorPWM
     _reverse
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _spin_180
       _setMotorPWM
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop
     _setMotorPWM

 _HighISR (ROOT)
   _write16bitTMR0val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9E      9E       7       61.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      96       5       93.8%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      54        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhhlh      1B      0       0      33        0.0%
BITBIGSFRhhl        17      0       0      35        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllll      B      0       0      52        0.0%
BITBIGSFRllllll      9      0       0      51        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     190      55        0.0%
DATA                 0      0     190       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 02:55:13 2022

               _color_read_Red 240C                _color_read_Blue 24FC                             l33 2366  
                           l42 245A                             l51 1E34                             l36 271A  
                           l45 24FA                             l39 24AA                             l48 254A  
                           l65 1CD0                             l58 1D8E                             l92 26AC  
                           l95 26AE                             l98 26D4                   ___awdiv@sign 000E  
          ___wmul@multiplicand 0005               _color_read_Green 24AC              ??_Interrupts_init 0003  
                          l101 27C0                            l110 2796                            l104 27AC  
                          l113 2612                            l107 27B6                            l250 2292  
                          l323 27A2                            l260 2162                            l245 1510  
                          l334 273A                            l238 25D0                            l270 1F7C  
                          l510 1698                            l182 0F3E                            l183 0F52  
                          l280 20C0                            l265 1ED8                            l275 201E  
                          l523 17FC                            l187 104C                            l285 2204  
                          l375 2758                            l384 2776                            l393 2682  
                          l298 1A84                            l627 1C12                            l387 278A  
                          l396 26FA              motor_action@color 0024                            u810 1A98  
                          u811 1A94                            u900 15CE                            u820 1AAA  
                          u901 15CA                            u821 1AA6                            u910 160E  
                          u830 1AD2                            u911 160A                            u831 1ACE  
                          u920 1658                            u840 1B08                            u921 1654  
                          u841 1B04                            u930 16AC                            u850 258E  
                          u931 16A8                            u851 258A                            u860 1524  
                          u940 16DE                            u861 1520                            u941 16DA  
                          u870 1556                            u950 171C                            u871 1552  
                          u951 1718                            u960 1746                            u881 1580  
                          u961 1742                            u890 15A4                            u970 1774  
                          u891 15A0                            u971 1770                            u980 17BC  
                          u981 17B8                            u990 22A2                            u991 229E  
                          _abs 2614                            _pad 2294                            wreg 000FE8  
                         l1100 230C                           l1105 114E                           l2010 1A86  
                         l1107 1156                           ?_abs 0015                           l2100 1794  
                         l2020 1B08                           l2012 1A98                           l1108 119C  
                         l1132 240A                           l2102 17A6                           l2014 1AAA  
                         l2030 256E                           l1126 195A                           l1151 1B4E  
                         l1119 133C                           l2040 1548                           l2032 1512  
                         l2104 17AC                           l1136 264A                           l2016 1AB4  
                         l2024 254C                           l2120 22D6                           l2112 2294  
                         l2200 1174                           l2130 26AE                           l2050 15A4  
                         l2042 1556                           l2034 1516                           l2106 17BC  
                         l1162 27CC                           l2018 1AD2                           l2026 2558  
                         l2122 22DA                           l2114 22A2                           l2210 11AC  
                         l2202 1184                           l1074 23B8                           l1139 2652  
                         l2132 26BE                           l2140 1B50                           l2060 160E  
                         l2052 15AC                           l2044 1576                           l2036 1524  
                         l2108 17DC                           l2028 256A                           l2124 22F8  
                         l2116 22AE                           l2212 11B2                           l2220 12A4  
                         l2204 1190                           l2300 191C                           l2310 2684  
                         l2150 1B7C                           l2142 1B54                           l2134 26D6  
                         l2070 1658                           l2062 162E                           l2054 15C0  
                         l2046 157A                           l2038 1544                           l2126 2614  
                         l2118 22C2                           l2230 130C                           l2222 12BE  
                         l2214 1234                           l2206 1198                           l1159 258E  
                         l2320 269A                           l2312 268E                           l2240 278E  
                         l2160 1BAA                           l2152 1B84                           l2144 1B62  
                         l2136 26F2                           l2072 1678                           l2064 1630  
                         l2056 15CE                           l2048 1586                           l2080 16AC  
                         l2128 262E                           l1096 22B6                           l2232 131C  
                         l2224 12DC                           l2216 123A                           l2208 11A4  
                         l2304 192E                           l2314 2694                           l2242 2792  
                         l2322 26FE                           l2250 27A8                           l2330 240C  
                         l2170 1BE4                           l2162 1BB2                           l2154 1B88  
                         l2146 1B6A                           l2410 1F34                           l2402 1F02  
                         l2066 1642                           l2058 15E0                           l2090 171C  
                         l2082 16CC                           l2226 12F6                           l2218 1240  
                         l2316 2696                           l2236 27B8                           l2244 27AE  
                         l2260 260E                           l2252 25D4                           l2324 245C  
                         l2332 2452                           l2180 1C0A                           l2172 1BE6  
                         l2164 1BC0                           l2156 1B90                           l2148 1B6E  
                         l2412 1F3C                           l2404 1F10                           l2420 1F9E  
                         l2068 1648                           l2092 1724                           l2084 16D0  
                         l2076 169A                           l2228 1306                           l2500 2402  
                         l2318 2698                           l2238 27BC                           l2246 27B2  
                         l2510 232C                           l2262 2610                           l2254 25D8  
                         l2342 24FC                           l2326 24A2                           l2174 1BEC  
                         l2166 1BC6                           l2158 1BA2                           l2270 13BC  
                         l2414 1F48                           l2406 1F1C                           l2350 20E2  
                         l2430 1FC0                           l2094 1738                           l2086 16DE  
                         l2078 169E                           l2190 1106                           l2520 2346  
                         l2512 2336                           l2504 230E                           l2256 25E0  
                         l2248 27A4                           l2344 2542                           l2336 24AC  
                         l2600 2590                           l2168 1BDC                           l2176 1BF2  
                         l2272 1402                           l2416 1F64                           l2408 1F28  
                         l2360 210E                           l2440 2008                           l2432 1FCC  
                         l2096 1746                           l2088 16FE                           l2192 1126  
                         l2184 10C2                           l2280 17FE                           l2530 2350  
                         l2522 2348                           l2514 2340                           l2506 2312  
                         l2258 25E8                           l2338 24F2                           l2610 25CE  
                         l2602 25A0                           l2178 1C02                           l2274 1422  
                         l2266 133E                           l2362 211A                           l2450 2048  
                         l2442 2020                           l2370 1E36                           l2434 1FD8  
                         l2426 1FA6                           l2418 1F7E                           l2098 1774  
                         l2194 1142                           l2186 10E2                           l2290 1856  
                         l2282 1826                           l2612 2798                           l2620 2738  
                         l2540 235A                           l2532 2352                           l2524 234A  
                         l2516 2342                           l2508 231C                           l2604 25B4  
                         l2276 143E                           l2268 135A                           l2364 2122  
                         l2356 20EA                           l2348 20C2                           l2460 2082  
                         l2452 2054                           l2444 2040                           l2380 1E6A  
                         l2372 1E56                           l2436 1FE0                           l2428 1FB2  
                         l2196 115E                           l2188 10F6                           l2292 1876  
                         l2284 1834                           l2614 271C                           l2542 235C  
                         l2534 2354                           l2526 234C                           l2518 2344  
                         l2550 1D90                           l2606 25B8                           l2630 2754  
                         l2622 273C                           l2278 14A8                           l2366 212E  
                         l2358 2102                           l2462 208E                           l2454 2062  
                         l2390 1EA4                           l2382 1E78                           l2438 1FEC  
                         l2198 116E                           l2294 1896                           l2286 1842  
                         l2616 2724                           l2544 235E                           l2536 2356  
                         l2528 234E                           l2560 1CD2                           l2552 1DA4  
                         l2608 25CC                           l2632 2756                           l2624 2746  
                         l2480 21B2                           l2368 214A                           l2464 20AA  
                         l2456 206E                           l2392 1EC0                           l2384 1E84  
                         l2296 18EC                           l2288 1846                           l2640 238A  
                         l2618 272E                           l2546 2362                           l2538 2358  
                         l2570 1D5C                           l2562 1D0E                           l2554 1DBC  
                         l2626 2748                           l2482 21BE                           l2474 218C  
                         l2466 2164                           l2394 1EDA                           l2458 207A  
                         l2386 1E90                           l2378 1E5E                           l2490 2776  
                         l2650 2666                           l2642 23A6                           l2634 2368  
                         l2548 2364                           l2572 1D72                           l2564 1D24  
                         l2580 1C14                           l2556 1DEC                           l2628 2752  
                         l2484 21C6                           l2476 219A                           l2468 2184  
                         l2396 1EFA                           l2388 1E98                           l2492 2786  
                         l2652 266A                           l2636 237A                           l2900 0F04  
                         l2574 1D7E                           l2566 1D3A                           l2590 1C9E  
                         l2582 1C50                           l2558 1E04                           l2486 21D2  
                         l2478 21A6                           l2646 2654                           l2494 23BA  
                         l2638 2382                           l2670 226C                           l2662 222E  
                         l2654 2206                           l2910 0F7E                           l2902 0F0C  
                         l2576 1D86                           l2568 1D46                           l2592 1CB4  
                         l2584 1C66                           l2488 21EE                           l2680 1990  
                         l2648 2658                           l2496 23C6                           l2672 2278  
                         l2664 2246                           l2656 2226                           l2920 0FE0  
                         l2912 0F8A                           l2904 0F4C                           l2594 1CC0  
                         l2586 1C7C                           l2682 19A8                           l2674 195C  
                         l2498 23E2                           l2666 2252                           l2930 1038  
                         l2922 0FFA                           l2914 0F98                           l2906 0F58  
                         l2850 0E12                           l2596 1CC8                           l2588 1C88  
                         l2684 19D4                           l2676 1960                           l2692 1A30  
                         l2668 225E                           l2932 105A                           l2924 1016  
                         l2916 0FB0                           l2908 0F6A                           l2860 0E2E  
                         l2852 0E16                           l2686 1A00                           l2678 1978  
                         l2934 1066                           l2926 101C                           l2918 0FC4  
                         l2870 0E44                           l2862 0E32                           l2854 0E22  
                         ?_pad 0013                           l2688 1A18                           l2944 109A  
                         l2928 1024                           l2936 107E                           l2880 0E70  
                         l2872 0E4C                           l2864 0E32                           l2856 0E26  
                         l2946 109E                           l2938 1092                           l2890 0E9E  
                         l2882 0E74                           l2874 0E50                           l2866 0E38  
                         l2858 0E2A                           l2892 0EAA                           l2884 0E7C  
                         l2876 0E58                           l2868 0E3C                           l2894 0EE0  
                         l2886 0E88                           l2878 0E5C                           l2968 1A46  
                         l2896 0EEC                           l2888 0E94                           l2898 0F00  
                         STR_1 0E01                           u1000 22F8                           u1001 22F4  
                         u1010 262E                           u1011 262A                           u1020 26BE  
                         u1100 10F2                           u1021 26BA                           u1101 10EC  
                         u1030 26D4                           u1110 10F4                           u1031 26D0  
                         u1200 25FC                           u1040 1B62                           u1120 1106  
                         u1201 25F4                           u1041 1B5E                           u1121 1102  
                         u1050 1B7C                           u1130 1142                           u1051 1B78  
                         u1131 113E                           u1060 1BA2                           u1220 135A  
                         u1300 1EC0                           u1140 116E                           u1061 1B9E  
                         u1221 1356                           u1301 1EBC                           u1141 116A  
                         u1070 1BC0                           u1230 143E                           u1310 1F64  
                         u1150 1184                           u1071 1BBC                           u1231 143A  
                         u1311 1F60                           u1151 1180                           u1400 1D72  
                         u1080 1BDC                           u1320 2008                           u1160 12BE  
                         u1401 1D6E                           u1081 1BD8                           u1321 2004  
                         u1161 12BA                           u1410 1C66                           u1218 25FE  
                         u1090 1C02                           u1330 20AA                           u1170 12DC  
                         u1411 1C62                           u1091 1BFE                           u1331 20A6  
                         u1171 12D8                           u1420 1C7C                           u1244 1498  
                         u1340 21EE                           u1180 12F6                           u1260 1826  
                         u1421 1C78                           u1245 1494                           u1341 21EA  
                         u1181 12F2                           u1261 1822                           u1430 1C9E  
                         u1254 1502                           u1350 2786                           u1190 1306  
                         u1270 1876                           u1431 1C9A                           u1255 14FE  
                         u1351 2782                           u1191 1302                           u1271 1872  
                         u1440 1CB4                           u1280 1896                           u1360 2402  
                         u1600 0F00                   _BAUD4CONbits 000EE9                           u1441 1CB0  
                         u1281 1892                           u1361 23FE                           u1601 0EFC  
                         _LATE 000F7D                           u1370 1D24                           u1290 214A  
                         u1450 2682                           u1610 0F2A                           u1371 1D20  
                         u1291 2146                           u1451 267E                           u1611 0F20  
                         _LATG 000F7F                           u1380 1D3A                           u1460 2292  
                         u1620 0F3E                           u1381 1D36                           u1461 228E  
                         u1621 0F3A                           u1390 1D5C                           u1630 0F4C  
                         u1391 1D58                           u1631 0F48                           u1640 0F6A  
                         u1641 0F66                           u1650 0F98                           u1618 0F2E  
                         _T2PR 000FBC                           u1707 1072                           u1651 0F94  
                         u1660 1038                           u1717 2264                           u1661 1034  
                         u1670 105A                           u1807 1F36                           u1727 1FDA  
                         u1671 1056                           u1680 1092                           u1817 1F6E  
                         u1737 2012                           u1681 108E                           u1690 10BA  
                         u1827 21C0                           u1747 1E92                           u1691 10B6  
                         u1837 21F8                           u1757 1ECA                           u1847 1DAE  
                         u1767 207C                           u1857 1DDE                           u1777 20B4  
                         u1867 1E0E                           u1787 211C                           u1877 2322  
                         u1797 2154                    main@readout 0100                           abs@a 0015  
                         _dbuf 00BB                           _main 0E12                           _dtoa 10C2  
                         _prec 00B2                           pad@i 001A                           pad@p 0017  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001C  
                         fsr2l 000FD9                           btemp 005D                           _stop 2206  
                         prodh 000FF4                           prodl 000FF3                           start 0054  
       __end_of_color_read_Red 245C                __end_of_HighISR 0054                   ___param_bank 000000  
                        ??_abs 0017                          ??_pad 0019                __end_of___aodiv 169A  
                        ?_main 0001                          ?_dtoa 001E                __end_of___aomod 17FE  
              __end_of___awdiv 1C14        ??_color_read_Luminosity 0009                          ?_stop 001C  
              ___awdiv@divisor 000B                          i2l331 0050                          i2l337 27CA  
              ___awdiv@counter 000D                   vfpfcnvrt@fmt 0043                          _TMR0H 000FD4  
                        _TMR0L 000FD3        __end_of_sendCharSerial4 278C     __end_of_I2C_2_Master_Start 27C2  
   __end_of_I2C_2_Master_Write 2798                __end_of_left_90 1F7E                          _flags 00B8  
                        _fputc 1A86                          _fputs 254C                          pad@fp 0013  
                        _width 00B0                          _putch 27CC                          main@j 0176  
                        main@k 0178                          dtoa@d 0020                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0032                          dtoa@s 0040  
                        dtoa@w 0034                          tablat 000FF5                __end_of_reverse 2164  
                        ttemp5 005E                          ttemp6 0061                          ttemp7 0065  
                        stop@i 0021                          status 000FD8                          wtemp8 005E  
              __end_of_sprintf 23BA        __end_of_color_read_Blue 254C          _I2C_2_Master_RepStart 27A4  
              ?_color_read_Red 0007                __initialization 275A                   __end_of_main 10C2  
                 __end_of_dtoa 133E                   __end_of_stop 2294                         ??_main 00F4  
                       ??_dtoa 0028                         ??_stop 0020                  __activetblptr 000003  
                 ?_setMotorPWM 0011                         ?_fputc 0003                         ?_fputs 000C  
             ___awdiv@dividend 0009                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70                         i2l2700 27C6  
                       i2l2820 0036                         i2l2822 003C                         i2l2814 000A  
                       i2l2824 004A                         i2l2816 001A                         i2l2818 0028  
                       i2l2826 004C                         i2l2698 27C2                      ??_HighISR 0003  
     __end_of_color_click_init 2368                         _RX4PPS 000E15                         _TX4REG 000EE4  
                ??_Timer0_init 0003      color_processor_easy@color 0005      color_processor_hard@color 0005  
                 vfprintf@cfmt 0059               __end_of_left_135 2206                      ??___aodiv 0013  
                    ??___aomod 0013                         ___wmul 26D6                      ??___awdiv 000D  
                       clear_0 2760               ___awdiv@quotient 000F                         isa$std 000001  
                       pad@buf 0015                         dtoa@fp 001E                  main@time_flag 0170  
                    ??_left_90 0020               __end_of_right_90 1EDA                  main@time_path 0150  
                       fputc@c 0003                         fputs@c 0010                         fputs@i 0011  
                       fputs@s 000C               __end_of_spin_180 2020                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                      ??_reverse 0020                         putch@c 0001  
             __end_of_vfprintf 240C                         stop@mL 001C                         stop@mR 001E  
            ??_initDCmotorsPWM 0005                      ??_sprintf 005B                     __accesstop 0060  
      __end_of__initialization 276A       __end_of_color_read_Green 24FC         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0007                _Interrupts_init 2798  
               __pcstackCOMRAM 0001                  color_read@rgb 000E                  __end_of_fputc 1B50  
                __end_of_fputs 2590                  __end_of_putch 27CE            __end_of_Timer0_init 273C  
                      ??_fputc 0007                        ??_fputs 0010                        ??_putch 0003  
                   __pbssBANK0 0060              _color_writetoaddr 26FC                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0005                        ?___wmul 0003                 main@color_flag 016E  
               main@color_name 017A                 main@color_path 0132                    right_135@mL 001C  
                  right_135@mR 001E            ??_color_writetoaddr 0006  __end_of_color_read_Luminosity 24AC  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _PWM6DCH 000FA3  
                      _PWM7DCH 000FA0                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                    ?_left_135 001C                     _color_read 1D90        __end_of_Interrupts_init 27A4  
       color_writetoaddr@value 0005               ??_color_read_Red 0009                        _HighISR 0008  
    __end_of_color_writetoaddr 271C       color_read_Luminosity@tmp 000C             _I2C_2_Master_Start 27B8  
                   _initUSART4 273C             _I2C_2_Master_Write 278C                      ?_right_90 001C  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000C  
                  _Timer0_init 271C                      ?_spin_180 001C        sendStringSerial4@string 0004  
                      ___aodiv 1512                        ___aomod 169A                        ___awdiv 1B50  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                     _off_period 00B4  
                    ?_vfprintf 0053                   __psmallconst 0E00                        __pcinit 275A  
                      __ramtop 0E00                        __ptext0 0E12                        __ptext1 2206  
                      __ptext2 2368                        __ptext3 23BA                        __ptext4 17FE  
                      __ptext5 10C2                        __ptext6 2294                        __ptext7 254C  
                      __ptext8 1A86                        __ptext9 27CC                        _left_90 1EDA  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE                  ?_motor_action 0024  
                      _reverse 20C2                  _RxBufWriteCnt 005C                        _sprintf 2368  
         ??_I2C_2_Master_Start 0004                     ??_left_135 0020           ??_I2C_2_Master_Write 0004  
         end_of_initialization 276A              __end_of_right_135 20C2             setMotorPWM@PWMduty 001A  
                      fputc@fp 0005                        fputs@fp 000E              ?_color_click_init 0001  
 __end_of_color_processor_easy 1D90   __end_of_color_processor_hard 1CD2                     ??_right_90 0020  
           ??_color_click_init 0007              __end_of_vfpfcnvrt 195C                     ??_spin_180 0020  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0049  
                   ??_vfprintf 0059                _initDCmotorsPWM 2590                      _PORTFbits 000F8E  
               ??_motor_action 002A                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ?_color_read 000E       color_writetoaddr@address 0006  
      ??_I2C_2_Master_RepStart 0004               ?_Interrupts_init 0001                     left_135@mL 001C  
                   left_135@mR 001E                   _EUSART4RXbuf 009C                   _EUSART4TXbuf 0060  
            ?_color_read_Green 0007                    ?_initUSART4 0001      sendCharSerial4@charToSend 0003  
                   main@motorL 018C                     main@motorR 0195             ??_color_read_Green 0009  
                  vfpfcnvrt@ap 0045                    vfpfcnvrt@cp 0051                    vfpfcnvrt@fp 0041  
               __end_of___wmul 26FC            start_initialization 275A                    __end_of_abs 2654  
                  __end_of_pad 230E                  _TxBufWriteCnt 00BA            color_read_Green@tmp 000C  
      __end_of_initDCmotorsPWM 25D2                    vfprintf@fmt 0055                       ??___wmul 0007  
                  __pbssCOMRAM 005B           _color_processor_easy 1CD2           _color_processor_hard 1C14  
                __pcstackBANK0 00DB                  __pcstackBANK1 0100               ___aodiv@dividend 0003  
           main@RGB_calibrated 0184                       ?_HighISR 0001        color_processor_easy@rgb 0003  
      color_processor_hard@rgb 0003          color_processor_easy@a 0009          color_processor_easy@b 000B  
        color_processor_easy@c 0007          color_processor_hard@a 0009          color_processor_hard@b 000B  
        color_processor_hard@c 0007                      _dtoa$2240 0030           __end_of_motor_action 1A86  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___aodiv 0003  
                     ?___aomod 0003                       ?___awdiv 0009               ___aodiv@quotient 0015  
                   right_135@i 0022                     right_90@mL 001C                     right_90@mR 001E  
         I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006                       ?_left_90 001C  
                  __smallconst 0E00              _I2C_2_Master_Idle 26AE          ?_color_processor_easy 0003  
        ?_color_processor_hard 0003               main@RGB_recorded 017C              _I2C_2_Master_Init 2684  
            _I2C_2_Master_Read 25D2              _I2C_2_Master_Stop 27AE                   _RxBufReadCnt 005B  
                     ?_reverse 001C             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0013          _color_read_Luminosity 245C  
           ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0003                       ?_sprintf 00DB  
            _sendStringSerial4 2654            ??_I2C_2_Master_Idle 0003            ??_I2C_2_Master_Init 0003  
          ??_I2C_2_Master_Read 0004                 ___wmul@product 0007            ??_I2C_2_Master_Stop 0004  
                     _LATCbits 000F7B                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                      _on_period 00B6                       _LATGbits 000F7F  
                     _LATHbits 000F80                      _right_135 2020                       _PIE0bits 000E29  
           ?_sendStringSerial4 0004                     spin_180@mL 001C                     spin_180@mR 001E  
                     i2u158_40 001A                       i2u158_41 0016                       i2u159_40 0028  
                     i2u159_41 0024                       _PIR0bits 000E33                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0003              ??_sendCharSerial4 0003                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0006                       _SSP2STAT 000ED8                      _vfpfcnvrt 17FE  
    __end_of_I2C_2_Master_Idle 26D6      __end_of_I2C_2_Master_Init 26AE      __end_of_I2C_2_Master_Read 2614  
            ___wmul@multiplier 0003      __end_of_I2C_2_Master_Stop 27B8           write16bitTMR0val@tmp 0001  
                 setMotorPWM@m 0011    I2C_2_Master_Write@data_byte 0004                      left_135@i 0022  
            _write16bitTMR0val 27C2                      left_90@mL 001C                      left_90@mR 001E  
            ??_color_read_Blue 0009                   _TxBufReadCnt 00B9             ?_write16bitTMR0val 0001  
                 ??_color_read 0010      __end_of_sendStringSerial4 2684  __end_of_I2C_2_Master_RepStart 27AE  
           color_read_Blue@tmp 000C            ??_write16bitTMR0val 0003            __end_of_setMotorPWM 1512  
                   ?_right_135 001C                   ??_initUSART4 0003                       __Hrparam 0000  
                   vfprintf@ap 0057                       __Lrparam 0000                     vfprintf@fp 0053  
                   ?_vfpfcnvrt 0041             __end_of_color_read 1E36                ___aodiv@divisor 000B  
              ___aodiv@counter 0013      __end_of_write16bitTMR0val 27CC                     _ANSELDbits 000EA7  
       ??_color_processor_easy 0005         ??_color_processor_hard 0005                     _ANSELFbits 000EB4  
                   sprintf@fmt 00DD                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
       ?_color_read_Luminosity 0007             __end_of_initUSART4 275A                       __ptext10 2614  
                     __ptext11 169A                       __ptext20 1EDA                       __ptext12 1512  
                     __ptext21 2164                       __ptext13 2654                       __ptext30 24AC  
                     __ptext22 133E                       __ptext14 2774                       __ptext31 24FC  
                     __ptext23 26D6                       __ptext15 195C                       __ptext40 27B8  
                     __ptext32 27A4                       __ptext24 1B50                       __ptext16 1F7E  
                     __ptext41 26AE                       __ptext33 25D2                       __ptext25 273C  
                     __ptext17 1E36                       __ptext42 2684                       __ptext34 1C14  
                     __ptext26 2590                       __ptext18 2020                       __ptext43 271C  
                     __ptext35 1CD2                       __ptext27 1D90                       __ptext19 20C2  
                     __ptext44 2798                       __ptext36 230E                       __ptext28 240C  
                     __ptext37 26FC                       __ptext29 245C                       __ptext46 27C2  
                     __ptext38 278C                       __ptext39 27AE                      right_90@i 0022  
                     _left_135 2164                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     _right_90 1E36                      reverse@mL 001C                      reverse@mR 001E  
                    spin_180@i 0022                       _spin_180 1F7E                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005D                  motor_action@l 0026  
                motor_action@r 0028                       _vfprintf 23BA                       main@home 0174  
                     left_90@i 0022                       main@time 0172               ___aomod@dividend 0003  
                   _INTCONbits 000FF2                   _motor_action 195C                    _setMotorPWM 133E  
                  _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1                       intlevel2 0000  
                    sprintf@ap 00E7                    ??_right_135 0020                       reverse@i 0022  
              ___aomod@divisor 000B                    ??_vfpfcnvrt 0047                ___aomod@counter 0013  
             _color_click_init 230E                       sprintf@f 00E9                       sprintf@s 00DB  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0014                _sendCharSerial4 2774                   ___aomod@sign 0014  
