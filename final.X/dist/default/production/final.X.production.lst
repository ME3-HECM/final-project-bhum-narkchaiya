

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 18:35:42 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Version 2.35
    69                           ; Generated 05/05/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F67K40 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     _TX4REG	set	3812
   104   000000                     _RC4STAbits	set	3815
   105   000000                     _SP4BRGH	set	3814
   106   000000                     _T0CON0bits	set	4053
   107   000000                     _T0CON1bits	set	4054
   108   000000                     _TMR0H	set	4052
   109   000000                     _TRISGbits	set	3975
   110   000000                     _TRISEbits	set	3973
   111   000000                     _LATFbits	set	3966
   112   000000                     _TRISFbits	set	3974
   113   000000                     _LATG	set	3967
   114   000000                     _LATE	set	3965
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _LATGbits	set	3967
   117   000000                     _LATEbits	set	3965
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _ANSELDbits	set	3751
   122   000000                     _ANSELFbits	set	3764
   123   000000                     _LATDbits	set	3964
   124   000000                     _LATHbits	set	3968
   125   000000                     _TRISDbits	set	3972
   126   000000                     _TRISHbits	set	3976
   127   000000                     _PORTFbits	set	3982
   128   000000                     _PWM7DCH	set	4000
   129   000000                     _PWM6DCH	set	4003
   130   000000                     _TRISCbits	set	3971
   131   000000                     _SSP2BUF	set	3797
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _RC4REG	set	3811
   135   000000                     _SP4BRGL	set	3813
   136   000000                     _TX4STAbits	set	3816
   137   000000                     _BAUD4CONbits	set	3817
   138   000000                     _LATCbits	set	3963
   139   000000                     _SSP2CON2	set	3802
   140   000000                     _SSP2STAT	set	3800
   141   000000                     _IPR0bits	set	3615
   142   000000                     _PIE0bits	set	3625
   143   000000                     _RC7PPS	set	3689
   144   000000                     _RD5PPS	set	3695
   145   000000                     _RE2PPS	set	3700
   146   000000                     _RD6PPS	set	3696
   147   000000                     _PWM6CONbits	set	4004
   148   000000                     _T2PR	set	4028
   149   000000                     _T2CONbits	set	4029
   150   000000                     _INTCONbits	set	4082
   151   000000                     _PWM7CONbits	set	4001
   152   000000                     _TMR0L	set	4051
   153   000000                     _T2CLKCONbits	set	4031
   154   000000                     _T2HLTbits	set	4030
   155   000000                     _PIE2bits	set	3627
   156   000000                     _PIR0bits	set	3635
   157   000000                     _IPR2bits	set	3617
   158   000000                     _PIR2bits	set	3637
   159   000000                     _PIR4bits	set	3639
   160   000000                     _RC0PPS	set	3682
   161                           
   162                           	psect	smallconst
   163   000E00                     __psmallconst:
   164                           	callstack 0
   165   000E00  00                 	db	0
   166   000E01                     STR_3:
   167                           
   168                           ; BSR set to: 14
   169   000E01  25                 	db	37
   170   000E02  64                 	db	100	;'d'
   171   000E03  20                 	db	32
   172   000E04  25                 	db	37
   173   000E05  64                 	db	100	;'d'
   174   000E06  20                 	db	32
   175   000E07  25                 	db	37
   176   000E08  64                 	db	100	;'d'
   177   000E09  20                 	db	32
   178   000E0A  25                 	db	37
   179   000E0B  64                 	db	100	;'d'
   180   000E0C  20                 	db	32
   181   000E0D  25                 	db	37
   182   000E0E  64                 	db	100	;'d'
   183   000E0F  20                 	db	32
   184   000E10  0D                 	db	13
   185   000E11  0A                 	db	10
   186   000E12  00                 	db	0
   187   000E13  00                 	db	0	; dummy byte at the end
   188   000000                     
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192   002BD2                     __pcinit:
   193                           	callstack 0
   194   002BD2                     start_initialization:
   195                           	callstack 0
   196   002BD2                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Clear objects allocated to BANK2 (122 bytes)
   200   002BD2  EE02  F000         	lfsr	0,__pbssBANK2
   201   002BD6  0E7A               	movlw	122
   202   002BD8                     clear_0:
   203   002BD8  6AEE               	clrf	postinc0,c
   204   002BDA  06E8               	decf	wreg,f,c
   205   002BDC  E1FD               	bnz	clear_0
   206                           
   207                           ; Clear objects allocated to BANK1 (2 bytes)
   208   002BDE  0101               	movlb	1
   209   002BE0  6BFF               	clrf	(__pbssBANK1+1)& (0+255),b
   210   002BE2  6BFE               	clrf	__pbssBANK1& (0+255),b
   211                           
   212                           ; Clear objects allocated to BANK0 (1 bytes)
   213   002BE4  0100               	movlb	0
   214   002BE6  6BFF               	clrf	__pbssBANK0& (0+255),b
   215                           
   216                           ; Clear objects allocated to COMRAM (2 bytes)
   217   002BE8  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   218   002BEA  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   219   002BEC                     end_of_initialization:
   220                           	callstack 0
   221   002BEC                     __end_of__initialization:
   222                           	callstack 0
   223   002BEC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   002BEE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   002BF0  0100               	movlb	0
   226   002BF2  EF0A  F007         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   00005D                     __pbssCOMRAM:
   230                           	callstack 0
   231   00005D                     _RxBufReadCnt:
   232                           	callstack 0
   233   00005D                     	ds	1
   234   00005E                     _RxBufWriteCnt:
   235                           	callstack 0
   236   00005E                     	ds	1
   237                           
   238                           	psect	bssBANK0
   239   0000FF                     __pbssBANK0:
   240                           	callstack 0
   241   0000FF                     _TxBufWriteCnt:
   242                           	callstack 0
   243   0000FF                     	ds	1
   244                           
   245                           	psect	bssBANK1
   246   0001FE                     __pbssBANK1:
   247                           	callstack 0
   248   0001FE                     _flags:
   249                           	callstack 0
   250   0001FE                     	ds	1
   251   0001FF                     _TxBufReadCnt:
   252                           	callstack 0
   253   0001FF                     	ds	1
   254                           
   255                           	psect	bssBANK2
   256   000200                     __pbssBANK2:
   257                           	callstack 0
   258   000200                     _EUSART4TXbuf:
   259                           	callstack 0
   260   000200                     	ds	60
   261   00023C                     _EUSART4RXbuf:
   262                           	callstack 0
   263   00023C                     	ds	20
   264   000250                     _width:
   265                           	callstack 0
   266   000250                     	ds	2
   267   000252                     _prec:
   268                           	callstack 0
   269   000252                     	ds	2
   270   000254                     _time:
   271                           	callstack 0
   272   000254                     	ds	2
   273   000256                     _off_period:
   274                           	callstack 0
   275   000256                     	ds	2
   276   000258                     _on_period:
   277                           	callstack 0
   278   000258                     	ds	2
   279   00025A                     _dbuf:
   280                           	callstack 0
   281   00025A                     	ds	32
   282                           
   283                           	psect	cstackBANK2
   284   00027A                     __pcstackBANK2:
   285                           	callstack 0
   286   00027A                     main@color_calibrated:
   287                           	callstack 0
   288                           
   289                           ; 64 bytes @ 0x0
   290   00027A                     	ds	64
   291   0002BA                     main@RGB_calibrated:
   292                           	callstack 0
   293                           
   294                           ; 8 bytes @ 0x40
   295   0002BA                     	ds	8
   296   0002C2                     main@motorL:
   297                           	callstack 0
   298                           
   299                           ; 9 bytes @ 0x48
   300   0002C2                     	ds	9
   301   0002CB                     main@motorR:
   302                           	callstack 0
   303                           
   304                           ; 9 bytes @ 0x51
   305   0002CB                     	ds	9
   306                           
   307                           	psect	cstackBANK1
   308   000100                     __pcstackBANK1:
   309                           	callstack 0
   310   000100                     main@readout2:
   311                           	callstack 0
   312                           
   313                           ; 100 bytes @ 0x0
   314   000100                     	ds	100
   315   000164                     main@readout3:
   316                           	callstack 0
   317                           
   318                           ; 100 bytes @ 0x64
   319   000164                     	ds	100
   320   0001C8                     main@time_path:
   321                           	callstack 0
   322                           
   323                           ; 30 bytes @ 0xC8
   324   0001C8                     	ds	30
   325   0001E6                     main@j:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0xE6
   329   0001E6                     	ds	2
   330   0001E8                     main@L_calibrated:
   331                           	callstack 0
   332                           
   333                           ; 8 bytes @ 0xE8
   334   0001E8                     	ds	8
   335   0001F0                     main@color_name:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0xF0
   339   0001F0                     	ds	2
   340   0001F2                     main@k:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xF2
   344   0001F2                     	ds	2
   345   0001F4                     main@i:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xF4
   349   0001F4                     	ds	2
   350   0001F6                     main@RGB_recorded:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0xF6
   354   0001F6                     	ds	8
   355                           
   356                           	psect	cstackBANK0
   357   000060                     __pcstackBANK0:
   358                           	callstack 0
   359   000060                     ?_sprintf:
   360                           	callstack 0
   361   000060                     sprintf@s:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x0
   365   000060                     	ds	2
   366   000062                     sprintf@fmt:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x2
   370   000062                     	ds	12
   371   00006E                     sprintf@ap:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xE
   375   00006E                     	ds	2
   376   000070                     sprintf@f:
   377                           	callstack 0
   378                           
   379                           ; 11 bytes @ 0x10
   380   000070                     	ds	11
   381   00007B                     main@readout1:
   382                           	callstack 0
   383                           
   384                           ; 100 bytes @ 0x1B
   385   00007B                     	ds	100
   386   0000DF                     main@color_path:
   387                           	callstack 0
   388                           
   389                           ; 30 bytes @ 0x7F
   390   0000DF                     	ds	30
   391   0000FD                     main@time_return:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x9D
   395   0000FD                     	ds	2
   396                           
   397                           	psect	cstackCOMRAM
   398   000001                     __pcstackCOMRAM:
   399                           	callstack 0
   400   000001                     ??_I2C_2_Master_Idle:
   401   000001                     ?_color_processor_easy:
   402                           	callstack 0
   403   000001                     ?_color_processor_hard:
   404                           	callstack 0
   405   000001                     ?___wmul:
   406                           	callstack 0
   407   000001                     ?___aodiv:
   408                           	callstack 0
   409   000001                     ?___aomod:
   410                           	callstack 0
   411   000001                     sendCharSerial4@charToSend:
   412                           	callstack 0
   413   000001                     color_processor_easy@rgb:
   414                           	callstack 0
   415   000001                     color_processor_hard@rgb:
   416                           	callstack 0
   417   000001                     initDCmotorsPWM@PWMperiod:
   418                           	callstack 0
   419   000001                     ___wmul@multiplier:
   420                           	callstack 0
   421   000001                     fputc@c:
   422                           	callstack 0
   423   000001                     ___aodiv@dividend:
   424                           	callstack 0
   425   000001                     ___aomod@dividend:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0x0
   429   000001                     	ds	1
   430   000002                     ??_I2C_2_Master_Read:
   431   000002                     I2C_2_Master_Write@data_byte:
   432                           	callstack 0
   433   000002                     sendStringSerial4@string:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x1
   437   000002                     	ds	1
   438   000003                     color_writetoaddr@value:
   439                           	callstack 0
   440   000003                     I2C_2_Master_Read@ack:
   441                           	callstack 0
   442   000003                     color_processor_easy@color:
   443                           	callstack 0
   444   000003                     color_processor_hard@calibrated:
   445                           	callstack 0
   446   000003                     ___wmul@multiplicand:
   447                           	callstack 0
   448   000003                     fputc@fp:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452   000003                     	ds	1
   453   000004                     color_writetoaddr@address:
   454                           	callstack 0
   455   000004                     I2C_2_Master_Read@tmp:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x3
   459   000004                     	ds	1
   460   000005                     ??_fputc:
   461   000005                     ??_color_click_init:
   462   000005                     ??_color_processor_hard:
   463   000005                     ?_color_read_Luminosity:
   464                           	callstack 0
   465   000005                     ?_color_read_Red:
   466                           	callstack 0
   467   000005                     ?_color_read_Green:
   468                           	callstack 0
   469   000005                     ?_color_read_Blue:
   470                           	callstack 0
   471   000005                     color_processor_easy@c:
   472                           	callstack 0
   473   000005                     ___wmul@product:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x4
   477   000005                     	ds	2
   478   000007                     ??_color_read_Luminosity:
   479   000007                     ??_color_read_Red:
   480   000007                     ??_color_read_Green:
   481   000007                     ??_color_read_Blue:
   482   000007                     ?___awdiv:
   483                           	callstack 0
   484   000007                     color_processor_easy@a:
   485                           	callstack 0
   486   000007                     ___awdiv@dividend:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x6
   490   000007                     	ds	2
   491   000009                     color_processor_hard@condition_r:
   492                           	callstack 0
   493   000009                     color_processor_easy@b:
   494                           	callstack 0
   495   000009                     ___awdiv@divisor:
   496                           	callstack 0
   497   000009                     ___aodiv@divisor:
   498                           	callstack 0
   499   000009                     ___aomod@divisor:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x8
   503   000009                     	ds	1
   504   00000A                     color_processor_hard@condition_g:
   505                           	callstack 0
   506   00000A                     color_read_Luminosity@tmp:
   507                           	callstack 0
   508   00000A                     color_read_Red@tmp:
   509                           	callstack 0
   510   00000A                     color_read_Green@tmp:
   511                           	callstack 0
   512   00000A                     color_read_Blue@tmp:
   513                           	callstack 0
   514   00000A                     fputs@s:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x9
   518   00000A                     	ds	1
   519   00000B                     color_processor_hard@condition_b:
   520                           	callstack 0
   521   00000B                     ___awdiv@counter:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0xA
   525   00000B                     	ds	1
   526   00000C                     _color_processor_hard$370:
   527                           	callstack 0
   528   00000C                     ___awdiv@sign:
   529                           	callstack 0
   530   00000C                     color_read@rgb:
   531                           	callstack 0
   532   00000C                     fputs@fp:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xB
   536   00000C                     	ds	1
   537   00000D                     _color_processor_hard$372:
   538                           	callstack 0
   539   00000D                     ___awdiv@quotient:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xC
   543   00000D                     	ds	1
   544   00000E                     ??_color_read:
   545   00000E                     _color_processor_hard$374:
   546                           	callstack 0
   547   00000E                     fputs@c:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0xD
   551   00000E                     	ds	1
   552   00000F                     color_processor_hard@r:
   553                           	callstack 0
   554   00000F                     setMotorPWM@m:
   555                           	callstack 0
   556   00000F                     fputs@i:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0xE
   560   00000F                     	ds	2
   561   000011                     ??_setMotorPWM:
   562   000011                     ___aodiv@counter:
   563                           	callstack 0
   564   000011                     ___aomod@counter:
   565                           	callstack 0
   566   000011                     color_processor_hard@g:
   567                           	callstack 0
   568   000011                     pad@fp:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x10
   572   000011                     	ds	1
   573   000012                     ___aodiv@sign:
   574                           	callstack 0
   575   000012                     ___aomod@sign:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x11
   579   000012                     	ds	1
   580   000013                     ?_abs:
   581                           	callstack 0
   582   000013                     color_processor_hard@b:
   583                           	callstack 0
   584   000013                     pad@buf:
   585                           	callstack 0
   586   000013                     abs@a:
   587                           	callstack 0
   588   000013                     ___aodiv@quotient:
   589                           	callstack 0
   590                           
   591                           ; 8 bytes @ 0x12
   592   000013                     	ds	2
   593   000015                     ??_abs:
   594   000015                     color_processor_hard@cr:
   595                           	callstack 0
   596   000015                     pad@p:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x14
   600   000015                     	ds	2
   601   000017                     ??_pad:
   602   000017                     color_processor_hard@cg:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x16
   606   000017                     	ds	1
   607   000018                     setMotorPWM@PWMduty:
   608                           	callstack 0
   609   000018                     pad@i:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x17
   613   000018                     	ds	1
   614   000019                     color_processor_hard@cb:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x18
   618   000019                     	ds	1
   619   00001A                     stop@mL:
   620                           	callstack 0
   621   00001A                     forward@mL:
   622                           	callstack 0
   623   00001A                     reverse@mL:
   624                           	callstack 0
   625   00001A                     right_90@mL:
   626                           	callstack 0
   627   00001A                     left_90@mL:
   628                           	callstack 0
   629   00001A                     spin_180@mL:
   630                           	callstack 0
   631   00001A                     right_135@mL:
   632                           	callstack 0
   633   00001A                     left_135@mL:
   634                           	callstack 0
   635   00001A                     pad@w:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x19
   639   00001A                     	ds	1
   640   00001B                     color_processor_hard@i:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x1A
   644   00001B                     	ds	1
   645   00001C                     stop@mR:
   646                           	callstack 0
   647   00001C                     forward@mR:
   648                           	callstack 0
   649   00001C                     reverse@mR:
   650                           	callstack 0
   651   00001C                     right_90@mR:
   652                           	callstack 0
   653   00001C                     left_90@mR:
   654                           	callstack 0
   655   00001C                     spin_180@mR:
   656                           	callstack 0
   657   00001C                     right_135@mR:
   658                           	callstack 0
   659   00001C                     left_135@mR:
   660                           	callstack 0
   661   00001C                     dtoa@fp:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x1B
   665   00001C                     	ds	2
   666   00001E                     ??_stop:
   667   00001E                     ??_spin_180:
   668   00001E                     ??_reverse:
   669   00001E                     ??_right_90:
   670   00001E                     ??_left_90:
   671   00001E                     ??_right_135:
   672   00001E                     ??_left_135:
   673   00001E                     forward@i:
   674                           	callstack 0
   675   00001E                     dtoa@d:
   676                           	callstack 0
   677                           
   678                           ; 8 bytes @ 0x1D
   679   00001E                     	ds	1
   680   00001F                     stop@i:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x1E
   684   00001F                     	ds	1
   685   000020                     reverse@i:
   686                           	callstack 0
   687   000020                     right_90@i:
   688                           	callstack 0
   689   000020                     left_90@i:
   690                           	callstack 0
   691   000020                     spin_180@i:
   692                           	callstack 0
   693   000020                     right_135@i:
   694                           	callstack 0
   695   000020                     left_135@i:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x1F
   699   000020                     	ds	2
   700   000022                     motor_action@color:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x21
   704   000022                     	ds	2
   705   000024                     motor_action@l:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x23
   709   000024                     	ds	2
   710   000026                     ??_dtoa:
   711   000026                     motor_action@r:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x25
   715   000026                     	ds	2
   716   000028                     ??_motor_action:
   717                           
   718                           ; 1 bytes @ 0x27
   719   000028                     	ds	6
   720   00002E                     _dtoa$2396:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2D
   724   00002E                     	ds	2
   725   000030                     dtoa@p:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x2F
   729   000030                     	ds	2
   730   000032                     dtoa@w:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x31
   734   000032                     	ds	2
   735   000034                     dtoa@n:
   736                           	callstack 0
   737                           
   738                           ; 8 bytes @ 0x33
   739   000034                     	ds	8
   740   00003C                     dtoa@i:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x3B
   744   00003C                     	ds	2
   745   00003E                     dtoa@s:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x3D
   749   00003E                     	ds	1
   750   00003F                     vfpfcnvrt@fp:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x3E
   754   00003F                     	ds	2
   755   000041                     vfpfcnvrt@fmt:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x40
   759   000041                     	ds	2
   760   000043                     vfpfcnvrt@ap:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x42
   764   000043                     	ds	2
   765   000045                     ??_vfpfcnvrt:
   766                           
   767                           ; 1 bytes @ 0x44
   768   000045                     	ds	2
   769   000047                     vfpfcnvrt@convarg:
   770                           	callstack 0
   771                           
   772                           ; 8 bytes @ 0x46
   773   000047                     	ds	8
   774   00004F                     vfpfcnvrt@cp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x4E
   778   00004F                     	ds	2
   779   000051                     ?_vfprintf:
   780                           	callstack 0
   781   000051                     vfprintf@fp:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x50
   785   000051                     	ds	2
   786   000053                     vfprintf@fmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x52
   790   000053                     	ds	2
   791   000055                     vfprintf@ap:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x54
   795   000055                     	ds	2
   796   000057                     vfprintf@cfmt:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x56
   800   000057                     	ds	2
   801   000059                     ??_main:
   802                           
   803                           ; 1 bytes @ 0x58
   804   000059                     	ds	2
   805   00005B                     main@color_flag:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x5A
   809   00005B                     	ds	2
   810                           
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 20 in file "../main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  readout3      100  100[BANK1 ] unsigned char [100]
   821 ;;  readout2      100    0[BANK1 ] unsigned char [100]
   822 ;;  k               2  242[BANK1 ] int 
   823 ;;  i               2  244[BANK1 ] int 
   824 ;;  readout1      100   27[BANK0 ] unsigned char [100]
   825 ;;  color_calibr   64    0[BANK2 ] int [32]
   826 ;;  time_path      30  200[BANK1 ] unsigned int [15]
   827 ;;  color_path     30  127[BANK0 ] unsigned int [15]
   828 ;;  motorR          9   81[BANK2 ] struct DC_motor
   829 ;;  motorL          9   72[BANK2 ] struct DC_motor
   830 ;;  RGB_calibrat    8   64[BANK2 ] struct RGB_val
   831 ;;  RGB_recorded    8  246[BANK1 ] struct RGB_val
   832 ;;  L_calibrated    8  232[BANK1 ] struct RGB_val
   833 ;;  color_name      2  240[BANK1 ] unsigned int 
   834 ;;  j               2  230[BANK1 ] int 
   835 ;;  time_return     2  157[BANK0 ] unsigned int 
   836 ;;  color_flag      2   90[COMRAM] unsigned int 
   837 ;;  PWMcycle        1    0        unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   848 ;;      Locals:         2     132     254      90       0       0       0       0       0       0       0       0       
      +0       0       0
   849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   850 ;;      Totals:         4     132     254      90       0       0       0       0       0       0       0       0       
      +0       0       0
   851 ;;Total ram usage:      480 bytes
   852 ;; Hardware stack levels required when called: 9
   853 ;; This function calls:
   854 ;;		_I2C_2_Master_Init
   855 ;;		_Interrupts_init
   856 ;;		_Timer0_init
   857 ;;		_color_click_init
   858 ;;		_color_processor_easy
   859 ;;		_color_processor_hard
   860 ;;		_color_read
   861 ;;		_forward
   862 ;;		_initDCmotorsPWM
   863 ;;		_initUSART4
   864 ;;		_motor_action
   865 ;;		_sendStringSerial4
   866 ;;		_setMotorPWM
   867 ;;		_spin_180
   868 ;;		_sprintf
   869 ;;		_stop
   870 ;; This function is called by:
   871 ;;		Startup code after reset
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text0
   876   000E14                     __ptext0:
   877                           	callstack 0
   878   000E14                     _main:
   879                           	callstack 22
   880   000E14                     
   881                           ;../main.c: 22:     color_click_init();
   882   000E14  ECF2  F013         	call	_color_click_init	;wreg free
   883   000E18                     
   884                           ;../main.c: 23:     initDCmotorsPWM(20);
   885   000E18  0E00               	movlw	0
   886   000E1A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   887   000E1C  0E14               	movlw	20
   888   000E1E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   889   000E20  EC33  F015         	call	_initDCmotorsPWM	;wreg free
   890   000E24                     
   891                           ;../main.c: 24:     Interrupts_init();
   892   000E24  EC36  F016         	call	_Interrupts_init	;wreg free
   893   000E28                     
   894                           ;../main.c: 25:     Timer0_init();
   895   000E28  EC0B  F016         	call	_Timer0_init	;wreg free
   896   000E2C                     
   897                           ;../main.c: 26:     I2C_2_Master_Init();
   898   000E2C  ECAD  F015         	call	_I2C_2_Master_Init	;wreg free
   899   000E30                     
   900                           ;../main.c: 27:     initUSART4();
   901   000E30  EC1B  F016         	call	_initUSART4	;wreg free
   902   000E34                     
   903                           ;../main.c: 32:     motorL.power = 0;
   904   000E34  0E00               	movlw	0
   905   000E36  0102               	movlb	2	; () banked
   906   000E38  6FC2               	movwf	main@motorL& (0+255),b
   907   000E3A                     
   908                           ; BSR set to: 2
   909                           ;../main.c: 33:     motorL.direction = 0;
   910   000E3A  0E00               	movlw	0
   911   000E3C  6FC3               	movwf	(main@motorL+1)& (0+255),b
   912   000E3E                     
   913                           ; BSR set to: 2
   914                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   915   000E3E  0EA3               	movlw	163
   916   000E40  6FC4               	movwf	(main@motorL+2)& (0+255),b
   917   000E42  0E0F               	movlw	15
   918   000E44  6FC5               	movwf	(main@motorL+3)& (0+255),b
   919   000E46                     
   920                           ; BSR set to: 2
   921                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
   922   000E46  0E7D               	movlw	125
   923   000E48  6FC6               	movwf	(main@motorL+4)& (0+255),b
   924   000E4A  0E0F               	movlw	15
   925   000E4C  6FC7               	movwf	(main@motorL+5)& (0+255),b
   926   000E4E                     
   927                           ; BSR set to: 2
   928                           ;../main.c: 36:     motorL.dir_pin = 4;
   929   000E4E  0E04               	movlw	4
   930   000E50  6FC8               	movwf	(main@motorL+6)& (0+255),b
   931   000E52                     
   932                           ; BSR set to: 2
   933                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
   934   000E52  0E00               	movlw	0
   935   000E54  6FCA               	movwf	(main@motorL+8)& (0+255),b
   936   000E56  0EC8               	movlw	200
   937   000E58  6FC9               	movwf	(main@motorL+7)& (0+255),b
   938   000E5A                     
   939                           ; BSR set to: 2
   940                           ;../main.c: 38:     motorR.power = 0;
   941   000E5A  0E00               	movlw	0
   942   000E5C  6FCB               	movwf	main@motorR& (0+255),b
   943   000E5E                     
   944                           ; BSR set to: 2
   945                           ;../main.c: 39:     motorR.direction = 0;
   946   000E5E  0E00               	movlw	0
   947   000E60  6FCC               	movwf	(main@motorR+1)& (0+255),b
   948                           
   949                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   950   000E62  0EA0               	movlw	160
   951   000E64  6FCD               	movwf	(main@motorR+2)& (0+255),b
   952   000E66  0E0F               	movlw	15
   953   000E68  6FCE               	movwf	(main@motorR+3)& (0+255),b
   954                           
   955                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
   956   000E6A  0E7F               	movlw	127
   957   000E6C  6FCF               	movwf	(main@motorR+4)& (0+255),b
   958   000E6E  0E0F               	movlw	15
   959   000E70  6FD0               	movwf	(main@motorR+5)& (0+255),b
   960   000E72                     
   961                           ; BSR set to: 2
   962                           ;../main.c: 42:     motorR.dir_pin = 6;
   963   000E72  0E06               	movlw	6
   964   000E74  6FD1               	movwf	(main@motorR+6)& (0+255),b
   965   000E76                     
   966                           ; BSR set to: 2
   967                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
   968   000E76  0E00               	movlw	0
   969   000E78  6FD3               	movwf	(main@motorR+8)& (0+255),b
   970   000E7A  0EC8               	movlw	200
   971   000E7C  6FD2               	movwf	(main@motorR+7)& (0+255),b
   972   000E7E                     
   973                           ; BSR set to: 2
   974                           ;../main.c: 44:     setMotorPWM(&motorL);
   975   000E7E  0EC2               	movlw	low main@motorL
   976   000E80  6E0F               	movwf	setMotorPWM@m^0,c
   977   000E82  0E02               	movlw	high main@motorL
   978   000E84  6E10               	movwf	(setMotorPWM@m+1)^0,c
   979   000E86  EC24  F00C         	call	_setMotorPWM	;wreg free
   980   000E8A                     
   981                           ;../main.c: 45:     setMotorPWM(&motorR);
   982   000E8A  0ECB               	movlw	low main@motorR
   983   000E8C  6E0F               	movwf	setMotorPWM@m^0,c
   984   000E8E  0E02               	movlw	high main@motorR
   985   000E90  6E10               	movwf	(setMotorPWM@m+1)^0,c
   986   000E92  EC24  F00C         	call	_setMotorPWM	;wreg free
   987   000E96                     l2875:
   988                           
   989                           ;../main.c: 63:         color_read(&L_calibrated);
   990   000E96  0EE8               	movlw	low main@L_calibrated
   991   000E98  6E0C               	movwf	color_read@rgb^0,c
   992   000E9A  0E01               	movlw	high main@L_calibrated
   993   000E9C  6E0D               	movwf	(color_read@rgb+1)^0,c
   994   000E9E  ECEE  F010         	call	_color_read	;wreg free
   995   000EA2                     
   996                           ;../main.c: 64:         char readout1[100];;../main.c: 65:         sprintf(readout1,"%d 
      +                          %d %d %d \r\n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrated.B);
   997   000EA2  0E7B               	movlw	low main@readout1
   998   000EA4  0100               	movlb	0	; () banked
   999   000EA6  6F60               	movwf	sprintf@s& (0+255),b
  1000   000EA8  0E00               	movlw	high main@readout1
  1001   000EAA  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1002   000EAC  0E04               	movlw	low (STR_3+3)
  1003   000EAE  6F62               	movwf	sprintf@fmt& (0+255),b
  1004   000EB0  0E0E               	movlw	high (STR_3+3)
  1005   000EB2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1006   000EB4  C2BA  F064         	movff	main@RGB_calibrated,?_sprintf+4
  1007   000EB8  C2BB  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
  1008   000EBC  C2BC  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
  1009   000EC0  C2BD  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
  1010   000EC4  C2BE  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
  1011   000EC8  C2BF  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
  1012   000ECC  C2C0  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
  1013   000ED0  C2C1  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
  1014   000ED4  EC1F  F014         	call	_sprintf	;wreg free
  1015   000ED8                     
  1016                           ;../main.c: 66:         sendStringSerial4(readout1);
  1017   000ED8  0E7B               	movlw	low main@readout1
  1018   000EDA  6E02               	movwf	sendStringSerial4@string^0,c
  1019   000EDC  0E00               	movlw	high main@readout1
  1020   000EDE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1021   000EE0  EC95  F015         	call	_sendStringSerial4	;wreg free
  1022   000EE4                     
  1023                           ;../main.c: 67:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1024   000EE4  0E29               	movlw	41
  1025   000EE6  6E5A               	movwf	(??_main+1)^0,c
  1026   000EE8  0E96               	movlw	150
  1027   000EEA  6E59               	movwf	??_main^0,c
  1028   000EEC  0E7F               	movlw	127
  1029   000EEE                     u1847:
  1030   000EEE  2EE8               	decfsz	wreg,f,c
  1031   000EF0  D7FE               	bra	u1847
  1032   000EF2  2E59               	decfsz	??_main^0,f,c
  1033   000EF4  D7FC               	bra	u1847
  1034   000EF6  2E5A               	decfsz	(??_main+1)^0,f,c
  1035   000EF8  D7FA               	bra	u1847
  1036   000EFA  F000               	nop	
  1037   000EFC                     
  1038                           ;../main.c: 68:         color_flag = 1;
  1039   000EFC  0E00               	movlw	0
  1040   000EFE  6E5C               	movwf	(main@color_flag+1)^0,c
  1041   000F00  0E01               	movlw	1
  1042   000F02  6E5B               	movwf	main@color_flag^0,c
  1043   000F04                     l192:
  1044   000F04  B68E               	btfsc	142,3,c	;volatile
  1045   000F06  EF87  F007         	goto	u1721
  1046   000F0A  EF89  F007         	goto	u1720
  1047   000F0E                     u1721:
  1048   000F0E  EF82  F007         	goto	l192
  1049   000F12                     u1720:
  1050   000F12                     
  1051                           ;../main.c: 72:         for (int i=0;i<8;i++){
  1052   000F12  0E00               	movlw	0
  1053   000F14  0101               	movlb	1	; () banked
  1054   000F16  6FF5               	movwf	(main@i+1)& (0+255),b
  1055   000F18  0E00               	movlw	0
  1056   000F1A  6FF4               	movwf	main@i& (0+255),b
  1057   000F1C                     l2891:
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;../main.c: 73:             color_read(&RGB_calibrated);
  1061   000F1C  0EBA               	movlw	low main@RGB_calibrated
  1062   000F1E  6E0C               	movwf	color_read@rgb^0,c
  1063   000F20  0E02               	movlw	high main@RGB_calibrated
  1064   000F22  6E0D               	movwf	(color_read@rgb+1)^0,c
  1065   000F24  ECEE  F010         	call	_color_read	;wreg free
  1066   000F28                     
  1067                           ;../main.c: 74:             color_calibrated[4*i] = RGB_calibrated.L;
  1068   000F28  C1F4  F059         	movff	main@i,??_main
  1069   000F2C  C1F5  F05A         	movff	main@i+1,??_main+1
  1070   000F30  90D8               	bcf	status,0,c
  1071   000F32  3659               	rlcf	??_main^0,f,c
  1072   000F34  365A               	rlcf	(??_main+1)^0,f,c
  1073   000F36  90D8               	bcf	status,0,c
  1074   000F38  3659               	rlcf	??_main^0,f,c
  1075   000F3A  365A               	rlcf	(??_main+1)^0,f,c
  1076   000F3C  90D8               	bcf	status,0,c
  1077   000F3E  3659               	rlcf	??_main^0,f,c
  1078   000F40  365A               	rlcf	(??_main+1)^0,f,c
  1079   000F42  0E7A               	movlw	low main@color_calibrated
  1080   000F44  2459               	addwf	??_main^0,w,c
  1081   000F46  6ED9               	movwf	fsr2l,c
  1082   000F48  0E02               	movlw	high main@color_calibrated
  1083   000F4A  205A               	addwfc	(??_main+1)^0,w,c
  1084   000F4C  6EDA               	movwf	fsr2h,c
  1085   000F4E  C2BA  FFDE         	movff	main@RGB_calibrated,postinc2
  1086   000F52  C2BB  FFDD         	movff	main@RGB_calibrated+1,postdec2
  1087   000F56                     
  1088                           ;../main.c: 75:             color_calibrated[4*i+1] = RGB_calibrated.R;
  1089   000F56  C1F4  F059         	movff	main@i,??_main
  1090   000F5A  C1F5  F05A         	movff	main@i+1,??_main+1
  1091   000F5E  90D8               	bcf	status,0,c
  1092   000F60  3659               	rlcf	??_main^0,f,c
  1093   000F62  365A               	rlcf	(??_main+1)^0,f,c
  1094   000F64  90D8               	bcf	status,0,c
  1095   000F66  3659               	rlcf	??_main^0,f,c
  1096   000F68  365A               	rlcf	(??_main+1)^0,f,c
  1097   000F6A  90D8               	bcf	status,0,c
  1098   000F6C  3659               	rlcf	??_main^0,f,c
  1099   000F6E  365A               	rlcf	(??_main+1)^0,f,c
  1100   000F70  0E02               	movlw	2
  1101   000F72  2659               	addwf	??_main^0,f,c
  1102   000F74  0E00               	movlw	0
  1103   000F76  225A               	addwfc	(??_main+1)^0,f,c
  1104   000F78  0E7A               	movlw	low main@color_calibrated
  1105   000F7A  2459               	addwf	??_main^0,w,c
  1106   000F7C  6ED9               	movwf	fsr2l,c
  1107   000F7E  0E02               	movlw	high main@color_calibrated
  1108   000F80  205A               	addwfc	(??_main+1)^0,w,c
  1109   000F82  6EDA               	movwf	fsr2h,c
  1110   000F84  C2BC  FFDE         	movff	main@RGB_calibrated+2,postinc2
  1111   000F88  C2BD  FFDD         	movff	main@RGB_calibrated+3,postdec2
  1112   000F8C                     
  1113                           ;../main.c: 76:             color_calibrated[4*i+2] = RGB_calibrated.G;
  1114   000F8C  C1F4  F059         	movff	main@i,??_main
  1115   000F90  C1F5  F05A         	movff	main@i+1,??_main+1
  1116   000F94  90D8               	bcf	status,0,c
  1117   000F96  3659               	rlcf	??_main^0,f,c
  1118   000F98  365A               	rlcf	(??_main+1)^0,f,c
  1119   000F9A  90D8               	bcf	status,0,c
  1120   000F9C  3659               	rlcf	??_main^0,f,c
  1121   000F9E  365A               	rlcf	(??_main+1)^0,f,c
  1122   000FA0  90D8               	bcf	status,0,c
  1123   000FA2  3659               	rlcf	??_main^0,f,c
  1124   000FA4  365A               	rlcf	(??_main+1)^0,f,c
  1125   000FA6  0E04               	movlw	4
  1126   000FA8  2659               	addwf	??_main^0,f,c
  1127   000FAA  0E00               	movlw	0
  1128   000FAC  225A               	addwfc	(??_main+1)^0,f,c
  1129   000FAE  0E7A               	movlw	low main@color_calibrated
  1130   000FB0  2459               	addwf	??_main^0,w,c
  1131   000FB2  6ED9               	movwf	fsr2l,c
  1132   000FB4  0E02               	movlw	high main@color_calibrated
  1133   000FB6  205A               	addwfc	(??_main+1)^0,w,c
  1134   000FB8  6EDA               	movwf	fsr2h,c
  1135   000FBA  C2BE  FFDE         	movff	main@RGB_calibrated+4,postinc2
  1136   000FBE  C2BF  FFDD         	movff	main@RGB_calibrated+5,postdec2
  1137   000FC2                     
  1138                           ;../main.c: 77:             color_calibrated[4*i+3] = RGB_calibrated.B;
  1139   000FC2  C1F4  F059         	movff	main@i,??_main
  1140   000FC6  C1F5  F05A         	movff	main@i+1,??_main+1
  1141   000FCA  90D8               	bcf	status,0,c
  1142   000FCC  3659               	rlcf	??_main^0,f,c
  1143   000FCE  365A               	rlcf	(??_main+1)^0,f,c
  1144   000FD0  90D8               	bcf	status,0,c
  1145   000FD2  3659               	rlcf	??_main^0,f,c
  1146   000FD4  365A               	rlcf	(??_main+1)^0,f,c
  1147   000FD6  90D8               	bcf	status,0,c
  1148   000FD8  3659               	rlcf	??_main^0,f,c
  1149   000FDA  365A               	rlcf	(??_main+1)^0,f,c
  1150   000FDC  0E06               	movlw	6
  1151   000FDE  2659               	addwf	??_main^0,f,c
  1152   000FE0  0E00               	movlw	0
  1153   000FE2  225A               	addwfc	(??_main+1)^0,f,c
  1154   000FE4  0E7A               	movlw	low main@color_calibrated
  1155   000FE6  2459               	addwf	??_main^0,w,c
  1156   000FE8  6ED9               	movwf	fsr2l,c
  1157   000FEA  0E02               	movlw	high main@color_calibrated
  1158   000FEC  205A               	addwfc	(??_main+1)^0,w,c
  1159   000FEE  6EDA               	movwf	fsr2h,c
  1160   000FF0  C2C0  FFDE         	movff	main@RGB_calibrated+6,postinc2
  1161   000FF4  C2C1  FFDD         	movff	main@RGB_calibrated+7,postdec2
  1162   000FF8                     
  1163                           ;../main.c: 78:             LATHbits.LATH3 = 1;
  1164   000FF8  8680               	bsf	128,3,c	;volatile
  1165   000FFA                     
  1166                           ;../main.c: 80:             char readout2[100];;../main.c: 81:             sprintf(reado
      +                          ut2,"%d %d %d %d \r\n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrate
      +                          d.B);
  1167   000FFA  0E00               	movlw	low main@readout2
  1168   000FFC  0100               	movlb	0	; () banked
  1169   000FFE  6F60               	movwf	sprintf@s& (0+255),b
  1170   001000  0E01               	movlw	high main@readout2
  1171   001002  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1172   001004  0E04               	movlw	low (STR_3+3)
  1173   001006  6F62               	movwf	sprintf@fmt& (0+255),b
  1174   001008  0E0E               	movlw	high (STR_3+3)
  1175   00100A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1176   00100C  C2BA  F064         	movff	main@RGB_calibrated,?_sprintf+4
  1177   001010  C2BB  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
  1178   001014  C2BC  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
  1179   001018  C2BD  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
  1180   00101C  C2BE  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
  1181   001020  C2BF  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
  1182   001024  C2C0  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
  1183   001028  C2C1  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
  1184   00102C  EC1F  F014         	call	_sprintf	;wreg free
  1185   001030                     
  1186                           ;../main.c: 82:             sendStringSerial4(readout2);
  1187   001030  0E00               	movlw	low main@readout2
  1188   001032  6E02               	movwf	sendStringSerial4@string^0,c
  1189   001034  0E01               	movlw	high main@readout2
  1190   001036  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1191   001038  EC95  F015         	call	_sendStringSerial4	;wreg free
  1192   00103C                     
  1193                           ;../main.c: 83:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1194   00103C  0EA3               	movlw	163
  1195   00103E  6E5A               	movwf	(??_main+1)^0,c
  1196   001040  0E57               	movlw	87
  1197   001042  6E59               	movwf	??_main^0,c
  1198   001044  0E02               	movlw	2
  1199   001046                     u1857:
  1200   001046  2EE8               	decfsz	wreg,f,c
  1201   001048  D7FE               	bra	u1857
  1202   00104A  2E59               	decfsz	??_main^0,f,c
  1203   00104C  D7FC               	bra	u1857
  1204   00104E  2E5A               	decfsz	(??_main+1)^0,f,c
  1205   001050  D7FA               	bra	u1857
  1206   001052  D000               	nop2	
  1207   001054                     
  1208                           ;../main.c: 84:             LATHbits.LATH3 = 0;
  1209   001054  9680               	bcf	128,3,c	;volatile
  1210   001056                     
  1211                           ;../main.c: 85:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1212   001056  0EA3               	movlw	163
  1213   001058  6E5A               	movwf	(??_main+1)^0,c
  1214   00105A  0E57               	movlw	87
  1215   00105C  6E59               	movwf	??_main^0,c
  1216   00105E  0E02               	movlw	2
  1217   001060                     u1867:
  1218   001060  2EE8               	decfsz	wreg,f,c
  1219   001062  D7FE               	bra	u1867
  1220   001064  2E59               	decfsz	??_main^0,f,c
  1221   001066  D7FC               	bra	u1867
  1222   001068  2E5A               	decfsz	(??_main+1)^0,f,c
  1223   00106A  D7FA               	bra	u1867
  1224   00106C  D000               	nop2	
  1225   00106E                     
  1226                           ;../main.c: 86:         }
  1227   00106E  0101               	movlb	1	; () banked
  1228   001070  4BF4               	infsnz	main@i& (0+255),f,b
  1229   001072  2BF5               	incf	(main@i+1)& (0+255),f,b
  1230   001074                     
  1231                           ; BSR set to: 1
  1232   001074  BFF5               	btfsc	(main@i+1)& (0+255),7,b
  1233   001076  EF46  F008         	goto	u1731
  1234   00107A  51F5               	movf	(main@i+1)& (0+255),w,b
  1235   00107C  E109               	bnz	u1730
  1236   00107E  0E08               	movlw	8
  1237   001080  5DF4               	subwf	main@i& (0+255),w,b
  1238   001082  A0D8               	btfss	status,0,c
  1239   001084  EF46  F008         	goto	u1731
  1240   001088  EF48  F008         	goto	u1730
  1241   00108C                     u1731:
  1242   00108C  EF8E  F007         	goto	l2891
  1243   001090                     u1730:
  1244   001090                     l2917:
  1245   001090  0E01               	movlw	1
  1246   001092  A68E               	btfss	142,3,c	;volatile
  1247   001094  0E00               	movlw	0
  1248   001096  A48E               	btfss	142,2,c	;volatile
  1249   001098  0E00               	movlw	0
  1250   00109A  B0E8               	btfsc	wreg,0,c
  1251   00109C  EF52  F008         	goto	u1741
  1252   0010A0  EF56  F008         	goto	u1740
  1253   0010A4                     u1741:
  1254   0010A4  6A59               	clrf	??_main^0,c
  1255   0010A6  2A59               	incf	??_main^0,f,c
  1256   0010A8  EF57  F008         	goto	u1748
  1257   0010AC                     u1740:
  1258   0010AC  6A59               	clrf	??_main^0,c
  1259   0010AE                     u1748:
  1260   0010AE  5059               	movf	??_main^0,w,c
  1261   0010B0  A4D8               	btfss	status,2,c
  1262   0010B2  EF5D  F008         	goto	u1751
  1263   0010B6  EF5F  F008         	goto	u1750
  1264   0010BA                     u1751:
  1265   0010BA  EF48  F008         	goto	l2917
  1266   0010BE                     u1750:
  1267   0010BE                     
  1268                           ;../main.c: 90:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
  1269   0010BE  B48E               	btfsc	142,2,c	;volatile
  1270   0010C0  EF64  F008         	goto	u1761
  1271   0010C4  EF66  F008         	goto	u1760
  1272   0010C8                     u1761:
  1273   0010C8  EF69  F008         	goto	l200
  1274   0010CC                     u1760:
  1275   0010CC  8E7C               	bsf	124,7,c	;volatile
  1276   0010CE  EF21  F009         	goto	l2957
  1277   0010D2                     l200:
  1278   0010D2  8680               	bsf	128,3,c	;volatile
  1279   0010D4  EF21  F009         	goto	l2957
  1280   0010D8                     l2921:
  1281                           
  1282                           ; BSR set to: 1
  1283                           ;../main.c: 95:             time = 0;
  1284   0010D8  0E00               	movlw	0
  1285   0010DA  0102               	movlb	2	; () banked
  1286   0010DC  6F55               	movwf	(_time+1)& (0+255),b
  1287   0010DE  0E00               	movlw	0
  1288   0010E0  6F54               	movwf	_time& (0+255),b
  1289   0010E2                     
  1290                           ; BSR set to: 2
  1291                           ;../main.c: 96:             forward(&motorL,&motorR);
  1292   0010E2  0EC2               	movlw	low main@motorL
  1293   0010E4  6E1A               	movwf	forward@mL^0,c
  1294   0010E6  0E02               	movlw	high main@motorL
  1295   0010E8  6E1B               	movwf	(forward@mL+1)^0,c
  1296   0010EA  0ECB               	movlw	low main@motorR
  1297   0010EC  6E1C               	movwf	forward@mR^0,c
  1298   0010EE  0E02               	movlw	high main@motorR
  1299   0010F0  6E1D               	movwf	(forward@mR+1)^0,c
  1300   0010F2  EC70  F013         	call	_forward	;wreg free
  1301   0010F6                     
  1302                           ;../main.c: 97:             color_read(&RGB_recorded);
  1303   0010F6  0EF6               	movlw	low main@RGB_recorded
  1304   0010F8  6E0C               	movwf	color_read@rgb^0,c
  1305   0010FA  0E01               	movlw	high main@RGB_recorded
  1306   0010FC  6E0D               	movwf	(color_read@rgb+1)^0,c
  1307   0010FE  ECEE  F010         	call	_color_read	;wreg free
  1308   001102                     
  1309                           ;../main.c: 98:             if (color_flag){
  1310   001102  505B               	movf	main@color_flag^0,w,c
  1311   001104  105C               	iorwf	(main@color_flag+1)^0,w,c
  1312   001106  B4D8               	btfsc	status,2,c
  1313   001108  EF88  F008         	goto	u1771
  1314   00110C  EF8A  F008         	goto	u1770
  1315   001110                     u1771:
  1316   001110  EF15  F009         	goto	l2955
  1317   001114                     u1770:
  1318   001114                     
  1319                           ;../main.c: 99:                 stop(&motorL,&motorR);
  1320   001114  0EC2               	movlw	low main@motorL
  1321   001116  6E1A               	movwf	stop@mL^0,c
  1322   001118  0E02               	movlw	high main@motorL
  1323   00111A  6E1B               	movwf	(stop@mL+1)^0,c
  1324   00111C  0ECB               	movlw	low main@motorR
  1325   00111E  6E1C               	movwf	stop@mR^0,c
  1326   001120  0E02               	movlw	high main@motorR
  1327   001122  6E1D               	movwf	(stop@mR+1)^0,c
  1328   001124  EC29  F013         	call	_stop	;wreg free
  1329   001128                     
  1330                           ;../main.c: 100:                 color_read(&RGB_recorded);
  1331   001128  0EF6               	movlw	low main@RGB_recorded
  1332   00112A  6E0C               	movwf	color_read@rgb^0,c
  1333   00112C  0E01               	movlw	high main@RGB_recorded
  1334   00112E  6E0D               	movwf	(color_read@rgb+1)^0,c
  1335   001130  ECEE  F010         	call	_color_read	;wreg free
  1336   001134                     
  1337                           ;../main.c: 101:                 if (LATDbits.LATD7){color_name = color_processor_easy(&
      +                          RGB_recorded);}
  1338   001134  AE7C               	btfss	124,7,c	;volatile
  1339   001136  EF9F  F008         	goto	u1781
  1340   00113A  EFA1  F008         	goto	u1780
  1341   00113E                     u1781:
  1342   00113E  EFAD  F008         	goto	l2937
  1343   001142                     u1780:
  1344   001142  0EF6               	movlw	low main@RGB_recorded
  1345   001144  6E01               	movwf	color_processor_easy@rgb^0,c
  1346   001146  0E01               	movlw	high main@RGB_recorded
  1347   001148  6E02               	movwf	(color_processor_easy@rgb+1)^0,c
  1348   00114A  EC8F  F010         	call	_color_processor_easy	;wreg free
  1349   00114E  C001  F1F0         	movff	?_color_processor_easy,main@color_name
  1350   001152  C002  F1F1         	movff	?_color_processor_easy+1,main@color_name+1
  1351   001156  EFBB  F008         	goto	l2939
  1352   00115A                     l2937:
  1353   00115A  0EF6               	movlw	low main@RGB_recorded
  1354   00115C  6E01               	movwf	color_processor_hard@rgb^0,c
  1355   00115E  0E01               	movlw	high main@RGB_recorded
  1356   001160  6E02               	movwf	(color_processor_hard@rgb+1)^0,c
  1357   001162  0E7A               	movlw	low main@color_calibrated
  1358   001164  6E03               	movwf	color_processor_hard@calibrated^0,c
  1359   001166  0E02               	movlw	high main@color_calibrated
  1360   001168  6E04               	movwf	(color_processor_hard@calibrated+1)^0,c
  1361   00116A  ECE9  F00A         	call	_color_processor_hard	;wreg free
  1362   00116E  C001  F1F0         	movff	?_color_processor_hard,main@color_name
  1363   001172  C002  F1F1         	movff	?_color_processor_hard+1,main@color_name+1
  1364   001176                     l2939:
  1365                           
  1366                           ;../main.c: 103:                 color_path[j] = color_name;
  1367   001176  90D8               	bcf	status,0,c
  1368   001178  0101               	movlb	1	; () banked
  1369   00117A  35E6               	rlcf	main@j& (0+255),w,b
  1370   00117C  6ED9               	movwf	fsr2l,c
  1371   00117E  35E7               	rlcf	(main@j+1)& (0+255),w,b
  1372   001180  6EDA               	movwf	fsr2h,c
  1373   001182  0EDF               	movlw	low main@color_path
  1374   001184  26D9               	addwf	fsr2l,f,c
  1375   001186  0E00               	movlw	high main@color_path
  1376   001188  22DA               	addwfc	fsr2h,f,c
  1377   00118A  C1F0  FFDE         	movff	main@color_name,postinc2
  1378   00118E  C1F1  FFDD         	movff	main@color_name+1,postdec2
  1379   001192                     
  1380                           ; BSR set to: 1
  1381                           ;../main.c: 104:                 time_path[j] = time;
  1382   001192  90D8               	bcf	status,0,c
  1383   001194  35E6               	rlcf	main@j& (0+255),w,b
  1384   001196  6ED9               	movwf	fsr2l,c
  1385   001198  35E7               	rlcf	(main@j+1)& (0+255),w,b
  1386   00119A  6EDA               	movwf	fsr2h,c
  1387   00119C  0EC8               	movlw	low main@time_path
  1388   00119E  26D9               	addwf	fsr2l,f,c
  1389   0011A0  0E01               	movlw	high main@time_path
  1390   0011A2  22DA               	addwfc	fsr2h,f,c
  1391   0011A4  C254  FFDE         	movff	_time,postinc2
  1392   0011A8  C255  FFDD         	movff	_time+1,postdec2
  1393   0011AC                     
  1394                           ; BSR set to: 1
  1395                           ;../main.c: 107:                 char readout3[100];;../main.c: 108:                 spr
      +                          intf(readout3,"%d %d %d %d %d \r\n", color_name,RGB_recorded.L,RGB_recorded.R,RGB_record
      +                          ed.G,RGB_recorded.B);
  1396   0011AC  0E64               	movlw	low main@readout3
  1397   0011AE  0100               	movlb	0	; () banked
  1398   0011B0  6F60               	movwf	sprintf@s& (0+255),b
  1399   0011B2  0E01               	movlw	high main@readout3
  1400   0011B4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1401   0011B6  0E01               	movlw	low STR_3
  1402   0011B8  6F62               	movwf	sprintf@fmt& (0+255),b
  1403   0011BA  0E0E               	movlw	high STR_3
  1404   0011BC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1405   0011BE  C1F0  F064         	movff	main@color_name,?_sprintf+4
  1406   0011C2  C1F1  F065         	movff	main@color_name+1,?_sprintf+5
  1407   0011C6  C1F6  F066         	movff	main@RGB_recorded,?_sprintf+6
  1408   0011CA  C1F7  F067         	movff	main@RGB_recorded+1,?_sprintf+7
  1409   0011CE  C1F8  F068         	movff	main@RGB_recorded+2,?_sprintf+8
  1410   0011D2  C1F9  F069         	movff	main@RGB_recorded+3,?_sprintf+9
  1411   0011D6  C1FA  F06A         	movff	main@RGB_recorded+4,?_sprintf+10
  1412   0011DA  C1FB  F06B         	movff	main@RGB_recorded+5,?_sprintf+11
  1413   0011DE  C1FC  F06C         	movff	main@RGB_recorded+6,?_sprintf+12
  1414   0011E2  C1FD  F06D         	movff	main@RGB_recorded+7,?_sprintf+13
  1415   0011E6  EC1F  F014         	call	_sprintf	;wreg free
  1416   0011EA                     
  1417                           ;../main.c: 109:                 sendStringSerial4(readout3);
  1418   0011EA  0E64               	movlw	low main@readout3
  1419   0011EC  6E02               	movwf	sendStringSerial4@string^0,c
  1420   0011EE  0E01               	movlw	high main@readout3
  1421   0011F0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1422   0011F2  EC95  F015         	call	_sendStringSerial4	;wreg free
  1423   0011F6                     
  1424                           ;../main.c: 111:                 motor_action(color_name,&motorL,&motorR);
  1425   0011F6  C1F0  F022         	movff	main@color_name,motor_action@color
  1426   0011FA  C1F1  F023         	movff	main@color_name+1,motor_action@color+1
  1427   0011FE  0EC2               	movlw	low main@motorL
  1428   001200  6E24               	movwf	motor_action@l^0,c
  1429   001202  0E02               	movlw	high main@motorL
  1430   001204  6E25               	movwf	(motor_action@l+1)^0,c
  1431   001206  0ECB               	movlw	low main@motorR
  1432   001208  6E26               	movwf	motor_action@r^0,c
  1433   00120A  0E02               	movlw	high main@motorR
  1434   00120C  6E27               	movwf	(motor_action@r+1)^0,c
  1435   00120E  EC33  F00F         	call	_motor_action	;wreg free
  1436   001212                     
  1437                           ;../main.c: 113:                 j++;
  1438   001212  0101               	movlb	1	; () banked
  1439   001214  4BE6               	infsnz	main@j& (0+255),f,b
  1440   001216  2BE7               	incf	(main@j+1)& (0+255),f,b
  1441   001218                     
  1442                           ; BSR set to: 1
  1443                           ;../main.c: 114:                 time = 0;
  1444   001218  0E00               	movlw	0
  1445   00121A  0102               	movlb	2	; () banked
  1446   00121C  6F55               	movwf	(_time+1)& (0+255),b
  1447   00121E  0E00               	movlw	0
  1448   001220  6F54               	movwf	_time& (0+255),b
  1449   001222                     
  1450                           ; BSR set to: 2
  1451                           ;../main.c: 115:                 color_flag = 0;
  1452   001222  0E00               	movlw	0
  1453   001224  6E5C               	movwf	(main@color_flag+1)^0,c
  1454   001226  0E00               	movlw	0
  1455   001228  6E5B               	movwf	main@color_flag^0,c
  1456   00122A                     l2955:
  1457                           
  1458                           ;../main.c: 117:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1459   00122A  0E11               	movlw	17
  1460   00122C  6E5A               	movwf	(??_main+1)^0,c
  1461   00122E  0E3C               	movlw	60
  1462   001230  6E59               	movwf	??_main^0,c
  1463   001232  0ECB               	movlw	203
  1464   001234                     u1877:
  1465   001234  2EE8               	decfsz	wreg,f,c
  1466   001236  D7FE               	bra	u1877
  1467   001238  2E59               	decfsz	??_main^0,f,c
  1468   00123A  D7FC               	bra	u1877
  1469   00123C  2E5A               	decfsz	(??_main+1)^0,f,c
  1470   00123E  D7FA               	bra	u1877
  1471   001240  F000               	nop	
  1472   001242                     l2957:
  1473                           
  1474                           ;../main.c: 94:         while (color_name != 8){
  1475   001242  0E08               	movlw	8
  1476   001244  0101               	movlb	1	; () banked
  1477   001246  19F0               	xorwf	main@color_name& (0+255),w,b
  1478   001248  11F1               	iorwf	(main@color_name+1)& (0+255),w,b
  1479   00124A  A4D8               	btfss	status,2,c
  1480   00124C  EF2A  F009         	goto	u1791
  1481   001250  EF2C  F009         	goto	u1790
  1482   001254                     u1791:
  1483   001254  EF6C  F008         	goto	l2921
  1484   001258                     u1790:
  1485   001258                     
  1486                           ; BSR set to: 1
  1487                           ;../main.c: 121:         spin_180(&motorL,&motorR);
  1488   001258  0EC2               	movlw	low main@motorL
  1489   00125A  6E1A               	movwf	spin_180@mL^0,c
  1490   00125C  0E02               	movlw	high main@motorL
  1491   00125E  6E1B               	movwf	(spin_180@mL+1)^0,c
  1492   001260  0ECB               	movlw	low main@motorR
  1493   001262  6E1C               	movwf	spin_180@mR^0,c
  1494   001264  0E02               	movlw	high main@motorR
  1495   001266  6E1D               	movwf	(spin_180@mR+1)^0,c
  1496   001268  ECE5  F011         	call	_spin_180	;wreg free
  1497   00126C                     
  1498                           ;../main.c: 122:         for (int k=0;k<15;k++){
  1499   00126C  0E00               	movlw	0
  1500   00126E  0101               	movlb	1	; () banked
  1501   001270  6FF3               	movwf	(main@k+1)& (0+255),b
  1502   001272  0E00               	movlw	0
  1503   001274  6FF2               	movwf	main@k& (0+255),b
  1504   001276                     l2963:
  1505                           
  1506                           ; BSR set to: 1
  1507   001276  BFF3               	btfsc	(main@k+1)& (0+255),7,b
  1508   001278  EF47  F009         	goto	u1801
  1509   00127C  51F3               	movf	(main@k+1)& (0+255),w,b
  1510   00127E  E109               	bnz	u1800
  1511   001280  0E0F               	movlw	15
  1512   001282  5DF2               	subwf	main@k& (0+255),w,b
  1513   001284  A0D8               	btfss	status,0,c
  1514   001286  EF47  F009         	goto	u1801
  1515   00128A  EF49  F009         	goto	u1800
  1516   00128E                     u1801:
  1517   00128E  EF4B  F009         	goto	l208
  1518   001292                     u1800:
  1519   001292  EF4B  F007         	goto	l2875
  1520   001296                     l208:
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;../main.c: 123:             INTCONbits.GIE = 0;
  1524   001296  9EF2               	bcf	242,7,c	;volatile
  1525   001298                     
  1526                           ; BSR set to: 1
  1527                           ;../main.c: 124:             time_return = 0;
  1528   001298  0E00               	movlw	0
  1529   00129A  0100               	movlb	0	; () banked
  1530   00129C  6FFE               	movwf	(main@time_return+1)& (0+255),b
  1531   00129E  0E00               	movlw	0
  1532   0012A0  6FFD               	movwf	main@time_return& (0+255),b
  1533   0012A2                     
  1534                           ; BSR set to: 0
  1535                           ;../main.c: 125:             motor_action(color_path[k],&motorL,&motorR);
  1536   0012A2  90D8               	bcf	status,0,c
  1537   0012A4  0101               	movlb	1	; () banked
  1538   0012A6  35F2               	rlcf	main@k& (0+255),w,b
  1539   0012A8  6ED9               	movwf	fsr2l,c
  1540   0012AA  35F3               	rlcf	(main@k+1)& (0+255),w,b
  1541   0012AC  6EDA               	movwf	fsr2h,c
  1542   0012AE  0EDF               	movlw	low main@color_path
  1543   0012B0  26D9               	addwf	fsr2l,f,c
  1544   0012B2  0E00               	movlw	high main@color_path
  1545   0012B4  22DA               	addwfc	fsr2h,f,c
  1546   0012B6  CFDE F022          	movff	postinc2,motor_action@color
  1547   0012BA  CFDD F023          	movff	postdec2,motor_action@color+1
  1548   0012BE  0EC2               	movlw	low main@motorL
  1549   0012C0  6E24               	movwf	motor_action@l^0,c
  1550   0012C2  0E02               	movlw	high main@motorL
  1551   0012C4  6E25               	movwf	(motor_action@l+1)^0,c
  1552   0012C6  0ECB               	movlw	low main@motorR
  1553   0012C8  6E26               	movwf	motor_action@r^0,c
  1554   0012CA  0E02               	movlw	high main@motorR
  1555   0012CC  6E27               	movwf	(motor_action@r+1)^0,c
  1556   0012CE  EC33  F00F         	call	_motor_action	;wreg free
  1557   0012D2                     
  1558                           ;../main.c: 126:             forward(&motorL,&motorR);
  1559   0012D2  0EC2               	movlw	low main@motorL
  1560   0012D4  6E1A               	movwf	forward@mL^0,c
  1561   0012D6  0E02               	movlw	high main@motorL
  1562   0012D8  6E1B               	movwf	(forward@mL+1)^0,c
  1563   0012DA  0ECB               	movlw	low main@motorR
  1564   0012DC  6E1C               	movwf	forward@mR^0,c
  1565   0012DE  0E02               	movlw	high main@motorR
  1566   0012E0  6E1D               	movwf	(forward@mR+1)^0,c
  1567   0012E2  EC70  F013         	call	_forward	;wreg free
  1568                           
  1569                           ;../main.c: 127:             while (time_return < time_path[k]) {
  1570   0012E6  EF84  F009         	goto	l2977
  1571   0012EA                     l2973:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;../main.c: 128:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1575   0012EA  0E05               	movlw	5
  1576   0012EC  6E5A               	movwf	(??_main+1)^0,c
  1577   0012EE  0E0F               	movlw	15
  1578   0012F0  6E59               	movwf	??_main^0,c
  1579   0012F2  0EF1               	movlw	241
  1580   0012F4                     u1887:
  1581   0012F4  2EE8               	decfsz	wreg,f,c
  1582   0012F6  D7FE               	bra	u1887
  1583   0012F8  2E59               	decfsz	??_main^0,f,c
  1584   0012FA  D7FC               	bra	u1887
  1585   0012FC  2E5A               	decfsz	(??_main+1)^0,f,c
  1586   0012FE  D7FA               	bra	u1887
  1587   001300  F000               	nop	
  1588   001302                     
  1589                           ;../main.c: 129:                 time_return++;
  1590   001302  0100               	movlb	0	; () banked
  1591   001304  4BFD               	infsnz	main@time_return& (0+255),f,b
  1592   001306  2BFE               	incf	(main@time_return+1)& (0+255),f,b
  1593   001308                     l2977:
  1594                           
  1595                           ;../main.c: 127:             while (time_return < time_path[k]) {
  1596   001308  90D8               	bcf	status,0,c
  1597   00130A  0101               	movlb	1	; () banked
  1598   00130C  35F2               	rlcf	main@k& (0+255),w,b
  1599   00130E  6ED9               	movwf	fsr2l,c
  1600   001310  35F3               	rlcf	(main@k+1)& (0+255),w,b
  1601   001312  6EDA               	movwf	fsr2h,c
  1602   001314  0EC8               	movlw	low main@time_path
  1603   001316  26D9               	addwf	fsr2l,f,c
  1604   001318  0E01               	movlw	high main@time_path
  1605   00131A  22DA               	addwfc	fsr2h,f,c
  1606   00131C  50DE               	movf	postinc2,w,c
  1607   00131E  0100               	movlb	0	; () banked
  1608   001320  5DFD               	subwf	main@time_return& (0+255),w,b
  1609   001322  50DE               	movf	postinc2,w,c
  1610   001324  59FE               	subwfb	(main@time_return+1)& (0+255),w,b
  1611   001326  A0D8               	btfss	status,0,c
  1612   001328  EF98  F009         	goto	u1811
  1613   00132C  EF9A  F009         	goto	u1810
  1614   001330                     u1811:
  1615   001330  EF75  F009         	goto	l2973
  1616   001334                     u1810:
  1617   001334                     
  1618                           ; BSR set to: 0
  1619                           ;../main.c: 131:             stop(&motorL,&motorR);
  1620   001334  0EC2               	movlw	low main@motorL
  1621   001336  6E1A               	movwf	stop@mL^0,c
  1622   001338  0E02               	movlw	high main@motorL
  1623   00133A  6E1B               	movwf	(stop@mL+1)^0,c
  1624   00133C  0ECB               	movlw	low main@motorR
  1625   00133E  6E1C               	movwf	stop@mR^0,c
  1626   001340  0E02               	movlw	high main@motorR
  1627   001342  6E1D               	movwf	(stop@mR+1)^0,c
  1628   001344  EC29  F013         	call	_stop	;wreg free
  1629   001348                     
  1630                           ;../main.c: 132:         }
  1631   001348  0101               	movlb	1	; () banked
  1632   00134A  4BF2               	infsnz	main@k& (0+255),f,b
  1633   00134C  2BF3               	incf	(main@k+1)& (0+255),f,b
  1634   00134E  EF3B  F009         	goto	l2963
  1635   001352  EF1F  F000         	goto	start
  1636   001356                     __end_of_main:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _stop *****************
  1640 ;; Defined at:
  1641 ;;		line 61 in file "../dc_motor.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  1644 ;;		 -> main@motorL(9), 
  1645 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  1646 ;;		 -> main@motorR(9), 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  i               2   30[COMRAM] int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;Total ram usage:        7 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 3
  1665 ;; This function calls:
  1666 ;;		_setMotorPWM
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text1
  1673   002652                     __ptext1:
  1674                           	callstack 0
  1675   002652                     _stop:
  1676                           	callstack 27
  1677   002652                     
  1678                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  1679   002652  EE20 F001          	lfsr	2,1
  1680   002656  501A               	movf	stop@mL^0,w,c
  1681   002658  26D9               	addwf	fsr2l,f,c
  1682   00265A  501B               	movf	(stop@mL+1)^0,w,c
  1683   00265C  22DA               	addwfc	fsr2h,f,c
  1684   00265E  0E00               	movlw	0
  1685   002660  6EDF               	movwf	indf2,c
  1686                           
  1687                           ;../dc_motor.c: 64:     mR->direction = 0;
  1688   002662  EE20 F001          	lfsr	2,1
  1689   002666  501C               	movf	stop@mR^0,w,c
  1690   002668  26D9               	addwf	fsr2l,f,c
  1691   00266A  501D               	movf	(stop@mR+1)^0,w,c
  1692   00266C  22DA               	addwfc	fsr2h,f,c
  1693   00266E  0E00               	movlw	0
  1694   002670  6EDF               	movwf	indf2,c
  1695   002672                     
  1696                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  1697   002672  0E00               	movlw	0
  1698   002674  6E20               	movwf	(stop@i+1)^0,c
  1699   002676  0E05               	movlw	5
  1700   002678  6E1F               	movwf	stop@i^0,c
  1701   00267A                     l2801:
  1702                           
  1703                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  1704   00267A  C01A  FFD9         	movff	stop@mL,fsr2l
  1705   00267E  C01B  FFDA         	movff	stop@mL+1,fsr2h
  1706   002682  C01F  FFDF         	movff	stop@i,indf2
  1707                           
  1708                           ;../dc_motor.c: 68:         mR->power = i;
  1709   002686  C01C  FFD9         	movff	stop@mR,fsr2l
  1710   00268A  C01D  FFDA         	movff	stop@mR+1,fsr2h
  1711   00268E  C01F  FFDF         	movff	stop@i,indf2
  1712   002692                     
  1713                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  1714   002692  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  1715   002696  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  1716   00269A  EC24  F00C         	call	_setMotorPWM	;wreg free
  1717   00269E                     
  1718                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  1719   00269E  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  1720   0026A2  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  1721   0026A6  EC24  F00C         	call	_setMotorPWM	;wreg free
  1722   0026AA                     
  1723                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1724   0026AA  0ED0               	movlw	208
  1725   0026AC  6E1E               	movwf	??_stop^0,c
  1726   0026AE  0ECA               	movlw	202
  1727   0026B0                     u1897:
  1728   0026B0  2EE8               	decfsz	wreg,f,c
  1729   0026B2  D7FE               	bra	u1897
  1730   0026B4  2E1E               	decfsz	??_stop^0,f,c
  1731   0026B6  D7FC               	bra	u1897
  1732   0026B8                     
  1733                           ;../dc_motor.c: 72:     }
  1734   0026B8  0EFF               	movlw	255
  1735   0026BA  241F               	addwf	stop@i^0,w,c
  1736   0026BC  6E1F               	movwf	stop@i^0,c
  1737   0026BE  0EFF               	movlw	255
  1738   0026C0  2020               	addwfc	(stop@i+1)^0,w,c
  1739   0026C2  6E20               	movwf	(stop@i+1)^0,c
  1740   0026C4  BE20               	btfsc	(stop@i+1)^0,7,c
  1741   0026C6  EF6F  F013         	goto	u1710
  1742   0026CA  5020               	movf	(stop@i+1)^0,w,c
  1743   0026CC  E106               	bnz	u1711
  1744   0026CE  041F               	decf	stop@i^0,w,c
  1745   0026D0  B0D8               	btfsc	status,0,c
  1746   0026D2  EF6D  F013         	goto	u1711
  1747   0026D6  EF6F  F013         	goto	u1710
  1748   0026DA                     u1711:
  1749   0026DA  EF3D  F013         	goto	l2801
  1750   0026DE                     u1710:
  1751   0026DE  0012               	return		;funcret
  1752   0026E0                     __end_of_stop:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _sprintf *****************
  1756 ;; Defined at:
  1757 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1760 ;;		 -> main@readout3(100), main@readout2(100), main@readout1(100), 
  1761 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1762 ;;		 -> STR_3(18), STR_2(15), STR_1(15), 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1765 ;;  ap              2   14[BANK0 ] PTR void [1]
  1766 ;;		 -> ?_sprintf(2), 
  1767 ;;  ret             2    0        int 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    0[BANK0 ] int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1777 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;Total ram usage:       27 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 8
  1784 ;; This function calls:
  1785 ;;		_vfprintf
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text2
  1792   00283E                     __ptext2:
  1793                           	callstack 0
  1794   00283E                     _sprintf:
  1795                           	callstack 22
  1796   00283E  0E64               	movlw	low (?_sprintf+4)
  1797   002840  0100               	movlb	0	; () banked
  1798   002842  6F6E               	movwf	sprintf@ap& (0+255),b
  1799   002844  0E00               	movlw	high (?_sprintf+4)
  1800   002846  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1801   002848  C060  F070         	movff	sprintf@s,sprintf@f
  1802   00284C  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  1803   002850                     
  1804                           ; BSR set to: 0
  1805   002850  0E00               	movlw	0
  1806   002852  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1807   002854  0E00               	movlw	0
  1808   002856  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1809   002858                     
  1810                           ; BSR set to: 0
  1811   002858  0E00               	movlw	0
  1812   00285A  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1813   00285C  0E00               	movlw	0
  1814   00285E  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1815   002860                     
  1816                           ; BSR set to: 0
  1817   002860  0E70               	movlw	low sprintf@f
  1818   002862  6E51               	movwf	vfprintf@fp^0,c
  1819   002864  0E00               	movlw	high sprintf@f
  1820   002866  6E52               	movwf	(vfprintf@fp+1)^0,c
  1821   002868  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1822   00286C  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1823   002870  0E6E               	movlw	low sprintf@ap
  1824   002872  6E55               	movwf	vfprintf@ap^0,c
  1825   002874  0E00               	movlw	high sprintf@ap
  1826   002876  6E56               	movwf	(vfprintf@ap+1)^0,c
  1827   002878  EC48  F014         	call	_vfprintf	;wreg free
  1828   00287C  0100               	movlb	0	; () banked
  1829   00287E  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1830   002880  2560               	addwf	sprintf@s& (0+255),w,b
  1831   002882  6ED9               	movwf	fsr2l,c
  1832   002884  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1833   002886  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1834   002888  6EDA               	movwf	fsr2h,c
  1835   00288A  0E00               	movlw	0
  1836   00288C  6EDF               	movwf	indf2,c
  1837   00288E                     
  1838                           ; BSR set to: 0
  1839   00288E  0012               	return		;funcret
  1840   002890                     __end_of_sprintf:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _vfprintf *****************
  1844 ;; Defined at:
  1845 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1848 ;;		 -> sprintf@f(11), 
  1849 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1850 ;;		 -> STR_3(18), STR_2(15), STR_1(15), 
  1851 ;;  ap              2   84[COMRAM] PTR PTR void 
  1852 ;;		 -> sprintf@ap(2), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1855 ;;		 -> STR_3(18), STR_2(15), STR_1(15), 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  2   80[COMRAM] int 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1865 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;Total ram usage:        8 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 7
  1872 ;; This function calls:
  1873 ;;		_vfpfcnvrt
  1874 ;; This function is called by:
  1875 ;;		_sprintf
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text3
  1880   002890                     __ptext3:
  1881                           	callstack 0
  1882   002890                     _vfprintf:
  1883                           	callstack 22
  1884   002890                     
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1886   002890  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1887   002894  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1890   002898  EF5C  F014         	goto	l2597
  1891   00289C                     l2595:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1894   00289C  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1895   0028A0  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1896   0028A4  0E57               	movlw	low vfprintf@cfmt
  1897   0028A6  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1898   0028A8  0E00               	movlw	high vfprintf@cfmt
  1899   0028AA  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1900   0028AC  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1901   0028B0  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1902   0028B4  EC84  F00E         	call	_vfpfcnvrt	;wreg free
  1903   0028B8                     l2597:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1906   0028B8  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1907   0028BC  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1908   0028C0                     	if	0	;tblptru may be non-zero
  1909   0028C0                     	endif
  1910   0028C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1911   0028C0  0E00               	movlw	low (__mediumconst shr (0+16))
  1912   0028C2  6EF8               	movwf	tblptru,c
  1913   0028C4                     	endif
  1914   0028C4  0008               	tblrd		*
  1915   0028C6  50F5               	movf	tablat,w,c
  1916   0028C8  0900               	iorlw	0
  1917   0028CA  A4D8               	btfss	status,2,c
  1918   0028CC  EF6A  F014         	goto	u1481
  1919   0028D0  EF6C  F014         	goto	u1480
  1920   0028D4                     u1481:
  1921   0028D4  EF4E  F014         	goto	l2595
  1922   0028D8                     u1480:
  1923   0028D8                     
  1924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1925   0028D8  0E00               	movlw	0
  1926   0028DA  6E52               	movwf	(?_vfprintf+1)^0,c
  1927   0028DC  0E00               	movlw	0
  1928   0028DE  6E51               	movwf	?_vfprintf^0,c
  1929   0028E0  0012               	return		;funcret
  1930   0028E2                     __end_of_vfprintf:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _vfpfcnvrt *****************
  1934 ;; Defined at:
  1935 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1938 ;;		 -> sprintf@f(11), 
  1939 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1940 ;;		 -> vfprintf@cfmt(2), 
  1941 ;;  ap              2   66[COMRAM] PTR PTR void 
  1942 ;;		 -> sprintf@ap(2), 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  convarg         8   70[COMRAM] struct .
  1945 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1946 ;;		 -> STR_3(18), STR_2(15), STR_1(15), 
  1947 ;;  i               2    0        int 
  1948 ;;  done            2    0        int 
  1949 ;;  c               1    0        unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1959 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;Total ram usage:       18 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 6
  1966 ;; This function calls:
  1967 ;;		_dtoa
  1968 ;;		_fputc
  1969 ;; This function is called by:
  1970 ;;		_vfprintf
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text4
  1975   001D08                     __ptext4:
  1976                           	callstack 0
  1977   001D08                     _vfpfcnvrt:
  1978                           	callstack 22
  1979   001D08                     
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1981   001D08  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1982   001D0C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1983   001D10  CFDE FFF6          	movff	postinc2,tblptrl
  1984   001D14  CFDD FFF7          	movff	postdec2,tblptrh
  1985   001D18                     	if	0	;tblptru may be non-zero
  1986   001D18                     	endif
  1987   001D18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1988   001D18  0E00               	movlw	low (__mediumconst shr (0+16))
  1989   001D1A  6EF8               	movwf	tblptru,c
  1990   001D1C                     	endif
  1991   001D1C  0008               	tblrd		*
  1992   001D1E  50F5               	movf	tablat,w,c
  1993   001D20  0A25               	xorlw	37
  1994   001D22  A4D8               	btfss	status,2,c
  1995   001D24  EF96  F00E         	goto	u1381
  1996   001D28  EF98  F00E         	goto	u1380
  1997   001D2C                     u1381:
  1998   001D2C  EF1C  F00F         	goto	l2403
  1999   001D30                     u1380:
  2000   001D30                     
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2002   001D30  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2003   001D34  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2004   001D38  2ADE               	incf	postinc2,f,c
  2005   001D3A  0E00               	movlw	0
  2006   001D3C  22DD               	addwfc	postdec2,f,c
  2007   001D3E                     
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2009   001D3E  0E00               	movlw	0
  2010   001D40  0102               	movlb	2	; () banked
  2011   001D42  6F51               	movwf	(_width+1)& (0+255),b
  2012   001D44  0E00               	movlw	0
  2013   001D46  6F50               	movwf	_width& (0+255),b
  2014   001D48  C250  F1FE         	movff	_width,_flags
  2015   001D4C                     
  2016                           ; BSR set to: 2
  2017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2018   001D4C  6952               	setf	_prec& (0+255),b
  2019   001D4E  6953               	setf	(_prec+1)& (0+255),b
  2020   001D50                     
  2021                           ; BSR set to: 2
  2022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2023   001D50  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2024   001D54  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2025   001D58  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2026   001D5C  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2027   001D60                     
  2028                           ; BSR set to: 2
  2029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2030   001D60  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2031   001D64  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2032   001D68                     	if	0	;tblptru may be non-zero
  2033   001D68                     	endif
  2034   001D68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2035   001D68  0E00               	movlw	low (__mediumconst shr (0+16))
  2036   001D6A  6EF8               	movwf	tblptru,c
  2037   001D6C                     	endif
  2038   001D6C  0008               	tblrd		*
  2039   001D6E  50F5               	movf	tablat,w,c
  2040   001D70  0A64               	xorlw	100
  2041   001D72  B4D8               	btfsc	status,2,c
  2042   001D74  EFBE  F00E         	goto	u1391
  2043   001D78  EFC0  F00E         	goto	u1390
  2044   001D7C                     u1391:
  2045   001D7C  EFD0  F00E         	goto	l2393
  2046   001D80                     u1390:
  2047   001D80                     
  2048                           ; BSR set to: 2
  2049   001D80  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2050   001D84  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2051   001D88                     	if	0	;tblptru may be non-zero
  2052   001D88                     	endif
  2053   001D88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2054   001D88  0E00               	movlw	low (__mediumconst shr (0+16))
  2055   001D8A  6EF8               	movwf	tblptru,c
  2056   001D8C                     	endif
  2057   001D8C  0008               	tblrd		*
  2058   001D8E  50F5               	movf	tablat,w,c
  2059   001D90  0A69               	xorlw	105
  2060   001D92  A4D8               	btfss	status,2,c
  2061   001D94  EFCE  F00E         	goto	u1401
  2062   001D98  EFD0  F00E         	goto	u1400
  2063   001D9C                     u1401:
  2064   001D9C  EF13  F00F         	goto	l2399
  2065   001DA0                     u1400:
  2066   001DA0                     l2393:
  2067                           
  2068                           ; BSR set to: 2
  2069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2070   001DA0  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2071   001DA4  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2072   001DA8  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2073   001DAC  0E02               	movlw	2
  2074   001DAE  26DE               	addwf	postinc2,f,c
  2075   001DB0  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2076   001DB4  0E00               	movlw	0
  2077   001DB6  22DD               	addwfc	postdec2,f,c
  2078   001DB8  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2079   001DBC  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2080   001DC0  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2081   001DC4  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2082   001DC8  0E00               	movlw	0
  2083   001DCA  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2084   001DCC  0EFF               	movlw	-1
  2085   001DCE  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2086   001DD0  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2087   001DD2  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2088   001DD4  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2089   001DD6  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2090   001DD8  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2093   001DDA  0E01               	movlw	1
  2094   001DDC  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2095   001DDE  6E45               	movwf	??_vfpfcnvrt^0,c
  2096   001DE0  0E00               	movlw	0
  2097   001DE2  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2098   001DE4  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2099   001DE6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2100   001DEA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2101   001DEE  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2102   001DF2  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2103   001DF6                     
  2104                           ; BSR set to: 2
  2105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2106   001DF6  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2107   001DFA  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2108   001DFE  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2109   001E02  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2110   001E06  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2111   001E0A  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2112   001E0E  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2113   001E12  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2114   001E16  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2115   001E1A  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2116   001E1E  ECAB  F009         	call	_dtoa	;wreg free
  2117   001E22  EF32  F00F         	goto	l1151
  2118   001E26                     l2399:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2121   001E26  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2122   001E2A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2123   001E2E  2ADE               	incf	postinc2,f,c
  2124   001E30  0E00               	movlw	0
  2125   001E32  22DD               	addwfc	postdec2,f,c
  2126   001E34  EF32  F00F         	goto	l1151
  2127   001E38                     l2403:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2130   001E38  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2131   001E3C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2132   001E40  CFDE FFF6          	movff	postinc2,tblptrl
  2133   001E44  CFDD FFF7          	movff	postdec2,tblptrh
  2134   001E48                     	if	0	;tblptru may be non-zero
  2135   001E48                     	endif
  2136   001E48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2137   001E48  0E00               	movlw	low (__mediumconst shr (0+16))
  2138   001E4A  6EF8               	movwf	tblptru,c
  2139   001E4C                     	endif
  2140   001E4C  0008               	tblrd		*
  2141   001E4E  50F5               	movf	tablat,w,c
  2142   001E50  6E01               	movwf	fputc@c^0,c
  2143   001E52  6A02               	clrf	(fputc@c+1)^0,c
  2144   001E54  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2145   001E58  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2146   001E5C  ECC8  F00F         	call	_fputc	;wreg free
  2147   001E60  EF13  F00F         	goto	l2399
  2148   001E64                     l1151:
  2149   001E64  0012               	return		;funcret
  2150   001E66                     __end_of_vfpfcnvrt:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _dtoa *****************
  2154 ;; Defined at:
  2155 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2158 ;;		 -> sprintf@f(11), 
  2159 ;;  d               8   29[COMRAM] long long 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  n               8   51[COMRAM] long long 
  2162 ;;  i               2   59[COMRAM] int 
  2163 ;;  w               2   49[COMRAM] int 
  2164 ;;  p               2   47[COMRAM] int 
  2165 ;;  s               1   61[COMRAM] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2175 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;Total ram usage:       35 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 5
  2182 ;; This function calls:
  2183 ;;		___aodiv
  2184 ;;		___aomod
  2185 ;;		_abs
  2186 ;;		_pad
  2187 ;; This function is called by:
  2188 ;;		_vfpfcnvrt
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text5
  2193   001356                     __ptext5:
  2194                           	callstack 0
  2195   001356                     _dtoa:
  2196                           	callstack 22
  2197   001356                     
  2198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2199   001356  C01E  F034         	movff	dtoa@d,dtoa@n
  2200   00135A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2201   00135E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2202   001362  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2203   001366  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2204   00136A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2205   00136E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2206   001372  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2207   001376                     
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2209   001376  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2210   001378  EFC0  F009         	goto	u1221
  2211   00137C  EFC3  F009         	goto	u1220
  2212   001380                     u1221:
  2213   001380  0E01               	movlw	1
  2214   001382  EFC4  F009         	goto	u1230
  2215   001386                     u1220:
  2216   001386  0E00               	movlw	0
  2217   001388                     u1230:
  2218   001388  6E3E               	movwf	dtoa@s^0,c
  2219   00138A                     
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2221   00138A  503E               	movf	dtoa@s^0,w,c
  2222   00138C  B4D8               	btfsc	status,2,c
  2223   00138E  EFCB  F009         	goto	u1241
  2224   001392  EFCD  F009         	goto	u1240
  2225   001396                     u1241:
  2226   001396  EFDD  F009         	goto	l2291
  2227   00139A                     u1240:
  2228   00139A                     
  2229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2230   00139A  1E3B               	comf	(dtoa@n+7)^0,f,c
  2231   00139C  1E3A               	comf	(dtoa@n+6)^0,f,c
  2232   00139E  1E39               	comf	(dtoa@n+5)^0,f,c
  2233   0013A0  1E38               	comf	(dtoa@n+4)^0,f,c
  2234   0013A2  1E37               	comf	(dtoa@n+3)^0,f,c
  2235   0013A4  1E36               	comf	(dtoa@n+2)^0,f,c
  2236   0013A6  1E35               	comf	(dtoa@n+1)^0,f,c
  2237   0013A8  6C34               	negf	dtoa@n^0,c
  2238   0013AA  0E00               	movlw	0
  2239   0013AC  2235               	addwfc	(dtoa@n+1)^0,f,c
  2240   0013AE  2236               	addwfc	(dtoa@n+2)^0,f,c
  2241   0013B0  2237               	addwfc	(dtoa@n+3)^0,f,c
  2242   0013B2  2238               	addwfc	(dtoa@n+4)^0,f,c
  2243   0013B4  2239               	addwfc	(dtoa@n+5)^0,f,c
  2244   0013B6  223A               	addwfc	(dtoa@n+6)^0,f,c
  2245   0013B8  223B               	addwfc	(dtoa@n+7)^0,f,c
  2246   0013BA                     l2291:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2249   0013BA  0102               	movlb	2	; () banked
  2250   0013BC  BF53               	btfsc	(_prec+1)& (0+255),7,b
  2251   0013BE  EFEB  F009         	goto	u1250
  2252   0013C2  5153               	movf	(_prec+1)& (0+255),w,b
  2253   0013C4  E106               	bnz	u1251
  2254   0013C6  0552               	decf	_prec& (0+255),w,b
  2255   0013C8  B0D8               	btfsc	status,0,c
  2256   0013CA  EFE9  F009         	goto	u1251
  2257   0013CE  EFEB  F009         	goto	u1250
  2258   0013D2                     u1251:
  2259   0013D2  EFF1  F009         	goto	l1130
  2260   0013D6                     u1250:
  2261   0013D6                     
  2262                           ; BSR set to: 2
  2263   0013D6  0E00               	movlw	0
  2264   0013D8  6E31               	movwf	(dtoa@p+1)^0,c
  2265   0013DA  0E01               	movlw	1
  2266   0013DC  6E30               	movwf	dtoa@p^0,c
  2267   0013DE  EFF5  F009         	goto	l1132
  2268   0013E2                     l1130:
  2269                           
  2270                           ; BSR set to: 2
  2271   0013E2  C252  F030         	movff	_prec,dtoa@p
  2272   0013E6  C253  F031         	movff	_prec+1,dtoa@p+1
  2273   0013EA                     l1132:
  2274                           
  2275                           ; BSR set to: 2
  2276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2277   0013EA  C250  F032         	movff	_width,dtoa@w
  2278   0013EE  C251  F033         	movff	_width+1,dtoa@w+1
  2279   0013F2                     
  2280                           ; BSR set to: 2
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2282   0013F2  503E               	movf	dtoa@s^0,w,c
  2283   0013F4  B4D8               	btfsc	status,2,c
  2284   0013F6  EFFF  F009         	goto	u1261
  2285   0013FA  EF01  F00A         	goto	u1260
  2286   0013FE                     u1261:
  2287   0013FE  EF18  F00A         	goto	l1133
  2288   001402                     u1260:
  2289   001402                     
  2290                           ; BSR set to: 2
  2291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2292   001402  0632               	decf	dtoa@w^0,f,c
  2293   001404  A0D8               	btfss	status,0,c
  2294   001406  0633               	decf	(dtoa@w+1)^0,f,c
  2295   001408                     
  2296                           ; BSR set to: 2
  2297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2298   001408  503E               	movf	dtoa@s^0,w,c
  2299   00140A  A4D8               	btfss	status,2,c
  2300   00140C  EF0A  F00A         	goto	u1271
  2301   001410  EF0C  F00A         	goto	u1270
  2302   001414                     u1271:
  2303   001414  EF12  F00A         	goto	l2303
  2304   001418                     u1270:
  2305   001418                     
  2306                           ; BSR set to: 2
  2307   001418  0E00               	movlw	0
  2308   00141A  6E2F               	movwf	(_dtoa$2396+1)^0,c
  2309   00141C  0E2B               	movlw	43
  2310   00141E  6E2E               	movwf	_dtoa$2396^0,c
  2311   001420  EF16  F00A         	goto	l2305
  2312   001424                     l2303:
  2313                           
  2314                           ; BSR set to: 2
  2315   001424  0E00               	movlw	0
  2316   001426  6E2F               	movwf	(_dtoa$2396+1)^0,c
  2317   001428  0E2D               	movlw	45
  2318   00142A  6E2E               	movwf	_dtoa$2396^0,c
  2319   00142C                     l2305:
  2320                           
  2321                           ; BSR set to: 2
  2322   00142C  C02E  F03E         	movff	_dtoa$2396,dtoa@s
  2323   001430                     l1133:
  2324                           
  2325                           ; BSR set to: 2
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2327   001430  0E00               	movlw	0
  2328   001432  6E3D               	movwf	(dtoa@i+1)^0,c
  2329   001434  0E1F               	movlw	31
  2330   001436  6E3C               	movwf	dtoa@i^0,c
  2331   001438                     
  2332                           ; BSR set to: 2
  2333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2334   001438  0E00               	movlw	0
  2335   00143A  6F79               	movwf	(_dbuf+31)& (0+255),b
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2338   00143C  EF9C  F00A         	goto	l2319
  2339   001440                     l2309:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2342   001440  063C               	decf	dtoa@i^0,f,c
  2343   001442  A0D8               	btfss	status,0,c
  2344   001444  063D               	decf	(dtoa@i+1)^0,f,c
  2345   001446                     
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2347   001446  0E5A               	movlw	low _dbuf
  2348   001448  243C               	addwf	dtoa@i^0,w,c
  2349   00144A  6ED9               	movwf	fsr2l,c
  2350   00144C  0E02               	movlw	high _dbuf
  2351   00144E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2352   001450  6EDA               	movwf	fsr2h,c
  2353   001452  C034  F001         	movff	dtoa@n,___aomod@dividend
  2354   001456  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2355   00145A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2356   00145E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2357   001462  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2358   001466  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2359   00146A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2360   00146E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2361   001472  0E0A               	movlw	10
  2362   001474  6E09               	movwf	___aomod@divisor^0,c
  2363   001476  0E00               	movlw	0
  2364   001478  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2365   00147A  0E00               	movlw	0
  2366   00147C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2367   00147E  0E00               	movlw	0
  2368   001480  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2369   001482  0E00               	movlw	0
  2370   001484  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2371   001486  0E00               	movlw	0
  2372   001488  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2373   00148A  0E00               	movlw	0
  2374   00148C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2375   00148E  0E00               	movlw	0
  2376   001490  6E10               	movwf	(___aomod@divisor+7)^0,c
  2377   001492  ECD2  F00D         	call	___aomod	;wreg free
  2378   001496  C001  F026         	movff	?___aomod,??_dtoa
  2379   00149A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2380   00149E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2381   0014A2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2382   0014A6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2383   0014AA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2384   0014AE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2385   0014B2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2386   0014B6  C026  F013         	movff	??_dtoa,abs@a
  2387   0014BA  C027  F014         	movff	??_dtoa+1,abs@a+1
  2388   0014BE  EC75  F015         	call	_abs	;wreg free
  2389   0014C2  5013               	movf	?_abs^0,w,c
  2390   0014C4  0F30               	addlw	48
  2391   0014C6  6EDF               	movwf	indf2,c
  2392   0014C8                     
  2393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2394   0014C8  0630               	decf	dtoa@p^0,f,c
  2395   0014CA  A0D8               	btfss	status,0,c
  2396   0014CC  0631               	decf	(dtoa@p+1)^0,f,c
  2397   0014CE                     
  2398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2399   0014CE  0632               	decf	dtoa@w^0,f,c
  2400   0014D0  A0D8               	btfss	status,0,c
  2401   0014D2  0633               	decf	(dtoa@w+1)^0,f,c
  2402   0014D4                     
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2404   0014D4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2405   0014D8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2406   0014DC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2407   0014E0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2408   0014E4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2409   0014E8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2410   0014EC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2411   0014F0  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2412   0014F4  0E0A               	movlw	10
  2413   0014F6  6E09               	movwf	___aodiv@divisor^0,c
  2414   0014F8  0E00               	movlw	0
  2415   0014FA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2416   0014FC  0E00               	movlw	0
  2417   0014FE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2418   001500  0E00               	movlw	0
  2419   001502  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2420   001504  0E00               	movlw	0
  2421   001506  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2422   001508  0E00               	movlw	0
  2423   00150A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2424   00150C  0E00               	movlw	0
  2425   00150E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2426   001510  0E00               	movlw	0
  2427   001512  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2428   001514  EC0E  F00D         	call	___aodiv	;wreg free
  2429   001518  C001  F034         	movff	?___aodiv,dtoa@n
  2430   00151C  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2431   001520  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2432   001524  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2433   001528  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2434   00152C  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2435   001530  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2436   001534  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2437   001538                     l2319:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2440   001538  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2441   00153A  EFA7  F00A         	goto	u1281
  2442   00153E  503D               	movf	(dtoa@i+1)^0,w,c
  2443   001540  E108               	bnz	u1280
  2444   001542  043C               	decf	dtoa@i^0,w,c
  2445   001544  A0D8               	btfss	status,0,c
  2446   001546  EFA7  F00A         	goto	u1281
  2447   00154A  EFA9  F00A         	goto	u1280
  2448   00154E                     u1281:
  2449   00154E  EFC5  F00A         	goto	l2325
  2450   001552                     u1280:
  2451   001552  5034               	movf	dtoa@n^0,w,c
  2452   001554  1035               	iorwf	(dtoa@n+1)^0,w,c
  2453   001556  1036               	iorwf	(dtoa@n+2)^0,w,c
  2454   001558  1037               	iorwf	(dtoa@n+3)^0,w,c
  2455   00155A  1038               	iorwf	(dtoa@n+4)^0,w,c
  2456   00155C  1039               	iorwf	(dtoa@n+5)^0,w,c
  2457   00155E  103A               	iorwf	(dtoa@n+6)^0,w,c
  2458   001560  103B               	iorwf	(dtoa@n+7)^0,w,c
  2459   001562  A4D8               	btfss	status,2,c
  2460   001564  EFB6  F00A         	goto	u1291
  2461   001568  EFB8  F00A         	goto	u1290
  2462   00156C                     u1291:
  2463   00156C  EF20  F00A         	goto	l2309
  2464   001570                     u1290:
  2465   001570  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2466   001572  EFC5  F00A         	goto	u1300
  2467   001576  5031               	movf	(dtoa@p+1)^0,w,c
  2468   001578  E106               	bnz	u1301
  2469   00157A  0430               	decf	dtoa@p^0,w,c
  2470   00157C  B0D8               	btfsc	status,0,c
  2471   00157E  EFC3  F00A         	goto	u1301
  2472   001582  EFC5  F00A         	goto	u1300
  2473   001586                     u1301:
  2474   001586  EF20  F00A         	goto	l2309
  2475   00158A                     u1300:
  2476   00158A                     l2325:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2479   00158A  503E               	movf	dtoa@s^0,w,c
  2480   00158C  B4D8               	btfsc	status,2,c
  2481   00158E  EFCB  F00A         	goto	u1311
  2482   001592  EFCD  F00A         	goto	u1310
  2483   001596                     u1311:
  2484   001596  EFD8  F00A         	goto	l2331
  2485   00159A                     u1310:
  2486   00159A                     
  2487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2488   00159A  063C               	decf	dtoa@i^0,f,c
  2489   00159C  A0D8               	btfss	status,0,c
  2490   00159E  063D               	decf	(dtoa@i+1)^0,f,c
  2491   0015A0                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2493   0015A0  0E5A               	movlw	low _dbuf
  2494   0015A2  243C               	addwf	dtoa@i^0,w,c
  2495   0015A4  6ED9               	movwf	fsr2l,c
  2496   0015A6  0E02               	movlw	high _dbuf
  2497   0015A8  203D               	addwfc	(dtoa@i+1)^0,w,c
  2498   0015AA  6EDA               	movwf	fsr2h,c
  2499   0015AC  C03E  FFDF         	movff	dtoa@s,indf2
  2500   0015B0                     l2331:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2503   0015B0  C01C  F011         	movff	dtoa@fp,pad@fp
  2504   0015B4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2505   0015B8  0E5A               	movlw	low _dbuf
  2506   0015BA  243C               	addwf	dtoa@i^0,w,c
  2507   0015BC  6E13               	movwf	pad@buf^0,c
  2508   0015BE  0E02               	movlw	high _dbuf
  2509   0015C0  203D               	addwfc	(dtoa@i+1)^0,w,c
  2510   0015C2  6E14               	movwf	(pad@buf+1)^0,c
  2511   0015C4  C032  F015         	movff	dtoa@w,pad@p
  2512   0015C8  C033  F016         	movff	dtoa@w+1,pad@p+1
  2513   0015CC  ECB5  F013         	call	_pad	;wreg free
  2514   0015D0  0012               	return		;funcret
  2515   0015D2                     __end_of_dtoa:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _pad *****************
  2519 ;; Defined at:
  2520 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2523 ;;		 -> sprintf@f(11), 
  2524 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2525 ;;		 -> dbuf(32), 
  2526 ;;  p               2   20[COMRAM] int 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  w               2   25[COMRAM] int 
  2529 ;;  i               2   23[COMRAM] int 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2539 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;Total ram usage:       11 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 4
  2546 ;; This function calls:
  2547 ;;		_fputc
  2548 ;;		_fputs
  2549 ;; This function is called by:
  2550 ;;		_dtoa
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text6
  2555   00276A                     __ptext6:
  2556                           	callstack 0
  2557   00276A                     _pad:
  2558                           	callstack 22
  2559   00276A                     
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2561   00276A  BE16               	btfsc	(pad@p+1)^0,7,c
  2562   00276C  EFBA  F013         	goto	u1111
  2563   002770  EFBC  F013         	goto	u1110
  2564   002774                     u1111:
  2565   002774  EFC2  F013         	goto	l2215
  2566   002778                     u1110:
  2567   002778  C015  F01A         	movff	pad@p,pad@w
  2568   00277C  C016  F01B         	movff	pad@p+1,pad@w+1
  2569   002780  EFC6  F013         	goto	l1121
  2570   002784                     l2215:
  2571   002784  0E00               	movlw	0
  2572   002786  6E1B               	movwf	(pad@w+1)^0,c
  2573   002788  0E00               	movlw	0
  2574   00278A  6E1A               	movwf	pad@w^0,c
  2575   00278C                     l1121:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2578   00278C  0E00               	movlw	0
  2579   00278E  6E19               	movwf	(pad@i+1)^0,c
  2580   002790  0E00               	movlw	0
  2581   002792  6E18               	movwf	pad@i^0,c
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2584   002794  EFD8  F013         	goto	l2221
  2585   002798                     l2217:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2588   002798  0E00               	movlw	0
  2589   00279A  6E02               	movwf	(fputc@c+1)^0,c
  2590   00279C  0E20               	movlw	32
  2591   00279E  6E01               	movwf	fputc@c^0,c
  2592   0027A0  C011  F003         	movff	pad@fp,fputc@fp
  2593   0027A4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2594   0027A8  ECC8  F00F         	call	_fputc	;wreg free
  2595   0027AC                     
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2597   0027AC  4A18               	infsnz	pad@i^0,f,c
  2598   0027AE  2A19               	incf	(pad@i+1)^0,f,c
  2599   0027B0                     l2221:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2602   0027B0  501A               	movf	pad@w^0,w,c
  2603   0027B2  5C18               	subwf	pad@i^0,w,c
  2604   0027B4  5019               	movf	(pad@i+1)^0,w,c
  2605   0027B6  0A80               	xorlw	128
  2606   0027B8  6E17               	movwf	??_pad^0,c
  2607   0027BA  501B               	movf	(pad@w+1)^0,w,c
  2608   0027BC  0A80               	xorlw	128
  2609   0027BE  5817               	subwfb	??_pad^0,w,c
  2610   0027C0  A0D8               	btfss	status,0,c
  2611   0027C2  EFE5  F013         	goto	u1121
  2612   0027C6  EFE7  F013         	goto	u1120
  2613   0027CA                     u1121:
  2614   0027CA  EFCC  F013         	goto	l2217
  2615   0027CE                     u1120:
  2616   0027CE                     
  2617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2618   0027CE  C013  F00A         	movff	pad@buf,fputs@s
  2619   0027D2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2620   0027D6  C011  F00C         	movff	pad@fp,fputs@fp
  2621   0027DA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2622   0027DE  EC11  F015         	call	_fputs	;wreg free
  2623   0027E2  0012               	return		;funcret
  2624   0027E4                     __end_of_pad:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _fputs *****************
  2628 ;; Defined at:
  2629 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2632 ;;		 -> dbuf(32), 
  2633 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2634 ;;		 -> sprintf@f(11), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  i               2   14[COMRAM] int 
  2637 ;;  c               1   13[COMRAM] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  2    9[COMRAM] int 
  2640 ;; Registers used:
  2641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2648 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2650 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2651 ;;Total ram usage:        7 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 3
  2654 ;; This function calls:
  2655 ;;		_fputc
  2656 ;; This function is called by:
  2657 ;;		_pad
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text7
  2662   002A22                     __ptext7:
  2663                           	callstack 0
  2664   002A22                     _fputs:
  2665                           	callstack 22
  2666   002A22  0E00               	movlw	0
  2667   002A24  6E10               	movwf	(fputs@i+1)^0,c
  2668   002A26  0E00               	movlw	0
  2669   002A28  6E0F               	movwf	fputs@i^0,c
  2670   002A2A  EF22  F015         	goto	l2129
  2671   002A2E                     l2125:
  2672   002A2E  C00E  F001         	movff	fputs@c,fputc@c
  2673   002A32  6A02               	clrf	(fputc@c+1)^0,c
  2674   002A34  C00C  F003         	movff	fputs@fp,fputc@fp
  2675   002A38  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2676   002A3C  ECC8  F00F         	call	_fputc	;wreg free
  2677   002A40  4A0F               	infsnz	fputs@i^0,f,c
  2678   002A42  2A10               	incf	(fputs@i+1)^0,f,c
  2679   002A44                     l2129:
  2680   002A44  500F               	movf	fputs@i^0,w,c
  2681   002A46  240A               	addwf	fputs@s^0,w,c
  2682   002A48  6ED9               	movwf	fsr2l,c
  2683   002A4A  5010               	movf	(fputs@i+1)^0,w,c
  2684   002A4C  200B               	addwfc	(fputs@s+1)^0,w,c
  2685   002A4E  6EDA               	movwf	fsr2h,c
  2686   002A50  50DF               	movf	indf2,w,c
  2687   002A52  6E0E               	movwf	fputs@c^0,c
  2688   002A54  500E               	movf	fputs@c^0,w,c
  2689   002A56  A4D8               	btfss	status,2,c
  2690   002A58  EF30  F015         	goto	u971
  2691   002A5C  EF32  F015         	goto	u970
  2692   002A60                     u971:
  2693   002A60  EF17  F015         	goto	l2125
  2694   002A64                     u970:
  2695   002A64  0012               	return		;funcret
  2696   002A66                     __end_of_fputs:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _fputc *****************
  2700 ;; Defined at:
  2701 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  c               2    0[COMRAM] int 
  2704 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2705 ;;		 -> sprintf@f(11), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2    0[COMRAM] int 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;Total ram usage:        9 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 2
  2724 ;; This function calls:
  2725 ;;		_putch
  2726 ;; This function is called by:
  2727 ;;		_pad
  2728 ;;		_vfpfcnvrt
  2729 ;;		_fputs
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text8
  2734   001F90                     __ptext8:
  2735                           	callstack 0
  2736   001F90                     _fputc:
  2737                           	callstack 25
  2738   001F90  5003               	movf	fputc@fp^0,w,c
  2739   001F92  1004               	iorwf	(fputc@fp+1)^0,w,c
  2740   001F94  B4D8               	btfsc	status,2,c
  2741   001F96  EFCF  F00F         	goto	u931
  2742   001F9A  EFD1  F00F         	goto	u930
  2743   001F9E                     u931:
  2744   001F9E  EFDA  F00F         	goto	l2113
  2745   001FA2                     u930:
  2746   001FA2  5003               	movf	fputc@fp^0,w,c
  2747   001FA4  1004               	iorwf	(fputc@fp+1)^0,w,c
  2748   001FA6  A4D8               	btfss	status,2,c
  2749   001FA8  EFD8  F00F         	goto	u941
  2750   001FAC  EFDA  F00F         	goto	u940
  2751   001FB0                     u941:
  2752   001FB0  EFDF  F00F         	goto	l2115
  2753   001FB4                     u940:
  2754   001FB4                     l2113:
  2755   001FB4  5001               	movf	fputc@c^0,w,c
  2756   001FB6  EC56  F016         	call	_putch
  2757   001FBA  EF2C  F010         	goto	l1176
  2758   001FBE                     l2115:
  2759   001FBE  EE20 F009          	lfsr	2,9
  2760   001FC2  5003               	movf	fputc@fp^0,w,c
  2761   001FC4  26D9               	addwf	fsr2l,f,c
  2762   001FC6  5004               	movf	(fputc@fp+1)^0,w,c
  2763   001FC8  22DA               	addwfc	fsr2h,f,c
  2764   001FCA  50DE               	movf	postinc2,w,c
  2765   001FCC  10DE               	iorwf	postinc2,w,c
  2766   001FCE  B4D8               	btfsc	status,2,c
  2767   001FD0  EFEC  F00F         	goto	u951
  2768   001FD4  EFEE  F00F         	goto	u950
  2769   001FD8                     u951:
  2770   001FD8  EF09  F010         	goto	l2119
  2771   001FDC                     u950:
  2772   001FDC  EE20 F009          	lfsr	2,9
  2773   001FE0  5003               	movf	fputc@fp^0,w,c
  2774   001FE2  26D9               	addwf	fsr2l,f,c
  2775   001FE4  5004               	movf	(fputc@fp+1)^0,w,c
  2776   001FE6  22DA               	addwfc	fsr2h,f,c
  2777   001FE8  EE10 F003          	lfsr	1,3
  2778   001FEC  5003               	movf	fputc@fp^0,w,c
  2779   001FEE  26E1               	addwf	fsr1l,f,c
  2780   001FF0  5004               	movf	(fputc@fp+1)^0,w,c
  2781   001FF2  22E2               	addwfc	fsr1h,f,c
  2782   001FF4  50DE               	movf	postinc2,w,c
  2783   001FF6  5CE6               	subwf	postinc1,w,c
  2784   001FF8  50E6               	movf	postinc1,w,c
  2785   001FFA  0A80               	xorlw	128
  2786   001FFC  6E09               	movwf	(??_fputc+4)^0,c
  2787   001FFE  50DE               	movf	postinc2,w,c
  2788   002000  0A80               	xorlw	128
  2789   002002  5809               	subwfb	(??_fputc+4)^0,w,c
  2790   002004  B0D8               	btfsc	status,0,c
  2791   002006  EF07  F010         	goto	u961
  2792   00200A  EF09  F010         	goto	u960
  2793   00200E                     u961:
  2794   00200E  EF2C  F010         	goto	l1176
  2795   002012                     u960:
  2796   002012                     l2119:
  2797   002012  EE20 F003          	lfsr	2,3
  2798   002016  5003               	movf	fputc@fp^0,w,c
  2799   002018  26D9               	addwf	fsr2l,f,c
  2800   00201A  5004               	movf	(fputc@fp+1)^0,w,c
  2801   00201C  22DA               	addwfc	fsr2h,f,c
  2802   00201E  CFDE F005          	movff	postinc2,??_fputc
  2803   002022  CFDD F006          	movff	postdec2,??_fputc+1
  2804   002026  C003  FFD9         	movff	fputc@fp,fsr2l
  2805   00202A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2806   00202E  CFDE F007          	movff	postinc2,??_fputc+2
  2807   002032  CFDD F008          	movff	postdec2,??_fputc+3
  2808   002036  5005               	movf	??_fputc^0,w,c
  2809   002038  2407               	addwf	(??_fputc+2)^0,w,c
  2810   00203A  6ED9               	movwf	fsr2l,c
  2811   00203C  5006               	movf	(??_fputc+1)^0,w,c
  2812   00203E  2008               	addwfc	(??_fputc+3)^0,w,c
  2813   002040  6EDA               	movwf	fsr2h,c
  2814   002042  C001  FFDF         	movff	fputc@c,indf2
  2815   002046  EE20 F003          	lfsr	2,3
  2816   00204A  5003               	movf	fputc@fp^0,w,c
  2817   00204C  26D9               	addwf	fsr2l,f,c
  2818   00204E  5004               	movf	(fputc@fp+1)^0,w,c
  2819   002050  22DA               	addwfc	fsr2h,f,c
  2820   002052  2ADE               	incf	postinc2,f,c
  2821   002054  0E00               	movlw	0
  2822   002056  22DD               	addwfc	postdec2,f,c
  2823   002058                     l1176:
  2824   002058  0012               	return		;funcret
  2825   00205A                     __end_of_fputc:
  2826                           	callstack 0
  2827                           
  2828 ;; *************** function _putch *****************
  2829 ;; Defined at:
  2830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  c               1    wreg     unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  c               1    0[COMRAM] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_fputc
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text9
  2859   002CAC                     __ptext9:
  2860                           	callstack 0
  2861   002CAC                     _putch:
  2862                           	callstack 25
  2863   002CAC  0012               	return		;funcret
  2864   002CAE                     __end_of_putch:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _abs *****************
  2868 ;; Defined at:
  2869 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  a               2   18[COMRAM] int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2   18[COMRAM] int 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;Total ram usage:        4 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_dtoa
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text10
  2898   002AEA                     __ptext10:
  2899                           	callstack 0
  2900   002AEA                     _abs:
  2901                           	callstack 25
  2902   002AEA  BE14               	btfsc	(abs@a+1)^0,7,c
  2903   002AEC  EF82  F015         	goto	u1130
  2904   002AF0  5014               	movf	(abs@a+1)^0,w,c
  2905   002AF2  E106               	bnz	u1131
  2906   002AF4  0413               	decf	abs@a^0,w,c
  2907   002AF6  B0D8               	btfsc	status,0,c
  2908   002AF8  EF80  F015         	goto	u1131
  2909   002AFC  EF82  F015         	goto	u1130
  2910   002B00                     u1131:
  2911   002B00  EF90  F015         	goto	l1161
  2912   002B04                     u1130:
  2913   002B04  C013  F015         	movff	abs@a,??_abs
  2914   002B08  C014  F016         	movff	abs@a+1,??_abs+1
  2915   002B0C  1E15               	comf	??_abs^0,f,c
  2916   002B0E  1E16               	comf	(??_abs+1)^0,f,c
  2917   002B10  4A15               	infsnz	??_abs^0,f,c
  2918   002B12  2A16               	incf	(??_abs+1)^0,f,c
  2919   002B14  C015  F013         	movff	??_abs,?_abs
  2920   002B18  C016  F014         	movff	??_abs+1,?_abs+1
  2921   002B1C  EF94  F015         	goto	l1164
  2922   002B20                     l1161:
  2923   002B20  C013  F013         	movff	abs@a,?_abs
  2924   002B24  C014  F014         	movff	abs@a+1,?_abs+1
  2925   002B28                     l1164:
  2926   002B28  0012               	return		;funcret
  2927   002B2A                     __end_of_abs:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function ___aomod *****************
  2931 ;; Defined at:
  2932 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  dividend        8    0[COMRAM] long long 
  2935 ;;  divisor         8    8[COMRAM] long long 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  sign            1   17[COMRAM] unsigned char 
  2938 ;;  counter         1   16[COMRAM] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  8    0[COMRAM] long long 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2948 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;Total ram usage:       18 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 1
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_dtoa
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text11
  2963   001BA4                     __ptext11:
  2964                           	callstack 0
  2965   001BA4                     ___aomod:
  2966                           	callstack 25
  2967   001BA4  0E00               	movlw	0
  2968   001BA6  6E12               	movwf	___aomod@sign^0,c
  2969   001BA8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2970   001BAA  EFDB  F00D         	goto	u1050
  2971   001BAE  EFD9  F00D         	goto	u1051
  2972   001BB2                     u1051:
  2973   001BB2  EFED  F00D         	goto	l2183
  2974   001BB6                     u1050:
  2975   001BB6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2976   001BB8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2977   001BBA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2978   001BBC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2979   001BBE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2980   001BC0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2981   001BC2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2982   001BC4  6C01               	negf	___aomod@dividend^0,c
  2983   001BC6  0E00               	movlw	0
  2984   001BC8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2985   001BCA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2986   001BCC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2987   001BCE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2988   001BD0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2989   001BD2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2990   001BD4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2991   001BD6  0E01               	movlw	1
  2992   001BD8  6E12               	movwf	___aomod@sign^0,c
  2993   001BDA                     l2183:
  2994   001BDA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2995   001BDC  EFF4  F00D         	goto	u1060
  2996   001BE0  EFF2  F00D         	goto	u1061
  2997   001BE4                     u1061:
  2998   001BE4  EF04  F00E         	goto	l2187
  2999   001BE8                     u1060:
  3000   001BE8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3001   001BEA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3002   001BEC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3003   001BEE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3004   001BF0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3005   001BF2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3006   001BF4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3007   001BF6  6C09               	negf	___aomod@divisor^0,c
  3008   001BF8  0E00               	movlw	0
  3009   001BFA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3010   001BFC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3011   001BFE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3012   001C00  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3013   001C02  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3014   001C04  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3015   001C06  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3016   001C08                     l2187:
  3017   001C08  5009               	movf	___aomod@divisor^0,w,c
  3018   001C0A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3019   001C0C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3020   001C0E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3021   001C10  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3022   001C12  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3023   001C14  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3024   001C16  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3025   001C18  B4D8               	btfsc	status,2,c
  3026   001C1A  EF11  F00E         	goto	u1071
  3027   001C1E  EF13  F00E         	goto	u1070
  3028   001C22                     u1071:
  3029   001C22  EF5B  F00E         	goto	l2203
  3030   001C26                     u1070:
  3031   001C26  0E01               	movlw	1
  3032   001C28  6E11               	movwf	___aomod@counter^0,c
  3033   001C2A  EF21  F00E         	goto	l2193
  3034   001C2E                     l2191:
  3035   001C2E  90D8               	bcf	status,0,c
  3036   001C30  3609               	rlcf	___aomod@divisor^0,f,c
  3037   001C32  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3038   001C34  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3039   001C36  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3040   001C38  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3041   001C3A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3042   001C3C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3043   001C3E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3044   001C40  2A11               	incf	___aomod@counter^0,f,c
  3045   001C42                     l2193:
  3046   001C42  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3047   001C44  EF26  F00E         	goto	u1081
  3048   001C48  EF28  F00E         	goto	u1080
  3049   001C4C                     u1081:
  3050   001C4C  EF17  F00E         	goto	l2191
  3051   001C50                     u1080:
  3052   001C50                     l2195:
  3053   001C50  5009               	movf	___aomod@divisor^0,w,c
  3054   001C52  5C01               	subwf	___aomod@dividend^0,w,c
  3055   001C54  500A               	movf	(___aomod@divisor+1)^0,w,c
  3056   001C56  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3057   001C58  500B               	movf	(___aomod@divisor+2)^0,w,c
  3058   001C5A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3059   001C5C  500C               	movf	(___aomod@divisor+3)^0,w,c
  3060   001C5E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3061   001C60  500D               	movf	(___aomod@divisor+4)^0,w,c
  3062   001C62  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3063   001C64  500E               	movf	(___aomod@divisor+5)^0,w,c
  3064   001C66  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3065   001C68  500F               	movf	(___aomod@divisor+6)^0,w,c
  3066   001C6A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3067   001C6C  5010               	movf	(___aomod@divisor+7)^0,w,c
  3068   001C6E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3069   001C70  A0D8               	btfss	status,0,c
  3070   001C72  EF3D  F00E         	goto	u1091
  3071   001C76  EF3F  F00E         	goto	u1090
  3072   001C7A                     u1091:
  3073   001C7A  EF4F  F00E         	goto	l2199
  3074   001C7E                     u1090:
  3075   001C7E  5009               	movf	___aomod@divisor^0,w,c
  3076   001C80  5E01               	subwf	___aomod@dividend^0,f,c
  3077   001C82  500A               	movf	(___aomod@divisor+1)^0,w,c
  3078   001C84  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3079   001C86  500B               	movf	(___aomod@divisor+2)^0,w,c
  3080   001C88  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3081   001C8A  500C               	movf	(___aomod@divisor+3)^0,w,c
  3082   001C8C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3083   001C8E  500D               	movf	(___aomod@divisor+4)^0,w,c
  3084   001C90  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3085   001C92  500E               	movf	(___aomod@divisor+5)^0,w,c
  3086   001C94  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3087   001C96  500F               	movf	(___aomod@divisor+6)^0,w,c
  3088   001C98  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3089   001C9A  5010               	movf	(___aomod@divisor+7)^0,w,c
  3090   001C9C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3091   001C9E                     l2199:
  3092   001C9E  90D8               	bcf	status,0,c
  3093   001CA0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3094   001CA2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3095   001CA4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3096   001CA6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3097   001CA8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3098   001CAA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3099   001CAC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3100   001CAE  3209               	rrcf	___aomod@divisor^0,f,c
  3101   001CB0  2E11               	decfsz	___aomod@counter^0,f,c
  3102   001CB2  EF28  F00E         	goto	l2195
  3103   001CB6                     l2203:
  3104   001CB6  5012               	movf	___aomod@sign^0,w,c
  3105   001CB8  B4D8               	btfsc	status,2,c
  3106   001CBA  EF61  F00E         	goto	u1101
  3107   001CBE  EF63  F00E         	goto	u1100
  3108   001CC2                     u1101:
  3109   001CC2  EF73  F00E         	goto	l2207
  3110   001CC6                     u1100:
  3111   001CC6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3112   001CC8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3113   001CCA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3114   001CCC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3115   001CCE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3116   001CD0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3117   001CD2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3118   001CD4  6C01               	negf	___aomod@dividend^0,c
  3119   001CD6  0E00               	movlw	0
  3120   001CD8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3121   001CDA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3122   001CDC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3123   001CDE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3124   001CE0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3125   001CE2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3126   001CE4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3127   001CE6                     l2207:
  3128   001CE6  C001  F001         	movff	___aomod@dividend,?___aomod
  3129   001CEA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3130   001CEE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3131   001CF2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3132   001CF6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3133   001CFA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3134   001CFE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3135   001D02  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3136   001D06  0012               	return		;funcret
  3137   001D08                     __end_of___aomod:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function ___aodiv *****************
  3141 ;; Defined at:
  3142 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  dividend        8    0[COMRAM] long long 
  3145 ;;  divisor         8    8[COMRAM] long long 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  quotient        8   18[COMRAM] long long 
  3148 ;;  sign            1   17[COMRAM] unsigned char 
  3149 ;;  counter         1   16[COMRAM] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  8    0[COMRAM] long long 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3159 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;Total ram usage:       26 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 1
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_dtoa
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text12
  3174   001A1C                     __ptext12:
  3175                           	callstack 0
  3176   001A1C                     ___aodiv:
  3177                           	callstack 25
  3178   001A1C  0E00               	movlw	0
  3179   001A1E  6E12               	movwf	___aodiv@sign^0,c
  3180   001A20  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3181   001A22  EF17  F00D         	goto	u980
  3182   001A26  EF15  F00D         	goto	u981
  3183   001A2A                     u981:
  3184   001A2A  EF29  F00D         	goto	l2139
  3185   001A2E                     u980:
  3186   001A2E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3187   001A30  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3188   001A32  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3189   001A34  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3190   001A36  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3191   001A38  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3192   001A3A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3193   001A3C  6C09               	negf	___aodiv@divisor^0,c
  3194   001A3E  0E00               	movlw	0
  3195   001A40  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3196   001A42  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3197   001A44  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3198   001A46  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3199   001A48  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3200   001A4A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3201   001A4C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3202   001A4E  0E01               	movlw	1
  3203   001A50  6E12               	movwf	___aodiv@sign^0,c
  3204   001A52                     l2139:
  3205   001A52  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3206   001A54  EF30  F00D         	goto	u990
  3207   001A58  EF2E  F00D         	goto	u991
  3208   001A5C                     u991:
  3209   001A5C  EF42  F00D         	goto	l2145
  3210   001A60                     u990:
  3211   001A60  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3212   001A62  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3213   001A64  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3214   001A66  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3215   001A68  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3216   001A6A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3217   001A6C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3218   001A6E  6C01               	negf	___aodiv@dividend^0,c
  3219   001A70  0E00               	movlw	0
  3220   001A72  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3221   001A74  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3222   001A76  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3223   001A78  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3224   001A7A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3225   001A7C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3226   001A7E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3227   001A80  0E01               	movlw	1
  3228   001A82  1A12               	xorwf	___aodiv@sign^0,f,c
  3229   001A84                     l2145:
  3230   001A84  EE20  F013         	lfsr	2,___aodiv@quotient
  3231   001A88  0E07               	movlw	7
  3232   001A8A                     u1001:
  3233   001A8A  6ADE               	clrf	postinc2,c
  3234   001A8C  06E8               	decf	wreg,f,c
  3235   001A8E  E2FD               	bc	u1001
  3236   001A90  5009               	movf	___aodiv@divisor^0,w,c
  3237   001A92  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3238   001A94  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3239   001A96  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3240   001A98  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3241   001A9A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3242   001A9C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3243   001A9E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3244   001AA0  B4D8               	btfsc	status,2,c
  3245   001AA2  EF55  F00D         	goto	u1011
  3246   001AA6  EF57  F00D         	goto	u1010
  3247   001AAA                     u1011:
  3248   001AAA  EFA9  F00D         	goto	l2167
  3249   001AAE                     u1010:
  3250   001AAE  0E01               	movlw	1
  3251   001AB0  6E11               	movwf	___aodiv@counter^0,c
  3252   001AB2  EF65  F00D         	goto	l2153
  3253   001AB6                     l2151:
  3254   001AB6  90D8               	bcf	status,0,c
  3255   001AB8  3609               	rlcf	___aodiv@divisor^0,f,c
  3256   001ABA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3257   001ABC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3258   001ABE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3259   001AC0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3260   001AC2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3261   001AC4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3262   001AC6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3263   001AC8  2A11               	incf	___aodiv@counter^0,f,c
  3264   001ACA                     l2153:
  3265   001ACA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3266   001ACC  EF6A  F00D         	goto	u1021
  3267   001AD0  EF6C  F00D         	goto	u1020
  3268   001AD4                     u1021:
  3269   001AD4  EF5B  F00D         	goto	l2151
  3270   001AD8                     u1020:
  3271   001AD8                     l2155:
  3272   001AD8  90D8               	bcf	status,0,c
  3273   001ADA  3613               	rlcf	___aodiv@quotient^0,f,c
  3274   001ADC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3275   001ADE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3276   001AE0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3277   001AE2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3278   001AE4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3279   001AE6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3280   001AE8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3281   001AEA  5009               	movf	___aodiv@divisor^0,w,c
  3282   001AEC  5C01               	subwf	___aodiv@dividend^0,w,c
  3283   001AEE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3284   001AF0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3285   001AF2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3286   001AF4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3287   001AF6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3288   001AF8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3289   001AFA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3290   001AFC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3291   001AFE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3292   001B00  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3293   001B02  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3294   001B04  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3295   001B06  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3296   001B08  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3297   001B0A  A0D8               	btfss	status,0,c
  3298   001B0C  EF8A  F00D         	goto	u1031
  3299   001B10  EF8C  F00D         	goto	u1030
  3300   001B14                     u1031:
  3301   001B14  EF9D  F00D         	goto	l2163
  3302   001B18                     u1030:
  3303   001B18  5009               	movf	___aodiv@divisor^0,w,c
  3304   001B1A  5E01               	subwf	___aodiv@dividend^0,f,c
  3305   001B1C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3306   001B1E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3307   001B20  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3308   001B22  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3309   001B24  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3310   001B26  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3311   001B28  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3312   001B2A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3313   001B2C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3314   001B2E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3315   001B30  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3316   001B32  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3317   001B34  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3318   001B36  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3319   001B38  8013               	bsf	___aodiv@quotient^0,0,c
  3320   001B3A                     l2163:
  3321   001B3A  90D8               	bcf	status,0,c
  3322   001B3C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3323   001B3E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3324   001B40  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3325   001B42  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3326   001B44  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3327   001B46  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3328   001B48  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3329   001B4A  3209               	rrcf	___aodiv@divisor^0,f,c
  3330   001B4C  2E11               	decfsz	___aodiv@counter^0,f,c
  3331   001B4E  EF6C  F00D         	goto	l2155
  3332   001B52                     l2167:
  3333   001B52  5012               	movf	___aodiv@sign^0,w,c
  3334   001B54  B4D8               	btfsc	status,2,c
  3335   001B56  EFAF  F00D         	goto	u1041
  3336   001B5A  EFB1  F00D         	goto	u1040
  3337   001B5E                     u1041:
  3338   001B5E  EFC1  F00D         	goto	l2171
  3339   001B62                     u1040:
  3340   001B62  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3341   001B64  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3342   001B66  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3343   001B68  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3344   001B6A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3345   001B6C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3346   001B6E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3347   001B70  6C13               	negf	___aodiv@quotient^0,c
  3348   001B72  0E00               	movlw	0
  3349   001B74  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3350   001B76  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3351   001B78  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3352   001B7A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3353   001B7C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3354   001B7E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3355   001B80  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3356   001B82                     l2171:
  3357   001B82  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3358   001B86  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3359   001B8A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3360   001B8E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3361   001B92  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3362   001B96  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3363   001B9A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3364   001B9E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3365   001BA2  0012               	return		;funcret
  3366   001BA4                     __end_of___aodiv:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function _sendStringSerial4 *****************
  3370 ;; Defined at:
  3371 ;;		line 37 in file "../serial.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  string          2    1[COMRAM] PTR unsigned char 
  3374 ;;		 -> main@readout3(100), main@readout2(100), main@readout1(100), 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 2
  3393 ;; This function calls:
  3394 ;;		_sendCharSerial4
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text13
  3401   002B2A                     __ptext13:
  3402                           	callstack 0
  3403   002B2A                     _sendStringSerial4:
  3404                           	callstack 28
  3405   002B2A                     
  3406                           ;../serial.c: 40:     while (*string != 0)
  3407   002B2A  EFA0  F015         	goto	l2771
  3408   002B2E                     l2767:
  3409                           
  3410                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  3411   002B2E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3412   002B32  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3413   002B36  50DF               	movf	indf2,w,c
  3414   002B38  EC2A  F016         	call	_sendCharSerial4
  3415   002B3C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3416   002B3E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3417   002B40                     l2771:
  3418                           
  3419                           ;../serial.c: 40:     while (*string != 0)
  3420   002B40  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3421   002B44  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3422   002B48  50DF               	movf	indf2,w,c
  3423   002B4A  A4D8               	btfss	status,2,c
  3424   002B4C  EFAA  F015         	goto	u1691
  3425   002B50  EFAC  F015         	goto	u1690
  3426   002B54                     u1691:
  3427   002B54  EF97  F015         	goto	l2767
  3428   002B58                     u1690:
  3429   002B58  0012               	return		;funcret
  3430   002B5A                     __end_of_sendStringSerial4:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _sendCharSerial4 *****************
  3434 ;; Defined at:
  3435 ;;		line 30 in file "../serial.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  charToSend      1    wreg     unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  charToSend      1    0[COMRAM] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;Total ram usage:        1 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_sendStringSerial4
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text14
  3464   002C54                     __ptext14:
  3465                           	callstack 0
  3466   002C54                     _sendCharSerial4:
  3467                           	callstack 28
  3468                           
  3469                           ;incstack = 0
  3470                           ;sendCharSerial4@charToSend stored from wreg
  3471   002C54  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3472   002C56                     l409:
  3473   002C56  010E               	movlb	14	; () banked
  3474   002C58  A537               	btfss	55,2,b	;volatile
  3475   002C5A  EF31  F016         	goto	u1471
  3476   002C5E  EF33  F016         	goto	u1470
  3477   002C62                     u1471:
  3478   002C62  EF2B  F016         	goto	l409
  3479   002C66                     u1470:
  3480   002C66                     
  3481                           ; BSR set to: 14
  3482                           ;../serial.c: 32:     TX4REG = charToSend;
  3483   002C66  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3484   002C6A                     
  3485                           ; BSR set to: 14
  3486   002C6A  0012               	return		;funcret
  3487   002C6C                     __end_of_sendCharSerial4:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _motor_action *****************
  3491 ;; Defined at:
  3492 ;;		line 181 in file "../dc_motor.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  color           2   33[COMRAM] unsigned int 
  3495 ;;  l               2   35[COMRAM] PTR struct DC_motor
  3496 ;;		 -> main@motorL(9), 
  3497 ;;  r               2   37[COMRAM] PTR struct DC_motor
  3498 ;;		 -> main@motorR(9), 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3510 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;Total ram usage:        8 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 4
  3517 ;; This function calls:
  3518 ;;		_left_135
  3519 ;;		_left_90
  3520 ;;		_reverse
  3521 ;;		_right_135
  3522 ;;		_right_90
  3523 ;;		_spin_180
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text15
  3530   001E66                     __ptext15:
  3531                           	callstack 0
  3532   001E66                     _motor_action:
  3533                           	callstack 26
  3534   001E66                     
  3535                           ;../dc_motor.c: 181: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 182: {;../dc_motor.c: 183:     switch (color){
  3536   001E66  EF9D  F00F         	goto	l2831
  3537   001E6A                     l2815:
  3538                           
  3539                           ;../dc_motor.c: 185:             right_90(l,r);
  3540   001E6A  C024  F01A         	movff	motor_action@l,right_90@mL
  3541   001E6E  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  3542   001E72  C026  F01C         	movff	motor_action@r,right_90@mR
  3543   001E76  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  3544   001E7A  EC41  F011         	call	_right_90	;wreg free
  3545                           
  3546                           ;../dc_motor.c: 186:             break;
  3547   001E7E  EFC7  F00F         	goto	l315
  3548   001E82                     l2817:
  3549                           
  3550                           ;../dc_motor.c: 188:             left_90(l,r);
  3551   001E82  C024  F01A         	movff	motor_action@l,left_90@mL
  3552   001E86  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  3553   001E8A  C026  F01C         	movff	motor_action@r,left_90@mR
  3554   001E8E  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  3555   001E92  EC93  F011         	call	_left_90	;wreg free
  3556                           
  3557                           ;../dc_motor.c: 189:             break;
  3558   001E96  EFC7  F00F         	goto	l315
  3559   001E9A                     l2819:
  3560                           
  3561                           ;../dc_motor.c: 191:             spin_180(l,r);
  3562   001E9A  C024  F01A         	movff	motor_action@l,spin_180@mL
  3563   001E9E  C025  F01B         	movff	motor_action@l+1,spin_180@mL+1
  3564   001EA2  C026  F01C         	movff	motor_action@r,spin_180@mR
  3565   001EA6  C027  F01D         	movff	motor_action@r+1,spin_180@mR+1
  3566   001EAA  ECE5  F011         	call	_spin_180	;wreg free
  3567                           
  3568                           ;../dc_motor.c: 192:             break;
  3569   001EAE  EFC7  F00F         	goto	l315
  3570   001EB2                     l2821:
  3571                           
  3572                           ;../dc_motor.c: 194:             reverse(l,r);
  3573   001EB2  C024  F01A         	movff	motor_action@l,reverse@mL
  3574   001EB6  C025  F01B         	movff	motor_action@l+1,reverse@mL+1
  3575   001EBA  C026  F01C         	movff	motor_action@r,reverse@mR
  3576   001EBE  C027  F01D         	movff	motor_action@r+1,reverse@mR+1
  3577   001EC2  EC87  F012         	call	_reverse	;wreg free
  3578                           
  3579                           ;../dc_motor.c: 195:             right_90(l,r);
  3580   001EC6  C024  F01A         	movff	motor_action@l,right_90@mL
  3581   001ECA  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  3582   001ECE  C026  F01C         	movff	motor_action@r,right_90@mR
  3583   001ED2  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  3584   001ED6  EC41  F011         	call	_right_90	;wreg free
  3585                           
  3586                           ;../dc_motor.c: 196:             break;
  3587   001EDA  EFC7  F00F         	goto	l315
  3588   001EDE                     l2823:
  3589                           
  3590                           ;../dc_motor.c: 198:             reverse(l,r);
  3591   001EDE  C024  F01A         	movff	motor_action@l,reverse@mL
  3592   001EE2  C025  F01B         	movff	motor_action@l+1,reverse@mL+1
  3593   001EE6  C026  F01C         	movff	motor_action@r,reverse@mR
  3594   001EEA  C027  F01D         	movff	motor_action@r+1,reverse@mR+1
  3595   001EEE  EC87  F012         	call	_reverse	;wreg free
  3596                           
  3597                           ;../dc_motor.c: 199:             left_90(l,r);
  3598   001EF2  C024  F01A         	movff	motor_action@l,left_90@mL
  3599   001EF6  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  3600   001EFA  C026  F01C         	movff	motor_action@r,left_90@mR
  3601   001EFE  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  3602   001F02  EC93  F011         	call	_left_90	;wreg free
  3603                           
  3604                           ;../dc_motor.c: 200:             break;
  3605   001F06  EFC7  F00F         	goto	l315
  3606   001F0A                     l2825:
  3607                           
  3608                           ;../dc_motor.c: 202:             right_135(l,r);
  3609   001F0A  C024  F01A         	movff	motor_action@l,right_135@mL
  3610   001F0E  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  3611   001F12  C026  F01C         	movff	motor_action@r,right_135@mR
  3612   001F16  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  3613   001F1A  EC36  F012         	call	_right_135	;wreg free
  3614                           
  3615                           ;../dc_motor.c: 203:             break;
  3616   001F1E  EFC7  F00F         	goto	l315
  3617   001F22                     l2827:
  3618                           
  3619                           ;../dc_motor.c: 205:             left_135(l,r);
  3620   001F22  C024  F01A         	movff	motor_action@l,left_135@mL
  3621   001F26  C025  F01B         	movff	motor_action@l+1,left_135@mL+1
  3622   001F2A  C026  F01C         	movff	motor_action@r,left_135@mR
  3623   001F2E  C027  F01D         	movff	motor_action@r+1,left_135@mR+1
  3624   001F32  ECD8  F012         	call	_left_135	;wreg free
  3625                           
  3626                           ;../dc_motor.c: 206:             break;
  3627   001F36  EFC7  F00F         	goto	l315
  3628   001F3A                     l2831:
  3629   001F3A  C022  F028         	movff	motor_action@color,??_motor_action
  3630   001F3E  C023  F029         	movff	motor_action@color+1,??_motor_action+1
  3631                           
  3632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3633                           ; Switch size 1, requested type "simple"
  3634                           ; Number of cases is 1, Range of values is 0 to 0
  3635                           ; switch strategies available:
  3636                           ; Name         Instructions Cycles
  3637                           ; simple_byte            4     3 (average)
  3638                           ;	Chosen strategy is simple_byte
  3639   001F42  5029               	movf	(??_motor_action+1)^0,w,c
  3640   001F44  0A00               	xorlw	0	; case 0
  3641   001F46  B4D8               	btfsc	status,2,c
  3642   001F48  EFA8  F00F         	goto	l3019
  3643   001F4C  EFC7  F00F         	goto	l315
  3644   001F50                     l3019:
  3645                           
  3646                           ; Switch size 1, requested type "simple"
  3647                           ; Number of cases is 7, Range of values is 1 to 7
  3648                           ; switch strategies available:
  3649                           ; Name         Instructions Cycles
  3650                           ; simple_byte           22    12 (average)
  3651                           ;	Chosen strategy is simple_byte
  3652   001F50  5028               	movf	??_motor_action^0,w,c
  3653   001F52  0A01               	xorlw	1	; case 1
  3654   001F54  B4D8               	btfsc	status,2,c
  3655   001F56  EF35  F00F         	goto	l2815
  3656   001F5A  0A03               	xorlw	3	; case 2
  3657   001F5C  B4D8               	btfsc	status,2,c
  3658   001F5E  EF41  F00F         	goto	l2817
  3659   001F62  0A01               	xorlw	1	; case 3
  3660   001F64  B4D8               	btfsc	status,2,c
  3661   001F66  EF4D  F00F         	goto	l2819
  3662   001F6A  0A07               	xorlw	7	; case 4
  3663   001F6C  B4D8               	btfsc	status,2,c
  3664   001F6E  EF59  F00F         	goto	l2821
  3665   001F72  0A01               	xorlw	1	; case 5
  3666   001F74  B4D8               	btfsc	status,2,c
  3667   001F76  EF6F  F00F         	goto	l2823
  3668   001F7A  0A03               	xorlw	3	; case 6
  3669   001F7C  B4D8               	btfsc	status,2,c
  3670   001F7E  EF85  F00F         	goto	l2825
  3671   001F82  0A01               	xorlw	1	; case 7
  3672   001F84  B4D8               	btfsc	status,2,c
  3673   001F86  EF91  F00F         	goto	l2827
  3674   001F8A  EFC7  F00F         	goto	l315
  3675   001F8E                     l315:
  3676   001F8E  0012               	return		;funcret
  3677   001F90                     __end_of_motor_action:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _spin_180 *****************
  3681 ;; Defined at:
  3682 ;;		line 136 in file "../dc_motor.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3685 ;;		 -> main@motorL(9), 
  3686 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3687 ;;		 -> main@motorR(9), 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  i               2   31[COMRAM] int 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3703 ;;Total ram usage:        8 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 3
  3706 ;; This function calls:
  3707 ;;		_setMotorPWM
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;;		_motor_action
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text16
  3715   0023CA                     __ptext16:
  3716                           	callstack 0
  3717   0023CA                     _spin_180:
  3718                           	callstack 27
  3719   0023CA                     
  3720                           ;../dc_motor.c: 136: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 137: {;../dc_motor.c: 138:     mL->direction = 1;
  3721   0023CA  EE20 F001          	lfsr	2,1
  3722   0023CE  501A               	movf	spin_180@mL^0,w,c
  3723   0023D0  26D9               	addwf	fsr2l,f,c
  3724   0023D2  501B               	movf	(spin_180@mL+1)^0,w,c
  3725   0023D4  22DA               	addwfc	fsr2h,f,c
  3726   0023D6  0E01               	movlw	1
  3727   0023D8  6EDF               	movwf	indf2,c
  3728                           
  3729                           ;../dc_motor.c: 139:     mR->direction = 0;
  3730   0023DA  EE20 F001          	lfsr	2,1
  3731   0023DE  501C               	movf	spin_180@mR^0,w,c
  3732   0023E0  26D9               	addwf	fsr2l,f,c
  3733   0023E2  501D               	movf	(spin_180@mR+1)^0,w,c
  3734   0023E4  22DA               	addwfc	fsr2h,f,c
  3735   0023E6  0E00               	movlw	0
  3736   0023E8  6EDF               	movwf	indf2,c
  3737   0023EA                     
  3738                           ;../dc_motor.c: 140:     for (int i = 0;i<50;i = i + 2)
  3739   0023EA  0E00               	movlw	0
  3740   0023EC  6E21               	movwf	(spin_180@i+1)^0,c
  3741   0023EE  0E00               	movlw	0
  3742   0023F0  6E20               	movwf	spin_180@i^0,c
  3743   0023F2                     l2455:
  3744                           
  3745                           ;../dc_motor.c: 141:     {;../dc_motor.c: 142:         mL->power = i;
  3746   0023F2  C01A  FFD9         	movff	spin_180@mL,fsr2l
  3747   0023F6  C01B  FFDA         	movff	spin_180@mL+1,fsr2h
  3748   0023FA  C020  FFDF         	movff	spin_180@i,indf2
  3749   0023FE                     
  3750                           ;../dc_motor.c: 143:         mR->power = 50 + i;
  3751   0023FE  5020               	movf	spin_180@i^0,w,c
  3752   002400  0F32               	addlw	50
  3753   002402  C01C  FFD9         	movff	spin_180@mR,fsr2l
  3754   002406  C01D  FFDA         	movff	spin_180@mR+1,fsr2h
  3755   00240A  6EDF               	movwf	indf2,c
  3756   00240C                     
  3757                           ;../dc_motor.c: 144:         setMotorPWM(mL);
  3758   00240C  C01A  F00F         	movff	spin_180@mL,setMotorPWM@m
  3759   002410  C01B  F010         	movff	spin_180@mL+1,setMotorPWM@m+1
  3760   002414  EC24  F00C         	call	_setMotorPWM	;wreg free
  3761   002418                     
  3762                           ;../dc_motor.c: 145:         setMotorPWM(mR);
  3763   002418  C01C  F00F         	movff	spin_180@mR,setMotorPWM@m
  3764   00241C  C01D  F010         	movff	spin_180@mR+1,setMotorPWM@m+1
  3765   002420  EC24  F00C         	call	_setMotorPWM	;wreg free
  3766   002424                     
  3767                           ;../dc_motor.c: 146:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3768   002424  0E35               	movlw	53
  3769   002426                     u1907:
  3770   002426  2EE8               	decfsz	wreg,f,c
  3771   002428  D7FE               	bra	u1907
  3772   00242A  F000               	nop	
  3773   00242C                     
  3774                           ;../dc_motor.c: 147:     }
  3775   00242C  0E02               	movlw	2
  3776   00242E  2420               	addwf	spin_180@i^0,w,c
  3777   002430  6E20               	movwf	spin_180@i^0,c
  3778   002432  0E00               	movlw	0
  3779   002434  2021               	addwfc	(spin_180@i+1)^0,w,c
  3780   002436  6E21               	movwf	(spin_180@i+1)^0,c
  3781   002438  BE21               	btfsc	(spin_180@i+1)^0,7,c
  3782   00243A  EF28  F012         	goto	u1411
  3783   00243E  5021               	movf	(spin_180@i+1)^0,w,c
  3784   002440  E109               	bnz	u1410
  3785   002442  0E32               	movlw	50
  3786   002444  5C20               	subwf	spin_180@i^0,w,c
  3787   002446  A0D8               	btfss	status,0,c
  3788   002448  EF28  F012         	goto	u1411
  3789   00244C  EF2A  F012         	goto	u1410
  3790   002450                     u1411:
  3791   002450  EFF9  F011         	goto	l2455
  3792   002454                     u1410:
  3793   002454                     
  3794                           ;../dc_motor.c: 148:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3795   002454  0E18               	movlw	24
  3796   002456  6E1F               	movwf	(??_spin_180+1)^0,c
  3797   002458  0E8A               	movlw	138
  3798   00245A  6E1E               	movwf	??_spin_180^0,c
  3799   00245C  0EE8               	movlw	232
  3800   00245E                     u1917:
  3801   00245E  2EE8               	decfsz	wreg,f,c
  3802   002460  D7FE               	bra	u1917
  3803   002462  2E1E               	decfsz	??_spin_180^0,f,c
  3804   002464  D7FC               	bra	u1917
  3805   002466  2E1F               	decfsz	(??_spin_180+1)^0,f,c
  3806   002468  D7FA               	bra	u1917
  3807   00246A  0012               	return		;funcret
  3808   00246C                     __end_of_spin_180:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _right_90 *****************
  3812 ;; Defined at:
  3813 ;;		line 106 in file "../dc_motor.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3816 ;;		 -> main@motorL(9), 
  3817 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3818 ;;		 -> main@motorR(9), 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  i               2   31[COMRAM] int 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;Total ram usage:        8 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 3
  3837 ;; This function calls:
  3838 ;;		_setMotorPWM
  3839 ;; This function is called by:
  3840 ;;		_motor_action
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text17
  3845   002282                     __ptext17:
  3846                           	callstack 0
  3847   002282                     _right_90:
  3848                           	callstack 26
  3849   002282                     
  3850                           ;../dc_motor.c: 106: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 107: {;../dc_motor.c: 108:     mL->direction = 1;
  3851   002282  EE20 F001          	lfsr	2,1
  3852   002286  501A               	movf	right_90@mL^0,w,c
  3853   002288  26D9               	addwf	fsr2l,f,c
  3854   00228A  501B               	movf	(right_90@mL+1)^0,w,c
  3855   00228C  22DA               	addwfc	fsr2h,f,c
  3856   00228E  0E01               	movlw	1
  3857   002290  6EDF               	movwf	indf2,c
  3858                           
  3859                           ;../dc_motor.c: 109:     mR->direction = 0;
  3860   002292  EE20 F001          	lfsr	2,1
  3861   002296  501C               	movf	right_90@mR^0,w,c
  3862   002298  26D9               	addwf	fsr2l,f,c
  3863   00229A  501D               	movf	(right_90@mR+1)^0,w,c
  3864   00229C  22DA               	addwfc	fsr2h,f,c
  3865   00229E  0E00               	movlw	0
  3866   0022A0  6EDF               	movwf	indf2,c
  3867   0022A2                     
  3868                           ;../dc_motor.c: 110:     for (int i = 0;i<50;i = i + 2)
  3869   0022A2  0E00               	movlw	0
  3870   0022A4  6E21               	movwf	(right_90@i+1)^0,c
  3871   0022A6  0E00               	movlw	0
  3872   0022A8  6E20               	movwf	right_90@i^0,c
  3873   0022AA                     l2501:
  3874                           
  3875                           ;../dc_motor.c: 111:     {;../dc_motor.c: 112:         mL->power = i;
  3876   0022AA  C01A  FFD9         	movff	right_90@mL,fsr2l
  3877   0022AE  C01B  FFDA         	movff	right_90@mL+1,fsr2h
  3878   0022B2  C020  FFDF         	movff	right_90@i,indf2
  3879   0022B6                     
  3880                           ;../dc_motor.c: 113:         mR->power = 50 + i;
  3881   0022B6  5020               	movf	right_90@i^0,w,c
  3882   0022B8  0F32               	addlw	50
  3883   0022BA  C01C  FFD9         	movff	right_90@mR,fsr2l
  3884   0022BE  C01D  FFDA         	movff	right_90@mR+1,fsr2h
  3885   0022C2  6EDF               	movwf	indf2,c
  3886   0022C4                     
  3887                           ;../dc_motor.c: 114:         setMotorPWM(mL);
  3888   0022C4  C01A  F00F         	movff	right_90@mL,setMotorPWM@m
  3889   0022C8  C01B  F010         	movff	right_90@mL+1,setMotorPWM@m+1
  3890   0022CC  EC24  F00C         	call	_setMotorPWM	;wreg free
  3891   0022D0                     
  3892                           ;../dc_motor.c: 115:         setMotorPWM(mR);
  3893   0022D0  C01C  F00F         	movff	right_90@mR,setMotorPWM@m
  3894   0022D4  C01D  F010         	movff	right_90@mR+1,setMotorPWM@m+1
  3895   0022D8  EC24  F00C         	call	_setMotorPWM	;wreg free
  3896   0022DC                     
  3897                           ;../dc_motor.c: 116:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3898   0022DC  0E35               	movlw	53
  3899   0022DE                     u1927:
  3900   0022DE  2EE8               	decfsz	wreg,f,c
  3901   0022E0  D7FE               	bra	u1927
  3902   0022E2  F000               	nop	
  3903   0022E4                     
  3904                           ;../dc_motor.c: 117:     }
  3905   0022E4  0E02               	movlw	2
  3906   0022E6  2420               	addwf	right_90@i^0,w,c
  3907   0022E8  6E20               	movwf	right_90@i^0,c
  3908   0022EA  0E00               	movlw	0
  3909   0022EC  2021               	addwfc	(right_90@i+1)^0,w,c
  3910   0022EE  6E21               	movwf	(right_90@i+1)^0,c
  3911   0022F0  BE21               	btfsc	(right_90@i+1)^0,7,c
  3912   0022F2  EF84  F011         	goto	u1431
  3913   0022F6  5021               	movf	(right_90@i+1)^0,w,c
  3914   0022F8  E109               	bnz	u1430
  3915   0022FA  0E32               	movlw	50
  3916   0022FC  5C20               	subwf	right_90@i^0,w,c
  3917   0022FE  A0D8               	btfss	status,0,c
  3918   002300  EF84  F011         	goto	u1431
  3919   002304  EF86  F011         	goto	u1430
  3920   002308                     u1431:
  3921   002308  EF55  F011         	goto	l2501
  3922   00230C                     u1430:
  3923   00230C                     
  3924                           ;../dc_motor.c: 118:     _delay((unsigned long)((165)*(64000000/4000.0)));
  3925   00230C  0E0E               	movlw	14
  3926   00230E  6E1F               	movwf	(??_right_90+1)^0,c
  3927   002310  0E65               	movlw	101
  3928   002312  6E1E               	movwf	??_right_90^0,c
  3929   002314  0E87               	movlw	135
  3930   002316                     u1937:
  3931   002316  2EE8               	decfsz	wreg,f,c
  3932   002318  D7FE               	bra	u1937
  3933   00231A  2E1E               	decfsz	??_right_90^0,f,c
  3934   00231C  D7FC               	bra	u1937
  3935   00231E  2E1F               	decfsz	(??_right_90+1)^0,f,c
  3936   002320  D7FA               	bra	u1937
  3937   002322  F000               	nop	
  3938   002324  0012               	return		;funcret
  3939   002326                     __end_of_right_90:
  3940                           	callstack 0
  3941                           
  3942 ;; *************** function _right_135 *****************
  3943 ;; Defined at:
  3944 ;;		line 151 in file "../dc_motor.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3947 ;;		 -> main@motorL(9), 
  3948 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3949 ;;		 -> main@motorR(9), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  i               2   31[COMRAM] int 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;Total ram usage:        8 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; Hardware stack levels required when called: 3
  3968 ;; This function calls:
  3969 ;;		_setMotorPWM
  3970 ;; This function is called by:
  3971 ;;		_motor_action
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text18
  3976   00246C                     __ptext18:
  3977                           	callstack 0
  3978   00246C                     _right_135:
  3979                           	callstack 26
  3980   00246C                     
  3981                           ;../dc_motor.c: 151: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 152: {;../dc_motor.c: 153:     mL->direction = 1;
  3982   00246C  EE20 F001          	lfsr	2,1
  3983   002470  501A               	movf	right_135@mL^0,w,c
  3984   002472  26D9               	addwf	fsr2l,f,c
  3985   002474  501B               	movf	(right_135@mL+1)^0,w,c
  3986   002476  22DA               	addwfc	fsr2h,f,c
  3987   002478  0E01               	movlw	1
  3988   00247A  6EDF               	movwf	indf2,c
  3989                           
  3990                           ;../dc_motor.c: 154:     mR->direction = 0;
  3991   00247C  EE20 F001          	lfsr	2,1
  3992   002480  501C               	movf	right_135@mR^0,w,c
  3993   002482  26D9               	addwf	fsr2l,f,c
  3994   002484  501D               	movf	(right_135@mR+1)^0,w,c
  3995   002486  22DA               	addwfc	fsr2h,f,c
  3996   002488  0E00               	movlw	0
  3997   00248A  6EDF               	movwf	indf2,c
  3998   00248C                     
  3999                           ;../dc_motor.c: 155:     for (int i = 0;i<50;i = i + 2)
  4000   00248C  0E00               	movlw	0
  4001   00248E  6E21               	movwf	(right_135@i+1)^0,c
  4002   002490  0E00               	movlw	0
  4003   002492  6E20               	movwf	right_135@i^0,c
  4004   002494                     l2549:
  4005                           
  4006                           ;../dc_motor.c: 156:     {;../dc_motor.c: 157:         mL->power = i;
  4007   002494  C01A  FFD9         	movff	right_135@mL,fsr2l
  4008   002498  C01B  FFDA         	movff	right_135@mL+1,fsr2h
  4009   00249C  C020  FFDF         	movff	right_135@i,indf2
  4010   0024A0                     
  4011                           ;../dc_motor.c: 158:         mR->power = 50 + i;
  4012   0024A0  5020               	movf	right_135@i^0,w,c
  4013   0024A2  0F32               	addlw	50
  4014   0024A4  C01C  FFD9         	movff	right_135@mR,fsr2l
  4015   0024A8  C01D  FFDA         	movff	right_135@mR+1,fsr2h
  4016   0024AC  6EDF               	movwf	indf2,c
  4017   0024AE                     
  4018                           ;../dc_motor.c: 159:         setMotorPWM(mL);
  4019   0024AE  C01A  F00F         	movff	right_135@mL,setMotorPWM@m
  4020   0024B2  C01B  F010         	movff	right_135@mL+1,setMotorPWM@m+1
  4021   0024B6  EC24  F00C         	call	_setMotorPWM	;wreg free
  4022   0024BA                     
  4023                           ;../dc_motor.c: 160:         setMotorPWM(mR);
  4024   0024BA  C01C  F00F         	movff	right_135@mR,setMotorPWM@m
  4025   0024BE  C01D  F010         	movff	right_135@mR+1,setMotorPWM@m+1
  4026   0024C2  EC24  F00C         	call	_setMotorPWM	;wreg free
  4027   0024C6                     
  4028                           ;../dc_motor.c: 161:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4029   0024C6  0E35               	movlw	53
  4030   0024C8                     u1947:
  4031   0024C8  2EE8               	decfsz	wreg,f,c
  4032   0024CA  D7FE               	bra	u1947
  4033   0024CC  F000               	nop	
  4034   0024CE                     
  4035                           ;../dc_motor.c: 162:     }
  4036   0024CE  0E02               	movlw	2
  4037   0024D0  2420               	addwf	right_135@i^0,w,c
  4038   0024D2  6E20               	movwf	right_135@i^0,c
  4039   0024D4  0E00               	movlw	0
  4040   0024D6  2021               	addwfc	(right_135@i+1)^0,w,c
  4041   0024D8  6E21               	movwf	(right_135@i+1)^0,c
  4042   0024DA  BE21               	btfsc	(right_135@i+1)^0,7,c
  4043   0024DC  EF79  F012         	goto	u1451
  4044   0024E0  5021               	movf	(right_135@i+1)^0,w,c
  4045   0024E2  E109               	bnz	u1450
  4046   0024E4  0E32               	movlw	50
  4047   0024E6  5C20               	subwf	right_135@i^0,w,c
  4048   0024E8  A0D8               	btfss	status,0,c
  4049   0024EA  EF79  F012         	goto	u1451
  4050   0024EE  EF7B  F012         	goto	u1450
  4051   0024F2                     u1451:
  4052   0024F2  EF4A  F012         	goto	l2549
  4053   0024F6                     u1450:
  4054   0024F6                     
  4055                           ;../dc_motor.c: 163:     _delay((unsigned long)((230)*(64000000/4000.0)));
  4056   0024F6  0E13               	movlw	19
  4057   0024F8  6E1F               	movwf	(??_right_135+1)^0,c
  4058   0024FA  0EAC               	movlw	172
  4059   0024FC  6E1E               	movwf	??_right_135^0,c
  4060   0024FE  0E2A               	movlw	42
  4061   002500                     u1957:
  4062   002500  2EE8               	decfsz	wreg,f,c
  4063   002502  D7FE               	bra	u1957
  4064   002504  2E1E               	decfsz	??_right_135^0,f,c
  4065   002506  D7FC               	bra	u1957
  4066   002508  2E1F               	decfsz	(??_right_135+1)^0,f,c
  4067   00250A  D7FA               	bra	u1957
  4068   00250C  0012               	return		;funcret
  4069   00250E                     __end_of_right_135:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _reverse *****************
  4073 ;; Defined at:
  4074 ;;		line 91 in file "../dc_motor.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4077 ;;		 -> main@motorL(9), 
  4078 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4079 ;;		 -> main@motorR(9), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  i               2   31[COMRAM] int 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4091 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;Total ram usage:        8 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 3
  4098 ;; This function calls:
  4099 ;;		_setMotorPWM
  4100 ;; This function is called by:
  4101 ;;		_motor_action
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text19
  4106   00250E                     __ptext19:
  4107                           	callstack 0
  4108   00250E                     _reverse:
  4109                           	callstack 26
  4110   00250E                     
  4111                           ;../dc_motor.c: 91: void reverse (struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 92: {;../dc_motor.c: 93:     mL->direction = 0;
  4112   00250E  EE20 F001          	lfsr	2,1
  4113   002512  501A               	movf	reverse@mL^0,w,c
  4114   002514  26D9               	addwf	fsr2l,f,c
  4115   002516  501B               	movf	(reverse@mL+1)^0,w,c
  4116   002518  22DA               	addwfc	fsr2h,f,c
  4117   00251A  0E00               	movlw	0
  4118   00251C  6EDF               	movwf	indf2,c
  4119                           
  4120                           ;../dc_motor.c: 94:     mR->direction = 0;
  4121   00251E  EE20 F001          	lfsr	2,1
  4122   002522  501C               	movf	reverse@mR^0,w,c
  4123   002524  26D9               	addwf	fsr2l,f,c
  4124   002526  501D               	movf	(reverse@mR+1)^0,w,c
  4125   002528  22DA               	addwfc	fsr2h,f,c
  4126   00252A  0E00               	movlw	0
  4127   00252C  6EDF               	movwf	indf2,c
  4128   00252E                     
  4129                           ;../dc_motor.c: 95:     for (int i=0;i<51;i=i + 2)
  4130   00252E  0E00               	movlw	0
  4131   002530  6E21               	movwf	(reverse@i+1)^0,c
  4132   002532  0E00               	movlw	0
  4133   002534  6E20               	movwf	reverse@i^0,c
  4134   002536                     l2479:
  4135                           
  4136                           ;../dc_motor.c: 96:     {;../dc_motor.c: 97:         mL->power = i;
  4137   002536  C01A  FFD9         	movff	reverse@mL,fsr2l
  4138   00253A  C01B  FFDA         	movff	reverse@mL+1,fsr2h
  4139   00253E  C020  FFDF         	movff	reverse@i,indf2
  4140                           
  4141                           ;../dc_motor.c: 98:         mR->power = i;
  4142   002542  C01C  FFD9         	movff	reverse@mR,fsr2l
  4143   002546  C01D  FFDA         	movff	reverse@mR+1,fsr2h
  4144   00254A  C020  FFDF         	movff	reverse@i,indf2
  4145   00254E                     
  4146                           ;../dc_motor.c: 99:         setMotorPWM(mL);
  4147   00254E  C01A  F00F         	movff	reverse@mL,setMotorPWM@m
  4148   002552  C01B  F010         	movff	reverse@mL+1,setMotorPWM@m+1
  4149   002556  EC24  F00C         	call	_setMotorPWM	;wreg free
  4150   00255A                     
  4151                           ;../dc_motor.c: 100:         setMotorPWM(mR);
  4152   00255A  C01C  F00F         	movff	reverse@mR,setMotorPWM@m
  4153   00255E  C01D  F010         	movff	reverse@mR+1,setMotorPWM@m+1
  4154   002562  EC24  F00C         	call	_setMotorPWM	;wreg free
  4155   002566                     
  4156                           ;../dc_motor.c: 101:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4157   002566  0E35               	movlw	53
  4158   002568                     u1967:
  4159   002568  2EE8               	decfsz	wreg,f,c
  4160   00256A  D7FE               	bra	u1967
  4161   00256C  F000               	nop	
  4162   00256E                     
  4163                           ;../dc_motor.c: 102:     }
  4164   00256E  0E02               	movlw	2
  4165   002570  2420               	addwf	reverse@i^0,w,c
  4166   002572  6E20               	movwf	reverse@i^0,c
  4167   002574  0E00               	movlw	0
  4168   002576  2021               	addwfc	(reverse@i+1)^0,w,c
  4169   002578  6E21               	movwf	(reverse@i+1)^0,c
  4170   00257A  BE21               	btfsc	(reverse@i+1)^0,7,c
  4171   00257C  EFC9  F012         	goto	u1421
  4172   002580  5021               	movf	(reverse@i+1)^0,w,c
  4173   002582  E109               	bnz	u1420
  4174   002584  0E33               	movlw	51
  4175   002586  5C20               	subwf	reverse@i^0,w,c
  4176   002588  A0D8               	btfss	status,0,c
  4177   00258A  EFC9  F012         	goto	u1421
  4178   00258E  EFCB  F012         	goto	u1420
  4179   002592                     u1421:
  4180   002592  EF9B  F012         	goto	l2479
  4181   002596                     u1420:
  4182   002596                     
  4183                           ;../dc_motor.c: 103:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  4184   002596  0E5A               	movlw	90
  4185   002598  6E1F               	movwf	(??_reverse+1)^0,c
  4186   00259A  0E49               	movlw	73
  4187   00259C  6E1E               	movwf	??_reverse^0,c
  4188   00259E  0EE7               	movlw	231
  4189   0025A0                     u1977:
  4190   0025A0  2EE8               	decfsz	wreg,f,c
  4191   0025A2  D7FE               	bra	u1977
  4192   0025A4  2E1E               	decfsz	??_reverse^0,f,c
  4193   0025A6  D7FC               	bra	u1977
  4194   0025A8  2E1F               	decfsz	(??_reverse+1)^0,f,c
  4195   0025AA  D7FA               	bra	u1977
  4196   0025AC  F000               	nop	
  4197   0025AE  0012               	return		;funcret
  4198   0025B0                     __end_of_reverse:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _left_90 *****************
  4202 ;; Defined at:
  4203 ;;		line 121 in file "../dc_motor.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4206 ;;		 -> main@motorL(9), 
  4207 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4208 ;;		 -> main@motorR(9), 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  i               2   31[COMRAM] int 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4223 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4224 ;;Total ram usage:        8 bytes
  4225 ;; Hardware stack levels used: 1
  4226 ;; Hardware stack levels required when called: 3
  4227 ;; This function calls:
  4228 ;;		_setMotorPWM
  4229 ;; This function is called by:
  4230 ;;		_motor_action
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text20
  4235   002326                     __ptext20:
  4236                           	callstack 0
  4237   002326                     _left_90:
  4238                           	callstack 26
  4239   002326                     
  4240                           ;../dc_motor.c: 121: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 122: {;../dc_motor.c: 123:     mL->direction = 0;
  4241   002326  EE20 F001          	lfsr	2,1
  4242   00232A  501A               	movf	left_90@mL^0,w,c
  4243   00232C  26D9               	addwf	fsr2l,f,c
  4244   00232E  501B               	movf	(left_90@mL+1)^0,w,c
  4245   002330  22DA               	addwfc	fsr2h,f,c
  4246   002332  0E00               	movlw	0
  4247   002334  6EDF               	movwf	indf2,c
  4248                           
  4249                           ;../dc_motor.c: 124:     mR->direction = 1;
  4250   002336  EE20 F001          	lfsr	2,1
  4251   00233A  501C               	movf	left_90@mR^0,w,c
  4252   00233C  26D9               	addwf	fsr2l,f,c
  4253   00233E  501D               	movf	(left_90@mR+1)^0,w,c
  4254   002340  22DA               	addwfc	fsr2h,f,c
  4255   002342  0E01               	movlw	1
  4256   002344  6EDF               	movwf	indf2,c
  4257   002346                     
  4258                           ;../dc_motor.c: 125:     for (int i = 0;i<50;i = i + 2)
  4259   002346  0E00               	movlw	0
  4260   002348  6E21               	movwf	(left_90@i+1)^0,c
  4261   00234A  0E00               	movlw	0
  4262   00234C  6E20               	movwf	left_90@i^0,c
  4263   00234E                     l2525:
  4264                           
  4265                           ;../dc_motor.c: 126:     {;../dc_motor.c: 127:         mL->power = 50 + i;
  4266   00234E  5020               	movf	left_90@i^0,w,c
  4267   002350  0F32               	addlw	50
  4268   002352  C01A  FFD9         	movff	left_90@mL,fsr2l
  4269   002356  C01B  FFDA         	movff	left_90@mL+1,fsr2h
  4270   00235A  6EDF               	movwf	indf2,c
  4271   00235C                     
  4272                           ;../dc_motor.c: 128:         mR->power = i;
  4273   00235C  C01C  FFD9         	movff	left_90@mR,fsr2l
  4274   002360  C01D  FFDA         	movff	left_90@mR+1,fsr2h
  4275   002364  C020  FFDF         	movff	left_90@i,indf2
  4276   002368                     
  4277                           ;../dc_motor.c: 129:         setMotorPWM(mL);
  4278   002368  C01A  F00F         	movff	left_90@mL,setMotorPWM@m
  4279   00236C  C01B  F010         	movff	left_90@mL+1,setMotorPWM@m+1
  4280   002370  EC24  F00C         	call	_setMotorPWM	;wreg free
  4281   002374                     
  4282                           ;../dc_motor.c: 130:         setMotorPWM(mR);
  4283   002374  C01C  F00F         	movff	left_90@mR,setMotorPWM@m
  4284   002378  C01D  F010         	movff	left_90@mR+1,setMotorPWM@m+1
  4285   00237C  EC24  F00C         	call	_setMotorPWM	;wreg free
  4286   002380                     
  4287                           ;../dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4288   002380  0E35               	movlw	53
  4289   002382                     u1987:
  4290   002382  2EE8               	decfsz	wreg,f,c
  4291   002384  D7FE               	bra	u1987
  4292   002386  F000               	nop	
  4293   002388                     
  4294                           ;../dc_motor.c: 132:     }
  4295   002388  0E02               	movlw	2
  4296   00238A  2420               	addwf	left_90@i^0,w,c
  4297   00238C  6E20               	movwf	left_90@i^0,c
  4298   00238E  0E00               	movlw	0
  4299   002390  2021               	addwfc	(left_90@i+1)^0,w,c
  4300   002392  6E21               	movwf	(left_90@i+1)^0,c
  4301   002394  BE21               	btfsc	(left_90@i+1)^0,7,c
  4302   002396  EFD6  F011         	goto	u1441
  4303   00239A  5021               	movf	(left_90@i+1)^0,w,c
  4304   00239C  E109               	bnz	u1440
  4305   00239E  0E32               	movlw	50
  4306   0023A0  5C20               	subwf	left_90@i^0,w,c
  4307   0023A2  A0D8               	btfss	status,0,c
  4308   0023A4  EFD6  F011         	goto	u1441
  4309   0023A8  EFD8  F011         	goto	u1440
  4310   0023AC                     u1441:
  4311   0023AC  EFA7  F011         	goto	l2525
  4312   0023B0                     u1440:
  4313   0023B0                     
  4314                           ;../dc_motor.c: 133:     _delay((unsigned long)((165)*(64000000/4000.0)));
  4315   0023B0  0E0E               	movlw	14
  4316   0023B2  6E1F               	movwf	(??_left_90+1)^0,c
  4317   0023B4  0E65               	movlw	101
  4318   0023B6  6E1E               	movwf	??_left_90^0,c
  4319   0023B8  0E87               	movlw	135
  4320   0023BA                     u1997:
  4321   0023BA  2EE8               	decfsz	wreg,f,c
  4322   0023BC  D7FE               	bra	u1997
  4323   0023BE  2E1E               	decfsz	??_left_90^0,f,c
  4324   0023C0  D7FC               	bra	u1997
  4325   0023C2  2E1F               	decfsz	(??_left_90+1)^0,f,c
  4326   0023C4  D7FA               	bra	u1997
  4327   0023C6  F000               	nop	
  4328   0023C8  0012               	return		;funcret
  4329   0023CA                     __end_of_left_90:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _left_135 *****************
  4333 ;; Defined at:
  4334 ;;		line 166 in file "../dc_motor.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4337 ;;		 -> main@motorL(9), 
  4338 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4339 ;;		 -> main@motorR(9), 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  i               2   31[COMRAM] int 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;Total ram usage:        8 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 3
  4358 ;; This function calls:
  4359 ;;		_setMotorPWM
  4360 ;; This function is called by:
  4361 ;;		_motor_action
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text21
  4366   0025B0                     __ptext21:
  4367                           	callstack 0
  4368   0025B0                     _left_135:
  4369                           	callstack 26
  4370   0025B0                     
  4371                           ;../dc_motor.c: 166: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 167: {;../dc_motor.c: 168:     mL->direction = 0;
  4372   0025B0  EE20 F001          	lfsr	2,1
  4373   0025B4  501A               	movf	left_135@mL^0,w,c
  4374   0025B6  26D9               	addwf	fsr2l,f,c
  4375   0025B8  501B               	movf	(left_135@mL+1)^0,w,c
  4376   0025BA  22DA               	addwfc	fsr2h,f,c
  4377   0025BC  0E00               	movlw	0
  4378   0025BE  6EDF               	movwf	indf2,c
  4379                           
  4380                           ;../dc_motor.c: 169:     mR->direction = 1;
  4381   0025C0  EE20 F001          	lfsr	2,1
  4382   0025C4  501C               	movf	left_135@mR^0,w,c
  4383   0025C6  26D9               	addwf	fsr2l,f,c
  4384   0025C8  501D               	movf	(left_135@mR+1)^0,w,c
  4385   0025CA  22DA               	addwfc	fsr2h,f,c
  4386   0025CC  0E01               	movlw	1
  4387   0025CE  6EDF               	movwf	indf2,c
  4388   0025D0                     
  4389                           ;../dc_motor.c: 170:     for (int i = 0;i<50;i = i + 2)
  4390   0025D0  0E00               	movlw	0
  4391   0025D2  6E21               	movwf	(left_135@i+1)^0,c
  4392   0025D4  0E00               	movlw	0
  4393   0025D6  6E20               	movwf	left_135@i^0,c
  4394   0025D8                     l2573:
  4395                           
  4396                           ;../dc_motor.c: 171:     {;../dc_motor.c: 172:         mL->power = 50 + i;
  4397   0025D8  5020               	movf	left_135@i^0,w,c
  4398   0025DA  0F32               	addlw	50
  4399   0025DC  C01A  FFD9         	movff	left_135@mL,fsr2l
  4400   0025E0  C01B  FFDA         	movff	left_135@mL+1,fsr2h
  4401   0025E4  6EDF               	movwf	indf2,c
  4402   0025E6                     
  4403                           ;../dc_motor.c: 173:         mR->power = i;
  4404   0025E6  C01C  FFD9         	movff	left_135@mR,fsr2l
  4405   0025EA  C01D  FFDA         	movff	left_135@mR+1,fsr2h
  4406   0025EE  C020  FFDF         	movff	left_135@i,indf2
  4407   0025F2                     
  4408                           ;../dc_motor.c: 174:         setMotorPWM(mL);
  4409   0025F2  C01A  F00F         	movff	left_135@mL,setMotorPWM@m
  4410   0025F6  C01B  F010         	movff	left_135@mL+1,setMotorPWM@m+1
  4411   0025FA  EC24  F00C         	call	_setMotorPWM	;wreg free
  4412   0025FE                     
  4413                           ;../dc_motor.c: 175:         setMotorPWM(mR);
  4414   0025FE  C01C  F00F         	movff	left_135@mR,setMotorPWM@m
  4415   002602  C01D  F010         	movff	left_135@mR+1,setMotorPWM@m+1
  4416   002606  EC24  F00C         	call	_setMotorPWM	;wreg free
  4417   00260A                     
  4418                           ;../dc_motor.c: 176:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4419   00260A  0E35               	movlw	53
  4420   00260C                     u2007:
  4421   00260C  2EE8               	decfsz	wreg,f,c
  4422   00260E  D7FE               	bra	u2007
  4423   002610  F000               	nop	
  4424   002612                     
  4425                           ;../dc_motor.c: 177:     }
  4426   002612  0E02               	movlw	2
  4427   002614  2420               	addwf	left_135@i^0,w,c
  4428   002616  6E20               	movwf	left_135@i^0,c
  4429   002618  0E00               	movlw	0
  4430   00261A  2021               	addwfc	(left_135@i+1)^0,w,c
  4431   00261C  6E21               	movwf	(left_135@i+1)^0,c
  4432   00261E  BE21               	btfsc	(left_135@i+1)^0,7,c
  4433   002620  EF1B  F013         	goto	u1461
  4434   002624  5021               	movf	(left_135@i+1)^0,w,c
  4435   002626  E109               	bnz	u1460
  4436   002628  0E32               	movlw	50
  4437   00262A  5C20               	subwf	left_135@i^0,w,c
  4438   00262C  A0D8               	btfss	status,0,c
  4439   00262E  EF1B  F013         	goto	u1461
  4440   002632  EF1D  F013         	goto	u1460
  4441   002636                     u1461:
  4442   002636  EFEC  F012         	goto	l2573
  4443   00263A                     u1460:
  4444   00263A                     
  4445                           ;../dc_motor.c: 178:     _delay((unsigned long)((230)*(64000000/4000.0)));
  4446   00263A  0E13               	movlw	19
  4447   00263C  6E1F               	movwf	(??_left_135+1)^0,c
  4448   00263E  0EAC               	movlw	172
  4449   002640  6E1E               	movwf	??_left_135^0,c
  4450   002642  0E2A               	movlw	42
  4451   002644                     u2017:
  4452   002644  2EE8               	decfsz	wreg,f,c
  4453   002646  D7FE               	bra	u2017
  4454   002648  2E1E               	decfsz	??_left_135^0,f,c
  4455   00264A  D7FC               	bra	u2017
  4456   00264C  2E1F               	decfsz	(??_left_135+1)^0,f,c
  4457   00264E  D7FA               	bra	u2017
  4458   002650  0012               	return		;funcret
  4459   002652                     __end_of_left_135:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _initUSART4 *****************
  4463 ;; Defined at:
  4464 ;;		line 5 in file "../serial.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;Total ram usage:        0 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 1
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text22
  4493   002C36                     __ptext22:
  4494                           	callstack 0
  4495   002C36                     _initUSART4:
  4496                           	callstack 29
  4497   002C36                     
  4498                           ;../serial.c: 9:     RC0PPS = 0x12;
  4499   002C36  0E12               	movlw	18
  4500   002C38  010E               	movlb	14	; () banked
  4501   002C3A  6F62               	movwf	98,b	;volatile
  4502                           
  4503                           ;../serial.c: 10:     RX4PPS = 0x11;
  4504   002C3C  0E11               	movlw	17
  4505   002C3E  6F15               	movwf	21,b	;volatile
  4506   002C40                     
  4507                           ; BSR set to: 14
  4508                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4509   002C40  97E9               	bcf	233,3,b	;volatile
  4510   002C42                     
  4511                           ; BSR set to: 14
  4512                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  4513   002C42  95E8               	bcf	232,2,b	;volatile
  4514                           
  4515                           ;../serial.c: 14:     SP4BRGL = 103;
  4516   002C44  0E67               	movlw	103
  4517   002C46  6FE5               	movwf	229,b	;volatile
  4518                           
  4519                           ;../serial.c: 15:     SP4BRGH = 0;
  4520   002C48  0E00               	movlw	0
  4521   002C4A  6FE6               	movwf	230,b	;volatile
  4522   002C4C                     
  4523                           ; BSR set to: 14
  4524                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  4525   002C4C  89E7               	bsf	231,4,b	;volatile
  4526   002C4E                     
  4527                           ; BSR set to: 14
  4528                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  4529   002C4E  8BE8               	bsf	232,5,b	;volatile
  4530   002C50                     
  4531                           ; BSR set to: 14
  4532                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  4533   002C50  8FE7               	bsf	231,7,b	;volatile
  4534   002C52                     
  4535                           ; BSR set to: 14
  4536   002C52  0012               	return		;funcret
  4537   002C54                     __end_of_initUSART4:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _initDCmotorsPWM *****************
  4541 ;; Defined at:
  4542 ;;		line 5 in file "../dc_motor.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  PWMperiod       2    0[COMRAM] int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;Total ram usage:        2 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_main
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text23
  4571   002A66                     __ptext23:
  4572                           	callstack 0
  4573   002A66                     _initDCmotorsPWM:
  4574                           	callstack 29
  4575   002A66                     
  4576                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  4577   002A66  9485               	bcf	133,2,c	;volatile
  4578                           
  4579                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  4580   002A68  9885               	bcf	133,4,c	;volatile
  4581                           
  4582                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  4583   002A6A  9E83               	bcf	131,7,c	;volatile
  4584                           
  4585                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  4586   002A6C  9C87               	bcf	135,6,c	;volatile
  4587                           
  4588                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  4589   002A6E  947D               	bcf	125,2,c	;volatile
  4590                           
  4591                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  4592   002A70  987D               	bcf	125,4,c	;volatile
  4593                           
  4594                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  4595   002A72  9E7B               	bcf	123,7,c	;volatile
  4596                           
  4597                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  4598   002A74  9C7F               	bcf	127,6,c	;volatile
  4599   002A76                     
  4600                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  4601   002A76  50BD               	movf	189,w,c	;volatile
  4602   002A78  0B8F               	andlw	-113
  4603   002A7A  0930               	iorlw	48
  4604   002A7C  6EBD               	movwf	189,c	;volatile
  4605                           
  4606                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4607   002A7E  0EE0               	movlw	-32
  4608   002A80  16BE               	andwf	190,f,c	;volatile
  4609                           
  4610                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4611   002A82  50BF               	movf	191,w,c	;volatile
  4612   002A84  0BF0               	andlw	-16
  4613   002A86  0901               	iorlw	1
  4614   002A88  6EBF               	movwf	191,c	;volatile
  4615   002A8A                     
  4616                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  4617   002A8A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4618   002A8E                     
  4619                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  4620   002A8E  8EBD               	bsf	189,7,c	;volatile
  4621                           
  4622                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  4623   002A90  0E0A               	movlw	10
  4624   002A92  010E               	movlb	14	; () banked
  4625   002A94  6F74               	movwf	116,b	;volatile
  4626                           
  4627                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  4628   002A96  0E0B               	movlw	11
  4629   002A98  6F69               	movwf	105,b	;volatile
  4630                           
  4631                           ;../dc_motor.c: 29:     PWM6DCH=0;
  4632   002A9A  0E00               	movlw	0
  4633   002A9C  6EA3               	movwf	163,c	;volatile
  4634                           
  4635                           ;../dc_motor.c: 30:     PWM7DCH=0;
  4636   002A9E  0E00               	movlw	0
  4637   002AA0  6EA0               	movwf	160,c	;volatile
  4638   002AA2                     
  4639                           ; BSR set to: 14
  4640                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  4641   002AA2  8EA4               	bsf	164,7,c	;volatile
  4642   002AA4                     
  4643                           ; BSR set to: 14
  4644                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  4645   002AA4  8EA1               	bsf	161,7,c	;volatile
  4646   002AA6                     
  4647                           ; BSR set to: 14
  4648   002AA6  0012               	return		;funcret
  4649   002AA8                     __end_of_initDCmotorsPWM:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _forward *****************
  4653 ;; Defined at:
  4654 ;;		line 77 in file "../dc_motor.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4657 ;;		 -> main@motorL(9), 
  4658 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4659 ;;		 -> main@motorR(9), 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  i               2   29[COMRAM] int 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;Total ram usage:        6 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; Hardware stack levels required when called: 3
  4678 ;; This function calls:
  4679 ;;		_setMotorPWM
  4680 ;; This function is called by:
  4681 ;;		_main
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text24
  4686   0026E0                     __ptext24:
  4687                           	callstack 0
  4688   0026E0                     _forward:
  4689                           	callstack 27
  4690   0026E0                     
  4691                           ;../dc_motor.c: 77: void forward(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c
      +                          : 78: {;../dc_motor.c: 79:     mL->direction = 1;
  4692   0026E0  EE20 F001          	lfsr	2,1
  4693   0026E4  501A               	movf	forward@mL^0,w,c
  4694   0026E6  26D9               	addwf	fsr2l,f,c
  4695   0026E8  501B               	movf	(forward@mL+1)^0,w,c
  4696   0026EA  22DA               	addwfc	fsr2h,f,c
  4697   0026EC  0E01               	movlw	1
  4698   0026EE  6EDF               	movwf	indf2,c
  4699                           
  4700                           ;../dc_motor.c: 80:     mR->direction = 1;
  4701   0026F0  EE20 F001          	lfsr	2,1
  4702   0026F4  501C               	movf	forward@mR^0,w,c
  4703   0026F6  26D9               	addwf	fsr2l,f,c
  4704   0026F8  501D               	movf	(forward@mR+1)^0,w,c
  4705   0026FA  22DA               	addwfc	fsr2h,f,c
  4706   0026FC  0E01               	movlw	1
  4707   0026FE  6EDF               	movwf	indf2,c
  4708   002700                     
  4709                           ;../dc_motor.c: 81:     for (int i=0;i<31;i = i+2)
  4710   002700  0E00               	movlw	0
  4711   002702  6E1F               	movwf	(forward@i+1)^0,c
  4712   002704  0E00               	movlw	0
  4713   002706  6E1E               	movwf	forward@i^0,c
  4714   002708                     l2781:
  4715                           
  4716                           ;../dc_motor.c: 82:     {;../dc_motor.c: 83:         mL->power = i;
  4717   002708  C01A  FFD9         	movff	forward@mL,fsr2l
  4718   00270C  C01B  FFDA         	movff	forward@mL+1,fsr2h
  4719   002710  C01E  FFDF         	movff	forward@i,indf2
  4720                           
  4721                           ;../dc_motor.c: 84:         mR->power = i;
  4722   002714  C01C  FFD9         	movff	forward@mR,fsr2l
  4723   002718  C01D  FFDA         	movff	forward@mR+1,fsr2h
  4724   00271C  C01E  FFDF         	movff	forward@i,indf2
  4725   002720                     
  4726                           ;../dc_motor.c: 85:         setMotorPWM(mL);
  4727   002720  C01A  F00F         	movff	forward@mL,setMotorPWM@m
  4728   002724  C01B  F010         	movff	forward@mL+1,setMotorPWM@m+1
  4729   002728  EC24  F00C         	call	_setMotorPWM	;wreg free
  4730   00272C                     
  4731                           ;../dc_motor.c: 86:         setMotorPWM(mR);
  4732   00272C  C01C  F00F         	movff	forward@mR,setMotorPWM@m
  4733   002730  C01D  F010         	movff	forward@mR+1,setMotorPWM@m+1
  4734   002734  EC24  F00C         	call	_setMotorPWM	;wreg free
  4735   002738                     
  4736                           ;../dc_motor.c: 87:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  4737   002738  0E6A               	movlw	106
  4738   00273A                     u2027:
  4739   00273A  2EE8               	decfsz	wreg,f,c
  4740   00273C  D7FE               	bra	u2027
  4741   00273E  D000               	nop2	
  4742   002740                     
  4743                           ;../dc_motor.c: 88:     }
  4744   002740  0E02               	movlw	2
  4745   002742  241E               	addwf	forward@i^0,w,c
  4746   002744  6E1E               	movwf	forward@i^0,c
  4747   002746  0E00               	movlw	0
  4748   002748  201F               	addwfc	(forward@i+1)^0,w,c
  4749   00274A  6E1F               	movwf	(forward@i+1)^0,c
  4750   00274C  BE1F               	btfsc	(forward@i+1)^0,7,c
  4751   00274E  EFB2  F013         	goto	u1701
  4752   002752  501F               	movf	(forward@i+1)^0,w,c
  4753   002754  E109               	bnz	u1700
  4754   002756  0E1F               	movlw	31
  4755   002758  5C1E               	subwf	forward@i^0,w,c
  4756   00275A  A0D8               	btfss	status,0,c
  4757   00275C  EFB2  F013         	goto	u1701
  4758   002760  EFB4  F013         	goto	u1700
  4759   002764                     u1701:
  4760   002764  EF84  F013         	goto	l2781
  4761   002768                     u1700:
  4762   002768  0012               	return		;funcret
  4763   00276A                     __end_of_forward:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function _setMotorPWM *****************
  4767 ;; Defined at:
  4768 ;;		line 38 in file "../dc_motor.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  m               2   14[COMRAM] PTR struct DC_motor
  4771 ;;		 -> main@motorR(9), main@motorL(9), 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  PWMduty         2   23[COMRAM] int 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;Total ram usage:       11 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 2
  4790 ;; This function calls:
  4791 ;;		___awdiv
  4792 ;;		___wmul
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;;		_stop
  4796 ;;		_forward
  4797 ;;		_reverse
  4798 ;;		_right_90
  4799 ;;		_left_90
  4800 ;;		_spin_180
  4801 ;;		_right_135
  4802 ;;		_left_135
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text25
  4807   001848                     __ptext25:
  4808                           	callstack 0
  4809   001848                     _setMotorPWM:
  4810                           	callstack 27
  4811   001848                     
  4812                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  4813   001848  EE20 F001          	lfsr	2,1
  4814   00184C  500F               	movf	setMotorPWM@m^0,w,c
  4815   00184E  26D9               	addwf	fsr2l,f,c
  4816   001850  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4817   001852  22DA               	addwfc	fsr2h,f,c
  4818   001854  50DF               	movf	indf2,w,c
  4819   001856  B4D8               	btfsc	status,2,c
  4820   001858  EF30  F00C         	goto	u1341
  4821   00185C  EF32  F00C         	goto	u1340
  4822   001860                     u1341:
  4823   001860  EF63  F00C         	goto	l2369
  4824   001864                     u1340:
  4825   001864                     
  4826                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  4827   001864  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4828   001868  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4829   00186C  50DF               	movf	indf2,w,c
  4830   00186E  6E11               	movwf	??_setMotorPWM^0,c
  4831   001870  5011               	movf	??_setMotorPWM^0,w,c
  4832   001872  6E01               	movwf	___wmul@multiplier^0,c
  4833   001874  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4834   001876  EE20 F007          	lfsr	2,7
  4835   00187A  500F               	movf	setMotorPWM@m^0,w,c
  4836   00187C  26D9               	addwf	fsr2l,f,c
  4837   00187E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4838   001880  22DA               	addwfc	fsr2h,f,c
  4839   001882  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4840   001886  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4841   00188A  ECD6  F015         	call	___wmul	;wreg free
  4842   00188E  C001  F007         	movff	?___wmul,___awdiv@dividend
  4843   001892  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  4844   001896  0E00               	movlw	0
  4845   001898  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4846   00189A  0E64               	movlw	100
  4847   00189C  6E09               	movwf	___awdiv@divisor^0,c
  4848   00189E  EC2D  F010         	call	___awdiv	;wreg free
  4849   0018A2  EE20 F007          	lfsr	2,7
  4850   0018A6  500F               	movf	setMotorPWM@m^0,w,c
  4851   0018A8  26D9               	addwf	fsr2l,f,c
  4852   0018AA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4853   0018AC  22DA               	addwfc	fsr2h,f,c
  4854   0018AE  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  4855   0018B2  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  4856   0018B6  5007               	movf	?___awdiv^0,w,c
  4857   0018B8  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  4858   0018BA  6E18               	movwf	setMotorPWM@PWMduty^0,c
  4859   0018BC  5008               	movf	(?___awdiv+1)^0,w,c
  4860   0018BE  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  4861   0018C0  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  4862                           
  4863                           ;../dc_motor.c: 45:  }
  4864   0018C2  EF86  F00C         	goto	l2371
  4865   0018C6                     l2369:
  4866                           
  4867                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  4868   0018C6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4869   0018CA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4870   0018CE  50DF               	movf	indf2,w,c
  4871   0018D0  6E11               	movwf	??_setMotorPWM^0,c
  4872   0018D2  5011               	movf	??_setMotorPWM^0,w,c
  4873   0018D4  6E01               	movwf	___wmul@multiplier^0,c
  4874   0018D6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4875   0018D8  EE20 F007          	lfsr	2,7
  4876   0018DC  500F               	movf	setMotorPWM@m^0,w,c
  4877   0018DE  26D9               	addwf	fsr2l,f,c
  4878   0018E0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4879   0018E2  22DA               	addwfc	fsr2h,f,c
  4880   0018E4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4881   0018E8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4882   0018EC  ECD6  F015         	call	___wmul	;wreg free
  4883   0018F0  C001  F007         	movff	?___wmul,___awdiv@dividend
  4884   0018F4  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  4885   0018F8  0E00               	movlw	0
  4886   0018FA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4887   0018FC  0E64               	movlw	100
  4888   0018FE  6E09               	movwf	___awdiv@divisor^0,c
  4889   001900  EC2D  F010         	call	___awdiv	;wreg free
  4890   001904  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  4891   001908  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  4892   00190C                     l2371:
  4893                           
  4894                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  4895   00190C  EE20 F002          	lfsr	2,2
  4896   001910  500F               	movf	setMotorPWM@m^0,w,c
  4897   001912  26D9               	addwf	fsr2l,f,c
  4898   001914  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4899   001916  22DA               	addwfc	fsr2h,f,c
  4900   001918  CFDE F011          	movff	postinc2,??_setMotorPWM
  4901   00191C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4902   001920  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4903   001924  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4904   001928  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  4905   00192C                     
  4906                           ;../dc_motor.c: 53:  if (m->direction){
  4907   00192C  EE20 F001          	lfsr	2,1
  4908   001930  500F               	movf	setMotorPWM@m^0,w,c
  4909   001932  26D9               	addwf	fsr2l,f,c
  4910   001934  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4911   001936  22DA               	addwfc	fsr2h,f,c
  4912   001938  50DF               	movf	indf2,w,c
  4913   00193A  B4D8               	btfsc	status,2,c
  4914   00193C  EFA2  F00C         	goto	u1351
  4915   001940  EFA4  F00C         	goto	u1350
  4916   001944                     u1351:
  4917   001944  EFD9  F00C         	goto	l2377
  4918   001948                     u1350:
  4919   001948                     
  4920                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  4921   001948  EE20 F004          	lfsr	2,4
  4922   00194C  500F               	movf	setMotorPWM@m^0,w,c
  4923   00194E  26D9               	addwf	fsr2l,f,c
  4924   001950  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4925   001952  22DA               	addwfc	fsr2h,f,c
  4926   001954  CFDE F011          	movff	postinc2,??_setMotorPWM
  4927   001958  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4928   00195C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4929   001960  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4930   001964  EE10 F004          	lfsr	1,4
  4931   001968  500F               	movf	setMotorPWM@m^0,w,c
  4932   00196A  26E1               	addwf	fsr1l,f,c
  4933   00196C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4934   00196E  22E2               	addwfc	fsr1h,f,c
  4935   001970  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  4936   001974  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  4937   001978  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4938   00197C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4939   001980  50E7               	movf	indf1,w,c
  4940   001982  6E15               	movwf	(??_setMotorPWM+4)^0,c
  4941   001984  EE10 F006          	lfsr	1,6
  4942   001988  500F               	movf	setMotorPWM@m^0,w,c
  4943   00198A  26E1               	addwf	fsr1l,f,c
  4944   00198C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4945   00198E  22E2               	addwfc	fsr1h,f,c
  4946   001990  50E7               	movf	indf1,w,c
  4947   001992  6E16               	movwf	(??_setMotorPWM+5)^0,c
  4948   001994  0E01               	movlw	1
  4949   001996  6E17               	movwf	(??_setMotorPWM+6)^0,c
  4950   001998  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  4951   00199A  EFD1  F00C         	goto	u1364
  4952   00199E                     u1365:
  4953   00199E  90D8               	bcf	status,0,c
  4954   0019A0  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  4955   0019A2                     u1364:
  4956   0019A2  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  4957   0019A4  EFCF  F00C         	goto	u1365
  4958   0019A8  5017               	movf	(??_setMotorPWM+6)^0,w,c
  4959   0019AA  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  4960   0019AC  6EDF               	movwf	indf2,c
  4961                           
  4962                           ;../dc_motor.c: 55:  } else {
  4963   0019AE  EF0D  F00D         	goto	l262
  4964   0019B2                     l2377:
  4965                           
  4966                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  4967   0019B2  EE20 F004          	lfsr	2,4
  4968   0019B6  500F               	movf	setMotorPWM@m^0,w,c
  4969   0019B8  26D9               	addwf	fsr2l,f,c
  4970   0019BA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4971   0019BC  22DA               	addwfc	fsr2h,f,c
  4972   0019BE  CFDE F011          	movff	postinc2,??_setMotorPWM
  4973   0019C2  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4974   0019C6  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4975   0019CA  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4976   0019CE  EE10 F004          	lfsr	1,4
  4977   0019D2  500F               	movf	setMotorPWM@m^0,w,c
  4978   0019D4  26E1               	addwf	fsr1l,f,c
  4979   0019D6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4980   0019D8  22E2               	addwfc	fsr1h,f,c
  4981   0019DA  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  4982   0019DE  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  4983   0019E2  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4984   0019E6  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4985   0019EA  50E7               	movf	indf1,w,c
  4986   0019EC  6E15               	movwf	(??_setMotorPWM+4)^0,c
  4987   0019EE  EE10 F006          	lfsr	1,6
  4988   0019F2  500F               	movf	setMotorPWM@m^0,w,c
  4989   0019F4  26E1               	addwf	fsr1l,f,c
  4990   0019F6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4991   0019F8  22E2               	addwfc	fsr1h,f,c
  4992   0019FA  50E7               	movf	indf1,w,c
  4993   0019FC  6E16               	movwf	(??_setMotorPWM+5)^0,c
  4994   0019FE  0E01               	movlw	1
  4995   001A00  6E17               	movwf	(??_setMotorPWM+6)^0,c
  4996   001A02  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  4997   001A04  EF06  F00D         	goto	u1374
  4998   001A08                     u1375:
  4999   001A08  90D8               	bcf	status,0,c
  5000   001A0A  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  5001   001A0C                     u1374:
  5002   001A0C  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  5003   001A0E  EF04  F00D         	goto	u1375
  5004   001A12  5017               	movf	(??_setMotorPWM+6)^0,w,c
  5005   001A14  0AFF               	xorlw	255
  5006   001A16  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  5007   001A18  6EDF               	movwf	indf2,c
  5008   001A1A                     l262:
  5009   001A1A  0012               	return		;funcret
  5010   001A1C                     __end_of_setMotorPWM:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function ___wmul *****************
  5014 ;; Defined at:
  5015 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  multiplier      2    0[COMRAM] unsigned int 
  5018 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  product         2    4[COMRAM] unsigned int 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  2    0[COMRAM] unsigned int 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0, prodl, prodh
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;Total ram usage:        6 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 1
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_setMotorPWM
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text26
  5045   002BAC                     __ptext26:
  5046                           	callstack 0
  5047   002BAC                     ___wmul:
  5048                           	callstack 27
  5049   002BAC  5001               	movf	___wmul@multiplier^0,w,c
  5050   002BAE  0203               	mulwf	___wmul@multiplicand^0,c
  5051   002BB0  CFF3 F005          	movff	prodl,___wmul@product
  5052   002BB4  CFF4 F006          	movff	prodh,___wmul@product+1
  5053   002BB8  5001               	movf	___wmul@multiplier^0,w,c
  5054   002BBA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5055   002BBC  50F3               	movf	243,w,c
  5056   002BBE  2606               	addwf	(___wmul@product+1)^0,f,c
  5057   002BC0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5058   002BC2  0203               	mulwf	___wmul@multiplicand^0,c
  5059   002BC4  50F3               	movf	243,w,c
  5060   002BC6  2606               	addwf	(___wmul@product+1)^0,f,c
  5061   002BC8  C005  F001         	movff	___wmul@product,?___wmul
  5062   002BCC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5063   002BD0  0012               	return		;funcret
  5064   002BD2                     __end_of___wmul:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function ___awdiv *****************
  5068 ;; Defined at:
  5069 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  dividend        2    6[COMRAM] int 
  5072 ;;  divisor         2    8[COMRAM] int 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  quotient        2   12[COMRAM] int 
  5075 ;;  sign            1   11[COMRAM] unsigned char 
  5076 ;;  counter         1   10[COMRAM] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2    6[COMRAM] int 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;Total ram usage:        8 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 1
  5093 ;; This function calls:
  5094 ;;		Nothing
  5095 ;; This function is called by:
  5096 ;;		_setMotorPWM
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text27
  5101   00205A                     __ptext27:
  5102                           	callstack 0
  5103   00205A                     ___awdiv:
  5104                           	callstack 27
  5105   00205A  0E00               	movlw	0
  5106   00205C  6E0C               	movwf	___awdiv@sign^0,c
  5107   00205E  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  5108   002060  EF36  F010         	goto	u1160
  5109   002064  EF34  F010         	goto	u1161
  5110   002068                     u1161:
  5111   002068  EF3C  F010         	goto	l2247
  5112   00206C                     u1160:
  5113   00206C  6C09               	negf	___awdiv@divisor^0,c
  5114   00206E  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  5115   002070  B0D8               	btfsc	status,0,c
  5116   002072  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  5117   002074  0E01               	movlw	1
  5118   002076  6E0C               	movwf	___awdiv@sign^0,c
  5119   002078                     l2247:
  5120   002078  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  5121   00207A  EF43  F010         	goto	u1170
  5122   00207E  EF41  F010         	goto	u1171
  5123   002082                     u1171:
  5124   002082  EF49  F010         	goto	l2253
  5125   002086                     u1170:
  5126   002086  6C07               	negf	___awdiv@dividend^0,c
  5127   002088  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  5128   00208A  B0D8               	btfsc	status,0,c
  5129   00208C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  5130   00208E  0E01               	movlw	1
  5131   002090  1A0C               	xorwf	___awdiv@sign^0,f,c
  5132   002092                     l2253:
  5133   002092  0E00               	movlw	0
  5134   002094  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  5135   002096  0E00               	movlw	0
  5136   002098  6E0D               	movwf	___awdiv@quotient^0,c
  5137   00209A  5009               	movf	___awdiv@divisor^0,w,c
  5138   00209C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  5139   00209E  B4D8               	btfsc	status,2,c
  5140   0020A0  EF54  F010         	goto	u1181
  5141   0020A4  EF56  F010         	goto	u1180
  5142   0020A8                     u1181:
  5143   0020A8  EF7E  F010         	goto	l2275
  5144   0020AC                     u1180:
  5145   0020AC  0E01               	movlw	1
  5146   0020AE  6E0B               	movwf	___awdiv@counter^0,c
  5147   0020B0  EF5E  F010         	goto	l2261
  5148   0020B4                     l2259:
  5149   0020B4  90D8               	bcf	status,0,c
  5150   0020B6  3609               	rlcf	___awdiv@divisor^0,f,c
  5151   0020B8  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  5152   0020BA  2A0B               	incf	___awdiv@counter^0,f,c
  5153   0020BC                     l2261:
  5154   0020BC  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  5155   0020BE  EF63  F010         	goto	u1191
  5156   0020C2  EF65  F010         	goto	u1190
  5157   0020C6                     u1191:
  5158   0020C6  EF5A  F010         	goto	l2259
  5159   0020CA                     u1190:
  5160   0020CA                     l2263:
  5161   0020CA  90D8               	bcf	status,0,c
  5162   0020CC  360D               	rlcf	___awdiv@quotient^0,f,c
  5163   0020CE  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  5164   0020D0  5009               	movf	___awdiv@divisor^0,w,c
  5165   0020D2  5C07               	subwf	___awdiv@dividend^0,w,c
  5166   0020D4  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5167   0020D6  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  5168   0020D8  A0D8               	btfss	status,0,c
  5169   0020DA  EF71  F010         	goto	u1201
  5170   0020DE  EF73  F010         	goto	u1200
  5171   0020E2                     u1201:
  5172   0020E2  EF78  F010         	goto	l2271
  5173   0020E6                     u1200:
  5174   0020E6  5009               	movf	___awdiv@divisor^0,w,c
  5175   0020E8  5E07               	subwf	___awdiv@dividend^0,f,c
  5176   0020EA  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5177   0020EC  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  5178   0020EE  800D               	bsf	___awdiv@quotient^0,0,c
  5179   0020F0                     l2271:
  5180   0020F0  90D8               	bcf	status,0,c
  5181   0020F2  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  5182   0020F4  3209               	rrcf	___awdiv@divisor^0,f,c
  5183   0020F6  2E0B               	decfsz	___awdiv@counter^0,f,c
  5184   0020F8  EF65  F010         	goto	l2263
  5185   0020FC                     l2275:
  5186   0020FC  500C               	movf	___awdiv@sign^0,w,c
  5187   0020FE  B4D8               	btfsc	status,2,c
  5188   002100  EF84  F010         	goto	u1211
  5189   002104  EF86  F010         	goto	u1210
  5190   002108                     u1211:
  5191   002108  EF8A  F010         	goto	l2279
  5192   00210C                     u1210:
  5193   00210C  6C0D               	negf	___awdiv@quotient^0,c
  5194   00210E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  5195   002110  B0D8               	btfsc	status,0,c
  5196   002112  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  5197   002114                     l2279:
  5198   002114  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5199   002118  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5200   00211C  0012               	return		;funcret
  5201   00211E                     __end_of___awdiv:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _color_read *****************
  5205 ;; Defined at:
  5206 ;;		line 111 in file "../color.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  rgb             2   11[COMRAM] PTR struct RGB_val
  5209 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), main@L_calibrated(8), 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5225 ;;Total ram usage:        4 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; Hardware stack levels required when called: 4
  5228 ;; This function calls:
  5229 ;;		_color_read_Blue
  5230 ;;		_color_read_Green
  5231 ;;		_color_read_Luminosity
  5232 ;;		_color_read_Red
  5233 ;; This function is called by:
  5234 ;;		_main
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text28
  5239   0021DC                     __ptext28:
  5240                           	callstack 0
  5241   0021DC                     _color_read:
  5242                           	callstack 26
  5243   0021DC                     
  5244                           ;../color.c: 111: void color_read(struct RGB_val *rgb);../color.c: 112: {;../color.c: 11
      +                          3:     rgb->L = color_read_Luminosity();
  5245   0021DC  EC99  F014         	call	_color_read_Luminosity	;wreg free
  5246   0021E0  C00C  FFD9         	movff	color_read@rgb,fsr2l
  5247   0021E4  C00D  FFDA         	movff	color_read@rgb+1,fsr2h
  5248   0021E8  C005  FFDE         	movff	?_color_read_Luminosity,postinc2
  5249   0021EC  C006  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  5250   0021F0                     
  5251                           ;../color.c: 114:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5252   0021F0  0E09               	movlw	9
  5253   0021F2  6E0F               	movwf	(??_color_read+1)^0,c
  5254   0021F4  0E1E               	movlw	30
  5255   0021F6  6E0E               	movwf	??_color_read^0,c
  5256   0021F8  0EE4               	movlw	228
  5257   0021FA                     u2037:
  5258   0021FA  2EE8               	decfsz	wreg,f,c
  5259   0021FC  D7FE               	bra	u2037
  5260   0021FE  2E0E               	decfsz	??_color_read^0,f,c
  5261   002200  D7FC               	bra	u2037
  5262   002202  2E0F               	decfsz	(??_color_read+1)^0,f,c
  5263   002204  D7FA               	bra	u2037
  5264   002206  D000               	nop2	
  5265   002208                     
  5266                           ;../color.c: 115:     rgb->R = color_read_Red();
  5267   002208  EC71  F014         	call	_color_read_Red	;wreg free
  5268   00220C  EE20 F002          	lfsr	2,2
  5269   002210  500C               	movf	color_read@rgb^0,w,c
  5270   002212  26D9               	addwf	fsr2l,f,c
  5271   002214  500D               	movf	(color_read@rgb+1)^0,w,c
  5272   002216  22DA               	addwfc	fsr2h,f,c
  5273   002218  C005  FFDE         	movff	?_color_read_Red,postinc2
  5274   00221C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5275                           
  5276                           ;../color.c: 116:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5277   002220  0E09               	movlw	9
  5278   002222  6E0F               	movwf	(??_color_read+1)^0,c
  5279   002224  0E1E               	movlw	30
  5280   002226  6E0E               	movwf	??_color_read^0,c
  5281   002228  0EE4               	movlw	228
  5282   00222A                     u2047:
  5283   00222A  2EE8               	decfsz	wreg,f,c
  5284   00222C  D7FE               	bra	u2047
  5285   00222E  2E0E               	decfsz	??_color_read^0,f,c
  5286   002230  D7FC               	bra	u2047
  5287   002232  2E0F               	decfsz	(??_color_read+1)^0,f,c
  5288   002234  D7FA               	bra	u2047
  5289   002236  D000               	nop2	
  5290   002238                     
  5291                           ;../color.c: 117:     rgb->G = color_read_Green();
  5292   002238  ECC1  F014         	call	_color_read_Green	;wreg free
  5293   00223C  EE20 F004          	lfsr	2,4
  5294   002240  500C               	movf	color_read@rgb^0,w,c
  5295   002242  26D9               	addwf	fsr2l,f,c
  5296   002244  500D               	movf	(color_read@rgb+1)^0,w,c
  5297   002246  22DA               	addwfc	fsr2h,f,c
  5298   002248  C005  FFDE         	movff	?_color_read_Green,postinc2
  5299   00224C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5300   002250                     
  5301                           ;../color.c: 118:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5302   002250  0E09               	movlw	9
  5303   002252  6E0F               	movwf	(??_color_read+1)^0,c
  5304   002254  0E1E               	movlw	30
  5305   002256  6E0E               	movwf	??_color_read^0,c
  5306   002258  0EE4               	movlw	228
  5307   00225A                     u2057:
  5308   00225A  2EE8               	decfsz	wreg,f,c
  5309   00225C  D7FE               	bra	u2057
  5310   00225E  2E0E               	decfsz	??_color_read^0,f,c
  5311   002260  D7FC               	bra	u2057
  5312   002262  2E0F               	decfsz	(??_color_read+1)^0,f,c
  5313   002264  D7FA               	bra	u2057
  5314   002266  D000               	nop2	
  5315                           
  5316                           ;../color.c: 119:     rgb->B = color_read_Blue();
  5317   002268  ECE9  F014         	call	_color_read_Blue	;wreg free
  5318   00226C  EE20 F006          	lfsr	2,6
  5319   002270  500C               	movf	color_read@rgb^0,w,c
  5320   002272  26D9               	addwf	fsr2l,f,c
  5321   002274  500D               	movf	(color_read@rgb+1)^0,w,c
  5322   002276  22DA               	addwfc	fsr2h,f,c
  5323   002278  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5324   00227C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5325   002280  0012               	return		;funcret
  5326   002282                     __end_of_color_read:
  5327                           	callstack 0
  5328                           
  5329 ;; *************** function _color_read_Red *****************
  5330 ;; Defined at:
  5331 ;;		line 69 in file "../color.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  tmp             2    9[COMRAM] unsigned int 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  2    4[COMRAM] unsigned int 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5348 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5349 ;;Total ram usage:        7 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 3
  5352 ;; This function calls:
  5353 ;;		_I2C_2_Master_Read
  5354 ;;		_I2C_2_Master_RepStart
  5355 ;;		_I2C_2_Master_Start
  5356 ;;		_I2C_2_Master_Stop
  5357 ;;		_I2C_2_Master_Write
  5358 ;; This function is called by:
  5359 ;;		_color_read
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text29
  5364   0028E2                     __ptext29:
  5365                           	callstack 0
  5366   0028E2                     _color_read_Red:
  5367                           	callstack 26
  5368   0028E2                     
  5369                           ;../color.c: 71:  unsigned int tmp;;../color.c: 72:  I2C_2_Master_Start();
  5370   0028E2  EC51  F016         	call	_I2C_2_Master_Start	;wreg free
  5371                           
  5372                           ;../color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  5373   0028E6  0E52               	movlw	82
  5374   0028E8  EC41  F016         	call	_I2C_2_Master_Write
  5375                           
  5376                           ;../color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  5377   0028EC  0EB6               	movlw	182
  5378   0028EE  EC41  F016         	call	_I2C_2_Master_Write
  5379                           
  5380                           ;../color.c: 75:  I2C_2_Master_RepStart();
  5381   0028F2  EC47  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5382                           
  5383                           ;../color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  5384   0028F6  0E53               	movlw	83
  5385   0028F8  EC41  F016         	call	_I2C_2_Master_Write
  5386                           
  5387                           ;../color.c: 77:  tmp=I2C_2_Master_Read(1);
  5388   0028FC  0E01               	movlw	1
  5389   0028FE  EC54  F015         	call	_I2C_2_Master_Read
  5390   002902  6E07               	movwf	??_color_read_Red^0,c
  5391   002904  5007               	movf	??_color_read_Red^0,w,c
  5392   002906  6E0A               	movwf	color_read_Red@tmp^0,c
  5393   002908  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5394                           
  5395                           ;../color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5396   00290A  0E00               	movlw	0
  5397   00290C  EC54  F015         	call	_I2C_2_Master_Read
  5398   002910  6E07               	movwf	??_color_read_Red^0,c
  5399   002912  5007               	movf	??_color_read_Red^0,w,c
  5400   002914  6E09               	movwf	(??_color_read_Red+2)^0,c
  5401   002916  6A08               	clrf	(??_color_read_Red+1)^0,c
  5402   002918  500A               	movf	color_read_Red@tmp^0,w,c
  5403   00291A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5404   00291C  6E0A               	movwf	color_read_Red@tmp^0,c
  5405   00291E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5406   002920  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5407   002922  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5408                           
  5409                           ;../color.c: 79:  I2C_2_Master_Stop();
  5410   002924  EC4C  F016         	call	_I2C_2_Master_Stop	;wreg free
  5411   002928                     
  5412                           ;../color.c: 80:  return tmp;
  5413   002928  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5414   00292C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5415   002930  0012               	return		;funcret
  5416   002932                     __end_of_color_read_Red:
  5417                           	callstack 0
  5418                           
  5419 ;; *************** function _color_read_Luminosity *****************
  5420 ;; Defined at:
  5421 ;;		line 55 in file "../color.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  tmp             2    9[COMRAM] unsigned int 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  2    4[COMRAM] unsigned int 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5439 ;;Total ram usage:        7 bytes
  5440 ;; Hardware stack levels used: 1
  5441 ;; Hardware stack levels required when called: 3
  5442 ;; This function calls:
  5443 ;;		_I2C_2_Master_Read
  5444 ;;		_I2C_2_Master_RepStart
  5445 ;;		_I2C_2_Master_Start
  5446 ;;		_I2C_2_Master_Stop
  5447 ;;		_I2C_2_Master_Write
  5448 ;; This function is called by:
  5449 ;;		_color_read
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text30
  5454   002932                     __ptext30:
  5455                           	callstack 0
  5456   002932                     _color_read_Luminosity:
  5457                           	callstack 26
  5458   002932                     
  5459                           ;../color.c: 57:  unsigned int tmp;;../color.c: 58:  I2C_2_Master_Start();
  5460   002932  EC51  F016         	call	_I2C_2_Master_Start	;wreg free
  5461                           
  5462                           ;../color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  5463   002936  0E52               	movlw	82
  5464   002938  EC41  F016         	call	_I2C_2_Master_Write
  5465                           
  5466                           ;../color.c: 60:  I2C_2_Master_Write(0xA0 | 0x14);
  5467   00293C  0EB4               	movlw	180
  5468   00293E  EC41  F016         	call	_I2C_2_Master_Write
  5469                           
  5470                           ;../color.c: 61:  I2C_2_Master_RepStart();
  5471   002942  EC47  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5472                           
  5473                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  5474   002946  0E53               	movlw	83
  5475   002948  EC41  F016         	call	_I2C_2_Master_Write
  5476                           
  5477                           ;../color.c: 63:  tmp=I2C_2_Master_Read(1);
  5478   00294C  0E01               	movlw	1
  5479   00294E  EC54  F015         	call	_I2C_2_Master_Read
  5480   002952  6E07               	movwf	??_color_read_Luminosity^0,c
  5481   002954  5007               	movf	??_color_read_Luminosity^0,w,c
  5482   002956  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  5483   002958  6A0B               	clrf	(color_read_Luminosity@tmp+1)^0,c
  5484                           
  5485                           ;../color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5486   00295A  0E00               	movlw	0
  5487   00295C  EC54  F015         	call	_I2C_2_Master_Read
  5488   002960  6E07               	movwf	??_color_read_Luminosity^0,c
  5489   002962  5007               	movf	??_color_read_Luminosity^0,w,c
  5490   002964  6E09               	movwf	(??_color_read_Luminosity+2)^0,c
  5491   002966  6A08               	clrf	(??_color_read_Luminosity+1)^0,c
  5492   002968  500A               	movf	color_read_Luminosity@tmp^0,w,c
  5493   00296A  1008               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  5494   00296C  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  5495   00296E  500B               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  5496   002970  1009               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  5497   002972  6E0B               	movwf	(color_read_Luminosity@tmp+1)^0,c
  5498                           
  5499                           ;../color.c: 65:  I2C_2_Master_Stop();
  5500   002974  EC4C  F016         	call	_I2C_2_Master_Stop	;wreg free
  5501   002978                     
  5502                           ;../color.c: 66:  return tmp;
  5503   002978  C00A  F005         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  5504   00297C  C00B  F006         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  5505   002980  0012               	return		;funcret
  5506   002982                     __end_of_color_read_Luminosity:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _color_read_Green *****************
  5510 ;; Defined at:
  5511 ;;		line 83 in file "../color.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  tmp             2    9[COMRAM] unsigned int 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  2    4[COMRAM] unsigned int 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;Total ram usage:        7 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 3
  5532 ;; This function calls:
  5533 ;;		_I2C_2_Master_Read
  5534 ;;		_I2C_2_Master_RepStart
  5535 ;;		_I2C_2_Master_Start
  5536 ;;		_I2C_2_Master_Stop
  5537 ;;		_I2C_2_Master_Write
  5538 ;; This function is called by:
  5539 ;;		_color_read
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text31
  5544   002982                     __ptext31:
  5545                           	callstack 0
  5546   002982                     _color_read_Green:
  5547                           	callstack 26
  5548   002982                     
  5549                           ;../color.c: 85:  unsigned int tmp;;../color.c: 86:  I2C_2_Master_Start();
  5550   002982  EC51  F016         	call	_I2C_2_Master_Start	;wreg free
  5551                           
  5552                           ;../color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  5553   002986  0E52               	movlw	82
  5554   002988  EC41  F016         	call	_I2C_2_Master_Write
  5555                           
  5556                           ;../color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  5557   00298C  0EB8               	movlw	184
  5558   00298E  EC41  F016         	call	_I2C_2_Master_Write
  5559                           
  5560                           ;../color.c: 89:  I2C_2_Master_RepStart();
  5561   002992  EC47  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5562                           
  5563                           ;../color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  5564   002996  0E53               	movlw	83
  5565   002998  EC41  F016         	call	_I2C_2_Master_Write
  5566                           
  5567                           ;../color.c: 91:  tmp=I2C_2_Master_Read(1);
  5568   00299C  0E01               	movlw	1
  5569   00299E  EC54  F015         	call	_I2C_2_Master_Read
  5570   0029A2  6E07               	movwf	??_color_read_Green^0,c
  5571   0029A4  5007               	movf	??_color_read_Green^0,w,c
  5572   0029A6  6E0A               	movwf	color_read_Green@tmp^0,c
  5573   0029A8  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5574                           
  5575                           ;../color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5576   0029AA  0E00               	movlw	0
  5577   0029AC  EC54  F015         	call	_I2C_2_Master_Read
  5578   0029B0  6E07               	movwf	??_color_read_Green^0,c
  5579   0029B2  5007               	movf	??_color_read_Green^0,w,c
  5580   0029B4  6E09               	movwf	(??_color_read_Green+2)^0,c
  5581   0029B6  6A08               	clrf	(??_color_read_Green+1)^0,c
  5582   0029B8  500A               	movf	color_read_Green@tmp^0,w,c
  5583   0029BA  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5584   0029BC  6E0A               	movwf	color_read_Green@tmp^0,c
  5585   0029BE  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5586   0029C0  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5587   0029C2  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5588                           
  5589                           ;../color.c: 93:  I2C_2_Master_Stop();
  5590   0029C4  EC4C  F016         	call	_I2C_2_Master_Stop	;wreg free
  5591   0029C8                     
  5592                           ;../color.c: 94:  return tmp;
  5593   0029C8  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5594   0029CC  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5595   0029D0  0012               	return		;funcret
  5596   0029D2                     __end_of_color_read_Green:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _color_read_Blue *****************
  5600 ;; Defined at:
  5601 ;;		line 97 in file "../color.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  tmp             2    9[COMRAM] unsigned int 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2    4[COMRAM] unsigned int 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;Total ram usage:        7 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; Hardware stack levels required when called: 3
  5622 ;; This function calls:
  5623 ;;		_I2C_2_Master_Read
  5624 ;;		_I2C_2_Master_RepStart
  5625 ;;		_I2C_2_Master_Start
  5626 ;;		_I2C_2_Master_Stop
  5627 ;;		_I2C_2_Master_Write
  5628 ;; This function is called by:
  5629 ;;		_color_read
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text32
  5634   0029D2                     __ptext32:
  5635                           	callstack 0
  5636   0029D2                     _color_read_Blue:
  5637                           	callstack 26
  5638   0029D2                     
  5639                           ;../color.c: 99:  unsigned int tmp;;../color.c: 100:  I2C_2_Master_Start();
  5640   0029D2  EC51  F016         	call	_I2C_2_Master_Start	;wreg free
  5641                           
  5642                           ;../color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  5643   0029D6  0E52               	movlw	82
  5644   0029D8  EC41  F016         	call	_I2C_2_Master_Write
  5645                           
  5646                           ;../color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  5647   0029DC  0EBA               	movlw	186
  5648   0029DE  EC41  F016         	call	_I2C_2_Master_Write
  5649                           
  5650                           ;../color.c: 103:  I2C_2_Master_RepStart();
  5651   0029E2  EC47  F016         	call	_I2C_2_Master_RepStart	;wreg free
  5652                           
  5653                           ;../color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  5654   0029E6  0E53               	movlw	83
  5655   0029E8  EC41  F016         	call	_I2C_2_Master_Write
  5656                           
  5657                           ;../color.c: 105:  tmp=I2C_2_Master_Read(1);
  5658   0029EC  0E01               	movlw	1
  5659   0029EE  EC54  F015         	call	_I2C_2_Master_Read
  5660   0029F2  6E07               	movwf	??_color_read_Blue^0,c
  5661   0029F4  5007               	movf	??_color_read_Blue^0,w,c
  5662   0029F6  6E0A               	movwf	color_read_Blue@tmp^0,c
  5663   0029F8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5664                           
  5665                           ;../color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5666   0029FA  0E00               	movlw	0
  5667   0029FC  EC54  F015         	call	_I2C_2_Master_Read
  5668   002A00  6E07               	movwf	??_color_read_Blue^0,c
  5669   002A02  5007               	movf	??_color_read_Blue^0,w,c
  5670   002A04  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5671   002A06  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5672   002A08  500A               	movf	color_read_Blue@tmp^0,w,c
  5673   002A0A  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5674   002A0C  6E0A               	movwf	color_read_Blue@tmp^0,c
  5675   002A0E  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5676   002A10  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5677   002A12  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5678                           
  5679                           ;../color.c: 107:  I2C_2_Master_Stop();
  5680   002A14  EC4C  F016         	call	_I2C_2_Master_Stop	;wreg free
  5681   002A18                     
  5682                           ;../color.c: 108:  return tmp;
  5683   002A18  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5684   002A1C  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5685   002A20  0012               	return		;funcret
  5686   002A22                     __end_of_color_read_Blue:
  5687                           	callstack 0
  5688                           
  5689 ;; *************** function _I2C_2_Master_RepStart *****************
  5690 ;; Defined at:
  5691 ;;		line 33 in file "../i2c.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;		None
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;		None
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      void 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5709 ;;Total ram usage:        0 bytes
  5710 ;; Hardware stack levels used: 1
  5711 ;; Hardware stack levels required when called: 2
  5712 ;; This function calls:
  5713 ;;		_I2C_2_Master_Idle
  5714 ;; This function is called by:
  5715 ;;		_color_read_Luminosity
  5716 ;;		_color_read_Red
  5717 ;;		_color_read_Green
  5718 ;;		_color_read_Blue
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text33
  5723   002C8E                     __ptext33:
  5724                           	callstack 0
  5725   002C8E                     _I2C_2_Master_RepStart:
  5726                           	callstack 26
  5727   002C8E                     
  5728                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  5729   002C8E  ECC2  F015         	call	_I2C_2_Master_Idle	;wreg free
  5730   002C92                     
  5731                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5732   002C92  010E               	movlb	14	; () banked
  5733   002C94  83DA               	bsf	218,1,b	;volatile
  5734   002C96                     
  5735                           ; BSR set to: 14
  5736   002C96  0012               	return		;funcret
  5737   002C98                     __end_of_I2C_2_Master_RepStart:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function _I2C_2_Master_Read *****************
  5741 ;; Defined at:
  5742 ;;		line 51 in file "../i2c.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  ack             1    wreg     unsigned char 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  ack             1    2[COMRAM] unsigned char 
  5747 ;;  tmp             1    3[COMRAM] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      unsigned char 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5760 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;Total ram usage:        3 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 2
  5764 ;; This function calls:
  5765 ;;		_I2C_2_Master_Idle
  5766 ;; This function is called by:
  5767 ;;		_color_read_Luminosity
  5768 ;;		_color_read_Red
  5769 ;;		_color_read_Green
  5770 ;;		_color_read_Blue
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text34
  5775   002AA8                     __ptext34:
  5776                           	callstack 0
  5777   002AA8                     _I2C_2_Master_Read:
  5778                           	callstack 26
  5779                           
  5780                           ; BSR set to: 14
  5781                           ;incstack = 0
  5782                           ;I2C_2_Master_Read@ack stored from wreg
  5783   002AA8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5784   002AAA                     
  5785                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  5786   002AAA  ECC2  F015         	call	_I2C_2_Master_Idle	;wreg free
  5787   002AAE                     
  5788                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5789   002AAE  010E               	movlb	14	; () banked
  5790   002AB0  87DA               	bsf	218,3,b	;volatile
  5791                           
  5792                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  5793   002AB2  ECC2  F015         	call	_I2C_2_Master_Idle	;wreg free
  5794   002AB6                     
  5795                           ;../i2c.c: 57:   tmp = SSP2BUF;
  5796   002AB6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5797                           
  5798                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  5799   002ABA  ECC2  F015         	call	_I2C_2_Master_Idle	;wreg free
  5800   002ABE                     
  5801                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5802   002ABE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5803   002AC0  B4D8               	btfsc	status,2,c
  5804   002AC2  EF65  F015         	goto	u1321
  5805   002AC6  EF69  F015         	goto	u1320
  5806   002ACA                     u1321:
  5807   002ACA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5808   002ACC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5809   002ACE  EF6A  F015         	goto	u1338
  5810   002AD2                     u1320:
  5811   002AD2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5812   002AD4                     u1338:
  5813   002AD4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5814   002AD6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5815   002AD8  010E               	movlb	14	; () banked
  5816   002ADA  51DA               	movf	218,w,b	;volatile
  5817   002ADC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5818   002ADE  0BDF               	andlw	-33
  5819   002AE0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5820   002AE2  6FDA               	movwf	218,b	;volatile
  5821   002AE4                     
  5822                           ; BSR set to: 14
  5823                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5824   002AE4  89DA               	bsf	218,4,b	;volatile
  5825   002AE6                     
  5826                           ; BSR set to: 14
  5827                           ;../i2c.c: 61:   return tmp;
  5828   002AE6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5829   002AE8                     
  5830                           ; BSR set to: 14
  5831   002AE8  0012               	return		;funcret
  5832   002AEA                     __end_of_I2C_2_Master_Read:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _color_processor_hard *****************
  5836 ;; Defined at:
  5837 ;;		line 152 in file "../color.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  5840 ;;		 -> main@RGB_recorded(8), 
  5841 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  5842 ;;		 -> main@color_calibrated(64), 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  cb              2   24[COMRAM] unsigned int 
  5845 ;;  cg              2   22[COMRAM] unsigned int 
  5846 ;;  cr              2   20[COMRAM] unsigned int 
  5847 ;;  condition_b     1   10[COMRAM] _Bool 
  5848 ;;  condition_g     1    9[COMRAM] _Bool 
  5849 ;;  condition_r     1    8[COMRAM] _Bool 
  5850 ;;  i               2   26[COMRAM] int 
  5851 ;;  b               2   18[COMRAM] unsigned int 
  5852 ;;  g               2   16[COMRAM] unsigned int 
  5853 ;;  r               2   14[COMRAM] unsigned int 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  2    0[COMRAM] unsigned int 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;Total ram usage:       28 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 1
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text35
  5878   0015D2                     __ptext35:
  5879                           	callstack 0
  5880   0015D2                     _color_processor_hard:
  5881                           	callstack 29
  5882   0015D2                     
  5883                           ;../color.c: 152: unsigned int color_processor_hard(struct RGB_val *rgb, unsigned int *c
      +                          alibrated);../color.c: 153: {;../color.c: 154:     unsigned int r = rgb->R;
  5884   0015D2  EE20 F002          	lfsr	2,2
  5885   0015D6  5001               	movf	color_processor_hard@rgb^0,w,c
  5886   0015D8  26D9               	addwf	fsr2l,f,c
  5887   0015DA  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5888   0015DC  22DA               	addwfc	fsr2h,f,c
  5889   0015DE  CFDE F00F          	movff	postinc2,color_processor_hard@r
  5890   0015E2  CFDD F010          	movff	postdec2,color_processor_hard@r+1
  5891                           
  5892                           ;../color.c: 155:     unsigned int g = rgb->G;
  5893   0015E6  EE20 F004          	lfsr	2,4
  5894   0015EA  5001               	movf	color_processor_hard@rgb^0,w,c
  5895   0015EC  26D9               	addwf	fsr2l,f,c
  5896   0015EE  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5897   0015F0  22DA               	addwfc	fsr2h,f,c
  5898   0015F2  CFDE F011          	movff	postinc2,color_processor_hard@g
  5899   0015F6  CFDD F012          	movff	postdec2,color_processor_hard@g+1
  5900                           
  5901                           ;../color.c: 156:     unsigned int b = rgb->B;
  5902   0015FA  EE20 F006          	lfsr	2,6
  5903   0015FE  5001               	movf	color_processor_hard@rgb^0,w,c
  5904   001600  26D9               	addwf	fsr2l,f,c
  5905   001602  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5906   001604  22DA               	addwfc	fsr2h,f,c
  5907   001606  CFDE F013          	movff	postinc2,color_processor_hard@b
  5908   00160A  CFDD F014          	movff	postdec2,color_processor_hard@b+1
  5909   00160E                     
  5910                           ;../color.c: 159:     for (int i=0;i<8;i++){
  5911   00160E  0E00               	movlw	0
  5912   001610  6E1C               	movwf	(color_processor_hard@i+1)^0,c
  5913   001612  0E00               	movlw	0
  5914   001614  6E1B               	movwf	color_processor_hard@i^0,c
  5915   001616                     l2687:
  5916                           
  5917                           ;../color.c: 160:         unsigned int cr = calibrated[4*i+1];
  5918   001616  C01B  F005         	movff	color_processor_hard@i,??_color_processor_hard
  5919   00161A  C01C  F006         	movff	color_processor_hard@i+1,??_color_processor_hard+1
  5920   00161E  90D8               	bcf	status,0,c
  5921   001620  3605               	rlcf	??_color_processor_hard^0,f,c
  5922   001622  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5923   001624  90D8               	bcf	status,0,c
  5924   001626  3605               	rlcf	??_color_processor_hard^0,f,c
  5925   001628  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5926   00162A  90D8               	bcf	status,0,c
  5927   00162C  3605               	rlcf	??_color_processor_hard^0,f,c
  5928   00162E  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5929   001630  5005               	movf	??_color_processor_hard^0,w,c
  5930   001632  2403               	addwf	color_processor_hard@calibrated^0,w,c
  5931   001634  6E07               	movwf	(??_color_processor_hard+2)^0,c
  5932   001636  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5933   001638  2004               	addwfc	(color_processor_hard@calibrated+1)^0,w,c
  5934   00163A  6E08               	movwf	(??_color_processor_hard+3)^0,c
  5935   00163C  0E02               	movlw	2
  5936   00163E  2407               	addwf	(??_color_processor_hard+2)^0,w,c
  5937   001640  6ED9               	movwf	fsr2l,c
  5938   001642  0E00               	movlw	0
  5939   001644  2008               	addwfc	(??_color_processor_hard+3)^0,w,c
  5940   001646  6EDA               	movwf	fsr2h,c
  5941   001648  CFDE F015          	movff	postinc2,color_processor_hard@cr
  5942   00164C  CFDD F016          	movff	postdec2,color_processor_hard@cr+1
  5943                           
  5944                           ;../color.c: 161:         unsigned int cg = calibrated[4*i+2];
  5945   001650  C01B  F005         	movff	color_processor_hard@i,??_color_processor_hard
  5946   001654  C01C  F006         	movff	color_processor_hard@i+1,??_color_processor_hard+1
  5947   001658  90D8               	bcf	status,0,c
  5948   00165A  3605               	rlcf	??_color_processor_hard^0,f,c
  5949   00165C  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5950   00165E  90D8               	bcf	status,0,c
  5951   001660  3605               	rlcf	??_color_processor_hard^0,f,c
  5952   001662  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5953   001664  90D8               	bcf	status,0,c
  5954   001666  3605               	rlcf	??_color_processor_hard^0,f,c
  5955   001668  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5956   00166A  5005               	movf	??_color_processor_hard^0,w,c
  5957   00166C  2403               	addwf	color_processor_hard@calibrated^0,w,c
  5958   00166E  6E07               	movwf	(??_color_processor_hard+2)^0,c
  5959   001670  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5960   001672  2004               	addwfc	(color_processor_hard@calibrated+1)^0,w,c
  5961   001674  6E08               	movwf	(??_color_processor_hard+3)^0,c
  5962   001676  0E04               	movlw	4
  5963   001678  2407               	addwf	(??_color_processor_hard+2)^0,w,c
  5964   00167A  6ED9               	movwf	fsr2l,c
  5965   00167C  0E00               	movlw	0
  5966   00167E  2008               	addwfc	(??_color_processor_hard+3)^0,w,c
  5967   001680  6EDA               	movwf	fsr2h,c
  5968   001682  CFDE F017          	movff	postinc2,color_processor_hard@cg
  5969   001686  CFDD F018          	movff	postdec2,color_processor_hard@cg+1
  5970                           
  5971                           ;../color.c: 162:         unsigned int cb = calibrated[4*i+3];
  5972   00168A  C01B  F005         	movff	color_processor_hard@i,??_color_processor_hard
  5973   00168E  C01C  F006         	movff	color_processor_hard@i+1,??_color_processor_hard+1
  5974   001692  90D8               	bcf	status,0,c
  5975   001694  3605               	rlcf	??_color_processor_hard^0,f,c
  5976   001696  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5977   001698  90D8               	bcf	status,0,c
  5978   00169A  3605               	rlcf	??_color_processor_hard^0,f,c
  5979   00169C  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5980   00169E  90D8               	bcf	status,0,c
  5981   0016A0  3605               	rlcf	??_color_processor_hard^0,f,c
  5982   0016A2  3606               	rlcf	(??_color_processor_hard+1)^0,f,c
  5983   0016A4  5005               	movf	??_color_processor_hard^0,w,c
  5984   0016A6  2403               	addwf	color_processor_hard@calibrated^0,w,c
  5985   0016A8  6E07               	movwf	(??_color_processor_hard+2)^0,c
  5986   0016AA  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5987   0016AC  2004               	addwfc	(color_processor_hard@calibrated+1)^0,w,c
  5988   0016AE  6E08               	movwf	(??_color_processor_hard+3)^0,c
  5989   0016B0  0E06               	movlw	6
  5990   0016B2  2407               	addwf	(??_color_processor_hard+2)^0,w,c
  5991   0016B4  6ED9               	movwf	fsr2l,c
  5992   0016B6  0E00               	movlw	0
  5993   0016B8  2008               	addwfc	(??_color_processor_hard+3)^0,w,c
  5994   0016BA  6EDA               	movwf	fsr2h,c
  5995   0016BC  CFDE F019          	movff	postinc2,color_processor_hard@cb
  5996   0016C0  CFDD F01A          	movff	postdec2,color_processor_hard@cb+1
  5997   0016C4                     
  5998                           ;../color.c: 163:         _Bool condition_r = r>cr-20 && r<cr+20;
  5999   0016C4  0E00               	movlw	0
  6000   0016C6  6E0C               	movwf	_color_processor_hard$370^0,c
  6001   0016C8  0EEC               	movlw	236
  6002   0016CA  2415               	addwf	color_processor_hard@cr^0,w,c
  6003   0016CC  6E05               	movwf	??_color_processor_hard^0,c
  6004   0016CE  0EFF               	movlw	255
  6005   0016D0  2016               	addwfc	(color_processor_hard@cr+1)^0,w,c
  6006   0016D2  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6007   0016D4  500F               	movf	color_processor_hard@r^0,w,c
  6008   0016D6  5C05               	subwf	??_color_processor_hard^0,w,c
  6009   0016D8  5010               	movf	(color_processor_hard@r+1)^0,w,c
  6010   0016DA  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  6011   0016DC  B0D8               	btfsc	status,0,c
  6012   0016DE  EF73  F00B         	goto	u1531
  6013   0016E2  EF75  F00B         	goto	u1530
  6014   0016E6                     u1531:
  6015   0016E6  EF88  F00B         	goto	l64
  6016   0016EA                     u1530:
  6017   0016EA  0E14               	movlw	20
  6018   0016EC  2415               	addwf	color_processor_hard@cr^0,w,c
  6019   0016EE  6E05               	movwf	??_color_processor_hard^0,c
  6020   0016F0  0E00               	movlw	0
  6021   0016F2  2016               	addwfc	(color_processor_hard@cr+1)^0,w,c
  6022   0016F4  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6023   0016F6  5005               	movf	??_color_processor_hard^0,w,c
  6024   0016F8  5C0F               	subwf	color_processor_hard@r^0,w,c
  6025   0016FA  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6026   0016FC  5810               	subwfb	(color_processor_hard@r+1)^0,w,c
  6027   0016FE  B0D8               	btfsc	status,0,c
  6028   001700  EF84  F00B         	goto	u1541
  6029   001704  EF86  F00B         	goto	u1540
  6030   001708                     u1541:
  6031   001708  EF88  F00B         	goto	l64
  6032   00170C                     u1540:
  6033   00170C  0E01               	movlw	1
  6034   00170E  6E0C               	movwf	_color_processor_hard$370^0,c
  6035   001710                     l64:
  6036   001710  500C               	movf	_color_processor_hard$370^0,w,c
  6037   001712  A4D8               	btfss	status,2,c
  6038   001714  EF8E  F00B         	goto	u1551
  6039   001718  EF91  F00B         	goto	u1550
  6040   00171C                     u1551:
  6041   00171C  0E01               	movlw	1
  6042   00171E  EF92  F00B         	goto	u1560
  6043   001722                     u1550:
  6044   001722  0E00               	movlw	0
  6045   001724                     u1560:
  6046   001724  6E09               	movwf	color_processor_hard@condition_r^0,c
  6047                           
  6048                           ;../color.c: 164:         _Bool condition_g = b>cb-20 && b<cb+20;
  6049   001726  0E00               	movlw	0
  6050   001728  6E0D               	movwf	_color_processor_hard$372^0,c
  6051   00172A  0EEC               	movlw	236
  6052   00172C  2419               	addwf	color_processor_hard@cb^0,w,c
  6053   00172E  6E05               	movwf	??_color_processor_hard^0,c
  6054   001730  0EFF               	movlw	255
  6055   001732  201A               	addwfc	(color_processor_hard@cb+1)^0,w,c
  6056   001734  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6057   001736  5013               	movf	color_processor_hard@b^0,w,c
  6058   001738  5C05               	subwf	??_color_processor_hard^0,w,c
  6059   00173A  5014               	movf	(color_processor_hard@b+1)^0,w,c
  6060   00173C  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  6061   00173E  B0D8               	btfsc	status,0,c
  6062   001740  EFA4  F00B         	goto	u1571
  6063   001744  EFA6  F00B         	goto	u1570
  6064   001748                     u1571:
  6065   001748  EFB9  F00B         	goto	l66
  6066   00174C                     u1570:
  6067   00174C  0E14               	movlw	20
  6068   00174E  2419               	addwf	color_processor_hard@cb^0,w,c
  6069   001750  6E05               	movwf	??_color_processor_hard^0,c
  6070   001752  0E00               	movlw	0
  6071   001754  201A               	addwfc	(color_processor_hard@cb+1)^0,w,c
  6072   001756  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6073   001758  5005               	movf	??_color_processor_hard^0,w,c
  6074   00175A  5C13               	subwf	color_processor_hard@b^0,w,c
  6075   00175C  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6076   00175E  5814               	subwfb	(color_processor_hard@b+1)^0,w,c
  6077   001760  B0D8               	btfsc	status,0,c
  6078   001762  EFB5  F00B         	goto	u1581
  6079   001766  EFB7  F00B         	goto	u1580
  6080   00176A                     u1581:
  6081   00176A  EFB9  F00B         	goto	l66
  6082   00176E                     u1580:
  6083   00176E  0E01               	movlw	1
  6084   001770  6E0D               	movwf	_color_processor_hard$372^0,c
  6085   001772                     l66:
  6086   001772  500D               	movf	_color_processor_hard$372^0,w,c
  6087   001774  A4D8               	btfss	status,2,c
  6088   001776  EFBF  F00B         	goto	u1591
  6089   00177A  EFC2  F00B         	goto	u1590
  6090   00177E                     u1591:
  6091   00177E  0E01               	movlw	1
  6092   001780  EFC3  F00B         	goto	u1600
  6093   001784                     u1590:
  6094   001784  0E00               	movlw	0
  6095   001786                     u1600:
  6096   001786  6E0A               	movwf	color_processor_hard@condition_g^0,c
  6097                           
  6098                           ;../color.c: 165:         _Bool condition_b = g>cg-20 && g<cg+20;
  6099   001788  0E00               	movlw	0
  6100   00178A  6E0E               	movwf	_color_processor_hard$374^0,c
  6101   00178C  0EEC               	movlw	236
  6102   00178E  2417               	addwf	color_processor_hard@cg^0,w,c
  6103   001790  6E05               	movwf	??_color_processor_hard^0,c
  6104   001792  0EFF               	movlw	255
  6105   001794  2018               	addwfc	(color_processor_hard@cg+1)^0,w,c
  6106   001796  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6107   001798  5011               	movf	color_processor_hard@g^0,w,c
  6108   00179A  5C05               	subwf	??_color_processor_hard^0,w,c
  6109   00179C  5012               	movf	(color_processor_hard@g+1)^0,w,c
  6110   00179E  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  6111   0017A0  B0D8               	btfsc	status,0,c
  6112   0017A2  EFD5  F00B         	goto	u1611
  6113   0017A6  EFD7  F00B         	goto	u1610
  6114   0017AA                     u1611:
  6115   0017AA  EFEA  F00B         	goto	l68
  6116   0017AE                     u1610:
  6117   0017AE  0E14               	movlw	20
  6118   0017B0  2417               	addwf	color_processor_hard@cg^0,w,c
  6119   0017B2  6E05               	movwf	??_color_processor_hard^0,c
  6120   0017B4  0E00               	movlw	0
  6121   0017B6  2018               	addwfc	(color_processor_hard@cg+1)^0,w,c
  6122   0017B8  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6123   0017BA  5005               	movf	??_color_processor_hard^0,w,c
  6124   0017BC  5C11               	subwf	color_processor_hard@g^0,w,c
  6125   0017BE  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6126   0017C0  5812               	subwfb	(color_processor_hard@g+1)^0,w,c
  6127   0017C2  B0D8               	btfsc	status,0,c
  6128   0017C4  EFE6  F00B         	goto	u1621
  6129   0017C8  EFE8  F00B         	goto	u1620
  6130   0017CC                     u1621:
  6131   0017CC  EFEA  F00B         	goto	l68
  6132   0017D0                     u1620:
  6133   0017D0  0E01               	movlw	1
  6134   0017D2  6E0E               	movwf	_color_processor_hard$374^0,c
  6135   0017D4                     l68:
  6136   0017D4  500E               	movf	_color_processor_hard$374^0,w,c
  6137   0017D6  A4D8               	btfss	status,2,c
  6138   0017D8  EFF0  F00B         	goto	u1631
  6139   0017DC  EFF3  F00B         	goto	u1630
  6140   0017E0                     u1631:
  6141   0017E0  0E01               	movlw	1
  6142   0017E2  EFF4  F00B         	goto	u1640
  6143   0017E6                     u1630:
  6144   0017E6  0E00               	movlw	0
  6145   0017E8                     u1640:
  6146   0017E8  6E0B               	movwf	color_processor_hard@condition_b^0,c
  6147                           
  6148                           ;../color.c: 167:         if (condition_r && condition_g && condition_b){
  6149   0017EA  5009               	movf	color_processor_hard@condition_r^0,w,c
  6150   0017EC  B4D8               	btfsc	status,2,c
  6151   0017EE  EFFB  F00B         	goto	u1651
  6152   0017F2  EFFD  F00B         	goto	u1650
  6153   0017F6                     u1651:
  6154   0017F6  EF13  F00C         	goto	l2715
  6155   0017FA                     u1650:
  6156   0017FA  500A               	movf	color_processor_hard@condition_g^0,w,c
  6157   0017FC  B4D8               	btfsc	status,2,c
  6158   0017FE  EF03  F00C         	goto	u1661
  6159   001802  EF05  F00C         	goto	u1660
  6160   001806                     u1661:
  6161   001806  EF13  F00C         	goto	l2715
  6162   00180A                     u1660:
  6163   00180A  500B               	movf	color_processor_hard@condition_b^0,w,c
  6164   00180C  B4D8               	btfsc	status,2,c
  6165   00180E  EF0B  F00C         	goto	u1671
  6166   001812  EF0D  F00C         	goto	u1670
  6167   001816                     u1671:
  6168   001816  EF13  F00C         	goto	l2715
  6169   00181A                     u1670:
  6170   00181A                     
  6171                           ;../color.c: 168:             return i;
  6172   00181A  C01B  F001         	movff	color_processor_hard@i,?_color_processor_hard
  6173   00181E  C01C  F002         	movff	color_processor_hard@i+1,?_color_processor_hard+1
  6174   001822  EF23  F00C         	goto	l70
  6175   001826                     l2715:
  6176                           
  6177                           ;../color.c: 170:     }
  6178   001826  4A1B               	infsnz	color_processor_hard@i^0,f,c
  6179   001828  2A1C               	incf	(color_processor_hard@i+1)^0,f,c
  6180   00182A  BE1C               	btfsc	(color_processor_hard@i+1)^0,7,c
  6181   00182C  EF21  F00C         	goto	u1681
  6182   001830  501C               	movf	(color_processor_hard@i+1)^0,w,c
  6183   001832  E109               	bnz	u1680
  6184   001834  0E08               	movlw	8
  6185   001836  5C1B               	subwf	color_processor_hard@i^0,w,c
  6186   001838  A0D8               	btfss	status,0,c
  6187   00183A  EF21  F00C         	goto	u1681
  6188   00183E  EF23  F00C         	goto	u1680
  6189   001842                     u1681:
  6190   001842  EF0B  F00B         	goto	l2687
  6191   001846                     u1680:
  6192   001846                     l70:
  6193   001846  0012               	return		;funcret
  6194   001848                     __end_of_color_processor_hard:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _color_processor_easy *****************
  6198 ;; Defined at:
  6199 ;;		line 134 in file "../color.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  6202 ;;		 -> main@RGB_recorded(8), 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  b               2    8[COMRAM] unsigned int 
  6205 ;;  a               2    6[COMRAM] unsigned int 
  6206 ;;  c               2    4[COMRAM] unsigned int 
  6207 ;;  color           2    2[COMRAM] unsigned int 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  2    0[COMRAM] unsigned int 
  6210 ;; Registers used:
  6211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6218 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6220 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;Total ram usage:       10 bytes
  6222 ;; Hardware stack levels used: 1
  6223 ;; Hardware stack levels required when called: 1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_main
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text36
  6232   00211E                     __ptext36:
  6233                           	callstack 0
  6234   00211E                     _color_processor_easy:
  6235                           	callstack 29
  6236   00211E                     
  6237                           ;../color.c: 134: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 135
      +                          : {;../color.c: 136:     unsigned int a = rgb->R;
  6238   00211E  EE20 F002          	lfsr	2,2
  6239   002122  5001               	movf	color_processor_easy@rgb^0,w,c
  6240   002124  26D9               	addwf	fsr2l,f,c
  6241   002126  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6242   002128  22DA               	addwfc	fsr2h,f,c
  6243   00212A  CFDE F007          	movff	postinc2,color_processor_easy@a
  6244   00212E  CFDD F008          	movff	postdec2,color_processor_easy@a+1
  6245                           
  6246                           ;../color.c: 137:     unsigned int b = rgb->G;
  6247   002132  EE20 F004          	lfsr	2,4
  6248   002136  5001               	movf	color_processor_easy@rgb^0,w,c
  6249   002138  26D9               	addwf	fsr2l,f,c
  6250   00213A  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6251   00213C  22DA               	addwfc	fsr2h,f,c
  6252   00213E  CFDE F009          	movff	postinc2,color_processor_easy@b
  6253   002142  CFDD F00A          	movff	postdec2,color_processor_easy@b+1
  6254                           
  6255                           ;../color.c: 138:     unsigned int c = rgb->B;
  6256   002146  EE20 F006          	lfsr	2,6
  6257   00214A  5001               	movf	color_processor_easy@rgb^0,w,c
  6258   00214C  26D9               	addwf	fsr2l,f,c
  6259   00214E  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6260   002150  22DA               	addwfc	fsr2h,f,c
  6261   002152  CFDE F005          	movff	postinc2,color_processor_easy@c
  6262   002156  CFDD F006          	movff	postdec2,color_processor_easy@c+1
  6263   00215A                     
  6264                           ;../color.c: 139:     unsigned int color;;../color.c: 140:     if (a>=b & a>=c){
  6265   00215A  5009               	movf	color_processor_easy@b^0,w,c
  6266   00215C  5C07               	subwf	color_processor_easy@a^0,w,c
  6267   00215E  500A               	movf	(color_processor_easy@b+1)^0,w,c
  6268   002160  5808               	subwfb	(color_processor_easy@a+1)^0,w,c
  6269   002162  A0D8               	btfss	status,0,c
  6270   002164  EFB6  F010         	goto	u1491
  6271   002168  EFB8  F010         	goto	u1490
  6272   00216C                     u1491:
  6273   00216C  EFC9  F010         	goto	l2667
  6274   002170                     u1490:
  6275   002170  5005               	movf	color_processor_easy@c^0,w,c
  6276   002172  5C07               	subwf	color_processor_easy@a^0,w,c
  6277   002174  5006               	movf	(color_processor_easy@c+1)^0,w,c
  6278   002176  5808               	subwfb	(color_processor_easy@a+1)^0,w,c
  6279   002178  A0D8               	btfss	status,0,c
  6280   00217A  EFC1  F010         	goto	u1501
  6281   00217E  EFC3  F010         	goto	u1500
  6282   002182                     u1501:
  6283   002182  EFC9  F010         	goto	l2667
  6284   002186                     u1500:
  6285   002186                     
  6286                           ;../color.c: 141:         color=1;
  6287   002186  0E00               	movlw	0
  6288   002188  6E04               	movwf	(color_processor_easy@color+1)^0,c
  6289   00218A  0E01               	movlw	1
  6290   00218C  6E03               	movwf	color_processor_easy@color^0,c
  6291                           
  6292                           ;../color.c: 142:     }
  6293   00218E  EFE9  F010         	goto	l2675
  6294   002192                     l2667:
  6295   002192  5007               	movf	color_processor_easy@a^0,w,c
  6296   002194  5C09               	subwf	color_processor_easy@b^0,w,c
  6297   002196  5008               	movf	(color_processor_easy@a+1)^0,w,c
  6298   002198  580A               	subwfb	(color_processor_easy@b+1)^0,w,c
  6299   00219A  A0D8               	btfss	status,0,c
  6300   00219C  EFD2  F010         	goto	u1511
  6301   0021A0  EFD4  F010         	goto	u1510
  6302   0021A4                     u1511:
  6303   0021A4  EFE5  F010         	goto	l2673
  6304   0021A8                     u1510:
  6305   0021A8  5005               	movf	color_processor_easy@c^0,w,c
  6306   0021AA  5C09               	subwf	color_processor_easy@b^0,w,c
  6307   0021AC  5006               	movf	(color_processor_easy@c+1)^0,w,c
  6308   0021AE  580A               	subwfb	(color_processor_easy@b+1)^0,w,c
  6309   0021B0  A0D8               	btfss	status,0,c
  6310   0021B2  EFDD  F010         	goto	u1521
  6311   0021B6  EFDF  F010         	goto	u1520
  6312   0021BA                     u1521:
  6313   0021BA  EFE5  F010         	goto	l2673
  6314   0021BE                     u1520:
  6315   0021BE                     
  6316                           ;../color.c: 144:         color=2;
  6317   0021BE  0E00               	movlw	0
  6318   0021C0  6E04               	movwf	(color_processor_easy@color+1)^0,c
  6319   0021C2  0E02               	movlw	2
  6320   0021C4  6E03               	movwf	color_processor_easy@color^0,c
  6321                           
  6322                           ;../color.c: 145:     }
  6323   0021C6  EFE9  F010         	goto	l2675
  6324   0021CA                     l2673:
  6325                           
  6326                           ;../color.c: 147:         color=3;
  6327   0021CA  0E00               	movlw	0
  6328   0021CC  6E04               	movwf	(color_processor_easy@color+1)^0,c
  6329   0021CE  0E03               	movlw	3
  6330   0021D0  6E03               	movwf	color_processor_easy@color^0,c
  6331   0021D2                     l2675:
  6332                           
  6333                           ;../color.c: 149:     return color;
  6334   0021D2  C003  F001         	movff	color_processor_easy@color,?_color_processor_easy
  6335   0021D6  C004  F002         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  6336   0021DA  0012               	return		;funcret
  6337   0021DC                     __end_of_color_processor_easy:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _color_click_init *****************
  6341 ;; Defined at:
  6342 ;;		line 6 in file "../color.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;Total ram usage:        1 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 4
  6363 ;; This function calls:
  6364 ;;		_I2C_2_Master_Init
  6365 ;;		_color_writetoaddr
  6366 ;; This function is called by:
  6367 ;;		_main
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text37
  6372   0027E4                     __ptext37:
  6373                           	callstack 0
  6374   0027E4                     _color_click_init:
  6375                           	callstack 26
  6376   0027E4                     
  6377                           ;../color.c: 9:     I2C_2_Master_Init();
  6378   0027E4  ECAD  F015         	call	_I2C_2_Master_Init	;wreg free
  6379   0027E8                     
  6380                           ;../color.c: 12:   color_writetoaddr(0x00, 0x01);
  6381   0027E8  0E01               	movlw	1
  6382   0027EA  6E03               	movwf	color_writetoaddr@value^0,c
  6383   0027EC  0E00               	movlw	0
  6384   0027EE  ECFB  F015         	call	_color_writetoaddr
  6385   0027F2                     
  6386                           ;../color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6387   0027F2  0E3F               	movlw	63
  6388   0027F4  6E05               	movwf	??_color_click_init^0,c
  6389   0027F6  0E55               	movlw	85
  6390   0027F8                     u2067:
  6391   0027F8  2EE8               	decfsz	wreg,f,c
  6392   0027FA  D7FE               	bra	u2067
  6393   0027FC  2E05               	decfsz	??_color_click_init^0,f,c
  6394   0027FE  D7FC               	bra	u2067
  6395   002800  F000               	nop	
  6396   002802                     
  6397                           ;../color.c: 16:  color_writetoaddr(0x00, 0x03);
  6398   002802  0E03               	movlw	3
  6399   002804  6E03               	movwf	color_writetoaddr@value^0,c
  6400   002806  0E00               	movlw	0
  6401   002808  ECFB  F015         	call	_color_writetoaddr
  6402   00280C                     
  6403                           ;../color.c: 19:  color_writetoaddr(0x01, 0xD5);
  6404   00280C  0ED5               	movlw	213
  6405   00280E  6E03               	movwf	color_writetoaddr@value^0,c
  6406   002810  0E01               	movlw	1
  6407   002812  ECFB  F015         	call	_color_writetoaddr
  6408   002816                     
  6409                           ;../color.c: 22:     TRISHbits.TRISH1 = 0;
  6410   002816  9288               	bcf	136,1,c	;volatile
  6411   002818                     
  6412                           ;../color.c: 23:     TRISDbits.TRISD3 = 0;
  6413   002818  9684               	bcf	132,3,c	;volatile
  6414   00281A                     
  6415                           ;../color.c: 24:     TRISDbits.TRISD4 = 0;
  6416   00281A  9884               	bcf	132,4,c	;volatile
  6417   00281C                     
  6418                           ;../color.c: 25:     TRISHbits.TRISH0 = 0;
  6419   00281C  9088               	bcf	136,0,c	;volatile
  6420   00281E                     
  6421                           ;../color.c: 26:     TRISFbits.TRISF0 = 0;
  6422   00281E  9086               	bcf	134,0,c	;volatile
  6423   002820                     
  6424                           ;../color.c: 28:     LATHbits.LATH1 = 1;
  6425   002820  8280               	bsf	128,1,c	;volatile
  6426   002822                     
  6427                           ;../color.c: 29:     LATDbits.LATD3 = 1;
  6428   002822  867C               	bsf	124,3,c	;volatile
  6429   002824                     
  6430                           ;../color.c: 30:     LATDbits.LATD4 = 0;
  6431   002824  987C               	bcf	124,4,c	;volatile
  6432   002826                     
  6433                           ;../color.c: 31:     LATHbits.LATH0 = 0;
  6434   002826  9080               	bcf	128,0,c	;volatile
  6435   002828                     
  6436                           ;../color.c: 32:     LATFbits.LATF0 = 0;
  6437   002828  907E               	bcf	126,0,c	;volatile
  6438   00282A                     
  6439                           ;../color.c: 35:     LATDbits.LATD7=0;
  6440   00282A  9E7C               	bcf	124,7,c	;volatile
  6441   00282C                     
  6442                           ;../color.c: 36:     LATHbits.LATH3=0;
  6443   00282C  9680               	bcf	128,3,c	;volatile
  6444   00282E                     
  6445                           ;../color.c: 37:     TRISDbits.TRISD7=0;
  6446   00282E  9E84               	bcf	132,7,c	;volatile
  6447   002830                     
  6448                           ;../color.c: 38:     TRISHbits.TRISH3=0;
  6449   002830  9688               	bcf	136,3,c	;volatile
  6450   002832                     
  6451                           ;../color.c: 40:     TRISFbits.TRISF2=1;
  6452   002832  8486               	bsf	134,2,c	;volatile
  6453   002834                     
  6454                           ;../color.c: 41:     ANSELFbits.ANSELF2=0;
  6455   002834  010E               	movlb	14	; () banked
  6456   002836  95B4               	bcf	180,2,b	;volatile
  6457   002838                     
  6458                           ; BSR set to: 14
  6459                           ;../color.c: 42:     TRISFbits.TRISF3=1;
  6460   002838  8686               	bsf	134,3,c	;volatile
  6461   00283A                     
  6462                           ; BSR set to: 14
  6463                           ;../color.c: 43:     ANSELFbits.ANSELF3=0;
  6464   00283A  97B4               	bcf	180,3,b	;volatile
  6465   00283C                     
  6466                           ; BSR set to: 14
  6467   00283C  0012               	return		;funcret
  6468   00283E                     __end_of_color_click_init:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _color_writetoaddr *****************
  6472 ;; Defined at:
  6473 ;;		line 46 in file "../color.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  address         1    wreg     unsigned char 
  6476 ;;  value           1    2[COMRAM] unsigned char 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  address         1    3[COMRAM] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6488 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;Total ram usage:        2 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; Hardware stack levels required when called: 3
  6495 ;; This function calls:
  6496 ;;		_I2C_2_Master_Start
  6497 ;;		_I2C_2_Master_Stop
  6498 ;;		_I2C_2_Master_Write
  6499 ;; This function is called by:
  6500 ;;		_color_click_init
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text38
  6505   002BF6                     __ptext38:
  6506                           	callstack 0
  6507   002BF6                     _color_writetoaddr:
  6508                           	callstack 26
  6509                           
  6510                           ; BSR set to: 14
  6511                           ;incstack = 0
  6512                           ;color_writetoaddr@address stored from wreg
  6513   002BF6  6E04               	movwf	color_writetoaddr@address^0,c
  6514   002BF8                     
  6515                           ;../color.c: 46: void color_writetoaddr(char address, char value);../color.c: 47: {;../c
      +                          olor.c: 48:     I2C_2_Master_Start();
  6516   002BF8  EC51  F016         	call	_I2C_2_Master_Start	;wreg free
  6517                           
  6518                           ;../color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  6519   002BFC  0E52               	movlw	82
  6520   002BFE  EC41  F016         	call	_I2C_2_Master_Write
  6521                           
  6522                           ;../color.c: 50:     I2C_2_Master_Write(0x80 | address);
  6523   002C02  5004               	movf	color_writetoaddr@address^0,w,c
  6524   002C04  0980               	iorlw	128
  6525   002C06  EC41  F016         	call	_I2C_2_Master_Write
  6526                           
  6527                           ;../color.c: 51:     I2C_2_Master_Write(value);
  6528   002C0A  5003               	movf	color_writetoaddr@value^0,w,c
  6529   002C0C  EC41  F016         	call	_I2C_2_Master_Write
  6530                           
  6531                           ;../color.c: 52:     I2C_2_Master_Stop();
  6532   002C10  EC4C  F016         	call	_I2C_2_Master_Stop	;wreg free
  6533   002C14  0012               	return		;funcret
  6534   002C16                     __end_of_color_writetoaddr:
  6535                           	callstack 0
  6536                           
  6537 ;; *************** function _I2C_2_Master_Write *****************
  6538 ;; Defined at:
  6539 ;;		line 45 in file "../i2c.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  data_byte       1    wreg     unsigned char 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  data_byte       1    1[COMRAM] unsigned char 
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  1    wreg      void 
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0, cstack
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;Total ram usage:        1 bytes
  6558 ;; Hardware stack levels used: 1
  6559 ;; Hardware stack levels required when called: 2
  6560 ;; This function calls:
  6561 ;;		_I2C_2_Master_Idle
  6562 ;; This function is called by:
  6563 ;;		_color_writetoaddr
  6564 ;;		_color_read_Luminosity
  6565 ;;		_color_read_Red
  6566 ;;		_color_read_Green
  6567 ;;		_color_read_Blue
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text39
  6572   002C82                     __ptext39:
  6573                           	callstack 0
  6574   002C82                     _I2C_2_Master_Write:
  6575                           	callstack 26
  6576                           
  6577                           ;incstack = 0
  6578                           ;I2C_2_Master_Write@data_byte stored from wreg
  6579   002C82  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6580   002C84                     
  6581                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  6582   002C84  ECC2  F015         	call	_I2C_2_Master_Idle	;wreg free
  6583   002C88                     
  6584                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  6585   002C88  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6586   002C8C  0012               	return		;funcret
  6587   002C8E                     __end_of_I2C_2_Master_Write:
  6588                           	callstack 0
  6589                           
  6590 ;; *************** function _I2C_2_Master_Stop *****************
  6591 ;; Defined at:
  6592 ;;		line 39 in file "../i2c.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;		None
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;Total ram usage:        0 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 2
  6613 ;; This function calls:
  6614 ;;		_I2C_2_Master_Idle
  6615 ;; This function is called by:
  6616 ;;		_color_writetoaddr
  6617 ;;		_color_read_Luminosity
  6618 ;;		_color_read_Red
  6619 ;;		_color_read_Green
  6620 ;;		_color_read_Blue
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text40
  6625   002C98                     __ptext40:
  6626                           	callstack 0
  6627   002C98                     _I2C_2_Master_Stop:
  6628                           	callstack 26
  6629   002C98                     
  6630                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  6631   002C98  ECC2  F015         	call	_I2C_2_Master_Idle	;wreg free
  6632   002C9C                     
  6633                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6634   002C9C  010E               	movlb	14	; () banked
  6635   002C9E  85DA               	bsf	218,2,b	;volatile
  6636   002CA0                     
  6637                           ; BSR set to: 14
  6638   002CA0  0012               	return		;funcret
  6639   002CA2                     __end_of_I2C_2_Master_Stop:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _I2C_2_Master_Start *****************
  6643 ;; Defined at:
  6644 ;;		line 27 in file "../i2c.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 2
  6665 ;; This function calls:
  6666 ;;		_I2C_2_Master_Idle
  6667 ;; This function is called by:
  6668 ;;		_color_writetoaddr
  6669 ;;		_color_read_Luminosity
  6670 ;;		_color_read_Red
  6671 ;;		_color_read_Green
  6672 ;;		_color_read_Blue
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text41
  6677   002CA2                     __ptext41:
  6678                           	callstack 0
  6679   002CA2                     _I2C_2_Master_Start:
  6680                           	callstack 26
  6681   002CA2                     
  6682                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  6683   002CA2  ECC2  F015         	call	_I2C_2_Master_Idle	;wreg free
  6684   002CA6                     
  6685                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6686   002CA6  010E               	movlb	14	; () banked
  6687   002CA8  81DA               	bsf	218,0,b	;volatile
  6688   002CAA                     
  6689                           ; BSR set to: 14
  6690   002CAA  0012               	return		;funcret
  6691   002CAC                     __end_of_I2C_2_Master_Start:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function _I2C_2_Master_Idle *****************
  6695 ;; Defined at:
  6696 ;;		line 22 in file "../i2c.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;Total ram usage:        1 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_I2C_2_Master_Start
  6721 ;;		_I2C_2_Master_RepStart
  6722 ;;		_I2C_2_Master_Stop
  6723 ;;		_I2C_2_Master_Write
  6724 ;;		_I2C_2_Master_Read
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text42
  6729   002B84                     __ptext42:
  6730                           	callstack 0
  6731   002B84                     _I2C_2_Master_Idle:
  6732                           	callstack 26
  6733   002B84                     l100:
  6734   002B84  010E               	movlb	14	; () banked
  6735   002B86  B5D8               	btfsc	216,2,b	;volatile
  6736   002B88  EFC8  F015         	goto	u1141
  6737   002B8C  EFCA  F015         	goto	u1140
  6738   002B90                     u1141:
  6739   002B90  EFC2  F015         	goto	l100
  6740   002B94                     u1140:
  6741   002B94                     
  6742                           ; BSR set to: 14
  6743   002B94  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6744   002B98  0E1F               	movlw	31
  6745   002B9A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6746   002B9C  A4D8               	btfss	status,2,c
  6747   002B9E  EFD3  F015         	goto	u1151
  6748   002BA2  EFD5  F015         	goto	u1150
  6749   002BA6                     u1151:
  6750   002BA6  EFC2  F015         	goto	l100
  6751   002BAA                     u1150:
  6752   002BAA                     
  6753                           ; BSR set to: 14
  6754   002BAA  0012               	return		;funcret
  6755   002BAC                     __end_of_I2C_2_Master_Idle:
  6756                           	callstack 0
  6757                           
  6758 ;; *************** function _I2C_2_Master_Init *****************
  6759 ;; Defined at:
  6760 ;;		line 4 in file "../i2c.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;		None
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;		None
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6778 ;;Total ram usage:        0 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_color_click_init
  6785 ;;		_main
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text43
  6790   002B5A                     __ptext43:
  6791                           	callstack 0
  6792   002B5A                     _I2C_2_Master_Init:
  6793                           	callstack 28
  6794   002B5A                     
  6795                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6796   002B5A  010E               	movlb	14	; () banked
  6797   002B5C  51D9               	movf	217,w,b	;volatile
  6798   002B5E  0BF0               	andlw	-16
  6799   002B60  0908               	iorlw	8
  6800   002B62  6FD9               	movwf	217,b	;volatile
  6801   002B64                     
  6802                           ; BSR set to: 14
  6803                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6804   002B64  8BD9               	bsf	217,5,b	;volatile
  6805                           
  6806                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6807   002B66  0E9F               	movlw	159
  6808   002B68  6FD6               	movwf	214,b	;volatile
  6809   002B6A                     
  6810                           ; BSR set to: 14
  6811                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6812   002B6A  8A84               	bsf	132,5,c	;volatile
  6813   002B6C                     
  6814                           ; BSR set to: 14
  6815                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6816   002B6C  8C84               	bsf	132,6,c	;volatile
  6817   002B6E                     
  6818                           ; BSR set to: 14
  6819                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6820   002B6E  9BA7               	bcf	167,5,b	;volatile
  6821   002B70                     
  6822                           ; BSR set to: 14
  6823                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6824   002B70  9DA7               	bcf	167,6,b	;volatile
  6825                           
  6826                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  6827   002B72  0E1D               	movlw	29
  6828   002B74  6F1D               	movwf	29,b	;volatile
  6829                           
  6830                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  6831   002B76  0E1E               	movlw	30
  6832   002B78  6F1C               	movwf	28,b	;volatile
  6833                           
  6834                           ;../i2c.c: 18:   RD5PPS=0x1C;
  6835   002B7A  0E1C               	movlw	28
  6836   002B7C  6F6F               	movwf	111,b	;volatile
  6837                           
  6838                           ;../i2c.c: 19:   RD6PPS=0x1B;
  6839   002B7E  0E1B               	movlw	27
  6840   002B80  6F70               	movwf	112,b	;volatile
  6841   002B82                     
  6842                           ; BSR set to: 14
  6843   002B82  0012               	return		;funcret
  6844   002B84                     __end_of_I2C_2_Master_Init:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function _Timer0_init *****************
  6848 ;; Defined at:
  6849 ;;		line 62 in file "../rc_servo.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_main
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text44
  6878   002C16                     __ptext44:
  6879                           	callstack 0
  6880   002C16                     _Timer0_init:
  6881                           	callstack 29
  6882   002C16                     
  6883                           ;../rc_servo.c: 64:     T0CON1bits.T0CS=0b010;
  6884   002C16  50D6               	movf	214,w,c	;volatile
  6885   002C18  0B1F               	andlw	-225
  6886   002C1A  0940               	iorlw	64
  6887   002C1C  6ED6               	movwf	214,c	;volatile
  6888   002C1E                     
  6889                           ;../rc_servo.c: 65:     T0CON1bits.T0ASYNC=1;
  6890   002C1E  88D6               	bsf	214,4,c	;volatile
  6891                           
  6892                           ;../rc_servo.c: 66:     T0CON1bits.T0CKPS=0b0111;
  6893   002C20  50D6               	movf	214,w,c	;volatile
  6894   002C22  0BF0               	andlw	-16
  6895   002C24  0907               	iorlw	7
  6896   002C26  6ED6               	movwf	214,c	;volatile
  6897   002C28                     
  6898                           ;../rc_servo.c: 68:     T0CON0bits.T016BIT=1;
  6899   002C28  88D5               	bsf	213,4,c	;volatile
  6900                           
  6901                           ;../rc_servo.c: 71:     TMR0H=(65535-2500)>>8;
  6902   002C2A  0EF6               	movlw	246
  6903   002C2C  6ED4               	movwf	212,c	;volatile
  6904                           
  6905                           ;../rc_servo.c: 72:     TMR0L=(unsigned char)(65535-2500);
  6906   002C2E  0E3B               	movlw	59
  6907   002C30  6ED3               	movwf	211,c	;volatile
  6908   002C32                     
  6909                           ;../rc_servo.c: 73:     T0CON0bits.T0EN=1;
  6910   002C32  8ED5               	bsf	213,7,c	;volatile
  6911   002C34  0012               	return		;funcret
  6912   002C36                     __end_of_Timer0_init:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _Interrupts_init *****************
  6916 ;; Defined at:
  6917 ;;		line 8 in file "../rc_servo.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		None
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; Hardware stack levels required when called: 1
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_main
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text45
  6946   002C6C                     __ptext45:
  6947                           	callstack 0
  6948   002C6C                     _Interrupts_init:
  6949                           	callstack 29
  6950   002C6C                     
  6951                           ;../rc_servo.c: 12:     INTCONbits.IPEN = 1;
  6952   002C6C  8AF2               	bsf	242,5,c	;volatile
  6953                           
  6954                           ;../rc_servo.c: 13:     INTCONbits.PEIE = 1;
  6955   002C6E  8CF2               	bsf	242,6,c	;volatile
  6956                           
  6957                           ;../rc_servo.c: 16:     PIE0bits.TMR0IE = 1;
  6958   002C70  010E               	movlb	14	; () banked
  6959   002C72  8B29               	bsf	41,5,b	;volatile
  6960                           
  6961                           ;../rc_servo.c: 17:     IPR0bits.TMR0IP = 1;
  6962   002C74  8B1F               	bsf	31,5,b	;volatile
  6963                           
  6964                           ;../rc_servo.c: 18:     PIR0bits.TMR0IF = 0;
  6965   002C76  9B33               	bcf	51,5,b	;volatile
  6966                           
  6967                           ;../rc_servo.c: 20:     PIE2bits.C1IE=1;
  6968   002C78  812B               	bsf	43,0,b	;volatile
  6969                           
  6970                           ;../rc_servo.c: 21:     IPR2bits.C1IP=0;
  6971   002C7A  9121               	bcf	33,0,b	;volatile
  6972                           
  6973                           ;../rc_servo.c: 22:     PIR2bits.C1IF=0;
  6974   002C7C  9135               	bcf	53,0,b	;volatile
  6975                           
  6976                           ;../rc_servo.c: 24:     INTCONbits.GIE = 1;
  6977   002C7E  8EF2               	bsf	242,7,c	;volatile
  6978   002C80                     
  6979                           ; BSR set to: 14
  6980   002C80  0012               	return		;funcret
  6981   002C82                     __end_of_Interrupts_init:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function _HighISR *****************
  6985 ;; Defined at:
  6986 ;;		line 31 in file "../rc_servo.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		Interrupt level 2
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           	psect	intcode
  7014   000008                     __pintcode:
  7015                           	callstack 0
  7016   000008                     _HighISR:
  7017                           	callstack 22
  7018                           
  7019                           ; BSR set to: 14
  7020                           ;incstack = 0
  7021   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7022   00000A                     
  7023                           ;../rc_servo.c: 33:     if(PIR0bits.TMR0IF||!PORTFbits.RF2){
  7024   00000A  010E               	movlb	14	; () banked
  7025   00000C  BB33               	btfsc	51,5,b	;volatile
  7026   00000E  EF0B  F000         	goto	i2u182_41
  7027   000012  EF0D  F000         	goto	i2u182_40
  7028   000016                     i2u182_41:
  7029   000016  EF14  F000         	goto	i2l2989
  7030   00001A                     i2u182_40:
  7031   00001A                     
  7032                           ; BSR set to: 14
  7033   00001A  B48E               	btfsc	142,2,c	;volatile
  7034   00001C  EF12  F000         	goto	i2u183_41
  7035   000020  EF14  F000         	goto	i2u183_40
  7036   000024                     i2u183_41:
  7037   000024  EF1D  F000         	goto	i2l356
  7038   000028                     i2u183_40:
  7039   000028                     i2l2989:
  7040                           
  7041                           ; BSR set to: 14
  7042                           ;../rc_servo.c: 36:         time++;
  7043   000028  0102               	movlb	2	; () banked
  7044   00002A  4B54               	infsnz	_time& (0+255),f,b
  7045   00002C  2B55               	incf	(_time+1)& (0+255),f,b
  7046   00002E                     
  7047                           ; BSR set to: 2
  7048                           ;../rc_servo.c: 39:         TMR0L = 0b11011011;
  7049   00002E  0EDB               	movlw	219
  7050   000030  6ED3               	movwf	211,c	;volatile
  7051   000032                     
  7052                           ; BSR set to: 2
  7053                           ;../rc_servo.c: 40:         TMR0H = 0b00001011;
  7054   000032  0E0B               	movlw	11
  7055   000034  6ED4               	movwf	212,c	;volatile
  7056   000036                     
  7057                           ; BSR set to: 2
  7058                           ;../rc_servo.c: 42:         PIR0bits.TMR0IF=0;
  7059   000036  010E               	movlb	14	; () banked
  7060   000038  9B33               	bcf	51,5,b	;volatile
  7061   00003A                     i2l356:
  7062                           
  7063                           ; BSR set to: 14
  7064   00003A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7065   00003C  0011               	retfie		f
  7066   00003E                     __end_of_HighISR:
  7067                           	callstack 0
  7068                           
  7069                           	psect	rparam
  7070   000000                     
  7071                           	psect	temp
  7072   00005F                     btemp:
  7073                           	callstack 0
  7074   00005F                     	ds	1
  7075   000000                     int$flags	set	btemp
  7076   000000                     wtemp8	set	btemp+1
  7077   000000                     ttemp5	set	btemp+1
  7078   000000                     ttemp6	set	btemp+4
  7079   000000                     ttemp7	set	btemp+8
  7080                           
  7081                           	psect	idloc
  7082                           
  7083                           ;Config register IDLOC0 @ 0x200000
  7084                           ;	unspecified, using default values
  7085   200000                     	org	2097152
  7086   200000  0FFF               	dw	4095
  7087                           
  7088                           ;Config register IDLOC1 @ 0x200002
  7089                           ;	unspecified, using default values
  7090   200002                     	org	2097154
  7091   200002  0FFF               	dw	4095
  7092                           
  7093                           ;Config register IDLOC2 @ 0x200004
  7094                           ;	unspecified, using default values
  7095   200004                     	org	2097156
  7096   200004  0FFF               	dw	4095
  7097                           
  7098                           ;Config register IDLOC3 @ 0x200006
  7099                           ;	unspecified, using default values
  7100   200006                     	org	2097158
  7101   200006  0FFF               	dw	4095
  7102                           
  7103                           ;Config register IDLOC4 @ 0x200008
  7104                           ;	unspecified, using default values
  7105   200008                     	org	2097160
  7106   200008  0FFF               	dw	4095
  7107                           
  7108                           ;Config register IDLOC5 @ 0x20000A
  7109                           ;	unspecified, using default values
  7110   20000A                     	org	2097162
  7111   20000A  0FFF               	dw	4095
  7112                           
  7113                           ;Config register IDLOC6 @ 0x20000C
  7114                           ;	unspecified, using default values
  7115   20000C                     	org	2097164
  7116   20000C  0FFF               	dw	4095
  7117                           
  7118                           ;Config register IDLOC7 @ 0x20000E
  7119                           ;	unspecified, using default values
  7120   20000E                     	org	2097166
  7121   20000E  0FFF               	dw	4095
  7122                           
  7123                           	psect	config
  7124                           
  7125                           ;Config register CONFIG1L @ 0x300000
  7126                           ;	External Oscillator mode Selection bits
  7127                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7128                           ;	Power-up default value for COSC bits
  7129                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7130   300000                     	org	3145728
  7131   300000  AA                 	db	170
  7132                           
  7133                           ;Config register CONFIG1H @ 0x300001
  7134                           ;	unspecified, using default values
  7135                           ;	Clock Out Enable bit
  7136                           ;	CLKOUTEN = 0x1, unprogrammed default
  7137                           ;	Clock Switch Enable bit
  7138                           ;	CSWEN = 0x1, unprogrammed default
  7139                           ;	Fail-Safe Clock Monitor Enable bit
  7140                           ;	FCMEN = 0x1, unprogrammed default
  7141   300001                     	org	3145729
  7142   300001  FF                 	db	255
  7143                           
  7144                           ;Config register CONFIG2L @ 0x300002
  7145                           ;	unspecified, using default values
  7146                           ;	Master Clear Enable bit
  7147                           ;	MCLRE = 0x1, unprogrammed default
  7148                           ;	Power-up Timer Enable bit
  7149                           ;	PWRTE = 0x1, unprogrammed default
  7150                           ;	Low-power BOR enable bit
  7151                           ;	LPBOREN = 0x1, unprogrammed default
  7152                           ;	Brown-out Reset Enable bits
  7153                           ;	BOREN = 0x3, unprogrammed default
  7154   300002                     	org	3145730
  7155   300002  FF                 	db	255
  7156                           
  7157                           ;Config register CONFIG2H @ 0x300003
  7158                           ;	unspecified, using default values
  7159                           ;	Brown Out Reset Voltage selection bits
  7160                           ;	BORV = 0x3, unprogrammed default
  7161                           ;	ZCD Disable bit
  7162                           ;	ZCD = 0x1, unprogrammed default
  7163                           ;	PPSLOCK bit One-Way Set Enable bit
  7164                           ;	PPS1WAY = 0x1, unprogrammed default
  7165                           ;	Stack Full/Underflow Reset Enable bit
  7166                           ;	STVREN = 0x1, unprogrammed default
  7167                           ;	Debugger Enable bit
  7168                           ;	DEBUG = 0x1, unprogrammed default
  7169                           ;	Extended Instruction Set Enable bit
  7170                           ;	XINST = 0x1, unprogrammed default
  7171   300003                     	org	3145731
  7172   300003  FF                 	db	255
  7173                           
  7174                           ;Config register CONFIG3L @ 0x300004
  7175                           ;	WDT Period Select bits
  7176                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7177                           ;	WDT operating mode
  7178                           ;	WDTE = OFF, WDT Disabled
  7179   300004                     	org	3145732
  7180   300004  9F                 	db	159
  7181                           
  7182                           ;Config register CONFIG3H @ 0x300005
  7183                           ;	unspecified, using default values
  7184                           ;	WDT Window Select bits
  7185                           ;	WDTCWS = 0x7, unprogrammed default
  7186                           ;	WDT input clock selector
  7187                           ;	WDTCCS = 0x7, unprogrammed default
  7188   300005                     	org	3145733
  7189   300005  FF                 	db	255
  7190                           
  7191                           ;Config register CONFIG4L @ 0x300006
  7192                           ;	unspecified, using default values
  7193                           ;	Write Protection Block 0
  7194                           ;	WRT0 = 0x1, unprogrammed default
  7195                           ;	Write Protection Block 1
  7196                           ;	WRT1 = 0x1, unprogrammed default
  7197                           ;	Write Protection Block 2
  7198                           ;	WRT2 = 0x1, unprogrammed default
  7199                           ;	Write Protection Block 3
  7200                           ;	WRT3 = 0x1, unprogrammed default
  7201                           ;	Write Protection Block 3
  7202                           ;	WRT4 = 0x1, unprogrammed default
  7203                           ;	Write Protection Block 3
  7204                           ;	WRT5 = 0x1, unprogrammed default
  7205                           ;	Write Protection Block 3
  7206                           ;	WRT6 = 0x1, unprogrammed default
  7207                           ;	Write Protection Block 3
  7208                           ;	WRT7 = 0x1, unprogrammed default
  7209   300006                     	org	3145734
  7210   300006  FF                 	db	255
  7211                           
  7212                           ;Config register CONFIG4H @ 0x300007
  7213                           ;	unspecified, using default values
  7214                           ;	Configuration Register Write Protection bit
  7215                           ;	WRTC = 0x1, unprogrammed default
  7216                           ;	Boot Block Write Protection bit
  7217                           ;	WRTB = 0x1, unprogrammed default
  7218                           ;	Data EEPROM Write Protection bit
  7219                           ;	WRTD = 0x1, unprogrammed default
  7220                           ;	Scanner Enable bit
  7221                           ;	SCANE = 0x1, unprogrammed default
  7222                           ;	Low Voltage Programming Enable bit
  7223                           ;	LVP = 0x1, unprogrammed default
  7224   300007                     	org	3145735
  7225   300007  FF                 	db	255
  7226                           
  7227                           ;Config register CONFIG5L @ 0x300008
  7228                           ;	unspecified, using default values
  7229                           ;	UserNVM Program Memory Code Protection bit
  7230                           ;	CP = 0x1, unprogrammed default
  7231                           ;	DataNVM Memory Code Protection bit
  7232                           ;	CPD = 0x1, unprogrammed default
  7233   300008                     	org	3145736
  7234   300008  FF                 	db	255
  7235                           
  7236                           ;Config register CONFIG5H @ 0x300009
  7237                           ;	unspecified, using default values
  7238   300009                     	org	3145737
  7239   300009  FF                 	db	255
  7240                           
  7241                           ;Config register CONFIG6L @ 0x30000A
  7242                           ;	unspecified, using default values
  7243                           ;	Table Read Protection Block 0
  7244                           ;	EBTR0 = 0x1, unprogrammed default
  7245                           ;	Table Read Protection Block 1
  7246                           ;	EBTR1 = 0x1, unprogrammed default
  7247                           ;	Table Read Protection Block 2
  7248                           ;	EBTR2 = 0x1, unprogrammed default
  7249                           ;	Table Read Protection Block 3
  7250                           ;	EBTR3 = 0x1, unprogrammed default
  7251                           ;	Table Read Protection Block 4
  7252                           ;	EBTR4 = 0x1, unprogrammed default
  7253                           ;	Table Read Protection Block 5
  7254                           ;	EBTR5 = 0x1, unprogrammed default
  7255                           ;	Table Read Protection Block 6
  7256                           ;	EBTR6 = 0x1, unprogrammed default
  7257                           ;	Table Read Protection Block 7
  7258                           ;	EBTR7 = 0x1, unprogrammed default
  7259   30000A                     	org	3145738
  7260   30000A  FF                 	db	255
  7261                           
  7262                           ;Config register CONFIG6H @ 0x30000B
  7263                           ;	unspecified, using default values
  7264                           ;	Boot Block Table Read Protection bit
  7265                           ;	EBTRB = 0x1, unprogrammed default
  7266   30000B                     	org	3145739
  7267   30000B  FF                 	db	255
  7268                           tosu	equ	0xFFF
  7269                           tosh	equ	0xFFE
  7270                           tosl	equ	0xFFD
  7271                           stkptr	equ	0xFFC
  7272                           pclatu	equ	0xFFB
  7273                           pclath	equ	0xFFA
  7274                           pcl	equ	0xFF9
  7275                           tblptru	equ	0xFF8
  7276                           tblptrh	equ	0xFF7
  7277                           tblptrl	equ	0xFF6
  7278                           tablat	equ	0xFF5
  7279                           prodh	equ	0xFF4
  7280                           prodl	equ	0xFF3
  7281                           indf0	equ	0xFEF
  7282                           postinc0	equ	0xFEE
  7283                           postdec0	equ	0xFED
  7284                           preinc0	equ	0xFEC
  7285                           plusw0	equ	0xFEB
  7286                           fsr0h	equ	0xFEA
  7287                           fsr0l	equ	0xFE9
  7288                           wreg	equ	0xFE8
  7289                           indf1	equ	0xFE7
  7290                           postinc1	equ	0xFE6
  7291                           postdec1	equ	0xFE5
  7292                           preinc1	equ	0xFE4
  7293                           plusw1	equ	0xFE3
  7294                           fsr1h	equ	0xFE2
  7295                           fsr1l	equ	0xFE1
  7296                           bsr	equ	0xFE0
  7297                           indf2	equ	0xFDF
  7298                           postinc2	equ	0xFDE
  7299                           postdec2	equ	0xFDD
  7300                           preinc2	equ	0xFDC
  7301                           plusw2	equ	0xFDB
  7302                           fsr2h	equ	0xFDA
  7303                           fsr2l	equ	0xFD9
  7304                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         127
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160    159     160
    BANK1           256    254     256
    BANK2           256     90     212
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[18]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[18]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[18]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2368$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[18]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout3(BANK1[100]), main@readout2(BANK1[100]), main@readout1(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2315$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2315$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout3(BANK1[100]), main@readout2(BANK1[100]), main@readout1(BANK0[100]), 

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), main@motorL(BANK2[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S589DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S589DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK2[64]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK2[8]), main@L_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _stop->_setMotorPWM
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse
    _motor_action->_right_135
    _motor_action->_right_90
    _motor_action->_spin_180
    _spin_180->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               481   481      0   41621
                                             88 COMRAM     4     4      0
                                             27 BANK0    132   132      0
                                              0 BANK1    254   254      0
                                              0 BANK2     90    90      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                  _sendStringSerial4
                        _setMotorPWM
                           _spin_180
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    3099
                                             25 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5874
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   19164
                                             33 COMRAM     8     2      6
                           _left_135
                            _left_90
                            _reverse
                          _right_135
                           _right_90
                           _spin_180
 ---------------------------------------------------------------------------------
 (1) _spin_180                                             8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    2947
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    3099
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    2947
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    3099
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2551
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     844
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                28    24      4     829
                                              0 COMRAM    28    24      4
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _left_135
       _setMotorPWM
     _left_90
       _setMotorPWM
     _reverse
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _spin_180
       _setMotorPWM
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
   _spin_180
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop
     _setMotorPWM

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     5A      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FE     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhlhhh     1B      0       0      33        0.0%
BITBIGSFRhhll       17      0       0      35        0.0%
BITBIGSFRhhlhl      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRllllll      7      0       0      52        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2D2      59        0.0%
DATA                 0      0     2D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 18:35:42 2022

                 _color_read_Red 28E2                  _color_read_Blue 29D2  
                             l33 283C                               l42 2930  
                             l51 2280                               l36 2C14  
                             l45 29D0                               l70 1846  
                             l39 2980                               l64 1710  
                             l48 2A20                               l58 21DA  
                             l66 1772                               l68 17D4  
                             l97 2B82                     ___awdiv@sign 000C  
            ___wmul@multiplicand 0003                 _color_read_Green 2982  
              ??_Interrupts_init 0001                              l100 2B84  
                            l103 2BAA                              l112 2CA0  
                            l200 10D2                              l106 2CAA  
                            l115 2C8C                              l109 2C96  
                            l118 2AE8                              l302 2650  
                            l400 2C52                              l208 1296  
                            l315 1F8E                              l412 2C6A  
                            l421 2BD0                              l262 1A1A  
                            l255 2AA6                              l272 2768  
                            l192 0F04                              l409 2C56  
                            l282 2324                              l418 2B58  
                            l267 26DE                              l348 2C80  
                            l292 246A                              l277 25AE  
                            l359 2C34                              l287 23C8  
                            l535 1BA2                              l199 10BE  
                            l297 250C                              l652 211C  
                            l548 1D06                motor_action@color 0022  
                            u930 1FA2                              u931 1F9E  
                            u940 1FB4                              u941 1FB0  
                            u950 1FDC                              u951 1FD8  
                            u960 2012                              u961 200E  
                            u970 2A64                              u971 2A60  
                            u980 1A2E                              u981 1A2A  
                            u990 1A60                              u991 1A5C  
                            _abs 2AEA                              _pad 276A  
                            wreg 000FE8                             l1121 278C  
                           l1130 13E2                             ?_abs 0013  
                           l1132 13EA                             l1125 27E2  
                           l1133 1430                             l2111 1FA2  
                           l1151 1E64                             l1144 15D0  
                           l2201 1CB0                             l1161 2B20  
                           l2113 1FB4                             l2131 1A1C  
                           l2203 1CB6                             l2115 1FBE  
                           l2123 2A22                             l2211 276A  
                           l1164 2B28                             l2141 1A60  
                           l2133 1A20                             l2205 1CC6  
                           l2117 1FDC                             l2109 1F90  
                           l2125 2A2E                             l2221 27B0  
                           l2213 2778                             l2301 1418  
                           l1157 28E0                             l2231 2B94  
                           l2151 1AB6                             l2143 1A80  
                           l2135 1A2E                             l2207 1CE6  
                           l2119 2012                             l2127 2A40  
                           l2223 27CE                             l2215 2784  
                           l2311 1446                             l2303 1424  
                           l1176 2058                             l1184 2A64  
                           l2241 205E                             l2233 2BAC  
                           l2161 1B38                             l2153 1ACA  
                           l2145 1A84                             l2137 1A4E  
                           l2225 2AEA                             l2129 2A44  
                           l2217 2798                             l2321 1552  
                           l2313 14C8                             l2305 142C  
                           l2411 2B64                             l2251 208E  
                           l2243 206C                             l2235 2BC8  
                           l3019 1F50                             l2171 1B82  
                           l2163 1B3A                             l2155 1AD8  
                           l2147 1A90                             l2139 1A52  
                           l2227 2B04                             l1187 2CAC  
                           l2219 27AC                             l2331 15B0  
                           l2323 1570                             l2315 14CE  
                           l2307 1438                             l2403 1E38  
                           l1099 288E                             l2413 2B6A  
                           l2229 2B84                             l2341 2C88  
                           l2421 2BF8                             l2261 20BC  
                           l2253 2092                             l2245 2074  
                           l2501 22AA                             l2165 1B4C  
                           l2157 1AEA                             l2149 1AAE  
                           l2181 1BD6                             l2325 158A  
                           l2317 14D4                             l2309 1440  
                           l2415 2B6C                             l2335 2CA2  
                           l2343 2C98                             l2351 2AAA  
                           l2423 2932                             l2431 2928  
                           l2271 20F0                             l2263 20CA  
                           l2255 209A                             l2247 2078  
                           l2239 205A                             l2511 22E4  
                           l2503 22B6                             l2159 1B18  
                           l2167 1B52                             l2191 1C2E  
                           l2183 1BDA                             l2175 1BA4  
                           l2327 159A                             l2319 1538  
                           l2417 2B6E                             l2409 2B5A  
                           l2337 2CA6                             l2345 2C9C  
                           l2361 2AE6                             l2353 2AAE  
                           l2441 29D2                             l2425 2978  
                           l2273 20F6                             l2265 20D0  
                           l2257 20AC                             l2249 2086  
                           l2513 22F0                             l2505 22C4  
                           l2169 1B62                             l2193 1C42  
                           l2185 1BE8                             l2177 1BA8  
                           l2329 15A0                             l2419 2B70  
                           l2339 2C84                             l2611 280C  
                           l2603 27E4                             l2355 2AB6  
                           l2347 2C8E                             l2443 2A18  
                           l2435 2982                             l2267 20E6  
                           l2259 20B4                             l2275 20FC  
                           l2371 190C                             l2531 2374  
                           l2515 230C                             l2507 22D0  
                           l2195 1C50                             l2187 1C08  
                           l2179 1BB6                             l2291 13BA  
                           l2283 1356                             l2621 281E  
                           l2613 2816                             l2605 27E8  
                           l2701 176E                             l2357 2ABE  
                           l2349 2C92                             l2437 29C8  
                           l2429 28E2                             l2277 210C  
                           l2269 20EE                             l2373 192C  
                           l2365 1848                             l2533 2380  
                           l2525 234E                             l2517 2326  
                           l2541 246C                             l2509 22DC  
                           l2461 2418                             l2197 1C7E  
                           l2189 1C26                             l2293 13D6  
                           l2285 1376                             l2381 1D30  
                           l2631 2828                             l2623 2820  
                           l2615 2818                             l2607 27F2  
                           l2711 180A                             l2703 178C  
                           l2359 2AE4                             l2279 2114  
                           l2375 1948                             l2367 1864  
                           l2535 2388                             l2527 235C  
                           l2519 2346                             l2471 250E  
                           l2551 24A0                             l2543 248C  
                           l2463 2424                             l2455 23F2  
                           l2447 23CA                             l2199 1C9E  
                           l2295 13F2                             l2287 138A  
                           l2391 1D80                             l2383 1D3E  
                           l2641 2832                             l2633 282A  
                           l2625 2822                             l2617 281A  
                           l2609 2802                             l2713 181A  
                           l2705 17AE                             l2377 19B2  
                           l2369 18C6                             l2721 2A76  
                           l2537 2394                             l2529 2368  
                           l2481 254E                             l2473 252E  
                           l2561 24DA                             l2553 24AE  
                           l2465 242C                             l2457 23FE  
                           l2449 23EA                             l2297 1402  
                           l2289 139A                             l2393 1DA0  
                           l2385 1D4C                             l2801 267A  
                           l2731 2C6C                             l2643 2834  
                           l2635 282C                             l2627 2824  
                           l2619 281C                             l2715 1826  
                           l2707 17D0                             l2651 21F0  
                           l2723 2A8A                             l2539 23B0  
                           l2491 2596                             l2483 255A  
                           l2563 24F6                             l2555 24BA  
                           l2467 2438                             l2459 240C  
                           l2299 1408                             l2395 1DF6  
                           l2387 1D50                             l2379 1D08  
                           l2811 26C4                             l2803 2692  
                           l2733 2C16                             l2645 2838  
                           l2637 282E                             l2629 2826  
                           l2661 215A                             l2717 182A  
                           l2709 17FA                             l2653 2208  
                           l2725 2A8E                             l2741 2C36  
                           l2581 260A                             l2573 25D8  
                           l2565 25B0                             l2485 2566  
                           l2557 24C6                             l2549 2494  
                           l2493 2282                             l2469 2454  
                           l2821 1EB2                             l2813 1E66  
                           l2389 1D60                             l2805 269E  
                           l2901 0FF8                             l2735 2C1E  
                           l2647 283A                             l2639 2830  
                           l2671 21BE                             l2663 2170  
                           l2655 2238                             l2727 2AA2  
                           l2719 2A66                             l2751 2C50  
                           l2743 2C40                             l2583 2612  
                           l2575 25E6                             l2567 25D0  
                           l2487 256E                             l2479 2536  
                           l2559 24CE                             l2495 22A2  
                           l2823 1EDE                             l2815 1E6A  
                           l2831 1F3A                             l2591 2C66  
                           l2399 1E26                             l2807 26AA  
                           l2911 1056                             l2903 0FFA  
                           l2737 2C28                             l2673 21CA  
                           l2665 2186                             l2681 160E  
                           l2657 2250                             l2649 21DC  
                           l2729 2AA4                             l2745 2C42  
                           l2585 261E                             l2577 25F2  
                           l2489 257A                             l2825 1F0A  
                           l2817 1E82                             l2593 2890  
                           l2761 287C                             l2753 283E  
                           l2809 26B8                             l2921 10D8  
                           l2913 106E                             l2905 1030  
                           l2841 0E24                             l2739 2C32  
                           l2675 21D2                             l2667 2192  
                           l2659 211E                             l2691 16C8  
                           l2747 2C4C                             l2587 263A  
                           l2579 25FE                             l2827 1F22  
                           l2819 1E9A                             l2771 2B40  
                           l2595 289C                             l2755 2850  
                           l2931 1128                             l2923 10E2  
                           l2915 1074                             l2907 103C  
                           l2851 0E34                             l2843 0E28  
                           l2669 21A8                             l2693 16EA  
                           l2781 2708                             l2773 26E0  
                           l2749 2C4E                             l2589 2C56  
                           l2765 2B2A                             l2597 28B8  
                           l2757 2858                             l2941 1192  
                           l2933 1134                             l2925 10F6  
                           l2917 1090                             l2909 1054  
                           l2861 0E52                             l2853 0E3A  
                           l2845 0E2C                             l2837 0E14  
                           ?_pad 0011                             l2695 170C  
                           l2687 1616                             l2679 15D2  
                           l2791 274C                             l2783 2720  
                           l2775 2700                             l2767 2B2E  
                           l2599 28D8                             l2759 2860  
                           l2951 1218                             l2943 11AC  
                           l2935 1142                             l2927 1102  
                           l2919 10CC                             l2871 0E7E  
                           l2863 0E5A                             l2855 0E3E  
                           l2847 0E30                             l2839 0E18  
                           l2697 172A                             l2689 16C4  
                           l2785 272C                             l2769 2B3C  
                           l2793 2652                             l2961 126C  
                           l2953 1222                             l2945 11EA  
                           l2937 115A                             l2929 1114  
                           l2881 0EE4                             l2873 0E8A  
                           l2865 0E5E                             l2857 0E46  
                           l2849 0E34                             l2699 174C  
                           l2787 2738                             l2795 2672  
                           l2971 12D2                             l2963 1276  
                           l2947 11F6                             l2939 1176  
                           l2955 122A                             l2891 0F1C  
                           l2883 0EFC                             l2875 0E96  
                           l2867 0E72                             l2859 0E4E  
                           l2789 2740                             l2981 1348  
                           l2973 12EA                             l2949 1212  
                           l2957 1242                             l2893 0F28  
                           l2885 0F12                             l2877 0EA2  
                           l2869 0E76                             l2975 1302  
                           l2967 1298                             l2959 1258  
                           l2895 0F56                             l2879 0ED8  
                           l2977 1308                             l2969 12A2  
                           l2897 0F8C                             l2979 1334  
                           l2899 0FC2                             STR_1 0E04  
                           STR_2 0E04                             STR_3 0E01  
                           u1001 1A8A                             u1010 1AAE  
                           u1011 1AAA                             u1020 1AD8  
                           u1100 1CC6                             u1021 1AD4  
                           u1101 1CC2                             u1030 1B18  
                           u1110 2778                             u1031 1B14  
                           u1111 2774                             u1200 20E6  
                           u1040 1B62                             u1120 27CE  
                           u1201 20E2                             u1041 1B5E  
                           u1121 27CA                             u1210 210C  
                           u1050 1BB6                             u1130 2B04  
                           u1211 2108                             u1051 1BB2  
                           u1131 2B00                             u1140 2B94  
                           u1060 1BE8                             u1300 158A  
                           u1220 1386                             u1141 2B90  
                           u1061 1BE4                             u1301 1586  
                           u1221 1380                             u1150 2BAA  
                           u1070 1C26                             u1310 159A  
                           u1230 1388                             u1151 2BA6  
                           u2007 260C                             u1071 1C22  
                           u1311 1596                             u1320 2AD2  
                           u1160 206C                             u1080 1C50  
                           u1240 139A                             u1400 1DA0  
                           u1321 2ACA                             u1161 2068  
                           u2017 2644                             u1081 1C4C  
                           u1241 1396                             u1401 1D9C  
                           u1170 2086                             u1410 2454  
                           u1090 1C7E                             u1250 13D6  
                           u1171 2082                             u2027 273A  
                           u1411 2450                             u1091 1C7A  
                           u1251 13D2                             u1500 2186  
                           u1180 20AC                             u1340 1864  
                           u1420 2596                             u1260 1402  
                           u1501 2182                             u2037 21FA  
                           u1181 20A8                             u1341 1860  
                           u1421 2592                             u1261 13FE  
                           u1510 21A8                             u1190 20CA  
                           u1350 1948                             u1430 230C  
                           u1270 1418                             u1511 21A4  
                           u2047 222A                             u1191 20C6  
                           u1351 1944                             u1431 2308  
                           u1271 1414                             u1520 21BE  
                           u1600 1786                             u1440 23B0  
                           u1280 1552                     _BAUD4CONbits 000EE9  
                           u1521 21BA                             u2057 225A  
                           u1441 23AC                             u1281 154E  
                           _LATE 000F7D                             u1610 17AE  
                           u1530 16EA                             u1338 2AD4  
                           u1450 24F6                             u1290 1570  
                           u2067 27F8                             u1611 17AA  
                           u1531 16E6                             u1451 24F2  
                           u1291 156C                             _LATG 000F7F  
                           u1620 17D0                             u1540 170C  
                           u1364 19A2                             u1700 2768  
                           u1460 263A                             u1380 1D30  
                           u1621 17CC                             u1541 1708  
                           u1365 199E                             u1701 2764  
                           u1461 2636                             u1381 1D2C  
                           u1630 17E6                             u1550 1722  
                           u1374 1A0C                             u1470 2C66  
                           u1390 1D80                             u1710 26DE  
                           u1631 17E0                             u1551 171C  
                           u1375 1A08                             u1471 2C62  
                           u1391 1D7C                             u1711 26DA  
                           u1640 17E8                             u1560 1724  
                           u1480 28D8                             u1800 1292  
                           u1720 0F12                             u1481 28D4  
                           u1801 128E                             u1721 0F0E  
                           u1490 2170                             u1650 17FA  
                           u1570 174C                             u1810 1334  
                           u1730 1090                             _T2PR 000FBC  
                           u1491 216C                             u1651 17F6  
                           u1571 1748                             u1811 1330  
                           u1731 108C                             u1660 180A  
                           u1580 176E                             u1740 10AC  
                           u1661 1806                             u1581 176A  
                           u1741 10A4                             u1670 181A  
                           u1590 1784                             u1750 10BE  
                           u1671 1816                             u1591 177E  
                           u1751 10BA                             u1680 1846  
                           u1760 10CC                             u1681 1842  
                           u1761 10C8                             u1690 2B58  
                           u1770 1114                             u1907 2426  
                           u1691 2B54                             u1771 1110  
                           u1780 1142                             u1748 10AE  
                           u1917 245E                             u1781 113E  
                           u1790 1258                             u1927 22DE  
                           u1791 1254                             u1847 0EEE  
                           u1937 2316                             u1857 1046  
                           u1947 24C8                             u1867 1060  
                           u1957 2500                             u1877 1234  
                           u1967 2568                             u1887 12F4  
                           u1977 25A0                             u1897 26B0  
                           u1987 2382                             u1997 23BA  
                           abs@a 0013                             _dbuf 025A  
                           _main 0E14                             _dtoa 1356  
                           _prec 0252                             _time 0254  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             btemp 005F  
                           _stop 2652                             prodh 000FF4  
                           prodl 000FF3                             start 003E  
         __end_of_color_read_Red 2932                  __end_of_HighISR 003E  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0017         _color_processor_hard$370 000C  
       _color_processor_hard$372 000D         _color_processor_hard$374 000E  
                __end_of___aodiv 1BA4                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 1D08  
                __end_of___awdiv 211E          ??_color_read_Luminosity 0007  
                          ?_stop 001A                  ___awdiv@divisor 0009  
                          i2l356 003A                  ___awdiv@counter 000B  
                   vfpfcnvrt@fmt 0041                            _TMR0H 000FD4  
                          _TMR0L 000FD3                     main@readout1 007B  
                   main@readout2 0100                     main@readout3 0164  
        __end_of_sendCharSerial4 2C6C       __end_of_I2C_2_Master_Start 2CAC  
     __end_of_I2C_2_Master_Write 2C8E                  __end_of_left_90 23CA  
                          _flags 01FE                            _fputc 1F90  
                __end_of_forward 276A                            _fputs 2A22  
                          pad@fp 0011                            _width 0250  
                          _putch 2CAC                            main@i 01F4  
                          main@j 01E6                            main@k 01F2  
                          dtoa@d 001E                            dtoa@i 003C  
                          dtoa@n 0034                            dtoa@p 0030  
                          dtoa@s 003E                            dtoa@w 0032  
                          tablat 000FF5                  __end_of_reverse 25B0  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            stop@i 001F  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 2890          __end_of_color_read_Blue 2A22  
          _I2C_2_Master_RepStart 2C8E                  ?_color_read_Red 0005  
                __initialization 2BD2   color_processor_hard@calibrated 0003  
                   __end_of_main 1356                     __end_of_dtoa 15D2  
                   __end_of_stop 26E0                           ??_main 0059  
                         ??_dtoa 0026                           ??_stop 001E  
                  __activetblptr 000003                     ?_setMotorPWM 000F  
                         ?_fputc 0001                           ?_fputs 000A  
               ___awdiv@dividend 0007                           ?_putch 0001  
               main@L_calibrated 01E8                           _RC0PPS 000E62  
                         _RC4REG 000EE3                           _RE2PPS 000E74  
                         _RD5PPS 000E6F                           _RC7PPS 000E69  
                         _RD6PPS 000E70                           i2l2991 002E  
                         i2l2993 0032                           i2l2985 000A  
                         i2l2995 0036                           i2l2987 001A  
                         i2l2989 0028                        ??_HighISR 0001  
       __end_of_color_click_init 283E                           _RX4PPS 000E15  
                         _TX4REG 000EE4                    ??_Timer0_init 0001  
      color_processor_easy@color 0003                     vfprintf@cfmt 0057  
               __end_of_left_135 2652                        ??___aodiv 0011  
                      ??___aomod 0011                           ___wmul 2BAC  
                      ??___awdiv 000B                           clear_0 2BD8  
               ___awdiv@quotient 000D                           isa$std 000001  
                         pad@buf 0013                           dtoa@fp 001C  
                      ??_left_90 001E                 __end_of_right_90 2326  
                  main@time_path 01C8                           fputc@c 0001  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A                        ??_forward 001E  
               __end_of_spin_180 246C                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_sendCharSerial4 0001  
                      ??_reverse 001E                           putch@c 0001  
               __end_of_vfprintf 28E2                           stop@mL 001A  
                         stop@mR 001C                ??_initDCmotorsPWM 0003  
                      ??_sprintf 0059                       __accesstop 0060  
        __end_of__initialization 2BEC         __end_of_color_read_Green 29D2  
         ?_I2C_2_Master_RepStart 0001                    ___rparam_used 000001  
               ?_color_read_Blue 0005                  _Interrupts_init 2C6C  
                 __pcstackCOMRAM 0001                    color_read@rgb 000C  
                  __end_of_fputc 205A                    __end_of_fputs 2A66  
                  __end_of_putch 2CAE              __end_of_Timer0_init 2C36  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00FF  
                     __pbssBANK1 01FE                       __pbssBANK2 0200  
         color_processor_hard@cb 0019           color_processor_hard@cg 0017  
         color_processor_hard@cr 0015                _color_writetoaddr 2BF6  
                   _T2CLKCONbits 000FBF               ?_color_writetoaddr 0003  
                        ?___wmul 0001                   main@color_flag 005B  
                 main@color_name 01F0                   main@color_path 00DF  
                    right_135@mL 001A                      right_135@mR 001C  
            ??_color_writetoaddr 0004    __end_of_color_read_Luminosity 2982  
                        _SP4BRGH 000EE6                          _SP4BRGL 000EE5  
                        _PWM6DCH 000FA3                          _PWM7DCH 000FA0  
                        _SSP2ADD 000ED6                          _SSP2BUF 000ED5  
                      ?_left_135 001A                       _color_read 21DC  
        __end_of_Interrupts_init 2C82           color_writetoaddr@value 0003  
               ??_color_read_Red 0007                          _HighISR 0008  
      __end_of_color_writetoaddr 2C16         color_read_Luminosity@tmp 000A  
             _I2C_2_Master_Start 2CA2                       _initUSART4 2C36  
             _I2C_2_Master_Write 2C82                        ?_right_90 001A  
                        __Hparam 0000                          __Lparam 0000  
color_processor_hard@condition_b 000B  color_processor_hard@condition_g 000A  
color_processor_hard@condition_r 0009                color_read_Red@tmp 000A  
                    _Timer0_init 2C16                        ?_spin_180 001A  
        sendStringSerial4@string 0002                          ___aodiv 1A1C  
                        ___aomod 1BA4                          ___awdiv 205A  
            ?_I2C_2_Master_Start 0001              ?_I2C_2_Master_Write 0001  
                     _off_period 0256                        ?_vfprintf 0051  
                   __psmallconst 0E00                          __pcinit 2BD2  
                        __ramtop 0E00                          __ptext0 0E14  
                        __ptext1 2652                          __ptext2 283E  
                        __ptext3 2890                          __ptext4 1D08  
                        __ptext5 1356                          __ptext6 276A  
                        __ptext7 2A22                          __ptext8 1F90  
                        __ptext9 2CAC                          _left_90 2326  
                      _T2CONbits 000FBD                          _forward 26E0  
                      _T2HLTbits 000FBE                    ?_motor_action 0022  
                        _reverse 250E                    _RxBufWriteCnt 005E  
                        _sprintf 283E             ??_I2C_2_Master_Start 0002  
                     ??_left_135 001E             ??_I2C_2_Master_Write 0002  
           end_of_initialization 2BEC                __end_of_right_135 250E  
             setMotorPWM@PWMduty 0018                          fputc@fp 0003  
                        fputs@fp 000C                ?_color_click_init 0001  
   __end_of_color_processor_easy 21DC     __end_of_color_processor_hard 1848  
                     ??_right_90 001E               ??_color_click_init 0005  
              __end_of_vfpfcnvrt 1E66                       ??_spin_180 001E  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                 vfpfcnvrt@convarg 0047  
                     ??_vfprintf 0057                  _initDCmotorsPWM 2A66  
                      _PORTFbits 000F8E                   ??_motor_action 0028  
                      _TRISCbits 000F83                        _TRISDbits 000F84  
                      _TRISEbits 000F85                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
                    ?_color_read 000C         color_writetoaddr@address 0004  
        ??_I2C_2_Master_RepStart 0002                 ?_Interrupts_init 0001  
                     left_135@mL 001A                       left_135@mR 001C  
                   _EUSART4RXbuf 023C                     _EUSART4TXbuf 0200  
              ?_color_read_Green 0005                      ?_initUSART4 0001  
      sendCharSerial4@charToSend 0001                       main@motorL 02C2  
                     main@motorR 02CB               ??_color_read_Green 0007  
                    vfpfcnvrt@ap 0043                      vfpfcnvrt@cp 004F  
                    vfpfcnvrt@fp 003F                   __end_of___wmul 2BD2  
            start_initialization 2BD2                      __end_of_abs 2B2A  
                    __end_of_pad 27E4                    _TxBufWriteCnt 00FF  
            color_read_Green@tmp 000A          __end_of_initDCmotorsPWM 2AA8  
                    vfprintf@fmt 0053                         ??___wmul 0005  
                    __pbssCOMRAM 005D             _color_processor_easy 211E  
           _color_processor_hard 15D2                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                    __pcstackBANK2 027A  
               ___aodiv@dividend 0001               main@RGB_calibrated 02BA  
                       ?_HighISR 0001          color_processor_easy@rgb 0001  
        color_processor_hard@rgb 0001            color_processor_easy@a 0007  
          color_processor_easy@b 0009            color_processor_easy@c 0005  
          color_processor_hard@b 0013            color_processor_hard@g 0011  
          color_processor_hard@i 001B            color_processor_hard@r 000F  
                      _dtoa$2396 002E             __end_of_motor_action 1F90  
                   ?_Timer0_init 0001                        __pintcode 0008  
                       ?___aodiv 0001                         ?___aomod 0001  
                       ?___awdiv 0007                 ___aodiv@quotient 0013  
                     right_135@i 0020                       right_90@mL 001A  
                     right_90@mR 001C             I2C_2_Master_Read@ack 0003  
           I2C_2_Master_Read@tmp 0004                         ?_left_90 001A  
                    __smallconst 0E00                         ?_forward 001A  
              _I2C_2_Master_Idle 2B84            ?_color_processor_easy 0001  
          ?_color_processor_hard 0001                 main@RGB_recorded 01F6  
              _I2C_2_Master_Init 2B5A                _I2C_2_Master_Read 2AA8  
              _I2C_2_Master_Stop 2C98                     _RxBufReadCnt 005D  
                       ?_reverse 001A               ?_I2C_2_Master_Idle 0001  
             ?_I2C_2_Master_Init 0001               ?_I2C_2_Master_Read 0001  
                  ??_setMotorPWM 0011            _color_read_Luminosity 2932  
             ?_I2C_2_Master_Stop 0001         initDCmotorsPWM@PWMperiod 0001  
                       ?_sprintf 0060                _sendStringSerial4 2B2A  
            ??_I2C_2_Master_Idle 0001              ??_I2C_2_Master_Init 0001  
            ??_I2C_2_Master_Read 0002                   ___wmul@product 0005  
            ??_I2C_2_Master_Stop 0002                         _LATCbits 000F7B  
                       _LATDbits 000F7C                         _LATEbits 000F7D  
                       _LATFbits 000F7E                        _on_period 0258  
                       _LATGbits 000F7F                         _LATHbits 000F80  
                      _right_135 246C                         _IPR0bits 000E1F  
                       _IPR2bits 000E21                         _PIE0bits 000E29  
                       _PIE2bits 000E2B               ?_sendStringSerial4 0002  
                     spin_180@mL 001A                       spin_180@mR 001C  
                       i2u182_40 001A                         i2u182_41 0016  
                       i2u183_40 0028                         i2u183_41 0024  
                       _PIR0bits 000E33                         _PIR2bits 000E35  
                       _PIR4bits 000E37                 ?_initDCmotorsPWM 0001  
              ??_sendCharSerial4 0001                         _SSP2CON2 000EDA  
            ??_sendStringSerial4 0004                         _SSP2STAT 000ED8  
                      _vfpfcnvrt 1D08        __end_of_I2C_2_Master_Idle 2BAC  
      __end_of_I2C_2_Master_Init 2B84        __end_of_I2C_2_Master_Read 2AEA  
              ___wmul@multiplier 0001        __end_of_I2C_2_Master_Stop 2CA2  
                   setMotorPWM@m 000F      I2C_2_Master_Write@data_byte 0002  
                      left_135@i 0020                        left_90@mL 001A  
                      left_90@mR 001C             main@color_calibrated 027A  
              ??_color_read_Blue 0007                     _TxBufReadCnt 01FF  
                   ??_color_read 000E        __end_of_sendStringSerial4 2B5A  
  __end_of_I2C_2_Master_RepStart 2C98               color_read_Blue@tmp 000A  
            __end_of_setMotorPWM 1A1C                       ?_right_135 001A  
                   ??_initUSART4 0001                         __Hrparam 0000  
                     vfprintf@ap 0055                         __Lrparam 0000  
                     vfprintf@fp 0051                        forward@mL 001A  
                      forward@mR 001C                       ?_vfpfcnvrt 003F  
             __end_of_color_read 2282                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELDbits 000EA7  
         ??_color_processor_easy 0003           ??_color_processor_hard 0005  
                     _ANSELFbits 000EB4                       sprintf@fmt 0062  
                     _T0CON0bits 000FD5                       _T0CON1bits 000FD6  
         ?_color_read_Luminosity 0005               __end_of_initUSART4 2C54  
                       __ptext10 2AEA                         __ptext11 1BA4  
                       __ptext20 2326                         __ptext12 1A1C  
                       __ptext21 25B0                         __ptext13 2B2A  
                       __ptext30 2932                         __ptext22 2C36  
                       __ptext14 2C54                         __ptext31 2982  
                       __ptext23 2A66                         __ptext15 1E66  
                       __ptext40 2C98                         __ptext32 29D2  
                       __ptext24 26E0                         __ptext16 23CA  
                       __ptext41 2CA2                         __ptext33 2C8E  
                       __ptext25 1848                         __ptext17 2282  
                       __ptext42 2B84                         __ptext34 2AA8  
                       __ptext26 2BAC                         __ptext18 246C  
                       __ptext43 2B5A                         __ptext35 15D2  
                       __ptext27 205A                         __ptext19 250E  
                       __ptext44 2C16                         __ptext36 211E  
                       __ptext28 21DC                         __ptext45 2C6C  
                       __ptext37 27E4                         __ptext29 28E2  
                       __ptext38 2BF6                         __ptext39 2C82  
                      right_90@i 0020                         _left_135 25B0  
                   _SSP2CON1bits 000ED9                     _SSP2CON2bits 000EDA  
                       _right_90 2282                        reverse@mL 001A  
                      reverse@mR 001C                        spin_180@i 0020  
                       _spin_180 23CA                         isa$xinst 000000  
                     _RC4STAbits 000EE7                         int$flags 005F  
                  motor_action@l 0024                    motor_action@r 0026  
                       _vfprintf 2890                         left_90@i 0020  
               ___aomod@dividend 0001                  main@time_return 00FD  
                     _INTCONbits 000FF2                     _motor_action 1E66  
                       forward@i 001E                      _setMotorPWM 1848  
                    _PWM6CONbits 000FA4                      _PWM7CONbits 000FA1  
                       intlevel2 0000                        sprintf@ap 006E  
                    ??_right_135 001E                         reverse@i 0020  
                ___aomod@divisor 0009                      ??_vfpfcnvrt 0045  
                ___aomod@counter 0011                 _color_click_init 27E4  
                       sprintf@f 0070                         sprintf@s 0060  
                     _SSP2DATPPS 000E1D                       _SSP2CLKPPS 000E1C  
                     _TX4STAbits 000EE8                     ___aodiv@sign 0012  
                _sendCharSerial4 2C54                     ___aomod@sign 0012  
