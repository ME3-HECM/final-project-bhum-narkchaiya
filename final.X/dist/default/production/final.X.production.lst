

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 11 19:17:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Version 2.35
    73                           ; Generated 05/05/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F67K40 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     _TX4REG	set	3812
   108   000000                     _RC4STAbits	set	3815
   109   000000                     _SP4BRGH	set	3814
   110   000000                     _T0CON0bits	set	4053
   111   000000                     _T0CON1bits	set	4054
   112   000000                     _TMR0H	set	4052
   113   000000                     _TRISGbits	set	3975
   114   000000                     _TRISEbits	set	3973
   115   000000                     _LATFbits	set	3966
   116   000000                     _TRISFbits	set	3974
   117   000000                     _LATG	set	3967
   118   000000                     _LATE	set	3965
   119   000000                     _SSP2CON2bits	set	3802
   120   000000                     _LATGbits	set	3967
   121   000000                     _LATEbits	set	3965
   122   000000                     _RX4PPS	set	3605
   123   000000                     _SSP2CLKPPS	set	3612
   124   000000                     _SSP2DATPPS	set	3613
   125   000000                     _ANSELDbits	set	3751
   126   000000                     _ANSELFbits	set	3764
   127   000000                     _LATDbits	set	3964
   128   000000                     _LATHbits	set	3968
   129   000000                     _TRISDbits	set	3972
   130   000000                     _TRISHbits	set	3976
   131   000000                     _PORTFbits	set	3982
   132   000000                     _PWM7DCH	set	4000
   133   000000                     _PWM6DCH	set	4003
   134   000000                     _TRISCbits	set	3971
   135   000000                     _SSP2BUF	set	3797
   136   000000                     _SSP2ADD	set	3798
   137   000000                     _SSP2CON1bits	set	3801
   138   000000                     _RC4REG	set	3811
   139   000000                     _SP4BRGL	set	3813
   140   000000                     _TX4STAbits	set	3816
   141   000000                     _BAUD4CONbits	set	3817
   142   000000                     _LATCbits	set	3963
   143   000000                     _SSP2CON2	set	3802
   144   000000                     _SSP2STAT	set	3800
   145   000000                     _IPR0bits	set	3615
   146   000000                     _PIE0bits	set	3625
   147   000000                     _RC7PPS	set	3689
   148   000000                     _RD5PPS	set	3695
   149   000000                     _RE2PPS	set	3700
   150   000000                     _RD6PPS	set	3696
   151   000000                     _PWM6CONbits	set	4004
   152   000000                     _T2PR	set	4028
   153   000000                     _T2CONbits	set	4029
   154   000000                     _INTCONbits	set	4082
   155   000000                     _PWM7CONbits	set	4001
   156   000000                     _TMR0L	set	4051
   157   000000                     _T2CLKCONbits	set	4031
   158   000000                     _T2HLTbits	set	4030
   159   000000                     _PIE2bits	set	3627
   160   000000                     _PIR0bits	set	3635
   161   000000                     _IPR2bits	set	3617
   162   000000                     _PIR2bits	set	3637
   163   000000                     _PIR4bits	set	3639
   164   000000                     _RC0PPS	set	3682
   165                           
   166                           	psect	smallconst
   167   000E00                     __psmallconst:
   168                           	callstack 0
   169   000E00  00                 	db	0
   170   000E01                     STR_3:
   171                           
   172                           ; BSR set to: 14
   173   000E01  63                 	db	99	;'c'
   174   000E02  6F                 	db	111	;'o'
   175   000E03  6C                 	db	108	;'l'
   176   000E04  6F                 	db	111	;'o'
   177   000E05  72                 	db	114	;'r'
   178   000E06  20                 	db	32
   179   000E07  6E                 	db	110	;'n'
   180   000E08  61                 	db	97	;'a'
   181   000E09  6D                 	db	109	;'m'
   182   000E0A  65                 	db	101	;'e'
   183   000E0B  20                 	db	32
   184   000E0C  25                 	db	37
   185   000E0D  64                 	db	100	;'d'
   186   000E0E  20                 	db	32
   187   000E0F  25                 	db	37
   188   000E10  64                 	db	100	;'d'
   189   000E11  20                 	db	32
   190   000E12  25                 	db	37
   191   000E13  64                 	db	100	;'d'
   192   000E14  20                 	db	32
   193   000E15  25                 	db	37
   194   000E16  64                 	db	100	;'d'
   195   000E17  20                 	db	32
   196   000E18  0D                 	db	13
   197   000E19  0A                 	db	10
   198   000E1A  00                 	db	0
   199   000E1B                     STR_2:
   200                           
   201                           ; BSR set to: 14
   202   000E1B  25                 	db	37
   203   000E1C  64                 	db	100	;'d'
   204   000E1D  20                 	db	32
   205   000E1E  25                 	db	37
   206   000E1F  64                 	db	100	;'d'
   207   000E20  20                 	db	32
   208   000E21  25                 	db	37
   209   000E22  64                 	db	100	;'d'
   210   000E23  20                 	db	32
   211   000E24  25                 	db	37
   212   000E25  64                 	db	100	;'d'
   213   000E26  20                 	db	32
   214   000E27  25                 	db	37
   215   000E28  64                 	db	100	;'d'
   216   000E29  20                 	db	32
   217   000E2A  0D                 	db	13
   218   000E2B  0A                 	db	10
   219   000E2C  00                 	db	0
   220   000E2D  00                 	db	0	; dummy byte at the end
   221   000000                     
   222                           ; #config settings
   223                           
   224                           	psect	cinit
   225   0037F2                     __pcinit:
   226                           	callstack 0
   227   0037F2                     start_initialization:
   228                           	callstack 0
   229   0037F2                     __initialization:
   230                           	callstack 0
   231                           
   232                           ; Clear objects allocated to BANK3 (60 bytes)
   233   0037F2  EE03  F000         	lfsr	0,__pbssBANK3
   234   0037F6  0E3C               	movlw	60
   235   0037F8                     clear_0:
   236   0037F8  6AEE               	clrf	postinc0,c
   237   0037FA  06E8               	decf	wreg,f,c
   238   0037FC  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BANK2 (114 bytes)
   241   0037FE  EE02  F000         	lfsr	0,__pbssBANK2
   242   003802  0E72               	movlw	114
   243   003804                     clear_1:
   244   003804  6AEE               	clrf	postinc0,c
   245   003806  06E8               	decf	wreg,f,c
   246   003808  E1FD               	bnz	clear_1
   247                           
   248                           ; Clear objects allocated to BANK0 (9 bytes)
   249   00380A  EE00  F0F5         	lfsr	0,__pbssBANK0
   250   00380E  0E09               	movlw	9
   251   003810                     clear_2:
   252   003810  6AEE               	clrf	postinc0,c
   253   003812  06E8               	decf	wreg,f,c
   254   003814  E1FD               	bnz	clear_2
   255                           
   256                           ; Clear objects allocated to COMRAM (4 bytes)
   257   003816  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   258   003818  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   259   00381A  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   260   00381C  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   261   00381E                     end_of_initialization:
   262                           	callstack 0
   263   00381E                     __end_of__initialization:
   264                           	callstack 0
   265   00381E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   266   003820  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   267   003822  0100               	movlb	0
   268   003824  EF17  F007         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00005B                     __pbssCOMRAM:
   272                           	callstack 0
   273   00005B                     _TxBufReadCnt:
   274                           	callstack 0
   275   00005B                     	ds	1
   276   00005C                     _TxBufWriteCnt:
   277                           	callstack 0
   278   00005C                     	ds	1
   279   00005D                     _RxBufReadCnt:
   280                           	callstack 0
   281   00005D                     	ds	1
   282   00005E                     _RxBufWriteCnt:
   283                           	callstack 0
   284   00005E                     	ds	1
   285                           
   286                           	psect	bssBANK0
   287   0000F5                     __pbssBANK0:
   288                           	callstack 0
   289   0000F5                     _width:
   290                           	callstack 0
   291   0000F5                     	ds	2
   292   0000F7                     _prec:
   293                           	callstack 0
   294   0000F7                     	ds	2
   295   0000F9                     _off_period:
   296                           	callstack 0
   297   0000F9                     	ds	2
   298   0000FB                     _on_period:
   299                           	callstack 0
   300   0000FB                     	ds	2
   301   0000FD                     _flags:
   302                           	callstack 0
   303   0000FD                     	ds	1
   304                           
   305                           	psect	bssBANK2
   306   000200                     __pbssBANK2:
   307                           	callstack 0
   308   000200                     	ds	30
   309   00021E                     	ds	30
   310   00023C                     _EUSART4RXbuf:
   311                           	callstack 0
   312   00023C                     	ds	20
   313   000250                     _time:
   314                           	callstack 0
   315   000250                     	ds	2
   316   000252                     _dbuf:
   317                           	callstack 0
   318   000252                     	ds	32
   319                           
   320                           	psect	bssBANK3
   321   000300                     __pbssBANK3:
   322                           	callstack 0
   323   000300                     _EUSART4TXbuf:
   324                           	callstack 0
   325   000300                     	ds	60
   326                           
   327                           	psect	cstackBANK2
   328   000272                     __pcstackBANK2:
   329                           	callstack 0
   330   000272                     main@time_path:
   331                           	callstack 0
   332                           
   333                           ; 30 bytes @ 0x0
   334   000272                     	ds	30
   335   000290                     main@color_calibrated:
   336                           	callstack 0
   337                           
   338                           ; 64 bytes @ 0x1E
   339   000290                     	ds	64
   340   0002D0                     main@motorL:
   341                           	callstack 0
   342                           
   343                           ; 9 bytes @ 0x5E
   344   0002D0                     	ds	9
   345   0002D9                     main@motorR:
   346                           	callstack 0
   347                           
   348                           ; 9 bytes @ 0x67
   349   0002D9                     	ds	9
   350                           
   351                           	psect	cstackBANK1
   352   000100                     __pcstackBANK1:
   353                           	callstack 0
   354   000100                     main@readout3:
   355                           	callstack 0
   356                           
   357                           ; 100 bytes @ 0x0
   358   000100                     	ds	100
   359   000164                     main@readout4:
   360                           	callstack 0
   361                           
   362                           ; 100 bytes @ 0x64
   363   000164                     	ds	100
   364   0001C8                     main@color_path:
   365                           	callstack 0
   366                           
   367                           ; 30 bytes @ 0xC8
   368   0001C8                     	ds	30
   369   0001E6                     main@i:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0xE6
   373   0001E6                     	ds	2
   374   0001E8                     main@i_849:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0xE8
   378   0001E8                     	ds	2
   379   0001EA                     main@RGB_calibrated:
   380                           	callstack 0
   381                           
   382                           ; 8 bytes @ 0xEA
   383   0001EA                     	ds	8
   384   0001F2                     main@RGB_recorded:
   385                           	callstack 0
   386                           
   387                           ; 8 bytes @ 0xF2
   388   0001F2                     	ds	8
   389                           
   390                           	psect	cstackBANK0
   391   000060                     __pcstackBANK0:
   392                           	callstack 0
   393   000060                     ?_sprintf:
   394                           	callstack 0
   395   000060                     sprintf@s:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x0
   399   000060                     	ds	2
   400   000062                     sprintf@fmt:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x2
   404   000062                     	ds	12
   405   00006E                     sprintf@ap:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xE
   409   00006E                     	ds	2
   410   000070                     sprintf@f:
   411                           	callstack 0
   412                           
   413                           ; 11 bytes @ 0x10
   414   000070                     	ds	11
   415   00007B                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x1B
   418   00007B                     	ds	8
   419   000083                     main@readout2:
   420                           	callstack 0
   421                           
   422                           ; 100 bytes @ 0x23
   423   000083                     	ds	100
   424   0000E7                     main@lowerbound_calibrated:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x87
   428   0000E7                     	ds	2
   429   0000E9                     main@upperbound_calibrated:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x89
   433   0000E9                     	ds	2
   434   0000EB                     main@time_return:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x8B
   438   0000EB                     	ds	2
   439   0000ED                     main@j:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x8D
   443   0000ED                     	ds	2
   444   0000EF                     main@m:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x8F
   448   0000EF                     	ds	2
   449   0000F1                     main@k:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x91
   453   0000F1                     	ds	2
   454   0000F3                     main@color_name:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x93
   458   0000F3                     	ds	2
   459                           
   460                           	psect	cstackCOMRAM
   461   000001                     __pcstackCOMRAM:
   462                           	callstack 0
   463   000001                     ??_I2C_2_Master_Idle:
   464   000001                     ?_color_processor_easy:
   465                           	callstack 0
   466   000001                     ?_color_processor_hard:
   467                           	callstack 0
   468   000001                     ?___wmul:
   469                           	callstack 0
   470   000001                     ?___xxtofl:
   471                           	callstack 0
   472   000001                     ?___aodiv:
   473                           	callstack 0
   474   000001                     ?___aomod:
   475                           	callstack 0
   476   000001                     sendCharSerial4@charToSend:
   477                           	callstack 0
   478   000001                     color_processor_easy@rgb:
   479                           	callstack 0
   480   000001                     color_processor_hard@rgb:
   481                           	callstack 0
   482   000001                     initDCmotorsPWM@PWMperiod:
   483                           	callstack 0
   484   000001                     ___wmul@multiplier:
   485                           	callstack 0
   486   000001                     fputc@c:
   487                           	callstack 0
   488   000001                     ___xxtofl@val:
   489                           	callstack 0
   490   000001                     ___aodiv@dividend:
   491                           	callstack 0
   492   000001                     ___aomod@dividend:
   493                           	callstack 0
   494                           
   495                           ; 8 bytes @ 0x0
   496   000001                     	ds	1
   497   000002                     ??_I2C_2_Master_Read:
   498   000002                     I2C_2_Master_Write@data_byte:
   499                           	callstack 0
   500   000002                     sendStringSerial4@string:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x1
   504   000002                     	ds	1
   505   000003                     color_writetoaddr@value:
   506                           	callstack 0
   507   000003                     I2C_2_Master_Read@ack:
   508                           	callstack 0
   509   000003                     color_processor_easy@calibrated:
   510                           	callstack 0
   511   000003                     color_processor_hard@calibrated:
   512                           	callstack 0
   513   000003                     ___wmul@multiplicand:
   514                           	callstack 0
   515   000003                     fputc@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2
   519   000003                     	ds	1
   520   000004                     color_writetoaddr@address:
   521                           	callstack 0
   522   000004                     I2C_2_Master_Read@tmp:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x3
   526   000004                     	ds	1
   527   000005                     ??_fputc:
   528   000005                     ??_color_click_init:
   529   000005                     ??_color_processor_easy:
   530   000005                     ??_color_processor_hard:
   531   000005                     ??___xxtofl:
   532   000005                     ?_color_read_Luminosity:
   533                           	callstack 0
   534   000005                     ?_color_read_Red:
   535                           	callstack 0
   536   000005                     ?_color_read_Green:
   537                           	callstack 0
   538   000005                     ?_color_read_Blue:
   539                           	callstack 0
   540   000005                     ___wmul@product:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x4
   544   000005                     	ds	2
   545   000007                     ??_color_read_Luminosity:
   546   000007                     ??_color_read_Red:
   547   000007                     ??_color_read_Green:
   548   000007                     ??_color_read_Blue:
   549   000007                     ?___awdiv:
   550                           	callstack 0
   551   000007                     color_processor_hard@condition_r:
   552                           	callstack 0
   553   000007                     ___awdiv@dividend:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x6
   557   000007                     	ds	1
   558   000008                     color_processor_hard@condition_g:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x7
   562   000008                     	ds	1
   563   000009                     color_processor_hard@condition_b:
   564                           	callstack 0
   565   000009                     ___xxtofl@sign:
   566                           	callstack 0
   567   000009                     color_processor_easy@l:
   568                           	callstack 0
   569   000009                     ___awdiv@divisor:
   570                           	callstack 0
   571   000009                     ___aodiv@divisor:
   572                           	callstack 0
   573   000009                     ___aomod@divisor:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x8
   577   000009                     	ds	1
   578   00000A                     _color_processor_hard$379:
   579                           	callstack 0
   580   00000A                     ___xxtofl@exp:
   581                           	callstack 0
   582   00000A                     color_read_Luminosity@tmp:
   583                           	callstack 0
   584   00000A                     color_read_Red@tmp:
   585                           	callstack 0
   586   00000A                     color_read_Green@tmp:
   587                           	callstack 0
   588   00000A                     color_read_Blue@tmp:
   589                           	callstack 0
   590   00000A                     fputs@s:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x9
   594   00000A                     	ds	1
   595   00000B                     _color_processor_hard$381:
   596                           	callstack 0
   597   00000B                     ___awdiv@counter:
   598                           	callstack 0
   599   00000B                     color_processor_easy@r:
   600                           	callstack 0
   601   00000B                     ___xxtofl@arg:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0xA
   605   00000B                     	ds	1
   606   00000C                     _color_processor_hard$383:
   607                           	callstack 0
   608   00000C                     ___awdiv@sign:
   609                           	callstack 0
   610   00000C                     color_read@rgb:
   611                           	callstack 0
   612   00000C                     fputs@fp:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0xB
   616   00000C                     	ds	1
   617   00000D                     color_processor_easy@g:
   618                           	callstack 0
   619   00000D                     color_processor_hard@r:
   620                           	callstack 0
   621   00000D                     ___awdiv@quotient:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0xC
   625   00000D                     	ds	1
   626   00000E                     ??_color_read:
   627   00000E                     fputs@c:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0xD
   631   00000E                     	ds	1
   632   00000F                     ?___flmul:
   633                           	callstack 0
   634   00000F                     color_processor_easy@b:
   635                           	callstack 0
   636   00000F                     color_processor_hard@g:
   637                           	callstack 0
   638   00000F                     setMotorPWM@m:
   639                           	callstack 0
   640   00000F                     fputs@i:
   641                           	callstack 0
   642   00000F                     ___flmul@b:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0xE
   646   00000F                     	ds	2
   647   000011                     ??_setMotorPWM:
   648   000011                     ___aodiv@counter:
   649                           	callstack 0
   650   000011                     ___aomod@counter:
   651                           	callstack 0
   652   000011                     color_processor_hard@b:
   653                           	callstack 0
   654   000011                     pad@fp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x10
   658   000011                     	ds	1
   659   000012                     ___aodiv@sign:
   660                           	callstack 0
   661   000012                     ___aomod@sign:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x11
   665   000012                     	ds	1
   666   000013                     ?_abs:
   667                           	callstack 0
   668   000013                     color_processor_hard@cr:
   669                           	callstack 0
   670   000013                     pad@buf:
   671                           	callstack 0
   672   000013                     abs@a:
   673                           	callstack 0
   674   000013                     ___flmul@a:
   675                           	callstack 0
   676   000013                     ___aodiv@quotient:
   677                           	callstack 0
   678                           
   679                           ; 8 bytes @ 0x12
   680   000013                     	ds	2
   681   000015                     ??_abs:
   682   000015                     color_processor_hard@cg:
   683                           	callstack 0
   684   000015                     pad@p:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x14
   688   000015                     	ds	2
   689   000017                     ??___flmul:
   690   000017                     ??_pad:
   691   000017                     color_processor_hard@cb:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x16
   695   000017                     	ds	1
   696   000018                     setMotorPWM@PWMduty:
   697                           	callstack 0
   698   000018                     pad@i:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x17
   702   000018                     	ds	2
   703   00001A                     stop@mL:
   704                           	callstack 0
   705   00001A                     forward@mL:
   706                           	callstack 0
   707   00001A                     reverse_fromcard@mL:
   708                           	callstack 0
   709   00001A                     reverse_onesquare@mL:
   710                           	callstack 0
   711   00001A                     right_90@mL:
   712                           	callstack 0
   713   00001A                     left_90@mL:
   714                           	callstack 0
   715   00001A                     spin_180@mL:
   716                           	callstack 0
   717   00001A                     right_135@mL:
   718                           	callstack 0
   719   00001A                     left_135@mL:
   720                           	callstack 0
   721   00001A                     pad@w:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x19
   725   00001A                     	ds	1
   726   00001B                     ___flmul@sign:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x1A
   730   00001B                     	ds	1
   731   00001C                     stop@mR:
   732                           	callstack 0
   733   00001C                     forward@mR:
   734                           	callstack 0
   735   00001C                     reverse_fromcard@mR:
   736                           	callstack 0
   737   00001C                     reverse_onesquare@mR:
   738                           	callstack 0
   739   00001C                     right_90@mR:
   740                           	callstack 0
   741   00001C                     left_90@mR:
   742                           	callstack 0
   743   00001C                     spin_180@mR:
   744                           	callstack 0
   745   00001C                     right_135@mR:
   746                           	callstack 0
   747   00001C                     left_135@mR:
   748                           	callstack 0
   749   00001C                     dtoa@fp:
   750                           	callstack 0
   751   00001C                     ___flmul@grs:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x1B
   755   00001C                     	ds	2
   756   00001E                     ??_stop:
   757   00001E                     ??_spin_180:
   758   00001E                     ??_forward:
   759   00001E                     ??_reverse_fromcard:
   760   00001E                     ??_reverse_onesquare:
   761   00001E                     ??_right_90:
   762   00001E                     ??_left_90:
   763   00001E                     ??_right_135:
   764   00001E                     ??_left_135:
   765   00001E                     dtoa@d:
   766                           	callstack 0
   767                           
   768                           ; 8 bytes @ 0x1D
   769   00001E                     	ds	1
   770   00001F                     stop@i:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x1E
   774   00001F                     	ds	1
   775   000020                     ___flmul@aexp:
   776                           	callstack 0
   777   000020                     forward@i:
   778                           	callstack 0
   779   000020                     reverse_fromcard@i:
   780                           	callstack 0
   781   000020                     reverse_onesquare@i:
   782                           	callstack 0
   783   000020                     right_90@i:
   784                           	callstack 0
   785   000020                     left_90@i:
   786                           	callstack 0
   787   000020                     spin_180@i:
   788                           	callstack 0
   789   000020                     right_135@i:
   790                           	callstack 0
   791   000020                     left_135@i:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x1F
   795   000020                     	ds	1
   796   000021                     ___flmul@bexp:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x20
   800   000021                     	ds	1
   801   000022                     motor_action@color:
   802                           	callstack 0
   803   000022                     ___flmul@prod:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x21
   807   000022                     	ds	2
   808   000024                     motor_action@l:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x23
   812   000024                     	ds	2
   813   000026                     ??_dtoa:
   814   000026                     motor_action@r:
   815                           	callstack 0
   816   000026                     ___flmul@temp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x25
   820   000026                     	ds	2
   821   000028                     ??_motor_action:
   822   000028                     ?___fltol:
   823                           	callstack 0
   824   000028                     ___fltol@f1:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x27
   828   000028                     	ds	4
   829   00002C                     ??___fltol:
   830                           
   831                           ; 1 bytes @ 0x2B
   832   00002C                     	ds	2
   833   00002E                     _dtoa$2448:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x2D
   837   00002E                     	ds	2
   838   000030                     ___fltol@sign1:
   839                           	callstack 0
   840   000030                     dtoa@p:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x2F
   844   000030                     	ds	1
   845   000031                     ___fltol@exp1:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x30
   849   000031                     	ds	1
   850   000032                     dtoa@w:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x31
   854   000032                     	ds	2
   855   000034                     dtoa@n:
   856                           	callstack 0
   857                           
   858                           ; 8 bytes @ 0x33
   859   000034                     	ds	8
   860   00003C                     dtoa@i:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x3B
   864   00003C                     	ds	2
   865   00003E                     dtoa@s:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x3D
   869   00003E                     	ds	1
   870   00003F                     vfpfcnvrt@fp:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x3E
   874   00003F                     	ds	2
   875   000041                     vfpfcnvrt@fmt:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x40
   879   000041                     	ds	2
   880   000043                     vfpfcnvrt@ap:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x42
   884   000043                     	ds	2
   885   000045                     ??_vfpfcnvrt:
   886                           
   887                           ; 1 bytes @ 0x44
   888   000045                     	ds	2
   889   000047                     vfpfcnvrt@convarg:
   890                           	callstack 0
   891                           
   892                           ; 8 bytes @ 0x46
   893   000047                     	ds	8
   894   00004F                     vfpfcnvrt@cp:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x4E
   898   00004F                     	ds	2
   899   000051                     ?_vfprintf:
   900                           	callstack 0
   901   000051                     vfprintf@fp:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x50
   905   000051                     	ds	2
   906   000053                     vfprintf@fmt:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x52
   910   000053                     	ds	2
   911   000055                     vfprintf@ap:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x54
   915   000055                     	ds	2
   916   000057                     vfprintf@cfmt:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x56
   920   000057                     	ds	2
   921   000059                     main@color_flag:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x58
   925   000059                     	ds	2
   926                           
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 20 in file "../main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  readout4      100  100[BANK1 ] unsigned char [100]
   937 ;;  readout3      100    0[BANK1 ] unsigned char [100]
   938 ;;  readout2      100   35[BANK0 ] unsigned char [100]
   939 ;;  k               2  145[BANK0 ] int 
   940 ;;  m               2  143[BANK0 ] int 
   941 ;;  i               2  232[BANK1 ] int 
   942 ;;  i               2  230[BANK1 ] int 
   943 ;;  color_calibr   64   30[BANK2 ] int [32]
   944 ;;  time_path      30    0[BANK2 ] unsigned int [15]
   945 ;;  color_path     30  200[BANK1 ] unsigned int [15]
   946 ;;  motorR          9  103[BANK2 ] struct DC_motor
   947 ;;  motorL          9   94[BANK2 ] struct DC_motor
   948 ;;  RGB_recorded    8  242[BANK1 ] struct RGB_val
   949 ;;  RGB_calibrat    8  234[BANK1 ] struct RGB_val
   950 ;;  L_calibrated    8    0        struct RGB_val
   951 ;;  color_name      2  147[BANK0 ] unsigned int 
   952 ;;  j               2  141[BANK0 ] int 
   953 ;;  time_return     2  139[BANK0 ] unsigned int 
   954 ;;  color_flag      2   88[COMRAM] unsigned int 
   955 ;;  upperbound_c    2  137[BANK0 ] unsigned int 
   956 ;;  lowerbound_c    2  135[BANK0 ] unsigned int 
   957 ;;  PWMcycle        1    0        unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   968 ;;      Locals:         2     114     250     112       0       0       0       0       0       0       0       0       
      +0       0       0
   969 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   970 ;;      Totals:         2     122     250     112       0       0       0       0       0       0       0       0       
      +0       0       0
   971 ;;Total ram usage:      486 bytes
   972 ;; Hardware stack levels required when called: 9
   973 ;; This function calls:
   974 ;;		_I2C_2_Master_Init
   975 ;;		_Interrupts_init
   976 ;;		_Timer0_init
   977 ;;		___flmul
   978 ;;		___fltol
   979 ;;		___xxtofl
   980 ;;		_color_click_init
   981 ;;		_color_processor_easy
   982 ;;		_color_processor_hard
   983 ;;		_color_read
   984 ;;		_forward
   985 ;;		_initDCmotorsPWM
   986 ;;		_initUSART4
   987 ;;		_motor_action
   988 ;;		_sendStringSerial4
   989 ;;		_setMotorPWM
   990 ;;		_spin_180
   991 ;;		_sprintf
   992 ;;		_stop
   993 ;; This function is called by:
   994 ;;		Startup code after reset
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text0
   999   000E2E                     __ptext0:
  1000                           	callstack 0
  1001   000E2E                     _main:
  1002                           	callstack 22
  1003   000E2E                     
  1004                           ;../main.c: 22:     color_click_init();
  1005   000E2E  EC56  F01A         	call	_color_click_init	;wreg free
  1006   000E32                     
  1007                           ;../main.c: 23:     initDCmotorsPWM(20);
  1008   000E32  0E00               	movlw	0
  1009   000E34  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1010   000E36  0E14               	movlw	20
  1011   000E38  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1012   000E3A  EC97  F01B         	call	_initDCmotorsPWM	;wreg free
  1013   000E3E                     
  1014                           ;../main.c: 24:     Interrupts_init();
  1015   000E3E  ECA3  F01C         	call	_Interrupts_init	;wreg free
  1016   000E42                     
  1017                           ;../main.c: 25:     Timer0_init();
  1018   000E42  EC78  F01C         	call	_Timer0_init	;wreg free
  1019   000E46                     
  1020                           ;../main.c: 26:     I2C_2_Master_Init();
  1021   000E46  EC2C  F01C         	call	_I2C_2_Master_Init	;wreg free
  1022   000E4A                     
  1023                           ;../main.c: 27:     initUSART4();
  1024   000E4A  EC88  F01C         	call	_initUSART4	;wreg free
  1025   000E4E                     
  1026                           ;../main.c: 32:     motorL.power = 0;
  1027   000E4E  0E00               	movlw	0
  1028   000E50  0102               	movlb	2	; () banked
  1029   000E52  6FD0               	movwf	main@motorL& (0+255),b
  1030   000E54                     
  1031                           ; BSR set to: 2
  1032                           ;../main.c: 33:     motorL.direction = 0;
  1033   000E54  0E00               	movlw	0
  1034   000E56  6FD1               	movwf	(main@motorL+1)& (0+255),b
  1035   000E58                     
  1036                           ; BSR set to: 2
  1037                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
  1038   000E58  0EA3               	movlw	163
  1039   000E5A  6FD2               	movwf	(main@motorL+2)& (0+255),b
  1040   000E5C  0E0F               	movlw	15
  1041   000E5E  6FD3               	movwf	(main@motorL+3)& (0+255),b
  1042   000E60                     
  1043                           ; BSR set to: 2
  1044                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
  1045   000E60  0E7D               	movlw	125
  1046   000E62  6FD4               	movwf	(main@motorL+4)& (0+255),b
  1047   000E64  0E0F               	movlw	15
  1048   000E66  6FD5               	movwf	(main@motorL+5)& (0+255),b
  1049   000E68                     
  1050                           ; BSR set to: 2
  1051                           ;../main.c: 36:     motorL.dir_pin = 4;
  1052   000E68  0E04               	movlw	4
  1053   000E6A  6FD6               	movwf	(main@motorL+6)& (0+255),b
  1054   000E6C                     
  1055                           ; BSR set to: 2
  1056                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
  1057   000E6C  0E00               	movlw	0
  1058   000E6E  6FD8               	movwf	(main@motorL+8)& (0+255),b
  1059   000E70  0EC7               	movlw	199
  1060   000E72  6FD7               	movwf	(main@motorL+7)& (0+255),b
  1061   000E74                     
  1062                           ; BSR set to: 2
  1063                           ;../main.c: 38:     motorR.power = 0;
  1064   000E74  0E00               	movlw	0
  1065   000E76  6FD9               	movwf	main@motorR& (0+255),b
  1066   000E78                     
  1067                           ; BSR set to: 2
  1068                           ;../main.c: 39:     motorR.direction = 0;
  1069   000E78  0E00               	movlw	0
  1070   000E7A  6FDA               	movwf	(main@motorR+1)& (0+255),b
  1071                           
  1072                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
  1073   000E7C  0EA0               	movlw	160
  1074   000E7E  6FDB               	movwf	(main@motorR+2)& (0+255),b
  1075   000E80  0E0F               	movlw	15
  1076   000E82  6FDC               	movwf	(main@motorR+3)& (0+255),b
  1077                           
  1078                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
  1079   000E84  0E7F               	movlw	127
  1080   000E86  6FDD               	movwf	(main@motorR+4)& (0+255),b
  1081   000E88  0E0F               	movlw	15
  1082   000E8A  6FDE               	movwf	(main@motorR+5)& (0+255),b
  1083   000E8C                     
  1084                           ; BSR set to: 2
  1085                           ;../main.c: 42:     motorR.dir_pin = 6;
  1086   000E8C  0E06               	movlw	6
  1087   000E8E  6FDF               	movwf	(main@motorR+6)& (0+255),b
  1088   000E90                     
  1089                           ; BSR set to: 2
  1090                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
  1091   000E90  0E00               	movlw	0
  1092   000E92  6FE1               	movwf	(main@motorR+8)& (0+255),b
  1093   000E94  0EC7               	movlw	199
  1094   000E96  6FE0               	movwf	(main@motorR+7)& (0+255),b
  1095   000E98                     
  1096                           ; BSR set to: 2
  1097                           ;../main.c: 44:     setMotorPWM(&motorL);
  1098   000E98  0ED0               	movlw	low main@motorL
  1099   000E9A  6E0F               	movwf	setMotorPWM@m^0,c
  1100   000E9C  0E02               	movlw	high main@motorL
  1101   000E9E  6E10               	movwf	(setMotorPWM@m+1)^0,c
  1102   000EA0  EC31  F011         	call	_setMotorPWM	;wreg free
  1103   000EA4                     
  1104                           ;../main.c: 45:     setMotorPWM(&motorR);
  1105   000EA4  0ED9               	movlw	low main@motorR
  1106   000EA6  6E0F               	movwf	setMotorPWM@m^0,c
  1107   000EA8  0E02               	movlw	high main@motorR
  1108   000EAA  6E10               	movwf	(setMotorPWM@m+1)^0,c
  1109   000EAC  EC31  F011         	call	_setMotorPWM	;wreg free
  1110   000EB0                     
  1111                           ;../main.c: 48:     unsigned int color_flag;;../main.c: 49:     unsigned int color_name 
      +                          = 0;
  1112   000EB0  0E00               	movlw	0
  1113   000EB2  0100               	movlb	0	; () banked
  1114   000EB4  6FF4               	movwf	(main@color_name+1)& (0+255),b
  1115   000EB6  0E00               	movlw	0
  1116   000EB8  6FF3               	movwf	main@color_name& (0+255),b
  1117   000EBA                     
  1118                           ; BSR set to: 0
  1119                           ;../main.c: 50:     unsigned int color_path[15] = {0};
  1120   000EBA  EE21  F0C8         	lfsr	2,main@color_path
  1121   000EBE  0E1D               	movlw	29
  1122   000EC0                     u2551:
  1123   000EC0  6ADE               	clrf	postinc2,c
  1124   000EC2  06E8               	decf	wreg,f,c
  1125   000EC4  E2FD               	bc	u2551
  1126   000EC6                     
  1127                           ; BSR set to: 0
  1128                           ;../main.c: 51:     int color_calibrated[32];;../main.c: 52:     unsigned int lowerbound
      +                          _calibrated;;../main.c: 53:     unsigned int upperbound_calibrated;;../main.c: 54:     s
      +                          truct RGB_val RGB_calibrated;;../main.c: 55:     struct RGB_val L_calibrated;;../main.c:
      +                           56:     struct RGB_val RGB_recorded;;../main.c: 57:     unsigned int time_path[15] = {0
      +                          };
  1129   000EC6  EE22  F072         	lfsr	2,main@time_path
  1130   000ECA  0E1D               	movlw	29
  1131   000ECC                     u2561:
  1132   000ECC  6ADE               	clrf	postinc2,c
  1133   000ECE  06E8               	decf	wreg,f,c
  1134   000ED0  E2FD               	bc	u2561
  1135   000ED2                     l210:
  1136   000ED2  B68E               	btfsc	142,3,c	;volatile
  1137   000ED4  EF6E  F007         	goto	u2571
  1138   000ED8  EF70  F007         	goto	u2570
  1139   000EDC                     u2571:
  1140   000EDC  EF69  F007         	goto	l210
  1141   000EE0                     u2570:
  1142   000EE0                     
  1143                           ;../main.c: 76:         for (int i=0;i<8;i++){
  1144   000EE0  0E00               	movlw	0
  1145   000EE2  0101               	movlb	1	; () banked
  1146   000EE4  6FE7               	movwf	(main@i+1)& (0+255),b
  1147   000EE6  0E00               	movlw	0
  1148   000EE8  6FE6               	movwf	main@i& (0+255),b
  1149   000EEA                     l3720:
  1150                           
  1151                           ; BSR set to: 1
  1152                           ;../main.c: 77:             color_read(&RGB_calibrated);
  1153   000EEA  0EEA               	movlw	low main@RGB_calibrated
  1154   000EEC  6E0C               	movwf	color_read@rgb^0,c
  1155   000EEE  0E01               	movlw	high main@RGB_calibrated
  1156   000EF0  6E0D               	movwf	(color_read@rgb+1)^0,c
  1157   000EF2  ECF6  F016         	call	_color_read	;wreg free
  1158   000EF6                     
  1159                           ;../main.c: 78:             color_calibrated[4*i] = RGB_calibrated.L;
  1160   000EF6  C1E6  F07B         	movff	main@i,??_main
  1161   000EFA  C1E7  F07C         	movff	main@i+1,??_main+1
  1162   000EFE  0100               	movlb	0	; () banked
  1163   000F00  90D8               	bcf	status,0,c
  1164   000F02  377B               	rlcf	??_main& (0+255),f,b
  1165   000F04  377C               	rlcf	(??_main+1)& (0+255),f,b
  1166   000F06  90D8               	bcf	status,0,c
  1167   000F08  377B               	rlcf	??_main& (0+255),f,b
  1168   000F0A  377C               	rlcf	(??_main+1)& (0+255),f,b
  1169   000F0C  90D8               	bcf	status,0,c
  1170   000F0E  377B               	rlcf	??_main& (0+255),f,b
  1171   000F10  377C               	rlcf	(??_main+1)& (0+255),f,b
  1172   000F12  0E90               	movlw	low main@color_calibrated
  1173   000F14  257B               	addwf	??_main& (0+255),w,b
  1174   000F16  6ED9               	movwf	fsr2l,c
  1175   000F18  0E02               	movlw	high main@color_calibrated
  1176   000F1A  217C               	addwfc	(??_main+1)& (0+255),w,b
  1177   000F1C  6EDA               	movwf	fsr2h,c
  1178   000F1E  C1EA  FFDE         	movff	main@RGB_calibrated,postinc2
  1179   000F22  C1EB  FFDD         	movff	main@RGB_calibrated+1,postdec2
  1180   000F26                     
  1181                           ; BSR set to: 0
  1182                           ;../main.c: 79:             color_calibrated[4*i+1] = RGB_calibrated.R;
  1183   000F26  C1E6  F07B         	movff	main@i,??_main
  1184   000F2A  C1E7  F07C         	movff	main@i+1,??_main+1
  1185   000F2E  90D8               	bcf	status,0,c
  1186   000F30  377B               	rlcf	??_main& (0+255),f,b
  1187   000F32  377C               	rlcf	(??_main+1)& (0+255),f,b
  1188   000F34  90D8               	bcf	status,0,c
  1189   000F36  377B               	rlcf	??_main& (0+255),f,b
  1190   000F38  377C               	rlcf	(??_main+1)& (0+255),f,b
  1191   000F3A  90D8               	bcf	status,0,c
  1192   000F3C  377B               	rlcf	??_main& (0+255),f,b
  1193   000F3E  377C               	rlcf	(??_main+1)& (0+255),f,b
  1194   000F40  0E02               	movlw	2
  1195   000F42  277B               	addwf	??_main& (0+255),f,b
  1196   000F44  0E00               	movlw	0
  1197   000F46  237C               	addwfc	(??_main+1)& (0+255),f,b
  1198   000F48  0E90               	movlw	low main@color_calibrated
  1199   000F4A  257B               	addwf	??_main& (0+255),w,b
  1200   000F4C  6ED9               	movwf	fsr2l,c
  1201   000F4E  0E02               	movlw	high main@color_calibrated
  1202   000F50  217C               	addwfc	(??_main+1)& (0+255),w,b
  1203   000F52  6EDA               	movwf	fsr2h,c
  1204   000F54  C1EC  FFDE         	movff	main@RGB_calibrated+2,postinc2
  1205   000F58  C1ED  FFDD         	movff	main@RGB_calibrated+3,postdec2
  1206   000F5C                     
  1207                           ; BSR set to: 0
  1208                           ;../main.c: 80:             color_calibrated[4*i+2] = RGB_calibrated.G;
  1209   000F5C  C1E6  F07B         	movff	main@i,??_main
  1210   000F60  C1E7  F07C         	movff	main@i+1,??_main+1
  1211   000F64  90D8               	bcf	status,0,c
  1212   000F66  377B               	rlcf	??_main& (0+255),f,b
  1213   000F68  377C               	rlcf	(??_main+1)& (0+255),f,b
  1214   000F6A  90D8               	bcf	status,0,c
  1215   000F6C  377B               	rlcf	??_main& (0+255),f,b
  1216   000F6E  377C               	rlcf	(??_main+1)& (0+255),f,b
  1217   000F70  90D8               	bcf	status,0,c
  1218   000F72  377B               	rlcf	??_main& (0+255),f,b
  1219   000F74  377C               	rlcf	(??_main+1)& (0+255),f,b
  1220   000F76  0E04               	movlw	4
  1221   000F78  277B               	addwf	??_main& (0+255),f,b
  1222   000F7A  0E00               	movlw	0
  1223   000F7C  237C               	addwfc	(??_main+1)& (0+255),f,b
  1224   000F7E  0E90               	movlw	low main@color_calibrated
  1225   000F80  257B               	addwf	??_main& (0+255),w,b
  1226   000F82  6ED9               	movwf	fsr2l,c
  1227   000F84  0E02               	movlw	high main@color_calibrated
  1228   000F86  217C               	addwfc	(??_main+1)& (0+255),w,b
  1229   000F88  6EDA               	movwf	fsr2h,c
  1230   000F8A  C1EE  FFDE         	movff	main@RGB_calibrated+4,postinc2
  1231   000F8E  C1EF  FFDD         	movff	main@RGB_calibrated+5,postdec2
  1232   000F92                     
  1233                           ; BSR set to: 0
  1234                           ;../main.c: 81:             color_calibrated[4*i+3] = RGB_calibrated.B;
  1235   000F92  C1E6  F07B         	movff	main@i,??_main
  1236   000F96  C1E7  F07C         	movff	main@i+1,??_main+1
  1237   000F9A  90D8               	bcf	status,0,c
  1238   000F9C  377B               	rlcf	??_main& (0+255),f,b
  1239   000F9E  377C               	rlcf	(??_main+1)& (0+255),f,b
  1240   000FA0  90D8               	bcf	status,0,c
  1241   000FA2  377B               	rlcf	??_main& (0+255),f,b
  1242   000FA4  377C               	rlcf	(??_main+1)& (0+255),f,b
  1243   000FA6  90D8               	bcf	status,0,c
  1244   000FA8  377B               	rlcf	??_main& (0+255),f,b
  1245   000FAA  377C               	rlcf	(??_main+1)& (0+255),f,b
  1246   000FAC  0E06               	movlw	6
  1247   000FAE  277B               	addwf	??_main& (0+255),f,b
  1248   000FB0  0E00               	movlw	0
  1249   000FB2  237C               	addwfc	(??_main+1)& (0+255),f,b
  1250   000FB4  0E90               	movlw	low main@color_calibrated
  1251   000FB6  257B               	addwf	??_main& (0+255),w,b
  1252   000FB8  6ED9               	movwf	fsr2l,c
  1253   000FBA  0E02               	movlw	high main@color_calibrated
  1254   000FBC  217C               	addwfc	(??_main+1)& (0+255),w,b
  1255   000FBE  6EDA               	movwf	fsr2h,c
  1256   000FC0  C1F0  FFDE         	movff	main@RGB_calibrated+6,postinc2
  1257   000FC4  C1F1  FFDD         	movff	main@RGB_calibrated+7,postdec2
  1258   000FC8                     
  1259                           ; BSR set to: 0
  1260                           ;../main.c: 82:             LATHbits.LATH3 = 1;
  1261   000FC8  8680               	bsf	128,3,c	;volatile
  1262   000FCA                     
  1263                           ; BSR set to: 0
  1264                           ;../main.c: 84:             char readout2[100];;../main.c: 85:             sprintf(reado
      +                          ut2,"%d %d %d %d \r\n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrate
      +                          d.B);
  1265   000FCA  0E83               	movlw	low main@readout2
  1266   000FCC  6F60               	movwf	sprintf@s& (0+255),b
  1267   000FCE  0E00               	movlw	high main@readout2
  1268   000FD0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1269   000FD2  0E1E               	movlw	low (STR_2+3)
  1270   000FD4  6F62               	movwf	sprintf@fmt& (0+255),b
  1271   000FD6  0E0E               	movlw	high (STR_2+3)
  1272   000FD8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1273   000FDA  C1EA  F064         	movff	main@RGB_calibrated,?_sprintf+4
  1274   000FDE  C1EB  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
  1275   000FE2  C1EC  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
  1276   000FE6  C1ED  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
  1277   000FEA  C1EE  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
  1278   000FEE  C1EF  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
  1279   000FF2  C1F0  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
  1280   000FF6  C1F1  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
  1281   000FFA  EC83  F01A         	call	_sprintf	;wreg free
  1282   000FFE                     
  1283                           ;../main.c: 86:             sendStringSerial4(readout2);
  1284   000FFE  0E83               	movlw	low main@readout2
  1285   001000  6E02               	movwf	sendStringSerial4@string^0,c
  1286   001002  0E00               	movlw	high main@readout2
  1287   001004  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1288   001006  EC14  F01C         	call	_sendStringSerial4	;wreg free
  1289   00100A                     
  1290                           ;../main.c: 87:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1291   00100A  0EA3               	movlw	163
  1292   00100C  0100               	movlb	0	; () banked
  1293   00100E  6F7C               	movwf	(??_main+1)& (0+255),b
  1294   001010  0E57               	movlw	87
  1295   001012  6F7B               	movwf	??_main& (0+255),b
  1296   001014  0E02               	movlw	2
  1297   001016                     u2767:
  1298   001016  2EE8               	decfsz	wreg,f,c
  1299   001018  D7FE               	bra	u2767
  1300   00101A  2F7B               	decfsz	??_main& (0+255),f,b
  1301   00101C  D7FC               	bra	u2767
  1302   00101E  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1303   001020  D7FA               	bra	u2767
  1304   001022  F000               	nop	
  1305   001024                     
  1306                           ;../main.c: 88:             LATHbits.LATH3 = 0;
  1307   001024  9680               	bcf	128,3,c	;volatile
  1308   001026                     
  1309                           ;../main.c: 89:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1310   001026  0E52               	movlw	82
  1311   001028  0100               	movlb	0	; () banked
  1312   00102A  6F7C               	movwf	(??_main+1)& (0+255),b
  1313   00102C  0E2B               	movlw	43
  1314   00102E  6F7B               	movwf	??_main& (0+255),b
  1315   001030  0E00               	movlw	0
  1316   001032                     u2777:
  1317   001032  2EE8               	decfsz	wreg,f,c
  1318   001034  D7FE               	bra	u2777
  1319   001036  2F7B               	decfsz	??_main& (0+255),f,b
  1320   001038  D7FC               	bra	u2777
  1321   00103A  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1322   00103C  D7FA               	bra	u2777
  1323   00103E  F000               	nop	
  1324   001040                     
  1325                           ;../main.c: 90:         }
  1326   001040  0101               	movlb	1	; () banked
  1327   001042  4BE6               	infsnz	main@i& (0+255),f,b
  1328   001044  2BE7               	incf	(main@i+1)& (0+255),f,b
  1329   001046                     
  1330                           ; BSR set to: 1
  1331   001046  BFE7               	btfsc	(main@i+1)& (0+255),7,b
  1332   001048  EF2F  F008         	goto	u2581
  1333   00104C  51E7               	movf	(main@i+1)& (0+255),w,b
  1334   00104E  E109               	bnz	u2580
  1335   001050  0E08               	movlw	8
  1336   001052  5DE6               	subwf	main@i& (0+255),w,b
  1337   001054  A0D8               	btfss	status,0,c
  1338   001056  EF2F  F008         	goto	u2581
  1339   00105A  EF31  F008         	goto	u2580
  1340   00105E                     u2581:
  1341   00105E  EF75  F007         	goto	l3720
  1342   001062                     u2580:
  1343   001062                     
  1344                           ; BSR set to: 1
  1345                           ;../main.c: 91:         for (int i=0;i<8;i++){
  1346   001062  0E00               	movlw	0
  1347   001064  6FE9               	movwf	(main@i_849+1)& (0+255),b
  1348   001066  0E00               	movlw	0
  1349   001068  6FE8               	movwf	main@i_849& (0+255),b
  1350   00106A                     l3752:
  1351                           
  1352                           ; BSR set to: 1
  1353                           ;../main.c: 92:             char readout3[100];;../main.c: 93:             sprintf(reado
      +                          ut3,"%d %d %d %d %d \r\n", i+1,color_calibrated[4*i],color_calibrated[4*i+1],color_calib
      +                          rated[4*i+2],color_calibrated[4*i+3]);
  1354   00106A  0E00               	movlw	low main@readout3
  1355   00106C  0100               	movlb	0	; () banked
  1356   00106E  6F60               	movwf	sprintf@s& (0+255),b
  1357   001070  0E01               	movlw	high main@readout3
  1358   001072  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1359   001074  0E1B               	movlw	low STR_2
  1360   001076  6F62               	movwf	sprintf@fmt& (0+255),b
  1361   001078  0E0E               	movlw	high STR_2
  1362   00107A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1363   00107C  0E01               	movlw	1
  1364   00107E  0101               	movlb	1	; () banked
  1365   001080  25E8               	addwf	main@i_849& (0+255),w,b
  1366   001082  0100               	movlb	0	; () banked
  1367   001084  6F64               	movwf	(?_sprintf+4)& (0+255),b
  1368   001086  0E00               	movlw	0
  1369   001088  0101               	movlb	1	; () banked
  1370   00108A  21E9               	addwfc	(main@i_849+1)& (0+255),w,b
  1371   00108C  0100               	movlb	0	; () banked
  1372   00108E  6F65               	movwf	(?_sprintf+5)& (0+255),b
  1373   001090  C1E8  F07B         	movff	main@i_849,??_main
  1374   001094  C1E9  F07C         	movff	main@i_849+1,??_main+1
  1375   001098  90D8               	bcf	status,0,c
  1376   00109A  377B               	rlcf	??_main& (0+255),f,b
  1377   00109C  377C               	rlcf	(??_main+1)& (0+255),f,b
  1378   00109E  90D8               	bcf	status,0,c
  1379   0010A0  377B               	rlcf	??_main& (0+255),f,b
  1380   0010A2  377C               	rlcf	(??_main+1)& (0+255),f,b
  1381   0010A4  90D8               	bcf	status,0,c
  1382   0010A6  377B               	rlcf	??_main& (0+255),f,b
  1383   0010A8  377C               	rlcf	(??_main+1)& (0+255),f,b
  1384   0010AA  0E90               	movlw	low main@color_calibrated
  1385   0010AC  257B               	addwf	??_main& (0+255),w,b
  1386   0010AE  6ED9               	movwf	fsr2l,c
  1387   0010B0  0E02               	movlw	high main@color_calibrated
  1388   0010B2  217C               	addwfc	(??_main+1)& (0+255),w,b
  1389   0010B4  6EDA               	movwf	fsr2h,c
  1390   0010B6  CFDE F066          	movff	postinc2,?_sprintf+6
  1391   0010BA  CFDD F067          	movff	postdec2,?_sprintf+7
  1392   0010BE  C1E8  F07D         	movff	main@i_849,??_main+2
  1393   0010C2  C1E9  F07E         	movff	main@i_849+1,??_main+3
  1394   0010C6  90D8               	bcf	status,0,c
  1395   0010C8  377D               	rlcf	(??_main+2)& (0+255),f,b
  1396   0010CA  377E               	rlcf	(??_main+3)& (0+255),f,b
  1397   0010CC  90D8               	bcf	status,0,c
  1398   0010CE  377D               	rlcf	(??_main+2)& (0+255),f,b
  1399   0010D0  377E               	rlcf	(??_main+3)& (0+255),f,b
  1400   0010D2  90D8               	bcf	status,0,c
  1401   0010D4  377D               	rlcf	(??_main+2)& (0+255),f,b
  1402   0010D6  377E               	rlcf	(??_main+3)& (0+255),f,b
  1403   0010D8  0E02               	movlw	2
  1404   0010DA  277D               	addwf	(??_main+2)& (0+255),f,b
  1405   0010DC  0E00               	movlw	0
  1406   0010DE  237E               	addwfc	(??_main+3)& (0+255),f,b
  1407   0010E0  0E90               	movlw	low main@color_calibrated
  1408   0010E2  257D               	addwf	(??_main+2)& (0+255),w,b
  1409   0010E4  6ED9               	movwf	fsr2l,c
  1410   0010E6  0E02               	movlw	high main@color_calibrated
  1411   0010E8  217E               	addwfc	(??_main+3)& (0+255),w,b
  1412   0010EA  6EDA               	movwf	fsr2h,c
  1413   0010EC  CFDE F068          	movff	postinc2,?_sprintf+8
  1414   0010F0  CFDD F069          	movff	postdec2,?_sprintf+9
  1415   0010F4  C1E8  F07F         	movff	main@i_849,??_main+4
  1416   0010F8  C1E9  F080         	movff	main@i_849+1,??_main+5
  1417   0010FC  90D8               	bcf	status,0,c
  1418   0010FE  377F               	rlcf	(??_main+4)& (0+255),f,b
  1419   001100  3780               	rlcf	(??_main+5)& (0+255),f,b
  1420   001102  90D8               	bcf	status,0,c
  1421   001104  377F               	rlcf	(??_main+4)& (0+255),f,b
  1422   001106  3780               	rlcf	(??_main+5)& (0+255),f,b
  1423   001108  90D8               	bcf	status,0,c
  1424   00110A  377F               	rlcf	(??_main+4)& (0+255),f,b
  1425   00110C  3780               	rlcf	(??_main+5)& (0+255),f,b
  1426   00110E  0E04               	movlw	4
  1427   001110  277F               	addwf	(??_main+4)& (0+255),f,b
  1428   001112  0E00               	movlw	0
  1429   001114  2380               	addwfc	(??_main+5)& (0+255),f,b
  1430   001116  0E90               	movlw	low main@color_calibrated
  1431   001118  257F               	addwf	(??_main+4)& (0+255),w,b
  1432   00111A  6ED9               	movwf	fsr2l,c
  1433   00111C  0E02               	movlw	high main@color_calibrated
  1434   00111E  2180               	addwfc	(??_main+5)& (0+255),w,b
  1435   001120  6EDA               	movwf	fsr2h,c
  1436   001122  CFDE F06A          	movff	postinc2,?_sprintf+10
  1437   001126  CFDD F06B          	movff	postdec2,?_sprintf+11
  1438   00112A  C1E8  F081         	movff	main@i_849,??_main+6
  1439   00112E  C1E9  F082         	movff	main@i_849+1,??_main+7
  1440   001132  90D8               	bcf	status,0,c
  1441   001134  3781               	rlcf	(??_main+6)& (0+255),f,b
  1442   001136  3782               	rlcf	(??_main+7)& (0+255),f,b
  1443   001138  90D8               	bcf	status,0,c
  1444   00113A  3781               	rlcf	(??_main+6)& (0+255),f,b
  1445   00113C  3782               	rlcf	(??_main+7)& (0+255),f,b
  1446   00113E  90D8               	bcf	status,0,c
  1447   001140  3781               	rlcf	(??_main+6)& (0+255),f,b
  1448   001142  3782               	rlcf	(??_main+7)& (0+255),f,b
  1449   001144  0E06               	movlw	6
  1450   001146  2781               	addwf	(??_main+6)& (0+255),f,b
  1451   001148  0E00               	movlw	0
  1452   00114A  2382               	addwfc	(??_main+7)& (0+255),f,b
  1453   00114C  0E90               	movlw	low main@color_calibrated
  1454   00114E  2581               	addwf	(??_main+6)& (0+255),w,b
  1455   001150  6ED9               	movwf	fsr2l,c
  1456   001152  0E02               	movlw	high main@color_calibrated
  1457   001154  2182               	addwfc	(??_main+7)& (0+255),w,b
  1458   001156  6EDA               	movwf	fsr2h,c
  1459   001158  CFDE F06C          	movff	postinc2,?_sprintf+12
  1460   00115C  CFDD F06D          	movff	postdec2,?_sprintf+13
  1461   001160  EC83  F01A         	call	_sprintf	;wreg free
  1462   001164                     
  1463                           ;../main.c: 94:             sendStringSerial4(readout3);
  1464   001164  0E00               	movlw	low main@readout3
  1465   001166  6E02               	movwf	sendStringSerial4@string^0,c
  1466   001168  0E01               	movlw	high main@readout3
  1467   00116A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1468   00116C  EC14  F01C         	call	_sendStringSerial4	;wreg free
  1469   001170                     
  1470                           ;../main.c: 95:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1471   001170  0E29               	movlw	41
  1472   001172  0100               	movlb	0	; () banked
  1473   001174  6F7C               	movwf	(??_main+1)& (0+255),b
  1474   001176  0E96               	movlw	150
  1475   001178  6F7B               	movwf	??_main& (0+255),b
  1476   00117A  0E7F               	movlw	127
  1477   00117C                     u2787:
  1478   00117C  2EE8               	decfsz	wreg,f,c
  1479   00117E  D7FE               	bra	u2787
  1480   001180  2F7B               	decfsz	??_main& (0+255),f,b
  1481   001182  D7FC               	bra	u2787
  1482   001184  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1483   001186  D7FA               	bra	u2787
  1484   001188                     
  1485                           ;../main.c: 96:         }
  1486   001188  0101               	movlb	1	; () banked
  1487   00118A  4BE8               	infsnz	main@i_849& (0+255),f,b
  1488   00118C  2BE9               	incf	(main@i_849+1)& (0+255),f,b
  1489   00118E                     
  1490                           ; BSR set to: 1
  1491   00118E  BFE9               	btfsc	(main@i_849+1)& (0+255),7,b
  1492   001190  EFD3  F008         	goto	u2591
  1493   001194  51E9               	movf	(main@i_849+1)& (0+255),w,b
  1494   001196  E109               	bnz	u2590
  1495   001198  0E08               	movlw	8
  1496   00119A  5DE8               	subwf	main@i_849& (0+255),w,b
  1497   00119C  A0D8               	btfss	status,0,c
  1498   00119E  EFD3  F008         	goto	u2591
  1499   0011A2  EFD5  F008         	goto	u2590
  1500   0011A6                     u2591:
  1501   0011A6  EF35  F008         	goto	l3752
  1502   0011AA                     u2590:
  1503   0011AA                     
  1504                           ; BSR set to: 1
  1505                           ;../main.c: 98:         lowerbound_calibrated = color_calibrated[8]*0.95;
  1506   0011AA  0E33               	movlw	51
  1507   0011AC  6E13               	movwf	___flmul@a^0,c
  1508   0011AE  0E33               	movlw	51
  1509   0011B0  6E14               	movwf	(___flmul@a+1)^0,c
  1510   0011B2  0E73               	movlw	115
  1511   0011B4  6E15               	movwf	(___flmul@a+2)^0,c
  1512   0011B6  0E3F               	movlw	63
  1513   0011B8  6E16               	movwf	(___flmul@a+3)^0,c
  1514   0011BA  EE22  F0A0         	lfsr	2,main@color_calibrated+16
  1515   0011BE  CFDE F001          	movff	postinc2,___xxtofl@val
  1516   0011C2  CFDD F002          	movff	postdec2,___xxtofl@val+1
  1517   0011C6  0E00               	movlw	0
  1518   0011C8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1519   0011CA  0EFF               	movlw	-1
  1520   0011CC  6E03               	movwf	(___xxtofl@val+2)^0,c
  1521   0011CE  6E04               	movwf	(___xxtofl@val+3)^0,c
  1522   0011D0  0E01               	movlw	1
  1523   0011D2  EC1B  F012         	call	___xxtofl
  1524   0011D6  C001  F00F         	movff	?___xxtofl,___flmul@b
  1525   0011DA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1526   0011DE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1527   0011E2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1528   0011E6  ECEB  F00C         	call	___flmul	;wreg free
  1529   0011EA  C00F  F028         	movff	?___flmul,___fltol@f1
  1530   0011EE  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1531   0011F2  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1532   0011F6  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1533   0011FA  ECAC  F015         	call	___fltol	;wreg free
  1534   0011FE  C028  F0E7         	movff	?___fltol,main@lowerbound_calibrated
  1535   001202  C029  F0E8         	movff	?___fltol+1,main@lowerbound_calibrated+1
  1536   001206                     
  1537                           ;../main.c: 99:         upperbound_calibrated = color_calibrated[28];
  1538   001206  C2C8  F0E9         	movff	main@color_calibrated+56,main@upperbound_calibrated
  1539   00120A  C2C9  F0EA         	movff	main@color_calibrated+57,main@upperbound_calibrated+1
  1540   00120E                     l3766:
  1541   00120E  0E01               	movlw	1
  1542   001210  A68E               	btfss	142,3,c	;volatile
  1543   001212  0E00               	movlw	0
  1544   001214  A48E               	btfss	142,2,c	;volatile
  1545   001216  0E00               	movlw	0
  1546   001218  B0E8               	btfsc	wreg,0,c
  1547   00121A  EF11  F009         	goto	u2601
  1548   00121E  EF16  F009         	goto	u2600
  1549   001222                     u2601:
  1550   001222  0100               	movlb	0	; () banked
  1551   001224  6B7B               	clrf	??_main& (0+255),b
  1552   001226  2B7B               	incf	??_main& (0+255),f,b
  1553   001228  EF18  F009         	goto	u2608
  1554   00122C                     u2600:
  1555   00122C  0100               	movlb	0	; () banked
  1556   00122E  6B7B               	clrf	??_main& (0+255),b
  1557   001230                     u2608:
  1558   001230  517B               	movf	??_main& (0+255),w,b
  1559   001232  A4D8               	btfss	status,2,c
  1560   001234  EF1E  F009         	goto	u2611
  1561   001238  EF20  F009         	goto	u2610
  1562   00123C                     u2611:
  1563   00123C  EF07  F009         	goto	l3766
  1564   001240                     u2610:
  1565   001240                     
  1566                           ; BSR set to: 0
  1567                           ;../main.c: 103:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
  1568   001240  B48E               	btfsc	142,2,c	;volatile
  1569   001242  EF25  F009         	goto	u2621
  1570   001246  EF27  F009         	goto	u2620
  1571   00124A                     u2621:
  1572   00124A  EF2A  F009         	goto	l220
  1573   00124E                     u2620:
  1574   00124E                     
  1575                           ; BSR set to: 0
  1576   00124E  8E7C               	bsf	124,7,c	;volatile
  1577   001250  EF14  F00A         	goto	l3818
  1578   001254                     l220:
  1579                           
  1580                           ; BSR set to: 0
  1581   001254  8680               	bsf	128,3,c	;volatile
  1582   001256  EF14  F00A         	goto	l3818
  1583   00125A                     l3770:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;../main.c: 108:             time = 0;
  1587   00125A  0E00               	movlw	0
  1588   00125C  0102               	movlb	2	; () banked
  1589   00125E  6F51               	movwf	(_time+1)& (0+255),b
  1590   001260  0E00               	movlw	0
  1591   001262  6F50               	movwf	_time& (0+255),b
  1592   001264                     
  1593                           ; BSR set to: 2
  1594                           ;../main.c: 109:             motor_action(0,&motorL,&motorR);
  1595   001264  0E00               	movlw	0
  1596   001266  6E23               	movwf	(motor_action@color+1)^0,c
  1597   001268  0E00               	movlw	0
  1598   00126A  6E22               	movwf	motor_action@color^0,c
  1599   00126C  0ED0               	movlw	low main@motorL
  1600   00126E  6E24               	movwf	motor_action@l^0,c
  1601   001270  0E02               	movlw	high main@motorL
  1602   001272  6E25               	movwf	(motor_action@l+1)^0,c
  1603   001274  0ED9               	movlw	low main@motorR
  1604   001276  6E26               	movwf	motor_action@r^0,c
  1605   001278  0E02               	movlw	high main@motorR
  1606   00127A  6E27               	movwf	(motor_action@r+1)^0,c
  1607   00127C  ECC6  F00A         	call	_motor_action	;wreg free
  1608   001280                     
  1609                           ;../main.c: 110:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1610   001280  0E29               	movlw	41
  1611   001282  0100               	movlb	0	; () banked
  1612   001284  6F7C               	movwf	(??_main+1)& (0+255),b
  1613   001286  0E96               	movlw	150
  1614   001288  6F7B               	movwf	??_main& (0+255),b
  1615   00128A  0E7F               	movlw	127
  1616   00128C                     u2797:
  1617   00128C  2EE8               	decfsz	wreg,f,c
  1618   00128E  D7FE               	bra	u2797
  1619   001290  2F7B               	decfsz	??_main& (0+255),f,b
  1620   001292  D7FC               	bra	u2797
  1621   001294  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1622   001296  D7FA               	bra	u2797
  1623   001298                     
  1624                           ;../main.c: 111:             color_read(&RGB_recorded);
  1625   001298  0EF2               	movlw	low main@RGB_recorded
  1626   00129A  6E0C               	movwf	color_read@rgb^0,c
  1627   00129C  0E01               	movlw	high main@RGB_recorded
  1628   00129E  6E0D               	movwf	(color_read@rgb+1)^0,c
  1629   0012A0  ECF6  F016         	call	_color_read	;wreg free
  1630   0012A4                     
  1631                           ;../main.c: 112:             if (RGB_recorded.L<upperbound_calibrated && RGB_recorded.L>
      +                          lowerbound_calibrated){color_flag=1;}
  1632   0012A4  0100               	movlb	0	; () banked
  1633   0012A6  51E9               	movf	main@upperbound_calibrated& (0+255),w,b
  1634   0012A8  0101               	movlb	1	; () banked
  1635   0012AA  5DF2               	subwf	main@RGB_recorded& (0+255),w,b
  1636   0012AC  0100               	movlb	0	; () banked
  1637   0012AE  51EA               	movf	(main@upperbound_calibrated+1)& (0+255),w,b
  1638   0012B0  0101               	movlb	1	; () banked
  1639   0012B2  59F3               	subwfb	(main@RGB_recorded+1)& (0+255),w,b
  1640   0012B4  B0D8               	btfsc	status,0,c
  1641   0012B6  EF5F  F009         	goto	u2631
  1642   0012BA  EF61  F009         	goto	u2630
  1643   0012BE                     u2631:
  1644   0012BE  EF73  F009         	goto	l3784
  1645   0012C2                     u2630:
  1646   0012C2                     
  1647                           ; BSR set to: 1
  1648   0012C2  51F2               	movf	main@RGB_recorded& (0+255),w,b
  1649   0012C4  0100               	movlb	0	; () banked
  1650   0012C6  5DE7               	subwf	main@lowerbound_calibrated& (0+255),w,b
  1651   0012C8  0101               	movlb	1	; () banked
  1652   0012CA  51F3               	movf	(main@RGB_recorded+1)& (0+255),w,b
  1653   0012CC  0100               	movlb	0	; () banked
  1654   0012CE  59E8               	subwfb	(main@lowerbound_calibrated+1)& (0+255),w,b
  1655   0012D0  B0D8               	btfsc	status,0,c
  1656   0012D2  EF6D  F009         	goto	u2641
  1657   0012D6  EF6F  F009         	goto	u2640
  1658   0012DA                     u2641:
  1659   0012DA  EF73  F009         	goto	l3784
  1660   0012DE                     u2640:
  1661   0012DE                     
  1662                           ; BSR set to: 0
  1663   0012DE  0E00               	movlw	0
  1664   0012E0  6E5A               	movwf	(main@color_flag+1)^0,c
  1665   0012E2  0E01               	movlw	1
  1666   0012E4  6E59               	movwf	main@color_flag^0,c
  1667   0012E6                     l3784:
  1668                           
  1669                           ;../main.c: 113:             if (color_flag){
  1670   0012E6  5059               	movf	main@color_flag^0,w,c
  1671   0012E8  105A               	iorwf	(main@color_flag+1)^0,w,c
  1672   0012EA  B4D8               	btfsc	status,2,c
  1673   0012EC  EF7A  F009         	goto	u2651
  1674   0012F0  EF7C  F009         	goto	u2650
  1675   0012F4                     u2651:
  1676   0012F4  EF08  F00A         	goto	l3816
  1677   0012F8                     u2650:
  1678   0012F8                     
  1679                           ;../main.c: 114:                 LATDbits.LATD7 = 1;
  1680   0012F8  8E7C               	bsf	124,7,c	;volatile
  1681   0012FA                     
  1682                           ;../main.c: 115:                 stop(&motorL,&motorR);
  1683   0012FA  0ED0               	movlw	low main@motorL
  1684   0012FC  6E1A               	movwf	stop@mL^0,c
  1685   0012FE  0E02               	movlw	high main@motorL
  1686   001300  6E1B               	movwf	(stop@mL+1)^0,c
  1687   001302  0ED9               	movlw	low main@motorR
  1688   001304  6E1C               	movwf	stop@mR^0,c
  1689   001306  0E02               	movlw	high main@motorR
  1690   001308  6E1D               	movwf	(stop@mR+1)^0,c
  1691   00130A  ECD2  F019         	call	_stop	;wreg free
  1692   00130E                     
  1693                           ;../main.c: 116:                 color_read(&RGB_recorded);
  1694   00130E  0EF2               	movlw	low main@RGB_recorded
  1695   001310  6E0C               	movwf	color_read@rgb^0,c
  1696   001312  0E01               	movlw	high main@RGB_recorded
  1697   001314  6E0D               	movwf	(color_read@rgb+1)^0,c
  1698   001316  ECF6  F016         	call	_color_read	;wreg free
  1699   00131A                     
  1700                           ;../main.c: 117:                 if (LATDbits.LATD7)
  1701   00131A  AE7C               	btfss	124,7,c	;volatile
  1702   00131C  EF92  F009         	goto	u2661
  1703   001320  EF94  F009         	goto	u2660
  1704   001324                     u2661:
  1705   001324  EFA4  F009         	goto	l3796
  1706   001328                     u2660:
  1707   001328                     
  1708                           ;../main.c: 118:                 {color_name = color_processor_easy(&RGB_recorded,color_
      +                          calibrated);}
  1709   001328  0EF2               	movlw	low main@RGB_recorded
  1710   00132A  6E01               	movwf	color_processor_easy@rgb^0,c
  1711   00132C  0E01               	movlw	high main@RGB_recorded
  1712   00132E  6E02               	movwf	(color_processor_easy@rgb+1)^0,c
  1713   001330  0E90               	movlw	low main@color_calibrated
  1714   001332  6E03               	movwf	color_processor_easy@calibrated^0,c
  1715   001334  0E02               	movlw	high main@color_calibrated
  1716   001336  6E04               	movwf	(color_processor_easy@calibrated+1)^0,c
  1717   001338  EC1A  F015         	call	_color_processor_easy	;wreg free
  1718   00133C  C001  F0F3         	movff	?_color_processor_easy,main@color_name
  1719   001340  C002  F0F4         	movff	?_color_processor_easy+1,main@color_name+1
  1720   001344  EFB2  F009         	goto	l3798
  1721   001348                     l3796:
  1722   001348  0EF2               	movlw	low main@RGB_recorded
  1723   00134A  6E01               	movwf	color_processor_hard@rgb^0,c
  1724   00134C  0E01               	movlw	high main@RGB_recorded
  1725   00134E  6E02               	movwf	(color_processor_hard@rgb+1)^0,c
  1726   001350  0E90               	movlw	low main@color_calibrated
  1727   001352  6E03               	movwf	color_processor_hard@calibrated^0,c
  1728   001354  0E02               	movlw	high main@color_calibrated
  1729   001356  6E04               	movwf	(color_processor_hard@calibrated+1)^0,c
  1730   001358  EC3F  F010         	call	_color_processor_hard	;wreg free
  1731   00135C  C001  F0F3         	movff	?_color_processor_hard,main@color_name
  1732   001360  C002  F0F4         	movff	?_color_processor_hard+1,main@color_name+1
  1733   001364                     l3798:
  1734                           
  1735                           ;../main.c: 120:                 color_path[j] = color_name;
  1736   001364  90D8               	bcf	status,0,c
  1737   001366  0100               	movlb	0	; () banked
  1738   001368  35ED               	rlcf	main@j& (0+255),w,b
  1739   00136A  6ED9               	movwf	fsr2l,c
  1740   00136C  35EE               	rlcf	(main@j+1)& (0+255),w,b
  1741   00136E  6EDA               	movwf	fsr2h,c
  1742   001370  0EC8               	movlw	low main@color_path
  1743   001372  26D9               	addwf	fsr2l,f,c
  1744   001374  0E01               	movlw	high main@color_path
  1745   001376  22DA               	addwfc	fsr2h,f,c
  1746   001378  C0F3  FFDE         	movff	main@color_name,postinc2
  1747   00137C  C0F4  FFDD         	movff	main@color_name+1,postdec2
  1748   001380                     
  1749                           ; BSR set to: 0
  1750                           ;../main.c: 121:                 time_path[j] = time;
  1751   001380  90D8               	bcf	status,0,c
  1752   001382  35ED               	rlcf	main@j& (0+255),w,b
  1753   001384  6ED9               	movwf	fsr2l,c
  1754   001386  35EE               	rlcf	(main@j+1)& (0+255),w,b
  1755   001388  6EDA               	movwf	fsr2h,c
  1756   00138A  0E72               	movlw	low main@time_path
  1757   00138C  26D9               	addwf	fsr2l,f,c
  1758   00138E  0E02               	movlw	high main@time_path
  1759   001390  22DA               	addwfc	fsr2h,f,c
  1760   001392  C250  FFDE         	movff	_time,postinc2
  1761   001396  C251  FFDD         	movff	_time+1,postdec2
  1762   00139A                     
  1763                           ; BSR set to: 0
  1764                           ;../main.c: 124:                 char readout4[100];;../main.c: 125:                 spr
      +                          intf(readout4,"color name %d %d %d %d \r\n", color_name,RGB_recorded.R,RGB_recorded.G,RG
      +                          B_recorded.B);
  1765   00139A  0E64               	movlw	low main@readout4
  1766   00139C  6F60               	movwf	sprintf@s& (0+255),b
  1767   00139E  0E01               	movlw	high main@readout4
  1768   0013A0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1769   0013A2  0E01               	movlw	low STR_3
  1770   0013A4  6F62               	movwf	sprintf@fmt& (0+255),b
  1771   0013A6  0E0E               	movlw	high STR_3
  1772   0013A8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1773   0013AA  C0F3  F064         	movff	main@color_name,?_sprintf+4
  1774   0013AE  C0F4  F065         	movff	main@color_name+1,?_sprintf+5
  1775   0013B2  C1F4  F066         	movff	main@RGB_recorded+2,?_sprintf+6
  1776   0013B6  C1F5  F067         	movff	main@RGB_recorded+3,?_sprintf+7
  1777   0013BA  C1F6  F068         	movff	main@RGB_recorded+4,?_sprintf+8
  1778   0013BE  C1F7  F069         	movff	main@RGB_recorded+5,?_sprintf+9
  1779   0013C2  C1F8  F06A         	movff	main@RGB_recorded+6,?_sprintf+10
  1780   0013C6  C1F9  F06B         	movff	main@RGB_recorded+7,?_sprintf+11
  1781   0013CA  EC83  F01A         	call	_sprintf	;wreg free
  1782   0013CE                     
  1783                           ;../main.c: 126:                 sendStringSerial4(readout4);
  1784   0013CE  0E64               	movlw	low main@readout4
  1785   0013D0  6E02               	movwf	sendStringSerial4@string^0,c
  1786   0013D2  0E01               	movlw	high main@readout4
  1787   0013D4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1788   0013D6  EC14  F01C         	call	_sendStringSerial4	;wreg free
  1789   0013DA                     
  1790                           ;../main.c: 128:                 motor_action(color_name,&motorL,&motorR);
  1791   0013DA  C0F3  F022         	movff	main@color_name,motor_action@color
  1792   0013DE  C0F4  F023         	movff	main@color_name+1,motor_action@color+1
  1793   0013E2  0ED0               	movlw	low main@motorL
  1794   0013E4  6E24               	movwf	motor_action@l^0,c
  1795   0013E6  0E02               	movlw	high main@motorL
  1796   0013E8  6E25               	movwf	(motor_action@l+1)^0,c
  1797   0013EA  0ED9               	movlw	low main@motorR
  1798   0013EC  6E26               	movwf	motor_action@r^0,c
  1799   0013EE  0E02               	movlw	high main@motorR
  1800   0013F0  6E27               	movwf	(motor_action@r+1)^0,c
  1801   0013F2  ECC6  F00A         	call	_motor_action	;wreg free
  1802   0013F6                     
  1803                           ;../main.c: 130:                 j++;
  1804   0013F6  0100               	movlb	0	; () banked
  1805   0013F8  4BED               	infsnz	main@j& (0+255),f,b
  1806   0013FA  2BEE               	incf	(main@j+1)& (0+255),f,b
  1807   0013FC                     
  1808                           ; BSR set to: 0
  1809                           ;../main.c: 131:                 time = 0;
  1810   0013FC  0E00               	movlw	0
  1811   0013FE  0102               	movlb	2	; () banked
  1812   001400  6F51               	movwf	(_time+1)& (0+255),b
  1813   001402  0E00               	movlw	0
  1814   001404  6F50               	movwf	_time& (0+255),b
  1815   001406                     
  1816                           ; BSR set to: 2
  1817                           ;../main.c: 132:                 color_flag = 0;
  1818   001406  0E00               	movlw	0
  1819   001408  6E5A               	movwf	(main@color_flag+1)^0,c
  1820   00140A  0E00               	movlw	0
  1821   00140C  6E59               	movwf	main@color_flag^0,c
  1822   00140E                     
  1823                           ; BSR set to: 2
  1824                           ;../main.c: 133:                 LATDbits.LATD7 = 0;
  1825   00140E  9E7C               	bcf	124,7,c	;volatile
  1826   001410                     l3816:
  1827                           
  1828                           ;../main.c: 135:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1829   001410  0E11               	movlw	17
  1830   001412  0100               	movlb	0	; () banked
  1831   001414  6F7C               	movwf	(??_main+1)& (0+255),b
  1832   001416  0E3C               	movlw	60
  1833   001418  6F7B               	movwf	??_main& (0+255),b
  1834   00141A  0ECB               	movlw	203
  1835   00141C                     u2807:
  1836   00141C  2EE8               	decfsz	wreg,f,c
  1837   00141E  D7FE               	bra	u2807
  1838   001420  2F7B               	decfsz	??_main& (0+255),f,b
  1839   001422  D7FC               	bra	u2807
  1840   001424  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1841   001426  D7FA               	bra	u2807
  1842   001428                     l3818:
  1843                           
  1844                           ;../main.c: 107:         while (color_name != 8){
  1845   001428  0E08               	movlw	8
  1846   00142A  0100               	movlb	0	; () banked
  1847   00142C  19F3               	xorwf	main@color_name& (0+255),w,b
  1848   00142E  11F4               	iorwf	(main@color_name+1)& (0+255),w,b
  1849   001430  A4D8               	btfss	status,2,c
  1850   001432  EF1D  F00A         	goto	u2671
  1851   001436  EF1F  F00A         	goto	u2670
  1852   00143A                     u2671:
  1853   00143A  EF2D  F009         	goto	l3770
  1854   00143E                     u2670:
  1855   00143E                     
  1856                           ; BSR set to: 0
  1857                           ;../main.c: 139:         spin_180(&motorL,&motorR);
  1858   00143E  0ED0               	movlw	low main@motorL
  1859   001440  6E1A               	movwf	spin_180@mL^0,c
  1860   001442  0E02               	movlw	high main@motorL
  1861   001444  6E1B               	movwf	(spin_180@mL+1)^0,c
  1862   001446  0ED9               	movlw	low main@motorR
  1863   001448  6E1C               	movwf	spin_180@mR^0,c
  1864   00144A  0E02               	movlw	high main@motorR
  1865   00144C  6E1D               	movwf	(spin_180@mR+1)^0,c
  1866   00144E  ECED  F017         	call	_spin_180	;wreg free
  1867   001452                     
  1868                           ;../main.c: 140:         for (int m=0;m>12;m++){
  1869   001452  0E00               	movlw	0
  1870   001454  0100               	movlb	0	; () banked
  1871   001456  6FF0               	movwf	(main@m+1)& (0+255),b
  1872   001458  0E00               	movlw	0
  1873   00145A  6FEF               	movwf	main@m& (0+255),b
  1874   00145C                     l3824:
  1875                           
  1876                           ; BSR set to: 0
  1877   00145C  BFF0               	btfsc	(main@m+1)& (0+255),7,b
  1878   00145E  EF3C  F00A         	goto	u2680
  1879   001462  51F0               	movf	(main@m+1)& (0+255),w,b
  1880   001464  E107               	bnz	u2681
  1881   001466  0E0D               	movlw	13
  1882   001468  5DEF               	subwf	main@m& (0+255),w,b
  1883   00146A  B0D8               	btfsc	status,0,c
  1884   00146C  EF3A  F00A         	goto	u2681
  1885   001470  EF3C  F00A         	goto	u2680
  1886   001474                     u2681:
  1887   001474  EF3E  F00A         	goto	l3828
  1888   001478                     u2680:
  1889   001478  EF55  F00A         	goto	l3834
  1890   00147C                     l3828:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;../main.c: 141:             LATHbits.LATH3=!LATHbits.LATH3;
  1894   00147C  A680               	btfss	128,3,c	;volatile
  1895   00147E  EF43  F00A         	goto	u2691
  1896   001482  EF47  F00A         	goto	u2690
  1897   001486                     u2691:
  1898   001486  6B7B               	clrf	??_main& (0+255),b
  1899   001488  2B7B               	incf	??_main& (0+255),f,b
  1900   00148A  EF49  F00A         	goto	u2708
  1901   00148E                     u2690:
  1902   00148E  0100               	movlb	0	; () banked
  1903   001490  6B7B               	clrf	??_main& (0+255),b
  1904   001492                     u2708:
  1905   001492  477B               	rlncf	??_main& (0+255),f,b
  1906   001494  477B               	rlncf	??_main& (0+255),f,b
  1907   001496  477B               	rlncf	??_main& (0+255),f,b
  1908   001498  5080               	movf	128,w,c	;volatile
  1909   00149A  197B               	xorwf	??_main& (0+255),w,b
  1910   00149C  0BF7               	andlw	-9
  1911   00149E  197B               	xorwf	??_main& (0+255),w,b
  1912   0014A0  6E80               	movwf	128,c	;volatile
  1913   0014A2                     
  1914                           ; BSR set to: 0
  1915                           ;../main.c: 142:         }
  1916   0014A2  4BEF               	infsnz	main@m& (0+255),f,b
  1917   0014A4  2BF0               	incf	(main@m+1)& (0+255),f,b
  1918   0014A6  EF2E  F00A         	goto	l3824
  1919   0014AA                     l3834:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;../main.c: 143:         for (int k=15;k>0;k--){
  1923   0014AA  0E00               	movlw	0
  1924   0014AC  6FF2               	movwf	(main@k+1)& (0+255),b
  1925   0014AE  0E0F               	movlw	15
  1926   0014B0  6FF1               	movwf	main@k& (0+255),b
  1927   0014B2                     l3836:
  1928                           
  1929                           ; BSR set to: 0
  1930   0014B2  BFF2               	btfsc	(main@k+1)& (0+255),7,b
  1931   0014B4  EF66  F00A         	goto	u2710
  1932   0014B8  51F2               	movf	(main@k+1)& (0+255),w,b
  1933   0014BA  E106               	bnz	u2711
  1934   0014BC  05F1               	decf	main@k& (0+255),w,b
  1935   0014BE  B0D8               	btfsc	status,0,c
  1936   0014C0  EF64  F00A         	goto	u2711
  1937   0014C4  EF66  F00A         	goto	u2710
  1938   0014C8                     u2711:
  1939   0014C8  EF68  F00A         	goto	l231
  1940   0014CC                     u2710:
  1941   0014CC  EF69  F007         	goto	l210
  1942   0014D0                     l231:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;../main.c: 144:             INTCONbits.GIE = 0;
  1946   0014D0  9EF2               	bcf	242,7,c	;volatile
  1947   0014D2                     
  1948                           ; BSR set to: 0
  1949                           ;../main.c: 145:             time_return = 0;
  1950   0014D2  0E00               	movlw	0
  1951   0014D4  6FEC               	movwf	(main@time_return+1)& (0+255),b
  1952   0014D6  0E00               	movlw	0
  1953   0014D8  6FEB               	movwf	main@time_return& (0+255),b
  1954   0014DA                     
  1955                           ; BSR set to: 0
  1956                           ;../main.c: 146:             motor_action(color_path[k],&motorL,&motorR);
  1957   0014DA  90D8               	bcf	status,0,c
  1958   0014DC  35F1               	rlcf	main@k& (0+255),w,b
  1959   0014DE  6ED9               	movwf	fsr2l,c
  1960   0014E0  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1961   0014E2  6EDA               	movwf	fsr2h,c
  1962   0014E4  0EC8               	movlw	low main@color_path
  1963   0014E6  26D9               	addwf	fsr2l,f,c
  1964   0014E8  0E01               	movlw	high main@color_path
  1965   0014EA  22DA               	addwfc	fsr2h,f,c
  1966   0014EC  CFDE F022          	movff	postinc2,motor_action@color
  1967   0014F0  CFDD F023          	movff	postdec2,motor_action@color+1
  1968   0014F4  0ED0               	movlw	low main@motorL
  1969   0014F6  6E24               	movwf	motor_action@l^0,c
  1970   0014F8  0E02               	movlw	high main@motorL
  1971   0014FA  6E25               	movwf	(motor_action@l+1)^0,c
  1972   0014FC  0ED9               	movlw	low main@motorR
  1973   0014FE  6E26               	movwf	motor_action@r^0,c
  1974   001500  0E02               	movlw	high main@motorR
  1975   001502  6E27               	movwf	(motor_action@r+1)^0,c
  1976   001504  ECC6  F00A         	call	_motor_action	;wreg free
  1977   001508                     
  1978                           ;../main.c: 147:             forward(&motorL,&motorR);
  1979   001508  0ED0               	movlw	low main@motorL
  1980   00150A  6E1A               	movwf	forward@mL^0,c
  1981   00150C  0E02               	movlw	high main@motorL
  1982   00150E  6E1B               	movwf	(forward@mL+1)^0,c
  1983   001510  0ED9               	movlw	low main@motorR
  1984   001512  6E1C               	movwf	forward@mR^0,c
  1985   001514  0E02               	movlw	high main@motorR
  1986   001516  6E1D               	movwf	(forward@mR+1)^0,c
  1987   001518  EC31  F019         	call	_forward	;wreg free
  1988                           
  1989                           ;../main.c: 148:             while (time_return < time_path[k]) {
  1990   00151C  EF9F  F00A         	goto	l3850
  1991   001520                     l3846:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;../main.c: 149:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1995   001520  0E05               	movlw	5
  1996   001522  0100               	movlb	0	; () banked
  1997   001524  6F7C               	movwf	(??_main+1)& (0+255),b
  1998   001526  0E0F               	movlw	15
  1999   001528  6F7B               	movwf	??_main& (0+255),b
  2000   00152A  0EF1               	movlw	241
  2001   00152C                     u2817:
  2002   00152C  2EE8               	decfsz	wreg,f,c
  2003   00152E  D7FE               	bra	u2817
  2004   001530  2F7B               	decfsz	??_main& (0+255),f,b
  2005   001532  D7FC               	bra	u2817
  2006   001534  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  2007   001536  D7FA               	bra	u2817
  2008   001538                     
  2009                           ;../main.c: 150:                 time_return++;
  2010   001538  0100               	movlb	0	; () banked
  2011   00153A  4BEB               	infsnz	main@time_return& (0+255),f,b
  2012   00153C  2BEC               	incf	(main@time_return+1)& (0+255),f,b
  2013   00153E                     l3850:
  2014                           
  2015                           ;../main.c: 148:             while (time_return < time_path[k]) {
  2016   00153E  90D8               	bcf	status,0,c
  2017   001540  0100               	movlb	0	; () banked
  2018   001542  35F1               	rlcf	main@k& (0+255),w,b
  2019   001544  6ED9               	movwf	fsr2l,c
  2020   001546  35F2               	rlcf	(main@k+1)& (0+255),w,b
  2021   001548  6EDA               	movwf	fsr2h,c
  2022   00154A  0E72               	movlw	low main@time_path
  2023   00154C  26D9               	addwf	fsr2l,f,c
  2024   00154E  0E02               	movlw	high main@time_path
  2025   001550  22DA               	addwfc	fsr2h,f,c
  2026   001552  50DE               	movf	postinc2,w,c
  2027   001554  5DEB               	subwf	main@time_return& (0+255),w,b
  2028   001556  50DE               	movf	postinc2,w,c
  2029   001558  59EC               	subwfb	(main@time_return+1)& (0+255),w,b
  2030   00155A  A0D8               	btfss	status,0,c
  2031   00155C  EFB2  F00A         	goto	u2721
  2032   001560  EFB4  F00A         	goto	u2720
  2033   001564                     u2721:
  2034   001564  EF90  F00A         	goto	l3846
  2035   001568                     u2720:
  2036   001568                     
  2037                           ; BSR set to: 0
  2038                           ;../main.c: 152:             stop(&motorL,&motorR);
  2039   001568  0ED0               	movlw	low main@motorL
  2040   00156A  6E1A               	movwf	stop@mL^0,c
  2041   00156C  0E02               	movlw	high main@motorL
  2042   00156E  6E1B               	movwf	(stop@mL+1)^0,c
  2043   001570  0ED9               	movlw	low main@motorR
  2044   001572  6E1C               	movwf	stop@mR^0,c
  2045   001574  0E02               	movlw	high main@motorR
  2046   001576  6E1D               	movwf	(stop@mR+1)^0,c
  2047   001578  ECD2  F019         	call	_stop	;wreg free
  2048   00157C                     
  2049                           ;../main.c: 153:         }
  2050   00157C  0100               	movlb	0	; () banked
  2051   00157E  07F1               	decf	main@k& (0+255),f,b
  2052   001580  A0D8               	btfss	status,0,c
  2053   001582  07F2               	decf	(main@k+1)& (0+255),f,b
  2054   001584  EF59  F00A         	goto	l3836
  2055   001588  EF1F  F000         	goto	start
  2056   00158C                     __end_of_main:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _sprintf *****************
  2060 ;; Defined at:
  2061 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2064 ;;		 -> main@readout4(100), main@readout3(100), main@readout2(100), 
  2065 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2066 ;;		 -> STR_3(26), STR_2(18), STR_1(15), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  f              11   16[BANK0 ] struct _IO_FILE
  2069 ;;  ap              2   14[BANK0 ] PTR void [1]
  2070 ;;		 -> ?_sprintf(2), 
  2071 ;;  ret             2    0        int 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  2    0[BANK0 ] int 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2081 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;Total ram usage:       27 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 8
  2088 ;; This function calls:
  2089 ;;		_vfprintf
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text1
  2096   003506                     __ptext1:
  2097                           	callstack 0
  2098   003506                     _sprintf:
  2099                           	callstack 22
  2100   003506  0E64               	movlw	low (?_sprintf+4)
  2101   003508  0100               	movlb	0	; () banked
  2102   00350A  6F6E               	movwf	sprintf@ap& (0+255),b
  2103   00350C  0E00               	movlw	high (?_sprintf+4)
  2104   00350E  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  2105   003510  C060  F070         	movff	sprintf@s,sprintf@f
  2106   003514  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  2107   003518                     
  2108                           ; BSR set to: 0
  2109   003518  0E00               	movlw	0
  2110   00351A  6F74               	movwf	(sprintf@f+4)& (0+255),b
  2111   00351C  0E00               	movlw	0
  2112   00351E  6F73               	movwf	(sprintf@f+3)& (0+255),b
  2113   003520                     
  2114                           ; BSR set to: 0
  2115   003520  0E00               	movlw	0
  2116   003522  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  2117   003524  0E00               	movlw	0
  2118   003526  6F79               	movwf	(sprintf@f+9)& (0+255),b
  2119   003528                     
  2120                           ; BSR set to: 0
  2121   003528  0E70               	movlw	low sprintf@f
  2122   00352A  6E51               	movwf	vfprintf@fp^0,c
  2123   00352C  0E00               	movlw	high sprintf@f
  2124   00352E  6E52               	movwf	(vfprintf@fp+1)^0,c
  2125   003530  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2126   003534  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2127   003538  0E6E               	movlw	low sprintf@ap
  2128   00353A  6E55               	movwf	vfprintf@ap^0,c
  2129   00353C  0E00               	movlw	high sprintf@ap
  2130   00353E  6E56               	movwf	(vfprintf@ap+1)^0,c
  2131   003540  ECAC  F01A         	call	_vfprintf	;wreg free
  2132   003544  0100               	movlb	0	; () banked
  2133   003546  5173               	movf	(sprintf@f+3)& (0+255),w,b
  2134   003548  2560               	addwf	sprintf@s& (0+255),w,b
  2135   00354A  6ED9               	movwf	fsr2l,c
  2136   00354C  5174               	movf	(sprintf@f+4)& (0+255),w,b
  2137   00354E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2138   003550  6EDA               	movwf	fsr2h,c
  2139   003552  0E00               	movlw	0
  2140   003554  6EDF               	movwf	indf2,c
  2141   003556                     
  2142                           ; BSR set to: 0
  2143   003556  0012               	return		;funcret
  2144   003558                     __end_of_sprintf:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _vfprintf *****************
  2148 ;; Defined at:
  2149 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2152 ;;		 -> sprintf@f(11), 
  2153 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2154 ;;		 -> STR_3(26), STR_2(18), STR_1(15), 
  2155 ;;  ap              2   84[COMRAM] PTR PTR void 
  2156 ;;		 -> sprintf@ap(2), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2159 ;;		 -> STR_3(26), STR_2(18), STR_1(15), 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  2   80[COMRAM] int 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;Total ram usage:        8 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 7
  2176 ;; This function calls:
  2177 ;;		_vfpfcnvrt
  2178 ;; This function is called by:
  2179 ;;		_sprintf
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text2
  2184   003558                     __ptext2:
  2185                           	callstack 0
  2186   003558                     _vfprintf:
  2187                           	callstack 22
  2188   003558                     
  2189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2190   003558  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2191   00355C  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2194   003560  EFC0  F01A         	goto	l3130
  2195   003564                     l3128:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2198   003564  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2199   003568  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2200   00356C  0E57               	movlw	low vfprintf@cfmt
  2201   00356E  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2202   003570  0E00               	movlw	high vfprintf@cfmt
  2203   003572  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2204   003574  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2205   003578  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2206   00357C  EC6B  F014         	call	_vfpfcnvrt	;wreg free
  2207   003580                     l3130:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2210   003580  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2211   003584  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2212   003588                     	if	0	;tblptru may be non-zero
  2213   003588                     	endif
  2214   003588                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2215   003588  0E00               	movlw	low (__mediumconst shr (0+16))
  2216   00358A  6EF8               	movwf	tblptru,c
  2217   00358C                     	endif
  2218   00358C  0008               	tblrd		*
  2219   00358E  50F5               	movf	tablat,w,c
  2220   003590  0900               	iorlw	0
  2221   003592  A4D8               	btfss	status,2,c
  2222   003594  EFCE  F01A         	goto	u1961
  2223   003598  EFD0  F01A         	goto	u1960
  2224   00359C                     u1961:
  2225   00359C  EFB2  F01A         	goto	l3128
  2226   0035A0                     u1960:
  2227   0035A0                     
  2228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2229   0035A0  0E00               	movlw	0
  2230   0035A2  6E52               	movwf	(?_vfprintf+1)^0,c
  2231   0035A4  0E00               	movlw	0
  2232   0035A6  6E51               	movwf	?_vfprintf^0,c
  2233   0035A8  0012               	return		;funcret
  2234   0035AA                     __end_of_vfprintf:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _vfpfcnvrt *****************
  2238 ;; Defined at:
  2239 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2242 ;;		 -> sprintf@f(11), 
  2243 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2244 ;;		 -> vfprintf@cfmt(2), 
  2245 ;;  ap              2   66[COMRAM] PTR PTR void 
  2246 ;;		 -> sprintf@ap(2), 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  convarg         8   70[COMRAM] struct .
  2249 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2250 ;;		 -> STR_3(26), STR_2(18), STR_1(15), 
  2251 ;;  i               2    0        int 
  2252 ;;  done            2    0        int 
  2253 ;;  c               1    0        unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2263 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2266 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2267 ;;Total ram usage:       18 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 6
  2270 ;; This function calls:
  2271 ;;		_dtoa
  2272 ;;		_fputc
  2273 ;; This function is called by:
  2274 ;;		_vfprintf
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text3
  2279   0028D6                     __ptext3:
  2280                           	callstack 0
  2281   0028D6                     _vfpfcnvrt:
  2282                           	callstack 22
  2283   0028D6                     
  2284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2285   0028D6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2286   0028DA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2287   0028DE  CFDE FFF6          	movff	postinc2,tblptrl
  2288   0028E2  CFDD FFF7          	movff	postdec2,tblptrh
  2289   0028E6                     	if	0	;tblptru may be non-zero
  2290   0028E6                     	endif
  2291   0028E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2292   0028E6  0E00               	movlw	low (__mediumconst shr (0+16))
  2293   0028E8  6EF8               	movwf	tblptru,c
  2294   0028EA                     	endif
  2295   0028EA  0008               	tblrd		*
  2296   0028EC  50F5               	movf	tablat,w,c
  2297   0028EE  0A25               	xorlw	37
  2298   0028F0  A4D8               	btfss	status,2,c
  2299   0028F2  EF7D  F014         	goto	u1841
  2300   0028F6  EF7F  F014         	goto	u1840
  2301   0028FA                     u1841:
  2302   0028FA  EF03  F015         	goto	l2896
  2303   0028FE                     u1840:
  2304   0028FE                     
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2306   0028FE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307   002902  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308   002906  2ADE               	incf	postinc2,f,c
  2309   002908  0E00               	movlw	0
  2310   00290A  22DD               	addwfc	postdec2,f,c
  2311   00290C                     
  2312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2313   00290C  0E00               	movlw	0
  2314   00290E  0100               	movlb	0	; () banked
  2315   002910  6FF6               	movwf	(_width+1)& (0+255),b
  2316   002912  0E00               	movlw	0
  2317   002914  6FF5               	movwf	_width& (0+255),b
  2318   002916  C0F5  F0FD         	movff	_width,_flags
  2319   00291A                     
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2322   00291A  69F7               	setf	_prec& (0+255),b
  2323   00291C  69F8               	setf	(_prec+1)& (0+255),b
  2324   00291E                     
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2327   00291E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2328   002922  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2329   002926  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2330   00292A  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2331   00292E                     
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2334   00292E  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2335   002932  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2336   002936                     	if	0	;tblptru may be non-zero
  2337   002936                     	endif
  2338   002936                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2339   002936  0E00               	movlw	low (__mediumconst shr (0+16))
  2340   002938  6EF8               	movwf	tblptru,c
  2341   00293A                     	endif
  2342   00293A  0008               	tblrd		*
  2343   00293C  50F5               	movf	tablat,w,c
  2344   00293E  0A64               	xorlw	100
  2345   002940  B4D8               	btfsc	status,2,c
  2346   002942  EFA5  F014         	goto	u1851
  2347   002946  EFA7  F014         	goto	u1850
  2348   00294A                     u1851:
  2349   00294A  EFB7  F014         	goto	l2886
  2350   00294E                     u1850:
  2351   00294E                     
  2352                           ; BSR set to: 0
  2353   00294E  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2354   002952  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2355   002956                     	if	0	;tblptru may be non-zero
  2356   002956                     	endif
  2357   002956                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2358   002956  0E00               	movlw	low (__mediumconst shr (0+16))
  2359   002958  6EF8               	movwf	tblptru,c
  2360   00295A                     	endif
  2361   00295A  0008               	tblrd		*
  2362   00295C  50F5               	movf	tablat,w,c
  2363   00295E  0A69               	xorlw	105
  2364   002960  A4D8               	btfss	status,2,c
  2365   002962  EFB5  F014         	goto	u1861
  2366   002966  EFB7  F014         	goto	u1860
  2367   00296A                     u1861:
  2368   00296A  EFFA  F014         	goto	l2892
  2369   00296E                     u1860:
  2370   00296E                     l2886:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2374   00296E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2375   002972  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2376   002976  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2377   00297A  0E02               	movlw	2
  2378   00297C  26DE               	addwf	postinc2,f,c
  2379   00297E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2380   002982  0E00               	movlw	0
  2381   002984  22DD               	addwfc	postdec2,f,c
  2382   002986  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2383   00298A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2384   00298E  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2385   002992  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2386   002996  0E00               	movlw	0
  2387   002998  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2388   00299A  0EFF               	movlw	-1
  2389   00299C  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2390   00299E  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2391   0029A0  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2392   0029A2  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2393   0029A4  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2394   0029A6  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2397   0029A8  0E01               	movlw	1
  2398   0029AA  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2399   0029AC  6E45               	movwf	??_vfpfcnvrt^0,c
  2400   0029AE  0E00               	movlw	0
  2401   0029B0  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2402   0029B2  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2403   0029B4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2404   0029B8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2405   0029BC  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2406   0029C0  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2407   0029C4                     
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2410   0029C4  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2411   0029C8  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2412   0029CC  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2413   0029D0  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2414   0029D4  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2415   0029D8  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2416   0029DC  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2417   0029E0  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2418   0029E4  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2419   0029E8  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2420   0029EC  EC00  F00F         	call	_dtoa	;wreg free
  2421   0029F0  EF19  F015         	goto	l1200
  2422   0029F4                     l2892:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2425   0029F4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2426   0029F8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2427   0029FC  2ADE               	incf	postinc2,f,c
  2428   0029FE  0E00               	movlw	0
  2429   002A00  22DD               	addwfc	postdec2,f,c
  2430   002A02  EF19  F015         	goto	l1200
  2431   002A06                     l2896:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2434   002A06  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435   002A0A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436   002A0E  CFDE FFF6          	movff	postinc2,tblptrl
  2437   002A12  CFDD FFF7          	movff	postdec2,tblptrh
  2438   002A16                     	if	0	;tblptru may be non-zero
  2439   002A16                     	endif
  2440   002A16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2441   002A16  0E00               	movlw	low (__mediumconst shr (0+16))
  2442   002A18  6EF8               	movwf	tblptru,c
  2443   002A1A                     	endif
  2444   002A1A  0008               	tblrd		*
  2445   002A1C  50F5               	movf	tablat,w,c
  2446   002A1E  6E01               	movwf	fputc@c^0,c
  2447   002A20  6A02               	clrf	(fputc@c+1)^0,c
  2448   002A22  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2449   002A26  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2450   002A2A  EC2F  F016         	call	_fputc	;wreg free
  2451   002A2E  EFFA  F014         	goto	l2892
  2452   002A32                     l1200:
  2453   002A32  0012               	return		;funcret
  2454   002A34                     __end_of_vfpfcnvrt:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _dtoa *****************
  2458 ;; Defined at:
  2459 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2462 ;;		 -> sprintf@f(11), 
  2463 ;;  d               8   29[COMRAM] long long 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  n               8   51[COMRAM] long long 
  2466 ;;  i               2   59[COMRAM] int 
  2467 ;;  w               2   49[COMRAM] int 
  2468 ;;  p               2   47[COMRAM] int 
  2469 ;;  s               1   61[COMRAM] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2479 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;Total ram usage:       35 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 5
  2486 ;; This function calls:
  2487 ;;		___aodiv
  2488 ;;		___aomod
  2489 ;;		_abs
  2490 ;;		_pad
  2491 ;; This function is called by:
  2492 ;;		_vfpfcnvrt
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text4
  2497   001E00                     __ptext4:
  2498                           	callstack 0
  2499   001E00                     _dtoa:
  2500                           	callstack 22
  2501   001E00                     
  2502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2503   001E00  C01E  F034         	movff	dtoa@d,dtoa@n
  2504   001E04  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2505   001E08  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2506   001E0C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2507   001E10  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2508   001E14  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2509   001E18  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2510   001E1C  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2511   001E20                     
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2513   001E20  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2514   001E22  EF15  F00F         	goto	u1681
  2515   001E26  EF18  F00F         	goto	u1680
  2516   001E2A                     u1681:
  2517   001E2A  0E01               	movlw	1
  2518   001E2C  EF19  F00F         	goto	u1690
  2519   001E30                     u1680:
  2520   001E30  0E00               	movlw	0
  2521   001E32                     u1690:
  2522   001E32  6E3E               	movwf	dtoa@s^0,c
  2523   001E34                     
  2524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2525   001E34  503E               	movf	dtoa@s^0,w,c
  2526   001E36  B4D8               	btfsc	status,2,c
  2527   001E38  EF20  F00F         	goto	u1701
  2528   001E3C  EF22  F00F         	goto	u1700
  2529   001E40                     u1701:
  2530   001E40  EF32  F00F         	goto	l2784
  2531   001E44                     u1700:
  2532   001E44                     
  2533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2534   001E44  1E3B               	comf	(dtoa@n+7)^0,f,c
  2535   001E46  1E3A               	comf	(dtoa@n+6)^0,f,c
  2536   001E48  1E39               	comf	(dtoa@n+5)^0,f,c
  2537   001E4A  1E38               	comf	(dtoa@n+4)^0,f,c
  2538   001E4C  1E37               	comf	(dtoa@n+3)^0,f,c
  2539   001E4E  1E36               	comf	(dtoa@n+2)^0,f,c
  2540   001E50  1E35               	comf	(dtoa@n+1)^0,f,c
  2541   001E52  6C34               	negf	dtoa@n^0,c
  2542   001E54  0E00               	movlw	0
  2543   001E56  2235               	addwfc	(dtoa@n+1)^0,f,c
  2544   001E58  2236               	addwfc	(dtoa@n+2)^0,f,c
  2545   001E5A  2237               	addwfc	(dtoa@n+3)^0,f,c
  2546   001E5C  2238               	addwfc	(dtoa@n+4)^0,f,c
  2547   001E5E  2239               	addwfc	(dtoa@n+5)^0,f,c
  2548   001E60  223A               	addwfc	(dtoa@n+6)^0,f,c
  2549   001E62  223B               	addwfc	(dtoa@n+7)^0,f,c
  2550   001E64                     l2784:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2553   001E64  0100               	movlb	0	; () banked
  2554   001E66  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2555   001E68  EF40  F00F         	goto	u1710
  2556   001E6C  51F8               	movf	(_prec+1)& (0+255),w,b
  2557   001E6E  E106               	bnz	u1711
  2558   001E70  05F7               	decf	_prec& (0+255),w,b
  2559   001E72  B0D8               	btfsc	status,0,c
  2560   001E74  EF3E  F00F         	goto	u1711
  2561   001E78  EF40  F00F         	goto	u1710
  2562   001E7C                     u1711:
  2563   001E7C  EF46  F00F         	goto	l1179
  2564   001E80                     u1710:
  2565   001E80                     
  2566                           ; BSR set to: 0
  2567   001E80  0E00               	movlw	0
  2568   001E82  6E31               	movwf	(dtoa@p+1)^0,c
  2569   001E84  0E01               	movlw	1
  2570   001E86  6E30               	movwf	dtoa@p^0,c
  2571   001E88  EF4A  F00F         	goto	l1181
  2572   001E8C                     l1179:
  2573                           
  2574                           ; BSR set to: 0
  2575   001E8C  C0F7  F030         	movff	_prec,dtoa@p
  2576   001E90  C0F8  F031         	movff	_prec+1,dtoa@p+1
  2577   001E94                     l1181:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2581   001E94  C0F5  F032         	movff	_width,dtoa@w
  2582   001E98  C0F6  F033         	movff	_width+1,dtoa@w+1
  2583   001E9C                     
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2586   001E9C  503E               	movf	dtoa@s^0,w,c
  2587   001E9E  B4D8               	btfsc	status,2,c
  2588   001EA0  EF54  F00F         	goto	u1721
  2589   001EA4  EF56  F00F         	goto	u1720
  2590   001EA8                     u1721:
  2591   001EA8  EF6D  F00F         	goto	l1182
  2592   001EAC                     u1720:
  2593   001EAC                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2596   001EAC  0632               	decf	dtoa@w^0,f,c
  2597   001EAE  A0D8               	btfss	status,0,c
  2598   001EB0  0633               	decf	(dtoa@w+1)^0,f,c
  2599   001EB2                     
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2602   001EB2  503E               	movf	dtoa@s^0,w,c
  2603   001EB4  A4D8               	btfss	status,2,c
  2604   001EB6  EF5F  F00F         	goto	u1731
  2605   001EBA  EF61  F00F         	goto	u1730
  2606   001EBE                     u1731:
  2607   001EBE  EF67  F00F         	goto	l2796
  2608   001EC2                     u1730:
  2609   001EC2                     
  2610                           ; BSR set to: 0
  2611   001EC2  0E00               	movlw	0
  2612   001EC4  6E2F               	movwf	(_dtoa$2448+1)^0,c
  2613   001EC6  0E2B               	movlw	43
  2614   001EC8  6E2E               	movwf	_dtoa$2448^0,c
  2615   001ECA  EF6B  F00F         	goto	l2798
  2616   001ECE                     l2796:
  2617                           
  2618                           ; BSR set to: 0
  2619   001ECE  0E00               	movlw	0
  2620   001ED0  6E2F               	movwf	(_dtoa$2448+1)^0,c
  2621   001ED2  0E2D               	movlw	45
  2622   001ED4  6E2E               	movwf	_dtoa$2448^0,c
  2623   001ED6                     l2798:
  2624                           
  2625                           ; BSR set to: 0
  2626   001ED6  C02E  F03E         	movff	_dtoa$2448,dtoa@s
  2627   001EDA                     l1182:
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2631   001EDA  0E00               	movlw	0
  2632   001EDC  6E3D               	movwf	(dtoa@i+1)^0,c
  2633   001EDE  0E1F               	movlw	31
  2634   001EE0  6E3C               	movwf	dtoa@i^0,c
  2635   001EE2                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2638   001EE2  0E00               	movlw	0
  2639   001EE4  0102               	movlb	2	; () banked
  2640   001EE6  6F71               	movwf	(_dbuf+31)& (0+255),b
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2643   001EE8  EFF2  F00F         	goto	l2812
  2644   001EEC                     l2802:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2647   001EEC  063C               	decf	dtoa@i^0,f,c
  2648   001EEE  A0D8               	btfss	status,0,c
  2649   001EF0  063D               	decf	(dtoa@i+1)^0,f,c
  2650   001EF2                     
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2652   001EF2  0E52               	movlw	low _dbuf
  2653   001EF4  243C               	addwf	dtoa@i^0,w,c
  2654   001EF6  6ED9               	movwf	fsr2l,c
  2655   001EF8  0E02               	movlw	high _dbuf
  2656   001EFA  203D               	addwfc	(dtoa@i+1)^0,w,c
  2657   001EFC  6EDA               	movwf	fsr2h,c
  2658   001EFE  C034  F001         	movff	dtoa@n,___aomod@dividend
  2659   001F02  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2660   001F06  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2661   001F0A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2662   001F0E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2663   001F12  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2664   001F16  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2665   001F1A  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2666   001F1E  0E0A               	movlw	10
  2667   001F20  6E09               	movwf	___aomod@divisor^0,c
  2668   001F22  0E00               	movlw	0
  2669   001F24  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2670   001F26  0E00               	movlw	0
  2671   001F28  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2672   001F2A  0E00               	movlw	0
  2673   001F2C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2674   001F2E  0E00               	movlw	0
  2675   001F30  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2676   001F32  0E00               	movlw	0
  2677   001F34  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2678   001F36  0E00               	movlw	0
  2679   001F38  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2680   001F3A  0E00               	movlw	0
  2681   001F3C  6E10               	movwf	(___aomod@divisor+7)^0,c
  2682   001F3E  ECB9  F013         	call	___aomod	;wreg free
  2683   001F42  C001  F026         	movff	?___aomod,??_dtoa
  2684   001F46  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2685   001F4A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2686   001F4E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2687   001F52  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2688   001F56  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2689   001F5A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2690   001F5E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2691   001F62  C026  F013         	movff	??_dtoa,abs@a
  2692   001F66  C027  F014         	movff	??_dtoa+1,abs@a+1
  2693   001F6A  ECD9  F01B         	call	_abs	;wreg free
  2694   001F6E  5013               	movf	?_abs^0,w,c
  2695   001F70  0F30               	addlw	48
  2696   001F72  6EDF               	movwf	indf2,c
  2697   001F74                     
  2698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2699   001F74  0630               	decf	dtoa@p^0,f,c
  2700   001F76  A0D8               	btfss	status,0,c
  2701   001F78  0631               	decf	(dtoa@p+1)^0,f,c
  2702   001F7A                     
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2704   001F7A  0632               	decf	dtoa@w^0,f,c
  2705   001F7C  A0D8               	btfss	status,0,c
  2706   001F7E  0633               	decf	(dtoa@w+1)^0,f,c
  2707   001F80                     
  2708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2709   001F80  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2710   001F84  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2711   001F88  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2712   001F8C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2713   001F90  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2714   001F94  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2715   001F98  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2716   001F9C  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2717   001FA0  0E0A               	movlw	10
  2718   001FA2  6E09               	movwf	___aodiv@divisor^0,c
  2719   001FA4  0E00               	movlw	0
  2720   001FA6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2721   001FA8  0E00               	movlw	0
  2722   001FAA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2723   001FAC  0E00               	movlw	0
  2724   001FAE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2725   001FB0  0E00               	movlw	0
  2726   001FB2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2727   001FB4  0E00               	movlw	0
  2728   001FB6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2729   001FB8  0E00               	movlw	0
  2730   001FBA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2731   001FBC  0E00               	movlw	0
  2732   001FBE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2733   001FC0  ECF5  F012         	call	___aodiv	;wreg free
  2734   001FC4  C001  F034         	movff	?___aodiv,dtoa@n
  2735   001FC8  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2736   001FCC  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2737   001FD0  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2738   001FD4  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2739   001FD8  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2740   001FDC  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2741   001FE0  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2742   001FE4                     l2812:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2745   001FE4  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2746   001FE6  EFFD  F00F         	goto	u1741
  2747   001FEA  503D               	movf	(dtoa@i+1)^0,w,c
  2748   001FEC  E108               	bnz	u1740
  2749   001FEE  043C               	decf	dtoa@i^0,w,c
  2750   001FF0  A0D8               	btfss	status,0,c
  2751   001FF2  EFFD  F00F         	goto	u1741
  2752   001FF6  EFFF  F00F         	goto	u1740
  2753   001FFA                     u1741:
  2754   001FFA  EF1B  F010         	goto	l2818
  2755   001FFE                     u1740:
  2756   001FFE  5034               	movf	dtoa@n^0,w,c
  2757   002000  1035               	iorwf	(dtoa@n+1)^0,w,c
  2758   002002  1036               	iorwf	(dtoa@n+2)^0,w,c
  2759   002004  1037               	iorwf	(dtoa@n+3)^0,w,c
  2760   002006  1038               	iorwf	(dtoa@n+4)^0,w,c
  2761   002008  1039               	iorwf	(dtoa@n+5)^0,w,c
  2762   00200A  103A               	iorwf	(dtoa@n+6)^0,w,c
  2763   00200C  103B               	iorwf	(dtoa@n+7)^0,w,c
  2764   00200E  A4D8               	btfss	status,2,c
  2765   002010  EF0C  F010         	goto	u1751
  2766   002014  EF0E  F010         	goto	u1750
  2767   002018                     u1751:
  2768   002018  EF76  F00F         	goto	l2802
  2769   00201C                     u1750:
  2770   00201C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2771   00201E  EF1B  F010         	goto	u1760
  2772   002022  5031               	movf	(dtoa@p+1)^0,w,c
  2773   002024  E106               	bnz	u1761
  2774   002026  0430               	decf	dtoa@p^0,w,c
  2775   002028  B0D8               	btfsc	status,0,c
  2776   00202A  EF19  F010         	goto	u1761
  2777   00202E  EF1B  F010         	goto	u1760
  2778   002032                     u1761:
  2779   002032  EF76  F00F         	goto	l2802
  2780   002036                     u1760:
  2781   002036                     l2818:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2784   002036  503E               	movf	dtoa@s^0,w,c
  2785   002038  B4D8               	btfsc	status,2,c
  2786   00203A  EF21  F010         	goto	u1771
  2787   00203E  EF23  F010         	goto	u1770
  2788   002042                     u1771:
  2789   002042  EF2E  F010         	goto	l2824
  2790   002046                     u1770:
  2791   002046                     
  2792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2793   002046  063C               	decf	dtoa@i^0,f,c
  2794   002048  A0D8               	btfss	status,0,c
  2795   00204A  063D               	decf	(dtoa@i+1)^0,f,c
  2796   00204C                     
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2798   00204C  0E52               	movlw	low _dbuf
  2799   00204E  243C               	addwf	dtoa@i^0,w,c
  2800   002050  6ED9               	movwf	fsr2l,c
  2801   002052  0E02               	movlw	high _dbuf
  2802   002054  203D               	addwfc	(dtoa@i+1)^0,w,c
  2803   002056  6EDA               	movwf	fsr2h,c
  2804   002058  C03E  FFDF         	movff	dtoa@s,indf2
  2805   00205C                     l2824:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2808   00205C  C01C  F011         	movff	dtoa@fp,pad@fp
  2809   002060  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2810   002064  0E52               	movlw	low _dbuf
  2811   002066  243C               	addwf	dtoa@i^0,w,c
  2812   002068  6E13               	movwf	pad@buf^0,c
  2813   00206A  0E02               	movlw	high _dbuf
  2814   00206C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2815   00206E  6E14               	movwf	(pad@buf+1)^0,c
  2816   002070  C032  F015         	movff	dtoa@w,pad@p
  2817   002074  C033  F016         	movff	dtoa@w+1,pad@p+1
  2818   002078  EC19  F01A         	call	_pad	;wreg free
  2819   00207C  0012               	return		;funcret
  2820   00207E                     __end_of_dtoa:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function _pad *****************
  2824 ;; Defined at:
  2825 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2828 ;;		 -> sprintf@f(11), 
  2829 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2830 ;;		 -> dbuf(32), 
  2831 ;;  p               2   20[COMRAM] int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  w               2   25[COMRAM] int 
  2834 ;;  i               2   23[COMRAM] int 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2844 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2847 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;Total ram usage:       11 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 4
  2851 ;; This function calls:
  2852 ;;		_fputc
  2853 ;;		_fputs
  2854 ;; This function is called by:
  2855 ;;		_dtoa
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text5
  2860   003432                     __ptext5:
  2861                           	callstack 0
  2862   003432                     _pad:
  2863                           	callstack 22
  2864   003432                     
  2865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2866   003432  BE16               	btfsc	(pad@p+1)^0,7,c
  2867   003434  EF1E  F01A         	goto	u1571
  2868   003438  EF20  F01A         	goto	u1570
  2869   00343C                     u1571:
  2870   00343C  EF26  F01A         	goto	l2708
  2871   003440                     u1570:
  2872   003440  C015  F01A         	movff	pad@p,pad@w
  2873   003444  C016  F01B         	movff	pad@p+1,pad@w+1
  2874   003448  EF2A  F01A         	goto	l1170
  2875   00344C                     l2708:
  2876   00344C  0E00               	movlw	0
  2877   00344E  6E1B               	movwf	(pad@w+1)^0,c
  2878   003450  0E00               	movlw	0
  2879   003452  6E1A               	movwf	pad@w^0,c
  2880   003454                     l1170:
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2883   003454  0E00               	movlw	0
  2884   003456  6E19               	movwf	(pad@i+1)^0,c
  2885   003458  0E00               	movlw	0
  2886   00345A  6E18               	movwf	pad@i^0,c
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2889   00345C  EF3C  F01A         	goto	l2714
  2890   003460                     l2710:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2893   003460  0E00               	movlw	0
  2894   003462  6E02               	movwf	(fputc@c+1)^0,c
  2895   003464  0E20               	movlw	32
  2896   003466  6E01               	movwf	fputc@c^0,c
  2897   003468  C011  F003         	movff	pad@fp,fputc@fp
  2898   00346C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2899   003470  EC2F  F016         	call	_fputc	;wreg free
  2900   003474                     
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2902   003474  4A18               	infsnz	pad@i^0,f,c
  2903   003476  2A19               	incf	(pad@i+1)^0,f,c
  2904   003478                     l2714:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2907   003478  501A               	movf	pad@w^0,w,c
  2908   00347A  5C18               	subwf	pad@i^0,w,c
  2909   00347C  5019               	movf	(pad@i+1)^0,w,c
  2910   00347E  0A80               	xorlw	128
  2911   003480  6E17               	movwf	??_pad^0,c
  2912   003482  501B               	movf	(pad@w+1)^0,w,c
  2913   003484  0A80               	xorlw	128
  2914   003486  5817               	subwfb	??_pad^0,w,c
  2915   003488  A0D8               	btfss	status,0,c
  2916   00348A  EF49  F01A         	goto	u1581
  2917   00348E  EF4B  F01A         	goto	u1580
  2918   003492                     u1581:
  2919   003492  EF30  F01A         	goto	l2710
  2920   003496                     u1580:
  2921   003496                     
  2922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2923   003496  C013  F00A         	movff	pad@buf,fputs@s
  2924   00349A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2925   00349E  C011  F00C         	movff	pad@fp,fputs@fp
  2926   0034A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2927   0034A6  EC75  F01B         	call	_fputs	;wreg free
  2928   0034AA  0012               	return		;funcret
  2929   0034AC                     __end_of_pad:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _fputs *****************
  2933 ;; Defined at:
  2934 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2937 ;;		 -> dbuf(32), 
  2938 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2939 ;;		 -> sprintf@f(11), 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  i               2   14[COMRAM] int 
  2942 ;;  c               1   13[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  2    9[COMRAM] int 
  2945 ;; Registers used:
  2946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;Total ram usage:        7 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 3
  2959 ;; This function calls:
  2960 ;;		_fputc
  2961 ;; This function is called by:
  2962 ;;		_pad
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text6
  2967   0036EA                     __ptext6:
  2968                           	callstack 0
  2969   0036EA                     _fputs:
  2970                           	callstack 22
  2971   0036EA  0E00               	movlw	0
  2972   0036EC  6E10               	movwf	(fputs@i+1)^0,c
  2973   0036EE  0E00               	movlw	0
  2974   0036F0  6E0F               	movwf	fputs@i^0,c
  2975   0036F2  EF86  F01B         	goto	l2622
  2976   0036F6                     l2618:
  2977   0036F6  C00E  F001         	movff	fputs@c,fputc@c
  2978   0036FA  6A02               	clrf	(fputc@c+1)^0,c
  2979   0036FC  C00C  F003         	movff	fputs@fp,fputc@fp
  2980   003700  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2981   003704  EC2F  F016         	call	_fputc	;wreg free
  2982   003708  4A0F               	infsnz	fputs@i^0,f,c
  2983   00370A  2A10               	incf	(fputs@i+1)^0,f,c
  2984   00370C                     l2622:
  2985   00370C  500F               	movf	fputs@i^0,w,c
  2986   00370E  240A               	addwf	fputs@s^0,w,c
  2987   003710  6ED9               	movwf	fsr2l,c
  2988   003712  5010               	movf	(fputs@i+1)^0,w,c
  2989   003714  200B               	addwfc	(fputs@s+1)^0,w,c
  2990   003716  6EDA               	movwf	fsr2h,c
  2991   003718  50DF               	movf	indf2,w,c
  2992   00371A  6E0E               	movwf	fputs@c^0,c
  2993   00371C  500E               	movf	fputs@c^0,w,c
  2994   00371E  A4D8               	btfss	status,2,c
  2995   003720  EF94  F01B         	goto	u1431
  2996   003724  EF96  F01B         	goto	u1430
  2997   003728                     u1431:
  2998   003728  EF7B  F01B         	goto	l2618
  2999   00372C                     u1430:
  3000   00372C  0012               	return		;funcret
  3001   00372E                     __end_of_fputs:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _fputc *****************
  3005 ;; Defined at:
  3006 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  c               2    0[COMRAM] int 
  3009 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3010 ;;		 -> sprintf@f(11), 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  2    0[COMRAM] int 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3024 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3025 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;Total ram usage:        9 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 2
  3029 ;; This function calls:
  3030 ;;		_putch
  3031 ;; This function is called by:
  3032 ;;		_pad
  3033 ;;		_vfpfcnvrt
  3034 ;;		_fputs
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text7
  3039   002C5E                     __ptext7:
  3040                           	callstack 0
  3041   002C5E                     _fputc:
  3042                           	callstack 25
  3043   002C5E  5003               	movf	fputc@fp^0,w,c
  3044   002C60  1004               	iorwf	(fputc@fp+1)^0,w,c
  3045   002C62  B4D8               	btfsc	status,2,c
  3046   002C64  EF36  F016         	goto	u1391
  3047   002C68  EF38  F016         	goto	u1390
  3048   002C6C                     u1391:
  3049   002C6C  EF41  F016         	goto	l2606
  3050   002C70                     u1390:
  3051   002C70  5003               	movf	fputc@fp^0,w,c
  3052   002C72  1004               	iorwf	(fputc@fp+1)^0,w,c
  3053   002C74  A4D8               	btfss	status,2,c
  3054   002C76  EF3F  F016         	goto	u1401
  3055   002C7A  EF41  F016         	goto	u1400
  3056   002C7E                     u1401:
  3057   002C7E  EF46  F016         	goto	l2608
  3058   002C82                     u1400:
  3059   002C82                     l2606:
  3060   002C82  5001               	movf	fputc@c^0,w,c
  3061   002C84  ECC3  F01C         	call	_putch
  3062   002C88  EF93  F016         	goto	l1225
  3063   002C8C                     l2608:
  3064   002C8C  EE20 F009          	lfsr	2,9
  3065   002C90  5003               	movf	fputc@fp^0,w,c
  3066   002C92  26D9               	addwf	fsr2l,f,c
  3067   002C94  5004               	movf	(fputc@fp+1)^0,w,c
  3068   002C96  22DA               	addwfc	fsr2h,f,c
  3069   002C98  50DE               	movf	postinc2,w,c
  3070   002C9A  10DE               	iorwf	postinc2,w,c
  3071   002C9C  B4D8               	btfsc	status,2,c
  3072   002C9E  EF53  F016         	goto	u1411
  3073   002CA2  EF55  F016         	goto	u1410
  3074   002CA6                     u1411:
  3075   002CA6  EF70  F016         	goto	l2612
  3076   002CAA                     u1410:
  3077   002CAA  EE20 F009          	lfsr	2,9
  3078   002CAE  5003               	movf	fputc@fp^0,w,c
  3079   002CB0  26D9               	addwf	fsr2l,f,c
  3080   002CB2  5004               	movf	(fputc@fp+1)^0,w,c
  3081   002CB4  22DA               	addwfc	fsr2h,f,c
  3082   002CB6  EE10 F003          	lfsr	1,3
  3083   002CBA  5003               	movf	fputc@fp^0,w,c
  3084   002CBC  26E1               	addwf	fsr1l,f,c
  3085   002CBE  5004               	movf	(fputc@fp+1)^0,w,c
  3086   002CC0  22E2               	addwfc	fsr1h,f,c
  3087   002CC2  50DE               	movf	postinc2,w,c
  3088   002CC4  5CE6               	subwf	postinc1,w,c
  3089   002CC6  50E6               	movf	postinc1,w,c
  3090   002CC8  0A80               	xorlw	128
  3091   002CCA  6E09               	movwf	(??_fputc+4)^0,c
  3092   002CCC  50DE               	movf	postinc2,w,c
  3093   002CCE  0A80               	xorlw	128
  3094   002CD0  5809               	subwfb	(??_fputc+4)^0,w,c
  3095   002CD2  B0D8               	btfsc	status,0,c
  3096   002CD4  EF6E  F016         	goto	u1421
  3097   002CD8  EF70  F016         	goto	u1420
  3098   002CDC                     u1421:
  3099   002CDC  EF93  F016         	goto	l1225
  3100   002CE0                     u1420:
  3101   002CE0                     l2612:
  3102   002CE0  EE20 F003          	lfsr	2,3
  3103   002CE4  5003               	movf	fputc@fp^0,w,c
  3104   002CE6  26D9               	addwf	fsr2l,f,c
  3105   002CE8  5004               	movf	(fputc@fp+1)^0,w,c
  3106   002CEA  22DA               	addwfc	fsr2h,f,c
  3107   002CEC  CFDE F005          	movff	postinc2,??_fputc
  3108   002CF0  CFDD F006          	movff	postdec2,??_fputc+1
  3109   002CF4  C003  FFD9         	movff	fputc@fp,fsr2l
  3110   002CF8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3111   002CFC  CFDE F007          	movff	postinc2,??_fputc+2
  3112   002D00  CFDD F008          	movff	postdec2,??_fputc+3
  3113   002D04  5005               	movf	??_fputc^0,w,c
  3114   002D06  2407               	addwf	(??_fputc+2)^0,w,c
  3115   002D08  6ED9               	movwf	fsr2l,c
  3116   002D0A  5006               	movf	(??_fputc+1)^0,w,c
  3117   002D0C  2008               	addwfc	(??_fputc+3)^0,w,c
  3118   002D0E  6EDA               	movwf	fsr2h,c
  3119   002D10  C001  FFDF         	movff	fputc@c,indf2
  3120   002D14  EE20 F003          	lfsr	2,3
  3121   002D18  5003               	movf	fputc@fp^0,w,c
  3122   002D1A  26D9               	addwf	fsr2l,f,c
  3123   002D1C  5004               	movf	(fputc@fp+1)^0,w,c
  3124   002D1E  22DA               	addwfc	fsr2h,f,c
  3125   002D20  2ADE               	incf	postinc2,f,c
  3126   002D22  0E00               	movlw	0
  3127   002D24  22DD               	addwfc	postdec2,f,c
  3128   002D26                     l1225:
  3129   002D26  0012               	return		;funcret
  3130   002D28                     __end_of_fputc:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _putch *****************
  3134 ;; Defined at:
  3135 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  c               1    wreg     unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  c               1    0[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_fputc
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text8
  3164   003986                     __ptext8:
  3165                           	callstack 0
  3166   003986                     _putch:
  3167                           	callstack 25
  3168   003986  0012               	return		;funcret
  3169   003988                     __end_of_putch:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _abs *****************
  3173 ;; Defined at:
  3174 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  a               2   18[COMRAM] int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2   18[COMRAM] int 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;Total ram usage:        4 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_dtoa
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text9
  3203   0037B2                     __ptext9:
  3204                           	callstack 0
  3205   0037B2                     _abs:
  3206                           	callstack 25
  3207   0037B2  BE14               	btfsc	(abs@a+1)^0,7,c
  3208   0037B4  EFE6  F01B         	goto	u1590
  3209   0037B8  5014               	movf	(abs@a+1)^0,w,c
  3210   0037BA  E106               	bnz	u1591
  3211   0037BC  0413               	decf	abs@a^0,w,c
  3212   0037BE  B0D8               	btfsc	status,0,c
  3213   0037C0  EFE4  F01B         	goto	u1591
  3214   0037C4  EFE6  F01B         	goto	u1590
  3215   0037C8                     u1591:
  3216   0037C8  EFF4  F01B         	goto	l1210
  3217   0037CC                     u1590:
  3218   0037CC  C013  F015         	movff	abs@a,??_abs
  3219   0037D0  C014  F016         	movff	abs@a+1,??_abs+1
  3220   0037D4  1E15               	comf	??_abs^0,f,c
  3221   0037D6  1E16               	comf	(??_abs+1)^0,f,c
  3222   0037D8  4A15               	infsnz	??_abs^0,f,c
  3223   0037DA  2A16               	incf	(??_abs+1)^0,f,c
  3224   0037DC  C015  F013         	movff	??_abs,?_abs
  3225   0037E0  C016  F014         	movff	??_abs+1,?_abs+1
  3226   0037E4  EFF8  F01B         	goto	l1213
  3227   0037E8                     l1210:
  3228   0037E8  C013  F013         	movff	abs@a,?_abs
  3229   0037EC  C014  F014         	movff	abs@a+1,?_abs+1
  3230   0037F0                     l1213:
  3231   0037F0  0012               	return		;funcret
  3232   0037F2                     __end_of_abs:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function ___aomod *****************
  3236 ;; Defined at:
  3237 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  dividend        8    0[COMRAM] long long 
  3240 ;;  divisor         8    8[COMRAM] long long 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  sign            1   17[COMRAM] unsigned char 
  3243 ;;  counter         1   16[COMRAM] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  8    0[COMRAM] long long 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3253 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;Total ram usage:       18 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_dtoa
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text10
  3268   002772                     __ptext10:
  3269                           	callstack 0
  3270   002772                     ___aomod:
  3271                           	callstack 25
  3272   002772  0E00               	movlw	0
  3273   002774  6E12               	movwf	___aomod@sign^0,c
  3274   002776  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3275   002778  EFC2  F013         	goto	u1510
  3276   00277C  EFC0  F013         	goto	u1511
  3277   002780                     u1511:
  3278   002780  EFD4  F013         	goto	l2676
  3279   002784                     u1510:
  3280   002784  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3281   002786  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3282   002788  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3283   00278A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3284   00278C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3285   00278E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3286   002790  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3287   002792  6C01               	negf	___aomod@dividend^0,c
  3288   002794  0E00               	movlw	0
  3289   002796  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3290   002798  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3291   00279A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3292   00279C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3293   00279E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3294   0027A0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3295   0027A2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3296   0027A4  0E01               	movlw	1
  3297   0027A6  6E12               	movwf	___aomod@sign^0,c
  3298   0027A8                     l2676:
  3299   0027A8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3300   0027AA  EFDB  F013         	goto	u1520
  3301   0027AE  EFD9  F013         	goto	u1521
  3302   0027B2                     u1521:
  3303   0027B2  EFEB  F013         	goto	l2680
  3304   0027B6                     u1520:
  3305   0027B6  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3306   0027B8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3307   0027BA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3308   0027BC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3309   0027BE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3310   0027C0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3311   0027C2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3312   0027C4  6C09               	negf	___aomod@divisor^0,c
  3313   0027C6  0E00               	movlw	0
  3314   0027C8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3315   0027CA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3316   0027CC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3317   0027CE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3318   0027D0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3319   0027D2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3320   0027D4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3321   0027D6                     l2680:
  3322   0027D6  5009               	movf	___aomod@divisor^0,w,c
  3323   0027D8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3324   0027DA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3325   0027DC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3326   0027DE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3327   0027E0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3328   0027E2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3329   0027E4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3330   0027E6  B4D8               	btfsc	status,2,c
  3331   0027E8  EFF8  F013         	goto	u1531
  3332   0027EC  EFFA  F013         	goto	u1530
  3333   0027F0                     u1531:
  3334   0027F0  EF42  F014         	goto	l2696
  3335   0027F4                     u1530:
  3336   0027F4  0E01               	movlw	1
  3337   0027F6  6E11               	movwf	___aomod@counter^0,c
  3338   0027F8  EF08  F014         	goto	l2686
  3339   0027FC                     l2684:
  3340   0027FC  90D8               	bcf	status,0,c
  3341   0027FE  3609               	rlcf	___aomod@divisor^0,f,c
  3342   002800  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3343   002802  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3344   002804  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3345   002806  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3346   002808  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3347   00280A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3348   00280C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3349   00280E  2A11               	incf	___aomod@counter^0,f,c
  3350   002810                     l2686:
  3351   002810  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3352   002812  EF0D  F014         	goto	u1541
  3353   002816  EF0F  F014         	goto	u1540
  3354   00281A                     u1541:
  3355   00281A  EFFE  F013         	goto	l2684
  3356   00281E                     u1540:
  3357   00281E                     l2688:
  3358   00281E  5009               	movf	___aomod@divisor^0,w,c
  3359   002820  5C01               	subwf	___aomod@dividend^0,w,c
  3360   002822  500A               	movf	(___aomod@divisor+1)^0,w,c
  3361   002824  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3362   002826  500B               	movf	(___aomod@divisor+2)^0,w,c
  3363   002828  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3364   00282A  500C               	movf	(___aomod@divisor+3)^0,w,c
  3365   00282C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3366   00282E  500D               	movf	(___aomod@divisor+4)^0,w,c
  3367   002830  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3368   002832  500E               	movf	(___aomod@divisor+5)^0,w,c
  3369   002834  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3370   002836  500F               	movf	(___aomod@divisor+6)^0,w,c
  3371   002838  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3372   00283A  5010               	movf	(___aomod@divisor+7)^0,w,c
  3373   00283C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3374   00283E  A0D8               	btfss	status,0,c
  3375   002840  EF24  F014         	goto	u1551
  3376   002844  EF26  F014         	goto	u1550
  3377   002848                     u1551:
  3378   002848  EF36  F014         	goto	l2692
  3379   00284C                     u1550:
  3380   00284C  5009               	movf	___aomod@divisor^0,w,c
  3381   00284E  5E01               	subwf	___aomod@dividend^0,f,c
  3382   002850  500A               	movf	(___aomod@divisor+1)^0,w,c
  3383   002852  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3384   002854  500B               	movf	(___aomod@divisor+2)^0,w,c
  3385   002856  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3386   002858  500C               	movf	(___aomod@divisor+3)^0,w,c
  3387   00285A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3388   00285C  500D               	movf	(___aomod@divisor+4)^0,w,c
  3389   00285E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3390   002860  500E               	movf	(___aomod@divisor+5)^0,w,c
  3391   002862  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3392   002864  500F               	movf	(___aomod@divisor+6)^0,w,c
  3393   002866  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3394   002868  5010               	movf	(___aomod@divisor+7)^0,w,c
  3395   00286A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3396   00286C                     l2692:
  3397   00286C  90D8               	bcf	status,0,c
  3398   00286E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3399   002870  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3400   002872  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3401   002874  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3402   002876  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3403   002878  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3404   00287A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3405   00287C  3209               	rrcf	___aomod@divisor^0,f,c
  3406   00287E  2E11               	decfsz	___aomod@counter^0,f,c
  3407   002880  EF0F  F014         	goto	l2688
  3408   002884                     l2696:
  3409   002884  5012               	movf	___aomod@sign^0,w,c
  3410   002886  B4D8               	btfsc	status,2,c
  3411   002888  EF48  F014         	goto	u1561
  3412   00288C  EF4A  F014         	goto	u1560
  3413   002890                     u1561:
  3414   002890  EF5A  F014         	goto	l2700
  3415   002894                     u1560:
  3416   002894  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3417   002896  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3418   002898  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3419   00289A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3420   00289C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3421   00289E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3422   0028A0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3423   0028A2  6C01               	negf	___aomod@dividend^0,c
  3424   0028A4  0E00               	movlw	0
  3425   0028A6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3426   0028A8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3427   0028AA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3428   0028AC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3429   0028AE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3430   0028B0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3431   0028B2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3432   0028B4                     l2700:
  3433   0028B4  C001  F001         	movff	___aomod@dividend,?___aomod
  3434   0028B8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3435   0028BC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3436   0028C0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3437   0028C4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3438   0028C8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3439   0028CC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3440   0028D0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3441   0028D4  0012               	return		;funcret
  3442   0028D6                     __end_of___aomod:
  3443                           	callstack 0
  3444                           
  3445 ;; *************** function ___aodiv *****************
  3446 ;; Defined at:
  3447 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  dividend        8    0[COMRAM] long long 
  3450 ;;  divisor         8    8[COMRAM] long long 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  quotient        8   18[COMRAM] long long 
  3453 ;;  sign            1   17[COMRAM] unsigned char 
  3454 ;;  counter         1   16[COMRAM] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  8    0[COMRAM] long long 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3464 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;Total ram usage:       26 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 1
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_dtoa
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text11
  3479   0025EA                     __ptext11:
  3480                           	callstack 0
  3481   0025EA                     ___aodiv:
  3482                           	callstack 25
  3483   0025EA  0E00               	movlw	0
  3484   0025EC  6E12               	movwf	___aodiv@sign^0,c
  3485   0025EE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3486   0025F0  EFFE  F012         	goto	u1440
  3487   0025F4  EFFC  F012         	goto	u1441
  3488   0025F8                     u1441:
  3489   0025F8  EF10  F013         	goto	l2632
  3490   0025FC                     u1440:
  3491   0025FC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3492   0025FE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3493   002600  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3494   002602  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3495   002604  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3496   002606  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3497   002608  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3498   00260A  6C09               	negf	___aodiv@divisor^0,c
  3499   00260C  0E00               	movlw	0
  3500   00260E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3501   002610  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3502   002612  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3503   002614  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3504   002616  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3505   002618  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3506   00261A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3507   00261C  0E01               	movlw	1
  3508   00261E  6E12               	movwf	___aodiv@sign^0,c
  3509   002620                     l2632:
  3510   002620  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3511   002622  EF17  F013         	goto	u1450
  3512   002626  EF15  F013         	goto	u1451
  3513   00262A                     u1451:
  3514   00262A  EF29  F013         	goto	l2638
  3515   00262E                     u1450:
  3516   00262E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3517   002630  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3518   002632  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3519   002634  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3520   002636  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3521   002638  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3522   00263A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3523   00263C  6C01               	negf	___aodiv@dividend^0,c
  3524   00263E  0E00               	movlw	0
  3525   002640  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3526   002642  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3527   002644  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3528   002646  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3529   002648  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3530   00264A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3531   00264C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3532   00264E  0E01               	movlw	1
  3533   002650  1A12               	xorwf	___aodiv@sign^0,f,c
  3534   002652                     l2638:
  3535   002652  EE20  F013         	lfsr	2,___aodiv@quotient
  3536   002656  0E07               	movlw	7
  3537   002658                     u1461:
  3538   002658  6ADE               	clrf	postinc2,c
  3539   00265A  06E8               	decf	wreg,f,c
  3540   00265C  E2FD               	bc	u1461
  3541   00265E  5009               	movf	___aodiv@divisor^0,w,c
  3542   002660  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3543   002662  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3544   002664  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3545   002666  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3546   002668  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3547   00266A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3548   00266C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3549   00266E  B4D8               	btfsc	status,2,c
  3550   002670  EF3C  F013         	goto	u1471
  3551   002674  EF3E  F013         	goto	u1470
  3552   002678                     u1471:
  3553   002678  EF90  F013         	goto	l2660
  3554   00267C                     u1470:
  3555   00267C  0E01               	movlw	1
  3556   00267E  6E11               	movwf	___aodiv@counter^0,c
  3557   002680  EF4C  F013         	goto	l2646
  3558   002684                     l2644:
  3559   002684  90D8               	bcf	status,0,c
  3560   002686  3609               	rlcf	___aodiv@divisor^0,f,c
  3561   002688  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3562   00268A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3563   00268C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3564   00268E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3565   002690  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3566   002692  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3567   002694  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3568   002696  2A11               	incf	___aodiv@counter^0,f,c
  3569   002698                     l2646:
  3570   002698  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3571   00269A  EF51  F013         	goto	u1481
  3572   00269E  EF53  F013         	goto	u1480
  3573   0026A2                     u1481:
  3574   0026A2  EF42  F013         	goto	l2644
  3575   0026A6                     u1480:
  3576   0026A6                     l2648:
  3577   0026A6  90D8               	bcf	status,0,c
  3578   0026A8  3613               	rlcf	___aodiv@quotient^0,f,c
  3579   0026AA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3580   0026AC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3581   0026AE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3582   0026B0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3583   0026B2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3584   0026B4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3585   0026B6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3586   0026B8  5009               	movf	___aodiv@divisor^0,w,c
  3587   0026BA  5C01               	subwf	___aodiv@dividend^0,w,c
  3588   0026BC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3589   0026BE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3590   0026C0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3591   0026C2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3592   0026C4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3593   0026C6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3594   0026C8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3595   0026CA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3596   0026CC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3597   0026CE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3598   0026D0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3599   0026D2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3600   0026D4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3601   0026D6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3602   0026D8  A0D8               	btfss	status,0,c
  3603   0026DA  EF71  F013         	goto	u1491
  3604   0026DE  EF73  F013         	goto	u1490
  3605   0026E2                     u1491:
  3606   0026E2  EF84  F013         	goto	l2656
  3607   0026E6                     u1490:
  3608   0026E6  5009               	movf	___aodiv@divisor^0,w,c
  3609   0026E8  5E01               	subwf	___aodiv@dividend^0,f,c
  3610   0026EA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3611   0026EC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3612   0026EE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3613   0026F0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3614   0026F2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3615   0026F4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3616   0026F6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3617   0026F8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3618   0026FA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3619   0026FC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3620   0026FE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3621   002700  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3622   002702  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3623   002704  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3624   002706  8013               	bsf	___aodiv@quotient^0,0,c
  3625   002708                     l2656:
  3626   002708  90D8               	bcf	status,0,c
  3627   00270A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3628   00270C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3629   00270E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3630   002710  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3631   002712  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3632   002714  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3633   002716  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3634   002718  3209               	rrcf	___aodiv@divisor^0,f,c
  3635   00271A  2E11               	decfsz	___aodiv@counter^0,f,c
  3636   00271C  EF53  F013         	goto	l2648
  3637   002720                     l2660:
  3638   002720  5012               	movf	___aodiv@sign^0,w,c
  3639   002722  B4D8               	btfsc	status,2,c
  3640   002724  EF96  F013         	goto	u1501
  3641   002728  EF98  F013         	goto	u1500
  3642   00272C                     u1501:
  3643   00272C  EFA8  F013         	goto	l2664
  3644   002730                     u1500:
  3645   002730  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3646   002732  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3647   002734  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3648   002736  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3649   002738  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3650   00273A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3651   00273C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3652   00273E  6C13               	negf	___aodiv@quotient^0,c
  3653   002740  0E00               	movlw	0
  3654   002742  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3655   002744  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3656   002746  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3657   002748  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3658   00274A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3659   00274C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3660   00274E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3661   002750                     l2664:
  3662   002750  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3663   002754  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3664   002758  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3665   00275C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3666   002760  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3667   002764  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3668   002768  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3669   00276C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3670   002770  0012               	return		;funcret
  3671   002772                     __end_of___aodiv:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _spin_180 *****************
  3675 ;; Defined at:
  3676 ;;		line 167 in file "../dc_motor.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3679 ;;		 -> main@motorL(9), 
  3680 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3681 ;;		 -> main@motorR(9), 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  i               2   31[COMRAM] int 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;Total ram usage:        8 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 3
  3700 ;; This function calls:
  3701 ;;		_setMotorPWM
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;;		_motor_action_return
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text12
  3709   002FDA                     __ptext12:
  3710                           	callstack 0
  3711   002FDA                     _spin_180:
  3712                           	callstack 27
  3713   002FDA                     
  3714                           ;../dc_motor.c: 167: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 168: {;../dc_motor.c: 169:     mL->direction = 1;
  3715   002FDA  EE20 F001          	lfsr	2,1
  3716   002FDE  501A               	movf	spin_180@mL^0,w,c
  3717   002FE0  26D9               	addwf	fsr2l,f,c
  3718   002FE2  501B               	movf	(spin_180@mL+1)^0,w,c
  3719   002FE4  22DA               	addwfc	fsr2h,f,c
  3720   002FE6  0E01               	movlw	1
  3721   002FE8  6EDF               	movwf	indf2,c
  3722                           
  3723                           ;../dc_motor.c: 170:     mR->direction = 0;
  3724   002FEA  EE20 F001          	lfsr	2,1
  3725   002FEE  501C               	movf	spin_180@mR^0,w,c
  3726   002FF0  26D9               	addwf	fsr2l,f,c
  3727   002FF2  501D               	movf	(spin_180@mR+1)^0,w,c
  3728   002FF4  22DA               	addwfc	fsr2h,f,c
  3729   002FF6  0E00               	movlw	0
  3730   002FF8  6EDF               	movwf	indf2,c
  3731   002FFA                     
  3732                           ;../dc_motor.c: 171:     for (int i = 0;i<50;i = i + 2)
  3733   002FFA  0E00               	movlw	0
  3734   002FFC  6E21               	movwf	(spin_180@i+1)^0,c
  3735   002FFE  0E00               	movlw	0
  3736   003000  6E20               	movwf	spin_180@i^0,c
  3737   003002                     l3434:
  3738                           
  3739                           ;../dc_motor.c: 172:     {;../dc_motor.c: 173:         mL->power = i;
  3740   003002  C01A  FFD9         	movff	spin_180@mL,fsr2l
  3741   003006  C01B  FFDA         	movff	spin_180@mL+1,fsr2h
  3742   00300A  C020  FFDF         	movff	spin_180@i,indf2
  3743   00300E                     
  3744                           ;../dc_motor.c: 174:         mR->power = 50 + i;
  3745   00300E  5020               	movf	spin_180@i^0,w,c
  3746   003010  0F32               	addlw	50
  3747   003012  C01C  FFD9         	movff	spin_180@mR,fsr2l
  3748   003016  C01D  FFDA         	movff	spin_180@mR+1,fsr2h
  3749   00301A  6EDF               	movwf	indf2,c
  3750   00301C                     
  3751                           ;../dc_motor.c: 175:         setMotorPWM(mL);
  3752   00301C  C01A  F00F         	movff	spin_180@mL,setMotorPWM@m
  3753   003020  C01B  F010         	movff	spin_180@mL+1,setMotorPWM@m+1
  3754   003024  EC31  F011         	call	_setMotorPWM	;wreg free
  3755   003028                     
  3756                           ;../dc_motor.c: 176:         setMotorPWM(mR);
  3757   003028  C01C  F00F         	movff	spin_180@mR,setMotorPWM@m
  3758   00302C  C01D  F010         	movff	spin_180@mR+1,setMotorPWM@m+1
  3759   003030  EC31  F011         	call	_setMotorPWM	;wreg free
  3760   003034                     
  3761                           ;../dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3762   003034  0E35               	movlw	53
  3763   003036                     u2827:
  3764   003036  2EE8               	decfsz	wreg,f,c
  3765   003038  D7FE               	bra	u2827
  3766   00303A  F000               	nop	
  3767   00303C                     
  3768                           ;../dc_motor.c: 178:     }
  3769   00303C  0E02               	movlw	2
  3770   00303E  2420               	addwf	spin_180@i^0,w,c
  3771   003040  6E20               	movwf	spin_180@i^0,c
  3772   003042  0E00               	movlw	0
  3773   003044  2021               	addwfc	(spin_180@i+1)^0,w,c
  3774   003046  6E21               	movwf	(spin_180@i+1)^0,c
  3775   003048  BE21               	btfsc	(spin_180@i+1)^0,7,c
  3776   00304A  EF30  F018         	goto	u2181
  3777   00304E  5021               	movf	(spin_180@i+1)^0,w,c
  3778   003050  E109               	bnz	u2180
  3779   003052  0E32               	movlw	50
  3780   003054  5C20               	subwf	spin_180@i^0,w,c
  3781   003056  A0D8               	btfss	status,0,c
  3782   003058  EF30  F018         	goto	u2181
  3783   00305C  EF32  F018         	goto	u2180
  3784   003060                     u2181:
  3785   003060  EF01  F018         	goto	l3434
  3786   003064                     u2180:
  3787   003064                     
  3788                           ;../dc_motor.c: 179:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3789   003064  0E18               	movlw	24
  3790   003066  6E1F               	movwf	(??_spin_180+1)^0,c
  3791   003068  0E8A               	movlw	138
  3792   00306A  6E1E               	movwf	??_spin_180^0,c
  3793   00306C  0EE8               	movlw	232
  3794   00306E                     u2837:
  3795   00306E  2EE8               	decfsz	wreg,f,c
  3796   003070  D7FE               	bra	u2837
  3797   003072  2E1E               	decfsz	??_spin_180^0,f,c
  3798   003074  D7FC               	bra	u2837
  3799   003076  2E1F               	decfsz	(??_spin_180+1)^0,f,c
  3800   003078  D7FA               	bra	u2837
  3801   00307A  0012               	return		;funcret
  3802   00307C                     __end_of_spin_180:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _sendStringSerial4 *****************
  3806 ;; Defined at:
  3807 ;;		line 37 in file "../serial.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  string          2    1[COMRAM] PTR unsigned char 
  3810 ;;		 -> main@readout4(100), main@readout3(100), main@readout2(100), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;Total ram usage:        2 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 2
  3829 ;; This function calls:
  3830 ;;		_sendCharSerial4
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text13
  3837   003828                     __ptext13:
  3838                           	callstack 0
  3839   003828                     _sendStringSerial4:
  3840                           	callstack 28
  3841   003828                     
  3842                           ;../serial.c: 40:     while (*string != 0)
  3843   003828  EF1F  F01C         	goto	l3334
  3844   00382C                     l3330:
  3845                           
  3846                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  3847   00382C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3848   003830  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3849   003834  50DF               	movf	indf2,w,c
  3850   003836  EC97  F01C         	call	_sendCharSerial4
  3851   00383A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3852   00383C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3853   00383E                     l3334:
  3854                           
  3855                           ;../serial.c: 40:     while (*string != 0)
  3856   00383E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3857   003842  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3858   003846  50DF               	movf	indf2,w,c
  3859   003848  A4D8               	btfss	status,2,c
  3860   00384A  EF29  F01C         	goto	u2171
  3861   00384E  EF2B  F01C         	goto	u2170
  3862   003852                     u2171:
  3863   003852  EF16  F01C         	goto	l3330
  3864   003856                     u2170:
  3865   003856  0012               	return		;funcret
  3866   003858                     __end_of_sendStringSerial4:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _sendCharSerial4 *****************
  3870 ;; Defined at:
  3871 ;;		line 30 in file "../serial.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  charToSend      1    wreg     unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  charToSend      1    0[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;Total ram usage:        1 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_sendStringSerial4
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text14
  3900   00392E                     __ptext14:
  3901                           	callstack 0
  3902   00392E                     _sendCharSerial4:
  3903                           	callstack 28
  3904                           
  3905                           ;incstack = 0
  3906                           ;sendCharSerial4@charToSend stored from wreg
  3907   00392E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3908   003930                     l458:
  3909   003930  010E               	movlb	14	; () banked
  3910   003932  A537               	btfss	55,2,b	;volatile
  3911   003934  EF9E  F01C         	goto	u1951
  3912   003938  EFA0  F01C         	goto	u1950
  3913   00393C                     u1951:
  3914   00393C  EF98  F01C         	goto	l458
  3915   003940                     u1950:
  3916   003940                     
  3917                           ; BSR set to: 14
  3918                           ;../serial.c: 32:     TX4REG = charToSend;
  3919   003940  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3920   003944                     
  3921                           ; BSR set to: 14
  3922   003944  0012               	return		;funcret
  3923   003946                     __end_of_sendCharSerial4:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _motor_action *****************
  3927 ;; Defined at:
  3928 ;;		line 213 in file "../dc_motor.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  color           2   33[COMRAM] unsigned int 
  3931 ;;  l               2   35[COMRAM] PTR struct DC_motor
  3932 ;;		 -> main@motorL(9), 
  3933 ;;  r               2   37[COMRAM] PTR struct DC_motor
  3934 ;;		 -> main@motorR(9), 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3946 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;Total ram usage:        8 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 4
  3953 ;; This function calls:
  3954 ;;		_forward
  3955 ;;		_left_135
  3956 ;;		_left_90
  3957 ;;		_reverse_fromcard
  3958 ;;		_reverse_onesquare
  3959 ;;		_right_135
  3960 ;;		_right_90
  3961 ;;		_stop
  3962 ;; This function is called by:
  3963 ;;		_main
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text15
  3968   00158C                     __ptext15:
  3969                           	callstack 0
  3970   00158C                     _motor_action:
  3971                           	callstack 26
  3972   00158C                     
  3973                           ;../dc_motor.c: 213: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 214: {;../dc_motor.c: 215:     switch (color){
  3974   00158C  EFB8  F00C         	goto	l3420
  3975   001590                     l3338:
  3976                           
  3977                           ;../dc_motor.c: 217:             reverse_fromcard(l,r);
  3978   001590  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  3979   001594  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  3980   001598  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  3981   00159C  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  3982   0015A0  EC82  F019         	call	_reverse_fromcard	;wreg free
  3983                           
  3984                           ;../dc_motor.c: 218:             stop(l,r);
  3985   0015A4  C024  F01A         	movff	motor_action@l,stop@mL
  3986   0015A8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  3987   0015AC  C026  F01C         	movff	motor_action@r,stop@mR
  3988   0015B0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  3989   0015B4  ECD2  F019         	call	_stop	;wreg free
  3990   0015B8                     l3340:
  3991                           
  3992                           ;../dc_motor.c: 219:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3993   0015B8  0E29               	movlw	41
  3994   0015BA  6E29               	movwf	(??_motor_action+1)^0,c
  3995   0015BC  0E96               	movlw	150
  3996   0015BE  6E28               	movwf	??_motor_action^0,c
  3997   0015C0  0E7F               	movlw	127
  3998   0015C2                     u2847:
  3999   0015C2  2EE8               	decfsz	wreg,f,c
  4000   0015C4  D7FE               	bra	u2847
  4001   0015C6  2E28               	decfsz	??_motor_action^0,f,c
  4002   0015C8  D7FC               	bra	u2847
  4003   0015CA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4004   0015CC  D7FA               	bra	u2847
  4005   0015CE  F000               	nop	
  4006   0015D0                     
  4007                           ;../dc_motor.c: 220:             right_90(l,r);
  4008   0015D0  C024  F01A         	movff	motor_action@l,right_90@mL
  4009   0015D4  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  4010   0015D8  C026  F01C         	movff	motor_action@r,right_90@mR
  4011   0015DC  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  4012   0015E0  EC49  F017         	call	_right_90	;wreg free
  4013   0015E4                     
  4014                           ;../dc_motor.c: 221:             stop(l,r);
  4015   0015E4  C024  F01A         	movff	motor_action@l,stop@mL
  4016   0015E8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4017   0015EC  C026  F01C         	movff	motor_action@r,stop@mR
  4018   0015F0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4019   0015F4  ECD2  F019         	call	_stop	;wreg free
  4020   0015F8                     
  4021                           ;../dc_motor.c: 222:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4022   0015F8  0E29               	movlw	41
  4023   0015FA  6E29               	movwf	(??_motor_action+1)^0,c
  4024   0015FC  0E96               	movlw	150
  4025   0015FE  6E28               	movwf	??_motor_action^0,c
  4026   001600  0E7F               	movlw	127
  4027   001602                     u2857:
  4028   001602  2EE8               	decfsz	wreg,f,c
  4029   001604  D7FE               	bra	u2857
  4030   001606  2E28               	decfsz	??_motor_action^0,f,c
  4031   001608  D7FC               	bra	u2857
  4032   00160A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4033   00160C  D7FA               	bra	u2857
  4034   00160E  F000               	nop	
  4035                           
  4036                           ;../dc_motor.c: 223:             right_90(l,r);
  4037   001610  C024  F01A         	movff	motor_action@l,right_90@mL
  4038   001614  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  4039   001618  C026  F01C         	movff	motor_action@r,right_90@mR
  4040   00161C  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  4041   001620  EC49  F017         	call	_right_90	;wreg free
  4042                           
  4043                           ;../dc_motor.c: 224:             stop(l,r);
  4044   001624  C024  F01A         	movff	motor_action@l,stop@mL
  4045   001628  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4046   00162C  C026  F01C         	movff	motor_action@r,stop@mR
  4047   001630  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4048   001634  ECD2  F019         	call	_stop	;wreg free
  4049                           
  4050                           ;../dc_motor.c: 225:             break;
  4051   001638  EFEA  F00C         	goto	l350
  4052   00163C                     l3348:
  4053                           
  4054                           ;../dc_motor.c: 227:             reverse_fromcard(l,r);
  4055   00163C  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4056   001640  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4057   001644  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4058   001648  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4059   00164C  EC82  F019         	call	_reverse_fromcard	;wreg free
  4060                           
  4061                           ;../dc_motor.c: 228:             stop(l,r);
  4062   001650  C024  F01A         	movff	motor_action@l,stop@mL
  4063   001654  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4064   001658  C026  F01C         	movff	motor_action@r,stop@mR
  4065   00165C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4066   001660  ECD2  F019         	call	_stop	;wreg free
  4067   001664                     
  4068                           ;../dc_motor.c: 229:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4069   001664  0E29               	movlw	41
  4070   001666  6E29               	movwf	(??_motor_action+1)^0,c
  4071   001668  0E96               	movlw	150
  4072   00166A  6E28               	movwf	??_motor_action^0,c
  4073   00166C  0E7F               	movlw	127
  4074   00166E                     u2867:
  4075   00166E  2EE8               	decfsz	wreg,f,c
  4076   001670  D7FE               	bra	u2867
  4077   001672  2E28               	decfsz	??_motor_action^0,f,c
  4078   001674  D7FC               	bra	u2867
  4079   001676  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4080   001678  D7FA               	bra	u2867
  4081   00167A  F000               	nop	
  4082   00167C                     
  4083                           ;../dc_motor.c: 230:             left_90(l,r);
  4084   00167C  C024  F01A         	movff	motor_action@l,left_90@mL
  4085   001680  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4086   001684  C026  F01C         	movff	motor_action@r,left_90@mR
  4087   001688  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4088   00168C  EC9B  F017         	call	_left_90	;wreg free
  4089   001690                     
  4090                           ;../dc_motor.c: 231:             stop(l,r);
  4091   001690  C024  F01A         	movff	motor_action@l,stop@mL
  4092   001694  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4093   001698  C026  F01C         	movff	motor_action@r,stop@mR
  4094   00169C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4095   0016A0  ECD2  F019         	call	_stop	;wreg free
  4096   0016A4                     
  4097                           ;../dc_motor.c: 232:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4098   0016A4  0E29               	movlw	41
  4099   0016A6  6E29               	movwf	(??_motor_action+1)^0,c
  4100   0016A8  0E96               	movlw	150
  4101   0016AA  6E28               	movwf	??_motor_action^0,c
  4102   0016AC  0E7F               	movlw	127
  4103   0016AE                     u2877:
  4104   0016AE  2EE8               	decfsz	wreg,f,c
  4105   0016B0  D7FE               	bra	u2877
  4106   0016B2  2E28               	decfsz	??_motor_action^0,f,c
  4107   0016B4  D7FC               	bra	u2877
  4108   0016B6  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4109   0016B8  D7FA               	bra	u2877
  4110   0016BA  F000               	nop	
  4111                           
  4112                           ;../dc_motor.c: 233:             left_90(l,r);
  4113   0016BC  C024  F01A         	movff	motor_action@l,left_90@mL
  4114   0016C0  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4115   0016C4  C026  F01C         	movff	motor_action@r,left_90@mR
  4116   0016C8  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4117   0016CC  EC9B  F017         	call	_left_90	;wreg free
  4118                           
  4119                           ;../dc_motor.c: 234:             stop(l,r);
  4120   0016D0  C024  F01A         	movff	motor_action@l,stop@mL
  4121   0016D4  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4122   0016D8  C026  F01C         	movff	motor_action@r,stop@mR
  4123   0016DC  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4124   0016E0  ECD2  F019         	call	_stop	;wreg free
  4125                           
  4126                           ;../dc_motor.c: 235:             break;
  4127   0016E4  EFEA  F00C         	goto	l350
  4128   0016E8                     l3368:
  4129                           
  4130                           ;../dc_motor.c: 247:             reverse_onesquare(l,r);
  4131   0016E8  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  4132   0016EC  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  4133   0016F0  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  4134   0016F4  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  4135   0016F8  EC8F  F018         	call	_reverse_onesquare	;wreg free
  4136                           
  4137                           ;../dc_motor.c: 248:             stop(l,r);
  4138   0016FC  C024  F01A         	movff	motor_action@l,stop@mL
  4139   001700  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4140   001704  C026  F01C         	movff	motor_action@r,stop@mR
  4141   001708  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4142   00170C  ECD2  F019         	call	_stop	;wreg free
  4143   001710  EFDC  F00A         	goto	l3340
  4144   001714                     l3378:
  4145                           
  4146                           ;../dc_motor.c: 257:             reverse_onesquare(l,r);
  4147   001714  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  4148   001718  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  4149   00171C  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  4150   001720  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  4151   001724  EC8F  F018         	call	_reverse_onesquare	;wreg free
  4152                           
  4153                           ;../dc_motor.c: 258:             stop(l,r);
  4154   001728  C024  F01A         	movff	motor_action@l,stop@mL
  4155   00172C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4156   001730  C026  F01C         	movff	motor_action@r,stop@mR
  4157   001734  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4158   001738  ECD2  F019         	call	_stop	;wreg free
  4159   00173C                     
  4160                           ;../dc_motor.c: 259:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4161   00173C  0E29               	movlw	41
  4162   00173E  6E29               	movwf	(??_motor_action+1)^0,c
  4163   001740  0E96               	movlw	150
  4164   001742  6E28               	movwf	??_motor_action^0,c
  4165   001744  0E7F               	movlw	127
  4166   001746                     u2887:
  4167   001746  2EE8               	decfsz	wreg,f,c
  4168   001748  D7FE               	bra	u2887
  4169   00174A  2E28               	decfsz	??_motor_action^0,f,c
  4170   00174C  D7FC               	bra	u2887
  4171   00174E  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4172   001750  D7FA               	bra	u2887
  4173   001752  F000               	nop	
  4174   001754                     
  4175                           ;../dc_motor.c: 260:             left_90(l,r);
  4176   001754  C024  F01A         	movff	motor_action@l,left_90@mL
  4177   001758  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4178   00175C  C026  F01C         	movff	motor_action@r,left_90@mR
  4179   001760  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4180   001764  EC9B  F017         	call	_left_90	;wreg free
  4181   001768                     l3384:
  4182                           
  4183                           ;../dc_motor.c: 261:             stop(l,r);
  4184   001768  C024  F01A         	movff	motor_action@l,stop@mL
  4185   00176C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4186   001770  C026  F01C         	movff	motor_action@r,stop@mR
  4187   001774  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4188   001778  ECD2  F019         	call	_stop	;wreg free
  4189                           
  4190                           ;../dc_motor.c: 262:             break;
  4191   00177C  EFEA  F00C         	goto	l350
  4192   001780                     l3386:
  4193                           
  4194                           ;../dc_motor.c: 264:             reverse_fromcard(l,r);
  4195   001780  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4196   001784  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4197   001788  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4198   00178C  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4199   001790  EC82  F019         	call	_reverse_fromcard	;wreg free
  4200                           
  4201                           ;../dc_motor.c: 265:             stop(l,r);
  4202   001794  C024  F01A         	movff	motor_action@l,stop@mL
  4203   001798  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4204   00179C  C026  F01C         	movff	motor_action@r,stop@mR
  4205   0017A0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4206   0017A4  ECD2  F019         	call	_stop	;wreg free
  4207   0017A8                     
  4208                           ;../dc_motor.c: 266:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4209   0017A8  0E29               	movlw	41
  4210   0017AA  6E29               	movwf	(??_motor_action+1)^0,c
  4211   0017AC  0E96               	movlw	150
  4212   0017AE  6E28               	movwf	??_motor_action^0,c
  4213   0017B0  0E7F               	movlw	127
  4214   0017B2                     u2897:
  4215   0017B2  2EE8               	decfsz	wreg,f,c
  4216   0017B4  D7FE               	bra	u2897
  4217   0017B6  2E28               	decfsz	??_motor_action^0,f,c
  4218   0017B8  D7FC               	bra	u2897
  4219   0017BA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4220   0017BC  D7FA               	bra	u2897
  4221   0017BE  F000               	nop	
  4222   0017C0                     
  4223                           ;../dc_motor.c: 267:             right_135(l,r);
  4224   0017C0  C024  F01A         	movff	motor_action@l,right_135@mL
  4225   0017C4  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  4226   0017C8  C026  F01C         	movff	motor_action@r,right_135@mR
  4227   0017CC  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  4228   0017D0  EC3E  F018         	call	_right_135	;wreg free
  4229   0017D4                     
  4230                           ;../dc_motor.c: 268:             stop(l,r);
  4231   0017D4  C024  F01A         	movff	motor_action@l,stop@mL
  4232   0017D8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4233   0017DC  C026  F01C         	movff	motor_action@r,stop@mR
  4234   0017E0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4235   0017E4  ECD2  F019         	call	_stop	;wreg free
  4236   0017E8                     
  4237                           ;../dc_motor.c: 269:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4238   0017E8  0E29               	movlw	41
  4239   0017EA  6E29               	movwf	(??_motor_action+1)^0,c
  4240   0017EC  0E96               	movlw	150
  4241   0017EE  6E28               	movwf	??_motor_action^0,c
  4242   0017F0  0E7F               	movlw	127
  4243   0017F2                     u2907:
  4244   0017F2  2EE8               	decfsz	wreg,f,c
  4245   0017F4  D7FE               	bra	u2907
  4246   0017F6  2E28               	decfsz	??_motor_action^0,f,c
  4247   0017F8  D7FC               	bra	u2907
  4248   0017FA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4249   0017FC  D7FA               	bra	u2907
  4250   0017FE  F000               	nop	
  4251                           
  4252                           ;../dc_motor.c: 270:             right_135(l,r);
  4253   001800  C024  F01A         	movff	motor_action@l,right_135@mL
  4254   001804  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  4255   001808  C026  F01C         	movff	motor_action@r,right_135@mR
  4256   00180C  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  4257   001810  EC3E  F018         	call	_right_135	;wreg free
  4258                           
  4259                           ;../dc_motor.c: 271:             stop(l,r);
  4260   001814  C024  F01A         	movff	motor_action@l,stop@mL
  4261   001818  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4262   00181C  C026  F01C         	movff	motor_action@r,stop@mR
  4263   001820  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4264   001824  ECD2  F019         	call	_stop	;wreg free
  4265                           
  4266                           ;../dc_motor.c: 272:             break;
  4267   001828  EFEA  F00C         	goto	l350
  4268   00182C                     l3396:
  4269                           
  4270                           ;../dc_motor.c: 274:             reverse_fromcard(l,r);
  4271   00182C  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4272   001830  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4273   001834  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4274   001838  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4275   00183C  EC82  F019         	call	_reverse_fromcard	;wreg free
  4276                           
  4277                           ;../dc_motor.c: 275:             stop(l,r);
  4278   001840  C024  F01A         	movff	motor_action@l,stop@mL
  4279   001844  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4280   001848  C026  F01C         	movff	motor_action@r,stop@mR
  4281   00184C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4282   001850  ECD2  F019         	call	_stop	;wreg free
  4283   001854                     
  4284                           ;../dc_motor.c: 276:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4285   001854  0E29               	movlw	41
  4286   001856  6E29               	movwf	(??_motor_action+1)^0,c
  4287   001858  0E96               	movlw	150
  4288   00185A  6E28               	movwf	??_motor_action^0,c
  4289   00185C  0E7F               	movlw	127
  4290   00185E                     u2917:
  4291   00185E  2EE8               	decfsz	wreg,f,c
  4292   001860  D7FE               	bra	u2917
  4293   001862  2E28               	decfsz	??_motor_action^0,f,c
  4294   001864  D7FC               	bra	u2917
  4295   001866  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4296   001868  D7FA               	bra	u2917
  4297   00186A  F000               	nop	
  4298   00186C                     
  4299                           ;../dc_motor.c: 277:             left_135(l,r);
  4300   00186C  C024  F01A         	movff	motor_action@l,left_135@mL
  4301   001870  C025  F01B         	movff	motor_action@l+1,left_135@mL+1
  4302   001874  C026  F01C         	movff	motor_action@r,left_135@mR
  4303   001878  C027  F01D         	movff	motor_action@r+1,left_135@mR+1
  4304   00187C  ECE0  F018         	call	_left_135	;wreg free
  4305   001880  EFB4  F00B         	goto	l3384
  4306   001884                     l3404:
  4307                           
  4308                           ;../dc_motor.c: 281:             reverse_fromcard(l,r);
  4309   001884  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4310   001888  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4311   00188C  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4312   001890  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4313   001894  EC82  F019         	call	_reverse_fromcard	;wreg free
  4314                           
  4315                           ;../dc_motor.c: 282:             stop(l,r);
  4316   001898  C024  F01A         	movff	motor_action@l,stop@mL
  4317   00189C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4318   0018A0  C026  F01C         	movff	motor_action@r,stop@mR
  4319   0018A4  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4320   0018A8  ECD2  F019         	call	_stop	;wreg free
  4321   0018AC                     
  4322                           ;../dc_motor.c: 283:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4323   0018AC  0E29               	movlw	41
  4324   0018AE  6E29               	movwf	(??_motor_action+1)^0,c
  4325   0018B0  0E96               	movlw	150
  4326   0018B2  6E28               	movwf	??_motor_action^0,c
  4327   0018B4  0E7F               	movlw	127
  4328   0018B6                     u2927:
  4329   0018B6  2EE8               	decfsz	wreg,f,c
  4330   0018B8  D7FE               	bra	u2927
  4331   0018BA  2E28               	decfsz	??_motor_action^0,f,c
  4332   0018BC  D7FC               	bra	u2927
  4333   0018BE  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4334   0018C0  D7FA               	bra	u2927
  4335   0018C2  F000               	nop	
  4336   0018C4                     
  4337                           ;../dc_motor.c: 284:             left_90(l,r);
  4338   0018C4  C024  F01A         	movff	motor_action@l,left_90@mL
  4339   0018C8  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4340   0018CC  C026  F01C         	movff	motor_action@r,left_90@mR
  4341   0018D0  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4342   0018D4  EC9B  F017         	call	_left_90	;wreg free
  4343   0018D8                     
  4344                           ;../dc_motor.c: 285:             stop(l,r);
  4345   0018D8  C024  F01A         	movff	motor_action@l,stop@mL
  4346   0018DC  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4347   0018E0  C026  F01C         	movff	motor_action@r,stop@mR
  4348   0018E4  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4349   0018E8  ECD2  F019         	call	_stop	;wreg free
  4350   0018EC                     
  4351                           ;../dc_motor.c: 286:             _delay((unsigned long)((800)*(64000000/4000.0)));
  4352   0018EC  0E41               	movlw	65
  4353   0018EE  6E29               	movwf	(??_motor_action+1)^0,c
  4354   0018F0  0EF0               	movlw	240
  4355   0018F2  6E28               	movwf	??_motor_action^0,c
  4356   0018F4  0E33               	movlw	51
  4357   0018F6                     u2937:
  4358   0018F6  2EE8               	decfsz	wreg,f,c
  4359   0018F8  D7FE               	bra	u2937
  4360   0018FA  2E28               	decfsz	??_motor_action^0,f,c
  4361   0018FC  D7FC               	bra	u2937
  4362   0018FE  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4363   001900  D7FA               	bra	u2937
  4364   001902  F000               	nop	
  4365                           
  4366                           ;../dc_motor.c: 287:             left_90(l,r);
  4367   001904  C024  F01A         	movff	motor_action@l,left_90@mL
  4368   001908  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4369   00190C  C026  F01C         	movff	motor_action@r,left_90@mR
  4370   001910  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4371   001914  EC9B  F017         	call	_left_90	;wreg free
  4372                           
  4373                           ;../dc_motor.c: 288:             stop(l,r);
  4374   001918  C024  F01A         	movff	motor_action@l,stop@mL
  4375   00191C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4376   001920  C026  F01C         	movff	motor_action@r,stop@mR
  4377   001924  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4378   001928  ECD2  F019         	call	_stop	;wreg free
  4379   00192C                     l348:
  4380                           
  4381                           ;../dc_motor.c: 290:             stop(l,r);
  4382   00192C  C024  F01A         	movff	motor_action@l,stop@mL
  4383   001930  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4384   001934  C026  F01C         	movff	motor_action@r,stop@mR
  4385   001938  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4386   00193C  ECD2  F019         	call	_stop	;wreg free
  4387                           
  4388                           ;../dc_motor.c: 291:             forward(l,r);
  4389   001940  C024  F01A         	movff	motor_action@l,forward@mL
  4390   001944  C025  F01B         	movff	motor_action@l+1,forward@mL+1
  4391   001948  C026  F01C         	movff	motor_action@r,forward@mR
  4392   00194C  C027  F01D         	movff	motor_action@r+1,forward@mR+1
  4393   001950  EC31  F019         	call	_forward	;wreg free
  4394   001954                     
  4395                           ;../dc_motor.c: 292:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4396   001954  0E29               	movlw	41
  4397   001956  6E29               	movwf	(??_motor_action+1)^0,c
  4398   001958  0E96               	movlw	150
  4399   00195A  6E28               	movwf	??_motor_action^0,c
  4400   00195C  0E7F               	movlw	127
  4401   00195E                     u2947:
  4402   00195E  2EE8               	decfsz	wreg,f,c
  4403   001960  D7FE               	bra	u2947
  4404   001962  2E28               	decfsz	??_motor_action^0,f,c
  4405   001964  D7FC               	bra	u2947
  4406   001966  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4407   001968  D7FA               	bra	u2947
  4408   00196A  F000               	nop	
  4409   00196C  EFB4  F00B         	goto	l3384
  4410   001970                     l3420:
  4411   001970  C022  F028         	movff	motor_action@color,??_motor_action
  4412   001974  C023  F029         	movff	motor_action@color+1,??_motor_action+1
  4413                           
  4414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4415                           ; Switch size 1, requested type "simple"
  4416                           ; Number of cases is 1, Range of values is 0 to 0
  4417                           ; switch strategies available:
  4418                           ; Name         Instructions Cycles
  4419                           ; simple_byte            4     3 (average)
  4420                           ;	Chosen strategy is simple_byte
  4421   001978  5029               	movf	(??_motor_action+1)^0,w,c
  4422   00197A  0A00               	xorlw	0	; case 0
  4423   00197C  B4D8               	btfsc	status,2,c
  4424   00197E  EFC3  F00C         	goto	l3956
  4425   001982  EFEA  F00C         	goto	l350
  4426   001986                     l3956:
  4427                           
  4428                           ; Switch size 1, requested type "simple"
  4429                           ; Number of cases is 9, Range of values is 0 to 8
  4430                           ; switch strategies available:
  4431                           ; Name         Instructions Cycles
  4432                           ; simple_byte           28    15 (average)
  4433                           ;	Chosen strategy is simple_byte
  4434   001986  5028               	movf	??_motor_action^0,w,c
  4435   001988  0A00               	xorlw	0	; case 0
  4436   00198A  B4D8               	btfsc	status,2,c
  4437   00198C  EF96  F00C         	goto	l348
  4438   001990  0A01               	xorlw	1	; case 1
  4439   001992  B4D8               	btfsc	status,2,c
  4440   001994  EFC8  F00A         	goto	l3338
  4441   001998  0A03               	xorlw	3	; case 2
  4442   00199A  B4D8               	btfsc	status,2,c
  4443   00199C  EF1E  F00B         	goto	l3348
  4444   0019A0  0A01               	xorlw	1	; case 3
  4445   0019A2  B4D8               	btfsc	status,2,c
  4446   0019A4  EF1E  F00B         	goto	l3348
  4447   0019A8  0A07               	xorlw	7	; case 4
  4448   0019AA  B4D8               	btfsc	status,2,c
  4449   0019AC  EF74  F00B         	goto	l3368
  4450   0019B0  0A01               	xorlw	1	; case 5
  4451   0019B2  B4D8               	btfsc	status,2,c
  4452   0019B4  EF8A  F00B         	goto	l3378
  4453   0019B8  0A03               	xorlw	3	; case 6
  4454   0019BA  B4D8               	btfsc	status,2,c
  4455   0019BC  EFC0  F00B         	goto	l3386
  4456   0019C0  0A01               	xorlw	1	; case 7
  4457   0019C2  B4D8               	btfsc	status,2,c
  4458   0019C4  EF16  F00C         	goto	l3396
  4459   0019C8  0A0F               	xorlw	15	; case 8
  4460   0019CA  B4D8               	btfsc	status,2,c
  4461   0019CC  EF42  F00C         	goto	l3404
  4462   0019D0  EFEA  F00C         	goto	l350
  4463   0019D4                     l350:
  4464   0019D4  0012               	return		;funcret
  4465   0019D6                     __end_of_motor_action:
  4466                           	callstack 0
  4467                           
  4468 ;; *************** function _stop *****************
  4469 ;; Defined at:
  4470 ;;		line 61 in file "../dc_motor.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4473 ;;		 -> main@motorL(9), 
  4474 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4475 ;;		 -> main@motorR(9), 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  i               2   30[COMRAM] int 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;Total ram usage:        7 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 3
  4494 ;; This function calls:
  4495 ;;		_setMotorPWM
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;;		_motor_action
  4499 ;;		_motor_action_return
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text16
  4504   0033A4                     __ptext16:
  4505                           	callstack 0
  4506   0033A4                     _stop:
  4507                           	callstack 27
  4508   0033A4                     
  4509                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  4510   0033A4  EE20 F001          	lfsr	2,1
  4511   0033A8  501A               	movf	stop@mL^0,w,c
  4512   0033AA  26D9               	addwf	fsr2l,f,c
  4513   0033AC  501B               	movf	(stop@mL+1)^0,w,c
  4514   0033AE  22DA               	addwfc	fsr2h,f,c
  4515   0033B0  0E00               	movlw	0
  4516   0033B2  6EDF               	movwf	indf2,c
  4517                           
  4518                           ;../dc_motor.c: 64:     mR->direction = 0;
  4519   0033B4  EE20 F001          	lfsr	2,1
  4520   0033B8  501C               	movf	stop@mR^0,w,c
  4521   0033BA  26D9               	addwf	fsr2l,f,c
  4522   0033BC  501D               	movf	(stop@mR+1)^0,w,c
  4523   0033BE  22DA               	addwfc	fsr2h,f,c
  4524   0033C0  0E00               	movlw	0
  4525   0033C2  6EDF               	movwf	indf2,c
  4526   0033C4                     
  4527                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  4528   0033C4  0E00               	movlw	0
  4529   0033C6  6E20               	movwf	(stop@i+1)^0,c
  4530   0033C8  0E05               	movlw	5
  4531   0033CA  6E1F               	movwf	stop@i^0,c
  4532   0033CC                     l2948:
  4533                           
  4534                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  4535   0033CC  C01A  FFD9         	movff	stop@mL,fsr2l
  4536   0033D0  C01B  FFDA         	movff	stop@mL+1,fsr2h
  4537   0033D4  C01F  FFDF         	movff	stop@i,indf2
  4538                           
  4539                           ;../dc_motor.c: 68:         mR->power = i;
  4540   0033D8  C01C  FFD9         	movff	stop@mR,fsr2l
  4541   0033DC  C01D  FFDA         	movff	stop@mR+1,fsr2h
  4542   0033E0  C01F  FFDF         	movff	stop@i,indf2
  4543   0033E4                     
  4544                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  4545   0033E4  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  4546   0033E8  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  4547   0033EC  EC31  F011         	call	_setMotorPWM	;wreg free
  4548   0033F0                     
  4549                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  4550   0033F0  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  4551   0033F4  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  4552   0033F8  EC31  F011         	call	_setMotorPWM	;wreg free
  4553   0033FC                     
  4554                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  4555   0033FC  0ED0               	movlw	208
  4556   0033FE  6E1E               	movwf	??_stop^0,c
  4557   003400  0ECA               	movlw	202
  4558   003402                     u2957:
  4559   003402  2EE8               	decfsz	wreg,f,c
  4560   003404  D7FE               	bra	u2957
  4561   003406  2E1E               	decfsz	??_stop^0,f,c
  4562   003408  D7FC               	bra	u2957
  4563   00340A                     
  4564                           ;../dc_motor.c: 72:     }
  4565   00340A  0EFF               	movlw	255
  4566   00340C  241F               	addwf	stop@i^0,w,c
  4567   00340E  6E1F               	movwf	stop@i^0,c
  4568   003410  0EFF               	movlw	255
  4569   003412  2020               	addwfc	(stop@i+1)^0,w,c
  4570   003414  6E20               	movwf	(stop@i+1)^0,c
  4571   003416  BE20               	btfsc	(stop@i+1)^0,7,c
  4572   003418  EF18  F01A         	goto	u1870
  4573   00341C  5020               	movf	(stop@i+1)^0,w,c
  4574   00341E  E106               	bnz	u1871
  4575   003420  041F               	decf	stop@i^0,w,c
  4576   003422  B0D8               	btfsc	status,0,c
  4577   003424  EF16  F01A         	goto	u1871
  4578   003428  EF18  F01A         	goto	u1870
  4579   00342C                     u1871:
  4580   00342C  EFE6  F019         	goto	l2948
  4581   003430                     u1870:
  4582   003430  0012               	return		;funcret
  4583   003432                     __end_of_stop:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function _right_90 *****************
  4587 ;; Defined at:
  4588 ;;		line 137 in file "../dc_motor.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4591 ;;		 -> main@motorL(9), 
  4592 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4593 ;;		 -> main@motorR(9), 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  i               2   31[COMRAM] int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;Total ram usage:        8 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 3
  4612 ;; This function calls:
  4613 ;;		_setMotorPWM
  4614 ;; This function is called by:
  4615 ;;		_motor_action
  4616 ;;		_motor_action_return
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text17
  4621   002E92                     __ptext17:
  4622                           	callstack 0
  4623   002E92                     _right_90:
  4624                           	callstack 26
  4625   002E92                     
  4626                           ;../dc_motor.c: 137: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 138: {;../dc_motor.c: 139:     mL->direction = 1;
  4627   002E92  EE20 F001          	lfsr	2,1
  4628   002E96  501A               	movf	right_90@mL^0,w,c
  4629   002E98  26D9               	addwf	fsr2l,f,c
  4630   002E9A  501B               	movf	(right_90@mL+1)^0,w,c
  4631   002E9C  22DA               	addwfc	fsr2h,f,c
  4632   002E9E  0E01               	movlw	1
  4633   002EA0  6EDF               	movwf	indf2,c
  4634                           
  4635                           ;../dc_motor.c: 140:     mR->direction = 0;
  4636   002EA2  EE20 F001          	lfsr	2,1
  4637   002EA6  501C               	movf	right_90@mR^0,w,c
  4638   002EA8  26D9               	addwf	fsr2l,f,c
  4639   002EAA  501D               	movf	(right_90@mR+1)^0,w,c
  4640   002EAC  22DA               	addwfc	fsr2h,f,c
  4641   002EAE  0E00               	movlw	0
  4642   002EB0  6EDF               	movwf	indf2,c
  4643   002EB2                     
  4644                           ;../dc_motor.c: 141:     for (int i = 0;i<251;i = i + 2)
  4645   002EB2  0E00               	movlw	0
  4646   002EB4  6E21               	movwf	(right_90@i+1)^0,c
  4647   002EB6  0E00               	movlw	0
  4648   002EB8  6E20               	movwf	right_90@i^0,c
  4649   002EBA                     l3034:
  4650                           
  4651                           ;../dc_motor.c: 142:     {;../dc_motor.c: 143:         mL->power = i;
  4652   002EBA  C01A  FFD9         	movff	right_90@mL,fsr2l
  4653   002EBE  C01B  FFDA         	movff	right_90@mL+1,fsr2h
  4654   002EC2  C020  FFDF         	movff	right_90@i,indf2
  4655   002EC6                     
  4656                           ;../dc_motor.c: 144:         mR->power = 50 + i;
  4657   002EC6  5020               	movf	right_90@i^0,w,c
  4658   002EC8  0F32               	addlw	50
  4659   002ECA  C01C  FFD9         	movff	right_90@mR,fsr2l
  4660   002ECE  C01D  FFDA         	movff	right_90@mR+1,fsr2h
  4661   002ED2  6EDF               	movwf	indf2,c
  4662   002ED4                     
  4663                           ;../dc_motor.c: 145:         setMotorPWM(mL);
  4664   002ED4  C01A  F00F         	movff	right_90@mL,setMotorPWM@m
  4665   002ED8  C01B  F010         	movff	right_90@mL+1,setMotorPWM@m+1
  4666   002EDC  EC31  F011         	call	_setMotorPWM	;wreg free
  4667   002EE0                     
  4668                           ;../dc_motor.c: 146:         setMotorPWM(mR);
  4669   002EE0  C01C  F00F         	movff	right_90@mR,setMotorPWM@m
  4670   002EE4  C01D  F010         	movff	right_90@mR+1,setMotorPWM@m+1
  4671   002EE8  EC31  F011         	call	_setMotorPWM	;wreg free
  4672   002EEC                     
  4673                           ;../dc_motor.c: 147:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4674   002EEC  0E35               	movlw	53
  4675   002EEE                     u2967:
  4676   002EEE  2EE8               	decfsz	wreg,f,c
  4677   002EF0  D7FE               	bra	u2967
  4678   002EF2  F000               	nop	
  4679   002EF4                     
  4680                           ;../dc_motor.c: 148:     }
  4681   002EF4  0E02               	movlw	2
  4682   002EF6  2420               	addwf	right_90@i^0,w,c
  4683   002EF8  6E20               	movwf	right_90@i^0,c
  4684   002EFA  0E00               	movlw	0
  4685   002EFC  2021               	addwfc	(right_90@i+1)^0,w,c
  4686   002EFE  6E21               	movwf	(right_90@i+1)^0,c
  4687   002F00  BE21               	btfsc	(right_90@i+1)^0,7,c
  4688   002F02  EF8C  F017         	goto	u1911
  4689   002F06  5021               	movf	(right_90@i+1)^0,w,c
  4690   002F08  E109               	bnz	u1910
  4691   002F0A  0EFB               	movlw	251
  4692   002F0C  5C20               	subwf	right_90@i^0,w,c
  4693   002F0E  A0D8               	btfss	status,0,c
  4694   002F10  EF8C  F017         	goto	u1911
  4695   002F14  EF8E  F017         	goto	u1910
  4696   002F18                     u1911:
  4697   002F18  EF5D  F017         	goto	l3034
  4698   002F1C                     u1910:
  4699   002F1C                     
  4700                           ;../dc_motor.c: 149:     _delay((unsigned long)((165)*(64000000/4000.0)));
  4701   002F1C  0E0E               	movlw	14
  4702   002F1E  6E1F               	movwf	(??_right_90+1)^0,c
  4703   002F20  0E65               	movlw	101
  4704   002F22  6E1E               	movwf	??_right_90^0,c
  4705   002F24  0E87               	movlw	135
  4706   002F26                     u2977:
  4707   002F26  2EE8               	decfsz	wreg,f,c
  4708   002F28  D7FE               	bra	u2977
  4709   002F2A  2E1E               	decfsz	??_right_90^0,f,c
  4710   002F2C  D7FC               	bra	u2977
  4711   002F2E  2E1F               	decfsz	(??_right_90+1)^0,f,c
  4712   002F30  D7FA               	bra	u2977
  4713   002F32  F000               	nop	
  4714   002F34  0012               	return		;funcret
  4715   002F36                     __end_of_right_90:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _right_135 *****************
  4719 ;; Defined at:
  4720 ;;		line 182 in file "../dc_motor.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4723 ;;		 -> main@motorL(9), 
  4724 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4725 ;;		 -> main@motorR(9), 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  i               2   31[COMRAM] int 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;Total ram usage:        8 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 3
  4744 ;; This function calls:
  4745 ;;		_setMotorPWM
  4746 ;; This function is called by:
  4747 ;;		_motor_action
  4748 ;;		_motor_action_return
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text18
  4753   00307C                     __ptext18:
  4754                           	callstack 0
  4755   00307C                     _right_135:
  4756                           	callstack 26
  4757   00307C                     
  4758                           ;../dc_motor.c: 182: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 183: {;../dc_motor.c: 184:     mL->direction = 1;
  4759   00307C  EE20 F001          	lfsr	2,1
  4760   003080  501A               	movf	right_135@mL^0,w,c
  4761   003082  26D9               	addwf	fsr2l,f,c
  4762   003084  501B               	movf	(right_135@mL+1)^0,w,c
  4763   003086  22DA               	addwfc	fsr2h,f,c
  4764   003088  0E01               	movlw	1
  4765   00308A  6EDF               	movwf	indf2,c
  4766                           
  4767                           ;../dc_motor.c: 185:     mR->direction = 0;
  4768   00308C  EE20 F001          	lfsr	2,1
  4769   003090  501C               	movf	right_135@mR^0,w,c
  4770   003092  26D9               	addwf	fsr2l,f,c
  4771   003094  501D               	movf	(right_135@mR+1)^0,w,c
  4772   003096  22DA               	addwfc	fsr2h,f,c
  4773   003098  0E00               	movlw	0
  4774   00309A  6EDF               	movwf	indf2,c
  4775   00309C                     
  4776                           ;../dc_motor.c: 186:     for (int i = 0;i<300;i = i + 2)
  4777   00309C  0E00               	movlw	0
  4778   00309E  6E21               	movwf	(right_135@i+1)^0,c
  4779   0030A0  0E00               	movlw	0
  4780   0030A2  6E20               	movwf	right_135@i^0,c
  4781   0030A4                     l3082:
  4782                           
  4783                           ;../dc_motor.c: 187:     {;../dc_motor.c: 188:         mL->power = i;
  4784   0030A4  C01A  FFD9         	movff	right_135@mL,fsr2l
  4785   0030A8  C01B  FFDA         	movff	right_135@mL+1,fsr2h
  4786   0030AC  C020  FFDF         	movff	right_135@i,indf2
  4787   0030B0                     
  4788                           ;../dc_motor.c: 189:         mR->power = 50 + i;
  4789   0030B0  5020               	movf	right_135@i^0,w,c
  4790   0030B2  0F32               	addlw	50
  4791   0030B4  C01C  FFD9         	movff	right_135@mR,fsr2l
  4792   0030B8  C01D  FFDA         	movff	right_135@mR+1,fsr2h
  4793   0030BC  6EDF               	movwf	indf2,c
  4794   0030BE                     
  4795                           ;../dc_motor.c: 190:         setMotorPWM(mL);
  4796   0030BE  C01A  F00F         	movff	right_135@mL,setMotorPWM@m
  4797   0030C2  C01B  F010         	movff	right_135@mL+1,setMotorPWM@m+1
  4798   0030C6  EC31  F011         	call	_setMotorPWM	;wreg free
  4799   0030CA                     
  4800                           ;../dc_motor.c: 191:         setMotorPWM(mR);
  4801   0030CA  C01C  F00F         	movff	right_135@mR,setMotorPWM@m
  4802   0030CE  C01D  F010         	movff	right_135@mR+1,setMotorPWM@m+1
  4803   0030D2  EC31  F011         	call	_setMotorPWM	;wreg free
  4804   0030D6                     
  4805                           ;../dc_motor.c: 192:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4806   0030D6  0E35               	movlw	53
  4807   0030D8                     u2987:
  4808   0030D8  2EE8               	decfsz	wreg,f,c
  4809   0030DA  D7FE               	bra	u2987
  4810   0030DC  F000               	nop	
  4811   0030DE                     
  4812                           ;../dc_motor.c: 193:     }
  4813   0030DE  0E02               	movlw	2
  4814   0030E0  2420               	addwf	right_135@i^0,w,c
  4815   0030E2  6E20               	movwf	right_135@i^0,c
  4816   0030E4  0E00               	movlw	0
  4817   0030E6  2021               	addwfc	(right_135@i+1)^0,w,c
  4818   0030E8  6E21               	movwf	(right_135@i+1)^0,c
  4819   0030EA  BE21               	btfsc	(right_135@i+1)^0,7,c
  4820   0030EC  EF81  F018         	goto	u1931
  4821   0030F0  0E2C               	movlw	44
  4822   0030F2  5C20               	subwf	right_135@i^0,w,c
  4823   0030F4  0E01               	movlw	1
  4824   0030F6  5821               	subwfb	(right_135@i+1)^0,w,c
  4825   0030F8  A0D8               	btfss	status,0,c
  4826   0030FA  EF81  F018         	goto	u1931
  4827   0030FE  EF83  F018         	goto	u1930
  4828   003102                     u1931:
  4829   003102  EF52  F018         	goto	l3082
  4830   003106                     u1930:
  4831   003106                     
  4832                           ;../dc_motor.c: 194:     _delay((unsigned long)((230)*(64000000/4000.0)));
  4833   003106  0E13               	movlw	19
  4834   003108  6E1F               	movwf	(??_right_135+1)^0,c
  4835   00310A  0EAC               	movlw	172
  4836   00310C  6E1E               	movwf	??_right_135^0,c
  4837   00310E  0E2A               	movlw	42
  4838   003110                     u2997:
  4839   003110  2EE8               	decfsz	wreg,f,c
  4840   003112  D7FE               	bra	u2997
  4841   003114  2E1E               	decfsz	??_right_135^0,f,c
  4842   003116  D7FC               	bra	u2997
  4843   003118  2E1F               	decfsz	(??_right_135+1)^0,f,c
  4844   00311A  D7FA               	bra	u2997
  4845   00311C  0012               	return		;funcret
  4846   00311E                     __end_of_right_135:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _reverse_onesquare *****************
  4850 ;; Defined at:
  4851 ;;		line 122 in file "../dc_motor.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4854 ;;		 -> main@motorL(9), 
  4855 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4856 ;;		 -> main@motorR(9), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  i               2   31[COMRAM] int 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;Total ram usage:        8 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 3
  4875 ;; This function calls:
  4876 ;;		_setMotorPWM
  4877 ;; This function is called by:
  4878 ;;		_motor_action
  4879 ;;		_motor_action_return
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text19
  4884   00311E                     __ptext19:
  4885                           	callstack 0
  4886   00311E                     _reverse_onesquare:
  4887                           	callstack 26
  4888   00311E                     
  4889                           ;../dc_motor.c: 122: void reverse_onesquare (struct DC_motor *mL, struct DC_motor *mR);.
      +                          ./dc_motor.c: 123: {;../dc_motor.c: 124:     mL->direction = 0;
  4890   00311E  EE20 F001          	lfsr	2,1
  4891   003122  501A               	movf	reverse_onesquare@mL^0,w,c
  4892   003124  26D9               	addwf	fsr2l,f,c
  4893   003126  501B               	movf	(reverse_onesquare@mL+1)^0,w,c
  4894   003128  22DA               	addwfc	fsr2h,f,c
  4895   00312A  0E00               	movlw	0
  4896   00312C  6EDF               	movwf	indf2,c
  4897                           
  4898                           ;../dc_motor.c: 125:     mR->direction = 0;
  4899   00312E  EE20 F001          	lfsr	2,1
  4900   003132  501C               	movf	reverse_onesquare@mR^0,w,c
  4901   003134  26D9               	addwf	fsr2l,f,c
  4902   003136  501D               	movf	(reverse_onesquare@mR+1)^0,w,c
  4903   003138  22DA               	addwfc	fsr2h,f,c
  4904   00313A  0E00               	movlw	0
  4905   00313C  6EDF               	movwf	indf2,c
  4906   00313E                     
  4907                           ;../dc_motor.c: 126:     for (int i=0;i<9;i=i + 2)
  4908   00313E  0E00               	movlw	0
  4909   003140  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  4910   003142  0E00               	movlw	0
  4911   003144  6E20               	movwf	reverse_onesquare@i^0,c
  4912   003146                     l3012:
  4913                           
  4914                           ;../dc_motor.c: 127:     {;../dc_motor.c: 128:         mL->power = i;
  4915   003146  C01A  FFD9         	movff	reverse_onesquare@mL,fsr2l
  4916   00314A  C01B  FFDA         	movff	reverse_onesquare@mL+1,fsr2h
  4917   00314E  C020  FFDF         	movff	reverse_onesquare@i,indf2
  4918                           
  4919                           ;../dc_motor.c: 129:         mR->power = i;
  4920   003152  C01C  FFD9         	movff	reverse_onesquare@mR,fsr2l
  4921   003156  C01D  FFDA         	movff	reverse_onesquare@mR+1,fsr2h
  4922   00315A  C020  FFDF         	movff	reverse_onesquare@i,indf2
  4923   00315E                     
  4924                           ;../dc_motor.c: 130:         setMotorPWM(mL);
  4925   00315E  C01A  F00F         	movff	reverse_onesquare@mL,setMotorPWM@m
  4926   003162  C01B  F010         	movff	reverse_onesquare@mL+1,setMotorPWM@m+1
  4927   003166  EC31  F011         	call	_setMotorPWM	;wreg free
  4928   00316A                     
  4929                           ;../dc_motor.c: 131:         setMotorPWM(mR);
  4930   00316A  C01C  F00F         	movff	reverse_onesquare@mR,setMotorPWM@m
  4931   00316E  C01D  F010         	movff	reverse_onesquare@mR+1,setMotorPWM@m+1
  4932   003172  EC31  F011         	call	_setMotorPWM	;wreg free
  4933   003176                     
  4934                           ;../dc_motor.c: 132:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4935   003176  0E35               	movlw	53
  4936   003178                     u3007:
  4937   003178  2EE8               	decfsz	wreg,f,c
  4938   00317A  D7FE               	bra	u3007
  4939   00317C  F000               	nop	
  4940   00317E                     
  4941                           ;../dc_motor.c: 133:     }
  4942   00317E  0E02               	movlw	2
  4943   003180  2420               	addwf	reverse_onesquare@i^0,w,c
  4944   003182  6E20               	movwf	reverse_onesquare@i^0,c
  4945   003184  0E00               	movlw	0
  4946   003186  2021               	addwfc	(reverse_onesquare@i+1)^0,w,c
  4947   003188  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  4948   00318A  BE21               	btfsc	(reverse_onesquare@i+1)^0,7,c
  4949   00318C  EFD1  F018         	goto	u1901
  4950   003190  5021               	movf	(reverse_onesquare@i+1)^0,w,c
  4951   003192  E109               	bnz	u1900
  4952   003194  0E09               	movlw	9
  4953   003196  5C20               	subwf	reverse_onesquare@i^0,w,c
  4954   003198  A0D8               	btfss	status,0,c
  4955   00319A  EFD1  F018         	goto	u1901
  4956   00319E  EFD3  F018         	goto	u1900
  4957   0031A2                     u1901:
  4958   0031A2  EFA3  F018         	goto	l3012
  4959   0031A6                     u1900:
  4960   0031A6                     
  4961                           ;../dc_motor.c: 134:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  4962   0031A6  0E5A               	movlw	90
  4963   0031A8  6E1F               	movwf	(??_reverse_onesquare+1)^0,c
  4964   0031AA  0E49               	movlw	73
  4965   0031AC  6E1E               	movwf	??_reverse_onesquare^0,c
  4966   0031AE  0EE7               	movlw	231
  4967   0031B0                     u3017:
  4968   0031B0  2EE8               	decfsz	wreg,f,c
  4969   0031B2  D7FE               	bra	u3017
  4970   0031B4  2E1E               	decfsz	??_reverse_onesquare^0,f,c
  4971   0031B6  D7FC               	bra	u3017
  4972   0031B8  2E1F               	decfsz	(??_reverse_onesquare+1)^0,f,c
  4973   0031BA  D7FA               	bra	u3017
  4974   0031BC  F000               	nop	
  4975   0031BE  0012               	return		;funcret
  4976   0031C0                     __end_of_reverse_onesquare:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function _reverse_fromcard *****************
  4980 ;; Defined at:
  4981 ;;		line 107 in file "../dc_motor.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4984 ;;		 -> main@motorL(9), 
  4985 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4986 ;;		 -> main@motorR(9), 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  i               2   31[COMRAM] int 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;Total ram usage:        8 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 3
  5005 ;; This function calls:
  5006 ;;		_setMotorPWM
  5007 ;; This function is called by:
  5008 ;;		_motor_action
  5009 ;;		_motor_action_return
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text20
  5014   003304                     __ptext20:
  5015                           	callstack 0
  5016   003304                     _reverse_fromcard:
  5017                           	callstack 26
  5018   003304                     
  5019                           ;../dc_motor.c: 107: void reverse_fromcard (struct DC_motor *mL, struct DC_motor *mR);..
      +                          /dc_motor.c: 108: {;../dc_motor.c: 109:     mL->direction = 0;
  5020   003304  EE20 F001          	lfsr	2,1
  5021   003308  501A               	movf	reverse_fromcard@mL^0,w,c
  5022   00330A  26D9               	addwf	fsr2l,f,c
  5023   00330C  501B               	movf	(reverse_fromcard@mL+1)^0,w,c
  5024   00330E  22DA               	addwfc	fsr2h,f,c
  5025   003310  0E00               	movlw	0
  5026   003312  6EDF               	movwf	indf2,c
  5027                           
  5028                           ;../dc_motor.c: 110:     mR->direction = 0;
  5029   003314  EE20 F001          	lfsr	2,1
  5030   003318  501C               	movf	reverse_fromcard@mR^0,w,c
  5031   00331A  26D9               	addwf	fsr2l,f,c
  5032   00331C  501D               	movf	(reverse_fromcard@mR+1)^0,w,c
  5033   00331E  22DA               	addwfc	fsr2h,f,c
  5034   003320  0E00               	movlw	0
  5035   003322  6EDF               	movwf	indf2,c
  5036   003324                     
  5037                           ;../dc_motor.c: 111:     for (int i = 0;i < 9;i = i + 2)
  5038   003324  0E00               	movlw	0
  5039   003326  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  5040   003328  0E00               	movlw	0
  5041   00332A  6E20               	movwf	reverse_fromcard@i^0,c
  5042   00332C                     l2990:
  5043                           
  5044                           ;../dc_motor.c: 112:     {;../dc_motor.c: 113:         mL->power = i;
  5045   00332C  C01A  FFD9         	movff	reverse_fromcard@mL,fsr2l
  5046   003330  C01B  FFDA         	movff	reverse_fromcard@mL+1,fsr2h
  5047   003334  C020  FFDF         	movff	reverse_fromcard@i,indf2
  5048                           
  5049                           ;../dc_motor.c: 114:         mR->power = i;
  5050   003338  C01C  FFD9         	movff	reverse_fromcard@mR,fsr2l
  5051   00333C  C01D  FFDA         	movff	reverse_fromcard@mR+1,fsr2h
  5052   003340  C020  FFDF         	movff	reverse_fromcard@i,indf2
  5053   003344                     
  5054                           ;../dc_motor.c: 115:         setMotorPWM(mL);
  5055   003344  C01A  F00F         	movff	reverse_fromcard@mL,setMotorPWM@m
  5056   003348  C01B  F010         	movff	reverse_fromcard@mL+1,setMotorPWM@m+1
  5057   00334C  EC31  F011         	call	_setMotorPWM	;wreg free
  5058   003350                     
  5059                           ;../dc_motor.c: 116:         setMotorPWM(mR);
  5060   003350  C01C  F00F         	movff	reverse_fromcard@mR,setMotorPWM@m
  5061   003354  C01D  F010         	movff	reverse_fromcard@mR+1,setMotorPWM@m+1
  5062   003358  EC31  F011         	call	_setMotorPWM	;wreg free
  5063   00335C                     
  5064                           ;../dc_motor.c: 117:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5065   00335C  0E35               	movlw	53
  5066   00335E                     u3027:
  5067   00335E  2EE8               	decfsz	wreg,f,c
  5068   003360  D7FE               	bra	u3027
  5069   003362  F000               	nop	
  5070   003364                     
  5071                           ;../dc_motor.c: 118:     }
  5072   003364  0E02               	movlw	2
  5073   003366  2420               	addwf	reverse_fromcard@i^0,w,c
  5074   003368  6E20               	movwf	reverse_fromcard@i^0,c
  5075   00336A  0E00               	movlw	0
  5076   00336C  2021               	addwfc	(reverse_fromcard@i+1)^0,w,c
  5077   00336E  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  5078   003370  BE21               	btfsc	(reverse_fromcard@i+1)^0,7,c
  5079   003372  EFC4  F019         	goto	u1891
  5080   003376  5021               	movf	(reverse_fromcard@i+1)^0,w,c
  5081   003378  E109               	bnz	u1890
  5082   00337A  0E09               	movlw	9
  5083   00337C  5C20               	subwf	reverse_fromcard@i^0,w,c
  5084   00337E  A0D8               	btfss	status,0,c
  5085   003380  EFC4  F019         	goto	u1891
  5086   003384  EFC6  F019         	goto	u1890
  5087   003388                     u1891:
  5088   003388  EF96  F019         	goto	l2990
  5089   00338C                     u1890:
  5090   00338C                     
  5091                           ;../dc_motor.c: 119:     _delay((unsigned long)((300)*(64000000/4000.0)));
  5092   00338C  0E19               	movlw	25
  5093   00338E  6E1F               	movwf	(??_reverse_fromcard+1)^0,c
  5094   003390  0E5A               	movlw	90
  5095   003392  6E1E               	movwf	??_reverse_fromcard^0,c
  5096   003394  0EB2               	movlw	178
  5097   003396                     u3037:
  5098   003396  2EE8               	decfsz	wreg,f,c
  5099   003398  D7FE               	bra	u3037
  5100   00339A  2E1E               	decfsz	??_reverse_fromcard^0,f,c
  5101   00339C  D7FC               	bra	u3037
  5102   00339E  2E1F               	decfsz	(??_reverse_fromcard+1)^0,f,c
  5103   0033A0  D7FA               	bra	u3037
  5104   0033A2  0012               	return		;funcret
  5105   0033A4                     __end_of_reverse_fromcard:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _left_90 *****************
  5109 ;; Defined at:
  5110 ;;		line 152 in file "../dc_motor.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5113 ;;		 -> main@motorL(9), 
  5114 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5115 ;;		 -> main@motorR(9), 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  i               2   31[COMRAM] int 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;Total ram usage:        8 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; Hardware stack levels required when called: 3
  5134 ;; This function calls:
  5135 ;;		_setMotorPWM
  5136 ;; This function is called by:
  5137 ;;		_motor_action
  5138 ;;		_motor_action_return
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text21
  5143   002F36                     __ptext21:
  5144                           	callstack 0
  5145   002F36                     _left_90:
  5146                           	callstack 26
  5147   002F36                     
  5148                           ;../dc_motor.c: 152: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 153: {;../dc_motor.c: 154:     mL->direction = 0;
  5149   002F36  EE20 F001          	lfsr	2,1
  5150   002F3A  501A               	movf	left_90@mL^0,w,c
  5151   002F3C  26D9               	addwf	fsr2l,f,c
  5152   002F3E  501B               	movf	(left_90@mL+1)^0,w,c
  5153   002F40  22DA               	addwfc	fsr2h,f,c
  5154   002F42  0E00               	movlw	0
  5155   002F44  6EDF               	movwf	indf2,c
  5156                           
  5157                           ;../dc_motor.c: 155:     mR->direction = 1;
  5158   002F46  EE20 F001          	lfsr	2,1
  5159   002F4A  501C               	movf	left_90@mR^0,w,c
  5160   002F4C  26D9               	addwf	fsr2l,f,c
  5161   002F4E  501D               	movf	(left_90@mR+1)^0,w,c
  5162   002F50  22DA               	addwfc	fsr2h,f,c
  5163   002F52  0E01               	movlw	1
  5164   002F54  6EDF               	movwf	indf2,c
  5165   002F56                     
  5166                           ;../dc_motor.c: 156:     for (int i = 0;i<301;i = i + 2)
  5167   002F56  0E00               	movlw	0
  5168   002F58  6E21               	movwf	(left_90@i+1)^0,c
  5169   002F5A  0E00               	movlw	0
  5170   002F5C  6E20               	movwf	left_90@i^0,c
  5171   002F5E                     l3058:
  5172                           
  5173                           ;../dc_motor.c: 157:     {;../dc_motor.c: 158:         mL->power = 50 + i;
  5174   002F5E  5020               	movf	left_90@i^0,w,c
  5175   002F60  0F32               	addlw	50
  5176   002F62  C01A  FFD9         	movff	left_90@mL,fsr2l
  5177   002F66  C01B  FFDA         	movff	left_90@mL+1,fsr2h
  5178   002F6A  6EDF               	movwf	indf2,c
  5179   002F6C                     
  5180                           ;../dc_motor.c: 159:         mR->power = i;
  5181   002F6C  C01C  FFD9         	movff	left_90@mR,fsr2l
  5182   002F70  C01D  FFDA         	movff	left_90@mR+1,fsr2h
  5183   002F74  C020  FFDF         	movff	left_90@i,indf2
  5184   002F78                     
  5185                           ;../dc_motor.c: 160:         setMotorPWM(mL);
  5186   002F78  C01A  F00F         	movff	left_90@mL,setMotorPWM@m
  5187   002F7C  C01B  F010         	movff	left_90@mL+1,setMotorPWM@m+1
  5188   002F80  EC31  F011         	call	_setMotorPWM	;wreg free
  5189   002F84                     
  5190                           ;../dc_motor.c: 161:         setMotorPWM(mR);
  5191   002F84  C01C  F00F         	movff	left_90@mR,setMotorPWM@m
  5192   002F88  C01D  F010         	movff	left_90@mR+1,setMotorPWM@m+1
  5193   002F8C  EC31  F011         	call	_setMotorPWM	;wreg free
  5194   002F90                     
  5195                           ;../dc_motor.c: 162:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5196   002F90  0E35               	movlw	53
  5197   002F92                     u3047:
  5198   002F92  2EE8               	decfsz	wreg,f,c
  5199   002F94  D7FE               	bra	u3047
  5200   002F96  F000               	nop	
  5201   002F98                     
  5202                           ;../dc_motor.c: 163:     }
  5203   002F98  0E02               	movlw	2
  5204   002F9A  2420               	addwf	left_90@i^0,w,c
  5205   002F9C  6E20               	movwf	left_90@i^0,c
  5206   002F9E  0E00               	movlw	0
  5207   002FA0  2021               	addwfc	(left_90@i+1)^0,w,c
  5208   002FA2  6E21               	movwf	(left_90@i+1)^0,c
  5209   002FA4  BE21               	btfsc	(left_90@i+1)^0,7,c
  5210   002FA6  EFDE  F017         	goto	u1921
  5211   002FAA  0E2D               	movlw	45
  5212   002FAC  5C20               	subwf	left_90@i^0,w,c
  5213   002FAE  0E01               	movlw	1
  5214   002FB0  5821               	subwfb	(left_90@i+1)^0,w,c
  5215   002FB2  A0D8               	btfss	status,0,c
  5216   002FB4  EFDE  F017         	goto	u1921
  5217   002FB8  EFE0  F017         	goto	u1920
  5218   002FBC                     u1921:
  5219   002FBC  EFAF  F017         	goto	l3058
  5220   002FC0                     u1920:
  5221   002FC0                     
  5222                           ;../dc_motor.c: 164:     _delay((unsigned long)((195)*(64000000/4000.0)));
  5223   002FC0  0E10               	movlw	16
  5224   002FC2  6E1F               	movwf	(??_left_90+1)^0,c
  5225   002FC4  0ED4               	movlw	212
  5226   002FC6  6E1E               	movwf	??_left_90^0,c
  5227   002FC8  0EE6               	movlw	230
  5228   002FCA                     u3057:
  5229   002FCA  2EE8               	decfsz	wreg,f,c
  5230   002FCC  D7FE               	bra	u3057
  5231   002FCE  2E1E               	decfsz	??_left_90^0,f,c
  5232   002FD0  D7FC               	bra	u3057
  5233   002FD2  2E1F               	decfsz	(??_left_90+1)^0,f,c
  5234   002FD4  D7FA               	bra	u3057
  5235   002FD6  D000               	nop2	
  5236   002FD8  0012               	return		;funcret
  5237   002FDA                     __end_of_left_90:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _left_135 *****************
  5241 ;; Defined at:
  5242 ;;		line 198 in file "../dc_motor.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5245 ;;		 -> main@motorL(9), 
  5246 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5247 ;;		 -> main@motorR(9), 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  i               2   31[COMRAM] int 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;Total ram usage:        8 bytes
  5264 ;; Hardware stack levels used: 1
  5265 ;; Hardware stack levels required when called: 3
  5266 ;; This function calls:
  5267 ;;		_setMotorPWM
  5268 ;; This function is called by:
  5269 ;;		_motor_action
  5270 ;;		_motor_action_return
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text22
  5275   0031C0                     __ptext22:
  5276                           	callstack 0
  5277   0031C0                     _left_135:
  5278                           	callstack 26
  5279   0031C0                     
  5280                           ;../dc_motor.c: 198: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 199: {;../dc_motor.c: 200:     mL->direction = 0;
  5281   0031C0  EE20 F001          	lfsr	2,1
  5282   0031C4  501A               	movf	left_135@mL^0,w,c
  5283   0031C6  26D9               	addwf	fsr2l,f,c
  5284   0031C8  501B               	movf	(left_135@mL+1)^0,w,c
  5285   0031CA  22DA               	addwfc	fsr2h,f,c
  5286   0031CC  0E00               	movlw	0
  5287   0031CE  6EDF               	movwf	indf2,c
  5288                           
  5289                           ;../dc_motor.c: 201:     mR->direction = 1;
  5290   0031D0  EE20 F001          	lfsr	2,1
  5291   0031D4  501C               	movf	left_135@mR^0,w,c
  5292   0031D6  26D9               	addwf	fsr2l,f,c
  5293   0031D8  501D               	movf	(left_135@mR+1)^0,w,c
  5294   0031DA  22DA               	addwfc	fsr2h,f,c
  5295   0031DC  0E01               	movlw	1
  5296   0031DE  6EDF               	movwf	indf2,c
  5297   0031E0                     
  5298                           ;../dc_motor.c: 202:     for (int i = 0;i<300;i = i + 2)
  5299   0031E0  0E00               	movlw	0
  5300   0031E2  6E21               	movwf	(left_135@i+1)^0,c
  5301   0031E4  0E00               	movlw	0
  5302   0031E6  6E20               	movwf	left_135@i^0,c
  5303   0031E8                     l3106:
  5304                           
  5305                           ;../dc_motor.c: 203:     {;../dc_motor.c: 204:         mL->power = 50 + i;
  5306   0031E8  5020               	movf	left_135@i^0,w,c
  5307   0031EA  0F32               	addlw	50
  5308   0031EC  C01A  FFD9         	movff	left_135@mL,fsr2l
  5309   0031F0  C01B  FFDA         	movff	left_135@mL+1,fsr2h
  5310   0031F4  6EDF               	movwf	indf2,c
  5311   0031F6                     
  5312                           ;../dc_motor.c: 205:         mR->power = i;
  5313   0031F6  C01C  FFD9         	movff	left_135@mR,fsr2l
  5314   0031FA  C01D  FFDA         	movff	left_135@mR+1,fsr2h
  5315   0031FE  C020  FFDF         	movff	left_135@i,indf2
  5316   003202                     
  5317                           ;../dc_motor.c: 206:         setMotorPWM(mL);
  5318   003202  C01A  F00F         	movff	left_135@mL,setMotorPWM@m
  5319   003206  C01B  F010         	movff	left_135@mL+1,setMotorPWM@m+1
  5320   00320A  EC31  F011         	call	_setMotorPWM	;wreg free
  5321   00320E                     
  5322                           ;../dc_motor.c: 207:         setMotorPWM(mR);
  5323   00320E  C01C  F00F         	movff	left_135@mR,setMotorPWM@m
  5324   003212  C01D  F010         	movff	left_135@mR+1,setMotorPWM@m+1
  5325   003216  EC31  F011         	call	_setMotorPWM	;wreg free
  5326   00321A                     
  5327                           ;../dc_motor.c: 208:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5328   00321A  0E35               	movlw	53
  5329   00321C                     u3067:
  5330   00321C  2EE8               	decfsz	wreg,f,c
  5331   00321E  D7FE               	bra	u3067
  5332   003220  F000               	nop	
  5333   003222                     
  5334                           ;../dc_motor.c: 209:     }
  5335   003222  0E02               	movlw	2
  5336   003224  2420               	addwf	left_135@i^0,w,c
  5337   003226  6E20               	movwf	left_135@i^0,c
  5338   003228  0E00               	movlw	0
  5339   00322A  2021               	addwfc	(left_135@i+1)^0,w,c
  5340   00322C  6E21               	movwf	(left_135@i+1)^0,c
  5341   00322E  BE21               	btfsc	(left_135@i+1)^0,7,c
  5342   003230  EF23  F019         	goto	u1941
  5343   003234  0E2C               	movlw	44
  5344   003236  5C20               	subwf	left_135@i^0,w,c
  5345   003238  0E01               	movlw	1
  5346   00323A  5821               	subwfb	(left_135@i+1)^0,w,c
  5347   00323C  A0D8               	btfss	status,0,c
  5348   00323E  EF23  F019         	goto	u1941
  5349   003242  EF25  F019         	goto	u1940
  5350   003246                     u1941:
  5351   003246  EFF4  F018         	goto	l3106
  5352   00324A                     u1940:
  5353   00324A                     
  5354                           ;../dc_motor.c: 210:     _delay((unsigned long)((290)*(64000000/4000.0)));
  5355   00324A  0E18               	movlw	24
  5356   00324C  6E1F               	movwf	(??_left_135+1)^0,c
  5357   00324E  0E8A               	movlw	138
  5358   003250  6E1E               	movwf	??_left_135^0,c
  5359   003252  0EE8               	movlw	232
  5360   003254                     u3077:
  5361   003254  2EE8               	decfsz	wreg,f,c
  5362   003256  D7FE               	bra	u3077
  5363   003258  2E1E               	decfsz	??_left_135^0,f,c
  5364   00325A  D7FC               	bra	u3077
  5365   00325C  2E1F               	decfsz	(??_left_135+1)^0,f,c
  5366   00325E  D7FA               	bra	u3077
  5367   003260  0012               	return		;funcret
  5368   003262                     __end_of_left_135:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _forward *****************
  5372 ;; Defined at:
  5373 ;;		line 77 in file "../dc_motor.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5376 ;;		 -> main@motorL(9), 
  5377 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5378 ;;		 -> main@motorR(9), 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  i               2   31[COMRAM] int 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      void 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;Total ram usage:        8 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; Hardware stack levels required when called: 3
  5397 ;; This function calls:
  5398 ;;		_setMotorPWM
  5399 ;; This function is called by:
  5400 ;;		_main
  5401 ;;		_motor_action
  5402 ;;		_motor_action_return
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text23
  5407   003262                     __ptext23:
  5408                           	callstack 0
  5409   003262                     _forward:
  5410                           	callstack 26
  5411   003262                     
  5412                           ;../dc_motor.c: 77: void forward(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c
      +                          : 78: {;../dc_motor.c: 79:     mL->direction = 1;
  5413   003262  EE20 F001          	lfsr	2,1
  5414   003266  501A               	movf	forward@mL^0,w,c
  5415   003268  26D9               	addwf	fsr2l,f,c
  5416   00326A  501B               	movf	(forward@mL+1)^0,w,c
  5417   00326C  22DA               	addwfc	fsr2h,f,c
  5418   00326E  0E01               	movlw	1
  5419   003270  6EDF               	movwf	indf2,c
  5420                           
  5421                           ;../dc_motor.c: 80:     mR->direction = 1;
  5422   003272  EE20 F001          	lfsr	2,1
  5423   003276  501C               	movf	forward@mR^0,w,c
  5424   003278  26D9               	addwf	fsr2l,f,c
  5425   00327A  501D               	movf	(forward@mR+1)^0,w,c
  5426   00327C  22DA               	addwfc	fsr2h,f,c
  5427   00327E  0E01               	movlw	1
  5428   003280  6EDF               	movwf	indf2,c
  5429   003282                     
  5430                           ;../dc_motor.c: 81:     for (int i = 0;i < 101;i = i + 2)
  5431   003282  0E00               	movlw	0
  5432   003284  6E21               	movwf	(forward@i+1)^0,c
  5433   003286  0E00               	movlw	0
  5434   003288  6E20               	movwf	forward@i^0,c
  5435   00328A                     l2968:
  5436                           
  5437                           ;../dc_motor.c: 82:     {;../dc_motor.c: 83:         mL->power = i;
  5438   00328A  C01A  FFD9         	movff	forward@mL,fsr2l
  5439   00328E  C01B  FFDA         	movff	forward@mL+1,fsr2h
  5440   003292  C020  FFDF         	movff	forward@i,indf2
  5441                           
  5442                           ;../dc_motor.c: 84:         mR->power = i;
  5443   003296  C01C  FFD9         	movff	forward@mR,fsr2l
  5444   00329A  C01D  FFDA         	movff	forward@mR+1,fsr2h
  5445   00329E  C020  FFDF         	movff	forward@i,indf2
  5446   0032A2                     
  5447                           ;../dc_motor.c: 85:         setMotorPWM(mL);
  5448   0032A2  C01A  F00F         	movff	forward@mL,setMotorPWM@m
  5449   0032A6  C01B  F010         	movff	forward@mL+1,setMotorPWM@m+1
  5450   0032AA  EC31  F011         	call	_setMotorPWM	;wreg free
  5451   0032AE                     
  5452                           ;../dc_motor.c: 86:         setMotorPWM(mR);
  5453   0032AE  C01C  F00F         	movff	forward@mR,setMotorPWM@m
  5454   0032B2  C01D  F010         	movff	forward@mR+1,setMotorPWM@m+1
  5455   0032B6  EC31  F011         	call	_setMotorPWM	;wreg free
  5456   0032BA                     
  5457                           ;../dc_motor.c: 87:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5458   0032BA  0E35               	movlw	53
  5459   0032BC                     u3087:
  5460   0032BC  2EE8               	decfsz	wreg,f,c
  5461   0032BE  D7FE               	bra	u3087
  5462   0032C0  F000               	nop	
  5463   0032C2                     
  5464                           ;../dc_motor.c: 88:     }
  5465   0032C2  0E02               	movlw	2
  5466   0032C4  2420               	addwf	forward@i^0,w,c
  5467   0032C6  6E20               	movwf	forward@i^0,c
  5468   0032C8  0E00               	movlw	0
  5469   0032CA  2021               	addwfc	(forward@i+1)^0,w,c
  5470   0032CC  6E21               	movwf	(forward@i+1)^0,c
  5471   0032CE  BE21               	btfsc	(forward@i+1)^0,7,c
  5472   0032D0  EF73  F019         	goto	u1881
  5473   0032D4  5021               	movf	(forward@i+1)^0,w,c
  5474   0032D6  E109               	bnz	u1880
  5475   0032D8  0E65               	movlw	101
  5476   0032DA  5C20               	subwf	forward@i^0,w,c
  5477   0032DC  A0D8               	btfss	status,0,c
  5478   0032DE  EF73  F019         	goto	u1881
  5479   0032E2  EF75  F019         	goto	u1880
  5480   0032E6                     u1881:
  5481   0032E6  EF45  F019         	goto	l2968
  5482   0032EA                     u1880:
  5483   0032EA                     
  5484                           ;../dc_motor.c: 89:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5485   0032EA  0E29               	movlw	41
  5486   0032EC  6E1F               	movwf	(??_forward+1)^0,c
  5487   0032EE  0E96               	movlw	150
  5488   0032F0  6E1E               	movwf	??_forward^0,c
  5489   0032F2  0E7F               	movlw	127
  5490   0032F4                     u3097:
  5491   0032F4  2EE8               	decfsz	wreg,f,c
  5492   0032F6  D7FE               	bra	u3097
  5493   0032F8  2E1E               	decfsz	??_forward^0,f,c
  5494   0032FA  D7FC               	bra	u3097
  5495   0032FC  2E1F               	decfsz	(??_forward+1)^0,f,c
  5496   0032FE  D7FA               	bra	u3097
  5497   003300  F000               	nop	
  5498   003302  0012               	return		;funcret
  5499   003304                     __end_of_forward:
  5500                           	callstack 0
  5501                           
  5502 ;; *************** function _setMotorPWM *****************
  5503 ;; Defined at:
  5504 ;;		line 38 in file "../dc_motor.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  m               2   14[COMRAM] PTR struct DC_motor
  5507 ;;		 -> main@motorR(9), main@motorL(9), 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  PWMduty         2   23[COMRAM] int 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      void 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5522 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5523 ;;Total ram usage:       11 bytes
  5524 ;; Hardware stack levels used: 1
  5525 ;; Hardware stack levels required when called: 2
  5526 ;; This function calls:
  5527 ;;		___awdiv
  5528 ;;		___wmul
  5529 ;; This function is called by:
  5530 ;;		_main
  5531 ;;		_stop
  5532 ;;		_forward
  5533 ;;		_reverse_fromcard
  5534 ;;		_reverse_onesquare
  5535 ;;		_right_90
  5536 ;;		_left_90
  5537 ;;		_spin_180
  5538 ;;		_right_135
  5539 ;;		_left_135
  5540 ;;		_opposite_forward
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text24
  5545   002262                     __ptext24:
  5546                           	callstack 0
  5547   002262                     _setMotorPWM:
  5548                           	callstack 27
  5549   002262                     
  5550                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  5551   002262  EE20 F001          	lfsr	2,1
  5552   002266  500F               	movf	setMotorPWM@m^0,w,c
  5553   002268  26D9               	addwf	fsr2l,f,c
  5554   00226A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5555   00226C  22DA               	addwfc	fsr2h,f,c
  5556   00226E  50DF               	movf	indf2,w,c
  5557   002270  B4D8               	btfsc	status,2,c
  5558   002272  EF3D  F011         	goto	u1801
  5559   002276  EF3F  F011         	goto	u1800
  5560   00227A                     u1801:
  5561   00227A  EF70  F011         	goto	l2862
  5562   00227E                     u1800:
  5563   00227E                     
  5564                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  5565   00227E  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5566   002282  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5567   002286  50DF               	movf	indf2,w,c
  5568   002288  6E11               	movwf	??_setMotorPWM^0,c
  5569   00228A  5011               	movf	??_setMotorPWM^0,w,c
  5570   00228C  6E01               	movwf	___wmul@multiplier^0,c
  5571   00228E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  5572   002290  EE20 F007          	lfsr	2,7
  5573   002294  500F               	movf	setMotorPWM@m^0,w,c
  5574   002296  26D9               	addwf	fsr2l,f,c
  5575   002298  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5576   00229A  22DA               	addwfc	fsr2h,f,c
  5577   00229C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  5578   0022A0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  5579   0022A4  EC55  F01C         	call	___wmul	;wreg free
  5580   0022A8  C001  F007         	movff	?___wmul,___awdiv@dividend
  5581   0022AC  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5582   0022B0  0E00               	movlw	0
  5583   0022B2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5584   0022B4  0E64               	movlw	100
  5585   0022B6  6E09               	movwf	___awdiv@divisor^0,c
  5586   0022B8  EC94  F016         	call	___awdiv	;wreg free
  5587   0022BC  EE20 F007          	lfsr	2,7
  5588   0022C0  500F               	movf	setMotorPWM@m^0,w,c
  5589   0022C2  26D9               	addwf	fsr2l,f,c
  5590   0022C4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5591   0022C6  22DA               	addwfc	fsr2h,f,c
  5592   0022C8  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  5593   0022CC  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  5594   0022D0  5007               	movf	?___awdiv^0,w,c
  5595   0022D2  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  5596   0022D4  6E18               	movwf	setMotorPWM@PWMduty^0,c
  5597   0022D6  5008               	movf	(?___awdiv+1)^0,w,c
  5598   0022D8  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  5599   0022DA  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  5600                           
  5601                           ;../dc_motor.c: 45:  }
  5602   0022DC  EF93  F011         	goto	l2864
  5603   0022E0                     l2862:
  5604                           
  5605                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  5606   0022E0  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5607   0022E4  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5608   0022E8  50DF               	movf	indf2,w,c
  5609   0022EA  6E11               	movwf	??_setMotorPWM^0,c
  5610   0022EC  5011               	movf	??_setMotorPWM^0,w,c
  5611   0022EE  6E01               	movwf	___wmul@multiplier^0,c
  5612   0022F0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  5613   0022F2  EE20 F007          	lfsr	2,7
  5614   0022F6  500F               	movf	setMotorPWM@m^0,w,c
  5615   0022F8  26D9               	addwf	fsr2l,f,c
  5616   0022FA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5617   0022FC  22DA               	addwfc	fsr2h,f,c
  5618   0022FE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  5619   002302  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  5620   002306  EC55  F01C         	call	___wmul	;wreg free
  5621   00230A  C001  F007         	movff	?___wmul,___awdiv@dividend
  5622   00230E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5623   002312  0E00               	movlw	0
  5624   002314  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5625   002316  0E64               	movlw	100
  5626   002318  6E09               	movwf	___awdiv@divisor^0,c
  5627   00231A  EC94  F016         	call	___awdiv	;wreg free
  5628   00231E  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  5629   002322  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  5630   002326                     l2864:
  5631                           
  5632                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  5633   002326  EE20 F002          	lfsr	2,2
  5634   00232A  500F               	movf	setMotorPWM@m^0,w,c
  5635   00232C  26D9               	addwf	fsr2l,f,c
  5636   00232E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5637   002330  22DA               	addwfc	fsr2h,f,c
  5638   002332  CFDE F011          	movff	postinc2,??_setMotorPWM
  5639   002336  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5640   00233A  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5641   00233E  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5642   002342  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  5643   002346                     
  5644                           ;../dc_motor.c: 53:  if (m->direction){
  5645   002346  EE20 F001          	lfsr	2,1
  5646   00234A  500F               	movf	setMotorPWM@m^0,w,c
  5647   00234C  26D9               	addwf	fsr2l,f,c
  5648   00234E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5649   002350  22DA               	addwfc	fsr2h,f,c
  5650   002352  50DF               	movf	indf2,w,c
  5651   002354  B4D8               	btfsc	status,2,c
  5652   002356  EFAF  F011         	goto	u1811
  5653   00235A  EFB1  F011         	goto	u1810
  5654   00235E                     u1811:
  5655   00235E  EFE6  F011         	goto	l2870
  5656   002362                     u1810:
  5657   002362                     
  5658                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  5659   002362  EE20 F004          	lfsr	2,4
  5660   002366  500F               	movf	setMotorPWM@m^0,w,c
  5661   002368  26D9               	addwf	fsr2l,f,c
  5662   00236A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5663   00236C  22DA               	addwfc	fsr2h,f,c
  5664   00236E  CFDE F011          	movff	postinc2,??_setMotorPWM
  5665   002372  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5666   002376  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5667   00237A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5668   00237E  EE10 F004          	lfsr	1,4
  5669   002382  500F               	movf	setMotorPWM@m^0,w,c
  5670   002384  26E1               	addwf	fsr1l,f,c
  5671   002386  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5672   002388  22E2               	addwfc	fsr1h,f,c
  5673   00238A  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  5674   00238E  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  5675   002392  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  5676   002396  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  5677   00239A  50E7               	movf	indf1,w,c
  5678   00239C  6E15               	movwf	(??_setMotorPWM+4)^0,c
  5679   00239E  EE10 F006          	lfsr	1,6
  5680   0023A2  500F               	movf	setMotorPWM@m^0,w,c
  5681   0023A4  26E1               	addwf	fsr1l,f,c
  5682   0023A6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5683   0023A8  22E2               	addwfc	fsr1h,f,c
  5684   0023AA  50E7               	movf	indf1,w,c
  5685   0023AC  6E16               	movwf	(??_setMotorPWM+5)^0,c
  5686   0023AE  0E01               	movlw	1
  5687   0023B0  6E17               	movwf	(??_setMotorPWM+6)^0,c
  5688   0023B2  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  5689   0023B4  EFDE  F011         	goto	u1824
  5690   0023B8                     u1825:
  5691   0023B8  90D8               	bcf	status,0,c
  5692   0023BA  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  5693   0023BC                     u1824:
  5694   0023BC  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  5695   0023BE  EFDC  F011         	goto	u1825
  5696   0023C2  5017               	movf	(??_setMotorPWM+6)^0,w,c
  5697   0023C4  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  5698   0023C6  6EDF               	movwf	indf2,c
  5699                           
  5700                           ;../dc_motor.c: 55:  } else {
  5701   0023C8  EF1A  F012         	goto	l285
  5702   0023CC                     l2870:
  5703                           
  5704                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  5705   0023CC  EE20 F004          	lfsr	2,4
  5706   0023D0  500F               	movf	setMotorPWM@m^0,w,c
  5707   0023D2  26D9               	addwf	fsr2l,f,c
  5708   0023D4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5709   0023D6  22DA               	addwfc	fsr2h,f,c
  5710   0023D8  CFDE F011          	movff	postinc2,??_setMotorPWM
  5711   0023DC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5712   0023E0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5713   0023E4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5714   0023E8  EE10 F004          	lfsr	1,4
  5715   0023EC  500F               	movf	setMotorPWM@m^0,w,c
  5716   0023EE  26E1               	addwf	fsr1l,f,c
  5717   0023F0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5718   0023F2  22E2               	addwfc	fsr1h,f,c
  5719   0023F4  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  5720   0023F8  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  5721   0023FC  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  5722   002400  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  5723   002404  50E7               	movf	indf1,w,c
  5724   002406  6E15               	movwf	(??_setMotorPWM+4)^0,c
  5725   002408  EE10 F006          	lfsr	1,6
  5726   00240C  500F               	movf	setMotorPWM@m^0,w,c
  5727   00240E  26E1               	addwf	fsr1l,f,c
  5728   002410  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5729   002412  22E2               	addwfc	fsr1h,f,c
  5730   002414  50E7               	movf	indf1,w,c
  5731   002416  6E16               	movwf	(??_setMotorPWM+5)^0,c
  5732   002418  0E01               	movlw	1
  5733   00241A  6E17               	movwf	(??_setMotorPWM+6)^0,c
  5734   00241C  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  5735   00241E  EF13  F012         	goto	u1834
  5736   002422                     u1835:
  5737   002422  90D8               	bcf	status,0,c
  5738   002424  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  5739   002426                     u1834:
  5740   002426  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  5741   002428  EF11  F012         	goto	u1835
  5742   00242C  5017               	movf	(??_setMotorPWM+6)^0,w,c
  5743   00242E  0AFF               	xorlw	255
  5744   002430  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  5745   002432  6EDF               	movwf	indf2,c
  5746   002434                     l285:
  5747   002434  0012               	return		;funcret
  5748   002436                     __end_of_setMotorPWM:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function ___wmul *****************
  5752 ;; Defined at:
  5753 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  multiplier      2    0[COMRAM] unsigned int 
  5756 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  product         2    4[COMRAM] unsigned int 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  2    0[COMRAM] unsigned int 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0, prodl, prodh
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5772 ;;Total ram usage:        6 bytes
  5773 ;; Hardware stack levels used: 1
  5774 ;; Hardware stack levels required when called: 1
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_setMotorPWM
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text25
  5783   0038AA                     __ptext25:
  5784                           	callstack 0
  5785   0038AA                     ___wmul:
  5786                           	callstack 27
  5787   0038AA  5001               	movf	___wmul@multiplier^0,w,c
  5788   0038AC  0203               	mulwf	___wmul@multiplicand^0,c
  5789   0038AE  CFF3 F005          	movff	prodl,___wmul@product
  5790   0038B2  CFF4 F006          	movff	prodh,___wmul@product+1
  5791   0038B6  5001               	movf	___wmul@multiplier^0,w,c
  5792   0038B8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5793   0038BA  50F3               	movf	243,w,c
  5794   0038BC  2606               	addwf	(___wmul@product+1)^0,f,c
  5795   0038BE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5796   0038C0  0203               	mulwf	___wmul@multiplicand^0,c
  5797   0038C2  50F3               	movf	243,w,c
  5798   0038C4  2606               	addwf	(___wmul@product+1)^0,f,c
  5799   0038C6  C005  F001         	movff	___wmul@product,?___wmul
  5800   0038CA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5801   0038CE  0012               	return		;funcret
  5802   0038D0                     __end_of___wmul:
  5803                           	callstack 0
  5804                           
  5805 ;; *************** function ___awdiv *****************
  5806 ;; Defined at:
  5807 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  dividend        2    6[COMRAM] int 
  5810 ;;  divisor         2    8[COMRAM] int 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  quotient        2   12[COMRAM] int 
  5813 ;;  sign            1   11[COMRAM] unsigned char 
  5814 ;;  counter         1   10[COMRAM] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  2    6[COMRAM] int 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5825 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;Total ram usage:        8 bytes
  5829 ;; Hardware stack levels used: 1
  5830 ;; Hardware stack levels required when called: 1
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_setMotorPWM
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text26
  5839   002D28                     __ptext26:
  5840                           	callstack 0
  5841   002D28                     ___awdiv:
  5842                           	callstack 27
  5843   002D28  0E00               	movlw	0
  5844   002D2A  6E0C               	movwf	___awdiv@sign^0,c
  5845   002D2C  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  5846   002D2E  EF9D  F016         	goto	u1620
  5847   002D32  EF9B  F016         	goto	u1621
  5848   002D36                     u1621:
  5849   002D36  EFA3  F016         	goto	l2740
  5850   002D3A                     u1620:
  5851   002D3A  6C09               	negf	___awdiv@divisor^0,c
  5852   002D3C  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  5853   002D3E  B0D8               	btfsc	status,0,c
  5854   002D40  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  5855   002D42  0E01               	movlw	1
  5856   002D44  6E0C               	movwf	___awdiv@sign^0,c
  5857   002D46                     l2740:
  5858   002D46  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  5859   002D48  EFAA  F016         	goto	u1630
  5860   002D4C  EFA8  F016         	goto	u1631
  5861   002D50                     u1631:
  5862   002D50  EFB0  F016         	goto	l2746
  5863   002D54                     u1630:
  5864   002D54  6C07               	negf	___awdiv@dividend^0,c
  5865   002D56  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  5866   002D58  B0D8               	btfsc	status,0,c
  5867   002D5A  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  5868   002D5C  0E01               	movlw	1
  5869   002D5E  1A0C               	xorwf	___awdiv@sign^0,f,c
  5870   002D60                     l2746:
  5871   002D60  0E00               	movlw	0
  5872   002D62  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  5873   002D64  0E00               	movlw	0
  5874   002D66  6E0D               	movwf	___awdiv@quotient^0,c
  5875   002D68  5009               	movf	___awdiv@divisor^0,w,c
  5876   002D6A  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  5877   002D6C  B4D8               	btfsc	status,2,c
  5878   002D6E  EFBB  F016         	goto	u1641
  5879   002D72  EFBD  F016         	goto	u1640
  5880   002D76                     u1641:
  5881   002D76  EFE5  F016         	goto	l2768
  5882   002D7A                     u1640:
  5883   002D7A  0E01               	movlw	1
  5884   002D7C  6E0B               	movwf	___awdiv@counter^0,c
  5885   002D7E  EFC5  F016         	goto	l2754
  5886   002D82                     l2752:
  5887   002D82  90D8               	bcf	status,0,c
  5888   002D84  3609               	rlcf	___awdiv@divisor^0,f,c
  5889   002D86  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  5890   002D88  2A0B               	incf	___awdiv@counter^0,f,c
  5891   002D8A                     l2754:
  5892   002D8A  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  5893   002D8C  EFCA  F016         	goto	u1651
  5894   002D90  EFCC  F016         	goto	u1650
  5895   002D94                     u1651:
  5896   002D94  EFC1  F016         	goto	l2752
  5897   002D98                     u1650:
  5898   002D98                     l2756:
  5899   002D98  90D8               	bcf	status,0,c
  5900   002D9A  360D               	rlcf	___awdiv@quotient^0,f,c
  5901   002D9C  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  5902   002D9E  5009               	movf	___awdiv@divisor^0,w,c
  5903   002DA0  5C07               	subwf	___awdiv@dividend^0,w,c
  5904   002DA2  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5905   002DA4  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  5906   002DA6  A0D8               	btfss	status,0,c
  5907   002DA8  EFD8  F016         	goto	u1661
  5908   002DAC  EFDA  F016         	goto	u1660
  5909   002DB0                     u1661:
  5910   002DB0  EFDF  F016         	goto	l2764
  5911   002DB4                     u1660:
  5912   002DB4  5009               	movf	___awdiv@divisor^0,w,c
  5913   002DB6  5E07               	subwf	___awdiv@dividend^0,f,c
  5914   002DB8  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5915   002DBA  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  5916   002DBC  800D               	bsf	___awdiv@quotient^0,0,c
  5917   002DBE                     l2764:
  5918   002DBE  90D8               	bcf	status,0,c
  5919   002DC0  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  5920   002DC2  3209               	rrcf	___awdiv@divisor^0,f,c
  5921   002DC4  2E0B               	decfsz	___awdiv@counter^0,f,c
  5922   002DC6  EFCC  F016         	goto	l2756
  5923   002DCA                     l2768:
  5924   002DCA  500C               	movf	___awdiv@sign^0,w,c
  5925   002DCC  B4D8               	btfsc	status,2,c
  5926   002DCE  EFEB  F016         	goto	u1671
  5927   002DD2  EFED  F016         	goto	u1670
  5928   002DD6                     u1671:
  5929   002DD6  EFF1  F016         	goto	l2772
  5930   002DDA                     u1670:
  5931   002DDA  6C0D               	negf	___awdiv@quotient^0,c
  5932   002DDC  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  5933   002DDE  B0D8               	btfsc	status,0,c
  5934   002DE0  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  5935   002DE2                     l2772:
  5936   002DE2  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5937   002DE6  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5938   002DEA  0012               	return		;funcret
  5939   002DEC                     __end_of___awdiv:
  5940                           	callstack 0
  5941                           
  5942 ;; *************** function _initUSART4 *****************
  5943 ;; Defined at:
  5944 ;;		line 5 in file "../serial.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 1
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_main
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text27
  5973   003910                     __ptext27:
  5974                           	callstack 0
  5975   003910                     _initUSART4:
  5976                           	callstack 29
  5977   003910                     
  5978                           ;../serial.c: 9:     RC0PPS = 0x12;
  5979   003910  0E12               	movlw	18
  5980   003912  010E               	movlb	14	; () banked
  5981   003914  6F62               	movwf	98,b	;volatile
  5982                           
  5983                           ;../serial.c: 10:     RX4PPS = 0x11;
  5984   003916  0E11               	movlw	17
  5985   003918  6F15               	movwf	21,b	;volatile
  5986   00391A                     
  5987                           ; BSR set to: 14
  5988                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  5989   00391A  97E9               	bcf	233,3,b	;volatile
  5990   00391C                     
  5991                           ; BSR set to: 14
  5992                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  5993   00391C  95E8               	bcf	232,2,b	;volatile
  5994                           
  5995                           ;../serial.c: 14:     SP4BRGL = 103;
  5996   00391E  0E67               	movlw	103
  5997   003920  6FE5               	movwf	229,b	;volatile
  5998                           
  5999                           ;../serial.c: 15:     SP4BRGH = 0;
  6000   003922  0E00               	movlw	0
  6001   003924  6FE6               	movwf	230,b	;volatile
  6002   003926                     
  6003                           ; BSR set to: 14
  6004                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  6005   003926  89E7               	bsf	231,4,b	;volatile
  6006   003928                     
  6007                           ; BSR set to: 14
  6008                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  6009   003928  8BE8               	bsf	232,5,b	;volatile
  6010   00392A                     
  6011                           ; BSR set to: 14
  6012                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  6013   00392A  8FE7               	bsf	231,7,b	;volatile
  6014   00392C                     
  6015                           ; BSR set to: 14
  6016   00392C  0012               	return		;funcret
  6017   00392E                     __end_of_initUSART4:
  6018                           	callstack 0
  6019                           
  6020 ;; *************** function _initDCmotorsPWM *****************
  6021 ;; Defined at:
  6022 ;;		line 5 in file "../dc_motor.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  PWMperiod       2    0[COMRAM] int 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6040 ;;Total ram usage:        2 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 1
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_main
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text28
  6051   00372E                     __ptext28:
  6052                           	callstack 0
  6053   00372E                     _initDCmotorsPWM:
  6054                           	callstack 29
  6055   00372E                     
  6056                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  6057   00372E  9485               	bcf	133,2,c	;volatile
  6058                           
  6059                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  6060   003730  9885               	bcf	133,4,c	;volatile
  6061                           
  6062                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  6063   003732  9E83               	bcf	131,7,c	;volatile
  6064                           
  6065                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  6066   003734  9C87               	bcf	135,6,c	;volatile
  6067                           
  6068                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  6069   003736  947D               	bcf	125,2,c	;volatile
  6070                           
  6071                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  6072   003738  987D               	bcf	125,4,c	;volatile
  6073                           
  6074                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  6075   00373A  9E7B               	bcf	123,7,c	;volatile
  6076                           
  6077                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  6078   00373C  9C7F               	bcf	127,6,c	;volatile
  6079   00373E                     
  6080                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  6081   00373E  50BD               	movf	189,w,c	;volatile
  6082   003740  0B8F               	andlw	-113
  6083   003742  0930               	iorlw	48
  6084   003744  6EBD               	movwf	189,c	;volatile
  6085                           
  6086                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  6087   003746  0EE0               	movlw	-32
  6088   003748  16BE               	andwf	190,f,c	;volatile
  6089                           
  6090                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  6091   00374A  50BF               	movf	191,w,c	;volatile
  6092   00374C  0BF0               	andlw	-16
  6093   00374E  0901               	iorlw	1
  6094   003750  6EBF               	movwf	191,c	;volatile
  6095   003752                     
  6096                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  6097   003752  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6098   003756                     
  6099                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  6100   003756  8EBD               	bsf	189,7,c	;volatile
  6101                           
  6102                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  6103   003758  0E0A               	movlw	10
  6104   00375A  010E               	movlb	14	; () banked
  6105   00375C  6F74               	movwf	116,b	;volatile
  6106                           
  6107                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  6108   00375E  0E0B               	movlw	11
  6109   003760  6F69               	movwf	105,b	;volatile
  6110                           
  6111                           ;../dc_motor.c: 29:     PWM6DCH=0;
  6112   003762  0E00               	movlw	0
  6113   003764  6EA3               	movwf	163,c	;volatile
  6114                           
  6115                           ;../dc_motor.c: 30:     PWM7DCH=0;
  6116   003766  0E00               	movlw	0
  6117   003768  6EA0               	movwf	160,c	;volatile
  6118   00376A                     
  6119                           ; BSR set to: 14
  6120                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  6121   00376A  8EA4               	bsf	164,7,c	;volatile
  6122   00376C                     
  6123                           ; BSR set to: 14
  6124                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  6125   00376C  8EA1               	bsf	161,7,c	;volatile
  6126   00376E                     
  6127                           ; BSR set to: 14
  6128   00376E  0012               	return		;funcret
  6129   003770                     __end_of_initDCmotorsPWM:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _color_read *****************
  6133 ;; Defined at:
  6134 ;;		line 111 in file "../color.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  rgb             2   11[COMRAM] PTR struct RGB_val
  6137 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6153 ;;Total ram usage:        4 bytes
  6154 ;; Hardware stack levels used: 1
  6155 ;; Hardware stack levels required when called: 4
  6156 ;; This function calls:
  6157 ;;		_color_read_Blue
  6158 ;;		_color_read_Green
  6159 ;;		_color_read_Luminosity
  6160 ;;		_color_read_Red
  6161 ;; This function is called by:
  6162 ;;		_main
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text29
  6167   002DEC                     __ptext29:
  6168                           	callstack 0
  6169   002DEC                     _color_read:
  6170                           	callstack 26
  6171   002DEC                     
  6172                           ;../color.c: 111: void color_read(struct RGB_val *rgb);../color.c: 112: {;../color.c: 11
      +                          3:     rgb->L = color_read_Luminosity();
  6173   002DEC  ECFD  F01A         	call	_color_read_Luminosity	;wreg free
  6174   002DF0  C00C  FFD9         	movff	color_read@rgb,fsr2l
  6175   002DF4  C00D  FFDA         	movff	color_read@rgb+1,fsr2h
  6176   002DF8  C005  FFDE         	movff	?_color_read_Luminosity,postinc2
  6177   002DFC  C006  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  6178   002E00                     
  6179                           ;../color.c: 114:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6180   002E00  0E09               	movlw	9
  6181   002E02  6E0F               	movwf	(??_color_read+1)^0,c
  6182   002E04  0E1E               	movlw	30
  6183   002E06  6E0E               	movwf	??_color_read^0,c
  6184   002E08  0EE4               	movlw	228
  6185   002E0A                     u3107:
  6186   002E0A  2EE8               	decfsz	wreg,f,c
  6187   002E0C  D7FE               	bra	u3107
  6188   002E0E  2E0E               	decfsz	??_color_read^0,f,c
  6189   002E10  D7FC               	bra	u3107
  6190   002E12  2E0F               	decfsz	(??_color_read+1)^0,f,c
  6191   002E14  D7FA               	bra	u3107
  6192   002E16  D000               	nop2	
  6193   002E18                     
  6194                           ;../color.c: 115:     rgb->R = color_read_Red();
  6195   002E18  ECD5  F01A         	call	_color_read_Red	;wreg free
  6196   002E1C  EE20 F002          	lfsr	2,2
  6197   002E20  500C               	movf	color_read@rgb^0,w,c
  6198   002E22  26D9               	addwf	fsr2l,f,c
  6199   002E24  500D               	movf	(color_read@rgb+1)^0,w,c
  6200   002E26  22DA               	addwfc	fsr2h,f,c
  6201   002E28  C005  FFDE         	movff	?_color_read_Red,postinc2
  6202   002E2C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6203                           
  6204                           ;../color.c: 116:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6205   002E30  0E09               	movlw	9
  6206   002E32  6E0F               	movwf	(??_color_read+1)^0,c
  6207   002E34  0E1E               	movlw	30
  6208   002E36  6E0E               	movwf	??_color_read^0,c
  6209   002E38  0EE4               	movlw	228
  6210   002E3A                     u3117:
  6211   002E3A  2EE8               	decfsz	wreg,f,c
  6212   002E3C  D7FE               	bra	u3117
  6213   002E3E  2E0E               	decfsz	??_color_read^0,f,c
  6214   002E40  D7FC               	bra	u3117
  6215   002E42  2E0F               	decfsz	(??_color_read+1)^0,f,c
  6216   002E44  D7FA               	bra	u3117
  6217   002E46  D000               	nop2	
  6218   002E48                     
  6219                           ;../color.c: 117:     rgb->G = color_read_Green();
  6220   002E48  EC25  F01B         	call	_color_read_Green	;wreg free
  6221   002E4C  EE20 F004          	lfsr	2,4
  6222   002E50  500C               	movf	color_read@rgb^0,w,c
  6223   002E52  26D9               	addwf	fsr2l,f,c
  6224   002E54  500D               	movf	(color_read@rgb+1)^0,w,c
  6225   002E56  22DA               	addwfc	fsr2h,f,c
  6226   002E58  C005  FFDE         	movff	?_color_read_Green,postinc2
  6227   002E5C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6228   002E60                     
  6229                           ;../color.c: 118:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6230   002E60  0E09               	movlw	9
  6231   002E62  6E0F               	movwf	(??_color_read+1)^0,c
  6232   002E64  0E1E               	movlw	30
  6233   002E66  6E0E               	movwf	??_color_read^0,c
  6234   002E68  0EE4               	movlw	228
  6235   002E6A                     u3127:
  6236   002E6A  2EE8               	decfsz	wreg,f,c
  6237   002E6C  D7FE               	bra	u3127
  6238   002E6E  2E0E               	decfsz	??_color_read^0,f,c
  6239   002E70  D7FC               	bra	u3127
  6240   002E72  2E0F               	decfsz	(??_color_read+1)^0,f,c
  6241   002E74  D7FA               	bra	u3127
  6242   002E76  D000               	nop2	
  6243                           
  6244                           ;../color.c: 119:     rgb->B = color_read_Blue();
  6245   002E78  EC4D  F01B         	call	_color_read_Blue	;wreg free
  6246   002E7C  EE20 F006          	lfsr	2,6
  6247   002E80  500C               	movf	color_read@rgb^0,w,c
  6248   002E82  26D9               	addwf	fsr2l,f,c
  6249   002E84  500D               	movf	(color_read@rgb+1)^0,w,c
  6250   002E86  22DA               	addwfc	fsr2h,f,c
  6251   002E88  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6252   002E8C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6253   002E90  0012               	return		;funcret
  6254   002E92                     __end_of_color_read:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function _color_read_Red *****************
  6258 ;; Defined at:
  6259 ;;		line 69 in file "../color.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  tmp             2    9[COMRAM] unsigned int 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  2    4[COMRAM] unsigned int 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6275 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;Total ram usage:        7 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 3
  6280 ;; This function calls:
  6281 ;;		_I2C_2_Master_Read
  6282 ;;		_I2C_2_Master_RepStart
  6283 ;;		_I2C_2_Master_Start
  6284 ;;		_I2C_2_Master_Stop
  6285 ;;		_I2C_2_Master_Write
  6286 ;; This function is called by:
  6287 ;;		_color_read
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text30
  6292   0035AA                     __ptext30:
  6293                           	callstack 0
  6294   0035AA                     _color_read_Red:
  6295                           	callstack 26
  6296   0035AA                     
  6297                           ;../color.c: 71:  unsigned int tmp;;../color.c: 72:  I2C_2_Master_Start();
  6298   0035AA  ECBE  F01C         	call	_I2C_2_Master_Start	;wreg free
  6299                           
  6300                           ;../color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  6301   0035AE  0E52               	movlw	82
  6302   0035B0  ECAE  F01C         	call	_I2C_2_Master_Write
  6303                           
  6304                           ;../color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  6305   0035B4  0EB6               	movlw	182
  6306   0035B6  ECAE  F01C         	call	_I2C_2_Master_Write
  6307                           
  6308                           ;../color.c: 75:  I2C_2_Master_RepStart();
  6309   0035BA  ECB4  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6310                           
  6311                           ;../color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  6312   0035BE  0E53               	movlw	83
  6313   0035C0  ECAE  F01C         	call	_I2C_2_Master_Write
  6314                           
  6315                           ;../color.c: 77:  tmp=I2C_2_Master_Read(1);
  6316   0035C4  0E01               	movlw	1
  6317   0035C6  ECB8  F01B         	call	_I2C_2_Master_Read
  6318   0035CA  6E07               	movwf	??_color_read_Red^0,c
  6319   0035CC  5007               	movf	??_color_read_Red^0,w,c
  6320   0035CE  6E0A               	movwf	color_read_Red@tmp^0,c
  6321   0035D0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6322                           
  6323                           ;../color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6324   0035D2  0E00               	movlw	0
  6325   0035D4  ECB8  F01B         	call	_I2C_2_Master_Read
  6326   0035D8  6E07               	movwf	??_color_read_Red^0,c
  6327   0035DA  5007               	movf	??_color_read_Red^0,w,c
  6328   0035DC  6E09               	movwf	(??_color_read_Red+2)^0,c
  6329   0035DE  6A08               	clrf	(??_color_read_Red+1)^0,c
  6330   0035E0  500A               	movf	color_read_Red@tmp^0,w,c
  6331   0035E2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6332   0035E4  6E0A               	movwf	color_read_Red@tmp^0,c
  6333   0035E6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6334   0035E8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6335   0035EA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6336                           
  6337                           ;../color.c: 79:  I2C_2_Master_Stop();
  6338   0035EC  ECB9  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6339   0035F0                     
  6340                           ;../color.c: 80:  return tmp;
  6341   0035F0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6342   0035F4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6343   0035F8  0012               	return		;funcret
  6344   0035FA                     __end_of_color_read_Red:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _color_read_Luminosity *****************
  6348 ;; Defined at:
  6349 ;;		line 55 in file "../color.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  tmp             2    9[COMRAM] unsigned int 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  2    4[COMRAM] unsigned int 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;Total ram usage:        7 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; Hardware stack levels required when called: 3
  6370 ;; This function calls:
  6371 ;;		_I2C_2_Master_Read
  6372 ;;		_I2C_2_Master_RepStart
  6373 ;;		_I2C_2_Master_Start
  6374 ;;		_I2C_2_Master_Stop
  6375 ;;		_I2C_2_Master_Write
  6376 ;; This function is called by:
  6377 ;;		_color_read
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text31
  6382   0035FA                     __ptext31:
  6383                           	callstack 0
  6384   0035FA                     _color_read_Luminosity:
  6385                           	callstack 26
  6386   0035FA                     
  6387                           ;../color.c: 57:  unsigned int tmp;;../color.c: 58:  I2C_2_Master_Start();
  6388   0035FA  ECBE  F01C         	call	_I2C_2_Master_Start	;wreg free
  6389                           
  6390                           ;../color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  6391   0035FE  0E52               	movlw	82
  6392   003600  ECAE  F01C         	call	_I2C_2_Master_Write
  6393                           
  6394                           ;../color.c: 60:  I2C_2_Master_Write(0xA0 | 0x14);
  6395   003604  0EB4               	movlw	180
  6396   003606  ECAE  F01C         	call	_I2C_2_Master_Write
  6397                           
  6398                           ;../color.c: 61:  I2C_2_Master_RepStart();
  6399   00360A  ECB4  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6400                           
  6401                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  6402   00360E  0E53               	movlw	83
  6403   003610  ECAE  F01C         	call	_I2C_2_Master_Write
  6404                           
  6405                           ;../color.c: 63:  tmp=I2C_2_Master_Read(1);
  6406   003614  0E01               	movlw	1
  6407   003616  ECB8  F01B         	call	_I2C_2_Master_Read
  6408   00361A  6E07               	movwf	??_color_read_Luminosity^0,c
  6409   00361C  5007               	movf	??_color_read_Luminosity^0,w,c
  6410   00361E  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  6411   003620  6A0B               	clrf	(color_read_Luminosity@tmp+1)^0,c
  6412                           
  6413                           ;../color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6414   003622  0E00               	movlw	0
  6415   003624  ECB8  F01B         	call	_I2C_2_Master_Read
  6416   003628  6E07               	movwf	??_color_read_Luminosity^0,c
  6417   00362A  5007               	movf	??_color_read_Luminosity^0,w,c
  6418   00362C  6E09               	movwf	(??_color_read_Luminosity+2)^0,c
  6419   00362E  6A08               	clrf	(??_color_read_Luminosity+1)^0,c
  6420   003630  500A               	movf	color_read_Luminosity@tmp^0,w,c
  6421   003632  1008               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  6422   003634  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  6423   003636  500B               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  6424   003638  1009               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  6425   00363A  6E0B               	movwf	(color_read_Luminosity@tmp+1)^0,c
  6426                           
  6427                           ;../color.c: 65:  I2C_2_Master_Stop();
  6428   00363C  ECB9  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6429   003640                     
  6430                           ;../color.c: 66:  return tmp;
  6431   003640  C00A  F005         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  6432   003644  C00B  F006         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  6433   003648  0012               	return		;funcret
  6434   00364A                     __end_of_color_read_Luminosity:
  6435                           	callstack 0
  6436                           
  6437 ;; *************** function _color_read_Green *****************
  6438 ;; Defined at:
  6439 ;;		line 83 in file "../color.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  tmp             2    9[COMRAM] unsigned int 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    4[COMRAM] unsigned int 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;Total ram usage:        7 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 3
  6460 ;; This function calls:
  6461 ;;		_I2C_2_Master_Read
  6462 ;;		_I2C_2_Master_RepStart
  6463 ;;		_I2C_2_Master_Start
  6464 ;;		_I2C_2_Master_Stop
  6465 ;;		_I2C_2_Master_Write
  6466 ;; This function is called by:
  6467 ;;		_color_read
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text32
  6472   00364A                     __ptext32:
  6473                           	callstack 0
  6474   00364A                     _color_read_Green:
  6475                           	callstack 26
  6476   00364A                     
  6477                           ;../color.c: 85:  unsigned int tmp;;../color.c: 86:  I2C_2_Master_Start();
  6478   00364A  ECBE  F01C         	call	_I2C_2_Master_Start	;wreg free
  6479                           
  6480                           ;../color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  6481   00364E  0E52               	movlw	82
  6482   003650  ECAE  F01C         	call	_I2C_2_Master_Write
  6483                           
  6484                           ;../color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  6485   003654  0EB8               	movlw	184
  6486   003656  ECAE  F01C         	call	_I2C_2_Master_Write
  6487                           
  6488                           ;../color.c: 89:  I2C_2_Master_RepStart();
  6489   00365A  ECB4  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6490                           
  6491                           ;../color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  6492   00365E  0E53               	movlw	83
  6493   003660  ECAE  F01C         	call	_I2C_2_Master_Write
  6494                           
  6495                           ;../color.c: 91:  tmp=I2C_2_Master_Read(1);
  6496   003664  0E01               	movlw	1
  6497   003666  ECB8  F01B         	call	_I2C_2_Master_Read
  6498   00366A  6E07               	movwf	??_color_read_Green^0,c
  6499   00366C  5007               	movf	??_color_read_Green^0,w,c
  6500   00366E  6E0A               	movwf	color_read_Green@tmp^0,c
  6501   003670  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6502                           
  6503                           ;../color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6504   003672  0E00               	movlw	0
  6505   003674  ECB8  F01B         	call	_I2C_2_Master_Read
  6506   003678  6E07               	movwf	??_color_read_Green^0,c
  6507   00367A  5007               	movf	??_color_read_Green^0,w,c
  6508   00367C  6E09               	movwf	(??_color_read_Green+2)^0,c
  6509   00367E  6A08               	clrf	(??_color_read_Green+1)^0,c
  6510   003680  500A               	movf	color_read_Green@tmp^0,w,c
  6511   003682  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6512   003684  6E0A               	movwf	color_read_Green@tmp^0,c
  6513   003686  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6514   003688  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6515   00368A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6516                           
  6517                           ;../color.c: 93:  I2C_2_Master_Stop();
  6518   00368C  ECB9  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6519   003690                     
  6520                           ;../color.c: 94:  return tmp;
  6521   003690  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6522   003694  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6523   003698  0012               	return		;funcret
  6524   00369A                     __end_of_color_read_Green:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function _color_read_Blue *****************
  6528 ;; Defined at:
  6529 ;;		line 97 in file "../color.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  tmp             2    9[COMRAM] unsigned int 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2    4[COMRAM] unsigned int 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;Total ram usage:        7 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; Hardware stack levels required when called: 3
  6550 ;; This function calls:
  6551 ;;		_I2C_2_Master_Read
  6552 ;;		_I2C_2_Master_RepStart
  6553 ;;		_I2C_2_Master_Start
  6554 ;;		_I2C_2_Master_Stop
  6555 ;;		_I2C_2_Master_Write
  6556 ;; This function is called by:
  6557 ;;		_color_read
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text33
  6562   00369A                     __ptext33:
  6563                           	callstack 0
  6564   00369A                     _color_read_Blue:
  6565                           	callstack 26
  6566   00369A                     
  6567                           ;../color.c: 99:  unsigned int tmp;;../color.c: 100:  I2C_2_Master_Start();
  6568   00369A  ECBE  F01C         	call	_I2C_2_Master_Start	;wreg free
  6569                           
  6570                           ;../color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  6571   00369E  0E52               	movlw	82
  6572   0036A0  ECAE  F01C         	call	_I2C_2_Master_Write
  6573                           
  6574                           ;../color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  6575   0036A4  0EBA               	movlw	186
  6576   0036A6  ECAE  F01C         	call	_I2C_2_Master_Write
  6577                           
  6578                           ;../color.c: 103:  I2C_2_Master_RepStart();
  6579   0036AA  ECB4  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6580                           
  6581                           ;../color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  6582   0036AE  0E53               	movlw	83
  6583   0036B0  ECAE  F01C         	call	_I2C_2_Master_Write
  6584                           
  6585                           ;../color.c: 105:  tmp=I2C_2_Master_Read(1);
  6586   0036B4  0E01               	movlw	1
  6587   0036B6  ECB8  F01B         	call	_I2C_2_Master_Read
  6588   0036BA  6E07               	movwf	??_color_read_Blue^0,c
  6589   0036BC  5007               	movf	??_color_read_Blue^0,w,c
  6590   0036BE  6E0A               	movwf	color_read_Blue@tmp^0,c
  6591   0036C0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6592                           
  6593                           ;../color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6594   0036C2  0E00               	movlw	0
  6595   0036C4  ECB8  F01B         	call	_I2C_2_Master_Read
  6596   0036C8  6E07               	movwf	??_color_read_Blue^0,c
  6597   0036CA  5007               	movf	??_color_read_Blue^0,w,c
  6598   0036CC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6599   0036CE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6600   0036D0  500A               	movf	color_read_Blue@tmp^0,w,c
  6601   0036D2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6602   0036D4  6E0A               	movwf	color_read_Blue@tmp^0,c
  6603   0036D6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6604   0036D8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6605   0036DA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6606                           
  6607                           ;../color.c: 107:  I2C_2_Master_Stop();
  6608   0036DC  ECB9  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6609   0036E0                     
  6610                           ;../color.c: 108:  return tmp;
  6611   0036E0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6612   0036E4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6613   0036E8  0012               	return		;funcret
  6614   0036EA                     __end_of_color_read_Blue:
  6615                           	callstack 0
  6616                           
  6617 ;; *************** function _I2C_2_Master_RepStart *****************
  6618 ;; Defined at:
  6619 ;;		line 33 in file "../i2c.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 2
  6640 ;; This function calls:
  6641 ;;		_I2C_2_Master_Idle
  6642 ;; This function is called by:
  6643 ;;		_color_read_Luminosity
  6644 ;;		_color_read_Red
  6645 ;;		_color_read_Green
  6646 ;;		_color_read_Blue
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text34
  6651   003968                     __ptext34:
  6652                           	callstack 0
  6653   003968                     _I2C_2_Master_RepStart:
  6654                           	callstack 26
  6655   003968                     
  6656                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  6657   003968  EC41  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6658   00396C                     
  6659                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6660   00396C  010E               	movlb	14	; () banked
  6661   00396E  83DA               	bsf	218,1,b	;volatile
  6662   003970                     
  6663                           ; BSR set to: 14
  6664   003970  0012               	return		;funcret
  6665   003972                     __end_of_I2C_2_Master_RepStart:
  6666                           	callstack 0
  6667                           
  6668 ;; *************** function _I2C_2_Master_Read *****************
  6669 ;; Defined at:
  6670 ;;		line 51 in file "../i2c.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  ack             1    wreg     unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  ack             1    2[COMRAM] unsigned char 
  6675 ;;  tmp             1    3[COMRAM] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      unsigned char 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6688 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6689 ;;Total ram usage:        3 bytes
  6690 ;; Hardware stack levels used: 1
  6691 ;; Hardware stack levels required when called: 2
  6692 ;; This function calls:
  6693 ;;		_I2C_2_Master_Idle
  6694 ;; This function is called by:
  6695 ;;		_color_read_Luminosity
  6696 ;;		_color_read_Red
  6697 ;;		_color_read_Green
  6698 ;;		_color_read_Blue
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text35
  6703   003770                     __ptext35:
  6704                           	callstack 0
  6705   003770                     _I2C_2_Master_Read:
  6706                           	callstack 26
  6707                           
  6708                           ; BSR set to: 14
  6709                           ;incstack = 0
  6710                           ;I2C_2_Master_Read@ack stored from wreg
  6711   003770  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6712   003772                     
  6713                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  6714   003772  EC41  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6715   003776                     
  6716                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6717   003776  010E               	movlb	14	; () banked
  6718   003778  87DA               	bsf	218,3,b	;volatile
  6719                           
  6720                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  6721   00377A  EC41  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6722   00377E                     
  6723                           ;../i2c.c: 57:   tmp = SSP2BUF;
  6724   00377E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6725                           
  6726                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  6727   003782  EC41  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6728   003786                     
  6729                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6730   003786  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6731   003788  B4D8               	btfsc	status,2,c
  6732   00378A  EFC9  F01B         	goto	u1781
  6733   00378E  EFCD  F01B         	goto	u1780
  6734   003792                     u1781:
  6735   003792  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6736   003794  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6737   003796  EFCE  F01B         	goto	u1798
  6738   00379A                     u1780:
  6739   00379A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6740   00379C                     u1798:
  6741   00379C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6742   00379E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6743   0037A0  010E               	movlb	14	; () banked
  6744   0037A2  51DA               	movf	218,w,b	;volatile
  6745   0037A4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6746   0037A6  0BDF               	andlw	-33
  6747   0037A8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6748   0037AA  6FDA               	movwf	218,b	;volatile
  6749   0037AC                     
  6750                           ; BSR set to: 14
  6751                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6752   0037AC  89DA               	bsf	218,4,b	;volatile
  6753   0037AE                     
  6754                           ; BSR set to: 14
  6755                           ;../i2c.c: 61:   return tmp;
  6756   0037AE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6757   0037B0                     
  6758                           ; BSR set to: 14
  6759   0037B0  0012               	return		;funcret
  6760   0037B2                     __end_of_I2C_2_Master_Read:
  6761                           	callstack 0
  6762                           
  6763 ;; *************** function _color_processor_hard *****************
  6764 ;; Defined at:
  6765 ;;		line 152 in file "../color.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  6768 ;;		 -> main@RGB_recorded(8), 
  6769 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  6770 ;;		 -> main@color_calibrated(64), 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  cb              2   22[COMRAM] unsigned int 
  6773 ;;  cg              2   20[COMRAM] unsigned int 
  6774 ;;  cr              2   18[COMRAM] unsigned int 
  6775 ;;  condition_b     1    8[COMRAM] _Bool 
  6776 ;;  condition_g     1    7[COMRAM] _Bool 
  6777 ;;  condition_r     1    6[COMRAM] _Bool 
  6778 ;;  i               2    0        int 
  6779 ;;  b               2   16[COMRAM] unsigned int 
  6780 ;;  g               2   14[COMRAM] unsigned int 
  6781 ;;  r               2   12[COMRAM] unsigned int 
  6782 ;;  l               2    0        unsigned int 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  2    0[COMRAM] unsigned int 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6795 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;Total ram usage:       24 bytes
  6797 ;; Hardware stack levels used: 1
  6798 ;; Hardware stack levels required when called: 1
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_main
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text36
  6807   00207E                     __ptext36:
  6808                           	callstack 0
  6809   00207E                     _color_processor_hard:
  6810                           	callstack 29
  6811   00207E                     
  6812                           ;../color.c: 155:     unsigned int r = rgb->R;
  6813   00207E  EE20 F002          	lfsr	2,2
  6814   002082  5001               	movf	color_processor_hard@rgb^0,w,c
  6815   002084  26D9               	addwf	fsr2l,f,c
  6816   002086  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  6817   002088  22DA               	addwfc	fsr2h,f,c
  6818   00208A  CFDE F00D          	movff	postinc2,color_processor_hard@r
  6819   00208E  CFDD F00E          	movff	postdec2,color_processor_hard@r+1
  6820   002092                     
  6821                           ;../color.c: 156:     unsigned int g = rgb->G;
  6822   002092  EE20 F004          	lfsr	2,4
  6823   002096  5001               	movf	color_processor_hard@rgb^0,w,c
  6824   002098  26D9               	addwf	fsr2l,f,c
  6825   00209A  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  6826   00209C  22DA               	addwfc	fsr2h,f,c
  6827   00209E  CFDE F00F          	movff	postinc2,color_processor_hard@g
  6828   0020A2  CFDD F010          	movff	postdec2,color_processor_hard@g+1
  6829   0020A6                     
  6830                           ;../color.c: 157:     unsigned int b = rgb->B;
  6831   0020A6  EE20 F006          	lfsr	2,6
  6832   0020AA  5001               	movf	color_processor_hard@rgb^0,w,c
  6833   0020AC  26D9               	addwf	fsr2l,f,c
  6834   0020AE  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  6835   0020B0  22DA               	addwfc	fsr2h,f,c
  6836   0020B2  CFDE F011          	movff	postinc2,color_processor_hard@b
  6837   0020B6  CFDD F012          	movff	postdec2,color_processor_hard@b+1
  6838   0020BA                     
  6839                           ;../color.c: 161:         unsigned int cr = calibrated[4*i+1];
  6840   0020BA  EE20 F002          	lfsr	2,2
  6841   0020BE  5003               	movf	color_processor_hard@calibrated^0,w,c
  6842   0020C0  26D9               	addwf	fsr2l,f,c
  6843   0020C2  5004               	movf	(color_processor_hard@calibrated+1)^0,w,c
  6844   0020C4  22DA               	addwfc	fsr2h,f,c
  6845   0020C6  CFDE F013          	movff	postinc2,color_processor_hard@cr
  6846   0020CA  CFDD F014          	movff	postdec2,color_processor_hard@cr+1
  6847                           
  6848                           ;../color.c: 162:         unsigned int cg = calibrated[4*i+2];
  6849   0020CE  EE20 F004          	lfsr	2,4
  6850   0020D2  5003               	movf	color_processor_hard@calibrated^0,w,c
  6851   0020D4  26D9               	addwf	fsr2l,f,c
  6852   0020D6  5004               	movf	(color_processor_hard@calibrated+1)^0,w,c
  6853   0020D8  22DA               	addwfc	fsr2h,f,c
  6854   0020DA  CFDE F015          	movff	postinc2,color_processor_hard@cg
  6855   0020DE  CFDD F016          	movff	postdec2,color_processor_hard@cg+1
  6856                           
  6857                           ;../color.c: 163:         unsigned int cb = calibrated[4*i+3];
  6858   0020E2  EE20 F006          	lfsr	2,6
  6859   0020E6  5003               	movf	color_processor_hard@calibrated^0,w,c
  6860   0020E8  26D9               	addwf	fsr2l,f,c
  6861   0020EA  5004               	movf	(color_processor_hard@calibrated+1)^0,w,c
  6862   0020EC  22DA               	addwfc	fsr2h,f,c
  6863   0020EE  CFDE F017          	movff	postinc2,color_processor_hard@cb
  6864   0020F2  CFDD F018          	movff	postdec2,color_processor_hard@cb+1
  6865   0020F6                     
  6866                           ;../color.c: 165:         _Bool condition_r = r>cr-40 && r<cr+40;
  6867   0020F6  0E00               	movlw	0
  6868   0020F8  6E0A               	movwf	_color_processor_hard$379^0,c
  6869   0020FA  0ED8               	movlw	216
  6870   0020FC  2413               	addwf	color_processor_hard@cr^0,w,c
  6871   0020FE  6E05               	movwf	??_color_processor_hard^0,c
  6872   002100  0EFF               	movlw	255
  6873   002102  2014               	addwfc	(color_processor_hard@cr+1)^0,w,c
  6874   002104  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6875   002106  500D               	movf	color_processor_hard@r^0,w,c
  6876   002108  5C05               	subwf	??_color_processor_hard^0,w,c
  6877   00210A  500E               	movf	(color_processor_hard@r+1)^0,w,c
  6878   00210C  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  6879   00210E  B0D8               	btfsc	status,0,c
  6880   002110  EF8C  F010         	goto	u2021
  6881   002114  EF8E  F010         	goto	u2020
  6882   002118                     u2021:
  6883   002118  EFA1  F010         	goto	l77
  6884   00211C                     u2020:
  6885   00211C  0E28               	movlw	40
  6886   00211E  2413               	addwf	color_processor_hard@cr^0,w,c
  6887   002120  6E05               	movwf	??_color_processor_hard^0,c
  6888   002122  0E00               	movlw	0
  6889   002124  2014               	addwfc	(color_processor_hard@cr+1)^0,w,c
  6890   002126  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6891   002128  5005               	movf	??_color_processor_hard^0,w,c
  6892   00212A  5C0D               	subwf	color_processor_hard@r^0,w,c
  6893   00212C  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6894   00212E  580E               	subwfb	(color_processor_hard@r+1)^0,w,c
  6895   002130  B0D8               	btfsc	status,0,c
  6896   002132  EF9D  F010         	goto	u2031
  6897   002136  EF9F  F010         	goto	u2030
  6898   00213A                     u2031:
  6899   00213A  EFA1  F010         	goto	l77
  6900   00213E                     u2030:
  6901   00213E  0E01               	movlw	1
  6902   002140  6E0A               	movwf	_color_processor_hard$379^0,c
  6903   002142                     l77:
  6904   002142  500A               	movf	_color_processor_hard$379^0,w,c
  6905   002144  A4D8               	btfss	status,2,c
  6906   002146  EFA7  F010         	goto	u2041
  6907   00214A  EFAA  F010         	goto	u2040
  6908   00214E                     u2041:
  6909   00214E  0E01               	movlw	1
  6910   002150  EFAB  F010         	goto	u2050
  6911   002154                     u2040:
  6912   002154  0E00               	movlw	0
  6913   002156                     u2050:
  6914   002156  6E07               	movwf	color_processor_hard@condition_r^0,c
  6915                           
  6916                           ;../color.c: 166:         _Bool condition_g = b>cb-40 && b<cb+40;
  6917   002158  0E00               	movlw	0
  6918   00215A  6E0B               	movwf	_color_processor_hard$381^0,c
  6919   00215C  0ED8               	movlw	216
  6920   00215E  2417               	addwf	color_processor_hard@cb^0,w,c
  6921   002160  6E05               	movwf	??_color_processor_hard^0,c
  6922   002162  0EFF               	movlw	255
  6923   002164  2018               	addwfc	(color_processor_hard@cb+1)^0,w,c
  6924   002166  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6925   002168  5011               	movf	color_processor_hard@b^0,w,c
  6926   00216A  5C05               	subwf	??_color_processor_hard^0,w,c
  6927   00216C  5012               	movf	(color_processor_hard@b+1)^0,w,c
  6928   00216E  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  6929   002170  B0D8               	btfsc	status,0,c
  6930   002172  EFBD  F010         	goto	u2061
  6931   002176  EFBF  F010         	goto	u2060
  6932   00217A                     u2061:
  6933   00217A  EFD2  F010         	goto	l79
  6934   00217E                     u2060:
  6935   00217E  0E28               	movlw	40
  6936   002180  2417               	addwf	color_processor_hard@cb^0,w,c
  6937   002182  6E05               	movwf	??_color_processor_hard^0,c
  6938   002184  0E00               	movlw	0
  6939   002186  2018               	addwfc	(color_processor_hard@cb+1)^0,w,c
  6940   002188  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6941   00218A  5005               	movf	??_color_processor_hard^0,w,c
  6942   00218C  5C11               	subwf	color_processor_hard@b^0,w,c
  6943   00218E  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6944   002190  5812               	subwfb	(color_processor_hard@b+1)^0,w,c
  6945   002192  B0D8               	btfsc	status,0,c
  6946   002194  EFCE  F010         	goto	u2071
  6947   002198  EFD0  F010         	goto	u2070
  6948   00219C                     u2071:
  6949   00219C  EFD2  F010         	goto	l79
  6950   0021A0                     u2070:
  6951   0021A0  0E01               	movlw	1
  6952   0021A2  6E0B               	movwf	_color_processor_hard$381^0,c
  6953   0021A4                     l79:
  6954   0021A4  500B               	movf	_color_processor_hard$381^0,w,c
  6955   0021A6  A4D8               	btfss	status,2,c
  6956   0021A8  EFD8  F010         	goto	u2081
  6957   0021AC  EFDB  F010         	goto	u2080
  6958   0021B0                     u2081:
  6959   0021B0  0E01               	movlw	1
  6960   0021B2  EFDC  F010         	goto	u2090
  6961   0021B6                     u2080:
  6962   0021B6  0E00               	movlw	0
  6963   0021B8                     u2090:
  6964   0021B8  6E08               	movwf	color_processor_hard@condition_g^0,c
  6965                           
  6966                           ;../color.c: 167:         _Bool condition_b = g>cg-40 && g<cg+40;
  6967   0021BA  0E00               	movlw	0
  6968   0021BC  6E0C               	movwf	_color_processor_hard$383^0,c
  6969   0021BE  0ED8               	movlw	216
  6970   0021C0  2415               	addwf	color_processor_hard@cg^0,w,c
  6971   0021C2  6E05               	movwf	??_color_processor_hard^0,c
  6972   0021C4  0EFF               	movlw	255
  6973   0021C6  2016               	addwfc	(color_processor_hard@cg+1)^0,w,c
  6974   0021C8  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6975   0021CA  500F               	movf	color_processor_hard@g^0,w,c
  6976   0021CC  5C05               	subwf	??_color_processor_hard^0,w,c
  6977   0021CE  5010               	movf	(color_processor_hard@g+1)^0,w,c
  6978   0021D0  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  6979   0021D2  B0D8               	btfsc	status,0,c
  6980   0021D4  EFEE  F010         	goto	u2101
  6981   0021D8  EFF0  F010         	goto	u2100
  6982   0021DC                     u2101:
  6983   0021DC  EF03  F011         	goto	l81
  6984   0021E0                     u2100:
  6985   0021E0  0E28               	movlw	40
  6986   0021E2  2415               	addwf	color_processor_hard@cg^0,w,c
  6987   0021E4  6E05               	movwf	??_color_processor_hard^0,c
  6988   0021E6  0E00               	movlw	0
  6989   0021E8  2016               	addwfc	(color_processor_hard@cg+1)^0,w,c
  6990   0021EA  6E06               	movwf	(??_color_processor_hard+1)^0,c
  6991   0021EC  5005               	movf	??_color_processor_hard^0,w,c
  6992   0021EE  5C0F               	subwf	color_processor_hard@g^0,w,c
  6993   0021F0  5006               	movf	(??_color_processor_hard+1)^0,w,c
  6994   0021F2  5810               	subwfb	(color_processor_hard@g+1)^0,w,c
  6995   0021F4  B0D8               	btfsc	status,0,c
  6996   0021F6  EFFF  F010         	goto	u2111
  6997   0021FA  EF01  F011         	goto	u2110
  6998   0021FE                     u2111:
  6999   0021FE  EF03  F011         	goto	l81
  7000   002202                     u2110:
  7001   002202  0E01               	movlw	1
  7002   002204  6E0C               	movwf	_color_processor_hard$383^0,c
  7003   002206                     l81:
  7004   002206  500C               	movf	_color_processor_hard$383^0,w,c
  7005   002208  A4D8               	btfss	status,2,c
  7006   00220A  EF09  F011         	goto	u2121
  7007   00220E  EF0C  F011         	goto	u2120
  7008   002212                     u2121:
  7009   002212  0E01               	movlw	1
  7010   002214  EF0D  F011         	goto	u2130
  7011   002218                     u2120:
  7012   002218  0E00               	movlw	0
  7013   00221A                     u2130:
  7014   00221A  6E09               	movwf	color_processor_hard@condition_b^0,c
  7015                           
  7016                           ;../color.c: 169:         if (condition_r && condition_g && condition_b){
  7017   00221C  5007               	movf	color_processor_hard@condition_r^0,w,c
  7018   00221E  B4D8               	btfsc	status,2,c
  7019   002220  EF14  F011         	goto	u2141
  7020   002224  EF16  F011         	goto	u2140
  7021   002228                     u2141:
  7022   002228  EF2C  F011         	goto	l3274
  7023   00222C                     u2140:
  7024   00222C  5008               	movf	color_processor_hard@condition_g^0,w,c
  7025   00222E  B4D8               	btfsc	status,2,c
  7026   002230  EF1C  F011         	goto	u2151
  7027   002234  EF1E  F011         	goto	u2150
  7028   002238                     u2151:
  7029   002238  EF2C  F011         	goto	l3274
  7030   00223C                     u2150:
  7031   00223C  5009               	movf	color_processor_hard@condition_b^0,w,c
  7032   00223E  B4D8               	btfsc	status,2,c
  7033   002240  EF24  F011         	goto	u2161
  7034   002244  EF26  F011         	goto	u2160
  7035   002248                     u2161:
  7036   002248  EF2C  F011         	goto	l3274
  7037   00224C                     u2160:
  7038   00224C                     
  7039                           ;../color.c: 170:             return i+1;
  7040   00224C  0E00               	movlw	0
  7041   00224E  6E02               	movwf	(?_color_processor_hard+1)^0,c
  7042   002250  0E01               	movlw	1
  7043   002252  6E01               	movwf	?_color_processor_hard^0,c
  7044   002254  EF30  F011         	goto	l83
  7045   002258                     l3274:
  7046   002258  0E00               	movlw	0
  7047   00225A  6E02               	movwf	(?_color_processor_hard+1)^0,c
  7048   00225C  0E00               	movlw	0
  7049   00225E  6E01               	movwf	?_color_processor_hard^0,c
  7050   002260                     l83:
  7051   002260  0012               	return		;funcret
  7052   002262                     __end_of_color_processor_hard:
  7053                           	callstack 0
  7054                           
  7055 ;; *************** function _color_processor_easy *****************
  7056 ;; Defined at:
  7057 ;;		line 134 in file "../color.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  7060 ;;		 -> main@RGB_recorded(8), 
  7061 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  7062 ;;		 -> main@color_calibrated(64), 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  b               2   14[COMRAM] unsigned int 
  7065 ;;  g               2   12[COMRAM] unsigned int 
  7066 ;;  r               2   10[COMRAM] unsigned int 
  7067 ;;  l               2    8[COMRAM] unsigned int 
  7068 ;;  color           2    0        unsigned int 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  2    0[COMRAM] unsigned int 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7081 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7082 ;;Total ram usage:       16 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; Hardware stack levels required when called: 1
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_main
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text37
  7093   002A34                     __ptext37:
  7094                           	callstack 0
  7095   002A34                     _color_processor_easy:
  7096                           	callstack 29
  7097   002A34                     
  7098                           ;../color.c: 134: unsigned int color_processor_easy(struct RGB_val *rgb, unsigned int ca
      +                          librated[]);../color.c: 135: {;../color.c: 136:     unsigned int l = rgb->L;
  7099   002A34  C001  FFD9         	movff	color_processor_easy@rgb,fsr2l
  7100   002A38  C002  FFDA         	movff	color_processor_easy@rgb+1,fsr2h
  7101   002A3C  CFDE F009          	movff	postinc2,color_processor_easy@l
  7102   002A40  CFDD F00A          	movff	postdec2,color_processor_easy@l+1
  7103   002A44                     
  7104                           ;../color.c: 137:     unsigned int r = rgb->R;
  7105   002A44  EE20 F002          	lfsr	2,2
  7106   002A48  5001               	movf	color_processor_easy@rgb^0,w,c
  7107   002A4A  26D9               	addwf	fsr2l,f,c
  7108   002A4C  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  7109   002A4E  22DA               	addwfc	fsr2h,f,c
  7110   002A50  CFDE F00B          	movff	postinc2,color_processor_easy@r
  7111   002A54  CFDD F00C          	movff	postdec2,color_processor_easy@r+1
  7112   002A58                     
  7113                           ;../color.c: 138:     unsigned int g = rgb->G;
  7114   002A58  EE20 F004          	lfsr	2,4
  7115   002A5C  5001               	movf	color_processor_easy@rgb^0,w,c
  7116   002A5E  26D9               	addwf	fsr2l,f,c
  7117   002A60  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  7118   002A62  22DA               	addwfc	fsr2h,f,c
  7119   002A64  CFDE F00D          	movff	postinc2,color_processor_easy@g
  7120   002A68  CFDD F00E          	movff	postdec2,color_processor_easy@g+1
  7121   002A6C                     
  7122                           ;../color.c: 139:     unsigned int b = rgb->B;
  7123   002A6C  EE20 F006          	lfsr	2,6
  7124   002A70  5001               	movf	color_processor_easy@rgb^0,w,c
  7125   002A72  26D9               	addwf	fsr2l,f,c
  7126   002A74  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  7127   002A76  22DA               	addwfc	fsr2h,f,c
  7128   002A78  CFDE F00F          	movff	postinc2,color_processor_easy@b
  7129   002A7C  CFDD F010          	movff	postdec2,color_processor_easy@b+1
  7130   002A80                     
  7131                           ;../color.c: 140:     unsigned int color;;../color.c: 141:     if (l<calibrated[28]+100 
      +                          && l>calibrated[28]-100){
  7132   002A80  EE20 F038          	lfsr	2,56
  7133   002A84  5003               	movf	color_processor_easy@calibrated^0,w,c
  7134   002A86  26D9               	addwf	fsr2l,f,c
  7135   002A88  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  7136   002A8A  22DA               	addwfc	fsr2h,f,c
  7137   002A8C  CFDE F005          	movff	postinc2,??_color_processor_easy
  7138   002A90  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  7139   002A94  0E64               	movlw	100
  7140   002A96  2605               	addwf	??_color_processor_easy^0,f,c
  7141   002A98  0E00               	movlw	0
  7142   002A9A  2206               	addwfc	(??_color_processor_easy+1)^0,f,c
  7143   002A9C  5005               	movf	??_color_processor_easy^0,w,c
  7144   002A9E  5C09               	subwf	color_processor_easy@l^0,w,c
  7145   002AA0  5006               	movf	(??_color_processor_easy+1)^0,w,c
  7146   002AA2  580A               	subwfb	(color_processor_easy@l+1)^0,w,c
  7147   002AA4  B0D8               	btfsc	status,0,c
  7148   002AA6  EF57  F015         	goto	u1971
  7149   002AAA  EF59  F015         	goto	u1970
  7150   002AAE                     u1971:
  7151   002AAE  EF7A  F015         	goto	l3208
  7152   002AB2                     u1970:
  7153   002AB2  EE20 F038          	lfsr	2,56
  7154   002AB6  5003               	movf	color_processor_easy@calibrated^0,w,c
  7155   002AB8  26D9               	addwf	fsr2l,f,c
  7156   002ABA  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  7157   002ABC  22DA               	addwfc	fsr2h,f,c
  7158   002ABE  CFDE F005          	movff	postinc2,??_color_processor_easy
  7159   002AC2  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  7160   002AC6  0E9C               	movlw	156
  7161   002AC8  2405               	addwf	??_color_processor_easy^0,w,c
  7162   002ACA  6E07               	movwf	(??_color_processor_easy+2)^0,c
  7163   002ACC  0EFF               	movlw	255
  7164   002ACE  2006               	addwfc	(??_color_processor_easy+1)^0,w,c
  7165   002AD0  6E08               	movwf	(??_color_processor_easy+3)^0,c
  7166   002AD2  5009               	movf	color_processor_easy@l^0,w,c
  7167   002AD4  5C07               	subwf	(??_color_processor_easy+2)^0,w,c
  7168   002AD6  500A               	movf	(color_processor_easy@l+1)^0,w,c
  7169   002AD8  5808               	subwfb	(??_color_processor_easy+3)^0,w,c
  7170   002ADA  B0D8               	btfsc	status,0,c
  7171   002ADC  EF72  F015         	goto	u1981
  7172   002AE0  EF74  F015         	goto	u1980
  7173   002AE4                     u1981:
  7174   002AE4  EF7A  F015         	goto	l3208
  7175   002AE8                     u1980:
  7176   002AE8                     
  7177                           ;../color.c: 142:         return 8;
  7178   002AE8  0E00               	movlw	0
  7179   002AEA  6E02               	movwf	(?_color_processor_easy+1)^0,c
  7180   002AEC  0E08               	movlw	8
  7181   002AEE  6E01               	movwf	?_color_processor_easy^0,c
  7182   002AF0  EFAB  F015         	goto	l67
  7183   002AF4                     l3208:
  7184                           
  7185                           ;../color.c: 144:     if (r>g && r>b){
  7186   002AF4  500B               	movf	color_processor_easy@r^0,w,c
  7187   002AF6  5C0D               	subwf	color_processor_easy@g^0,w,c
  7188   002AF8  500C               	movf	(color_processor_easy@r+1)^0,w,c
  7189   002AFA  580E               	subwfb	(color_processor_easy@g+1)^0,w,c
  7190   002AFC  B0D8               	btfsc	status,0,c
  7191   002AFE  EF83  F015         	goto	u1991
  7192   002B02  EF85  F015         	goto	u1990
  7193   002B06                     u1991:
  7194   002B06  EFA7  F015         	goto	l3224
  7195   002B0A                     u1990:
  7196   002B0A  500B               	movf	color_processor_easy@r^0,w,c
  7197   002B0C  5C0F               	subwf	color_processor_easy@b^0,w,c
  7198   002B0E  500C               	movf	(color_processor_easy@r+1)^0,w,c
  7199   002B10  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  7200   002B12  B0D8               	btfsc	status,0,c
  7201   002B14  EF8E  F015         	goto	u2001
  7202   002B18  EF90  F015         	goto	u2000
  7203   002B1C                     u2001:
  7204   002B1C  EFA7  F015         	goto	l3224
  7205   002B20                     u2000:
  7206   002B20                     
  7207                           ;../color.c: 145:         if (g>b){return 2;}
  7208   002B20  500D               	movf	color_processor_easy@g^0,w,c
  7209   002B22  5C0F               	subwf	color_processor_easy@b^0,w,c
  7210   002B24  500E               	movf	(color_processor_easy@g+1)^0,w,c
  7211   002B26  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  7212   002B28  B0D8               	btfsc	status,0,c
  7213   002B2A  EF99  F015         	goto	u2011
  7214   002B2E  EF9B  F015         	goto	u2010
  7215   002B32                     u2011:
  7216   002B32  EFA1  F015         	goto	l3220
  7217   002B36                     u2010:
  7218   002B36  0E00               	movlw	0
  7219   002B38  6E02               	movwf	(?_color_processor_easy+1)^0,c
  7220   002B3A  0E02               	movlw	2
  7221   002B3C  6E01               	movwf	?_color_processor_easy^0,c
  7222   002B3E  EFAB  F015         	goto	l67
  7223   002B42                     l3220:
  7224   002B42  0E00               	movlw	0
  7225   002B44  6E02               	movwf	(?_color_processor_easy+1)^0,c
  7226   002B46  0E01               	movlw	1
  7227   002B48  6E01               	movwf	?_color_processor_easy^0,c
  7228   002B4A  EFAB  F015         	goto	l67
  7229   002B4E                     l3224:
  7230   002B4E  0E00               	movlw	0
  7231   002B50  6E02               	movwf	(?_color_processor_easy+1)^0,c
  7232   002B52  0E03               	movlw	3
  7233   002B54  6E01               	movwf	?_color_processor_easy^0,c
  7234   002B56                     l67:
  7235   002B56  0012               	return		;funcret
  7236   002B58                     __end_of_color_processor_easy:
  7237                           	callstack 0
  7238                           
  7239 ;; *************** function _color_click_init *****************
  7240 ;; Defined at:
  7241 ;;		line 6 in file "../color.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;		None
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, status,2, status,0, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;Total ram usage:        1 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 4
  7262 ;; This function calls:
  7263 ;;		_I2C_2_Master_Init
  7264 ;;		_color_writetoaddr
  7265 ;; This function is called by:
  7266 ;;		_main
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text38
  7271   0034AC                     __ptext38:
  7272                           	callstack 0
  7273   0034AC                     _color_click_init:
  7274                           	callstack 26
  7275   0034AC                     
  7276                           ;../color.c: 9:     I2C_2_Master_Init();
  7277   0034AC  EC2C  F01C         	call	_I2C_2_Master_Init	;wreg free
  7278   0034B0                     
  7279                           ;../color.c: 12:   color_writetoaddr(0x00, 0x01);
  7280   0034B0  0E01               	movlw	1
  7281   0034B2  6E03               	movwf	color_writetoaddr@value^0,c
  7282   0034B4  0E00               	movlw	0
  7283   0034B6  EC68  F01C         	call	_color_writetoaddr
  7284   0034BA                     
  7285                           ;../color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7286   0034BA  0E3F               	movlw	63
  7287   0034BC  6E05               	movwf	??_color_click_init^0,c
  7288   0034BE  0E55               	movlw	85
  7289   0034C0                     u3137:
  7290   0034C0  2EE8               	decfsz	wreg,f,c
  7291   0034C2  D7FE               	bra	u3137
  7292   0034C4  2E05               	decfsz	??_color_click_init^0,f,c
  7293   0034C6  D7FC               	bra	u3137
  7294   0034C8  F000               	nop	
  7295   0034CA                     
  7296                           ;../color.c: 16:  color_writetoaddr(0x00, 0x03);
  7297   0034CA  0E03               	movlw	3
  7298   0034CC  6E03               	movwf	color_writetoaddr@value^0,c
  7299   0034CE  0E00               	movlw	0
  7300   0034D0  EC68  F01C         	call	_color_writetoaddr
  7301   0034D4                     
  7302                           ;../color.c: 19:  color_writetoaddr(0x01, 0xD5);
  7303   0034D4  0ED5               	movlw	213
  7304   0034D6  6E03               	movwf	color_writetoaddr@value^0,c
  7305   0034D8  0E01               	movlw	1
  7306   0034DA  EC68  F01C         	call	_color_writetoaddr
  7307   0034DE                     
  7308                           ;../color.c: 22:     TRISHbits.TRISH1 = 0;
  7309   0034DE  9288               	bcf	136,1,c	;volatile
  7310   0034E0                     
  7311                           ;../color.c: 23:     TRISDbits.TRISD3 = 0;
  7312   0034E0  9684               	bcf	132,3,c	;volatile
  7313   0034E2                     
  7314                           ;../color.c: 24:     TRISDbits.TRISD4 = 0;
  7315   0034E2  9884               	bcf	132,4,c	;volatile
  7316   0034E4                     
  7317                           ;../color.c: 25:     TRISHbits.TRISH0 = 0;
  7318   0034E4  9088               	bcf	136,0,c	;volatile
  7319   0034E6                     
  7320                           ;../color.c: 26:     TRISFbits.TRISF0 = 0;
  7321   0034E6  9086               	bcf	134,0,c	;volatile
  7322   0034E8                     
  7323                           ;../color.c: 28:     LATHbits.LATH1 = 1;
  7324   0034E8  8280               	bsf	128,1,c	;volatile
  7325   0034EA                     
  7326                           ;../color.c: 29:     LATDbits.LATD3 = 1;
  7327   0034EA  867C               	bsf	124,3,c	;volatile
  7328   0034EC                     
  7329                           ;../color.c: 30:     LATDbits.LATD4 = 0;
  7330   0034EC  987C               	bcf	124,4,c	;volatile
  7331   0034EE                     
  7332                           ;../color.c: 31:     LATHbits.LATH0 = 0;
  7333   0034EE  9080               	bcf	128,0,c	;volatile
  7334   0034F0                     
  7335                           ;../color.c: 32:     LATFbits.LATF0 = 0;
  7336   0034F0  907E               	bcf	126,0,c	;volatile
  7337   0034F2                     
  7338                           ;../color.c: 35:     LATDbits.LATD7=0;
  7339   0034F2  9E7C               	bcf	124,7,c	;volatile
  7340   0034F4                     
  7341                           ;../color.c: 36:     LATHbits.LATH3=0;
  7342   0034F4  9680               	bcf	128,3,c	;volatile
  7343   0034F6                     
  7344                           ;../color.c: 37:     TRISDbits.TRISD7=0;
  7345   0034F6  9E84               	bcf	132,7,c	;volatile
  7346   0034F8                     
  7347                           ;../color.c: 38:     TRISHbits.TRISH3=0;
  7348   0034F8  9688               	bcf	136,3,c	;volatile
  7349   0034FA                     
  7350                           ;../color.c: 40:     TRISFbits.TRISF2=1;
  7351   0034FA  8486               	bsf	134,2,c	;volatile
  7352   0034FC                     
  7353                           ;../color.c: 41:     ANSELFbits.ANSELF2=0;
  7354   0034FC  010E               	movlb	14	; () banked
  7355   0034FE  95B4               	bcf	180,2,b	;volatile
  7356   003500                     
  7357                           ; BSR set to: 14
  7358                           ;../color.c: 42:     TRISFbits.TRISF3=1;
  7359   003500  8686               	bsf	134,3,c	;volatile
  7360   003502                     
  7361                           ; BSR set to: 14
  7362                           ;../color.c: 43:     ANSELFbits.ANSELF3=0;
  7363   003502  97B4               	bcf	180,3,b	;volatile
  7364   003504                     
  7365                           ; BSR set to: 14
  7366   003504  0012               	return		;funcret
  7367   003506                     __end_of_color_click_init:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function _color_writetoaddr *****************
  7371 ;; Defined at:
  7372 ;;		line 46 in file "../color.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  address         1    wreg     unsigned char 
  7375 ;;  value           1    2[COMRAM] unsigned char 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  address         1    3[COMRAM] unsigned char 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7391 ;;Total ram usage:        2 bytes
  7392 ;; Hardware stack levels used: 1
  7393 ;; Hardware stack levels required when called: 3
  7394 ;; This function calls:
  7395 ;;		_I2C_2_Master_Start
  7396 ;;		_I2C_2_Master_Stop
  7397 ;;		_I2C_2_Master_Write
  7398 ;; This function is called by:
  7399 ;;		_color_click_init
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text39
  7404   0038D0                     __ptext39:
  7405                           	callstack 0
  7406   0038D0                     _color_writetoaddr:
  7407                           	callstack 26
  7408                           
  7409                           ; BSR set to: 14
  7410                           ;incstack = 0
  7411                           ;color_writetoaddr@address stored from wreg
  7412   0038D0  6E04               	movwf	color_writetoaddr@address^0,c
  7413   0038D2                     
  7414                           ;../color.c: 46: void color_writetoaddr(char address, char value);../color.c: 47: {;../c
      +                          olor.c: 48:     I2C_2_Master_Start();
  7415   0038D2  ECBE  F01C         	call	_I2C_2_Master_Start	;wreg free
  7416                           
  7417                           ;../color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  7418   0038D6  0E52               	movlw	82
  7419   0038D8  ECAE  F01C         	call	_I2C_2_Master_Write
  7420                           
  7421                           ;../color.c: 50:     I2C_2_Master_Write(0x80 | address);
  7422   0038DC  5004               	movf	color_writetoaddr@address^0,w,c
  7423   0038DE  0980               	iorlw	128
  7424   0038E0  ECAE  F01C         	call	_I2C_2_Master_Write
  7425                           
  7426                           ;../color.c: 51:     I2C_2_Master_Write(value);
  7427   0038E4  5003               	movf	color_writetoaddr@value^0,w,c
  7428   0038E6  ECAE  F01C         	call	_I2C_2_Master_Write
  7429                           
  7430                           ;../color.c: 52:     I2C_2_Master_Stop();
  7431   0038EA  ECB9  F01C         	call	_I2C_2_Master_Stop	;wreg free
  7432   0038EE  0012               	return		;funcret
  7433   0038F0                     __end_of_color_writetoaddr:
  7434                           	callstack 0
  7435                           
  7436 ;; *************** function _I2C_2_Master_Write *****************
  7437 ;; Defined at:
  7438 ;;		line 45 in file "../i2c.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  data_byte       1    wreg     unsigned char 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  data_byte       1    1[COMRAM] unsigned char 
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		wreg, status,2, status,0, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;Total ram usage:        1 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; Hardware stack levels required when called: 2
  7459 ;; This function calls:
  7460 ;;		_I2C_2_Master_Idle
  7461 ;; This function is called by:
  7462 ;;		_color_writetoaddr
  7463 ;;		_color_read_Luminosity
  7464 ;;		_color_read_Red
  7465 ;;		_color_read_Green
  7466 ;;		_color_read_Blue
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text40
  7471   00395C                     __ptext40:
  7472                           	callstack 0
  7473   00395C                     _I2C_2_Master_Write:
  7474                           	callstack 26
  7475                           
  7476                           ;incstack = 0
  7477                           ;I2C_2_Master_Write@data_byte stored from wreg
  7478   00395C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7479   00395E                     
  7480                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  7481   00395E  EC41  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7482   003962                     
  7483                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  7484   003962  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7485   003966  0012               	return		;funcret
  7486   003968                     __end_of_I2C_2_Master_Write:
  7487                           	callstack 0
  7488                           
  7489 ;; *************** function _I2C_2_Master_Stop *****************
  7490 ;; Defined at:
  7491 ;;		line 39 in file "../i2c.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;		None
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; Hardware stack levels required when called: 2
  7512 ;; This function calls:
  7513 ;;		_I2C_2_Master_Idle
  7514 ;; This function is called by:
  7515 ;;		_color_writetoaddr
  7516 ;;		_color_read_Luminosity
  7517 ;;		_color_read_Red
  7518 ;;		_color_read_Green
  7519 ;;		_color_read_Blue
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text41
  7524   003972                     __ptext41:
  7525                           	callstack 0
  7526   003972                     _I2C_2_Master_Stop:
  7527                           	callstack 26
  7528   003972                     
  7529                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  7530   003972  EC41  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7531   003976                     
  7532                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7533   003976  010E               	movlb	14	; () banked
  7534   003978  85DA               	bsf	218,2,b	;volatile
  7535   00397A                     
  7536                           ; BSR set to: 14
  7537   00397A  0012               	return		;funcret
  7538   00397C                     __end_of_I2C_2_Master_Stop:
  7539                           	callstack 0
  7540                           
  7541 ;; *************** function _I2C_2_Master_Start *****************
  7542 ;; Defined at:
  7543 ;;		line 27 in file "../i2c.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;		None
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;		None
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      void 
  7550 ;; Registers used:
  7551 ;;		wreg, status,2, status,0, cstack
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7561 ;;Total ram usage:        0 bytes
  7562 ;; Hardware stack levels used: 1
  7563 ;; Hardware stack levels required when called: 2
  7564 ;; This function calls:
  7565 ;;		_I2C_2_Master_Idle
  7566 ;; This function is called by:
  7567 ;;		_color_writetoaddr
  7568 ;;		_color_read_Luminosity
  7569 ;;		_color_read_Red
  7570 ;;		_color_read_Green
  7571 ;;		_color_read_Blue
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text42
  7576   00397C                     __ptext42:
  7577                           	callstack 0
  7578   00397C                     _I2C_2_Master_Start:
  7579                           	callstack 26
  7580   00397C                     
  7581                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  7582   00397C  EC41  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7583   003980                     
  7584                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7585   003980  010E               	movlb	14	; () banked
  7586   003982  81DA               	bsf	218,0,b	;volatile
  7587   003984                     
  7588                           ; BSR set to: 14
  7589   003984  0012               	return		;funcret
  7590   003986                     __end_of_I2C_2_Master_Start:
  7591                           	callstack 0
  7592                           
  7593 ;; *************** function _I2C_2_Master_Idle *****************
  7594 ;; Defined at:
  7595 ;;		line 22 in file "../i2c.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;Total ram usage:        1 bytes
  7614 ;; Hardware stack levels used: 1
  7615 ;; Hardware stack levels required when called: 1
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_I2C_2_Master_Start
  7620 ;;		_I2C_2_Master_RepStart
  7621 ;;		_I2C_2_Master_Stop
  7622 ;;		_I2C_2_Master_Write
  7623 ;;		_I2C_2_Master_Read
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text43
  7628   003882                     __ptext43:
  7629                           	callstack 0
  7630   003882                     _I2C_2_Master_Idle:
  7631                           	callstack 26
  7632   003882                     l114:
  7633   003882  010E               	movlb	14	; () banked
  7634   003884  B5D8               	btfsc	216,2,b	;volatile
  7635   003886  EF47  F01C         	goto	u1601
  7636   00388A  EF49  F01C         	goto	u1600
  7637   00388E                     u1601:
  7638   00388E  EF41  F01C         	goto	l114
  7639   003892                     u1600:
  7640   003892                     
  7641                           ; BSR set to: 14
  7642   003892  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7643   003896  0E1F               	movlw	31
  7644   003898  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7645   00389A  A4D8               	btfss	status,2,c
  7646   00389C  EF52  F01C         	goto	u1611
  7647   0038A0  EF54  F01C         	goto	u1610
  7648   0038A4                     u1611:
  7649   0038A4  EF41  F01C         	goto	l114
  7650   0038A8                     u1610:
  7651   0038A8                     
  7652                           ; BSR set to: 14
  7653   0038A8  0012               	return		;funcret
  7654   0038AA                     __end_of_I2C_2_Master_Idle:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _I2C_2_Master_Init *****************
  7658 ;; Defined at:
  7659 ;;		line 4 in file "../i2c.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;Total ram usage:        0 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; Hardware stack levels required when called: 1
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_color_click_init
  7684 ;;		_main
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text44
  7689   003858                     __ptext44:
  7690                           	callstack 0
  7691   003858                     _I2C_2_Master_Init:
  7692                           	callstack 28
  7693   003858                     
  7694                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7695   003858  010E               	movlb	14	; () banked
  7696   00385A  51D9               	movf	217,w,b	;volatile
  7697   00385C  0BF0               	andlw	-16
  7698   00385E  0908               	iorlw	8
  7699   003860  6FD9               	movwf	217,b	;volatile
  7700   003862                     
  7701                           ; BSR set to: 14
  7702                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7703   003862  8BD9               	bsf	217,5,b	;volatile
  7704                           
  7705                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7706   003864  0E9F               	movlw	159
  7707   003866  6FD6               	movwf	214,b	;volatile
  7708   003868                     
  7709                           ; BSR set to: 14
  7710                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7711   003868  8A84               	bsf	132,5,c	;volatile
  7712   00386A                     
  7713                           ; BSR set to: 14
  7714                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7715   00386A  8C84               	bsf	132,6,c	;volatile
  7716   00386C                     
  7717                           ; BSR set to: 14
  7718                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7719   00386C  9BA7               	bcf	167,5,b	;volatile
  7720   00386E                     
  7721                           ; BSR set to: 14
  7722                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7723   00386E  9DA7               	bcf	167,6,b	;volatile
  7724                           
  7725                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  7726   003870  0E1D               	movlw	29
  7727   003872  6F1D               	movwf	29,b	;volatile
  7728                           
  7729                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  7730   003874  0E1E               	movlw	30
  7731   003876  6F1C               	movwf	28,b	;volatile
  7732                           
  7733                           ;../i2c.c: 18:   RD5PPS=0x1C;
  7734   003878  0E1C               	movlw	28
  7735   00387A  6F6F               	movwf	111,b	;volatile
  7736                           
  7737                           ;../i2c.c: 19:   RD6PPS=0x1B;
  7738   00387C  0E1B               	movlw	27
  7739   00387E  6F70               	movwf	112,b	;volatile
  7740   003880                     
  7741                           ; BSR set to: 14
  7742   003880  0012               	return		;funcret
  7743   003882                     __end_of_I2C_2_Master_Init:
  7744                           	callstack 0
  7745                           
  7746 ;; *************** function ___xxtofl *****************
  7747 ;; Defined at:
  7748 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  sign            1    wreg     unsigned char 
  7751 ;;  val             4    0[COMRAM] long 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  sign            1    8[COMRAM] unsigned char 
  7754 ;;  arg             4   10[COMRAM] unsigned long 
  7755 ;;  exp             1    9[COMRAM] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  4    0[COMRAM] unsigned char 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;Total ram usage:       14 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; Hardware stack levels required when called: 1
  7772 ;; This function calls:
  7773 ;;		Nothing
  7774 ;; This function is called by:
  7775 ;;		_main
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text45
  7780   002436                     __ptext45:
  7781                           	callstack 0
  7782   002436                     ___xxtofl:
  7783                           	callstack 29
  7784                           
  7785                           ; BSR set to: 14
  7786                           ;incstack = 0
  7787                           ;___xxtofl@sign stored from wreg
  7788   002436  6E09               	movwf	___xxtofl@sign^0,c
  7789   002438  5009               	movf	___xxtofl@sign^0,w,c
  7790   00243A  B4D8               	btfsc	status,2,c
  7791   00243C  EF22  F012         	goto	u2451
  7792   002440  EF24  F012         	goto	u2450
  7793   002444                     u2451:
  7794   002444  EF46  F012         	goto	l1125
  7795   002448                     u2450:
  7796   002448  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7797   00244A  EF2B  F012         	goto	u2460
  7798   00244E  EF29  F012         	goto	u2461
  7799   002452                     u2461:
  7800   002452  EF46  F012         	goto	l1125
  7801   002456                     u2460:
  7802   002456  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7803   00245A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7804   00245E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7805   002462  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7806   002466  1E05               	comf	??___xxtofl^0,f,c
  7807   002468  1E06               	comf	(??___xxtofl+1)^0,f,c
  7808   00246A  1E07               	comf	(??___xxtofl+2)^0,f,c
  7809   00246C  1E08               	comf	(??___xxtofl+3)^0,f,c
  7810   00246E  2A05               	incf	??___xxtofl^0,f,c
  7811   002470  0E00               	movlw	0
  7812   002472  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7813   002474  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7814   002476  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7815   002478  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7816   00247C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7817   002480  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7818   002484  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7819   002488  EF4E  F012         	goto	l3630
  7820   00248C                     l1125:
  7821   00248C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7822   002490  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7823   002494  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7824   002498  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7825   00249C                     l3630:
  7826   00249C  5001               	movf	___xxtofl@val^0,w,c
  7827   00249E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7828   0024A0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7829   0024A2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7830   0024A4  A4D8               	btfss	status,2,c
  7831   0024A6  EF57  F012         	goto	u2471
  7832   0024AA  EF59  F012         	goto	u2470
  7833   0024AE                     u2471:
  7834   0024AE  EF63  F012         	goto	l3636
  7835   0024B2                     u2470:
  7836   0024B2  0E00               	movlw	0
  7837   0024B4  6E01               	movwf	?___xxtofl^0,c
  7838   0024B6  0E00               	movlw	0
  7839   0024B8  6E02               	movwf	(?___xxtofl+1)^0,c
  7840   0024BA  0E00               	movlw	0
  7841   0024BC  6E03               	movwf	(?___xxtofl+2)^0,c
  7842   0024BE  0E00               	movlw	0
  7843   0024C0  6E04               	movwf	(?___xxtofl+3)^0,c
  7844   0024C2  EFF4  F012         	goto	l1128
  7845   0024C6                     l3636:
  7846   0024C6  0E96               	movlw	150
  7847   0024C8  6E0A               	movwf	___xxtofl@exp^0,c
  7848   0024CA  EF6D  F012         	goto	l3640
  7849   0024CE                     l3638:
  7850   0024CE  2A0A               	incf	___xxtofl@exp^0,f,c
  7851   0024D0  90D8               	bcf	status,0,c
  7852   0024D2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7853   0024D4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7854   0024D6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7855   0024D8  320B               	rrcf	___xxtofl@arg^0,f,c
  7856   0024DA                     l3640:
  7857   0024DA  0E00               	movlw	0
  7858   0024DC  140B               	andwf	___xxtofl@arg^0,w,c
  7859   0024DE  6E05               	movwf	??___xxtofl^0,c
  7860   0024E0  0E00               	movlw	0
  7861   0024E2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7862   0024E4  6E06               	movwf	(??___xxtofl+1)^0,c
  7863   0024E6  0E00               	movlw	0
  7864   0024E8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7865   0024EA  6E07               	movwf	(??___xxtofl+2)^0,c
  7866   0024EC  0EFE               	movlw	254
  7867   0024EE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7868   0024F0  6E08               	movwf	(??___xxtofl+3)^0,c
  7869   0024F2  5005               	movf	??___xxtofl^0,w,c
  7870   0024F4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7871   0024F6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7872   0024F8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7873   0024FA  A4D8               	btfss	status,2,c
  7874   0024FC  EF82  F012         	goto	u2481
  7875   002500  EF84  F012         	goto	u2480
  7876   002504                     u2481:
  7877   002504  EF67  F012         	goto	l3638
  7878   002508                     u2480:
  7879   002508  EF92  F012         	goto	l1132
  7880   00250C                     l3642:
  7881   00250C  2A0A               	incf	___xxtofl@exp^0,f,c
  7882   00250E  0E01               	movlw	1
  7883   002510  260B               	addwf	___xxtofl@arg^0,f,c
  7884   002512  0E00               	movlw	0
  7885   002514  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7886   002516  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7887   002518  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7888   00251A  90D8               	bcf	status,0,c
  7889   00251C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7890   00251E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7891   002520  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7892   002522  320B               	rrcf	___xxtofl@arg^0,f,c
  7893   002524                     l1132:
  7894   002524  0E00               	movlw	0
  7895   002526  140B               	andwf	___xxtofl@arg^0,w,c
  7896   002528  6E05               	movwf	??___xxtofl^0,c
  7897   00252A  0E00               	movlw	0
  7898   00252C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7899   00252E  6E06               	movwf	(??___xxtofl+1)^0,c
  7900   002530  0E00               	movlw	0
  7901   002532  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7902   002534  6E07               	movwf	(??___xxtofl+2)^0,c
  7903   002536  0EFF               	movlw	255
  7904   002538  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7905   00253A  6E08               	movwf	(??___xxtofl+3)^0,c
  7906   00253C  5005               	movf	??___xxtofl^0,w,c
  7907   00253E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7908   002540  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7909   002542  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7910   002544  A4D8               	btfss	status,2,c
  7911   002546  EFA7  F012         	goto	u2491
  7912   00254A  EFA9  F012         	goto	u2490
  7913   00254E                     u2491:
  7914   00254E  EF86  F012         	goto	l3642
  7915   002552                     u2490:
  7916   002552  EFB1  F012         	goto	l3650
  7917   002556                     l3648:
  7918   002556  060A               	decf	___xxtofl@exp^0,f,c
  7919   002558  90D8               	bcf	status,0,c
  7920   00255A  360B               	rlcf	___xxtofl@arg^0,f,c
  7921   00255C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7922   00255E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7923   002560  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7924   002562                     l3650:
  7925   002562  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7926   002564  EFB6  F012         	goto	u2501
  7927   002568  EFB8  F012         	goto	u2500
  7928   00256C                     u2501:
  7929   00256C  EFC0  F012         	goto	l1139
  7930   002570                     u2500:
  7931   002570  0E02               	movlw	2
  7932   002572  600A               	cpfslt	___xxtofl@exp^0,c
  7933   002574  EFBE  F012         	goto	u2511
  7934   002578  EFC0  F012         	goto	u2510
  7935   00257C                     u2511:
  7936   00257C  EFAB  F012         	goto	l3648
  7937   002580                     u2510:
  7938   002580                     l1139:
  7939   002580  B00A               	btfsc	___xxtofl@exp^0,0,c
  7940   002582  EFC5  F012         	goto	u2521
  7941   002586  EFC7  F012         	goto	u2520
  7942   00258A                     u2521:
  7943   00258A  EFC8  F012         	goto	l3656
  7944   00258E                     u2520:
  7945   00258E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7946   002590                     l3656:
  7947   002590  90D8               	bcf	status,0,c
  7948   002592  320A               	rrcf	___xxtofl@exp^0,f,c
  7949   002594  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7950   002598  6A06               	clrf	(??___xxtofl+1)^0,c
  7951   00259A  6A07               	clrf	(??___xxtofl+2)^0,c
  7952   00259C  6A08               	clrf	(??___xxtofl+3)^0,c
  7953   00259E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7954   0025A2  6A07               	clrf	(??___xxtofl+2)^0,c
  7955   0025A4  6A06               	clrf	(??___xxtofl+1)^0,c
  7956   0025A6  6A05               	clrf	??___xxtofl^0,c
  7957   0025A8  5005               	movf	??___xxtofl^0,w,c
  7958   0025AA  120B               	iorwf	___xxtofl@arg^0,f,c
  7959   0025AC  5006               	movf	(??___xxtofl+1)^0,w,c
  7960   0025AE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7961   0025B0  5007               	movf	(??___xxtofl+2)^0,w,c
  7962   0025B2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7963   0025B4  5008               	movf	(??___xxtofl+3)^0,w,c
  7964   0025B6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7965   0025B8  5009               	movf	___xxtofl@sign^0,w,c
  7966   0025BA  B4D8               	btfsc	status,2,c
  7967   0025BC  EFE2  F012         	goto	u2531
  7968   0025C0  EFE4  F012         	goto	u2530
  7969   0025C4                     u2531:
  7970   0025C4  EFEC  F012         	goto	l3666
  7971   0025C8                     u2530:
  7972   0025C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7973   0025CA  EFEB  F012         	goto	u2540
  7974   0025CE  EFE9  F012         	goto	u2541
  7975   0025D2                     u2541:
  7976   0025D2  EFEC  F012         	goto	l3666
  7977   0025D6                     u2540:
  7978   0025D6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7979   0025D8                     l3666:
  7980   0025D8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7981   0025DC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7982   0025E0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7983   0025E4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7984   0025E8                     l1128:
  7985   0025E8  0012               	return		;funcret
  7986   0025EA                     __end_of___xxtofl:
  7987                           	callstack 0
  7988                           
  7989 ;; *************** function ___fltol *****************
  7990 ;; Defined at:
  7991 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  f1              4   39[COMRAM] unsigned char 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  exp1            1   48[COMRAM] unsigned char 
  7996 ;;  sign1           1   47[COMRAM] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  4   39[COMRAM] long 
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8008 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8009 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8010 ;;Total ram usage:       10 bytes
  8011 ;; Hardware stack levels used: 1
  8012 ;; Hardware stack levels required when called: 1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_main
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text46
  8021   002B58                     __ptext46:
  8022                           	callstack 0
  8023   002B58                     ___fltol:
  8024                           	callstack 29
  8025   002B58  342A               	rlcf	(___fltol@f1+2)^0,w,c
  8026   002B5A  342B               	rlcf	(___fltol@f1+3)^0,w,c
  8027   002B5C  6E31               	movwf	___fltol@exp1^0,c
  8028   002B5E  5031               	movf	___fltol@exp1^0,w,c
  8029   002B60  A4D8               	btfss	status,2,c
  8030   002B62  EFB5  F015         	goto	u2381
  8031   002B66  EFB7  F015         	goto	u2380
  8032   002B6A                     u2381:
  8033   002B6A  EFC1  F015         	goto	l3586
  8034   002B6E                     u2380:
  8035   002B6E                     l3582:
  8036   002B6E  0E00               	movlw	0
  8037   002B70  6E28               	movwf	?___fltol^0,c
  8038   002B72  0E00               	movlw	0
  8039   002B74  6E29               	movwf	(?___fltol+1)^0,c
  8040   002B76  0E00               	movlw	0
  8041   002B78  6E2A               	movwf	(?___fltol+2)^0,c
  8042   002B7A  0E00               	movlw	0
  8043   002B7C  6E2B               	movwf	(?___fltol+3)^0,c
  8044   002B7E  EF2E  F016         	goto	l767
  8045   002B82                     l3586:
  8046   002B82  C028  F02C         	movff	___fltol@f1,??___fltol
  8047   002B86  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  8048   002B8A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  8049   002B8E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  8050   002B92  0E20               	movlw	32
  8051   002B94  EFD1  F015         	goto	u2390
  8052   002B98                     u2395:
  8053   002B98  90D8               	bcf	status,0,c
  8054   002B9A  322F               	rrcf	(??___fltol+3)^0,f,c
  8055   002B9C  322E               	rrcf	(??___fltol+2)^0,f,c
  8056   002B9E  322D               	rrcf	(??___fltol+1)^0,f,c
  8057   002BA0  322C               	rrcf	??___fltol^0,f,c
  8058   002BA2                     u2390:
  8059   002BA2  2EE8               	decfsz	wreg,f,c
  8060   002BA4  EFCC  F015         	goto	u2395
  8061   002BA8  502C               	movf	??___fltol^0,w,c
  8062   002BAA  6E30               	movwf	___fltol@sign1^0,c
  8063   002BAC  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  8064   002BAE  0EFF               	movlw	255
  8065   002BB0  1628               	andwf	___fltol@f1^0,f,c
  8066   002BB2  0EFF               	movlw	255
  8067   002BB4  1629               	andwf	(___fltol@f1+1)^0,f,c
  8068   002BB6  0EFF               	movlw	255
  8069   002BB8  162A               	andwf	(___fltol@f1+2)^0,f,c
  8070   002BBA  0E00               	movlw	0
  8071   002BBC  162B               	andwf	(___fltol@f1+3)^0,f,c
  8072   002BBE  0E96               	movlw	150
  8073   002BC0  5E31               	subwf	___fltol@exp1^0,f,c
  8074   002BC2  BE31               	btfsc	___fltol@exp1^0,7,c
  8075   002BC4  EFE8  F015         	goto	u2400
  8076   002BC8  EFE6  F015         	goto	u2401
  8077   002BCC                     u2401:
  8078   002BCC  EFFE  F015         	goto	l3606
  8079   002BD0                     u2400:
  8080   002BD0  5031               	movf	___fltol@exp1^0,w,c
  8081   002BD2  0A80               	xorlw	128
  8082   002BD4  0F97               	addlw	151
  8083   002BD6  B0D8               	btfsc	status,0,c
  8084   002BD8  EFF0  F015         	goto	u2411
  8085   002BDC  EFF2  F015         	goto	u2410
  8086   002BE0                     u2411:
  8087   002BE0  EFF4  F015         	goto	l3602
  8088   002BE4                     u2410:
  8089   002BE4  EFB7  F015         	goto	l3582
  8090   002BE8                     l3602:
  8091   002BE8  90D8               	bcf	status,0,c
  8092   002BEA  322B               	rrcf	(___fltol@f1+3)^0,f,c
  8093   002BEC  322A               	rrcf	(___fltol@f1+2)^0,f,c
  8094   002BEE  3229               	rrcf	(___fltol@f1+1)^0,f,c
  8095   002BF0  3228               	rrcf	___fltol@f1^0,f,c
  8096   002BF2  3E31               	incfsz	___fltol@exp1^0,f,c
  8097   002BF4  EFF4  F015         	goto	l3602
  8098   002BF8  EF16  F016         	goto	l3616
  8099   002BFC                     l3606:
  8100   002BFC  0E1F               	movlw	31
  8101   002BFE  6431               	cpfsgt	___fltol@exp1^0,c
  8102   002C00  EF04  F016         	goto	u2421
  8103   002C04  EF06  F016         	goto	u2420
  8104   002C08                     u2421:
  8105   002C08  EF0E  F016         	goto	l3614
  8106   002C0C                     u2420:
  8107   002C0C  EFB7  F015         	goto	l3582
  8108   002C10                     l3612:
  8109   002C10  90D8               	bcf	status,0,c
  8110   002C12  3628               	rlcf	___fltol@f1^0,f,c
  8111   002C14  3629               	rlcf	(___fltol@f1+1)^0,f,c
  8112   002C16  362A               	rlcf	(___fltol@f1+2)^0,f,c
  8113   002C18  362B               	rlcf	(___fltol@f1+3)^0,f,c
  8114   002C1A  0631               	decf	___fltol@exp1^0,f,c
  8115   002C1C                     l3614:
  8116   002C1C  5031               	movf	___fltol@exp1^0,w,c
  8117   002C1E  A4D8               	btfss	status,2,c
  8118   002C20  EF14  F016         	goto	u2431
  8119   002C24  EF16  F016         	goto	u2430
  8120   002C28                     u2431:
  8121   002C28  EF08  F016         	goto	l3612
  8122   002C2C                     u2430:
  8123   002C2C                     l3616:
  8124   002C2C  5030               	movf	___fltol@sign1^0,w,c
  8125   002C2E  B4D8               	btfsc	status,2,c
  8126   002C30  EF1C  F016         	goto	u2441
  8127   002C34  EF1E  F016         	goto	u2440
  8128   002C38                     u2441:
  8129   002C38  EF26  F016         	goto	l3620
  8130   002C3C                     u2440:
  8131   002C3C  1E2B               	comf	(___fltol@f1+3)^0,f,c
  8132   002C3E  1E2A               	comf	(___fltol@f1+2)^0,f,c
  8133   002C40  1E29               	comf	(___fltol@f1+1)^0,f,c
  8134   002C42  6C28               	negf	___fltol@f1^0,c
  8135   002C44  0E00               	movlw	0
  8136   002C46  2229               	addwfc	(___fltol@f1+1)^0,f,c
  8137   002C48  222A               	addwfc	(___fltol@f1+2)^0,f,c
  8138   002C4A  222B               	addwfc	(___fltol@f1+3)^0,f,c
  8139   002C4C                     l3620:
  8140   002C4C  C028  F028         	movff	___fltol@f1,?___fltol
  8141   002C50  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  8142   002C54  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  8143   002C58  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  8144   002C5C                     l767:
  8145   002C5C  0012               	return		;funcret
  8146   002C5E                     __end_of___fltol:
  8147                           	callstack 0
  8148                           
  8149 ;; *************** function ___flmul *****************
  8150 ;; Defined at:
  8151 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  b               4   14[COMRAM] long 
  8154 ;;  a               4   18[COMRAM] long 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  prod            4   33[COMRAM] struct .
  8157 ;;  grs             4   27[COMRAM] unsigned long 
  8158 ;;  temp            2   37[COMRAM] struct .
  8159 ;;  bexp            1   32[COMRAM] unsigned char 
  8160 ;;  aexp            1   31[COMRAM] unsigned char 
  8161 ;;  sign            1   26[COMRAM] unsigned char 
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  4   14[COMRAM] unsigned char 
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0, prodl, prodh
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8171 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8174 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;Total ram usage:       25 bytes
  8176 ;; Hardware stack levels used: 1
  8177 ;; Hardware stack levels required when called: 1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_main
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text47
  8186   0019D6                     __ptext47:
  8187                           	callstack 0
  8188   0019D6                     ___flmul:
  8189                           	callstack 29
  8190   0019D6  5012               	movf	(___flmul@b+3)^0,w,c
  8191   0019D8  0B80               	andlw	128
  8192   0019DA  6E1B               	movwf	___flmul@sign^0,c
  8193   0019DC  5012               	movf	(___flmul@b+3)^0,w,c
  8194   0019DE  2412               	addwf	(___flmul@b+3)^0,w,c
  8195   0019E0  6E21               	movwf	___flmul@bexp^0,c
  8196   0019E2  AE11               	btfss	(___flmul@b+2)^0,7,c
  8197   0019E4  EFF6  F00C         	goto	u2191
  8198   0019E8  EFF8  F00C         	goto	u2190
  8199   0019EC                     u2191:
  8200   0019EC  EFF9  F00C         	goto	l3456
  8201   0019F0                     u2190:
  8202   0019F0  8021               	bsf	___flmul@bexp^0,0,c
  8203   0019F2                     l3456:
  8204   0019F2  5021               	movf	___flmul@bexp^0,w,c
  8205   0019F4  B4D8               	btfsc	status,2,c
  8206   0019F6  EFFF  F00C         	goto	u2201
  8207   0019FA  EF01  F00D         	goto	u2200
  8208   0019FE                     u2201:
  8209   0019FE  EF14  F00D         	goto	l3464
  8210   001A02                     u2200:
  8211   001A02  2821               	incf	___flmul@bexp^0,w,c
  8212   001A04  A4D8               	btfss	status,2,c
  8213   001A06  EF07  F00D         	goto	u2211
  8214   001A0A  EF09  F00D         	goto	u2210
  8215   001A0E                     u2211:
  8216   001A0E  EF11  F00D         	goto	l3462
  8217   001A12                     u2210:
  8218   001A12  0E00               	movlw	0
  8219   001A14  6E0F               	movwf	___flmul@b^0,c
  8220   001A16  0E00               	movlw	0
  8221   001A18  6E10               	movwf	(___flmul@b+1)^0,c
  8222   001A1A  0E00               	movlw	0
  8223   001A1C  6E11               	movwf	(___flmul@b+2)^0,c
  8224   001A1E  0E00               	movlw	0
  8225   001A20  6E12               	movwf	(___flmul@b+3)^0,c
  8226   001A22                     l3462:
  8227   001A22  8E11               	bsf	(___flmul@b+2)^0,7,c
  8228   001A24  EF1C  F00D         	goto	l3466
  8229   001A28                     l3464:
  8230   001A28  0E00               	movlw	0
  8231   001A2A  6E0F               	movwf	___flmul@b^0,c
  8232   001A2C  0E00               	movlw	0
  8233   001A2E  6E10               	movwf	(___flmul@b+1)^0,c
  8234   001A30  0E00               	movlw	0
  8235   001A32  6E11               	movwf	(___flmul@b+2)^0,c
  8236   001A34  0E00               	movlw	0
  8237   001A36  6E12               	movwf	(___flmul@b+3)^0,c
  8238   001A38                     l3466:
  8239   001A38  5016               	movf	(___flmul@a+3)^0,w,c
  8240   001A3A  0B80               	andlw	128
  8241   001A3C  1A1B               	xorwf	___flmul@sign^0,f,c
  8242   001A3E  5016               	movf	(___flmul@a+3)^0,w,c
  8243   001A40  2416               	addwf	(___flmul@a+3)^0,w,c
  8244   001A42  6E20               	movwf	___flmul@aexp^0,c
  8245   001A44  AE15               	btfss	(___flmul@a+2)^0,7,c
  8246   001A46  EF27  F00D         	goto	u2221
  8247   001A4A  EF29  F00D         	goto	u2220
  8248   001A4E                     u2221:
  8249   001A4E  EF2A  F00D         	goto	l3474
  8250   001A52                     u2220:
  8251   001A52  8020               	bsf	___flmul@aexp^0,0,c
  8252   001A54                     l3474:
  8253   001A54  5020               	movf	___flmul@aexp^0,w,c
  8254   001A56  B4D8               	btfsc	status,2,c
  8255   001A58  EF30  F00D         	goto	u2231
  8256   001A5C  EF32  F00D         	goto	u2230
  8257   001A60                     u2231:
  8258   001A60  EF45  F00D         	goto	l3482
  8259   001A64                     u2230:
  8260   001A64  2820               	incf	___flmul@aexp^0,w,c
  8261   001A66  A4D8               	btfss	status,2,c
  8262   001A68  EF38  F00D         	goto	u2241
  8263   001A6C  EF3A  F00D         	goto	u2240
  8264   001A70                     u2241:
  8265   001A70  EF42  F00D         	goto	l3480
  8266   001A74                     u2240:
  8267   001A74  0E00               	movlw	0
  8268   001A76  6E13               	movwf	___flmul@a^0,c
  8269   001A78  0E00               	movlw	0
  8270   001A7A  6E14               	movwf	(___flmul@a+1)^0,c
  8271   001A7C  0E00               	movlw	0
  8272   001A7E  6E15               	movwf	(___flmul@a+2)^0,c
  8273   001A80  0E00               	movlw	0
  8274   001A82  6E16               	movwf	(___flmul@a+3)^0,c
  8275   001A84                     l3480:
  8276   001A84  8E15               	bsf	(___flmul@a+2)^0,7,c
  8277   001A86  EF4D  F00D         	goto	l1084
  8278   001A8A                     l3482:
  8279   001A8A  0E00               	movlw	0
  8280   001A8C  6E13               	movwf	___flmul@a^0,c
  8281   001A8E  0E00               	movlw	0
  8282   001A90  6E14               	movwf	(___flmul@a+1)^0,c
  8283   001A92  0E00               	movlw	0
  8284   001A94  6E15               	movwf	(___flmul@a+2)^0,c
  8285   001A96  0E00               	movlw	0
  8286   001A98  6E16               	movwf	(___flmul@a+3)^0,c
  8287   001A9A                     l1084:
  8288   001A9A  5020               	movf	___flmul@aexp^0,w,c
  8289   001A9C  B4D8               	btfsc	status,2,c
  8290   001A9E  EF53  F00D         	goto	u2251
  8291   001AA2  EF55  F00D         	goto	u2250
  8292   001AA6                     u2251:
  8293   001AA6  EF5D  F00D         	goto	l3486
  8294   001AAA                     u2250:
  8295   001AAA  5021               	movf	___flmul@bexp^0,w,c
  8296   001AAC  A4D8               	btfss	status,2,c
  8297   001AAE  EF5B  F00D         	goto	u2261
  8298   001AB2  EF5D  F00D         	goto	u2260
  8299   001AB6                     u2261:
  8300   001AB6  EF67  F00D         	goto	l3490
  8301   001ABA                     u2260:
  8302   001ABA                     l3486:
  8303   001ABA  0E00               	movlw	0
  8304   001ABC  6E0F               	movwf	?___flmul^0,c
  8305   001ABE  0E00               	movlw	0
  8306   001AC0  6E10               	movwf	(?___flmul+1)^0,c
  8307   001AC2  0E00               	movlw	0
  8308   001AC4  6E11               	movwf	(?___flmul+2)^0,c
  8309   001AC6  0E00               	movlw	0
  8310   001AC8  6E12               	movwf	(?___flmul+3)^0,c
  8311   001ACA  EFFF  F00E         	goto	l1088
  8312   001ACE                     l3490:
  8313   001ACE  5015               	movf	(___flmul@a+2)^0,w,c
  8314   001AD0  020F               	mulwf	___flmul@b^0,c
  8315   001AD2  CFF3 F026          	movff	prodl,___flmul@temp
  8316   001AD6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8317   001ADA  5026               	movf	___flmul@temp^0,w,c
  8318   001ADC  6E1C               	movwf	___flmul@grs^0,c
  8319   001ADE  6A1D               	clrf	(___flmul@grs+1)^0,c
  8320   001AE0  6A1E               	clrf	(___flmul@grs+2)^0,c
  8321   001AE2  6A1F               	clrf	(___flmul@grs+3)^0,c
  8322   001AE4  5027               	movf	(___flmul@temp+1)^0,w,c
  8323   001AE6  6E22               	movwf	___flmul@prod^0,c
  8324   001AE8  6A23               	clrf	(___flmul@prod+1)^0,c
  8325   001AEA  6A24               	clrf	(___flmul@prod+2)^0,c
  8326   001AEC  6A25               	clrf	(___flmul@prod+3)^0,c
  8327   001AEE  5014               	movf	(___flmul@a+1)^0,w,c
  8328   001AF0  0210               	mulwf	(___flmul@b+1)^0,c
  8329   001AF2  CFF3 F026          	movff	prodl,___flmul@temp
  8330   001AF6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8331   001AFA  5026               	movf	___flmul@temp^0,w,c
  8332   001AFC  261C               	addwf	___flmul@grs^0,f,c
  8333   001AFE  0E00               	movlw	0
  8334   001B00  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8335   001B02  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8336   001B04  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8337   001B06  5027               	movf	(___flmul@temp+1)^0,w,c
  8338   001B08  2622               	addwf	___flmul@prod^0,f,c
  8339   001B0A  0E00               	movlw	0
  8340   001B0C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8341   001B0E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8342   001B10  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8343   001B12  5013               	movf	___flmul@a^0,w,c
  8344   001B14  0211               	mulwf	(___flmul@b+2)^0,c
  8345   001B16  CFF3 F026          	movff	prodl,___flmul@temp
  8346   001B1A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8347   001B1E  5026               	movf	___flmul@temp^0,w,c
  8348   001B20  261C               	addwf	___flmul@grs^0,f,c
  8349   001B22  0E00               	movlw	0
  8350   001B24  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8351   001B26  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8352   001B28  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8353   001B2A  5027               	movf	(___flmul@temp+1)^0,w,c
  8354   001B2C  2622               	addwf	___flmul@prod^0,f,c
  8355   001B2E  0E00               	movlw	0
  8356   001B30  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8357   001B32  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8358   001B34  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8359   001B36  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8360   001B3A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8361   001B3E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8362   001B42  6A1C               	clrf	___flmul@grs^0,c
  8363   001B44  5013               	movf	___flmul@a^0,w,c
  8364   001B46  0210               	mulwf	(___flmul@b+1)^0,c
  8365   001B48  CFF3 F026          	movff	prodl,___flmul@temp
  8366   001B4C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8367   001B50  5026               	movf	___flmul@temp^0,w,c
  8368   001B52  261C               	addwf	___flmul@grs^0,f,c
  8369   001B54  5027               	movf	(___flmul@temp+1)^0,w,c
  8370   001B56  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8371   001B58  0E00               	movlw	0
  8372   001B5A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8373   001B5C  0E00               	movlw	0
  8374   001B5E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8375   001B60  5014               	movf	(___flmul@a+1)^0,w,c
  8376   001B62  020F               	mulwf	___flmul@b^0,c
  8377   001B64  CFF3 F026          	movff	prodl,___flmul@temp
  8378   001B68  CFF4 F027          	movff	prodh,___flmul@temp+1
  8379   001B6C  5026               	movf	___flmul@temp^0,w,c
  8380   001B6E  261C               	addwf	___flmul@grs^0,f,c
  8381   001B70  5027               	movf	(___flmul@temp+1)^0,w,c
  8382   001B72  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8383   001B74  0E00               	movlw	0
  8384   001B76  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8385   001B78  0E00               	movlw	0
  8386   001B7A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8387   001B7C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8388   001B80  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8389   001B84  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8390   001B88  6A1C               	clrf	___flmul@grs^0,c
  8391   001B8A  5013               	movf	___flmul@a^0,w,c
  8392   001B8C  020F               	mulwf	___flmul@b^0,c
  8393   001B8E  CFF3 F026          	movff	prodl,___flmul@temp
  8394   001B92  CFF4 F027          	movff	prodh,___flmul@temp+1
  8395   001B96  5026               	movf	___flmul@temp^0,w,c
  8396   001B98  261C               	addwf	___flmul@grs^0,f,c
  8397   001B9A  5027               	movf	(___flmul@temp+1)^0,w,c
  8398   001B9C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8399   001B9E  0E00               	movlw	0
  8400   001BA0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8401   001BA2  0E00               	movlw	0
  8402   001BA4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8403   001BA6  5015               	movf	(___flmul@a+2)^0,w,c
  8404   001BA8  0210               	mulwf	(___flmul@b+1)^0,c
  8405   001BAA  CFF3 F026          	movff	prodl,___flmul@temp
  8406   001BAE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8407   001BB2  5026               	movf	___flmul@temp^0,w,c
  8408   001BB4  2622               	addwf	___flmul@prod^0,f,c
  8409   001BB6  5027               	movf	(___flmul@temp+1)^0,w,c
  8410   001BB8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8411   001BBA  0E00               	movlw	0
  8412   001BBC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8413   001BBE  0E00               	movlw	0
  8414   001BC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8415   001BC2  5014               	movf	(___flmul@a+1)^0,w,c
  8416   001BC4  0211               	mulwf	(___flmul@b+2)^0,c
  8417   001BC6  CFF3 F026          	movff	prodl,___flmul@temp
  8418   001BCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  8419   001BCE  5026               	movf	___flmul@temp^0,w,c
  8420   001BD0  2622               	addwf	___flmul@prod^0,f,c
  8421   001BD2  5027               	movf	(___flmul@temp+1)^0,w,c
  8422   001BD4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8423   001BD6  0E00               	movlw	0
  8424   001BD8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8425   001BDA  0E00               	movlw	0
  8426   001BDC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8427   001BDE  5015               	movf	(___flmul@a+2)^0,w,c
  8428   001BE0  0211               	mulwf	(___flmul@b+2)^0,c
  8429   001BE2  CFF3 F026          	movff	prodl,___flmul@temp
  8430   001BE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8431   001BEA  5026               	movf	___flmul@temp^0,w,c
  8432   001BEC  6E17               	movwf	??___flmul^0,c
  8433   001BEE  5027               	movf	(___flmul@temp+1)^0,w,c
  8434   001BF0  6E18               	movwf	(??___flmul+1)^0,c
  8435   001BF2  6A19               	clrf	(??___flmul+2)^0,c
  8436   001BF4  6A1A               	clrf	(??___flmul+3)^0,c
  8437   001BF6  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8438   001BFA  C018  F019         	movff	??___flmul+1,??___flmul+2
  8439   001BFE  C017  F018         	movff	??___flmul,??___flmul+1
  8440   001C02  6A17               	clrf	??___flmul^0,c
  8441   001C04  5017               	movf	??___flmul^0,w,c
  8442   001C06  2622               	addwf	___flmul@prod^0,f,c
  8443   001C08  5018               	movf	(??___flmul+1)^0,w,c
  8444   001C0A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8445   001C0C  5019               	movf	(??___flmul+2)^0,w,c
  8446   001C0E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8447   001C10  501A               	movf	(??___flmul+3)^0,w,c
  8448   001C12  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8449   001C14  C01C  F017         	movff	___flmul@grs,??___flmul
  8450   001C18  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8451   001C1C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8452   001C20  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8453   001C24  0E19               	movlw	25
  8454   001C26  EF1A  F00E         	goto	u2270
  8455   001C2A                     u2275:
  8456   001C2A  90D8               	bcf	status,0,c
  8457   001C2C  321A               	rrcf	(??___flmul+3)^0,f,c
  8458   001C2E  3219               	rrcf	(??___flmul+2)^0,f,c
  8459   001C30  3218               	rrcf	(??___flmul+1)^0,f,c
  8460   001C32  3217               	rrcf	??___flmul^0,f,c
  8461   001C34                     u2270:
  8462   001C34  2EE8               	decfsz	wreg,f,c
  8463   001C36  EF15  F00E         	goto	u2275
  8464   001C3A  5017               	movf	??___flmul^0,w,c
  8465   001C3C  2622               	addwf	___flmul@prod^0,f,c
  8466   001C3E  5018               	movf	(??___flmul+1)^0,w,c
  8467   001C40  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8468   001C42  5019               	movf	(??___flmul+2)^0,w,c
  8469   001C44  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8470   001C46  501A               	movf	(??___flmul+3)^0,w,c
  8471   001C48  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8472   001C4A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8473   001C4E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8474   001C52  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8475   001C56  6A1C               	clrf	___flmul@grs^0,c
  8476   001C58  5020               	movf	___flmul@aexp^0,w,c
  8477   001C5A  C021  F017         	movff	___flmul@bexp,??___flmul
  8478   001C5E  6A18               	clrf	(??___flmul+1)^0,c
  8479   001C60  2617               	addwf	??___flmul^0,f,c
  8480   001C62  0E00               	movlw	0
  8481   001C64  2218               	addwfc	(??___flmul+1)^0,f,c
  8482   001C66  0E82               	movlw	130
  8483   001C68  2417               	addwf	??___flmul^0,w,c
  8484   001C6A  6E26               	movwf	___flmul@temp^0,c
  8485   001C6C  0EFF               	movlw	255
  8486   001C6E  2018               	addwfc	(??___flmul+1)^0,w,c
  8487   001C70  6E27               	movwf	(___flmul@temp+1)^0,c
  8488   001C72  EF50  F00E         	goto	l3538
  8489   001C76                     l3532:
  8490   001C76  90D8               	bcf	status,0,c
  8491   001C78  3622               	rlcf	___flmul@prod^0,f,c
  8492   001C7A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8493   001C7C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8494   001C7E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8495   001C80  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8496   001C82  EF45  F00E         	goto	u2281
  8497   001C86  EF47  F00E         	goto	u2280
  8498   001C8A                     u2281:
  8499   001C8A  EF48  F00E         	goto	l1091
  8500   001C8E                     u2280:
  8501   001C8E  8022               	bsf	___flmul@prod^0,0,c
  8502   001C90                     l1091:
  8503   001C90  90D8               	bcf	status,0,c
  8504   001C92  361C               	rlcf	___flmul@grs^0,f,c
  8505   001C94  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8506   001C96  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8507   001C98  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8508   001C9A  0626               	decf	___flmul@temp^0,f,c
  8509   001C9C  A0D8               	btfss	status,0,c
  8510   001C9E  0627               	decf	(___flmul@temp+1)^0,f,c
  8511   001CA0                     l3538:
  8512   001CA0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8513   001CA2  EF55  F00E         	goto	u2291
  8514   001CA6  EF57  F00E         	goto	u2290
  8515   001CAA                     u2291:
  8516   001CAA  EF3B  F00E         	goto	l3532
  8517   001CAE                     u2290:
  8518   001CAE  0E00               	movlw	0
  8519   001CB0  6E20               	movwf	___flmul@aexp^0,c
  8520   001CB2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8521   001CB4  EF5E  F00E         	goto	u2301
  8522   001CB8  EF60  F00E         	goto	u2300
  8523   001CBC                     u2301:
  8524   001CBC  EF84  F00E         	goto	l1093
  8525   001CC0                     u2300:
  8526   001CC0  0EFF               	movlw	255
  8527   001CC2  141C               	andwf	___flmul@grs^0,w,c
  8528   001CC4  6E17               	movwf	??___flmul^0,c
  8529   001CC6  0EFF               	movlw	255
  8530   001CC8  141D               	andwf	(___flmul@grs+1)^0,w,c
  8531   001CCA  6E18               	movwf	(??___flmul+1)^0,c
  8532   001CCC  0EFF               	movlw	255
  8533   001CCE  141E               	andwf	(___flmul@grs+2)^0,w,c
  8534   001CD0  6E19               	movwf	(??___flmul+2)^0,c
  8535   001CD2  0E7F               	movlw	127
  8536   001CD4  141F               	andwf	(___flmul@grs+3)^0,w,c
  8537   001CD6  6E1A               	movwf	(??___flmul+3)^0,c
  8538   001CD8  5017               	movf	??___flmul^0,w,c
  8539   001CDA  1018               	iorwf	(??___flmul+1)^0,w,c
  8540   001CDC  1019               	iorwf	(??___flmul+2)^0,w,c
  8541   001CDE  101A               	iorwf	(??___flmul+3)^0,w,c
  8542   001CE0  B4D8               	btfsc	status,2,c
  8543   001CE2  EF75  F00E         	goto	u2311
  8544   001CE6  EF77  F00E         	goto	u2310
  8545   001CEA                     u2311:
  8546   001CEA  EF7B  F00E         	goto	l1094
  8547   001CEE                     u2310:
  8548   001CEE                     l3546:
  8549   001CEE  0E01               	movlw	1
  8550   001CF0  6E20               	movwf	___flmul@aexp^0,c
  8551   001CF2  EF84  F00E         	goto	l1093
  8552   001CF6                     l1094:
  8553   001CF6  A022               	btfss	___flmul@prod^0,0,c
  8554   001CF8  EF80  F00E         	goto	u2321
  8555   001CFC  EF82  F00E         	goto	u2320
  8556   001D00                     u2321:
  8557   001D00  EF84  F00E         	goto	l1093
  8558   001D04                     u2320:
  8559   001D04  EF77  F00E         	goto	l3546
  8560   001D08                     l1093:
  8561   001D08  5020               	movf	___flmul@aexp^0,w,c
  8562   001D0A  B4D8               	btfsc	status,2,c
  8563   001D0C  EF8A  F00E         	goto	u2331
  8564   001D10  EF8C  F00E         	goto	u2330
  8565   001D14                     u2331:
  8566   001D14  EFB0  F00E         	goto	l3558
  8567   001D18                     u2330:
  8568   001D18  0E01               	movlw	1
  8569   001D1A  2622               	addwf	___flmul@prod^0,f,c
  8570   001D1C  0E00               	movlw	0
  8571   001D1E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8572   001D20  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8573   001D22  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8574   001D24  A025               	btfss	(___flmul@prod+3)^0,0,c
  8575   001D26  EF97  F00E         	goto	u2341
  8576   001D2A  EF99  F00E         	goto	u2340
  8577   001D2E                     u2341:
  8578   001D2E  EFB0  F00E         	goto	l3558
  8579   001D32                     u2340:
  8580   001D32  C022  F017         	movff	___flmul@prod,??___flmul
  8581   001D36  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8582   001D3A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8583   001D3E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8584   001D42  341A               	rlcf	(??___flmul+3)^0,w,c
  8585   001D44  321A               	rrcf	(??___flmul+3)^0,f,c
  8586   001D46  3219               	rrcf	(??___flmul+2)^0,f,c
  8587   001D48  3218               	rrcf	(??___flmul+1)^0,f,c
  8588   001D4A  3217               	rrcf	??___flmul^0,f,c
  8589   001D4C  C017  F022         	movff	??___flmul,___flmul@prod
  8590   001D50  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8591   001D54  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8592   001D58  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8593   001D5C  4A26               	infsnz	___flmul@temp^0,f,c
  8594   001D5E  2A27               	incf	(___flmul@temp+1)^0,f,c
  8595   001D60                     l3558:
  8596   001D60  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8597   001D62  EFBB  F00E         	goto	u2351
  8598   001D66  5027               	movf	(___flmul@temp+1)^0,w,c
  8599   001D68  E108               	bnz	u2350
  8600   001D6A  2826               	incf	___flmul@temp^0,w,c
  8601   001D6C  A0D8               	btfss	status,0,c
  8602   001D6E  EFBB  F00E         	goto	u2351
  8603   001D72  EFBD  F00E         	goto	u2350
  8604   001D76                     u2351:
  8605   001D76  EFC7  F00E         	goto	l3562
  8606   001D7A                     u2350:
  8607   001D7A  0E00               	movlw	0
  8608   001D7C  6E22               	movwf	___flmul@prod^0,c
  8609   001D7E  0E00               	movlw	0
  8610   001D80  6E23               	movwf	(___flmul@prod+1)^0,c
  8611   001D82  0E80               	movlw	128
  8612   001D84  6E24               	movwf	(___flmul@prod+2)^0,c
  8613   001D86  0E7F               	movlw	127
  8614   001D88  6E25               	movwf	(___flmul@prod+3)^0,c
  8615   001D8A  EFF5  F00E         	goto	l3574
  8616   001D8E                     l3562:
  8617   001D8E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8618   001D90  EFD4  F00E         	goto	u2360
  8619   001D94  5027               	movf	(___flmul@temp+1)^0,w,c
  8620   001D96  E106               	bnz	u2361
  8621   001D98  0426               	decf	___flmul@temp^0,w,c
  8622   001D9A  B0D8               	btfsc	status,0,c
  8623   001D9C  EFD2  F00E         	goto	u2361
  8624   001DA0  EFD4  F00E         	goto	u2360
  8625   001DA4                     u2361:
  8626   001DA4  EFE0  F00E         	goto	l1101
  8627   001DA8                     u2360:
  8628   001DA8  0E00               	movlw	0
  8629   001DAA  6E22               	movwf	___flmul@prod^0,c
  8630   001DAC  0E00               	movlw	0
  8631   001DAE  6E23               	movwf	(___flmul@prod+1)^0,c
  8632   001DB0  0E00               	movlw	0
  8633   001DB2  6E24               	movwf	(___flmul@prod+2)^0,c
  8634   001DB4  0E00               	movlw	0
  8635   001DB6  6E25               	movwf	(___flmul@prod+3)^0,c
  8636   001DB8  0E00               	movlw	0
  8637   001DBA  6E1B               	movwf	___flmul@sign^0,c
  8638   001DBC  EFF5  F00E         	goto	l3574
  8639   001DC0                     l1101:
  8640   001DC0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8641   001DC4  0EFF               	movlw	255
  8642   001DC6  1622               	andwf	___flmul@prod^0,f,c
  8643   001DC8  0EFF               	movlw	255
  8644   001DCA  1623               	andwf	(___flmul@prod+1)^0,f,c
  8645   001DCC  0E7F               	movlw	127
  8646   001DCE  1624               	andwf	(___flmul@prod+2)^0,f,c
  8647   001DD0  0E00               	movlw	0
  8648   001DD2  1625               	andwf	(___flmul@prod+3)^0,f,c
  8649   001DD4  A021               	btfss	___flmul@bexp^0,0,c
  8650   001DD6  EFEF  F00E         	goto	u2371
  8651   001DDA  EFF1  F00E         	goto	u2370
  8652   001DDE                     u2371:
  8653   001DDE  EFF2  F00E         	goto	l3572
  8654   001DE2                     u2370:
  8655   001DE2  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8656   001DE4                     l3572:
  8657   001DE4  90D8               	bcf	status,0,c
  8658   001DE6  3021               	rrcf	___flmul@bexp^0,w,c
  8659   001DE8  6E25               	movwf	(___flmul@prod+3)^0,c
  8660   001DEA                     l3574:
  8661   001DEA  501B               	movf	___flmul@sign^0,w,c
  8662   001DEC  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8663   001DEE  C022  F00F         	movff	___flmul@prod,?___flmul
  8664   001DF2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8665   001DF6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8666   001DFA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8667   001DFE                     l1088:
  8668   001DFE  0012               	return		;funcret
  8669   001E00                     __end_of___flmul:
  8670                           	callstack 0
  8671                           
  8672 ;; *************** function _Timer0_init *****************
  8673 ;; Defined at:
  8674 ;;		line 62 in file "../rc_servo.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;		None
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      void 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;Total ram usage:        0 bytes
  8693 ;; Hardware stack levels used: 1
  8694 ;; Hardware stack levels required when called: 1
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		_main
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text48
  8703   0038F0                     __ptext48:
  8704                           	callstack 0
  8705   0038F0                     _Timer0_init:
  8706                           	callstack 29
  8707   0038F0                     
  8708                           ;../rc_servo.c: 64:     T0CON1bits.T0CS=0b010;
  8709   0038F0  50D6               	movf	214,w,c	;volatile
  8710   0038F2  0B1F               	andlw	-225
  8711   0038F4  0940               	iorlw	64
  8712   0038F6  6ED6               	movwf	214,c	;volatile
  8713   0038F8                     
  8714                           ;../rc_servo.c: 65:     T0CON1bits.T0ASYNC=1;
  8715   0038F8  88D6               	bsf	214,4,c	;volatile
  8716                           
  8717                           ;../rc_servo.c: 66:     T0CON1bits.T0CKPS=0b0111;
  8718   0038FA  50D6               	movf	214,w,c	;volatile
  8719   0038FC  0BF0               	andlw	-16
  8720   0038FE  0907               	iorlw	7
  8721   003900  6ED6               	movwf	214,c	;volatile
  8722   003902                     
  8723                           ;../rc_servo.c: 68:     T0CON0bits.T016BIT=1;
  8724   003902  88D5               	bsf	213,4,c	;volatile
  8725                           
  8726                           ;../rc_servo.c: 71:     TMR0H=(65535-2500)>>8;
  8727   003904  0EF6               	movlw	246
  8728   003906  6ED4               	movwf	212,c	;volatile
  8729                           
  8730                           ;../rc_servo.c: 72:     TMR0L=(unsigned char)(65535-2500);
  8731   003908  0E3B               	movlw	59
  8732   00390A  6ED3               	movwf	211,c	;volatile
  8733   00390C                     
  8734                           ;../rc_servo.c: 73:     T0CON0bits.T0EN=1;
  8735   00390C  8ED5               	bsf	213,7,c	;volatile
  8736   00390E  0012               	return		;funcret
  8737   003910                     __end_of_Timer0_init:
  8738                           	callstack 0
  8739                           
  8740 ;; *************** function _Interrupts_init *****************
  8741 ;; Defined at:
  8742 ;;		line 8 in file "../rc_servo.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		None
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8760 ;;Total ram usage:        0 bytes
  8761 ;; Hardware stack levels used: 1
  8762 ;; Hardware stack levels required when called: 1
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_main
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text49
  8771   003946                     __ptext49:
  8772                           	callstack 0
  8773   003946                     _Interrupts_init:
  8774                           	callstack 29
  8775   003946                     
  8776                           ;../rc_servo.c: 12:     INTCONbits.IPEN = 1;
  8777   003946  8AF2               	bsf	242,5,c	;volatile
  8778                           
  8779                           ;../rc_servo.c: 13:     INTCONbits.PEIE = 1;
  8780   003948  8CF2               	bsf	242,6,c	;volatile
  8781                           
  8782                           ;../rc_servo.c: 16:     PIE0bits.TMR0IE = 1;
  8783   00394A  010E               	movlb	14	; () banked
  8784   00394C  8B29               	bsf	41,5,b	;volatile
  8785                           
  8786                           ;../rc_servo.c: 17:     IPR0bits.TMR0IP = 1;
  8787   00394E  8B1F               	bsf	31,5,b	;volatile
  8788                           
  8789                           ;../rc_servo.c: 18:     PIR0bits.TMR0IF = 0;
  8790   003950  9B33               	bcf	51,5,b	;volatile
  8791                           
  8792                           ;../rc_servo.c: 20:     PIE2bits.C1IE=1;
  8793   003952  812B               	bsf	43,0,b	;volatile
  8794                           
  8795                           ;../rc_servo.c: 21:     IPR2bits.C1IP=0;
  8796   003954  9121               	bcf	33,0,b	;volatile
  8797                           
  8798                           ;../rc_servo.c: 22:     PIR2bits.C1IF=0;
  8799   003956  9135               	bcf	53,0,b	;volatile
  8800                           
  8801                           ;../rc_servo.c: 24:     INTCONbits.GIE = 1;
  8802   003958  8EF2               	bsf	242,7,c	;volatile
  8803   00395A                     
  8804                           ; BSR set to: 14
  8805   00395A  0012               	return		;funcret
  8806   00395C                     __end_of_Interrupts_init:
  8807                           	callstack 0
  8808                           
  8809 ;; *************** function _HighISR *****************
  8810 ;; Defined at:
  8811 ;;		line 31 in file "../rc_servo.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;		None
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;		None
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg, status,2, status,0
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8829 ;;Total ram usage:        0 bytes
  8830 ;; Hardware stack levels used: 1
  8831 ;; This function calls:
  8832 ;;		Nothing
  8833 ;; This function is called by:
  8834 ;;		Interrupt level 2
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	intcode
  8839   000008                     __pintcode:
  8840                           	callstack 0
  8841   000008                     _HighISR:
  8842                           	callstack 22
  8843                           
  8844                           ; BSR set to: 14
  8845                           ;incstack = 0
  8846   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8847   00000A                     
  8848                           ;../rc_servo.c: 33:     if(PIR0bits.TMR0IF||!PORTFbits.RF2){
  8849   00000A  010E               	movlb	14	; () banked
  8850   00000C  BB33               	btfsc	51,5,b	;volatile
  8851   00000E  EF0B  F000         	goto	i2u274_41
  8852   000012  EF0D  F000         	goto	i2u274_40
  8853   000016                     i2u274_41:
  8854   000016  EF14  F000         	goto	i2l3926
  8855   00001A                     i2u274_40:
  8856   00001A                     
  8857                           ; BSR set to: 14
  8858   00001A  B48E               	btfsc	142,2,c	;volatile
  8859   00001C  EF12  F000         	goto	i2u275_41
  8860   000020  EF14  F000         	goto	i2u275_40
  8861   000024                     i2u275_41:
  8862   000024  EF1D  F000         	goto	i2l405
  8863   000028                     i2u275_40:
  8864   000028                     i2l3926:
  8865                           
  8866                           ; BSR set to: 14
  8867                           ;../rc_servo.c: 36:         time++;
  8868   000028  0102               	movlb	2	; () banked
  8869   00002A  4B50               	infsnz	_time& (0+255),f,b
  8870   00002C  2B51               	incf	(_time+1)& (0+255),f,b
  8871   00002E                     
  8872                           ; BSR set to: 2
  8873                           ;../rc_servo.c: 39:         TMR0L = 0b11011011;
  8874   00002E  0EDB               	movlw	219
  8875   000030  6ED3               	movwf	211,c	;volatile
  8876   000032                     
  8877                           ; BSR set to: 2
  8878                           ;../rc_servo.c: 40:         TMR0H = 0b00001011;
  8879   000032  0E0B               	movlw	11
  8880   000034  6ED4               	movwf	212,c	;volatile
  8881   000036                     
  8882                           ; BSR set to: 2
  8883                           ;../rc_servo.c: 42:         PIR0bits.TMR0IF=0;
  8884   000036  010E               	movlb	14	; () banked
  8885   000038  9B33               	bcf	51,5,b	;volatile
  8886   00003A                     i2l405:
  8887                           
  8888                           ; BSR set to: 14
  8889   00003A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8890   00003C  0011               	retfie		f
  8891   00003E                     __end_of_HighISR:
  8892                           	callstack 0
  8893                           
  8894                           	psect	rparam
  8895   000000                     
  8896                           	psect	temp
  8897   00005F                     btemp:
  8898                           	callstack 0
  8899   00005F                     	ds	1
  8900   000000                     int$flags	set	btemp
  8901   000000                     wtemp8	set	btemp+1
  8902   000000                     ttemp5	set	btemp+1
  8903   000000                     ttemp6	set	btemp+4
  8904   000000                     ttemp7	set	btemp+8
  8905                           
  8906                           	psect	idloc
  8907                           
  8908                           ;Config register IDLOC0 @ 0x200000
  8909                           ;	unspecified, using default values
  8910   200000                     	org	2097152
  8911   200000  0FFF               	dw	4095
  8912                           
  8913                           ;Config register IDLOC1 @ 0x200002
  8914                           ;	unspecified, using default values
  8915   200002                     	org	2097154
  8916   200002  0FFF               	dw	4095
  8917                           
  8918                           ;Config register IDLOC2 @ 0x200004
  8919                           ;	unspecified, using default values
  8920   200004                     	org	2097156
  8921   200004  0FFF               	dw	4095
  8922                           
  8923                           ;Config register IDLOC3 @ 0x200006
  8924                           ;	unspecified, using default values
  8925   200006                     	org	2097158
  8926   200006  0FFF               	dw	4095
  8927                           
  8928                           ;Config register IDLOC4 @ 0x200008
  8929                           ;	unspecified, using default values
  8930   200008                     	org	2097160
  8931   200008  0FFF               	dw	4095
  8932                           
  8933                           ;Config register IDLOC5 @ 0x20000A
  8934                           ;	unspecified, using default values
  8935   20000A                     	org	2097162
  8936   20000A  0FFF               	dw	4095
  8937                           
  8938                           ;Config register IDLOC6 @ 0x20000C
  8939                           ;	unspecified, using default values
  8940   20000C                     	org	2097164
  8941   20000C  0FFF               	dw	4095
  8942                           
  8943                           ;Config register IDLOC7 @ 0x20000E
  8944                           ;	unspecified, using default values
  8945   20000E                     	org	2097166
  8946   20000E  0FFF               	dw	4095
  8947                           
  8948                           	psect	config
  8949                           
  8950                           ;Config register CONFIG1L @ 0x300000
  8951                           ;	External Oscillator mode Selection bits
  8952                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8953                           ;	Power-up default value for COSC bits
  8954                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8955   300000                     	org	3145728
  8956   300000  AA                 	db	170
  8957                           
  8958                           ;Config register CONFIG1H @ 0x300001
  8959                           ;	unspecified, using default values
  8960                           ;	Clock Out Enable bit
  8961                           ;	CLKOUTEN = 0x1, unprogrammed default
  8962                           ;	Clock Switch Enable bit
  8963                           ;	CSWEN = 0x1, unprogrammed default
  8964                           ;	Fail-Safe Clock Monitor Enable bit
  8965                           ;	FCMEN = 0x1, unprogrammed default
  8966   300001                     	org	3145729
  8967   300001  FF                 	db	255
  8968                           
  8969                           ;Config register CONFIG2L @ 0x300002
  8970                           ;	unspecified, using default values
  8971                           ;	Master Clear Enable bit
  8972                           ;	MCLRE = 0x1, unprogrammed default
  8973                           ;	Power-up Timer Enable bit
  8974                           ;	PWRTE = 0x1, unprogrammed default
  8975                           ;	Low-power BOR enable bit
  8976                           ;	LPBOREN = 0x1, unprogrammed default
  8977                           ;	Brown-out Reset Enable bits
  8978                           ;	BOREN = 0x3, unprogrammed default
  8979   300002                     	org	3145730
  8980   300002  FF                 	db	255
  8981                           
  8982                           ;Config register CONFIG2H @ 0x300003
  8983                           ;	unspecified, using default values
  8984                           ;	Brown Out Reset Voltage selection bits
  8985                           ;	BORV = 0x3, unprogrammed default
  8986                           ;	ZCD Disable bit
  8987                           ;	ZCD = 0x1, unprogrammed default
  8988                           ;	PPSLOCK bit One-Way Set Enable bit
  8989                           ;	PPS1WAY = 0x1, unprogrammed default
  8990                           ;	Stack Full/Underflow Reset Enable bit
  8991                           ;	STVREN = 0x1, unprogrammed default
  8992                           ;	Debugger Enable bit
  8993                           ;	DEBUG = 0x1, unprogrammed default
  8994                           ;	Extended Instruction Set Enable bit
  8995                           ;	XINST = 0x1, unprogrammed default
  8996   300003                     	org	3145731
  8997   300003  FF                 	db	255
  8998                           
  8999                           ;Config register CONFIG3L @ 0x300004
  9000                           ;	WDT Period Select bits
  9001                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9002                           ;	WDT operating mode
  9003                           ;	WDTE = OFF, WDT Disabled
  9004   300004                     	org	3145732
  9005   300004  9F                 	db	159
  9006                           
  9007                           ;Config register CONFIG3H @ 0x300005
  9008                           ;	unspecified, using default values
  9009                           ;	WDT Window Select bits
  9010                           ;	WDTCWS = 0x7, unprogrammed default
  9011                           ;	WDT input clock selector
  9012                           ;	WDTCCS = 0x7, unprogrammed default
  9013   300005                     	org	3145733
  9014   300005  FF                 	db	255
  9015                           
  9016                           ;Config register CONFIG4L @ 0x300006
  9017                           ;	unspecified, using default values
  9018                           ;	Write Protection Block 0
  9019                           ;	WRT0 = 0x1, unprogrammed default
  9020                           ;	Write Protection Block 1
  9021                           ;	WRT1 = 0x1, unprogrammed default
  9022                           ;	Write Protection Block 2
  9023                           ;	WRT2 = 0x1, unprogrammed default
  9024                           ;	Write Protection Block 3
  9025                           ;	WRT3 = 0x1, unprogrammed default
  9026                           ;	Write Protection Block 3
  9027                           ;	WRT4 = 0x1, unprogrammed default
  9028                           ;	Write Protection Block 3
  9029                           ;	WRT5 = 0x1, unprogrammed default
  9030                           ;	Write Protection Block 3
  9031                           ;	WRT6 = 0x1, unprogrammed default
  9032                           ;	Write Protection Block 3
  9033                           ;	WRT7 = 0x1, unprogrammed default
  9034   300006                     	org	3145734
  9035   300006  FF                 	db	255
  9036                           
  9037                           ;Config register CONFIG4H @ 0x300007
  9038                           ;	unspecified, using default values
  9039                           ;	Configuration Register Write Protection bit
  9040                           ;	WRTC = 0x1, unprogrammed default
  9041                           ;	Boot Block Write Protection bit
  9042                           ;	WRTB = 0x1, unprogrammed default
  9043                           ;	Data EEPROM Write Protection bit
  9044                           ;	WRTD = 0x1, unprogrammed default
  9045                           ;	Scanner Enable bit
  9046                           ;	SCANE = 0x1, unprogrammed default
  9047                           ;	Low Voltage Programming Enable bit
  9048                           ;	LVP = 0x1, unprogrammed default
  9049   300007                     	org	3145735
  9050   300007  FF                 	db	255
  9051                           
  9052                           ;Config register CONFIG5L @ 0x300008
  9053                           ;	unspecified, using default values
  9054                           ;	UserNVM Program Memory Code Protection bit
  9055                           ;	CP = 0x1, unprogrammed default
  9056                           ;	DataNVM Memory Code Protection bit
  9057                           ;	CPD = 0x1, unprogrammed default
  9058   300008                     	org	3145736
  9059   300008  FF                 	db	255
  9060                           
  9061                           ;Config register CONFIG5H @ 0x300009
  9062                           ;	unspecified, using default values
  9063   300009                     	org	3145737
  9064   300009  FF                 	db	255
  9065                           
  9066                           ;Config register CONFIG6L @ 0x30000A
  9067                           ;	unspecified, using default values
  9068                           ;	Table Read Protection Block 0
  9069                           ;	EBTR0 = 0x1, unprogrammed default
  9070                           ;	Table Read Protection Block 1
  9071                           ;	EBTR1 = 0x1, unprogrammed default
  9072                           ;	Table Read Protection Block 2
  9073                           ;	EBTR2 = 0x1, unprogrammed default
  9074                           ;	Table Read Protection Block 3
  9075                           ;	EBTR3 = 0x1, unprogrammed default
  9076                           ;	Table Read Protection Block 4
  9077                           ;	EBTR4 = 0x1, unprogrammed default
  9078                           ;	Table Read Protection Block 5
  9079                           ;	EBTR5 = 0x1, unprogrammed default
  9080                           ;	Table Read Protection Block 6
  9081                           ;	EBTR6 = 0x1, unprogrammed default
  9082                           ;	Table Read Protection Block 7
  9083                           ;	EBTR7 = 0x1, unprogrammed default
  9084   30000A                     	org	3145738
  9085   30000A  FF                 	db	255
  9086                           
  9087                           ;Config register CONFIG6H @ 0x30000B
  9088                           ;	unspecified, using default values
  9089                           ;	Boot Block Table Read Protection bit
  9090                           ;	EBTRB = 0x1, unprogrammed default
  9091   30000B                     	org	3145739
  9092   30000B  FF                 	db	255
  9093                           tosu	equ	0xFFF
  9094                           tosh	equ	0xFFE
  9095                           tosl	equ	0xFFD
  9096                           stkptr	equ	0xFFC
  9097                           pclatu	equ	0xFFB
  9098                           pclath	equ	0xFFA
  9099                           pcl	equ	0xFF9
  9100                           tblptru	equ	0xFF8
  9101                           tblptrh	equ	0xFF7
  9102                           tblptrl	equ	0xFF6
  9103                           tablat	equ	0xFF5
  9104                           prodh	equ	0xFF4
  9105                           prodl	equ	0xFF3
  9106                           indf0	equ	0xFEF
  9107                           postinc0	equ	0xFEE
  9108                           postdec0	equ	0xFED
  9109                           preinc0	equ	0xFEC
  9110                           plusw0	equ	0xFEB
  9111                           fsr0h	equ	0xFEA
  9112                           fsr0l	equ	0xFE9
  9113                           wreg	equ	0xFE8
  9114                           indf1	equ	0xFE7
  9115                           postinc1	equ	0xFE6
  9116                           postdec1	equ	0xFE5
  9117                           preinc1	equ	0xFE4
  9118                           plusw1	equ	0xFE3
  9119                           fsr1h	equ	0xFE2
  9120                           fsr1l	equ	0xFE1
  9121                           bsr	equ	0xFE0
  9122                           indf2	equ	0xFDF
  9123                           postinc2	equ	0xFDE
  9124                           postdec2	equ	0xFDD
  9125                           preinc2	equ	0xFDC
  9126                           plusw2	equ	0xFDB
  9127                           fsr2h	equ	0xFDA
  9128                           fsr2l	equ	0xFD9
  9129                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         187
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    149     158
    BANK1           256    250     250
    BANK2           256    112     226
    BANK3           256      0      60
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2420$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), STR_2(CODE[18]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout4(BANK1[100]), main@readout3(BANK1[100]), main@readout2(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2367$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2367$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout4(BANK1[100]), main@readout3(BANK1[100]), main@readout2(BANK0[100]), 

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse_onesquare@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse_onesquare@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse_fromcard@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse_fromcard@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    opposite_forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    opposite_forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), main@motorL(BANK2[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S598DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S598DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK2[64]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_processor_easy@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK2[64]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _spin_180->_setMotorPWM
    _sendStringSerial4->_sendCharSerial4
    _motor_action->_forward
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse_fromcard
    _motor_action->_reverse_onesquare
    _motor_action->_right_135
    _motor_action->_right_90
    _stop->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse_onesquare->_setMotorPWM
    _reverse_fromcard->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               495   495      0   72337
                                             88 COMRAM     2     2      0
                                             27 BANK0    122   122      0
                                              0 BANK1    250   250      0
                                              0 BANK2    112   112      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                  _sendStringSerial4
                        _setMotorPWM
                           _spin_180
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5874
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _spin_180                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   39422
                                             33 COMRAM     8     2      6
                            _forward
                           _left_135
                            _left_90
                   _reverse_fromcard
                  _reverse_onesquare
                          _right_135
                           _right_90
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    9483
                                             25 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    4011
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    3555
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_onesquare                                    8     4      4    3555
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_fromcard                                     8     4      4    4467
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    4467
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              8     4      4    3707
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2855
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                28    24      4     852
                                              0 COMRAM    24    20      4
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                18    14      4     486
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _forward
     _left_135
       _setMotorPWM
     _left_90
       _setMotorPWM
     _reverse_fromcard
       _setMotorPWM
     _reverse_onesquare
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _stop
       _setMotorPWM
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
   _spin_180
     _setMotorPWM
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      3C      11       23.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     70      E2       9       88.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FA      FA       7       97.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     95      9E       5       98.8%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhlhhh     1B      0       0      33        0.0%
BITBIGSFRhhll       17      0       0      35        0.0%
BITBIGSFRhhlhl      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRllllll      7      0       0      52        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     314      59        0.0%
DATA                 0      0     314       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 11 19:17:13 2022

                 _color_read_Red 35AA                  _color_read_Blue 369A  
                             l51 3648                               l60 36E8  
                             l45 3504                               l54 35F8  
                             l63 2E90                               l48 38EE  
                             l81 2206                               l57 3698  
                             l67 2B56                               l83 2260  
                             l77 2142                               l79 21A4  
                   ___awdiv@sign 000C              ___wmul@multiplicand 0003  
               _color_read_Green 364A                ??_Interrupts_init 0001  
                            l111 3880                              l120 3984  
                            l114 3882                              l210 0ED2  
                            l123 3970                              l132 37B0  
                            l220 1254                              l117 38A8  
                            l126 397A                              l310 31BE  
                            l231 14D0                              l320 2FD8  
                            l129 3966                              l305 33A2  
                            l330 311C                              l315 2F34  
                            l219 1240                              l325 307A  
                            l350 19D4                              l335 3260  
                            l408 390E                              l290 3430  
                            l348 192C                              l701 2DEA  
                            l285 2434                              l461 3944  
                            l278 376E                              l470 38CE  
                            l295 3302                              l449 392C  
                            l458 3930                              l467 3856  
                            l397 395A                              l584 2770  
                            l597 28D4                              l767 2C5C  
              motor_action@color 0022                              _abs 37B2  
                            _pad 3432                              wreg 000FE8  
                   ___flmul@aexp 0020                     ___flmul@bexp 0021  
                   ___flmul@sign 001B                     ___flmul@temp 0026  
                   ___flmul@prod 0022                     ___fltol@exp1 0031  
                           l1101 1DC0                             l1200 2A32  
                           l1210 37E8                             ?_abs 0013  
                           l1132 2524                             l1125 248C  
                           l1213 37F0                             l1206 35A8  
                           l1128 25E8                             l3000 3370  
                           l1225 2D26                             l1233 372C  
                           l3002 338C                             l1170 3454  
                           l1091 1C90                             l1139 2580  
                           l1084 1A9A                             l3100 31E0  
                           l3020 317E                             l3012 3146  
                           l3004 311E                             l1236 3986  
                           l1148 3556                             l1093 1D08  
                           l1181 1E94                             l1094 1CF6  
                           l3110 3202                             l3022 318A  
                           l3014 315E                             l3006 313E  
                           l1174 34AA                             l1182 1EDA  
                           l1088 1DFE                             l3200 2A80  
                           l3120 324A                             l3112 320E  
                           l3024 31A6                             l3016 316A  
                           l3040 2EE0                             l1193 207C  
                           l3210 2B0A                             l3202 2AB2  
                           l3114 321A                             l3106 31E8  
                           l3050 2F36                             l3018 3176  
                           l3042 2EEC                             l3034 2EBA  
                           l3026 2E92                             l3122 3930  
                           l3130 3580                             l1179 1E8C  
                           l3300 3902                             l3140 34BA  
                           l3220 2B42                             l3212 2B20  
                           l3204 2AE8                             l3116 3222  
                           l3108 31F6                             l3060 2F6C  
                           l3052 2F56                             l3044 2EF4  
                           l3036 2EC6                             l3028 2EB2  
                           l3124 3940                             l3132 35A0  
                           l3302 390C                             l3150 34E2  
                           l3142 34CA                             l3214 2B36  
                           l3230 207E                             l3310 3926  
                           l3118 322E                             l3070 2FA4  
                           l3062 2F78                             l3046 2F00  
                           l3038 2ED4                             l3126 3558  
                           l3160 34EC                             l3152 34E4  
                           l3144 34D4                             l3136 34AC  
                           l3224 2B4E                             l3208 2AF4  
                           l3232 2092                             l3312 3928  
                           l3304 3910                             l3072 2FC0  
                           l3064 2F84                             l3048 2F1C  
                           l3400 186C                             l3128 3564  
                           l3320 3520                             l3170 34F6  
                           l3162 34EE                             l3154 34E6  
                           l3146 34DE                             l3138 34B0  
                           l3250 213E                             l3242 20BA  
                           l3234 20A6                             l3314 392A  
                           l3306 391A                             l3066 2F90  
                           l3058 2F5E                             l3090 30D6  
                           l3082 30A4                             l3074 307C  
                           l3410 18D8                             l3330 382C  
                           l2610 2CAA                             l2602 2C5E  
                           l3322 3528                             l3500 1B1E  
                           l3180 3502                             l3172 34F8  
                           l3164 34F0                             l3156 34E8  
                           l3148 34E0                             l3260 21E0  
                           l3252 215C                             l3244 20F6  
                           l3236 20BA                             l3228 207E  
                           l3308 391C                             l3068 2F98  
                           l3092 30DE                             l3084 30B0  
                           l3076 309C                             l3412 18EC  
                           l3404 1884                             l3340 15B8  
                           l3420 1970                             l3332 383A  
                           l2700 28B4                             l2612 2CE0  
                           l2604 2C70                             l2620 3708  
                           l3324 3544                             l3316 3506  
                           l3510 1B60                             l3502 1B2A  
                           l3174 34FA                             l3166 34F2  
                           l3158 34EA                             l3262 2202  
                           l3254 217E                             l3246 20FA  
                           l3190 2E60                             l3182 2DEC  
                           l3094 30EA                             l3086 30BE  
                           l3414 1954                             l3406 18AC  
                           l3350 1664                             l3342 15D0  
                           l3334 383E                             l2630 261C  
                           l2606 2C82                             l2622 370C  
                           l2710 3460                             l3318 3518  
                           l3520 1BC2                             l3512 1B6C  
                           l3504 1B36                             l3176 34FC  
                           l3168 34F4                             l3192 2A34  
                           l3264 222C                             l3256 21A0  
                           l3248 211C                             l3184 2E00  
                           l3096 3106                             l3088 30CA  
                           l3408 18C4                             l3352 167C  
                           l3344 15E4                             l3336 158C  
                           l3328 3828                             l3440 3028  
                           l2640 265E                             l2632 2620  
                           l2624 25EA                             l2720 37CC  
                           l2608 2C8C                             l2616 36EA  
                           l2712 3474                             l2704 3432  
                           l2800 1EE2                             l3530 1C58  
                           l3522 1BCE                             l3514 1B7C  
                           l3506 1B44                             l3450 19D6  
                           l3602 2BE8                             l2722 3882  
                           l3178 3500                             l3194 2A44  
                           l3266 223C                             l3274 2258  
                           l3258 21BE                             l3186 2E18  
                           l3290 376A                             l3282 372E  
                           l3098 31C0                             l3354 1690  
                           l3346 15F8                             l3338 1590  
                           l3442 3034                             l3434 3002  
                           l3426 2FDA                             l2650 26B8  
                           l2642 267C                             l2634 262E  
                           l2626 25EE                             l2618 36F6  
                           l2714 3478                             l2706 3440  
                           l2810 1F80                             l2802 1EEC  
                           l3540 1CAE                             l3532 1C76  
                           l3524 1BEA                             l3516 1B96  
                           l3508 1B50                             l3460 1A12  
                           l3452 19E2                             l3620 2C4C  
                           l3612 2C10                             l3604 2BF2  
                           l2724 3892                             l3196 2A58  
                           l3268 224C                             l3188 2E48  
                           l3292 376C                             l3284 373E  
                           l2740 2D46                             l2732 2D28  
                           l3380 173C                             l3356 16A4  
                           l3348 163C                             l3444 303C  
                           l3436 300E                             l3428 2FFA  
                           l2652 26E6                             l2644 2684  
                           l2660 2720                             l2636 264E  
                           l2628 25FC                             l2716 3496  
                           l2708 344C                             l2820 2046  
                           l2804 1EF2                             l2812 1FE4  
                           l3700 0E8C                             l3294 3946  
                           l3550 1D18                             l3542 1CB2  
                           l3534 1C80                             l3526 1C14  
                           l3518 1BA6                             l3470 1A44  
                           l3462 1A22                             l3454 19F0  
                           l3614 2C1C                             l3606 2BFC  
                           l3630 249C                             l2910 386C  
                           l2902 3858                             l2830 3980  
                           l3198 2A6C                             l3286 3752  
                           l2750 2D7A                             l2742 2D54  
                           l2734 2D2C                             l2726 38AA  
                           l3390 17C0                             l3382 1754  
                           l3446 3048                             l3438 301C  
                           l2662 2730                             l2654 2706  
                           l2646 2698                             l2638 2652  
                           l2670 2776                             l2718 37B2  
                           l2822 204C                             l2814 1FFE  
                           l2806 1F74                             l3710 0EBA  
                           l3702 0E90                             l3296 38F0  
                           l3560 1D7A                             l3552 1D24  
                           l3544 1CC0                             l3536 1C8E  
                           l3528 1C4A                             l3480 1A84  
                           l3472 1A52                             l3464 1A28  
                           l3456 19F2                             l3616 2C2C  
                           l3640 24DA                             l3632 24B2  
                           l3624 2438                             l2912 386E  
                           l2904 3862                             l2832 395E  
                           l2840 3968                             l3288 3756  
                           l2760 2DB4                             l2752 2D82  
                           l2744 2D5C                             l2736 2D3A  
                           l2728 38C6                             l3392 17D4  
                           l3384 1768                             l3368 16E8  
                           l3448 3064                             l2664 2750  
                           l2656 2708                             l2648 26A6  
                           l2680 27D6                             l2672 2784  
                           l2824 205C                             l2816 201C  
                           l2808 1F7A                             l3800 1380  
                           l3720 0EEA                             l3712 0EC6  
                           l3704 0E98                             l3298 38F8  
                           l3570 1DE2                             l3562 1D8E  
                           l3554 1D32                             l3546 1CEE  
                           l3538 1CA0                             l3490 1ACE  
                           l3482 1A8A                             l3474 1A54  
                           l3466 1A38                             l3458 1A02  
                           l3618 2C3C                             l3650 2562  
                           l3642 250C                             l3626 2448  
                           l2906 3868                             l2834 3962  
                           l2914 38D2                             l2850 3786  
                           l2842 396C                             l2930 3690  
                           l2922 35AA                             l2770 2DDA  
                           l2762 2DBC                             l2754 2D8A  
                           l2746 2D60                             l2738 2D42  
                           l3394 17E8                             l3386 1780  
                           l3378 1714                             l2658 271A  
                           l2690 284C                             l2682 27F4  
                           l2674 27A4                             l2818 2036  
                           l3810 13FC                             l3802 139A  
                           l3730 0FC8                             l3722 0EF6  
                           l3714 0EE0                             l3706 0EA4  
                           l3572 1DE4                             l3564 1DA8  
                           l3556 1D5C                             l3492 1ADA  
                           l3484 1AAA                             l3476 1A64  
                           l3468 1A3E                             l3580 2B58  
                           l3660 25B8                             l3652 2570  
                           l3644 250E                             l3636 24C6  
                           l3628 2456                             l2908 386A  
                           l2828 397C                             l2836 3972  
                           l2852 37AC                             l2844 3772  
                           l2916 35FA                             l2924 35F0  
                           l2772 2DE2                             l2764 2DBE  
                           l2756 2D98                             l2748 2D68  
                           l2860 227E                             l2940 33A4  
                           l3396 182C                             l3388 17A8  
                           l2692 286C                             l2684 27FC  
                           l2676 27A8                             l2668 2772  
                           l2780 1E34                             l3820 143E  
                           l3812 1406                             l3804 13CE  
                           l3740 1026                             l3732 0FCA  
                           l3724 0F26                             l3708 0EB0  
                           l3566 1DC4                             l3574 1DEA  
                           l3558 1D60                             l3494 1AE4  
                           l3486 1ABA                             l3478 1A74  
                           l3590 2BAE                             l3582 2B6E  
                           l3662 25C8                             l3654 258E  
                           l3646 251A                             l3638 24CE  
                           l2838 3976                             l2854 37AE  
                           l2846 3776                             l2934 369A  
                           l2918 3640                             l2766 2DC4  
                           l2758 2D9E                             l2870 23CC  
                           l2862 22E0                             l2950 33E4  
                           l2942 33C4                             l3398 1854  
                           l2694 287E                             l2686 2810  
                           l2678 27B6                             l2790 1EAC  
                           l2782 1E44                             l3830 14A2  
                           l3822 1452                             l3814 140E  
                           l3806 13DA                             l3742 1040  
                           l3734 0FFE                             l3726 0F5C  
                           l3670 0E2E                             ?_pad 0011  
                           l3576 1DEE                             l3568 1DD4  
                           l3496 1AFA                             l3592 2BBE  
                           l3664 25D6                             l3656 2590  
                           l3648 2556                             l2848 377E  
                           l2936 36E0                             l2928 364A  
                           l2768 2DCA                             l2864 2326  
                           l2960 3262                             l2952 33F0  
                           l2688 281E                             l2696 2884  
                           l2792 1EB2                             l2784 1E64  
                           l2776 1E00                             l2880 291E  
                           l2872 28D6                             l3840 14D2  
                           l3824 145C                             l3808 13F6  
                           l3816 1410                             l3760 118E  
                           l3752 106A                             l3744 1046  
                           l3736 100A                             l3728 0F92  
                           l3680 0E4A                             l3672 0E32  
                           l3498 1B06                             l3594 2BC2  
                           l3586 2B82                             l3666 25D8  
                           l3658 2594                             l2866 2346  
                           l2858 2262                             l2970 32A2  
                           l2962 3282                             l2954 33FC  
                           l2698 2894                             l2794 1EC2  
                           l2786 1E80                             l2778 1E20  
                           l2882 292E                             l2874 28FE  
                           l3850 153E                             l3842 14DA  
                           l3834 14AA                             l3770 125A  
                           l3818 1428                             l3762 11AA  
                           l3754 1164                             l3746 1062  
                           l3738 1024                             l3690 0E60  
                           l3682 0E4E                             l3674 0E3E  
                           l3596 2BD0                             l3588 2BAC  
                           l2868 2362                             l2980 32EA  
                           l2972 32AE                             l2956 340A  
                           l2948 33CC                             l2796 1ECE  
                           l2788 1E9C                             l2892 29F4  
                           l2884 294E                             l2876 290C  
                           l3852 1568                             l3844 1508  
                           l3836 14B2                             l3828 147C  
                           l3780 12C2                             l3772 1264  
                           l3764 1206                             l3756 1170  
                           l3692 0E68                             l3684 0E4E  
                           l3676 0E42                             l2974 32BA  
                           l2990 332C                             l2982 3304  
                           l2958 3416                             l2798 1ED6  
                           l2886 296E                             l2878 291A  
                           l3854 157C                             l3846 1520  
                           l3790 130E                             l3782 12DE  
                           l3774 1280                             l3766 120E  
                           l3758 1188                             l3694 0E6C  
                           l3686 0E54                             l3678 0E46  
                           l2976 32C2                             l2968 328A  
                           l2992 3344                             l2984 3324  
                           l2888 29C4                             l2896 2A06  
                           l3848 1538                             l3792 131A  
                           l3784 12E6                             l3776 1298  
                           l3768 124E                             l3696 0E74  
                           l3688 0E58                             l2978 32CE  
                           l2994 3350                             l3794 1328  
                           l3786 12F8                             l3778 12A4  
                           l3698 0E78                             l2996 335C  
                           l3956 1986                             l3796 1348  
                           l3788 12FA                             l2998 3364  
                           l3798 1364                             STR_1 0E1E  
                           STR_2 0E1B                             STR_3 0E01  
                           u2000 2B20                             u2001 2B1C  
                           u2010 2B36                             u2011 2B32  
                           u2100 21E0                             u2020 211C  
                           u2101 21DC                             u2021 2118  
                           u2110 2202                             u2030 213E  
                           u2111 21FE                             u2031 213A  
                           u2200 1A02                             u2120 2218  
                           u2040 2154                             u1400 2C82  
                           u2201 19FE                             u2121 2212  
                           u2041 214E                             u1401 2C7E  
                           u2210 1A12                             u2130 221A  
                           u2050 2156                             u1410 2CAA  
                           u2211 1A0E                             u1411 2CA6  
                           u2300 1CC0                             u2220 1A52  
                           u2140 222C                             u2060 217E  
                           u1500 2730                             u1420 2CE0  
                           u2301 1CBC                             u2221 1A4E  
                           u2141 2228                             u2061 217A  
                           u1501 272C                             u1421 2CDC  
                           u2310 1CEE                             u2230 1A64  
                           u2150 223C                             u2070 21A0  
                           u1510 2784                             u1430 372C  
                           u2311 1CEA                             u2231 1A60  
                           u2151 2238                             u2071 219C  
                           u3007 3178                             u1511 2780  
                           u1431 3728                             u2320 1D04  
                           u2240 1A74                             u2400 2BD0  
                           u1600 3892                             u2160 224C  
                           u2080 21B6                             u1440 25FC  
                           u1520 27B6                     _BAUD4CONbits 000EE9  
                           u2321 1D00                             u2241 1A70  
                           u2401 2BCC                             u1601 388E  
                           u2161 2248                             u2081 21B0  
                           u3017 31B0                             u1441 25F8  
                           u1521 27B2                             _LATE 000F7D  
                           u2330 1D18                             u2250 1AAA  
                           u2410 2BE4                             u1610 38A8  
                           u2090 21B8                             u2170 3856  
                           u1450 262E                             u1530 27F4  
                           u2331 1D14                             u2251 1AA6  
                           u2411 2BE0                             u1611 38A4  
                           u3107 2E0A                             u3027 335E  
                           u2171 3852                             u1451 262A  
                           u1531 27F0                             _LATG 000F7F  
                           u2340 1D32                             u2260 1ABA  
                           u2420 2C0C                             u2500 2570  
                           u1620 2D3A                             u2180 3064  
                           u1540 281E                             u1700 1E44  
                           u2341 1D2E                             u2261 1AB6  
                           u2421 2C08                             u2501 256C  
                           u3117 2E3A                             u1621 2D36  
                           u3037 3396                             u2181 3060  
                           u1461 2658                             u1541 281A  
                           u1701 1E40                             u2350 1D7A  
                           u2270 1C34                             u2190 19F0  
                           u2430 2C2C                             u2510 2580  
                           u1630 2D54                             u1470 267C  
                           u1550 284C                             u1390 2C70  
                           u1710 1E80                             u2351 1D76  
                           u2191 19EC                             u2431 2C28  
                           u2511 257C                             u3127 2E6A  
                           u1631 2D50                             u3047 2F92  
                           u1471 2678                             u1551 2848  
                           u1391 2C6C                             u1711 1E7C  
                           u2360 1DA8                             u2280 1C8E  
                           u2440 2C3C                             u2520 258E  
                           u1640 2D7A                             u1800 227E  
                           u1480 26A6                             u1560 2894  
                           u1720 1EAC                             u2600 122C  
                           u2361 1DA4                             u2281 1C8A  
                           u2441 2C38                             u2521 258A  
                           u3137 34C0                             u1641 2D76  
                           u1801 227A                             u3057 2FCA  
                           u1481 26A2                             u1561 2890  
                           u1721 1EA8                             u2601 1222  
                           u2370 1DE2                             u2290 1CAE  
                           u2530 25C8                             u2450 2448  
                           u1650 2D98                             u1810 2362  
                           u1490 26E6                             u1570 3440  
                           u1730 1EC2                             u2610 1240  
                           _T2PR 000FBC                             u2371 1DDE  
                           u2291 1CAA                             u2275 1C2A  
                           u2531 25C4                             u2451 2444  
                           u1651 2D94                             u1811 235E  
                           u3067 321C                             u1491 26E2  
                           u1571 343C                             u1731 1EBE  
                           u2611 123C                             u2380 2B6E  
                           u2540 25D6                             u2460 2456  
                           u1660 2DB4                             u1900 31A6  
                           u1580 3496                             u1740 1FFE  
                           u2620 124E                             u2381 2B6A  
                           u2541 25D2                             u2461 2452  
                           u1661 2DB0                             u3077 3254  
                           u1901 31A2                             u1581 3492  
                           u1741 1FFA                             u2621 124A  
                           u2390 2BA2                             u2470 24B2  
                           u1670 2DDA                             u1910 2F1C  
                           u1590 37CC                             u1750 201C  
                           u2710 14CC                             u2630 12C2  
                           u2471 24AE                             u1671 2DD6  
                           u3087 32BC                             u1911 2F18  
                           u1591 37C8                             u1751 2018  
                           u2711 14C8                             u2631 12BE  
                           u2551 0EC0                             u2480 2508  
                           u1824 23BC                             u1920 2FC0  
                           u1760 2036                             u1680 1E30  
                           u1840 28FE                             u2720 1568  
                           u2640 12DE                             u2608 1230  
                           u2481 2504                             u1825 23B8  
                           u3097 32F4                             u1921 2FBC  
                           u1761 2032                             u1681 1E2A  
                           u1841 28FA                             u2721 1564  
                           u2641 12DA                             u2561 0ECC  
                           u2490 2552                             u1834 2426  
                           u1930 3106                             u1770 2046  
                           u1690 1E32                             u1850 294E  
                           u2650 12F8                             u2570 0EE0  
                           u2395 2B98                             u2491 254E  
                           u1835 2422                             u1931 3102  
                           u1771 2042                             u1851 294A  
                           u2651 12F4                             u2571 0EDC  
                           u1780 379A                             u1940 324A  
                           u1860 296E                             u2708 1492  
                           u2660 1328                             u2580 1062  
                           u1781 3792                             u1941 3246  
                           u1861 296A                             u2661 1324  
                           u2581 105E                             u1870 3430  
                           u1950 3940                             u2670 143E  
                           u2590 11AA                             u1871 342C  
                           u1951 393C                             u2671 143A  
                           u2807 141C                             u2591 11A6  
                           u1880 32EA                             u1960 35A0  
                           u2680 1478                             u1881 32E6  
                           u1961 359C                             u2817 152C  
                           u2681 1474                             u1970 2AB2  
                           u1890 338C                             u2690 148E  
                           u1971 2AAE                             u1891 3388  
                           u2907 17F2                             u2827 3036  
                           u2691 1486                             u1980 2AE8  
                           u1981 2AE4                             u2917 185E  
                           u2837 306E                             u1990 2B0A  
                           u1798 379C                             u1991 2B06  
                           u2927 18B6                             u2847 15C2  
                           u2767 1016                             u2937 18F6  
                           u2857 1602                             u2777 1032  
                           u2947 195E                             u2867 166E  
                           u2787 117C                             u2957 3402  
                           u2877 16AE                             u2797 128C  
                           u2967 2EEE                             u2887 1746  
                           u2977 2F26                             u2897 17B2  
                           u2987 30D8                             u2997 3110  
                           abs@a 0013                             _dbuf 0252  
                           _main 0E2E                             _dtoa 1E00  
                           _prec 00F7                             _time 0250  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             btemp 005F  
                           _stop 33A4                             prodh 000FF4  
                           prodl 000FF3                             start 003E  
         __end_of_color_read_Red 35FA                  __end_of_HighISR 003E  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0017         _color_processor_hard$381 000B  
       _color_processor_hard$383 000C         _color_processor_hard$379 000A  
                  ___fltol@sign1 0030                  __end_of___aodiv 2772  
                          ?_main 0001                            ?_dtoa 001C  
                __end_of___aomod 28D6                  __end_of___awdiv 2DEC  
        ??_color_read_Luminosity 0007                  __end_of___flmul 1E00  
                __end_of___fltol 2C5E                            ?_stop 001A  
                ___awdiv@divisor 0009                            i2l405 003A  
                ___awdiv@counter 000B                     vfpfcnvrt@fmt 0041  
                          _TMR0H 000FD4                            _TMR0L 000FD3  
                   main@readout2 0083                     main@readout3 0100  
                   main@readout4 0164          __end_of_sendCharSerial4 3946  
     __end_of_I2C_2_Master_Start 3986       __end_of_I2C_2_Master_Write 3968  
                __end_of_left_90 2FDA   color_processor_easy@calibrated 0003  
                          _flags 00FD                            _fputc 2C5E  
                __end_of_forward 3304                            _fputs 36EA  
                          pad@fp 0011                            _width 00F5  
                          _putch 3986                            main@i 01E6  
                          main@j 00ED                            main@k 00F1  
                          main@m 00EF                            dtoa@d 001E  
                          dtoa@i 003C                            dtoa@n 0034  
                          dtoa@p 0030                            dtoa@s 003E  
                          dtoa@w 0032                            tablat 000FF5  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            stop@i 001F  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 3558          __end_of_color_read_Blue 36EA  
          _I2C_2_Master_RepStart 3968                  ?_color_read_Red 0005  
                __initialization 37F2   color_processor_hard@calibrated 0003  
                   __end_of_main 158C                     __end_of_dtoa 207E  
                   __end_of_stop 3432                           ??_main 007B  
                         ??_dtoa 0026                           ??_stop 001E  
                  __activetblptr 000003                     ?_setMotorPWM 000F  
                         ?_fputc 0001                           ?_fputs 000A  
               ___awdiv@dividend 0007                           ?_putch 0001  
                         _RC0PPS 000E62                           _RC4REG 000EE3  
                         _RE2PPS 000E74                           _RD5PPS 000E6F  
                         _RC7PPS 000E69                           _RD6PPS 000E70  
                         i2l3930 0032                           i2l3922 000A  
                         i2l3932 0036                           i2l3924 001A  
                         i2l3926 0028                           i2l3928 002E  
                      ??_HighISR 0001         __end_of_color_click_init 3506  
                         _RX4PPS 000E15                           _TX4REG 000EE4  
               __end_of___xxtofl 25EA                    ??_Timer0_init 0001  
                   vfprintf@cfmt 0057                 __end_of_left_135 3262  
                      ??___aodiv 0011                        ??___aomod 0011  
                         ___wmul 38AA                        ??___awdiv 000B  
                      ??___flmul 0017                        ??___fltol 002C  
                         clear_0 37F8                           clear_1 3804  
                         clear_2 3810                 ___awdiv@quotient 000D  
                         isa$std 000001                           pad@buf 0013  
                         dtoa@fp 001C                        ??_left_90 001E  
               __end_of_right_90 2F36                    main@time_path 0272  
                         fputc@c 0001                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_forward 001E                 __end_of_spin_180 307C  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               ?_sendCharSerial4 0001                           putch@c 0001  
               __end_of_vfprintf 35AA                           stop@mL 001A  
                         stop@mR 001C                ??_initDCmotorsPWM 0003  
                      ??_sprintf 0059              reverse_onesquare@mL 001A  
            reverse_onesquare@mR 001C                     ___xxtofl@arg 000B  
                   ___xxtofl@exp 000A                     ___xxtofl@val 0001  
                     __accesstop 0060          __end_of__initialization 381E  
       __end_of_color_read_Green 369A           ?_I2C_2_Master_RepStart 0001  
                  ___rparam_used 000001                       ___fltol@f1 0028  
               ?_color_read_Blue 0005                  _Interrupts_init 3946  
                 __pcstackCOMRAM 0001                    color_read@rgb 000C  
                  __end_of_fputc 2D28                    __end_of_fputs 372E  
                  __end_of_putch 3988              __end_of_Timer0_init 3910  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00F5  
                     __pbssBANK2 0200                       __pbssBANK3 0300  
         color_processor_hard@cb 0017           color_processor_hard@cg 0015  
         color_processor_hard@cr 0013                _color_writetoaddr 38D0  
                   _T2CLKCONbits 000FBF               ?_color_writetoaddr 0003  
                        ?___wmul 0001                   main@color_flag 0059  
                 main@color_name 00F3                   main@color_path 01C8  
                    right_135@mL 001A                      right_135@mR 001C  
            ??_color_writetoaddr 0004                 _reverse_fromcard 3304  
                      ?___xxtofl 0001    __end_of_color_read_Luminosity 364A  
                        _SP4BRGH 000EE6                          _SP4BRGL 000EE5  
                        _PWM6DCH 000FA3                          _PWM7DCH 000FA0  
                        _SSP2ADD 000ED6                          _SSP2BUF 000ED5  
                      ?_left_135 001A                       _color_read 2DEC  
        __end_of_Interrupts_init 395C           color_writetoaddr@value 0003  
               ??_color_read_Red 0007                          _HighISR 0008  
      __end_of_color_writetoaddr 38F0         color_read_Luminosity@tmp 000A  
             _I2C_2_Master_Start 397C                       _initUSART4 3910  
             _I2C_2_Master_Write 395C                        ?_right_90 001A  
                        __Hparam 0000                          __Lparam 0000  
color_processor_hard@condition_b 0009  color_processor_hard@condition_g 0008  
color_processor_hard@condition_r 0007                color_read_Red@tmp 000A  
                    _Timer0_init 38F0                        ?_spin_180 001A  
        sendStringSerial4@string 0002                          ___aodiv 25EA  
                        ___aomod 2772                          ___awdiv 2D28  
                        ___flmul 19D6                          ___fltol 2B58  
            ?_I2C_2_Master_Start 0001              ?_I2C_2_Master_Write 0001  
                     _off_period 00F9                        ?_vfprintf 0051  
                   __psmallconst 0E00                          __pcinit 37F2  
                        __ramtop 0E00                          __ptext0 0E2E  
                        __ptext1 3506                          __ptext2 3558  
                        __ptext3 28D6                          __ptext4 1E00  
                        __ptext5 3432                          __ptext6 36EA  
                        __ptext7 2C5E                          __ptext8 3986  
                        __ptext9 37B2                          _left_90 2F36  
                      _T2CONbits 000FBD                          _forward 3262  
                     ??___xxtofl 0005                        _T2HLTbits 000FBE  
      main@lowerbound_calibrated 00E7                    ?_motor_action 0022  
                  _RxBufWriteCnt 005E                          _sprintf 3506  
           ??_I2C_2_Master_Start 0002                       ??_left_135 001E  
           ??_I2C_2_Master_Write 0002             end_of_initialization 381E  
              __end_of_right_135 311E               setMotorPWM@PWMduty 0018  
                        fputc@fp 0003                          fputs@fp 000C  
              ?_color_click_init 0001     __end_of_color_processor_easy 2B58  
   __end_of_color_processor_hard 2262                       ??_right_90 001E  
             ??_color_click_init 0005                __end_of_vfpfcnvrt 2A34  
                     ??_spin_180 001E                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
               vfpfcnvrt@convarg 0047                       main@F14643 021E  
                     main@F14651 0200                       ??_vfprintf 0057  
                _initDCmotorsPWM 372E                        _PORTFbits 000F8E  
                 ??_motor_action 0028                    ___xxtofl@sign 0009  
                      _TRISCbits 000F83                        _TRISDbits 000F84  
                      _TRISEbits 000F85                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
             reverse_fromcard@mL 001A               reverse_fromcard@mR 001C  
                    ?_color_read 000C         color_writetoaddr@address 0004  
        ??_I2C_2_Master_RepStart 0002                 ?_Interrupts_init 0001  
                    ___flmul@grs 001C                       left_135@mL 001A  
                     left_135@mR 001C                     _EUSART4RXbuf 023C  
                   _EUSART4TXbuf 0300                ?_color_read_Green 0005  
                    ?_initUSART4 0001        sendCharSerial4@charToSend 0001  
                     main@motorL 02D0                       main@motorR 02D9  
             ??_color_read_Green 0007                      vfpfcnvrt@ap 0043  
                    vfpfcnvrt@cp 004F                      vfpfcnvrt@fp 003F  
                 __end_of___wmul 38D0              start_initialization 37F2  
                    __end_of_abs 37F2                      __end_of_pad 34AC  
                  _TxBufWriteCnt 005C         __end_of_reverse_fromcard 33A4  
            color_read_Green@tmp 000A          __end_of_initDCmotorsPWM 3770  
                    vfprintf@fmt 0053                         ??___wmul 0005  
             reverse_onesquare@i 0020                        ___flmul@a 0013  
                      ___flmul@b 000F                      __pbssCOMRAM 005B  
           _color_processor_easy 2A34             _color_processor_hard 207E  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
                  __pcstackBANK2 0272                 ___aodiv@dividend 0001  
             main@RGB_calibrated 01EA                         ?_HighISR 0001  
        color_processor_easy@rgb 0001          color_processor_hard@rgb 0001  
          color_processor_easy@b 000F            color_processor_hard@b 0011  
          color_processor_easy@g 000D            color_processor_hard@g 000F  
          color_processor_easy@l 0009            color_processor_easy@r 000B  
          color_processor_hard@r 000D                        _dtoa$2448 002E  
           __end_of_motor_action 19D6                     ?_Timer0_init 0001  
                      __pintcode 0008                         ?___aodiv 0001  
                       ?___aomod 0001                         ?___awdiv 0007  
               ___aodiv@quotient 0013                         ?___flmul 000F  
                       ?___fltol 0028                       right_135@i 0020  
                     right_90@mL 001A                       right_90@mR 001C  
           I2C_2_Master_Read@ack 0003             I2C_2_Master_Read@tmp 0004  
                       ?_left_90 001A                      __smallconst 0E00  
                       ?_forward 001A                _I2C_2_Master_Idle 3882  
          ?_color_processor_easy 0001            ?_color_processor_hard 0001  
               main@RGB_recorded 01F2                _I2C_2_Master_Init 3858  
              _I2C_2_Master_Read 3770                _I2C_2_Master_Stop 3972  
                   _RxBufReadCnt 005D               ?_I2C_2_Master_Idle 0001  
             ?_I2C_2_Master_Init 0001               ?_I2C_2_Master_Read 0001  
                  ??_setMotorPWM 0011            _color_read_Luminosity 35FA  
             ?_I2C_2_Master_Stop 0001         initDCmotorsPWM@PWMperiod 0001  
                       ?_sprintf 0060                _sendStringSerial4 3828  
            ??_I2C_2_Master_Idle 0001              ??_I2C_2_Master_Init 0001  
            ??_I2C_2_Master_Read 0002                   ___wmul@product 0005  
            ??_I2C_2_Master_Stop 0002                         _LATCbits 000F7B  
                       _LATDbits 000F7C                         _LATEbits 000F7D  
                       _LATFbits 000F7E                        _on_period 00FB  
                       _LATGbits 000F7F                         _LATHbits 000F80  
                      _right_135 307C                         _IPR0bits 000E1F  
                       _IPR2bits 000E21                         _PIE0bits 000E29  
                       _PIE2bits 000E2B               ?_sendStringSerial4 0002  
                     spin_180@mL 001A                       spin_180@mR 001C  
                       _PIR0bits 000E33                         i2u274_40 001A  
                       i2u274_41 0016                         i2u275_40 0028  
                       i2u275_41 0024                         _PIR2bits 000E35  
                       _PIR4bits 000E37                 ?_initDCmotorsPWM 0001  
              ??_sendCharSerial4 0001                         _SSP2CON2 000EDA  
            ??_sendStringSerial4 0004                         _SSP2STAT 000ED8  
              _reverse_onesquare 311E                        _vfpfcnvrt 28D6  
      __end_of_I2C_2_Master_Idle 38AA               ?_reverse_onesquare 001A  
      __end_of_I2C_2_Master_Init 3882        __end_of_I2C_2_Master_Read 37B2  
                      main@i_849 01E8                ___wmul@multiplier 0001  
              reverse_fromcard@i 0020        __end_of_I2C_2_Master_Stop 397C  
                   setMotorPWM@m 000F      I2C_2_Master_Write@data_byte 0002  
                      left_135@i 0020                        left_90@mL 001A  
                      left_90@mR 001C             main@color_calibrated 0290  
              ??_color_read_Blue 0007                     _TxBufReadCnt 005B  
            ??_reverse_onesquare 001E        main@upperbound_calibrated 00E9  
                   ??_color_read 000E        __end_of_sendStringSerial4 3858  
  __end_of_I2C_2_Master_RepStart 3972               color_read_Blue@tmp 000A  
            __end_of_setMotorPWM 2436                       ?_right_135 001A  
                   ??_initUSART4 0001                         __Hrparam 0000  
                     vfprintf@ap 0055                         __Lrparam 0000  
                     vfprintf@fp 0051        __end_of_reverse_onesquare 31C0  
                      forward@mL 001A                        forward@mR 001C  
                     ?_vfpfcnvrt 003F               __end_of_color_read 2E92  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
                     _ANSELDbits 000EA7           ??_color_processor_easy 0005  
         ??_color_processor_hard 0005                       _ANSELFbits 000EB4  
                     sprintf@fmt 0062                         ___xxtofl 2436  
                     _T0CON0bits 000FD5                       _T0CON1bits 000FD6  
         ?_color_read_Luminosity 0005               __end_of_initUSART4 392E  
                       __ptext10 2772                         __ptext11 25EA  
                       __ptext20 3304                         __ptext12 2FDA  
                       __ptext21 2F36                         __ptext13 3828  
                       __ptext30 35AA                         __ptext22 31C0  
                       __ptext14 392E                         __ptext31 35FA  
                       __ptext23 3262                         __ptext15 158C  
                       __ptext40 395C                         __ptext32 364A  
                       __ptext24 2262                         __ptext16 33A4  
                       __ptext41 3972                         __ptext33 369A  
                       __ptext25 38AA                         __ptext17 2E92  
                       __ptext42 397C                         __ptext34 3968  
                       __ptext26 2D28                         __ptext18 307C  
                       __ptext43 3882                         __ptext35 3770  
                       __ptext27 3910                         __ptext19 311E  
                       __ptext44 3858                         __ptext36 207E  
                       __ptext28 372E                         __ptext45 2436  
                       __ptext37 2A34                         __ptext29 2DEC  
                       __ptext46 2B58                         __ptext38 34AC  
                       __ptext47 19D6                         __ptext39 38D0  
                       __ptext48 38F0                         __ptext49 3946  
                      right_90@i 0020                         _left_135 31C0  
                   _SSP2CON1bits 000ED9                     _SSP2CON2bits 000EDA  
                       _right_90 2E92                ?_reverse_fromcard 001A  
                      spin_180@i 0020                         _spin_180 2FDA  
                       isa$xinst 000000               ??_reverse_fromcard 001E  
                     _RC4STAbits 000EE7                         int$flags 005F  
                  motor_action@l 0024                    motor_action@r 0026  
                       _vfprintf 3558                         left_90@i 0020  
               ___aomod@dividend 0001                  main@time_return 00EB  
                     _INTCONbits 000FF2                     _motor_action 158C  
                       forward@i 0020                      _setMotorPWM 2262  
                    _PWM6CONbits 000FA4                      _PWM7CONbits 000FA1  
                       intlevel2 0000                        sprintf@ap 006E  
                    ??_right_135 001E                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 0045                  ___aomod@counter 0011  
               _color_click_init 34AC                         sprintf@f 0070  
                       sprintf@s 0060                       _SSP2DATPPS 000E1D  
                     _SSP2CLKPPS 000E1C                       _TX4STAbits 000EE8  
                   ___aodiv@sign 0012                  _sendCharSerial4 392E  
                   ___aomod@sign 0012  
