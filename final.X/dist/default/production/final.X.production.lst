

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 13 15:47:44 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Version 2.35
    75                           ; Generated 05/05/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F67K40 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataBANK2
   111   00387C                     __pidataBANK2:
   112                           	callstack 0
   113                           
   114                           ;initializer for main@F14651
   115   00387C  0001               	dw	1
   116   00387E  0001               	dw	1
   117   003880  0001               	dw	1
   118   003882  0001               	dw	1
   119   003884  0001               	dw	1
   120                           
   121                           ;initializer for main@F14643
   122   003886  0001               	dw	1
   123   003888  0000               	dw	0
   124   00388A  0002               	dw	2
   125   00388C  0000               	dw	0
   126   00388E  0003               	dw	3
   127   000000                     _TX4REG	set	3812
   128   000000                     _RC4STAbits	set	3815
   129   000000                     _SP4BRGH	set	3814
   130   000000                     _T0CON0bits	set	4053
   131   000000                     _T0CON1bits	set	4054
   132   000000                     _TMR0H	set	4052
   133   000000                     _TRISGbits	set	3975
   134   000000                     _TRISEbits	set	3973
   135   000000                     _LATFbits	set	3966
   136   000000                     _TRISFbits	set	3974
   137   000000                     _LATG	set	3967
   138   000000                     _LATE	set	3965
   139   000000                     _SSP2CON2bits	set	3802
   140   000000                     _LATGbits	set	3967
   141   000000                     _LATEbits	set	3965
   142   000000                     _RX4PPS	set	3605
   143   000000                     _SSP2CLKPPS	set	3612
   144   000000                     _SSP2DATPPS	set	3613
   145   000000                     _ANSELDbits	set	3751
   146   000000                     _ANSELFbits	set	3764
   147   000000                     _LATDbits	set	3964
   148   000000                     _LATHbits	set	3968
   149   000000                     _TRISDbits	set	3972
   150   000000                     _TRISHbits	set	3976
   151   000000                     _PORTFbits	set	3982
   152   000000                     _PWM7DCH	set	4000
   153   000000                     _PWM6DCH	set	4003
   154   000000                     _TRISCbits	set	3971
   155   000000                     _SSP2BUF	set	3797
   156   000000                     _SSP2ADD	set	3798
   157   000000                     _SSP2CON1bits	set	3801
   158   000000                     _RC4REG	set	3811
   159   000000                     _SP4BRGL	set	3813
   160   000000                     _TX4STAbits	set	3816
   161   000000                     _BAUD4CONbits	set	3817
   162   000000                     _LATCbits	set	3963
   163   000000                     _SSP2CON2	set	3802
   164   000000                     _SSP2STAT	set	3800
   165   000000                     _IPR0bits	set	3615
   166   000000                     _PIE0bits	set	3625
   167   000000                     _RC7PPS	set	3689
   168   000000                     _RD5PPS	set	3695
   169   000000                     _RE2PPS	set	3700
   170   000000                     _RD6PPS	set	3696
   171   000000                     _PWM6CONbits	set	4004
   172   000000                     _T2PR	set	4028
   173   000000                     _T2CONbits	set	4029
   174   000000                     _INTCONbits	set	4082
   175   000000                     _PWM7CONbits	set	4001
   176   000000                     _TMR0L	set	4051
   177   000000                     _T2CLKCONbits	set	4031
   178   000000                     _T2HLTbits	set	4030
   179   000000                     _PIE2bits	set	3627
   180   000000                     _PIR0bits	set	3635
   181   000000                     _IPR2bits	set	3617
   182   000000                     _PIR2bits	set	3637
   183   000000                     _PIR4bits	set	3639
   184   000000                     _RC0PPS	set	3682
   185                           
   186                           	psect	smallconst
   187   000E00                     __psmallconst:
   188                           	callstack 0
   189   000E00  00                 	db	0
   190   000E01                     STR_1:
   191                           
   192                           ; BSR set to: 14
   193   000E01  25                 	db	37
   194   000E02  64                 	db	100	;'d'
   195   000E03  20                 	db	32
   196   000E04  25                 	db	37
   197   000E05  64                 	db	100	;'d'
   198   000E06  20                 	db	32
   199   000E07  25                 	db	37
   200   000E08  64                 	db	100	;'d'
   201   000E09  20                 	db	32
   202   000E0A  25                 	db	37
   203   000E0B  64                 	db	100	;'d'
   204   000E0C  20                 	db	32
   205   000E0D  25                 	db	37
   206   000E0E  64                 	db	100	;'d'
   207   000E0F  20                 	db	32
   208   000E10  0D                 	db	13
   209   000E11  0A                 	db	10
   210   000E12  00                 	db	0
   211   000E13                     STR_2:
   212                           
   213                           ; BSR set to: 14
   214   000E13  54                 	db	84	;'T'
   215   000E14  45                 	db	69	;'E'
   216   000E15  53                 	db	83	;'S'
   217   000E16  54                 	db	84	;'T'
   218   000E17  49                 	db	73	;'I'
   219   000E18  4E                 	db	78	;'N'
   220   000E19  47                 	db	71	;'G'
   221   000E1A  20                 	db	32
   222   000E1B  0D                 	db	13
   223   000E1C  0A                 	db	10
   224   000E1D  00                 	db	0
   225   000E1E  00                 	db	0	; dummy byte at the end
   226   000000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230   0035F4                     __pcinit:
   231                           	callstack 0
   232   0035F4                     start_initialization:
   233                           	callstack 0
   234   0035F4                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Initialize objects allocated to BANK2 (20 bytes)
   238                           ; load TBLPTR registers with __pidataBANK2
   239   0035F4  0E7C               	movlw	low __pidataBANK2
   240   0035F6  6EF6               	movwf	tblptrl,c
   241   0035F8  0E38               	movlw	high __pidataBANK2
   242   0035FA  6EF7               	movwf	tblptrh,c
   243   0035FC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   244   0035FE  6EF8               	movwf	tblptru,c
   245   003600  EE02  F0B0         	lfsr	0,__pdataBANK2
   246   003604  EE10 F014          	lfsr	1,20
   247   003608                     copy_data0:
   248   003608  0009               	tblrd		*+
   249   00360A  CFF5 FFEE          	movff	tablat,postinc0
   250   00360E  50E5               	movf	postdec1,w,c
   251   003610  50E1               	movf	fsr1l,w,c
   252   003612  E1FA               	bnz	copy_data0
   253                           
   254                           ; Clear objects allocated to BANK2 (112 bytes)
   255   003614  EE02  F000         	lfsr	0,__pbssBANK2
   256   003618  0E70               	movlw	112
   257   00361A                     clear_0:
   258   00361A  6AEE               	clrf	postinc0,c
   259   00361C  06E8               	decf	wreg,f,c
   260   00361E  E1FD               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to BANK1 (10 bytes)
   263   003620  EE01  F0F0         	lfsr	0,__pbssBANK1
   264   003624  0E0A               	movlw	10
   265   003626                     clear_1:
   266   003626  6AEE               	clrf	postinc0,c
   267   003628  06E8               	decf	wreg,f,c
   268   00362A  E1FD               	bnz	clear_1
   269                           
   270                           ; Clear objects allocated to COMRAM (5 bytes)
   271   00362C  6A5D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   272   00362E  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   273   003630  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   274   003632  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   275   003634  6A59               	clrf	__pbssCOMRAM& (0+255),c
   276   003636                     end_of_initialization:
   277                           	callstack 0
   278   003636                     __end_of__initialization:
   279                           	callstack 0
   280   003636  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281   003638  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282   00363A  0100               	movlb	0
   283   00363C  EF10  F007         	goto	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMRAM
   286   000059                     __pbssCOMRAM:
   287                           	callstack 0
   288   000059                     _flags:
   289                           	callstack 0
   290   000059                     	ds	1
   291   00005A                     _TxBufReadCnt:
   292                           	callstack 0
   293   00005A                     	ds	1
   294   00005B                     _TxBufWriteCnt:
   295                           	callstack 0
   296   00005B                     	ds	1
   297   00005C                     _RxBufReadCnt:
   298                           	callstack 0
   299   00005C                     	ds	1
   300   00005D                     _RxBufWriteCnt:
   301                           	callstack 0
   302   00005D                     	ds	1
   303                           
   304                           	psect	bssBANK1
   305   0001F0                     __pbssBANK1:
   306                           	callstack 0
   307   0001F0                     _width:
   308                           	callstack 0
   309   0001F0                     	ds	2
   310   0001F2                     _prec:
   311                           	callstack 0
   312   0001F2                     	ds	2
   313   0001F4                     _time:
   314                           	callstack 0
   315   0001F4                     	ds	2
   316   0001F6                     _off_period:
   317                           	callstack 0
   318   0001F6                     	ds	2
   319   0001F8                     _on_period:
   320                           	callstack 0
   321   0001F8                     	ds	2
   322                           
   323                           	psect	bssBANK2
   324   000200                     __pbssBANK2:
   325                           	callstack 0
   326   000200                     _EUSART4TXbuf:
   327                           	callstack 0
   328   000200                     	ds	60
   329   00023C                     _EUSART4RXbuf:
   330                           	callstack 0
   331   00023C                     	ds	20
   332   000250                     _dbuf:
   333                           	callstack 0
   334   000250                     	ds	32
   335                           
   336                           	psect	dataBANK2
   337   0002B0                     __pdataBANK2:
   338                           	callstack 0
   339   0002B0                     main@F14651:
   340                           	callstack 0
   341   0002B0                     	ds	10
   342   0002BA                     main@F14643:
   343                           	callstack 0
   344   0002BA                     	ds	10
   345                           
   346                           	psect	cstackBANK2
   347   000270                     __pcstackBANK2:
   348                           	callstack 0
   349   000270                     main@color_calibrated:
   350                           	callstack 0
   351                           
   352                           ; 64 bytes @ 0x0
   353   000270                     	ds	64
   354                           
   355                           	psect	cstackBANK1
   356   000100                     __pcstackBANK1:
   357                           	callstack 0
   358   000100                     main@test0:
   359                           	callstack 0
   360                           
   361                           ; 100 bytes @ 0x0
   362   000100                     	ds	100
   363   000164                     main@test:
   364                           	callstack 0
   365                           
   366                           ; 100 bytes @ 0x64
   367   000164                     	ds	100
   368   0001C8                     main@color_name:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0xC8
   372   0001C8                     	ds	2
   373   0001CA                     main@i:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0xCA
   377   0001CA                     	ds	2
   378   0001CC                     main@i_883:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0xCC
   382   0001CC                     	ds	2
   383   0001CE                     main@RGB_calibrated:
   384                           	callstack 0
   385                           
   386                           ; 8 bytes @ 0xCE
   387   0001CE                     	ds	8
   388   0001D6                     main@RGB_recorded:
   389                           	callstack 0
   390                           
   391                           ; 8 bytes @ 0xD6
   392   0001D6                     	ds	8
   393   0001DE                     main@motorL:
   394                           	callstack 0
   395                           
   396                           ; 9 bytes @ 0xDE
   397   0001DE                     	ds	9
   398   0001E7                     main@motorR:
   399                           	callstack 0
   400                           
   401                           ; 9 bytes @ 0xE7
   402   0001E7                     	ds	9
   403                           
   404                           	psect	cstackBANK0
   405   000060                     __pcstackBANK0:
   406                           	callstack 0
   407   000060                     ?_sprintf:
   408                           	callstack 0
   409   000060                     sprintf@s:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x0
   413   000060                     	ds	2
   414   000062                     sprintf@fmt:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418   000062                     	ds	12
   419   00006E                     sprintf@ap:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0xE
   423   00006E                     	ds	2
   424   000070                     sprintf@f:
   425                           	callstack 0
   426                           
   427                           ; 11 bytes @ 0x10
   428   000070                     	ds	11
   429   00007B                     ??_main:
   430                           
   431                           ; 1 bytes @ 0x1B
   432   00007B                     	ds	8
   433   000083                     main@readout3:
   434                           	callstack 0
   435                           
   436                           ; 100 bytes @ 0x23
   437   000083                     	ds	100
   438   0000E7                     main@color_path:
   439                           	callstack 0
   440                           
   441                           ; 10 bytes @ 0x87
   442   0000E7                     	ds	10
   443   0000F1                     main@time_path:
   444                           	callstack 0
   445                           
   446                           ; 10 bytes @ 0x91
   447   0000F1                     	ds	10
   448   0000FB                     main@lowerbound_calibrated:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x9B
   452   0000FB                     	ds	2
   453   0000FD                     main@upperbound_calibrated:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x9D
   457   0000FD                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460   000001                     __pcstackCOMRAM:
   461                           	callstack 0
   462   000001                     ??_I2C_2_Master_Idle:
   463   000001                     ?_color_processor_easy:
   464                           	callstack 0
   465   000001                     ?_color_processor_hard:
   466                           	callstack 0
   467   000001                     ?___wmul:
   468                           	callstack 0
   469   000001                     ?___xxtofl:
   470                           	callstack 0
   471   000001                     ?___aodiv:
   472                           	callstack 0
   473   000001                     ?___aomod:
   474                           	callstack 0
   475   000001                     sendCharSerial4@charToSend:
   476                           	callstack 0
   477   000001                     color_processor_easy@rgb:
   478                           	callstack 0
   479   000001                     color_processor_hard@rgb:
   480                           	callstack 0
   481   000001                     initDCmotorsPWM@PWMperiod:
   482                           	callstack 0
   483   000001                     ___wmul@multiplier:
   484                           	callstack 0
   485   000001                     fputc@c:
   486                           	callstack 0
   487   000001                     ___xxtofl@val:
   488                           	callstack 0
   489   000001                     ___aodiv@dividend:
   490                           	callstack 0
   491   000001                     ___aomod@dividend:
   492                           	callstack 0
   493                           
   494                           ; 8 bytes @ 0x0
   495   000001                     	ds	1
   496   000002                     ??_I2C_2_Master_Read:
   497   000002                     I2C_2_Master_Write@data_byte:
   498                           	callstack 0
   499   000002                     sendStringSerial4@string:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x1
   503   000002                     	ds	1
   504   000003                     color_writetoaddr@value:
   505                           	callstack 0
   506   000003                     I2C_2_Master_Read@ack:
   507                           	callstack 0
   508   000003                     color_processor_easy@calibrated:
   509                           	callstack 0
   510   000003                     color_processor_hard@calibrated:
   511                           	callstack 0
   512   000003                     ___wmul@multiplicand:
   513                           	callstack 0
   514   000003                     fputc@fp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x2
   518   000003                     	ds	1
   519   000004                     color_writetoaddr@address:
   520                           	callstack 0
   521   000004                     I2C_2_Master_Read@tmp:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x3
   525   000004                     	ds	1
   526   000005                     ??_fputc:
   527   000005                     ??_color_click_init:
   528   000005                     ??_color_processor_easy:
   529   000005                     ??___xxtofl:
   530   000005                     ?_color_read_Luminosity:
   531                           	callstack 0
   532   000005                     ?_color_read_Red:
   533                           	callstack 0
   534   000005                     ?_color_read_Green:
   535                           	callstack 0
   536   000005                     ?_color_read_Blue:
   537                           	callstack 0
   538   000005                     ___wmul@product:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x4
   542   000005                     	ds	2
   543   000007                     ??_color_read_Luminosity:
   544   000007                     ??_color_read_Red:
   545   000007                     ??_color_read_Green:
   546   000007                     ??_color_read_Blue:
   547   000007                     ?___awdiv:
   548                           	callstack 0
   549   000007                     ___awdiv@dividend:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x6
   553   000007                     	ds	2
   554   000009                     ___xxtofl@sign:
   555                           	callstack 0
   556   000009                     color_processor_easy@l:
   557                           	callstack 0
   558   000009                     ___awdiv@divisor:
   559                           	callstack 0
   560   000009                     ___aodiv@divisor:
   561                           	callstack 0
   562   000009                     ___aomod@divisor:
   563                           	callstack 0
   564                           
   565                           ; 8 bytes @ 0x8
   566   000009                     	ds	1
   567   00000A                     ___xxtofl@exp:
   568                           	callstack 0
   569   00000A                     color_read_Luminosity@tmp:
   570                           	callstack 0
   571   00000A                     color_read_Red@tmp:
   572                           	callstack 0
   573   00000A                     color_read_Green@tmp:
   574                           	callstack 0
   575   00000A                     color_read_Blue@tmp:
   576                           	callstack 0
   577   00000A                     fputs@s:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x9
   581   00000A                     	ds	1
   582   00000B                     ___awdiv@counter:
   583                           	callstack 0
   584   00000B                     color_processor_easy@r:
   585                           	callstack 0
   586   00000B                     ___xxtofl@arg:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0xA
   590   00000B                     	ds	1
   591   00000C                     ___awdiv@sign:
   592                           	callstack 0
   593   00000C                     color_read@rgb:
   594                           	callstack 0
   595   00000C                     fputs@fp:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0xB
   599   00000C                     	ds	1
   600   00000D                     color_processor_easy@g:
   601                           	callstack 0
   602   00000D                     ___awdiv@quotient:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0xC
   606   00000D                     	ds	1
   607   00000E                     ??_color_read:
   608   00000E                     fputs@c:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0xD
   612   00000E                     	ds	1
   613   00000F                     ?___flmul:
   614                           	callstack 0
   615   00000F                     color_processor_easy@b:
   616                           	callstack 0
   617   00000F                     setMotorPWM@m:
   618                           	callstack 0
   619   00000F                     fputs@i:
   620                           	callstack 0
   621   00000F                     ___flmul@b:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0xE
   625   00000F                     	ds	2
   626   000011                     ??_setMotorPWM:
   627   000011                     ___aodiv@counter:
   628                           	callstack 0
   629   000011                     ___aomod@counter:
   630                           	callstack 0
   631   000011                     pad@fp:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x10
   635   000011                     	ds	1
   636   000012                     ___aodiv@sign:
   637                           	callstack 0
   638   000012                     ___aomod@sign:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x11
   642   000012                     	ds	1
   643   000013                     ?_abs:
   644                           	callstack 0
   645   000013                     pad@buf:
   646                           	callstack 0
   647   000013                     abs@a:
   648                           	callstack 0
   649   000013                     ___flmul@a:
   650                           	callstack 0
   651   000013                     ___aodiv@quotient:
   652                           	callstack 0
   653                           
   654                           ; 8 bytes @ 0x12
   655   000013                     	ds	2
   656   000015                     ??_abs:
   657   000015                     pad@p:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x14
   661   000015                     	ds	2
   662   000017                     ??___flmul:
   663   000017                     ??_pad:
   664                           
   665                           ; 1 bytes @ 0x16
   666   000017                     	ds	1
   667   000018                     setMotorPWM@PWMduty:
   668                           	callstack 0
   669   000018                     pad@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x17
   673   000018                     	ds	2
   674   00001A                     stop@mL:
   675                           	callstack 0
   676   00001A                     forward@mL:
   677                           	callstack 0
   678   00001A                     reverse_fromcard@mL:
   679                           	callstack 0
   680   00001A                     reverse_onesquare@mL:
   681                           	callstack 0
   682   00001A                     right_90@mL:
   683                           	callstack 0
   684   00001A                     left_90@mL:
   685                           	callstack 0
   686   00001A                     spin_180@mL:
   687                           	callstack 0
   688   00001A                     right_135@mL:
   689                           	callstack 0
   690   00001A                     left_135@mL:
   691                           	callstack 0
   692   00001A                     pad@w:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x19
   696   00001A                     	ds	1
   697   00001B                     ___flmul@sign:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x1A
   701   00001B                     	ds	1
   702   00001C                     stop@mR:
   703                           	callstack 0
   704   00001C                     forward@mR:
   705                           	callstack 0
   706   00001C                     reverse_fromcard@mR:
   707                           	callstack 0
   708   00001C                     reverse_onesquare@mR:
   709                           	callstack 0
   710   00001C                     right_90@mR:
   711                           	callstack 0
   712   00001C                     left_90@mR:
   713                           	callstack 0
   714   00001C                     spin_180@mR:
   715                           	callstack 0
   716   00001C                     right_135@mR:
   717                           	callstack 0
   718   00001C                     left_135@mR:
   719                           	callstack 0
   720   00001C                     dtoa@fp:
   721                           	callstack 0
   722   00001C                     ___flmul@grs:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x1B
   726   00001C                     	ds	2
   727   00001E                     ??_reverse_onesquare:
   728   00001E                     ??_stop:
   729   00001E                     ??_spin_180:
   730   00001E                     ??_forward:
   731   00001E                     ??_reverse_fromcard:
   732   00001E                     ??_right_90:
   733   00001E                     ??_left_90:
   734   00001E                     ??_right_135:
   735   00001E                     ??_left_135:
   736   00001E                     dtoa@d:
   737                           	callstack 0
   738                           
   739                           ; 8 bytes @ 0x1D
   740   00001E                     	ds	1
   741   00001F                     stop@i:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x1E
   745   00001F                     	ds	1
   746   000020                     ___flmul@aexp:
   747                           	callstack 0
   748   000020                     forward@i:
   749                           	callstack 0
   750   000020                     reverse_fromcard@i:
   751                           	callstack 0
   752   000020                     reverse_onesquare@i:
   753                           	callstack 0
   754   000020                     right_90@i:
   755                           	callstack 0
   756   000020                     left_90@i:
   757                           	callstack 0
   758   000020                     spin_180@i:
   759                           	callstack 0
   760   000020                     right_135@i:
   761                           	callstack 0
   762   000020                     left_135@i:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x1F
   766   000020                     	ds	1
   767   000021                     ___flmul@bexp:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x20
   771   000021                     	ds	1
   772   000022                     motor_action@color:
   773                           	callstack 0
   774   000022                     motor_action_return@color:
   775                           	callstack 0
   776   000022                     ___flmul@prod:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x21
   780   000022                     	ds	2
   781   000024                     motor_action@l:
   782                           	callstack 0
   783   000024                     motor_action_return@l:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x23
   787   000024                     	ds	2
   788   000026                     ??_dtoa:
   789   000026                     motor_action@r:
   790                           	callstack 0
   791   000026                     motor_action_return@r:
   792                           	callstack 0
   793   000026                     ___flmul@temp:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x25
   797   000026                     	ds	2
   798   000028                     ??_motor_action_return:
   799   000028                     ??_motor_action:
   800   000028                     ?___fltol:
   801                           	callstack 0
   802   000028                     ___fltol@f1:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x27
   806   000028                     	ds	4
   807   00002C                     ??___fltol:
   808                           
   809                           ; 1 bytes @ 0x2B
   810   00002C                     	ds	2
   811   00002E                     _dtoa$2484:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2D
   815   00002E                     	ds	2
   816   000030                     ___fltol@sign1:
   817                           	callstack 0
   818   000030                     dtoa@p:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x2F
   822   000030                     	ds	1
   823   000031                     ___fltol@exp1:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x30
   827   000031                     	ds	1
   828   000032                     dtoa@w:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x31
   832   000032                     	ds	2
   833   000034                     dtoa@n:
   834                           	callstack 0
   835                           
   836                           ; 8 bytes @ 0x33
   837   000034                     	ds	8
   838   00003C                     dtoa@i:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x3B
   842   00003C                     	ds	2
   843   00003E                     dtoa@s:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x3D
   847   00003E                     	ds	1
   848   00003F                     vfpfcnvrt@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x3E
   852   00003F                     	ds	2
   853   000041                     vfpfcnvrt@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x40
   857   000041                     	ds	2
   858   000043                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x42
   862   000043                     	ds	2
   863   000045                     ??_vfpfcnvrt:
   864                           
   865                           ; 1 bytes @ 0x44
   866   000045                     	ds	2
   867   000047                     vfpfcnvrt@convarg:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x46
   871   000047                     	ds	8
   872   00004F                     vfpfcnvrt@cp:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x4E
   876   00004F                     	ds	2
   877   000051                     ?_vfprintf:
   878                           	callstack 0
   879   000051                     vfprintf@fp:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x50
   883   000051                     	ds	2
   884   000053                     vfprintf@fmt:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x52
   888   000053                     	ds	2
   889   000055                     vfprintf@ap:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x54
   893   000055                     	ds	2
   894   000057                     vfprintf@cfmt:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x56
   898   000057                     	ds	2
   899   000059                     
   900                           ; 1 bytes @ 0x58
   901 ;;
   902 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   903 ;;
   904 ;; *************** function _main *****************
   905 ;; Defined at:
   906 ;;		line 20 in file "../main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  readout3      100   35[BANK0 ] unsigned char [100]
   911 ;;  k               2    0        int 
   912 ;;  m               2    0        int 
   913 ;;  k               2    0        int 
   914 ;;  test          100  100[BANK1 ] unsigned char [100]
   915 ;;  i               2  204[BANK1 ] int 
   916 ;;  i               2  202[BANK1 ] int 
   917 ;;  test0         100    0[BANK1 ] unsigned char [100]
   918 ;;  color_calibr   64    0[BANK2 ] int [32]
   919 ;;  time_path      10  145[BANK0 ] unsigned int [5]
   920 ;;  color_path     10  135[BANK0 ] unsigned int [5]
   921 ;;  motorR          9  231[BANK1 ] struct DC_motor
   922 ;;  motorL          9  222[BANK1 ] struct DC_motor
   923 ;;  RGB_recorded    8  214[BANK1 ] struct RGB_val
   924 ;;  RGB_calibrat    8  206[BANK1 ] struct RGB_val
   925 ;;  L_calibrated    8    0        struct RGB_val
   926 ;;  color_name      2  200[BANK1 ] unsigned int 
   927 ;;  time_return     2    0        unsigned int 
   928 ;;  j               2    0        int 
   929 ;;  color_flag      2    0        unsigned int 
   930 ;;  upperbound_c    2  157[BANK0 ] unsigned int 
   931 ;;  lowerbound_c    2  155[BANK0 ] unsigned int 
   932 ;;  PWMcycle        1    0        unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Locals:         0     124     240      64       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Totals:         0     132     240      64       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;Total ram usage:      436 bytes
   947 ;; Hardware stack levels required when called: 9
   948 ;; This function calls:
   949 ;;		_I2C_2_Master_Init
   950 ;;		_Interrupts_init
   951 ;;		_Timer0_init
   952 ;;		___flmul
   953 ;;		___fltol
   954 ;;		___xxtofl
   955 ;;		_color_click_init
   956 ;;		_color_processor_easy
   957 ;;		_color_processor_hard
   958 ;;		_color_read
   959 ;;		_forward
   960 ;;		_initDCmotorsPWM
   961 ;;		_initUSART4
   962 ;;		_motor_action
   963 ;;		_motor_action_return
   964 ;;		_reverse_onesquare
   965 ;;		_sendStringSerial4
   966 ;;		_setMotorPWM
   967 ;;		_spin_180
   968 ;;		_sprintf
   969 ;;		_stop
   970 ;; This function is called by:
   971 ;;		Startup code after reset
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text0
   976   000E20                     __ptext0:
   977                           	callstack 0
   978   000E20                     _main:
   979                           	callstack 22
   980   000E20                     
   981                           ;../main.c: 22:     color_click_init();
   982   000E20  ECDB  F019         	call	_color_click_init	;wreg free
   983   000E24                     
   984                           ;../main.c: 23:     initDCmotorsPWM(20);
   985   000E24  0E00               	movlw	0
   986   000E26  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   987   000E28  0E14               	movlw	20
   988   000E2A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   989   000E2C  EC42  F01B         	call	_initDCmotorsPWM	;wreg free
   990   000E30                     
   991                           ;../main.c: 24:     Interrupts_init();
   992   000E30  EC33  F01C         	call	_Interrupts_init	;wreg free
   993   000E34                     
   994                           ;../main.c: 25:     Timer0_init();
   995   000E34  EC08  F01C         	call	_Timer0_init	;wreg free
   996   000E38                     
   997                           ;../main.c: 26:     I2C_2_Master_Init();
   998   000E38  ECBC  F01B         	call	_I2C_2_Master_Init	;wreg free
   999   000E3C                     
  1000                           ;../main.c: 27:     initUSART4();
  1001   000E3C  EC18  F01C         	call	_initUSART4	;wreg free
  1002   000E40                     
  1003                           ;../main.c: 32:     motorL.power = 0;
  1004   000E40  0E00               	movlw	0
  1005   000E42  0101               	movlb	1	; () banked
  1006   000E44  6FDE               	movwf	main@motorL& (0+255),b
  1007   000E46                     
  1008                           ; BSR set to: 1
  1009                           ;../main.c: 33:     motorL.direction = 0;
  1010   000E46  0E00               	movlw	0
  1011   000E48  6FDF               	movwf	(main@motorL+1)& (0+255),b
  1012   000E4A                     
  1013                           ; BSR set to: 1
  1014                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
  1015   000E4A  0EA3               	movlw	163
  1016   000E4C  6FE0               	movwf	(main@motorL+2)& (0+255),b
  1017   000E4E  0E0F               	movlw	15
  1018   000E50  6FE1               	movwf	(main@motorL+3)& (0+255),b
  1019   000E52                     
  1020                           ; BSR set to: 1
  1021                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
  1022   000E52  0E7D               	movlw	125
  1023   000E54  6FE2               	movwf	(main@motorL+4)& (0+255),b
  1024   000E56  0E0F               	movlw	15
  1025   000E58  6FE3               	movwf	(main@motorL+5)& (0+255),b
  1026   000E5A                     
  1027                           ; BSR set to: 1
  1028                           ;../main.c: 36:     motorL.dir_pin = 4;
  1029   000E5A  0E04               	movlw	4
  1030   000E5C  6FE4               	movwf	(main@motorL+6)& (0+255),b
  1031   000E5E                     
  1032                           ; BSR set to: 1
  1033                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
  1034   000E5E  0E00               	movlw	0
  1035   000E60  6FE6               	movwf	(main@motorL+8)& (0+255),b
  1036   000E62  0EC7               	movlw	199
  1037   000E64  6FE5               	movwf	(main@motorL+7)& (0+255),b
  1038   000E66                     
  1039                           ; BSR set to: 1
  1040                           ;../main.c: 38:     motorR.power = 0;
  1041   000E66  0E00               	movlw	0
  1042   000E68  6FE7               	movwf	main@motorR& (0+255),b
  1043   000E6A                     
  1044                           ; BSR set to: 1
  1045                           ;../main.c: 39:     motorR.direction = 0;
  1046   000E6A  0E00               	movlw	0
  1047   000E6C  6FE8               	movwf	(main@motorR+1)& (0+255),b
  1048                           
  1049                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
  1050   000E6E  0EA0               	movlw	160
  1051   000E70  6FE9               	movwf	(main@motorR+2)& (0+255),b
  1052   000E72  0E0F               	movlw	15
  1053   000E74  6FEA               	movwf	(main@motorR+3)& (0+255),b
  1054                           
  1055                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
  1056   000E76  0E7F               	movlw	127
  1057   000E78  6FEB               	movwf	(main@motorR+4)& (0+255),b
  1058   000E7A  0E0F               	movlw	15
  1059   000E7C  6FEC               	movwf	(main@motorR+5)& (0+255),b
  1060   000E7E                     
  1061                           ; BSR set to: 1
  1062                           ;../main.c: 42:     motorR.dir_pin = 6;
  1063   000E7E  0E06               	movlw	6
  1064   000E80  6FED               	movwf	(main@motorR+6)& (0+255),b
  1065   000E82                     
  1066                           ; BSR set to: 1
  1067                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
  1068   000E82  0E00               	movlw	0
  1069   000E84  6FEF               	movwf	(main@motorR+8)& (0+255),b
  1070   000E86  0EC7               	movlw	199
  1071   000E88  6FEE               	movwf	(main@motorR+7)& (0+255),b
  1072   000E8A                     
  1073                           ; BSR set to: 1
  1074                           ;../main.c: 44:     setMotorPWM(&motorL);
  1075   000E8A  0EDE               	movlw	low main@motorL
  1076   000E8C  6E0F               	movwf	setMotorPWM@m^0,c
  1077   000E8E  0E01               	movlw	high main@motorL
  1078   000E90  6E10               	movwf	(setMotorPWM@m+1)^0,c
  1079   000E92  ECB6  F010         	call	_setMotorPWM	;wreg free
  1080   000E96                     
  1081                           ;../main.c: 45:     setMotorPWM(&motorR);
  1082   000E96  0EE7               	movlw	low main@motorR
  1083   000E98  6E0F               	movwf	setMotorPWM@m^0,c
  1084   000E9A  0E01               	movlw	high main@motorR
  1085   000E9C  6E10               	movwf	(setMotorPWM@m+1)^0,c
  1086   000E9E  ECB6  F010         	call	_setMotorPWM	;wreg free
  1087   000EA2                     
  1088                           ;../main.c: 50:     unsigned int color_path[5] = {1,0,2,0,3};
  1089   000EA2  EE22  F0BA         	lfsr	2,main@F14643
  1090   000EA6  EE10  F0E7         	lfsr	1,main@color_path
  1091   000EAA  0E09               	movlw	9
  1092   000EAC                     u2151:
  1093   000EAC  CFDB FFE3          	movff	plusw2,plusw1
  1094   000EB0  06E8               	decf	wreg,f,c
  1095   000EB2  E2FC               	bc	u2151
  1096   000EB4                     
  1097                           ;../main.c: 51:     int color_calibrated[32];;../main.c: 52:     unsigned int lowerbound
      +                          _calibrated;;../main.c: 53:     unsigned int upperbound_calibrated;;../main.c: 54:     s
      +                          truct RGB_val RGB_calibrated;;../main.c: 55:     struct RGB_val L_calibrated;;../main.c:
      +                           56:     struct RGB_val RGB_recorded;;../main.c: 57:     unsigned int time_path[5] = {1,
      +                          1,1,1,1};
  1098   000EB4  EE22  F0B0         	lfsr	2,main@F14651
  1099   000EB8  EE10  F0F1         	lfsr	1,main@time_path
  1100   000EBC  0E09               	movlw	9
  1101   000EBE                     u2161:
  1102   000EBE  CFDB FFE3          	movff	plusw2,plusw1
  1103   000EC2  06E8               	decf	wreg,f,c
  1104   000EC4  E2FC               	bc	u2161
  1105   000EC6                     l217:
  1106   000EC6  B68E               	btfsc	142,3,c	;volatile
  1107   000EC8  EF68  F007         	goto	u2171
  1108   000ECC  EF6A  F007         	goto	u2170
  1109   000ED0                     u2171:
  1110   000ED0  EF63  F007         	goto	l217
  1111   000ED4                     u2170:
  1112   000ED4                     
  1113                           ;../main.c: 71:         for (int i=0;i<8;i++){
  1114   000ED4  0E00               	movlw	0
  1115   000ED6  0101               	movlb	1	; () banked
  1116   000ED8  6FCB               	movwf	(main@i+1)& (0+255),b
  1117   000EDA  0E00               	movlw	0
  1118   000EDC  6FCA               	movwf	main@i& (0+255),b
  1119   000EDE                     l220:
  1120                           
  1121                           ; BSR set to: 1
  1122                           ;../main.c: 72:             LATHbits.LATH3 = 1;
  1123   000EDE  8680               	bsf	128,3,c	;volatile
  1124   000EE0                     
  1125                           ; BSR set to: 1
  1126                           ;../main.c: 73:             color_read(&RGB_calibrated);
  1127   000EE0  0ECE               	movlw	low main@RGB_calibrated
  1128   000EE2  6E0C               	movwf	color_read@rgb^0,c
  1129   000EE4  0E01               	movlw	high main@RGB_calibrated
  1130   000EE6  6E0D               	movwf	(color_read@rgb+1)^0,c
  1131   000EE8  EC7B  F016         	call	_color_read	;wreg free
  1132   000EEC                     
  1133                           ;../main.c: 74:             color_calibrated[4*i] = RGB_calibrated.L;
  1134   000EEC  C1CA  F07B         	movff	main@i,??_main
  1135   000EF0  C1CB  F07C         	movff	main@i+1,??_main+1
  1136   000EF4  0100               	movlb	0	; () banked
  1137   000EF6  90D8               	bcf	status,0,c
  1138   000EF8  377B               	rlcf	??_main& (0+255),f,b
  1139   000EFA  377C               	rlcf	(??_main+1)& (0+255),f,b
  1140   000EFC  90D8               	bcf	status,0,c
  1141   000EFE  377B               	rlcf	??_main& (0+255),f,b
  1142   000F00  377C               	rlcf	(??_main+1)& (0+255),f,b
  1143   000F02  90D8               	bcf	status,0,c
  1144   000F04  377B               	rlcf	??_main& (0+255),f,b
  1145   000F06  377C               	rlcf	(??_main+1)& (0+255),f,b
  1146   000F08  0E70               	movlw	low main@color_calibrated
  1147   000F0A  257B               	addwf	??_main& (0+255),w,b
  1148   000F0C  6ED9               	movwf	fsr2l,c
  1149   000F0E  0E02               	movlw	high main@color_calibrated
  1150   000F10  217C               	addwfc	(??_main+1)& (0+255),w,b
  1151   000F12  6EDA               	movwf	fsr2h,c
  1152   000F14  C1CE  FFDE         	movff	main@RGB_calibrated,postinc2
  1153   000F18  C1CF  FFDD         	movff	main@RGB_calibrated+1,postdec2
  1154   000F1C                     
  1155                           ; BSR set to: 0
  1156                           ;../main.c: 75:             color_calibrated[4*i+1] = RGB_calibrated.R;
  1157   000F1C  C1CA  F07B         	movff	main@i,??_main
  1158   000F20  C1CB  F07C         	movff	main@i+1,??_main+1
  1159   000F24  90D8               	bcf	status,0,c
  1160   000F26  377B               	rlcf	??_main& (0+255),f,b
  1161   000F28  377C               	rlcf	(??_main+1)& (0+255),f,b
  1162   000F2A  90D8               	bcf	status,0,c
  1163   000F2C  377B               	rlcf	??_main& (0+255),f,b
  1164   000F2E  377C               	rlcf	(??_main+1)& (0+255),f,b
  1165   000F30  90D8               	bcf	status,0,c
  1166   000F32  377B               	rlcf	??_main& (0+255),f,b
  1167   000F34  377C               	rlcf	(??_main+1)& (0+255),f,b
  1168   000F36  0E02               	movlw	2
  1169   000F38  277B               	addwf	??_main& (0+255),f,b
  1170   000F3A  0E00               	movlw	0
  1171   000F3C  237C               	addwfc	(??_main+1)& (0+255),f,b
  1172   000F3E  0E70               	movlw	low main@color_calibrated
  1173   000F40  257B               	addwf	??_main& (0+255),w,b
  1174   000F42  6ED9               	movwf	fsr2l,c
  1175   000F44  0E02               	movlw	high main@color_calibrated
  1176   000F46  217C               	addwfc	(??_main+1)& (0+255),w,b
  1177   000F48  6EDA               	movwf	fsr2h,c
  1178   000F4A  C1D0  FFDE         	movff	main@RGB_calibrated+2,postinc2
  1179   000F4E  C1D1  FFDD         	movff	main@RGB_calibrated+3,postdec2
  1180   000F52                     
  1181                           ; BSR set to: 0
  1182                           ;../main.c: 76:             color_calibrated[4*i+2] = RGB_calibrated.G;
  1183   000F52  C1CA  F07B         	movff	main@i,??_main
  1184   000F56  C1CB  F07C         	movff	main@i+1,??_main+1
  1185   000F5A  90D8               	bcf	status,0,c
  1186   000F5C  377B               	rlcf	??_main& (0+255),f,b
  1187   000F5E  377C               	rlcf	(??_main+1)& (0+255),f,b
  1188   000F60  90D8               	bcf	status,0,c
  1189   000F62  377B               	rlcf	??_main& (0+255),f,b
  1190   000F64  377C               	rlcf	(??_main+1)& (0+255),f,b
  1191   000F66  90D8               	bcf	status,0,c
  1192   000F68  377B               	rlcf	??_main& (0+255),f,b
  1193   000F6A  377C               	rlcf	(??_main+1)& (0+255),f,b
  1194   000F6C  0E04               	movlw	4
  1195   000F6E  277B               	addwf	??_main& (0+255),f,b
  1196   000F70  0E00               	movlw	0
  1197   000F72  237C               	addwfc	(??_main+1)& (0+255),f,b
  1198   000F74  0E70               	movlw	low main@color_calibrated
  1199   000F76  257B               	addwf	??_main& (0+255),w,b
  1200   000F78  6ED9               	movwf	fsr2l,c
  1201   000F7A  0E02               	movlw	high main@color_calibrated
  1202   000F7C  217C               	addwfc	(??_main+1)& (0+255),w,b
  1203   000F7E  6EDA               	movwf	fsr2h,c
  1204   000F80  C1D2  FFDE         	movff	main@RGB_calibrated+4,postinc2
  1205   000F84  C1D3  FFDD         	movff	main@RGB_calibrated+5,postdec2
  1206   000F88                     
  1207                           ; BSR set to: 0
  1208                           ;../main.c: 77:             color_calibrated[4*i+3] = RGB_calibrated.B;
  1209   000F88  C1CA  F07B         	movff	main@i,??_main
  1210   000F8C  C1CB  F07C         	movff	main@i+1,??_main+1
  1211   000F90  90D8               	bcf	status,0,c
  1212   000F92  377B               	rlcf	??_main& (0+255),f,b
  1213   000F94  377C               	rlcf	(??_main+1)& (0+255),f,b
  1214   000F96  90D8               	bcf	status,0,c
  1215   000F98  377B               	rlcf	??_main& (0+255),f,b
  1216   000F9A  377C               	rlcf	(??_main+1)& (0+255),f,b
  1217   000F9C  90D8               	bcf	status,0,c
  1218   000F9E  377B               	rlcf	??_main& (0+255),f,b
  1219   000FA0  377C               	rlcf	(??_main+1)& (0+255),f,b
  1220   000FA2  0E06               	movlw	6
  1221   000FA4  277B               	addwf	??_main& (0+255),f,b
  1222   000FA6  0E00               	movlw	0
  1223   000FA8  237C               	addwfc	(??_main+1)& (0+255),f,b
  1224   000FAA  0E70               	movlw	low main@color_calibrated
  1225   000FAC  257B               	addwf	??_main& (0+255),w,b
  1226   000FAE  6ED9               	movwf	fsr2l,c
  1227   000FB0  0E02               	movlw	high main@color_calibrated
  1228   000FB2  217C               	addwfc	(??_main+1)& (0+255),w,b
  1229   000FB4  6EDA               	movwf	fsr2h,c
  1230   000FB6  C1D4  FFDE         	movff	main@RGB_calibrated+6,postinc2
  1231   000FBA  C1D5  FFDD         	movff	main@RGB_calibrated+7,postdec2
  1232   000FBE                     
  1233                           ; BSR set to: 0
  1234                           ;../main.c: 78:             _delay((unsigned long)((1500)*(64000000/4000.0)));
  1235   000FBE  0E7A               	movlw	122
  1236   000FC0  0100               	movlb	0	; () banked
  1237   000FC2  6F7C               	movwf	(??_main+1)& (0+255),b
  1238   000FC4  0EC1               	movlw	193
  1239   000FC6  6F7B               	movwf	??_main& (0+255),b
  1240   000FC8  0E81               	movlw	129
  1241   000FCA                     u2267:
  1242   000FCA  2EE8               	decfsz	wreg,f,c
  1243   000FCC  D7FE               	bra	u2267
  1244   000FCE  2F7B               	decfsz	??_main& (0+255),f,b
  1245   000FD0  D7FC               	bra	u2267
  1246   000FD2  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1247   000FD4  D7FA               	bra	u2267
  1248   000FD6  D000               	nop2	
  1249   000FD8                     
  1250                           ;../main.c: 79:             LATHbits.LATH3 = 0;
  1251   000FD8  9680               	bcf	128,3,c	;volatile
  1252   000FDA                     
  1253                           ;../main.c: 80:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1254   000FDA  0E52               	movlw	82
  1255   000FDC  0100               	movlb	0	; () banked
  1256   000FDE  6F7C               	movwf	(??_main+1)& (0+255),b
  1257   000FE0  0E2B               	movlw	43
  1258   000FE2  6F7B               	movwf	??_main& (0+255),b
  1259   000FE4  0E00               	movlw	0
  1260   000FE6                     u2277:
  1261   000FE6  2EE8               	decfsz	wreg,f,c
  1262   000FE8  D7FE               	bra	u2277
  1263   000FEA  2F7B               	decfsz	??_main& (0+255),f,b
  1264   000FEC  D7FC               	bra	u2277
  1265   000FEE  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1266   000FF0  D7FA               	bra	u2277
  1267   000FF2  F000               	nop	
  1268   000FF4                     
  1269                           ;../main.c: 81:         }
  1270   000FF4  0101               	movlb	1	; () banked
  1271   000FF6  4BCA               	infsnz	main@i& (0+255),f,b
  1272   000FF8  2BCB               	incf	(main@i+1)& (0+255),f,b
  1273   000FFA                     
  1274                           ; BSR set to: 1
  1275   000FFA  BFCB               	btfsc	(main@i+1)& (0+255),7,b
  1276   000FFC  EF09  F008         	goto	u2181
  1277   001000  51CB               	movf	(main@i+1)& (0+255),w,b
  1278   001002  E109               	bnz	u2180
  1279   001004  0E08               	movlw	8
  1280   001006  5DCA               	subwf	main@i& (0+255),w,b
  1281   001008  A0D8               	btfss	status,0,c
  1282   00100A  EF09  F008         	goto	u2181
  1283   00100E  EF0B  F008         	goto	u2180
  1284   001012                     u2181:
  1285   001012  EF6F  F007         	goto	l220
  1286   001016                     u2180:
  1287   001016                     
  1288                           ; BSR set to: 1
  1289                           ;../main.c: 82:         for (int i=0;i<8;i++){
  1290   001016  0E00               	movlw	0
  1291   001018  6FCD               	movwf	(main@i_883+1)& (0+255),b
  1292   00101A  0E00               	movlw	0
  1293   00101C  6FCC               	movwf	main@i_883& (0+255),b
  1294   00101E                     l3921:
  1295                           
  1296                           ; BSR set to: 1
  1297                           ;../main.c: 83:             char readout3[100];;../main.c: 84:             sprintf(reado
      +                          ut3,"%d %d %d %d %d \r\n", i+1,color_calibrated[4*i],color_calibrated[4*i+1],color_calib
      +                          rated[4*i+2],color_calibrated[4*i+3]);
  1298   00101E  0E83               	movlw	low main@readout3
  1299   001020  0100               	movlb	0	; () banked
  1300   001022  6F60               	movwf	sprintf@s& (0+255),b
  1301   001024  0E00               	movlw	high main@readout3
  1302   001026  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1303   001028  0E01               	movlw	low STR_1
  1304   00102A  6F62               	movwf	sprintf@fmt& (0+255),b
  1305   00102C  0E0E               	movlw	high STR_1
  1306   00102E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1307   001030  0E01               	movlw	1
  1308   001032  0101               	movlb	1	; () banked
  1309   001034  25CC               	addwf	main@i_883& (0+255),w,b
  1310   001036  0100               	movlb	0	; () banked
  1311   001038  6F64               	movwf	(?_sprintf+4)& (0+255),b
  1312   00103A  0E00               	movlw	0
  1313   00103C  0101               	movlb	1	; () banked
  1314   00103E  21CD               	addwfc	(main@i_883+1)& (0+255),w,b
  1315   001040  0100               	movlb	0	; () banked
  1316   001042  6F65               	movwf	(?_sprintf+5)& (0+255),b
  1317   001044  C1CC  F07B         	movff	main@i_883,??_main
  1318   001048  C1CD  F07C         	movff	main@i_883+1,??_main+1
  1319   00104C  90D8               	bcf	status,0,c
  1320   00104E  377B               	rlcf	??_main& (0+255),f,b
  1321   001050  377C               	rlcf	(??_main+1)& (0+255),f,b
  1322   001052  90D8               	bcf	status,0,c
  1323   001054  377B               	rlcf	??_main& (0+255),f,b
  1324   001056  377C               	rlcf	(??_main+1)& (0+255),f,b
  1325   001058  90D8               	bcf	status,0,c
  1326   00105A  377B               	rlcf	??_main& (0+255),f,b
  1327   00105C  377C               	rlcf	(??_main+1)& (0+255),f,b
  1328   00105E  0E70               	movlw	low main@color_calibrated
  1329   001060  257B               	addwf	??_main& (0+255),w,b
  1330   001062  6ED9               	movwf	fsr2l,c
  1331   001064  0E02               	movlw	high main@color_calibrated
  1332   001066  217C               	addwfc	(??_main+1)& (0+255),w,b
  1333   001068  6EDA               	movwf	fsr2h,c
  1334   00106A  CFDE F066          	movff	postinc2,?_sprintf+6
  1335   00106E  CFDD F067          	movff	postdec2,?_sprintf+7
  1336   001072  C1CC  F07D         	movff	main@i_883,??_main+2
  1337   001076  C1CD  F07E         	movff	main@i_883+1,??_main+3
  1338   00107A  90D8               	bcf	status,0,c
  1339   00107C  377D               	rlcf	(??_main+2)& (0+255),f,b
  1340   00107E  377E               	rlcf	(??_main+3)& (0+255),f,b
  1341   001080  90D8               	bcf	status,0,c
  1342   001082  377D               	rlcf	(??_main+2)& (0+255),f,b
  1343   001084  377E               	rlcf	(??_main+3)& (0+255),f,b
  1344   001086  90D8               	bcf	status,0,c
  1345   001088  377D               	rlcf	(??_main+2)& (0+255),f,b
  1346   00108A  377E               	rlcf	(??_main+3)& (0+255),f,b
  1347   00108C  0E02               	movlw	2
  1348   00108E  277D               	addwf	(??_main+2)& (0+255),f,b
  1349   001090  0E00               	movlw	0
  1350   001092  237E               	addwfc	(??_main+3)& (0+255),f,b
  1351   001094  0E70               	movlw	low main@color_calibrated
  1352   001096  257D               	addwf	(??_main+2)& (0+255),w,b
  1353   001098  6ED9               	movwf	fsr2l,c
  1354   00109A  0E02               	movlw	high main@color_calibrated
  1355   00109C  217E               	addwfc	(??_main+3)& (0+255),w,b
  1356   00109E  6EDA               	movwf	fsr2h,c
  1357   0010A0  CFDE F068          	movff	postinc2,?_sprintf+8
  1358   0010A4  CFDD F069          	movff	postdec2,?_sprintf+9
  1359   0010A8  C1CC  F07F         	movff	main@i_883,??_main+4
  1360   0010AC  C1CD  F080         	movff	main@i_883+1,??_main+5
  1361   0010B0  90D8               	bcf	status,0,c
  1362   0010B2  377F               	rlcf	(??_main+4)& (0+255),f,b
  1363   0010B4  3780               	rlcf	(??_main+5)& (0+255),f,b
  1364   0010B6  90D8               	bcf	status,0,c
  1365   0010B8  377F               	rlcf	(??_main+4)& (0+255),f,b
  1366   0010BA  3780               	rlcf	(??_main+5)& (0+255),f,b
  1367   0010BC  90D8               	bcf	status,0,c
  1368   0010BE  377F               	rlcf	(??_main+4)& (0+255),f,b
  1369   0010C0  3780               	rlcf	(??_main+5)& (0+255),f,b
  1370   0010C2  0E04               	movlw	4
  1371   0010C4  277F               	addwf	(??_main+4)& (0+255),f,b
  1372   0010C6  0E00               	movlw	0
  1373   0010C8  2380               	addwfc	(??_main+5)& (0+255),f,b
  1374   0010CA  0E70               	movlw	low main@color_calibrated
  1375   0010CC  257F               	addwf	(??_main+4)& (0+255),w,b
  1376   0010CE  6ED9               	movwf	fsr2l,c
  1377   0010D0  0E02               	movlw	high main@color_calibrated
  1378   0010D2  2180               	addwfc	(??_main+5)& (0+255),w,b
  1379   0010D4  6EDA               	movwf	fsr2h,c
  1380   0010D6  CFDE F06A          	movff	postinc2,?_sprintf+10
  1381   0010DA  CFDD F06B          	movff	postdec2,?_sprintf+11
  1382   0010DE  C1CC  F081         	movff	main@i_883,??_main+6
  1383   0010E2  C1CD  F082         	movff	main@i_883+1,??_main+7
  1384   0010E6  90D8               	bcf	status,0,c
  1385   0010E8  3781               	rlcf	(??_main+6)& (0+255),f,b
  1386   0010EA  3782               	rlcf	(??_main+7)& (0+255),f,b
  1387   0010EC  90D8               	bcf	status,0,c
  1388   0010EE  3781               	rlcf	(??_main+6)& (0+255),f,b
  1389   0010F0  3782               	rlcf	(??_main+7)& (0+255),f,b
  1390   0010F2  90D8               	bcf	status,0,c
  1391   0010F4  3781               	rlcf	(??_main+6)& (0+255),f,b
  1392   0010F6  3782               	rlcf	(??_main+7)& (0+255),f,b
  1393   0010F8  0E06               	movlw	6
  1394   0010FA  2781               	addwf	(??_main+6)& (0+255),f,b
  1395   0010FC  0E00               	movlw	0
  1396   0010FE  2382               	addwfc	(??_main+7)& (0+255),f,b
  1397   001100  0E70               	movlw	low main@color_calibrated
  1398   001102  2581               	addwf	(??_main+6)& (0+255),w,b
  1399   001104  6ED9               	movwf	fsr2l,c
  1400   001106  0E02               	movlw	high main@color_calibrated
  1401   001108  2182               	addwfc	(??_main+7)& (0+255),w,b
  1402   00110A  6EDA               	movwf	fsr2h,c
  1403   00110C  CFDE F06C          	movff	postinc2,?_sprintf+12
  1404   001110  CFDD F06D          	movff	postdec2,?_sprintf+13
  1405   001114  EC08  F01A         	call	_sprintf	;wreg free
  1406   001118                     
  1407                           ;../main.c: 85:             sendStringSerial4(readout3);
  1408   001118  0E83               	movlw	low main@readout3
  1409   00111A  6E02               	movwf	sendStringSerial4@string^0,c
  1410   00111C  0E00               	movlw	high main@readout3
  1411   00111E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1412   001120  ECA4  F01B         	call	_sendStringSerial4	;wreg free
  1413   001124                     
  1414                           ;../main.c: 86:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1415   001124  0E29               	movlw	41
  1416   001126  0100               	movlb	0	; () banked
  1417   001128  6F7C               	movwf	(??_main+1)& (0+255),b
  1418   00112A  0E96               	movlw	150
  1419   00112C  6F7B               	movwf	??_main& (0+255),b
  1420   00112E  0E7F               	movlw	127
  1421   001130                     u2287:
  1422   001130  2EE8               	decfsz	wreg,f,c
  1423   001132  D7FE               	bra	u2287
  1424   001134  2F7B               	decfsz	??_main& (0+255),f,b
  1425   001136  D7FC               	bra	u2287
  1426   001138  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1427   00113A  D7FA               	bra	u2287
  1428   00113C                     
  1429                           ;../main.c: 87:         }
  1430   00113C  0101               	movlb	1	; () banked
  1431   00113E  4BCC               	infsnz	main@i_883& (0+255),f,b
  1432   001140  2BCD               	incf	(main@i_883+1)& (0+255),f,b
  1433   001142                     
  1434                           ; BSR set to: 1
  1435   001142  BFCD               	btfsc	(main@i_883+1)& (0+255),7,b
  1436   001144  EFAD  F008         	goto	u2191
  1437   001148  51CD               	movf	(main@i_883+1)& (0+255),w,b
  1438   00114A  E109               	bnz	u2190
  1439   00114C  0E08               	movlw	8
  1440   00114E  5DCC               	subwf	main@i_883& (0+255),w,b
  1441   001150  A0D8               	btfss	status,0,c
  1442   001152  EFAD  F008         	goto	u2191
  1443   001156  EFAF  F008         	goto	u2190
  1444   00115A                     u2191:
  1445   00115A  EF0F  F008         	goto	l3921
  1446   00115E                     u2190:
  1447   00115E                     
  1448                           ; BSR set to: 1
  1449                           ;../main.c: 89:         lowerbound_calibrated = color_calibrated[8]*0.95;
  1450   00115E  0E33               	movlw	51
  1451   001160  6E13               	movwf	___flmul@a^0,c
  1452   001162  0E33               	movlw	51
  1453   001164  6E14               	movwf	(___flmul@a+1)^0,c
  1454   001166  0E73               	movlw	115
  1455   001168  6E15               	movwf	(___flmul@a+2)^0,c
  1456   00116A  0E3F               	movlw	63
  1457   00116C  6E16               	movwf	(___flmul@a+3)^0,c
  1458   00116E  EE22  F080         	lfsr	2,main@color_calibrated+16
  1459   001172  CFDE F001          	movff	postinc2,___xxtofl@val
  1460   001176  CFDD F002          	movff	postdec2,___xxtofl@val+1
  1461   00117A  0E00               	movlw	0
  1462   00117C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1463   00117E  0EFF               	movlw	-1
  1464   001180  6E03               	movwf	(___xxtofl@val+2)^0,c
  1465   001182  6E04               	movwf	(___xxtofl@val+3)^0,c
  1466   001184  0E01               	movlw	1
  1467   001186  ECA0  F011         	call	___xxtofl
  1468   00118A  C001  F00F         	movff	?___xxtofl,___flmul@b
  1469   00118E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1470   001192  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1471   001196  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1472   00119A  EC95  F00B         	call	___flmul	;wreg free
  1473   00119E  C00F  F028         	movff	?___flmul,___fltol@f1
  1474   0011A2  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1475   0011A6  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1476   0011AA  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1477   0011AE  EC31  F015         	call	___fltol	;wreg free
  1478   0011B2  C028  F0FB         	movff	?___fltol,main@lowerbound_calibrated
  1479   0011B6  C029  F0FC         	movff	?___fltol+1,main@lowerbound_calibrated+1
  1480   0011BA                     
  1481                           ;../main.c: 90:         upperbound_calibrated = color_calibrated[28];
  1482   0011BA  C2A8  F0FD         	movff	main@color_calibrated+56,main@upperbound_calibrated
  1483   0011BE  C2A9  F0FE         	movff	main@color_calibrated+57,main@upperbound_calibrated+1
  1484   0011C2                     l3935:
  1485   0011C2  0E01               	movlw	1
  1486   0011C4  A68E               	btfss	142,3,c	;volatile
  1487   0011C6  0E00               	movlw	0
  1488   0011C8  A48E               	btfss	142,2,c	;volatile
  1489   0011CA  0E00               	movlw	0
  1490   0011CC  B0E8               	btfsc	wreg,0,c
  1491   0011CE  EFEB  F008         	goto	u2201
  1492   0011D2  EFF0  F008         	goto	u2200
  1493   0011D6                     u2201:
  1494   0011D6  0100               	movlb	0	; () banked
  1495   0011D8  6B7B               	clrf	??_main& (0+255),b
  1496   0011DA  2B7B               	incf	??_main& (0+255),f,b
  1497   0011DC  EFF2  F008         	goto	u2208
  1498   0011E0                     u2200:
  1499   0011E0  0100               	movlb	0	; () banked
  1500   0011E2  6B7B               	clrf	??_main& (0+255),b
  1501   0011E4                     u2208:
  1502   0011E4  517B               	movf	??_main& (0+255),w,b
  1503   0011E6  A4D8               	btfss	status,2,c
  1504   0011E8  EFF8  F008         	goto	u2211
  1505   0011EC  EFFA  F008         	goto	u2210
  1506   0011F0                     u2211:
  1507   0011F0  EFE1  F008         	goto	l3935
  1508   0011F4                     u2210:
  1509   0011F4                     
  1510                           ; BSR set to: 0
  1511                           ;../main.c: 94:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
  1512   0011F4  B48E               	btfsc	142,2,c	;volatile
  1513   0011F6  EFFF  F008         	goto	u2221
  1514   0011FA  EF01  F009         	goto	u2220
  1515   0011FE                     u2221:
  1516   0011FE  EF04  F009         	goto	l227
  1517   001202                     u2220:
  1518   001202                     
  1519                           ; BSR set to: 0
  1520   001202  8E7C               	bsf	124,7,c	;volatile
  1521   001204  EF05  F009         	goto	l3939
  1522   001208                     l227:
  1523                           
  1524                           ; BSR set to: 0
  1525   001208  8680               	bsf	128,3,c	;volatile
  1526   00120A                     l3939:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;../main.c: 98:         char test0[100];;../main.c: 99:         sprintf(test0,"TESTING \
      +                          r\n");
  1530   00120A  0E00               	movlw	low main@test0
  1531   00120C  6F60               	movwf	sprintf@s& (0+255),b
  1532   00120E  0E01               	movlw	high main@test0
  1533   001210  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1534   001212  0E13               	movlw	low STR_2
  1535   001214  6F62               	movwf	sprintf@fmt& (0+255),b
  1536   001216  0E0E               	movlw	high STR_2
  1537   001218  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1538   00121A  EC08  F01A         	call	_sprintf	;wreg free
  1539   00121E                     
  1540                           ;../main.c: 100:         sendStringSerial4(test0);
  1541   00121E  0E00               	movlw	low main@test0
  1542   001220  6E02               	movwf	sendStringSerial4@string^0,c
  1543   001222  0E01               	movlw	high main@test0
  1544   001224  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1545   001226  ECA4  F01B         	call	_sendStringSerial4	;wreg free
  1546   00122A                     l3943:
  1547                           
  1548                           ;../main.c: 102:             color_read(&RGB_recorded);
  1549   00122A  0ED6               	movlw	low main@RGB_recorded
  1550   00122C  6E0C               	movwf	color_read@rgb^0,c
  1551   00122E  0E01               	movlw	high main@RGB_recorded
  1552   001230  6E0D               	movwf	(color_read@rgb+1)^0,c
  1553   001232  EC7B  F016         	call	_color_read	;wreg free
  1554   001236                     
  1555                           ;../main.c: 103:             _delay((unsigned long)((50)*(64000000/4000.0)));
  1556   001236  0E05               	movlw	5
  1557   001238  0100               	movlb	0	; () banked
  1558   00123A  6F7C               	movwf	(??_main+1)& (0+255),b
  1559   00123C  0E0F               	movlw	15
  1560   00123E  6F7B               	movwf	??_main& (0+255),b
  1561   001240  0EF1               	movlw	241
  1562   001242                     u2297:
  1563   001242  2EE8               	decfsz	wreg,f,c
  1564   001244  D7FE               	bra	u2297
  1565   001246  2F7B               	decfsz	??_main& (0+255),f,b
  1566   001248  D7FC               	bra	u2297
  1567   00124A  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1568   00124C  D7FA               	bra	u2297
  1569   00124E                     
  1570                           ;../main.c: 104:             color_name = color_processor_hard(&RGB_recorded,color_calib
      +                          rated);
  1571   00124E  0ED6               	movlw	low main@RGB_recorded
  1572   001250  6E01               	movwf	color_processor_hard@rgb^0,c
  1573   001252  0E01               	movlw	high main@RGB_recorded
  1574   001254  6E02               	movwf	(color_processor_hard@rgb+1)^0,c
  1575   001256  0E70               	movlw	low main@color_calibrated
  1576   001258  6E03               	movwf	color_processor_hard@calibrated^0,c
  1577   00125A  0E02               	movlw	high main@color_calibrated
  1578   00125C  6E04               	movwf	(color_processor_hard@calibrated+1)^0,c
  1579   00125E  EC5E  F01C         	call	_color_processor_hard	;wreg free
  1580   001262  C001  F1C8         	movff	?_color_processor_hard,main@color_name
  1581   001266  C002  F1C9         	movff	?_color_processor_hard+1,main@color_name+1
  1582   00126A                     
  1583                           ;../main.c: 105:             _delay((unsigned long)((50)*(64000000/4000.0)));
  1584   00126A  0E05               	movlw	5
  1585   00126C  0100               	movlb	0	; () banked
  1586   00126E  6F7C               	movwf	(??_main+1)& (0+255),b
  1587   001270  0E0F               	movlw	15
  1588   001272  6F7B               	movwf	??_main& (0+255),b
  1589   001274  0EF1               	movlw	241
  1590   001276                     u2307:
  1591   001276  2EE8               	decfsz	wreg,f,c
  1592   001278  D7FE               	bra	u2307
  1593   00127A  2F7B               	decfsz	??_main& (0+255),f,b
  1594   00127C  D7FC               	bra	u2307
  1595   00127E  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1596   001280  D7FA               	bra	u2307
  1597   001282                     
  1598                           ;../main.c: 106:             char test[100];;../main.c: 107:             sprintf(test,"%
      +                          d \r\n", color_name);
  1599   001282  0E64               	movlw	low main@test
  1600   001284  0100               	movlb	0	; () banked
  1601   001286  6F60               	movwf	sprintf@s& (0+255),b
  1602   001288  0E01               	movlw	high main@test
  1603   00128A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1604   00128C  0E0D               	movlw	low (STR_1+12)
  1605   00128E  6F62               	movwf	sprintf@fmt& (0+255),b
  1606   001290  0E0E               	movlw	high (STR_1+12)
  1607   001292  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1608   001294  C1C8  F064         	movff	main@color_name,?_sprintf+4
  1609   001298  C1C9  F065         	movff	main@color_name+1,?_sprintf+5
  1610   00129C  EC08  F01A         	call	_sprintf	;wreg free
  1611                           
  1612                           ;../main.c: 108:             sendStringSerial4(test);
  1613   0012A0  0E64               	movlw	low main@test
  1614   0012A2  6E02               	movwf	sendStringSerial4@string^0,c
  1615   0012A4  0E01               	movlw	high main@test
  1616   0012A6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1617   0012A8  ECA4  F01B         	call	_sendStringSerial4	;wreg free
  1618   0012AC  EF15  F009         	goto	l3943
  1619   0012B0  EF1F  F000         	goto	start
  1620   0012B4                     __end_of_main:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _sprintf *****************
  1624 ;; Defined at:
  1625 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1628 ;;		 -> main@test(100), main@test0(100), main@readout3(100), 
  1629 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1630 ;;		 -> STR_3(6), STR_2(11), STR_1(18), 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1633 ;;  ap              2   14[BANK0 ] PTR void [1]
  1634 ;;		 -> ?_sprintf(2), 
  1635 ;;  ret             2    0        int 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2    0[BANK0 ] int 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1645 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1648 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1649 ;;Total ram usage:       27 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 8
  1652 ;; This function calls:
  1653 ;;		_vfprintf
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text1
  1660   003410                     __ptext1:
  1661                           	callstack 0
  1662   003410                     _sprintf:
  1663                           	callstack 22
  1664   003410  0E64               	movlw	low (?_sprintf+4)
  1665   003412  0100               	movlb	0	; () banked
  1666   003414  6F6E               	movwf	sprintf@ap& (0+255),b
  1667   003416  0E00               	movlw	high (?_sprintf+4)
  1668   003418  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1669   00341A  C060  F070         	movff	sprintf@s,sprintf@f
  1670   00341E  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  1671   003422                     
  1672                           ; BSR set to: 0
  1673   003422  0E00               	movlw	0
  1674   003424  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1675   003426  0E00               	movlw	0
  1676   003428  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1677   00342A                     
  1678                           ; BSR set to: 0
  1679   00342A  0E00               	movlw	0
  1680   00342C  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1681   00342E  0E00               	movlw	0
  1682   003430  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1683   003432                     
  1684                           ; BSR set to: 0
  1685   003432  0E70               	movlw	low sprintf@f
  1686   003434  6E51               	movwf	vfprintf@fp^0,c
  1687   003436  0E00               	movlw	high sprintf@f
  1688   003438  6E52               	movwf	(vfprintf@fp+1)^0,c
  1689   00343A  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1690   00343E  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1691   003442  0E6E               	movlw	low sprintf@ap
  1692   003444  6E55               	movwf	vfprintf@ap^0,c
  1693   003446  0E00               	movlw	high sprintf@ap
  1694   003448  6E56               	movwf	(vfprintf@ap+1)^0,c
  1695   00344A  EC31  F01A         	call	_vfprintf	;wreg free
  1696   00344E  0100               	movlb	0	; () banked
  1697   003450  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1698   003452  2560               	addwf	sprintf@s& (0+255),w,b
  1699   003454  6ED9               	movwf	fsr2l,c
  1700   003456  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1701   003458  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1702   00345A  6EDA               	movwf	fsr2h,c
  1703   00345C  0E00               	movlw	0
  1704   00345E  6EDF               	movwf	indf2,c
  1705   003460                     
  1706                           ; BSR set to: 0
  1707   003460  0012               	return		;funcret
  1708   003462                     __end_of_sprintf:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _vfprintf *****************
  1712 ;; Defined at:
  1713 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1716 ;;		 -> sprintf@f(11), 
  1717 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1718 ;;		 -> STR_3(6), STR_2(11), STR_1(18), 
  1719 ;;  ap              2   84[COMRAM] PTR PTR void 
  1720 ;;		 -> sprintf@ap(2), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1723 ;;		 -> STR_3(6), STR_2(11), STR_1(18), 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  2   80[COMRAM] int 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1733 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1737 ;;Total ram usage:        8 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 7
  1740 ;; This function calls:
  1741 ;;		_vfpfcnvrt
  1742 ;; This function is called by:
  1743 ;;		_sprintf
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text2
  1748   003462                     __ptext2:
  1749                           	callstack 0
  1750   003462                     _vfprintf:
  1751                           	callstack 22
  1752   003462                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1754   003462  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1755   003466  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1758   00346A  EF45  F01A         	goto	l3253
  1759   00346E                     l3251:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1762   00346E  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1763   003472  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1764   003476  0E57               	movlw	low vfprintf@cfmt
  1765   003478  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1766   00347A  0E00               	movlw	high vfprintf@cfmt
  1767   00347C  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1768   00347E  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1769   003482  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1770   003486  ECF0  F013         	call	_vfpfcnvrt	;wreg free
  1771   00348A                     l3253:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1774   00348A  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1775   00348E  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1776   003492                     	if	0	;tblptru may be non-zero
  1777   003492                     	endif
  1778   003492                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1779   003492  0E00               	movlw	low (__mediumconst shr (0+16))
  1780   003494  6EF8               	movwf	tblptru,c
  1781   003496                     	endif
  1782   003496  0008               	tblrd		*
  1783   003498  50F5               	movf	tablat,w,c
  1784   00349A  0900               	iorlw	0
  1785   00349C  A4D8               	btfss	status,2,c
  1786   00349E  EF53  F01A         	goto	u1721
  1787   0034A2  EF55  F01A         	goto	u1720
  1788   0034A6                     u1721:
  1789   0034A6  EF37  F01A         	goto	l3251
  1790   0034AA                     u1720:
  1791   0034AA                     
  1792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1793   0034AA  0E00               	movlw	0
  1794   0034AC  6E52               	movwf	(?_vfprintf+1)^0,c
  1795   0034AE  0E00               	movlw	0
  1796   0034B0  6E51               	movwf	?_vfprintf^0,c
  1797   0034B2  0012               	return		;funcret
  1798   0034B4                     __end_of_vfprintf:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _vfpfcnvrt *****************
  1802 ;; Defined at:
  1803 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1806 ;;		 -> sprintf@f(11), 
  1807 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1808 ;;		 -> vfprintf@cfmt(2), 
  1809 ;;  ap              2   66[COMRAM] PTR PTR void 
  1810 ;;		 -> sprintf@ap(2), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  convarg         8   70[COMRAM] struct .
  1813 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1814 ;;		 -> STR_3(6), STR_2(11), STR_1(18), 
  1815 ;;  i               2    0        int 
  1816 ;;  done            2    0        int 
  1817 ;;  c               1    0        unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1827 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;Total ram usage:       18 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 6
  1834 ;; This function calls:
  1835 ;;		_dtoa
  1836 ;;		_fputc
  1837 ;; This function is called by:
  1838 ;;		_vfprintf
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text3
  1843   0027E0                     __ptext3:
  1844                           	callstack 0
  1845   0027E0                     _vfpfcnvrt:
  1846                           	callstack 22
  1847   0027E0                     
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1849   0027E0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850   0027E4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851   0027E8  CFDE FFF6          	movff	postinc2,tblptrl
  1852   0027EC  CFDD FFF7          	movff	postdec2,tblptrh
  1853   0027F0                     	if	0	;tblptru may be non-zero
  1854   0027F0                     	endif
  1855   0027F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1856   0027F0  0E00               	movlw	low (__mediumconst shr (0+16))
  1857   0027F2  6EF8               	movwf	tblptru,c
  1858   0027F4                     	endif
  1859   0027F4  0008               	tblrd		*
  1860   0027F6  50F5               	movf	tablat,w,c
  1861   0027F8  0A25               	xorlw	37
  1862   0027FA  A4D8               	btfss	status,2,c
  1863   0027FC  EF02  F014         	goto	u1591
  1864   002800  EF04  F014         	goto	u1590
  1865   002804                     u1591:
  1866   002804  EF88  F014         	goto	l2995
  1867   002808                     u1590:
  1868   002808                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1870   002808  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871   00280C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872   002810  2ADE               	incf	postinc2,f,c
  1873   002812  0E00               	movlw	0
  1874   002814  22DD               	addwfc	postdec2,f,c
  1875   002816                     
  1876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1877   002816  0E00               	movlw	0
  1878   002818  0101               	movlb	1	; () banked
  1879   00281A  6FF1               	movwf	(_width+1)& (0+255),b
  1880   00281C  0E00               	movlw	0
  1881   00281E  6FF0               	movwf	_width& (0+255),b
  1882   002820  C1F0  F059         	movff	_width,_flags
  1883   002824                     
  1884                           ; BSR set to: 1
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1886   002824  69F2               	setf	_prec& (0+255),b
  1887   002826  69F3               	setf	(_prec+1)& (0+255),b
  1888   002828                     
  1889                           ; BSR set to: 1
  1890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1891   002828  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1892   00282C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1893   002830  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1894   002834  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1895   002838                     
  1896                           ; BSR set to: 1
  1897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1898   002838  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1899   00283C  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1900   002840                     	if	0	;tblptru may be non-zero
  1901   002840                     	endif
  1902   002840                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1903   002840  0E00               	movlw	low (__mediumconst shr (0+16))
  1904   002842  6EF8               	movwf	tblptru,c
  1905   002844                     	endif
  1906   002844  0008               	tblrd		*
  1907   002846  50F5               	movf	tablat,w,c
  1908   002848  0A64               	xorlw	100
  1909   00284A  B4D8               	btfsc	status,2,c
  1910   00284C  EF2A  F014         	goto	u1601
  1911   002850  EF2C  F014         	goto	u1600
  1912   002854                     u1601:
  1913   002854  EF3C  F014         	goto	l2985
  1914   002858                     u1600:
  1915   002858                     
  1916                           ; BSR set to: 1
  1917   002858  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1918   00285C  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1919   002860                     	if	0	;tblptru may be non-zero
  1920   002860                     	endif
  1921   002860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1922   002860  0E00               	movlw	low (__mediumconst shr (0+16))
  1923   002862  6EF8               	movwf	tblptru,c
  1924   002864                     	endif
  1925   002864  0008               	tblrd		*
  1926   002866  50F5               	movf	tablat,w,c
  1927   002868  0A69               	xorlw	105
  1928   00286A  A4D8               	btfss	status,2,c
  1929   00286C  EF3A  F014         	goto	u1611
  1930   002870  EF3C  F014         	goto	u1610
  1931   002874                     u1611:
  1932   002874  EF7F  F014         	goto	l2991
  1933   002878                     u1610:
  1934   002878                     l2985:
  1935                           
  1936                           ; BSR set to: 1
  1937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1938   002878  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1939   00287C  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1940   002880  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1941   002884  0E02               	movlw	2
  1942   002886  26DE               	addwf	postinc2,f,c
  1943   002888  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1944   00288C  0E00               	movlw	0
  1945   00288E  22DD               	addwfc	postdec2,f,c
  1946   002890  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1947   002894  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1948   002898  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1949   00289C  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1950   0028A0  0E00               	movlw	0
  1951   0028A2  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1952   0028A4  0EFF               	movlw	-1
  1953   0028A6  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1954   0028A8  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1955   0028AA  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1956   0028AC  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1957   0028AE  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1958   0028B0  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1961   0028B2  0E01               	movlw	1
  1962   0028B4  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1963   0028B6  6E45               	movwf	??_vfpfcnvrt^0,c
  1964   0028B8  0E00               	movlw	0
  1965   0028BA  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1966   0028BC  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1967   0028BE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1968   0028C2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1969   0028C6  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1970   0028CA  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1971   0028CE                     
  1972                           ; BSR set to: 1
  1973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1974   0028CE  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1975   0028D2  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1976   0028D6  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1977   0028DA  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1978   0028DE  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1979   0028E2  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1980   0028E6  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1981   0028EA  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1982   0028EE  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1983   0028F2  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1984   0028F6  EC77  F00F         	call	_dtoa	;wreg free
  1985   0028FA  EF9E  F014         	goto	l1215
  1986   0028FE                     l2991:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1989   0028FE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1990   002902  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1991   002906  2ADE               	incf	postinc2,f,c
  1992   002908  0E00               	movlw	0
  1993   00290A  22DD               	addwfc	postdec2,f,c
  1994   00290C  EF9E  F014         	goto	l1215
  1995   002910                     l2995:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1998   002910  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1999   002914  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2000   002918  CFDE FFF6          	movff	postinc2,tblptrl
  2001   00291C  CFDD FFF7          	movff	postdec2,tblptrh
  2002   002920                     	if	0	;tblptru may be non-zero
  2003   002920                     	endif
  2004   002920                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2005   002920  0E00               	movlw	low (__mediumconst shr (0+16))
  2006   002922  6EF8               	movwf	tblptru,c
  2007   002924                     	endif
  2008   002924  0008               	tblrd		*
  2009   002926  50F5               	movf	tablat,w,c
  2010   002928  6E01               	movwf	fputc@c^0,c
  2011   00292A  6A02               	clrf	(fputc@c+1)^0,c
  2012   00292C  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2013   002930  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2014   002934  ECB4  F015         	call	_fputc	;wreg free
  2015   002938  EF7F  F014         	goto	l2991
  2016   00293C                     l1215:
  2017   00293C  0012               	return		;funcret
  2018   00293E                     __end_of_vfpfcnvrt:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _dtoa *****************
  2022 ;; Defined at:
  2023 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2026 ;;		 -> sprintf@f(11), 
  2027 ;;  d               8   29[COMRAM] long long 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  n               8   51[COMRAM] long long 
  2030 ;;  i               2   59[COMRAM] int 
  2031 ;;  w               2   49[COMRAM] int 
  2032 ;;  p               2   47[COMRAM] int 
  2033 ;;  s               1   61[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2043 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2044 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2046 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;Total ram usage:       35 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 5
  2050 ;; This function calls:
  2051 ;;		___aodiv
  2052 ;;		___aomod
  2053 ;;		_abs
  2054 ;;		_pad
  2055 ;; This function is called by:
  2056 ;;		_vfpfcnvrt
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text4
  2061   001EEE                     __ptext4:
  2062                           	callstack 0
  2063   001EEE                     _dtoa:
  2064                           	callstack 22
  2065   001EEE                     
  2066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2067   001EEE  C01E  F034         	movff	dtoa@d,dtoa@n
  2068   001EF2  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2069   001EF6  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2070   001EFA  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2071   001EFE  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2072   001F02  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2073   001F06  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2074   001F0A  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2075   001F0E                     
  2076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2077   001F0E  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2078   001F10  EF8C  F00F         	goto	u1431
  2079   001F14  EF8F  F00F         	goto	u1430
  2080   001F18                     u1431:
  2081   001F18  0E01               	movlw	1
  2082   001F1A  EF90  F00F         	goto	u1440
  2083   001F1E                     u1430:
  2084   001F1E  0E00               	movlw	0
  2085   001F20                     u1440:
  2086   001F20  6E3E               	movwf	dtoa@s^0,c
  2087   001F22                     
  2088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2089   001F22  503E               	movf	dtoa@s^0,w,c
  2090   001F24  B4D8               	btfsc	status,2,c
  2091   001F26  EF97  F00F         	goto	u1451
  2092   001F2A  EF99  F00F         	goto	u1450
  2093   001F2E                     u1451:
  2094   001F2E  EFA9  F00F         	goto	l2883
  2095   001F32                     u1450:
  2096   001F32                     
  2097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2098   001F32  1E3B               	comf	(dtoa@n+7)^0,f,c
  2099   001F34  1E3A               	comf	(dtoa@n+6)^0,f,c
  2100   001F36  1E39               	comf	(dtoa@n+5)^0,f,c
  2101   001F38  1E38               	comf	(dtoa@n+4)^0,f,c
  2102   001F3A  1E37               	comf	(dtoa@n+3)^0,f,c
  2103   001F3C  1E36               	comf	(dtoa@n+2)^0,f,c
  2104   001F3E  1E35               	comf	(dtoa@n+1)^0,f,c
  2105   001F40  6C34               	negf	dtoa@n^0,c
  2106   001F42  0E00               	movlw	0
  2107   001F44  2235               	addwfc	(dtoa@n+1)^0,f,c
  2108   001F46  2236               	addwfc	(dtoa@n+2)^0,f,c
  2109   001F48  2237               	addwfc	(dtoa@n+3)^0,f,c
  2110   001F4A  2238               	addwfc	(dtoa@n+4)^0,f,c
  2111   001F4C  2239               	addwfc	(dtoa@n+5)^0,f,c
  2112   001F4E  223A               	addwfc	(dtoa@n+6)^0,f,c
  2113   001F50  223B               	addwfc	(dtoa@n+7)^0,f,c
  2114   001F52                     l2883:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2117   001F52  0101               	movlb	1	; () banked
  2118   001F54  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  2119   001F56  EFB7  F00F         	goto	u1460
  2120   001F5A  51F3               	movf	(_prec+1)& (0+255),w,b
  2121   001F5C  E106               	bnz	u1461
  2122   001F5E  05F2               	decf	_prec& (0+255),w,b
  2123   001F60  B0D8               	btfsc	status,0,c
  2124   001F62  EFB5  F00F         	goto	u1461
  2125   001F66  EFB7  F00F         	goto	u1460
  2126   001F6A                     u1461:
  2127   001F6A  EFBD  F00F         	goto	l1194
  2128   001F6E                     u1460:
  2129   001F6E                     
  2130                           ; BSR set to: 1
  2131   001F6E  0E00               	movlw	0
  2132   001F70  6E31               	movwf	(dtoa@p+1)^0,c
  2133   001F72  0E01               	movlw	1
  2134   001F74  6E30               	movwf	dtoa@p^0,c
  2135   001F76  EFC1  F00F         	goto	l1196
  2136   001F7A                     l1194:
  2137                           
  2138                           ; BSR set to: 1
  2139   001F7A  C1F2  F030         	movff	_prec,dtoa@p
  2140   001F7E  C1F3  F031         	movff	_prec+1,dtoa@p+1
  2141   001F82                     l1196:
  2142                           
  2143                           ; BSR set to: 1
  2144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2145   001F82  C1F0  F032         	movff	_width,dtoa@w
  2146   001F86  C1F1  F033         	movff	_width+1,dtoa@w+1
  2147   001F8A                     
  2148                           ; BSR set to: 1
  2149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2150   001F8A  503E               	movf	dtoa@s^0,w,c
  2151   001F8C  B4D8               	btfsc	status,2,c
  2152   001F8E  EFCB  F00F         	goto	u1471
  2153   001F92  EFCD  F00F         	goto	u1470
  2154   001F96                     u1471:
  2155   001F96  EFE4  F00F         	goto	l1197
  2156   001F9A                     u1470:
  2157   001F9A                     
  2158                           ; BSR set to: 1
  2159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2160   001F9A  0632               	decf	dtoa@w^0,f,c
  2161   001F9C  A0D8               	btfss	status,0,c
  2162   001F9E  0633               	decf	(dtoa@w+1)^0,f,c
  2163   001FA0                     
  2164                           ; BSR set to: 1
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2166   001FA0  503E               	movf	dtoa@s^0,w,c
  2167   001FA2  A4D8               	btfss	status,2,c
  2168   001FA4  EFD6  F00F         	goto	u1481
  2169   001FA8  EFD8  F00F         	goto	u1480
  2170   001FAC                     u1481:
  2171   001FAC  EFDE  F00F         	goto	l2895
  2172   001FB0                     u1480:
  2173   001FB0                     
  2174                           ; BSR set to: 1
  2175   001FB0  0E00               	movlw	0
  2176   001FB2  6E2F               	movwf	(_dtoa$2484+1)^0,c
  2177   001FB4  0E2B               	movlw	43
  2178   001FB6  6E2E               	movwf	_dtoa$2484^0,c
  2179   001FB8  EFE2  F00F         	goto	l2897
  2180   001FBC                     l2895:
  2181                           
  2182                           ; BSR set to: 1
  2183   001FBC  0E00               	movlw	0
  2184   001FBE  6E2F               	movwf	(_dtoa$2484+1)^0,c
  2185   001FC0  0E2D               	movlw	45
  2186   001FC2  6E2E               	movwf	_dtoa$2484^0,c
  2187   001FC4                     l2897:
  2188                           
  2189                           ; BSR set to: 1
  2190   001FC4  C02E  F03E         	movff	_dtoa$2484,dtoa@s
  2191   001FC8                     l1197:
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2195   001FC8  0E00               	movlw	0
  2196   001FCA  6E3D               	movwf	(dtoa@i+1)^0,c
  2197   001FCC  0E1F               	movlw	31
  2198   001FCE  6E3C               	movwf	dtoa@i^0,c
  2199   001FD0                     
  2200                           ; BSR set to: 1
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2202   001FD0  0E00               	movlw	0
  2203   001FD2  0102               	movlb	2	; () banked
  2204   001FD4  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2207   001FD6  EF69  F010         	goto	l2911
  2208   001FDA                     l2901:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2211   001FDA  063C               	decf	dtoa@i^0,f,c
  2212   001FDC  A0D8               	btfss	status,0,c
  2213   001FDE  063D               	decf	(dtoa@i+1)^0,f,c
  2214   001FE0                     
  2215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2216   001FE0  0E50               	movlw	low _dbuf
  2217   001FE2  243C               	addwf	dtoa@i^0,w,c
  2218   001FE4  6ED9               	movwf	fsr2l,c
  2219   001FE6  0E02               	movlw	high _dbuf
  2220   001FE8  203D               	addwfc	(dtoa@i+1)^0,w,c
  2221   001FEA  6EDA               	movwf	fsr2h,c
  2222   001FEC  C034  F001         	movff	dtoa@n,___aomod@dividend
  2223   001FF0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2224   001FF4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2225   001FF8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2226   001FFC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2227   002000  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2228   002004  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2229   002008  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2230   00200C  0E0A               	movlw	10
  2231   00200E  6E09               	movwf	___aomod@divisor^0,c
  2232   002010  0E00               	movlw	0
  2233   002012  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2234   002014  0E00               	movlw	0
  2235   002016  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2236   002018  0E00               	movlw	0
  2237   00201A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2238   00201C  0E00               	movlw	0
  2239   00201E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2240   002020  0E00               	movlw	0
  2241   002022  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2242   002024  0E00               	movlw	0
  2243   002026  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2244   002028  0E00               	movlw	0
  2245   00202A  6E10               	movwf	(___aomod@divisor+7)^0,c
  2246   00202C  EC3E  F013         	call	___aomod	;wreg free
  2247   002030  C001  F026         	movff	?___aomod,??_dtoa
  2248   002034  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2249   002038  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2250   00203C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2251   002040  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2252   002044  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2253   002048  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2254   00204C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2255   002050  C026  F013         	movff	??_dtoa,abs@a
  2256   002054  C027  F014         	movff	??_dtoa+1,abs@a+1
  2257   002058  EC84  F01B         	call	_abs	;wreg free
  2258   00205C  5013               	movf	?_abs^0,w,c
  2259   00205E  0F30               	addlw	48
  2260   002060  6EDF               	movwf	indf2,c
  2261   002062                     
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2263   002062  0630               	decf	dtoa@p^0,f,c
  2264   002064  A0D8               	btfss	status,0,c
  2265   002066  0631               	decf	(dtoa@p+1)^0,f,c
  2266   002068                     
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2268   002068  0632               	decf	dtoa@w^0,f,c
  2269   00206A  A0D8               	btfss	status,0,c
  2270   00206C  0633               	decf	(dtoa@w+1)^0,f,c
  2271   00206E                     
  2272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2273   00206E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2274   002072  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2275   002076  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2276   00207A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2277   00207E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2278   002082  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2279   002086  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2280   00208A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2281   00208E  0E0A               	movlw	10
  2282   002090  6E09               	movwf	___aodiv@divisor^0,c
  2283   002092  0E00               	movlw	0
  2284   002094  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2285   002096  0E00               	movlw	0
  2286   002098  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2287   00209A  0E00               	movlw	0
  2288   00209C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2289   00209E  0E00               	movlw	0
  2290   0020A0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2291   0020A2  0E00               	movlw	0
  2292   0020A4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2293   0020A6  0E00               	movlw	0
  2294   0020A8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2295   0020AA  0E00               	movlw	0
  2296   0020AC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2297   0020AE  EC7A  F012         	call	___aodiv	;wreg free
  2298   0020B2  C001  F034         	movff	?___aodiv,dtoa@n
  2299   0020B6  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2300   0020BA  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2301   0020BE  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2302   0020C2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2303   0020C6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2304   0020CA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2305   0020CE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2306   0020D2                     l2911:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2309   0020D2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2310   0020D4  EF74  F010         	goto	u1491
  2311   0020D8  503D               	movf	(dtoa@i+1)^0,w,c
  2312   0020DA  E108               	bnz	u1490
  2313   0020DC  043C               	decf	dtoa@i^0,w,c
  2314   0020DE  A0D8               	btfss	status,0,c
  2315   0020E0  EF74  F010         	goto	u1491
  2316   0020E4  EF76  F010         	goto	u1490
  2317   0020E8                     u1491:
  2318   0020E8  EF92  F010         	goto	l2917
  2319   0020EC                     u1490:
  2320   0020EC  5034               	movf	dtoa@n^0,w,c
  2321   0020EE  1035               	iorwf	(dtoa@n+1)^0,w,c
  2322   0020F0  1036               	iorwf	(dtoa@n+2)^0,w,c
  2323   0020F2  1037               	iorwf	(dtoa@n+3)^0,w,c
  2324   0020F4  1038               	iorwf	(dtoa@n+4)^0,w,c
  2325   0020F6  1039               	iorwf	(dtoa@n+5)^0,w,c
  2326   0020F8  103A               	iorwf	(dtoa@n+6)^0,w,c
  2327   0020FA  103B               	iorwf	(dtoa@n+7)^0,w,c
  2328   0020FC  A4D8               	btfss	status,2,c
  2329   0020FE  EF83  F010         	goto	u1501
  2330   002102  EF85  F010         	goto	u1500
  2331   002106                     u1501:
  2332   002106  EFED  F00F         	goto	l2901
  2333   00210A                     u1500:
  2334   00210A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2335   00210C  EF92  F010         	goto	u1510
  2336   002110  5031               	movf	(dtoa@p+1)^0,w,c
  2337   002112  E106               	bnz	u1511
  2338   002114  0430               	decf	dtoa@p^0,w,c
  2339   002116  B0D8               	btfsc	status,0,c
  2340   002118  EF90  F010         	goto	u1511
  2341   00211C  EF92  F010         	goto	u1510
  2342   002120                     u1511:
  2343   002120  EFED  F00F         	goto	l2901
  2344   002124                     u1510:
  2345   002124                     l2917:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2348   002124  503E               	movf	dtoa@s^0,w,c
  2349   002126  B4D8               	btfsc	status,2,c
  2350   002128  EF98  F010         	goto	u1521
  2351   00212C  EF9A  F010         	goto	u1520
  2352   002130                     u1521:
  2353   002130  EFA5  F010         	goto	l2923
  2354   002134                     u1520:
  2355   002134                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2357   002134  063C               	decf	dtoa@i^0,f,c
  2358   002136  A0D8               	btfss	status,0,c
  2359   002138  063D               	decf	(dtoa@i+1)^0,f,c
  2360   00213A                     
  2361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2362   00213A  0E50               	movlw	low _dbuf
  2363   00213C  243C               	addwf	dtoa@i^0,w,c
  2364   00213E  6ED9               	movwf	fsr2l,c
  2365   002140  0E02               	movlw	high _dbuf
  2366   002142  203D               	addwfc	(dtoa@i+1)^0,w,c
  2367   002144  6EDA               	movwf	fsr2h,c
  2368   002146  C03E  FFDF         	movff	dtoa@s,indf2
  2369   00214A                     l2923:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2372   00214A  C01C  F011         	movff	dtoa@fp,pad@fp
  2373   00214E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2374   002152  0E50               	movlw	low _dbuf
  2375   002154  243C               	addwf	dtoa@i^0,w,c
  2376   002156  6E13               	movwf	pad@buf^0,c
  2377   002158  0E02               	movlw	high _dbuf
  2378   00215A  203D               	addwfc	(dtoa@i+1)^0,w,c
  2379   00215C  6E14               	movwf	(pad@buf+1)^0,c
  2380   00215E  C032  F015         	movff	dtoa@w,pad@p
  2381   002162  C033  F016         	movff	dtoa@w+1,pad@p+1
  2382   002166  EC9E  F019         	call	_pad	;wreg free
  2383   00216A  0012               	return		;funcret
  2384   00216C                     __end_of_dtoa:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _pad *****************
  2388 ;; Defined at:
  2389 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2392 ;;		 -> sprintf@f(11), 
  2393 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2394 ;;		 -> dbuf(32), 
  2395 ;;  p               2   20[COMRAM] int 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  w               2   25[COMRAM] int 
  2398 ;;  i               2   23[COMRAM] int 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2408 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;Total ram usage:       11 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 4
  2415 ;; This function calls:
  2416 ;;		_fputc
  2417 ;;		_fputs
  2418 ;; This function is called by:
  2419 ;;		_dtoa
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text5
  2424   00333C                     __ptext5:
  2425                           	callstack 0
  2426   00333C                     _pad:
  2427                           	callstack 22
  2428   00333C                     
  2429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2430   00333C  BE16               	btfsc	(pad@p+1)^0,7,c
  2431   00333E  EFA3  F019         	goto	u1321
  2432   003342  EFA5  F019         	goto	u1320
  2433   003346                     u1321:
  2434   003346  EFAB  F019         	goto	l2807
  2435   00334A                     u1320:
  2436   00334A  C015  F01A         	movff	pad@p,pad@w
  2437   00334E  C016  F01B         	movff	pad@p+1,pad@w+1
  2438   003352  EFAF  F019         	goto	l1185
  2439   003356                     l2807:
  2440   003356  0E00               	movlw	0
  2441   003358  6E1B               	movwf	(pad@w+1)^0,c
  2442   00335A  0E00               	movlw	0
  2443   00335C  6E1A               	movwf	pad@w^0,c
  2444   00335E                     l1185:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2447   00335E  0E00               	movlw	0
  2448   003360  6E19               	movwf	(pad@i+1)^0,c
  2449   003362  0E00               	movlw	0
  2450   003364  6E18               	movwf	pad@i^0,c
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2453   003366  EFC1  F019         	goto	l2813
  2454   00336A                     l2809:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2457   00336A  0E00               	movlw	0
  2458   00336C  6E02               	movwf	(fputc@c+1)^0,c
  2459   00336E  0E20               	movlw	32
  2460   003370  6E01               	movwf	fputc@c^0,c
  2461   003372  C011  F003         	movff	pad@fp,fputc@fp
  2462   003376  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2463   00337A  ECB4  F015         	call	_fputc	;wreg free
  2464   00337E                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2466   00337E  4A18               	infsnz	pad@i^0,f,c
  2467   003380  2A19               	incf	(pad@i+1)^0,f,c
  2468   003382                     l2813:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2471   003382  501A               	movf	pad@w^0,w,c
  2472   003384  5C18               	subwf	pad@i^0,w,c
  2473   003386  5019               	movf	(pad@i+1)^0,w,c
  2474   003388  0A80               	xorlw	128
  2475   00338A  6E17               	movwf	??_pad^0,c
  2476   00338C  501B               	movf	(pad@w+1)^0,w,c
  2477   00338E  0A80               	xorlw	128
  2478   003390  5817               	subwfb	??_pad^0,w,c
  2479   003392  A0D8               	btfss	status,0,c
  2480   003394  EFCE  F019         	goto	u1331
  2481   003398  EFD0  F019         	goto	u1330
  2482   00339C                     u1331:
  2483   00339C  EFB5  F019         	goto	l2809
  2484   0033A0                     u1330:
  2485   0033A0                     
  2486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2487   0033A0  C013  F00A         	movff	pad@buf,fputs@s
  2488   0033A4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2489   0033A8  C011  F00C         	movff	pad@fp,fputs@fp
  2490   0033AC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2491   0033B0  EC20  F01B         	call	_fputs	;wreg free
  2492   0033B4  0012               	return		;funcret
  2493   0033B6                     __end_of_pad:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _fputs *****************
  2497 ;; Defined at:
  2498 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2501 ;;		 -> dbuf(32), 
  2502 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2503 ;;		 -> sprintf@f(11), 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  i               2   14[COMRAM] int 
  2506 ;;  c               1   13[COMRAM] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  2    9[COMRAM] int 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;Total ram usage:        7 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 3
  2523 ;; This function calls:
  2524 ;;		_fputc
  2525 ;; This function is called by:
  2526 ;;		_pad
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text6
  2531   003640                     __ptext6:
  2532                           	callstack 0
  2533   003640                     _fputs:
  2534                           	callstack 22
  2535   003640  0E00               	movlw	0
  2536   003642  6E10               	movwf	(fputs@i+1)^0,c
  2537   003644  0E00               	movlw	0
  2538   003646  6E0F               	movwf	fputs@i^0,c
  2539   003648  EF31  F01B         	goto	l2721
  2540   00364C                     l2717:
  2541   00364C  C00E  F001         	movff	fputs@c,fputc@c
  2542   003650  6A02               	clrf	(fputc@c+1)^0,c
  2543   003652  C00C  F003         	movff	fputs@fp,fputc@fp
  2544   003656  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2545   00365A  ECB4  F015         	call	_fputc	;wreg free
  2546   00365E  4A0F               	infsnz	fputs@i^0,f,c
  2547   003660  2A10               	incf	(fputs@i+1)^0,f,c
  2548   003662                     l2721:
  2549   003662  500F               	movf	fputs@i^0,w,c
  2550   003664  240A               	addwf	fputs@s^0,w,c
  2551   003666  6ED9               	movwf	fsr2l,c
  2552   003668  5010               	movf	(fputs@i+1)^0,w,c
  2553   00366A  200B               	addwfc	(fputs@s+1)^0,w,c
  2554   00366C  6EDA               	movwf	fsr2h,c
  2555   00366E  50DF               	movf	indf2,w,c
  2556   003670  6E0E               	movwf	fputs@c^0,c
  2557   003672  500E               	movf	fputs@c^0,w,c
  2558   003674  A4D8               	btfss	status,2,c
  2559   003676  EF3F  F01B         	goto	u1181
  2560   00367A  EF41  F01B         	goto	u1180
  2561   00367E                     u1181:
  2562   00367E  EF26  F01B         	goto	l2717
  2563   003682                     u1180:
  2564   003682  0012               	return		;funcret
  2565   003684                     __end_of_fputs:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _fputc *****************
  2569 ;; Defined at:
  2570 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  c               2    0[COMRAM] int 
  2573 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2574 ;;		 -> sprintf@f(11), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2    0[COMRAM] int 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;Total ram usage:        9 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 2
  2593 ;; This function calls:
  2594 ;;		_putch
  2595 ;; This function is called by:
  2596 ;;		_pad
  2597 ;;		_vfpfcnvrt
  2598 ;;		_fputs
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text7
  2603   002B68                     __ptext7:
  2604                           	callstack 0
  2605   002B68                     _fputc:
  2606                           	callstack 25
  2607   002B68  5003               	movf	fputc@fp^0,w,c
  2608   002B6A  1004               	iorwf	(fputc@fp+1)^0,w,c
  2609   002B6C  B4D8               	btfsc	status,2,c
  2610   002B6E  EFBB  F015         	goto	u1141
  2611   002B72  EFBD  F015         	goto	u1140
  2612   002B76                     u1141:
  2613   002B76  EFC6  F015         	goto	l2705
  2614   002B7A                     u1140:
  2615   002B7A  5003               	movf	fputc@fp^0,w,c
  2616   002B7C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2617   002B7E  A4D8               	btfss	status,2,c
  2618   002B80  EFC4  F015         	goto	u1151
  2619   002B84  EFC6  F015         	goto	u1150
  2620   002B88                     u1151:
  2621   002B88  EFCB  F015         	goto	l2707
  2622   002B8C                     u1150:
  2623   002B8C                     l2705:
  2624   002B8C  5001               	movf	fputc@c^0,w,c
  2625   002B8E  EC5D  F01C         	call	_putch
  2626   002B92  EF18  F016         	goto	l1240
  2627   002B96                     l2707:
  2628   002B96  EE20 F009          	lfsr	2,9
  2629   002B9A  5003               	movf	fputc@fp^0,w,c
  2630   002B9C  26D9               	addwf	fsr2l,f,c
  2631   002B9E  5004               	movf	(fputc@fp+1)^0,w,c
  2632   002BA0  22DA               	addwfc	fsr2h,f,c
  2633   002BA2  50DE               	movf	postinc2,w,c
  2634   002BA4  10DE               	iorwf	postinc2,w,c
  2635   002BA6  B4D8               	btfsc	status,2,c
  2636   002BA8  EFD8  F015         	goto	u1161
  2637   002BAC  EFDA  F015         	goto	u1160
  2638   002BB0                     u1161:
  2639   002BB0  EFF5  F015         	goto	l2711
  2640   002BB4                     u1160:
  2641   002BB4  EE20 F009          	lfsr	2,9
  2642   002BB8  5003               	movf	fputc@fp^0,w,c
  2643   002BBA  26D9               	addwf	fsr2l,f,c
  2644   002BBC  5004               	movf	(fputc@fp+1)^0,w,c
  2645   002BBE  22DA               	addwfc	fsr2h,f,c
  2646   002BC0  EE10 F003          	lfsr	1,3
  2647   002BC4  5003               	movf	fputc@fp^0,w,c
  2648   002BC6  26E1               	addwf	fsr1l,f,c
  2649   002BC8  5004               	movf	(fputc@fp+1)^0,w,c
  2650   002BCA  22E2               	addwfc	fsr1h,f,c
  2651   002BCC  50DE               	movf	postinc2,w,c
  2652   002BCE  5CE6               	subwf	postinc1,w,c
  2653   002BD0  50E6               	movf	postinc1,w,c
  2654   002BD2  0A80               	xorlw	128
  2655   002BD4  6E09               	movwf	(??_fputc+4)^0,c
  2656   002BD6  50DE               	movf	postinc2,w,c
  2657   002BD8  0A80               	xorlw	128
  2658   002BDA  5809               	subwfb	(??_fputc+4)^0,w,c
  2659   002BDC  B0D8               	btfsc	status,0,c
  2660   002BDE  EFF3  F015         	goto	u1171
  2661   002BE2  EFF5  F015         	goto	u1170
  2662   002BE6                     u1171:
  2663   002BE6  EF18  F016         	goto	l1240
  2664   002BEA                     u1170:
  2665   002BEA                     l2711:
  2666   002BEA  EE20 F003          	lfsr	2,3
  2667   002BEE  5003               	movf	fputc@fp^0,w,c
  2668   002BF0  26D9               	addwf	fsr2l,f,c
  2669   002BF2  5004               	movf	(fputc@fp+1)^0,w,c
  2670   002BF4  22DA               	addwfc	fsr2h,f,c
  2671   002BF6  CFDE F005          	movff	postinc2,??_fputc
  2672   002BFA  CFDD F006          	movff	postdec2,??_fputc+1
  2673   002BFE  C003  FFD9         	movff	fputc@fp,fsr2l
  2674   002C02  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2675   002C06  CFDE F007          	movff	postinc2,??_fputc+2
  2676   002C0A  CFDD F008          	movff	postdec2,??_fputc+3
  2677   002C0E  5005               	movf	??_fputc^0,w,c
  2678   002C10  2407               	addwf	(??_fputc+2)^0,w,c
  2679   002C12  6ED9               	movwf	fsr2l,c
  2680   002C14  5006               	movf	(??_fputc+1)^0,w,c
  2681   002C16  2008               	addwfc	(??_fputc+3)^0,w,c
  2682   002C18  6EDA               	movwf	fsr2h,c
  2683   002C1A  C001  FFDF         	movff	fputc@c,indf2
  2684   002C1E  EE20 F003          	lfsr	2,3
  2685   002C22  5003               	movf	fputc@fp^0,w,c
  2686   002C24  26D9               	addwf	fsr2l,f,c
  2687   002C26  5004               	movf	(fputc@fp+1)^0,w,c
  2688   002C28  22DA               	addwfc	fsr2h,f,c
  2689   002C2A  2ADE               	incf	postinc2,f,c
  2690   002C2C  0E00               	movlw	0
  2691   002C2E  22DD               	addwfc	postdec2,f,c
  2692   002C30                     l1240:
  2693   002C30  0012               	return		;funcret
  2694   002C32                     __end_of_fputc:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _putch *****************
  2698 ;; Defined at:
  2699 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  c               1    wreg     unsigned char 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  c               1    0[COMRAM] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_fputc
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text8
  2728   0038BA                     __ptext8:
  2729                           	callstack 0
  2730   0038BA                     _putch:
  2731                           	callstack 25
  2732   0038BA  0012               	return		;funcret
  2733   0038BC                     __end_of_putch:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _abs *****************
  2737 ;; Defined at:
  2738 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  a               2   18[COMRAM] int 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2   18[COMRAM] int 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;Total ram usage:        4 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_dtoa
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text9
  2767   003708                     __ptext9:
  2768                           	callstack 0
  2769   003708                     _abs:
  2770                           	callstack 25
  2771   003708  BE14               	btfsc	(abs@a+1)^0,7,c
  2772   00370A  EF91  F01B         	goto	u1340
  2773   00370E  5014               	movf	(abs@a+1)^0,w,c
  2774   003710  E106               	bnz	u1341
  2775   003712  0413               	decf	abs@a^0,w,c
  2776   003714  B0D8               	btfsc	status,0,c
  2777   003716  EF8F  F01B         	goto	u1341
  2778   00371A  EF91  F01B         	goto	u1340
  2779   00371E                     u1341:
  2780   00371E  EF9F  F01B         	goto	l1225
  2781   003722                     u1340:
  2782   003722  C013  F015         	movff	abs@a,??_abs
  2783   003726  C014  F016         	movff	abs@a+1,??_abs+1
  2784   00372A  1E15               	comf	??_abs^0,f,c
  2785   00372C  1E16               	comf	(??_abs+1)^0,f,c
  2786   00372E  4A15               	infsnz	??_abs^0,f,c
  2787   003730  2A16               	incf	(??_abs+1)^0,f,c
  2788   003732  C015  F013         	movff	??_abs,?_abs
  2789   003736  C016  F014         	movff	??_abs+1,?_abs+1
  2790   00373A  EFA3  F01B         	goto	l1228
  2791   00373E                     l1225:
  2792   00373E  C013  F013         	movff	abs@a,?_abs
  2793   003742  C014  F014         	movff	abs@a+1,?_abs+1
  2794   003746                     l1228:
  2795   003746  0012               	return		;funcret
  2796   003748                     __end_of_abs:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function ___aomod *****************
  2800 ;; Defined at:
  2801 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  dividend        8    0[COMRAM] long long 
  2804 ;;  divisor         8    8[COMRAM] long long 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  sign            1   17[COMRAM] unsigned char 
  2807 ;;  counter         1   16[COMRAM] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  8    0[COMRAM] long long 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2817 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2820 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2821 ;;Total ram usage:       18 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_dtoa
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text10
  2832   00267C                     __ptext10:
  2833                           	callstack 0
  2834   00267C                     ___aomod:
  2835                           	callstack 25
  2836   00267C  0E00               	movlw	0
  2837   00267E  6E12               	movwf	___aomod@sign^0,c
  2838   002680  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2839   002682  EF47  F013         	goto	u1260
  2840   002686  EF45  F013         	goto	u1261
  2841   00268A                     u1261:
  2842   00268A  EF59  F013         	goto	l2775
  2843   00268E                     u1260:
  2844   00268E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2845   002690  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2846   002692  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2847   002694  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2848   002696  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2849   002698  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2850   00269A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2851   00269C  6C01               	negf	___aomod@dividend^0,c
  2852   00269E  0E00               	movlw	0
  2853   0026A0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2854   0026A2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2855   0026A4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2856   0026A6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2857   0026A8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2858   0026AA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2859   0026AC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2860   0026AE  0E01               	movlw	1
  2861   0026B0  6E12               	movwf	___aomod@sign^0,c
  2862   0026B2                     l2775:
  2863   0026B2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2864   0026B4  EF60  F013         	goto	u1270
  2865   0026B8  EF5E  F013         	goto	u1271
  2866   0026BC                     u1271:
  2867   0026BC  EF70  F013         	goto	l2779
  2868   0026C0                     u1270:
  2869   0026C0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2870   0026C2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2871   0026C4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2872   0026C6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2873   0026C8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2874   0026CA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2875   0026CC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2876   0026CE  6C09               	negf	___aomod@divisor^0,c
  2877   0026D0  0E00               	movlw	0
  2878   0026D2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2879   0026D4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2880   0026D6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2881   0026D8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2882   0026DA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2883   0026DC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2884   0026DE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2885   0026E0                     l2779:
  2886   0026E0  5009               	movf	___aomod@divisor^0,w,c
  2887   0026E2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2888   0026E4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2889   0026E6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2890   0026E8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2891   0026EA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2892   0026EC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2893   0026EE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2894   0026F0  B4D8               	btfsc	status,2,c
  2895   0026F2  EF7D  F013         	goto	u1281
  2896   0026F6  EF7F  F013         	goto	u1280
  2897   0026FA                     u1281:
  2898   0026FA  EFC7  F013         	goto	l2795
  2899   0026FE                     u1280:
  2900   0026FE  0E01               	movlw	1
  2901   002700  6E11               	movwf	___aomod@counter^0,c
  2902   002702  EF8D  F013         	goto	l2785
  2903   002706                     l2783:
  2904   002706  90D8               	bcf	status,0,c
  2905   002708  3609               	rlcf	___aomod@divisor^0,f,c
  2906   00270A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2907   00270C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2908   00270E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2909   002710  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2910   002712  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2911   002714  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2912   002716  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2913   002718  2A11               	incf	___aomod@counter^0,f,c
  2914   00271A                     l2785:
  2915   00271A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2916   00271C  EF92  F013         	goto	u1291
  2917   002720  EF94  F013         	goto	u1290
  2918   002724                     u1291:
  2919   002724  EF83  F013         	goto	l2783
  2920   002728                     u1290:
  2921   002728                     l2787:
  2922   002728  5009               	movf	___aomod@divisor^0,w,c
  2923   00272A  5C01               	subwf	___aomod@dividend^0,w,c
  2924   00272C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2925   00272E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2926   002730  500B               	movf	(___aomod@divisor+2)^0,w,c
  2927   002732  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2928   002734  500C               	movf	(___aomod@divisor+3)^0,w,c
  2929   002736  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2930   002738  500D               	movf	(___aomod@divisor+4)^0,w,c
  2931   00273A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2932   00273C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2933   00273E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2934   002740  500F               	movf	(___aomod@divisor+6)^0,w,c
  2935   002742  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2936   002744  5010               	movf	(___aomod@divisor+7)^0,w,c
  2937   002746  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2938   002748  A0D8               	btfss	status,0,c
  2939   00274A  EFA9  F013         	goto	u1301
  2940   00274E  EFAB  F013         	goto	u1300
  2941   002752                     u1301:
  2942   002752  EFBB  F013         	goto	l2791
  2943   002756                     u1300:
  2944   002756  5009               	movf	___aomod@divisor^0,w,c
  2945   002758  5E01               	subwf	___aomod@dividend^0,f,c
  2946   00275A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2947   00275C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2948   00275E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2949   002760  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2950   002762  500C               	movf	(___aomod@divisor+3)^0,w,c
  2951   002764  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2952   002766  500D               	movf	(___aomod@divisor+4)^0,w,c
  2953   002768  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2954   00276A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2955   00276C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2956   00276E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2957   002770  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2958   002772  5010               	movf	(___aomod@divisor+7)^0,w,c
  2959   002774  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2960   002776                     l2791:
  2961   002776  90D8               	bcf	status,0,c
  2962   002778  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2963   00277A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2964   00277C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2965   00277E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2966   002780  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2967   002782  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2968   002784  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2969   002786  3209               	rrcf	___aomod@divisor^0,f,c
  2970   002788  2E11               	decfsz	___aomod@counter^0,f,c
  2971   00278A  EF94  F013         	goto	l2787
  2972   00278E                     l2795:
  2973   00278E  5012               	movf	___aomod@sign^0,w,c
  2974   002790  B4D8               	btfsc	status,2,c
  2975   002792  EFCD  F013         	goto	u1311
  2976   002796  EFCF  F013         	goto	u1310
  2977   00279A                     u1311:
  2978   00279A  EFDF  F013         	goto	l2799
  2979   00279E                     u1310:
  2980   00279E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2981   0027A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2982   0027A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2983   0027A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2984   0027A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2985   0027A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2986   0027AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2987   0027AC  6C01               	negf	___aomod@dividend^0,c
  2988   0027AE  0E00               	movlw	0
  2989   0027B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2990   0027B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2991   0027B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2992   0027B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2993   0027B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2994   0027BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2995   0027BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2996   0027BE                     l2799:
  2997   0027BE  C001  F001         	movff	___aomod@dividend,?___aomod
  2998   0027C2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2999   0027C6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3000   0027CA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3001   0027CE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3002   0027D2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3003   0027D6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3004   0027DA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3005   0027DE  0012               	return		;funcret
  3006   0027E0                     __end_of___aomod:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function ___aodiv *****************
  3010 ;; Defined at:
  3011 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  dividend        8    0[COMRAM] long long 
  3014 ;;  divisor         8    8[COMRAM] long long 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  quotient        8   18[COMRAM] long long 
  3017 ;;  sign            1   17[COMRAM] unsigned char 
  3018 ;;  counter         1   16[COMRAM] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  8    0[COMRAM] long long 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3028 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;Total ram usage:       26 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_dtoa
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text11
  3043   0024F4                     __ptext11:
  3044                           	callstack 0
  3045   0024F4                     ___aodiv:
  3046                           	callstack 25
  3047   0024F4  0E00               	movlw	0
  3048   0024F6  6E12               	movwf	___aodiv@sign^0,c
  3049   0024F8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3050   0024FA  EF83  F012         	goto	u1190
  3051   0024FE  EF81  F012         	goto	u1191
  3052   002502                     u1191:
  3053   002502  EF95  F012         	goto	l2731
  3054   002506                     u1190:
  3055   002506  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3056   002508  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3057   00250A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3058   00250C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3059   00250E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3060   002510  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3061   002512  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3062   002514  6C09               	negf	___aodiv@divisor^0,c
  3063   002516  0E00               	movlw	0
  3064   002518  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3065   00251A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3066   00251C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3067   00251E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3068   002520  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3069   002522  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3070   002524  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3071   002526  0E01               	movlw	1
  3072   002528  6E12               	movwf	___aodiv@sign^0,c
  3073   00252A                     l2731:
  3074   00252A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3075   00252C  EF9C  F012         	goto	u1200
  3076   002530  EF9A  F012         	goto	u1201
  3077   002534                     u1201:
  3078   002534  EFAE  F012         	goto	l2737
  3079   002538                     u1200:
  3080   002538  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3081   00253A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3082   00253C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3083   00253E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3084   002540  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3085   002542  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3086   002544  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3087   002546  6C01               	negf	___aodiv@dividend^0,c
  3088   002548  0E00               	movlw	0
  3089   00254A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3090   00254C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3091   00254E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3092   002550  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3093   002552  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3094   002554  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3095   002556  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3096   002558  0E01               	movlw	1
  3097   00255A  1A12               	xorwf	___aodiv@sign^0,f,c
  3098   00255C                     l2737:
  3099   00255C  EE20  F013         	lfsr	2,___aodiv@quotient
  3100   002560  0E07               	movlw	7
  3101   002562                     u1211:
  3102   002562  6ADE               	clrf	postinc2,c
  3103   002564  06E8               	decf	wreg,f,c
  3104   002566  E2FD               	bc	u1211
  3105   002568  5009               	movf	___aodiv@divisor^0,w,c
  3106   00256A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3107   00256C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3108   00256E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3109   002570  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3110   002572  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3111   002574  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3112   002576  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3113   002578  B4D8               	btfsc	status,2,c
  3114   00257A  EFC1  F012         	goto	u1221
  3115   00257E  EFC3  F012         	goto	u1220
  3116   002582                     u1221:
  3117   002582  EF15  F013         	goto	l2759
  3118   002586                     u1220:
  3119   002586  0E01               	movlw	1
  3120   002588  6E11               	movwf	___aodiv@counter^0,c
  3121   00258A  EFD1  F012         	goto	l2745
  3122   00258E                     l2743:
  3123   00258E  90D8               	bcf	status,0,c
  3124   002590  3609               	rlcf	___aodiv@divisor^0,f,c
  3125   002592  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3126   002594  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3127   002596  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3128   002598  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3129   00259A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3130   00259C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3131   00259E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3132   0025A0  2A11               	incf	___aodiv@counter^0,f,c
  3133   0025A2                     l2745:
  3134   0025A2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3135   0025A4  EFD6  F012         	goto	u1231
  3136   0025A8  EFD8  F012         	goto	u1230
  3137   0025AC                     u1231:
  3138   0025AC  EFC7  F012         	goto	l2743
  3139   0025B0                     u1230:
  3140   0025B0                     l2747:
  3141   0025B0  90D8               	bcf	status,0,c
  3142   0025B2  3613               	rlcf	___aodiv@quotient^0,f,c
  3143   0025B4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3144   0025B6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3145   0025B8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3146   0025BA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3147   0025BC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3148   0025BE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3149   0025C0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3150   0025C2  5009               	movf	___aodiv@divisor^0,w,c
  3151   0025C4  5C01               	subwf	___aodiv@dividend^0,w,c
  3152   0025C6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3153   0025C8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3154   0025CA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3155   0025CC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3156   0025CE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3157   0025D0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3158   0025D2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3159   0025D4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3160   0025D6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3161   0025D8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3162   0025DA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3163   0025DC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3164   0025DE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3165   0025E0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3166   0025E2  A0D8               	btfss	status,0,c
  3167   0025E4  EFF6  F012         	goto	u1241
  3168   0025E8  EFF8  F012         	goto	u1240
  3169   0025EC                     u1241:
  3170   0025EC  EF09  F013         	goto	l2755
  3171   0025F0                     u1240:
  3172   0025F0  5009               	movf	___aodiv@divisor^0,w,c
  3173   0025F2  5E01               	subwf	___aodiv@dividend^0,f,c
  3174   0025F4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3175   0025F6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3176   0025F8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3177   0025FA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3178   0025FC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3179   0025FE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3180   002600  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3181   002602  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3182   002604  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3183   002606  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3184   002608  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3185   00260A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3186   00260C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3187   00260E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3188   002610  8013               	bsf	___aodiv@quotient^0,0,c
  3189   002612                     l2755:
  3190   002612  90D8               	bcf	status,0,c
  3191   002614  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3192   002616  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3193   002618  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3194   00261A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3195   00261C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3196   00261E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3197   002620  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3198   002622  3209               	rrcf	___aodiv@divisor^0,f,c
  3199   002624  2E11               	decfsz	___aodiv@counter^0,f,c
  3200   002626  EFD8  F012         	goto	l2747
  3201   00262A                     l2759:
  3202   00262A  5012               	movf	___aodiv@sign^0,w,c
  3203   00262C  B4D8               	btfsc	status,2,c
  3204   00262E  EF1B  F013         	goto	u1251
  3205   002632  EF1D  F013         	goto	u1250
  3206   002636                     u1251:
  3207   002636  EF2D  F013         	goto	l2763
  3208   00263A                     u1250:
  3209   00263A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3210   00263C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3211   00263E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3212   002640  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3213   002642  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3214   002644  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3215   002646  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3216   002648  6C13               	negf	___aodiv@quotient^0,c
  3217   00264A  0E00               	movlw	0
  3218   00264C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3219   00264E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3220   002650  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3221   002652  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3222   002654  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3223   002656  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3224   002658  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3225   00265A                     l2763:
  3226   00265A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3227   00265E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3228   002662  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3229   002666  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3230   00266A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3231   00266E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3232   002672  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3233   002676  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3234   00267A  0012               	return		;funcret
  3235   00267C                     __end_of___aodiv:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _sendStringSerial4 *****************
  3239 ;; Defined at:
  3240 ;;		line 37 in file "../serial.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  string          2    1[COMRAM] PTR unsigned char 
  3243 ;;		 -> main@test(100), main@test0(100), main@readout3(100), 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;Total ram usage:        2 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 2
  3262 ;; This function calls:
  3263 ;;		_sendCharSerial4
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text12
  3270   003748                     __ptext12:
  3271                           	callstack 0
  3272   003748                     _sendStringSerial4:
  3273                           	callstack 28
  3274   003748                     
  3275                           ;../serial.c: 40:     while (*string != 0)
  3276   003748  EFAF  F01B         	goto	l3471
  3277   00374C                     l3467:
  3278                           
  3279                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  3280   00374C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3281   003750  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3282   003754  50DF               	movf	indf2,w,c
  3283   003756  EC27  F01C         	call	_sendCharSerial4
  3284   00375A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3285   00375C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3286   00375E                     l3471:
  3287                           
  3288                           ;../serial.c: 40:     while (*string != 0)
  3289   00375E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3290   003762  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3291   003766  50DF               	movf	indf2,w,c
  3292   003768  A4D8               	btfss	status,2,c
  3293   00376A  EFB9  F01B         	goto	u1781
  3294   00376E  EFBB  F01B         	goto	u1780
  3295   003772                     u1781:
  3296   003772  EFA6  F01B         	goto	l3467
  3297   003776                     u1780:
  3298   003776  0012               	return		;funcret
  3299   003778                     __end_of_sendStringSerial4:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _sendCharSerial4 *****************
  3303 ;; Defined at:
  3304 ;;		line 30 in file "../serial.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  charToSend      1    wreg     unsigned char 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  charToSend      1    0[COMRAM] unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;Total ram usage:        1 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 1
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_sendStringSerial4
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text13
  3333   00384E                     __ptext13:
  3334                           	callstack 0
  3335   00384E                     _sendCharSerial4:
  3336                           	callstack 28
  3337                           
  3338                           ;incstack = 0
  3339                           ;sendCharSerial4@charToSend stored from wreg
  3340   00384E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3341   003850                     l473:
  3342   003850  010E               	movlb	14	; () banked
  3343   003852  A537               	btfss	55,2,b	;volatile
  3344   003854  EF2E  F01C         	goto	u1711
  3345   003858  EF30  F01C         	goto	u1710
  3346   00385C                     u1711:
  3347   00385C  EF28  F01C         	goto	l473
  3348   003860                     u1710:
  3349   003860                     
  3350                           ; BSR set to: 14
  3351                           ;../serial.c: 32:     TX4REG = charToSend;
  3352   003860  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3353   003864                     
  3354                           ; BSR set to: 14
  3355   003864  0012               	return		;funcret
  3356   003866                     __end_of_sendCharSerial4:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _motor_action_return *****************
  3360 ;; Defined at:
  3361 ;;		line 297 in file "../dc_motor.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  color           2   33[COMRAM] unsigned int 
  3364 ;;  l               2   35[COMRAM] PTR struct DC_motor
  3365 ;;		 -> main@motorL(9), 
  3366 ;;  r               2   37[COMRAM] PTR struct DC_motor
  3367 ;;		 -> main@motorR(9), 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;Total ram usage:        8 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 4
  3386 ;; This function calls:
  3387 ;;		_forward
  3388 ;;		_left_135
  3389 ;;		_left_90
  3390 ;;		_reverse_fromcard
  3391 ;;		_reverse_onesquare
  3392 ;;		_right_135
  3393 ;;		_right_90
  3394 ;;		_spin_180
  3395 ;;		_stop
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text14
  3402   001B54                     __ptext14:
  3403                           	callstack 0
  3404   001B54                     _motor_action_return:
  3405                           	callstack 26
  3406   001B54                     
  3407                           ;../dc_motor.c: 297: void motor_action_return(unsigned int color, struct DC_motor *l, st
      +                          ruct DC_motor *r);../dc_motor.c: 298: {;../dc_motor.c: 299:     switch (color){
  3408   001B54  EF48  F00F         	goto	l3531
  3409   001B58                     l3475:
  3410                           
  3411                           ;../dc_motor.c: 301:             reverse_fromcard(l,r);
  3412   001B58  C024  F01A         	movff	motor_action_return@l,reverse_fromcard@mL
  3413   001B5C  C025  F01B         	movff	motor_action_return@l+1,reverse_fromcard@mL+1
  3414   001B60  C026  F01C         	movff	motor_action_return@r,reverse_fromcard@mR
  3415   001B64  C027  F01D         	movff	motor_action_return@r+1,reverse_fromcard@mR+1
  3416   001B68  EC07  F019         	call	_reverse_fromcard	;wreg free
  3417                           
  3418                           ;../dc_motor.c: 302:             stop(l,r);
  3419   001B6C  C024  F01A         	movff	motor_action_return@l,stop@mL
  3420   001B70  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3421   001B74  C026  F01C         	movff	motor_action_return@r,stop@mR
  3422   001B78  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3423   001B7C  EC57  F019         	call	_stop	;wreg free
  3424   001B80                     
  3425                           ;../dc_motor.c: 303:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3426   001B80  0E29               	movlw	41
  3427   001B82  6E29               	movwf	(??_motor_action_return+1)^0,c
  3428   001B84  0E96               	movlw	150
  3429   001B86  6E28               	movwf	??_motor_action_return^0,c
  3430   001B88  0E7F               	movlw	127
  3431   001B8A                     u2317:
  3432   001B8A  2EE8               	decfsz	wreg,f,c
  3433   001B8C  D7FE               	bra	u2317
  3434   001B8E  2E28               	decfsz	??_motor_action_return^0,f,c
  3435   001B90  D7FC               	bra	u2317
  3436   001B92  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3437   001B94  D7FA               	bra	u2317
  3438   001B96  F000               	nop	
  3439   001B98                     
  3440                           ;../dc_motor.c: 304:             left_90(l,r);
  3441   001B98  C024  F01A         	movff	motor_action_return@l,left_90@mL
  3442   001B9C  C025  F01B         	movff	motor_action_return@l+1,left_90@mL+1
  3443   001BA0  C026  F01C         	movff	motor_action_return@r,left_90@mR
  3444   001BA4  C027  F01D         	movff	motor_action_return@r+1,left_90@mR+1
  3445   001BA8  EC20  F017         	call	_left_90	;wreg free
  3446   001BAC                     l3481:
  3447                           
  3448                           ;../dc_motor.c: 305:             stop(l,r);
  3449   001BAC  C024  F01A         	movff	motor_action_return@l,stop@mL
  3450   001BB0  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3451   001BB4  C026  F01C         	movff	motor_action_return@r,stop@mR
  3452   001BB8  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3453   001BBC  EC57  F019         	call	_stop	;wreg free
  3454                           
  3455                           ;../dc_motor.c: 306:             break;
  3456   001BC0  EF76  F00F         	goto	l379
  3457   001BC4                     l3483:
  3458                           
  3459                           ;../dc_motor.c: 308:             reverse_fromcard(l,r);
  3460   001BC4  C024  F01A         	movff	motor_action_return@l,reverse_fromcard@mL
  3461   001BC8  C025  F01B         	movff	motor_action_return@l+1,reverse_fromcard@mL+1
  3462   001BCC  C026  F01C         	movff	motor_action_return@r,reverse_fromcard@mR
  3463   001BD0  C027  F01D         	movff	motor_action_return@r+1,reverse_fromcard@mR+1
  3464   001BD4  EC07  F019         	call	_reverse_fromcard	;wreg free
  3465                           
  3466                           ;../dc_motor.c: 309:             stop(l,r);
  3467   001BD8  C024  F01A         	movff	motor_action_return@l,stop@mL
  3468   001BDC  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3469   001BE0  C026  F01C         	movff	motor_action_return@r,stop@mR
  3470   001BE4  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3471   001BE8  EC57  F019         	call	_stop	;wreg free
  3472   001BEC                     
  3473                           ;../dc_motor.c: 310:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3474   001BEC  0E29               	movlw	41
  3475   001BEE  6E29               	movwf	(??_motor_action_return+1)^0,c
  3476   001BF0  0E96               	movlw	150
  3477   001BF2  6E28               	movwf	??_motor_action_return^0,c
  3478   001BF4  0E7F               	movlw	127
  3479   001BF6                     u2327:
  3480   001BF6  2EE8               	decfsz	wreg,f,c
  3481   001BF8  D7FE               	bra	u2327
  3482   001BFA  2E28               	decfsz	??_motor_action_return^0,f,c
  3483   001BFC  D7FC               	bra	u2327
  3484   001BFE  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3485   001C00  D7FA               	bra	u2327
  3486   001C02  F000               	nop	
  3487   001C04                     
  3488                           ;../dc_motor.c: 311:             right_90(l,r);
  3489   001C04  C024  F01A         	movff	motor_action_return@l,right_90@mL
  3490   001C08  C025  F01B         	movff	motor_action_return@l+1,right_90@mL+1
  3491   001C0C  C026  F01C         	movff	motor_action_return@r,right_90@mR
  3492   001C10  C027  F01D         	movff	motor_action_return@r+1,right_90@mR+1
  3493   001C14  ECCE  F016         	call	_right_90	;wreg free
  3494   001C18                     
  3495                           ;../dc_motor.c: 312:             stop(l,r);
  3496   001C18  C024  F01A         	movff	motor_action_return@l,stop@mL
  3497   001C1C  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3498   001C20  C026  F01C         	movff	motor_action_return@r,stop@mR
  3499   001C24  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3500   001C28  EC57  F019         	call	_stop	;wreg free
  3501   001C2C                     
  3502                           ;../dc_motor.c: 313:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3503   001C2C  0E29               	movlw	41
  3504   001C2E  6E29               	movwf	(??_motor_action_return+1)^0,c
  3505   001C30  0E96               	movlw	150
  3506   001C32  6E28               	movwf	??_motor_action_return^0,c
  3507   001C34  0E7F               	movlw	127
  3508   001C36                     u2337:
  3509   001C36  2EE8               	decfsz	wreg,f,c
  3510   001C38  D7FE               	bra	u2337
  3511   001C3A  2E28               	decfsz	??_motor_action_return^0,f,c
  3512   001C3C  D7FC               	bra	u2337
  3513   001C3E  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3514   001C40  D7FA               	bra	u2337
  3515   001C42  F000               	nop	
  3516                           
  3517                           ;../dc_motor.c: 314:             right_90(l,r);
  3518   001C44  C024  F01A         	movff	motor_action_return@l,right_90@mL
  3519   001C48  C025  F01B         	movff	motor_action_return@l+1,right_90@mL+1
  3520   001C4C  C026  F01C         	movff	motor_action_return@r,right_90@mR
  3521   001C50  C027  F01D         	movff	motor_action_return@r+1,right_90@mR+1
  3522   001C54  ECCE  F016         	call	_right_90	;wreg free
  3523                           
  3524                           ;../dc_motor.c: 315:             stop(l,r);
  3525   001C58  C024  F01A         	movff	motor_action_return@l,stop@mL
  3526   001C5C  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3527   001C60  C026  F01C         	movff	motor_action_return@r,stop@mR
  3528   001C64  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3529   001C68  EC57  F019         	call	_stop	;wreg free
  3530                           
  3531                           ;../dc_motor.c: 316:             break;
  3532   001C6C  EF76  F00F         	goto	l379
  3533   001C70                     l3493:
  3534                           
  3535                           ;../dc_motor.c: 318:             reverse_fromcard(l,r);
  3536   001C70  C024  F01A         	movff	motor_action_return@l,reverse_fromcard@mL
  3537   001C74  C025  F01B         	movff	motor_action_return@l+1,reverse_fromcard@mL+1
  3538   001C78  C026  F01C         	movff	motor_action_return@r,reverse_fromcard@mR
  3539   001C7C  C027  F01D         	movff	motor_action_return@r+1,reverse_fromcard@mR+1
  3540   001C80  EC07  F019         	call	_reverse_fromcard	;wreg free
  3541                           
  3542                           ;../dc_motor.c: 319:             stop(l,r);
  3543   001C84  C024  F01A         	movff	motor_action_return@l,stop@mL
  3544   001C88  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3545   001C8C  C026  F01C         	movff	motor_action_return@r,stop@mR
  3546   001C90  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3547   001C94  EC57  F019         	call	_stop	;wreg free
  3548   001C98                     
  3549                           ;../dc_motor.c: 320:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3550   001C98  0E29               	movlw	41
  3551   001C9A  6E29               	movwf	(??_motor_action_return+1)^0,c
  3552   001C9C  0E96               	movlw	150
  3553   001C9E  6E28               	movwf	??_motor_action_return^0,c
  3554   001CA0  0E7F               	movlw	127
  3555   001CA2                     u2347:
  3556   001CA2  2EE8               	decfsz	wreg,f,c
  3557   001CA4  D7FE               	bra	u2347
  3558   001CA6  2E28               	decfsz	??_motor_action_return^0,f,c
  3559   001CA8  D7FC               	bra	u2347
  3560   001CAA  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3561   001CAC  D7FA               	bra	u2347
  3562   001CAE  F000               	nop	
  3563   001CB0                     
  3564                           ;../dc_motor.c: 321:             spin_180(l,r);
  3565   001CB0  C024  F01A         	movff	motor_action_return@l,spin_180@mL
  3566   001CB4  C025  F01B         	movff	motor_action_return@l+1,spin_180@mL+1
  3567   001CB8  C026  F01C         	movff	motor_action_return@r,spin_180@mR
  3568   001CBC  C027  F01D         	movff	motor_action_return@r+1,spin_180@mR+1
  3569   001CC0  EC72  F017         	call	_spin_180	;wreg free
  3570   001CC4  EFD6  F00D         	goto	l3481
  3571   001CC8                     l3501:
  3572                           
  3573                           ;../dc_motor.c: 325:             forward(l,r);
  3574   001CC8  C024  F01A         	movff	motor_action_return@l,forward@mL
  3575   001CCC  C025  F01B         	movff	motor_action_return@l+1,forward@mL+1
  3576   001CD0  C026  F01C         	movff	motor_action_return@r,forward@mR
  3577   001CD4  C027  F01D         	movff	motor_action_return@r+1,forward@mR+1
  3578   001CD8  ECB6  F018         	call	_forward	;wreg free
  3579                           
  3580                           ;../dc_motor.c: 326:             right_90(l,r);
  3581   001CDC  C024  F01A         	movff	motor_action_return@l,right_90@mL
  3582   001CE0  C025  F01B         	movff	motor_action_return@l+1,right_90@mL+1
  3583   001CE4  C026  F01C         	movff	motor_action_return@r,right_90@mR
  3584   001CE8  C027  F01D         	movff	motor_action_return@r+1,right_90@mR+1
  3585   001CEC  ECCE  F016         	call	_right_90	;wreg free
  3586                           
  3587                           ;../dc_motor.c: 327:             forward(l,r);
  3588   001CF0  C024  F01A         	movff	motor_action_return@l,forward@mL
  3589   001CF4  C025  F01B         	movff	motor_action_return@l+1,forward@mL+1
  3590   001CF8  C026  F01C         	movff	motor_action_return@r,forward@mR
  3591   001CFC  C027  F01D         	movff	motor_action_return@r+1,forward@mR+1
  3592   001D00  ECB6  F018         	call	_forward	;wreg free
  3593                           
  3594                           ;../dc_motor.c: 328:             stop(l,r);
  3595   001D04  C024  F01A         	movff	motor_action_return@l,stop@mL
  3596   001D08  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3597   001D0C  C026  F01C         	movff	motor_action_return@r,stop@mR
  3598   001D10  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3599   001D14  EC57  F019         	call	_stop	;wreg free
  3600                           
  3601                           ;../dc_motor.c: 329:             break;
  3602   001D18  EF76  F00F         	goto	l379
  3603   001D1C                     l3503:
  3604                           
  3605                           ;../dc_motor.c: 331:             stop(l,r);
  3606   001D1C  C024  F01A         	movff	motor_action_return@l,stop@mL
  3607   001D20  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3608   001D24  C026  F01C         	movff	motor_action_return@r,stop@mR
  3609   001D28  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3610   001D2C  EC57  F019         	call	_stop	;wreg free
  3611                           
  3612                           ;../dc_motor.c: 332:             left_90(l,r);
  3613   001D30  C024  F01A         	movff	motor_action_return@l,left_90@mL
  3614   001D34  C025  F01B         	movff	motor_action_return@l+1,left_90@mL+1
  3615   001D38  C026  F01C         	movff	motor_action_return@r,left_90@mR
  3616   001D3C  C027  F01D         	movff	motor_action_return@r+1,left_90@mR+1
  3617   001D40  EC20  F017         	call	_left_90	;wreg free
  3618                           
  3619                           ;../dc_motor.c: 333:             forward(l,r);
  3620   001D44  C024  F01A         	movff	motor_action_return@l,forward@mL
  3621   001D48  C025  F01B         	movff	motor_action_return@l+1,forward@mL+1
  3622   001D4C  C026  F01C         	movff	motor_action_return@r,forward@mR
  3623   001D50  C027  F01D         	movff	motor_action_return@r+1,forward@mR+1
  3624   001D54  ECB6  F018         	call	_forward	;wreg free
  3625                           
  3626                           ;../dc_motor.c: 334:             stop(l,r);
  3627   001D58  C024  F01A         	movff	motor_action_return@l,stop@mL
  3628   001D5C  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3629   001D60  C026  F01C         	movff	motor_action_return@r,stop@mR
  3630   001D64  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3631   001D68  EC57  F019         	call	_stop	;wreg free
  3632                           
  3633                           ;../dc_motor.c: 335:             break;
  3634   001D6C  EF76  F00F         	goto	l379
  3635   001D70                     l3505:
  3636                           
  3637                           ;../dc_motor.c: 337:             stop(l,r);
  3638   001D70  C024  F01A         	movff	motor_action_return@l,stop@mL
  3639   001D74  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3640   001D78  C026  F01C         	movff	motor_action_return@r,stop@mR
  3641   001D7C  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3642   001D80  EC57  F019         	call	_stop	;wreg free
  3643   001D84                     
  3644                           ;../dc_motor.c: 338:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3645   001D84  0E29               	movlw	41
  3646   001D86  6E29               	movwf	(??_motor_action_return+1)^0,c
  3647   001D88  0E96               	movlw	150
  3648   001D8A  6E28               	movwf	??_motor_action_return^0,c
  3649   001D8C  0E7F               	movlw	127
  3650   001D8E                     u2357:
  3651   001D8E  2EE8               	decfsz	wreg,f,c
  3652   001D90  D7FE               	bra	u2357
  3653   001D92  2E28               	decfsz	??_motor_action_return^0,f,c
  3654   001D94  D7FC               	bra	u2357
  3655   001D96  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3656   001D98  D7FA               	bra	u2357
  3657   001D9A  F000               	nop	
  3658   001D9C                     
  3659                           ;../dc_motor.c: 339:             left_135(l,r);
  3660   001D9C  C024  F01A         	movff	motor_action_return@l,left_135@mL
  3661   001DA0  C025  F01B         	movff	motor_action_return@l+1,left_135@mL+1
  3662   001DA4  C026  F01C         	movff	motor_action_return@r,left_135@mR
  3663   001DA8  C027  F01D         	movff	motor_action_return@r+1,left_135@mR+1
  3664   001DAC  EC65  F018         	call	_left_135	;wreg free
  3665   001DB0  EFD6  F00D         	goto	l3481
  3666   001DB4                     l3513:
  3667                           
  3668                           ;../dc_motor.c: 343:             stop(l,r);
  3669   001DB4  C024  F01A         	movff	motor_action_return@l,stop@mL
  3670   001DB8  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3671   001DBC  C026  F01C         	movff	motor_action_return@r,stop@mR
  3672   001DC0  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3673   001DC4  EC57  F019         	call	_stop	;wreg free
  3674   001DC8                     
  3675                           ;../dc_motor.c: 344:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3676   001DC8  0E29               	movlw	41
  3677   001DCA  6E29               	movwf	(??_motor_action_return+1)^0,c
  3678   001DCC  0E96               	movlw	150
  3679   001DCE  6E28               	movwf	??_motor_action_return^0,c
  3680   001DD0  0E7F               	movlw	127
  3681   001DD2                     u2367:
  3682   001DD2  2EE8               	decfsz	wreg,f,c
  3683   001DD4  D7FE               	bra	u2367
  3684   001DD6  2E28               	decfsz	??_motor_action_return^0,f,c
  3685   001DD8  D7FC               	bra	u2367
  3686   001DDA  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3687   001DDC  D7FA               	bra	u2367
  3688   001DDE  F000               	nop	
  3689   001DE0                     
  3690                           ;../dc_motor.c: 345:             right_135(l,r);
  3691   001DE0  C024  F01A         	movff	motor_action_return@l,right_135@mL
  3692   001DE4  C025  F01B         	movff	motor_action_return@l+1,right_135@mL+1
  3693   001DE8  C026  F01C         	movff	motor_action_return@r,right_135@mR
  3694   001DEC  C027  F01D         	movff	motor_action_return@r+1,right_135@mR+1
  3695   001DF0  ECC3  F017         	call	_right_135	;wreg free
  3696   001DF4                     
  3697                           ;../dc_motor.c: 346:             stop(l,r);
  3698   001DF4  C024  F01A         	movff	motor_action_return@l,stop@mL
  3699   001DF8  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3700   001DFC  C026  F01C         	movff	motor_action_return@r,stop@mR
  3701   001E00  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3702   001E04  EC57  F019         	call	_stop	;wreg free
  3703   001E08                     
  3704                           ;../dc_motor.c: 347:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3705   001E08  0E29               	movlw	41
  3706   001E0A  6E29               	movwf	(??_motor_action_return+1)^0,c
  3707   001E0C  0E96               	movlw	150
  3708   001E0E  6E28               	movwf	??_motor_action_return^0,c
  3709   001E10  0E7F               	movlw	127
  3710   001E12                     u2377:
  3711   001E12  2EE8               	decfsz	wreg,f,c
  3712   001E14  D7FE               	bra	u2377
  3713   001E16  2E28               	decfsz	??_motor_action_return^0,f,c
  3714   001E18  D7FC               	bra	u2377
  3715   001E1A  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3716   001E1C  D7FA               	bra	u2377
  3717   001E1E  F000               	nop	
  3718                           
  3719                           ;../dc_motor.c: 348:             right_135(l,r);
  3720   001E20  C024  F01A         	movff	motor_action_return@l,right_135@mL
  3721   001E24  C025  F01B         	movff	motor_action_return@l+1,right_135@mL+1
  3722   001E28  C026  F01C         	movff	motor_action_return@r,right_135@mR
  3723   001E2C  C027  F01D         	movff	motor_action_return@r+1,right_135@mR+1
  3724   001E30  ECC3  F017         	call	_right_135	;wreg free
  3725                           
  3726                           ;../dc_motor.c: 349:             stop(l,r);
  3727   001E34  C024  F01A         	movff	motor_action_return@l,stop@mL
  3728   001E38  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3729   001E3C  C026  F01C         	movff	motor_action_return@r,stop@mR
  3730   001E40  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3731   001E44  EC57  F019         	call	_stop	;wreg free
  3732                           
  3733                           ;../dc_motor.c: 350:             break;
  3734   001E48  EF76  F00F         	goto	l379
  3735   001E4C                     l3523:
  3736                           
  3737                           ;../dc_motor.c: 352:             stop(l,r);
  3738   001E4C  C024  F01A         	movff	motor_action_return@l,stop@mL
  3739   001E50  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  3740   001E54  C026  F01C         	movff	motor_action_return@r,stop@mR
  3741   001E58  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  3742   001E5C  EC57  F019         	call	_stop	;wreg free
  3743                           
  3744                           ;../dc_motor.c: 353:             reverse_onesquare(l,r);
  3745   001E60  C024  F01A         	movff	motor_action_return@l,reverse_onesquare@mL
  3746   001E64  C025  F01B         	movff	motor_action_return@l+1,reverse_onesquare@mL+1
  3747   001E68  C026  F01C         	movff	motor_action_return@r,reverse_onesquare@mR
  3748   001E6C  C027  F01D         	movff	motor_action_return@r+1,reverse_onesquare@mR+1
  3749   001E70  EC14  F018         	call	_reverse_onesquare	;wreg free
  3750   001E74                     
  3751                           ;../dc_motor.c: 354:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3752   001E74  0E29               	movlw	41
  3753   001E76  6E29               	movwf	(??_motor_action_return+1)^0,c
  3754   001E78  0E96               	movlw	150
  3755   001E7A  6E28               	movwf	??_motor_action_return^0,c
  3756   001E7C  0E7F               	movlw	127
  3757   001E7E                     u2387:
  3758   001E7E  2EE8               	decfsz	wreg,f,c
  3759   001E80  D7FE               	bra	u2387
  3760   001E82  2E28               	decfsz	??_motor_action_return^0,f,c
  3761   001E84  D7FC               	bra	u2387
  3762   001E86  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  3763   001E88  D7FA               	bra	u2387
  3764   001E8A  F000               	nop	
  3765   001E8C  EFD6  F00D         	goto	l3481
  3766   001E90                     l3531:
  3767   001E90  C022  F028         	movff	motor_action_return@color,??_motor_action_return
  3768   001E94  C023  F029         	movff	motor_action_return@color+1,??_motor_action_return+1
  3769                           
  3770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3771                           ; Switch size 1, requested type "simple"
  3772                           ; Number of cases is 1, Range of values is 0 to 0
  3773                           ; switch strategies available:
  3774                           ; Name         Instructions Cycles
  3775                           ; simple_byte            4     3 (average)
  3776                           ;	Chosen strategy is simple_byte
  3777   001E98  5029               	movf	(??_motor_action_return+1)^0,w,c
  3778   001E9A  0A00               	xorlw	0	; case 0
  3779   001E9C  B4D8               	btfsc	status,2,c
  3780   001E9E  EF53  F00F         	goto	l4139
  3781   001EA2  EF76  F00F         	goto	l379
  3782   001EA6                     l4139:
  3783                           
  3784                           ; Switch size 1, requested type "simple"
  3785                           ; Number of cases is 8, Range of values is 0 to 7
  3786                           ; switch strategies available:
  3787                           ; Name         Instructions Cycles
  3788                           ; simple_byte           25    13 (average)
  3789                           ;	Chosen strategy is simple_byte
  3790   001EA6  5028               	movf	??_motor_action_return^0,w,c
  3791   001EA8  0A00               	xorlw	0	; case 0
  3792   001EAA  B4D8               	btfsc	status,2,c
  3793   001EAC  EF26  F00F         	goto	l3523
  3794   001EB0  0A01               	xorlw	1	; case 1
  3795   001EB2  B4D8               	btfsc	status,2,c
  3796   001EB4  EFAC  F00D         	goto	l3475
  3797   001EB8  0A03               	xorlw	3	; case 2
  3798   001EBA  B4D8               	btfsc	status,2,c
  3799   001EBC  EFE2  F00D         	goto	l3483
  3800   001EC0  0A01               	xorlw	1	; case 3
  3801   001EC2  B4D8               	btfsc	status,2,c
  3802   001EC4  EF38  F00E         	goto	l3493
  3803   001EC8  0A07               	xorlw	7	; case 4
  3804   001ECA  B4D8               	btfsc	status,2,c
  3805   001ECC  EF64  F00E         	goto	l3501
  3806   001ED0  0A01               	xorlw	1	; case 5
  3807   001ED2  B4D8               	btfsc	status,2,c
  3808   001ED4  EF8E  F00E         	goto	l3503
  3809   001ED8  0A03               	xorlw	3	; case 6
  3810   001EDA  B4D8               	btfsc	status,2,c
  3811   001EDC  EFB8  F00E         	goto	l3505
  3812   001EE0  0A01               	xorlw	1	; case 7
  3813   001EE2  B4D8               	btfsc	status,2,c
  3814   001EE4  EFDA  F00E         	goto	l3513
  3815   001EE8  EF76  F00F         	goto	l379
  3816   001EEC                     l379:
  3817   001EEC  0012               	return		;funcret
  3818   001EEE                     __end_of_motor_action_return:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _spin_180 *****************
  3822 ;; Defined at:
  3823 ;;		line 167 in file "../dc_motor.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3826 ;;		 -> main@motorL(9), 
  3827 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3828 ;;		 -> main@motorR(9), 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  i               2   31[COMRAM] int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;Total ram usage:        8 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 3
  3847 ;; This function calls:
  3848 ;;		_setMotorPWM
  3849 ;; This function is called by:
  3850 ;;		_main
  3851 ;;		_motor_action_return
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text15
  3856   002EE4                     __ptext15:
  3857                           	callstack 0
  3858   002EE4                     _spin_180:
  3859                           	callstack 27
  3860   002EE4                     
  3861                           ;../dc_motor.c: 167: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 168: {;../dc_motor.c: 169:     mL->direction = 1;
  3862   002EE4  EE20 F001          	lfsr	2,1
  3863   002EE8  501A               	movf	spin_180@mL^0,w,c
  3864   002EEA  26D9               	addwf	fsr2l,f,c
  3865   002EEC  501B               	movf	(spin_180@mL+1)^0,w,c
  3866   002EEE  22DA               	addwfc	fsr2h,f,c
  3867   002EF0  0E01               	movlw	1
  3868   002EF2  6EDF               	movwf	indf2,c
  3869                           
  3870                           ;../dc_motor.c: 170:     mR->direction = 0;
  3871   002EF4  EE20 F001          	lfsr	2,1
  3872   002EF8  501C               	movf	spin_180@mR^0,w,c
  3873   002EFA  26D9               	addwf	fsr2l,f,c
  3874   002EFC  501D               	movf	(spin_180@mR+1)^0,w,c
  3875   002EFE  22DA               	addwfc	fsr2h,f,c
  3876   002F00  0E00               	movlw	0
  3877   002F02  6EDF               	movwf	indf2,c
  3878   002F04                     
  3879                           ;../dc_motor.c: 171:     for (int i = 0;i<50;i = i + 2)
  3880   002F04  0E00               	movlw	0
  3881   002F06  6E21               	movwf	(spin_180@i+1)^0,c
  3882   002F08  0E00               	movlw	0
  3883   002F0A  6E20               	movwf	spin_180@i^0,c
  3884   002F0C                     l3089:
  3885                           
  3886                           ;../dc_motor.c: 172:     {;../dc_motor.c: 173:         mL->power = i;
  3887   002F0C  C01A  FFD9         	movff	spin_180@mL,fsr2l
  3888   002F10  C01B  FFDA         	movff	spin_180@mL+1,fsr2h
  3889   002F14  C020  FFDF         	movff	spin_180@i,indf2
  3890   002F18                     
  3891                           ;../dc_motor.c: 174:         mR->power = 50 + i;
  3892   002F18  5020               	movf	spin_180@i^0,w,c
  3893   002F1A  0F32               	addlw	50
  3894   002F1C  C01C  FFD9         	movff	spin_180@mR,fsr2l
  3895   002F20  C01D  FFDA         	movff	spin_180@mR+1,fsr2h
  3896   002F24  6EDF               	movwf	indf2,c
  3897   002F26                     
  3898                           ;../dc_motor.c: 175:         setMotorPWM(mL);
  3899   002F26  C01A  F00F         	movff	spin_180@mL,setMotorPWM@m
  3900   002F2A  C01B  F010         	movff	spin_180@mL+1,setMotorPWM@m+1
  3901   002F2E  ECB6  F010         	call	_setMotorPWM	;wreg free
  3902   002F32                     
  3903                           ;../dc_motor.c: 176:         setMotorPWM(mR);
  3904   002F32  C01C  F00F         	movff	spin_180@mR,setMotorPWM@m
  3905   002F36  C01D  F010         	movff	spin_180@mR+1,setMotorPWM@m+1
  3906   002F3A  ECB6  F010         	call	_setMotorPWM	;wreg free
  3907   002F3E                     
  3908                           ;../dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3909   002F3E  0E35               	movlw	53
  3910   002F40                     u2397:
  3911   002F40  2EE8               	decfsz	wreg,f,c
  3912   002F42  D7FE               	bra	u2397
  3913   002F44  F000               	nop	
  3914   002F46                     
  3915                           ;../dc_motor.c: 178:     }
  3916   002F46  0E02               	movlw	2
  3917   002F48  2420               	addwf	spin_180@i^0,w,c
  3918   002F4A  6E20               	movwf	spin_180@i^0,c
  3919   002F4C  0E00               	movlw	0
  3920   002F4E  2021               	addwfc	(spin_180@i+1)^0,w,c
  3921   002F50  6E21               	movwf	(spin_180@i+1)^0,c
  3922   002F52  BE21               	btfsc	(spin_180@i+1)^0,7,c
  3923   002F54  EFB5  F017         	goto	u1641
  3924   002F58  5021               	movf	(spin_180@i+1)^0,w,c
  3925   002F5A  E109               	bnz	u1640
  3926   002F5C  0E32               	movlw	50
  3927   002F5E  5C20               	subwf	spin_180@i^0,w,c
  3928   002F60  A0D8               	btfss	status,0,c
  3929   002F62  EFB5  F017         	goto	u1641
  3930   002F66  EFB7  F017         	goto	u1640
  3931   002F6A                     u1641:
  3932   002F6A  EF86  F017         	goto	l3089
  3933   002F6E                     u1640:
  3934   002F6E                     
  3935                           ;../dc_motor.c: 179:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3936   002F6E  0E18               	movlw	24
  3937   002F70  6E1F               	movwf	(??_spin_180+1)^0,c
  3938   002F72  0E8A               	movlw	138
  3939   002F74  6E1E               	movwf	??_spin_180^0,c
  3940   002F76  0EE8               	movlw	232
  3941   002F78                     u2407:
  3942   002F78  2EE8               	decfsz	wreg,f,c
  3943   002F7A  D7FE               	bra	u2407
  3944   002F7C  2E1E               	decfsz	??_spin_180^0,f,c
  3945   002F7E  D7FC               	bra	u2407
  3946   002F80  2E1F               	decfsz	(??_spin_180+1)^0,f,c
  3947   002F82  D7FA               	bra	u2407
  3948   002F84  0012               	return		;funcret
  3949   002F86                     __end_of_spin_180:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _motor_action *****************
  3953 ;; Defined at:
  3954 ;;		line 213 in file "../dc_motor.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  color           2   33[COMRAM] unsigned int 
  3957 ;;  l               2   35[COMRAM] PTR struct DC_motor
  3958 ;;		 -> main@motorL(9), 
  3959 ;;  r               2   37[COMRAM] PTR struct DC_motor
  3960 ;;		 -> main@motorR(9), 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:        8 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 4
  3979 ;; This function calls:
  3980 ;;		_forward
  3981 ;;		_left_135
  3982 ;;		_left_90
  3983 ;;		_reverse_fromcard
  3984 ;;		_reverse_onesquare
  3985 ;;		_right_135
  3986 ;;		_right_90
  3987 ;;		_stop
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text16
  3994   0012B4                     __ptext16:
  3995                           	callstack 0
  3996   0012B4                     _motor_action:
  3997                           	callstack 26
  3998   0012B4                     
  3999                           ;../dc_motor.c: 213: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 214: {;../dc_motor.c: 215:     switch (color){
  4000   0012B4  EF62  F00B         	goto	l3619
  4001   0012B8                     l3539:
  4002                           
  4003                           ;../dc_motor.c: 217:             reverse_fromcard(l,r);
  4004   0012B8  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4005   0012BC  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4006   0012C0  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4007   0012C4  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4008   0012C8  EC07  F019         	call	_reverse_fromcard	;wreg free
  4009                           
  4010                           ;../dc_motor.c: 218:             stop(l,r);
  4011   0012CC  C024  F01A         	movff	motor_action@l,stop@mL
  4012   0012D0  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4013   0012D4  C026  F01C         	movff	motor_action@r,stop@mR
  4014   0012D8  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4015   0012DC  EC57  F019         	call	_stop	;wreg free
  4016   0012E0                     l3541:
  4017                           
  4018                           ;../dc_motor.c: 219:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4019   0012E0  0E29               	movlw	41
  4020   0012E2  6E29               	movwf	(??_motor_action+1)^0,c
  4021   0012E4  0E96               	movlw	150
  4022   0012E6  6E28               	movwf	??_motor_action^0,c
  4023   0012E8  0E7F               	movlw	127
  4024   0012EA                     u2417:
  4025   0012EA  2EE8               	decfsz	wreg,f,c
  4026   0012EC  D7FE               	bra	u2417
  4027   0012EE  2E28               	decfsz	??_motor_action^0,f,c
  4028   0012F0  D7FC               	bra	u2417
  4029   0012F2  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4030   0012F4  D7FA               	bra	u2417
  4031   0012F6  F000               	nop	
  4032   0012F8                     
  4033                           ;../dc_motor.c: 220:             right_90(l,r);
  4034   0012F8  C024  F01A         	movff	motor_action@l,right_90@mL
  4035   0012FC  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  4036   001300  C026  F01C         	movff	motor_action@r,right_90@mR
  4037   001304  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  4038   001308  ECCE  F016         	call	_right_90	;wreg free
  4039   00130C                     
  4040                           ;../dc_motor.c: 221:             stop(l,r);
  4041   00130C  C024  F01A         	movff	motor_action@l,stop@mL
  4042   001310  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4043   001314  C026  F01C         	movff	motor_action@r,stop@mR
  4044   001318  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4045   00131C  EC57  F019         	call	_stop	;wreg free
  4046   001320                     
  4047                           ;../dc_motor.c: 222:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4048   001320  0E29               	movlw	41
  4049   001322  6E29               	movwf	(??_motor_action+1)^0,c
  4050   001324  0E96               	movlw	150
  4051   001326  6E28               	movwf	??_motor_action^0,c
  4052   001328  0E7F               	movlw	127
  4053   00132A                     u2427:
  4054   00132A  2EE8               	decfsz	wreg,f,c
  4055   00132C  D7FE               	bra	u2427
  4056   00132E  2E28               	decfsz	??_motor_action^0,f,c
  4057   001330  D7FC               	bra	u2427
  4058   001332  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4059   001334  D7FA               	bra	u2427
  4060   001336  F000               	nop	
  4061                           
  4062                           ;../dc_motor.c: 223:             right_90(l,r);
  4063   001338  C024  F01A         	movff	motor_action@l,right_90@mL
  4064   00133C  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  4065   001340  C026  F01C         	movff	motor_action@r,right_90@mR
  4066   001344  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  4067   001348  ECCE  F016         	call	_right_90	;wreg free
  4068                           
  4069                           ;../dc_motor.c: 224:             stop(l,r);
  4070   00134C  C024  F01A         	movff	motor_action@l,stop@mL
  4071   001350  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4072   001354  C026  F01C         	movff	motor_action@r,stop@mR
  4073   001358  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4074   00135C  EC57  F019         	call	_stop	;wreg free
  4075                           
  4076                           ;../dc_motor.c: 225:             break;
  4077   001360  EF94  F00B         	goto	l365
  4078   001364                     l3549:
  4079                           
  4080                           ;../dc_motor.c: 227:             reverse_fromcard(l,r);
  4081   001364  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4082   001368  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4083   00136C  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4084   001370  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4085   001374  EC07  F019         	call	_reverse_fromcard	;wreg free
  4086                           
  4087                           ;../dc_motor.c: 228:             stop(l,r);
  4088   001378  C024  F01A         	movff	motor_action@l,stop@mL
  4089   00137C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4090   001380  C026  F01C         	movff	motor_action@r,stop@mR
  4091   001384  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4092   001388  EC57  F019         	call	_stop	;wreg free
  4093   00138C                     l3551:
  4094                           
  4095                           ;../dc_motor.c: 229:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4096   00138C  0E29               	movlw	41
  4097   00138E  6E29               	movwf	(??_motor_action+1)^0,c
  4098   001390  0E96               	movlw	150
  4099   001392  6E28               	movwf	??_motor_action^0,c
  4100   001394  0E7F               	movlw	127
  4101   001396                     u2437:
  4102   001396  2EE8               	decfsz	wreg,f,c
  4103   001398  D7FE               	bra	u2437
  4104   00139A  2E28               	decfsz	??_motor_action^0,f,c
  4105   00139C  D7FC               	bra	u2437
  4106   00139E  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4107   0013A0  D7FA               	bra	u2437
  4108   0013A2  F000               	nop	
  4109   0013A4                     
  4110                           ;../dc_motor.c: 230:             left_90(l,r);
  4111   0013A4  C024  F01A         	movff	motor_action@l,left_90@mL
  4112   0013A8  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4113   0013AC  C026  F01C         	movff	motor_action@r,left_90@mR
  4114   0013B0  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4115   0013B4  EC20  F017         	call	_left_90	;wreg free
  4116   0013B8                     l3555:
  4117                           
  4118                           ;../dc_motor.c: 231:             stop(l,r);
  4119   0013B8  C024  F01A         	movff	motor_action@l,stop@mL
  4120   0013BC  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4121   0013C0  C026  F01C         	movff	motor_action@r,stop@mR
  4122   0013C4  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4123   0013C8  EC57  F019         	call	_stop	;wreg free
  4124                           
  4125                           ;../dc_motor.c: 232:             break;
  4126   0013CC  EF94  F00B         	goto	l365
  4127   0013D0                     l3557:
  4128                           
  4129                           ;../dc_motor.c: 234:             reverse_fromcard(l,r);
  4130   0013D0  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4131   0013D4  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4132   0013D8  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4133   0013DC  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4134   0013E0  EC07  F019         	call	_reverse_fromcard	;wreg free
  4135                           
  4136                           ;../dc_motor.c: 235:             stop(l,r);
  4137   0013E4  C024  F01A         	movff	motor_action@l,stop@mL
  4138   0013E8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4139   0013EC  C026  F01C         	movff	motor_action@r,stop@mR
  4140   0013F0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4141   0013F4  EC57  F019         	call	_stop	;wreg free
  4142   0013F8                     
  4143                           ;../dc_motor.c: 236:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4144   0013F8  0E29               	movlw	41
  4145   0013FA  6E29               	movwf	(??_motor_action+1)^0,c
  4146   0013FC  0E96               	movlw	150
  4147   0013FE  6E28               	movwf	??_motor_action^0,c
  4148   001400  0E7F               	movlw	127
  4149   001402                     u2447:
  4150   001402  2EE8               	decfsz	wreg,f,c
  4151   001404  D7FE               	bra	u2447
  4152   001406  2E28               	decfsz	??_motor_action^0,f,c
  4153   001408  D7FC               	bra	u2447
  4154   00140A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4155   00140C  D7FA               	bra	u2447
  4156   00140E  F000               	nop	
  4157   001410                     
  4158                           ;../dc_motor.c: 237:             left_90(l,r);
  4159   001410  C024  F01A         	movff	motor_action@l,left_90@mL
  4160   001414  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4161   001418  C026  F01C         	movff	motor_action@r,left_90@mR
  4162   00141C  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4163   001420  EC20  F017         	call	_left_90	;wreg free
  4164   001424                     
  4165                           ;../dc_motor.c: 238:             stop(l,r);
  4166   001424  C024  F01A         	movff	motor_action@l,stop@mL
  4167   001428  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4168   00142C  C026  F01C         	movff	motor_action@r,stop@mR
  4169   001430  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4170   001434  EC57  F019         	call	_stop	;wreg free
  4171   001438                     
  4172                           ;../dc_motor.c: 239:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4173   001438  0E29               	movlw	41
  4174   00143A  6E29               	movwf	(??_motor_action+1)^0,c
  4175   00143C  0E96               	movlw	150
  4176   00143E  6E28               	movwf	??_motor_action^0,c
  4177   001440  0E7F               	movlw	127
  4178   001442                     u2457:
  4179   001442  2EE8               	decfsz	wreg,f,c
  4180   001444  D7FE               	bra	u2457
  4181   001446  2E28               	decfsz	??_motor_action^0,f,c
  4182   001448  D7FC               	bra	u2457
  4183   00144A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4184   00144C  D7FA               	bra	u2457
  4185   00144E  F000               	nop	
  4186                           
  4187                           ;../dc_motor.c: 240:             left_90(l,r);
  4188   001450  C024  F01A         	movff	motor_action@l,left_90@mL
  4189   001454  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4190   001458  C026  F01C         	movff	motor_action@r,left_90@mR
  4191   00145C  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4192   001460  EC20  F017         	call	_left_90	;wreg free
  4193                           
  4194                           ;../dc_motor.c: 241:             stop(l,r);
  4195   001464  C024  F01A         	movff	motor_action@l,stop@mL
  4196   001468  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4197   00146C  C026  F01C         	movff	motor_action@r,stop@mR
  4198   001470  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4199   001474  EC57  F019         	call	_stop	;wreg free
  4200                           
  4201                           ;../dc_motor.c: 242:             break;
  4202   001478  EF94  F00B         	goto	l365
  4203   00147C                     l3567:
  4204                           
  4205                           ;../dc_motor.c: 244:             reverse_onesquare(l,r);
  4206   00147C  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  4207   001480  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  4208   001484  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  4209   001488  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  4210   00148C  EC14  F018         	call	_reverse_onesquare	;wreg free
  4211                           
  4212                           ;../dc_motor.c: 245:             stop(l,r);
  4213   001490  C024  F01A         	movff	motor_action@l,stop@mL
  4214   001494  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4215   001498  C026  F01C         	movff	motor_action@r,stop@mR
  4216   00149C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4217   0014A0  EC57  F019         	call	_stop	;wreg free
  4218   0014A4  EF70  F009         	goto	l3541
  4219   0014A8                     l3577:
  4220                           
  4221                           ;../dc_motor.c: 254:             reverse_onesquare(l,r);
  4222   0014A8  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  4223   0014AC  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  4224   0014B0  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  4225   0014B4  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  4226   0014B8  EC14  F018         	call	_reverse_onesquare	;wreg free
  4227                           
  4228                           ;../dc_motor.c: 255:             stop(l,r);
  4229   0014BC  C024  F01A         	movff	motor_action@l,stop@mL
  4230   0014C0  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4231   0014C4  C026  F01C         	movff	motor_action@r,stop@mR
  4232   0014C8  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4233   0014CC  EC57  F019         	call	_stop	;wreg free
  4234   0014D0  EFC6  F009         	goto	l3551
  4235   0014D4                     l3585:
  4236                           
  4237                           ;../dc_motor.c: 261:             reverse_fromcard(l,r);
  4238   0014D4  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4239   0014D8  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4240   0014DC  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4241   0014E0  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4242   0014E4  EC07  F019         	call	_reverse_fromcard	;wreg free
  4243                           
  4244                           ;../dc_motor.c: 262:             stop(l,r);
  4245   0014E8  C024  F01A         	movff	motor_action@l,stop@mL
  4246   0014EC  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4247   0014F0  C026  F01C         	movff	motor_action@r,stop@mR
  4248   0014F4  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4249   0014F8  EC57  F019         	call	_stop	;wreg free
  4250   0014FC                     
  4251                           ;../dc_motor.c: 263:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4252   0014FC  0E29               	movlw	41
  4253   0014FE  6E29               	movwf	(??_motor_action+1)^0,c
  4254   001500  0E96               	movlw	150
  4255   001502  6E28               	movwf	??_motor_action^0,c
  4256   001504  0E7F               	movlw	127
  4257   001506                     u2467:
  4258   001506  2EE8               	decfsz	wreg,f,c
  4259   001508  D7FE               	bra	u2467
  4260   00150A  2E28               	decfsz	??_motor_action^0,f,c
  4261   00150C  D7FC               	bra	u2467
  4262   00150E  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4263   001510  D7FA               	bra	u2467
  4264   001512  F000               	nop	
  4265   001514                     
  4266                           ;../dc_motor.c: 264:             right_135(l,r);
  4267   001514  C024  F01A         	movff	motor_action@l,right_135@mL
  4268   001518  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  4269   00151C  C026  F01C         	movff	motor_action@r,right_135@mR
  4270   001520  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  4271   001524  ECC3  F017         	call	_right_135	;wreg free
  4272   001528                     
  4273                           ;../dc_motor.c: 265:             stop(l,r);
  4274   001528  C024  F01A         	movff	motor_action@l,stop@mL
  4275   00152C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4276   001530  C026  F01C         	movff	motor_action@r,stop@mR
  4277   001534  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4278   001538  EC57  F019         	call	_stop	;wreg free
  4279   00153C                     
  4280                           ;../dc_motor.c: 266:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4281   00153C  0E29               	movlw	41
  4282   00153E  6E29               	movwf	(??_motor_action+1)^0,c
  4283   001540  0E96               	movlw	150
  4284   001542  6E28               	movwf	??_motor_action^0,c
  4285   001544  0E7F               	movlw	127
  4286   001546                     u2477:
  4287   001546  2EE8               	decfsz	wreg,f,c
  4288   001548  D7FE               	bra	u2477
  4289   00154A  2E28               	decfsz	??_motor_action^0,f,c
  4290   00154C  D7FC               	bra	u2477
  4291   00154E  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4292   001550  D7FA               	bra	u2477
  4293   001552  F000               	nop	
  4294                           
  4295                           ;../dc_motor.c: 267:             right_135(l,r);
  4296   001554  C024  F01A         	movff	motor_action@l,right_135@mL
  4297   001558  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  4298   00155C  C026  F01C         	movff	motor_action@r,right_135@mR
  4299   001560  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  4300   001564  ECC3  F017         	call	_right_135	;wreg free
  4301                           
  4302                           ;../dc_motor.c: 268:             stop(l,r);
  4303   001568  C024  F01A         	movff	motor_action@l,stop@mL
  4304   00156C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4305   001570  C026  F01C         	movff	motor_action@r,stop@mR
  4306   001574  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4307   001578  EC57  F019         	call	_stop	;wreg free
  4308                           
  4309                           ;../dc_motor.c: 269:             break;
  4310   00157C  EF94  F00B         	goto	l365
  4311   001580                     l3595:
  4312                           
  4313                           ;../dc_motor.c: 271:             reverse_fromcard(l,r);
  4314   001580  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4315   001584  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4316   001588  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4317   00158C  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4318   001590  EC07  F019         	call	_reverse_fromcard	;wreg free
  4319                           
  4320                           ;../dc_motor.c: 272:             stop(l,r);
  4321   001594  C024  F01A         	movff	motor_action@l,stop@mL
  4322   001598  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4323   00159C  C026  F01C         	movff	motor_action@r,stop@mR
  4324   0015A0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4325   0015A4  EC57  F019         	call	_stop	;wreg free
  4326   0015A8                     
  4327                           ;../dc_motor.c: 273:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4328   0015A8  0E29               	movlw	41
  4329   0015AA  6E29               	movwf	(??_motor_action+1)^0,c
  4330   0015AC  0E96               	movlw	150
  4331   0015AE  6E28               	movwf	??_motor_action^0,c
  4332   0015B0  0E7F               	movlw	127
  4333   0015B2                     u2487:
  4334   0015B2  2EE8               	decfsz	wreg,f,c
  4335   0015B4  D7FE               	bra	u2487
  4336   0015B6  2E28               	decfsz	??_motor_action^0,f,c
  4337   0015B8  D7FC               	bra	u2487
  4338   0015BA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4339   0015BC  D7FA               	bra	u2487
  4340   0015BE  F000               	nop	
  4341   0015C0                     
  4342                           ;../dc_motor.c: 274:             left_135(l,r);
  4343   0015C0  C024  F01A         	movff	motor_action@l,left_135@mL
  4344   0015C4  C025  F01B         	movff	motor_action@l+1,left_135@mL+1
  4345   0015C8  C026  F01C         	movff	motor_action@r,left_135@mR
  4346   0015CC  C027  F01D         	movff	motor_action@r+1,left_135@mR+1
  4347   0015D0  EC65  F018         	call	_left_135	;wreg free
  4348   0015D4  EFDC  F009         	goto	l3555
  4349   0015D8                     l3603:
  4350                           
  4351                           ;../dc_motor.c: 278:             reverse_fromcard(l,r);
  4352   0015D8  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  4353   0015DC  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  4354   0015E0  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  4355   0015E4  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  4356   0015E8  EC07  F019         	call	_reverse_fromcard	;wreg free
  4357                           
  4358                           ;../dc_motor.c: 279:             stop(l,r);
  4359   0015EC  C024  F01A         	movff	motor_action@l,stop@mL
  4360   0015F0  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4361   0015F4  C026  F01C         	movff	motor_action@r,stop@mR
  4362   0015F8  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4363   0015FC  EC57  F019         	call	_stop	;wreg free
  4364   001600                     
  4365                           ;../dc_motor.c: 280:             _delay((unsigned long)((500)*(64000000/4000.0)));
  4366   001600  0E29               	movlw	41
  4367   001602  6E29               	movwf	(??_motor_action+1)^0,c
  4368   001604  0E96               	movlw	150
  4369   001606  6E28               	movwf	??_motor_action^0,c
  4370   001608  0E7F               	movlw	127
  4371   00160A                     u2497:
  4372   00160A  2EE8               	decfsz	wreg,f,c
  4373   00160C  D7FE               	bra	u2497
  4374   00160E  2E28               	decfsz	??_motor_action^0,f,c
  4375   001610  D7FC               	bra	u2497
  4376   001612  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4377   001614  D7FA               	bra	u2497
  4378   001616  F000               	nop	
  4379   001618                     
  4380                           ;../dc_motor.c: 281:             left_90(l,r);
  4381   001618  C024  F01A         	movff	motor_action@l,left_90@mL
  4382   00161C  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4383   001620  C026  F01C         	movff	motor_action@r,left_90@mR
  4384   001624  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4385   001628  EC20  F017         	call	_left_90	;wreg free
  4386   00162C                     
  4387                           ;../dc_motor.c: 282:             stop(l,r);
  4388   00162C  C024  F01A         	movff	motor_action@l,stop@mL
  4389   001630  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4390   001634  C026  F01C         	movff	motor_action@r,stop@mR
  4391   001638  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4392   00163C  EC57  F019         	call	_stop	;wreg free
  4393   001640                     
  4394                           ;../dc_motor.c: 283:             _delay((unsigned long)((800)*(64000000/4000.0)));
  4395   001640  0E41               	movlw	65
  4396   001642  6E29               	movwf	(??_motor_action+1)^0,c
  4397   001644  0EF0               	movlw	240
  4398   001646  6E28               	movwf	??_motor_action^0,c
  4399   001648  0E33               	movlw	51
  4400   00164A                     u2507:
  4401   00164A  2EE8               	decfsz	wreg,f,c
  4402   00164C  D7FE               	bra	u2507
  4403   00164E  2E28               	decfsz	??_motor_action^0,f,c
  4404   001650  D7FC               	bra	u2507
  4405   001652  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4406   001654  D7FA               	bra	u2507
  4407   001656  F000               	nop	
  4408                           
  4409                           ;../dc_motor.c: 284:             left_90(l,r);
  4410   001658  C024  F01A         	movff	motor_action@l,left_90@mL
  4411   00165C  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  4412   001660  C026  F01C         	movff	motor_action@r,left_90@mR
  4413   001664  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  4414   001668  EC20  F017         	call	_left_90	;wreg free
  4415                           
  4416                           ;../dc_motor.c: 285:             stop(l,r);
  4417   00166C  C024  F01A         	movff	motor_action@l,stop@mL
  4418   001670  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4419   001674  C026  F01C         	movff	motor_action@r,stop@mR
  4420   001678  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4421   00167C  EC57  F019         	call	_stop	;wreg free
  4422   001680                     l363:
  4423                           
  4424                           ;../dc_motor.c: 287:             stop(l,r);
  4425   001680  C024  F01A         	movff	motor_action@l,stop@mL
  4426   001684  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  4427   001688  C026  F01C         	movff	motor_action@r,stop@mR
  4428   00168C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  4429   001690  EC57  F019         	call	_stop	;wreg free
  4430                           
  4431                           ;../dc_motor.c: 288:             forward(l,r);
  4432   001694  C024  F01A         	movff	motor_action@l,forward@mL
  4433   001698  C025  F01B         	movff	motor_action@l+1,forward@mL+1
  4434   00169C  C026  F01C         	movff	motor_action@r,forward@mR
  4435   0016A0  C027  F01D         	movff	motor_action@r+1,forward@mR+1
  4436   0016A4  ECB6  F018         	call	_forward	;wreg free
  4437   0016A8                     
  4438                           ;../dc_motor.c: 289:             _delay((unsigned long)((400)*(64000000/4000.0)));
  4439   0016A8  0E21               	movlw	33
  4440   0016AA  6E29               	movwf	(??_motor_action+1)^0,c
  4441   0016AC  0E78               	movlw	120
  4442   0016AE  6E28               	movwf	??_motor_action^0,c
  4443   0016B0  0E98               	movlw	152
  4444   0016B2                     u2517:
  4445   0016B2  2EE8               	decfsz	wreg,f,c
  4446   0016B4  D7FE               	bra	u2517
  4447   0016B6  2E28               	decfsz	??_motor_action^0,f,c
  4448   0016B8  D7FC               	bra	u2517
  4449   0016BA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  4450   0016BC  D7FA               	bra	u2517
  4451   0016BE  D000               	nop2	
  4452   0016C0  EFDC  F009         	goto	l3555
  4453   0016C4                     l3619:
  4454   0016C4  C022  F028         	movff	motor_action@color,??_motor_action
  4455   0016C8  C023  F029         	movff	motor_action@color+1,??_motor_action+1
  4456                           
  4457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4458                           ; Switch size 1, requested type "simple"
  4459                           ; Number of cases is 1, Range of values is 0 to 0
  4460                           ; switch strategies available:
  4461                           ; Name         Instructions Cycles
  4462                           ; simple_byte            4     3 (average)
  4463                           ;	Chosen strategy is simple_byte
  4464   0016CC  5029               	movf	(??_motor_action+1)^0,w,c
  4465   0016CE  0A00               	xorlw	0	; case 0
  4466   0016D0  B4D8               	btfsc	status,2,c
  4467   0016D2  EF6D  F00B         	goto	l4141
  4468   0016D6  EF94  F00B         	goto	l365
  4469   0016DA                     l4141:
  4470                           
  4471                           ; Switch size 1, requested type "simple"
  4472                           ; Number of cases is 9, Range of values is 0 to 8
  4473                           ; switch strategies available:
  4474                           ; Name         Instructions Cycles
  4475                           ; simple_byte           28    15 (average)
  4476                           ;	Chosen strategy is simple_byte
  4477   0016DA  5028               	movf	??_motor_action^0,w,c
  4478   0016DC  0A00               	xorlw	0	; case 0
  4479   0016DE  B4D8               	btfsc	status,2,c
  4480   0016E0  EF40  F00B         	goto	l363
  4481   0016E4  0A01               	xorlw	1	; case 1
  4482   0016E6  B4D8               	btfsc	status,2,c
  4483   0016E8  EF5C  F009         	goto	l3539
  4484   0016EC  0A03               	xorlw	3	; case 2
  4485   0016EE  B4D8               	btfsc	status,2,c
  4486   0016F0  EFB2  F009         	goto	l3549
  4487   0016F4  0A01               	xorlw	1	; case 3
  4488   0016F6  B4D8               	btfsc	status,2,c
  4489   0016F8  EFE8  F009         	goto	l3557
  4490   0016FC  0A07               	xorlw	7	; case 4
  4491   0016FE  B4D8               	btfsc	status,2,c
  4492   001700  EF3E  F00A         	goto	l3567
  4493   001704  0A01               	xorlw	1	; case 5
  4494   001706  B4D8               	btfsc	status,2,c
  4495   001708  EF54  F00A         	goto	l3577
  4496   00170C  0A03               	xorlw	3	; case 6
  4497   00170E  B4D8               	btfsc	status,2,c
  4498   001710  EF6A  F00A         	goto	l3585
  4499   001714  0A01               	xorlw	1	; case 7
  4500   001716  B4D8               	btfsc	status,2,c
  4501   001718  EFC0  F00A         	goto	l3595
  4502   00171C  0A0F               	xorlw	15	; case 8
  4503   00171E  B4D8               	btfsc	status,2,c
  4504   001720  EFEC  F00A         	goto	l3603
  4505   001724  EF94  F00B         	goto	l365
  4506   001728                     l365:
  4507   001728  0012               	return		;funcret
  4508   00172A                     __end_of_motor_action:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function _stop *****************
  4512 ;; Defined at:
  4513 ;;		line 61 in file "../dc_motor.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4516 ;;		 -> main@motorL(9), 
  4517 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4518 ;;		 -> main@motorR(9), 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  i               2   30[COMRAM] int 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4534 ;;Total ram usage:        7 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 3
  4537 ;; This function calls:
  4538 ;;		_setMotorPWM
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;;		_motor_action
  4542 ;;		_motor_action_return
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text17
  4547   0032AE                     __ptext17:
  4548                           	callstack 0
  4549   0032AE                     _stop:
  4550                           	callstack 27
  4551   0032AE                     
  4552                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  4553   0032AE  EE20 F001          	lfsr	2,1
  4554   0032B2  501A               	movf	stop@mL^0,w,c
  4555   0032B4  26D9               	addwf	fsr2l,f,c
  4556   0032B6  501B               	movf	(stop@mL+1)^0,w,c
  4557   0032B8  22DA               	addwfc	fsr2h,f,c
  4558   0032BA  0E00               	movlw	0
  4559   0032BC  6EDF               	movwf	indf2,c
  4560                           
  4561                           ;../dc_motor.c: 64:     mR->direction = 0;
  4562   0032BE  EE20 F001          	lfsr	2,1
  4563   0032C2  501C               	movf	stop@mR^0,w,c
  4564   0032C4  26D9               	addwf	fsr2l,f,c
  4565   0032C6  501D               	movf	(stop@mR+1)^0,w,c
  4566   0032C8  22DA               	addwfc	fsr2h,f,c
  4567   0032CA  0E00               	movlw	0
  4568   0032CC  6EDF               	movwf	indf2,c
  4569   0032CE                     
  4570                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  4571   0032CE  0E00               	movlw	0
  4572   0032D0  6E20               	movwf	(stop@i+1)^0,c
  4573   0032D2  0E05               	movlw	5
  4574   0032D4  6E1F               	movwf	stop@i^0,c
  4575   0032D6                     l3069:
  4576                           
  4577                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  4578   0032D6  C01A  FFD9         	movff	stop@mL,fsr2l
  4579   0032DA  C01B  FFDA         	movff	stop@mL+1,fsr2h
  4580   0032DE  C01F  FFDF         	movff	stop@i,indf2
  4581                           
  4582                           ;../dc_motor.c: 68:         mR->power = i;
  4583   0032E2  C01C  FFD9         	movff	stop@mR,fsr2l
  4584   0032E6  C01D  FFDA         	movff	stop@mR+1,fsr2h
  4585   0032EA  C01F  FFDF         	movff	stop@i,indf2
  4586   0032EE                     
  4587                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  4588   0032EE  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  4589   0032F2  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  4590   0032F6  ECB6  F010         	call	_setMotorPWM	;wreg free
  4591   0032FA                     
  4592                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  4593   0032FA  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  4594   0032FE  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  4595   003302  ECB6  F010         	call	_setMotorPWM	;wreg free
  4596   003306                     
  4597                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  4598   003306  0ED0               	movlw	208
  4599   003308  6E1E               	movwf	??_stop^0,c
  4600   00330A  0ECA               	movlw	202
  4601   00330C                     u2527:
  4602   00330C  2EE8               	decfsz	wreg,f,c
  4603   00330E  D7FE               	bra	u2527
  4604   003310  2E1E               	decfsz	??_stop^0,f,c
  4605   003312  D7FC               	bra	u2527
  4606   003314                     
  4607                           ;../dc_motor.c: 72:     }
  4608   003314  0EFF               	movlw	255
  4609   003316  241F               	addwf	stop@i^0,w,c
  4610   003318  6E1F               	movwf	stop@i^0,c
  4611   00331A  0EFF               	movlw	255
  4612   00331C  2020               	addwfc	(stop@i+1)^0,w,c
  4613   00331E  6E20               	movwf	(stop@i+1)^0,c
  4614   003320  BE20               	btfsc	(stop@i+1)^0,7,c
  4615   003322  EF9D  F019         	goto	u1630
  4616   003326  5020               	movf	(stop@i+1)^0,w,c
  4617   003328  E106               	bnz	u1631
  4618   00332A  041F               	decf	stop@i^0,w,c
  4619   00332C  B0D8               	btfsc	status,0,c
  4620   00332E  EF9B  F019         	goto	u1631
  4621   003332  EF9D  F019         	goto	u1630
  4622   003336                     u1631:
  4623   003336  EF6B  F019         	goto	l3069
  4624   00333A                     u1630:
  4625   00333A  0012               	return		;funcret
  4626   00333C                     __end_of_stop:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _right_90 *****************
  4630 ;; Defined at:
  4631 ;;		line 137 in file "../dc_motor.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4634 ;;		 -> main@motorL(9), 
  4635 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4636 ;;		 -> main@motorR(9), 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  i               2   31[COMRAM] int 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;Total ram usage:        8 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 3
  4655 ;; This function calls:
  4656 ;;		_setMotorPWM
  4657 ;; This function is called by:
  4658 ;;		_motor_action
  4659 ;;		_motor_action_return
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text18
  4664   002D9C                     __ptext18:
  4665                           	callstack 0
  4666   002D9C                     _right_90:
  4667                           	callstack 26
  4668   002D9C                     
  4669                           ;../dc_motor.c: 137: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 138: {;../dc_motor.c: 139:     mL->direction = 1;
  4670   002D9C  EE20 F001          	lfsr	2,1
  4671   002DA0  501A               	movf	right_90@mL^0,w,c
  4672   002DA2  26D9               	addwf	fsr2l,f,c
  4673   002DA4  501B               	movf	(right_90@mL+1)^0,w,c
  4674   002DA6  22DA               	addwfc	fsr2h,f,c
  4675   002DA8  0E01               	movlw	1
  4676   002DAA  6EDF               	movwf	indf2,c
  4677                           
  4678                           ;../dc_motor.c: 140:     mR->direction = 0;
  4679   002DAC  EE20 F001          	lfsr	2,1
  4680   002DB0  501C               	movf	right_90@mR^0,w,c
  4681   002DB2  26D9               	addwf	fsr2l,f,c
  4682   002DB4  501D               	movf	(right_90@mR+1)^0,w,c
  4683   002DB6  22DA               	addwfc	fsr2h,f,c
  4684   002DB8  0E00               	movlw	0
  4685   002DBA  6EDF               	movwf	indf2,c
  4686   002DBC                     
  4687                           ;../dc_motor.c: 141:     for (int i = 0;i<251;i = i + 2)
  4688   002DBC  0E00               	movlw	0
  4689   002DBE  6E21               	movwf	(right_90@i+1)^0,c
  4690   002DC0  0E00               	movlw	0
  4691   002DC2  6E20               	movwf	right_90@i^0,c
  4692   002DC4                     l3157:
  4693                           
  4694                           ;../dc_motor.c: 142:     {;../dc_motor.c: 143:         mL->power = i;
  4695   002DC4  C01A  FFD9         	movff	right_90@mL,fsr2l
  4696   002DC8  C01B  FFDA         	movff	right_90@mL+1,fsr2h
  4697   002DCC  C020  FFDF         	movff	right_90@i,indf2
  4698   002DD0                     
  4699                           ;../dc_motor.c: 144:         mR->power = 50 + i;
  4700   002DD0  5020               	movf	right_90@i^0,w,c
  4701   002DD2  0F32               	addlw	50
  4702   002DD4  C01C  FFD9         	movff	right_90@mR,fsr2l
  4703   002DD8  C01D  FFDA         	movff	right_90@mR+1,fsr2h
  4704   002DDC  6EDF               	movwf	indf2,c
  4705   002DDE                     
  4706                           ;../dc_motor.c: 145:         setMotorPWM(mL);
  4707   002DDE  C01A  F00F         	movff	right_90@mL,setMotorPWM@m
  4708   002DE2  C01B  F010         	movff	right_90@mL+1,setMotorPWM@m+1
  4709   002DE6  ECB6  F010         	call	_setMotorPWM	;wreg free
  4710   002DEA                     
  4711                           ;../dc_motor.c: 146:         setMotorPWM(mR);
  4712   002DEA  C01C  F00F         	movff	right_90@mR,setMotorPWM@m
  4713   002DEE  C01D  F010         	movff	right_90@mR+1,setMotorPWM@m+1
  4714   002DF2  ECB6  F010         	call	_setMotorPWM	;wreg free
  4715   002DF6                     
  4716                           ;../dc_motor.c: 147:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4717   002DF6  0E35               	movlw	53
  4718   002DF8                     u2537:
  4719   002DF8  2EE8               	decfsz	wreg,f,c
  4720   002DFA  D7FE               	bra	u2537
  4721   002DFC  F000               	nop	
  4722   002DFE                     
  4723                           ;../dc_motor.c: 148:     }
  4724   002DFE  0E02               	movlw	2
  4725   002E00  2420               	addwf	right_90@i^0,w,c
  4726   002E02  6E20               	movwf	right_90@i^0,c
  4727   002E04  0E00               	movlw	0
  4728   002E06  2021               	addwfc	(right_90@i+1)^0,w,c
  4729   002E08  6E21               	movwf	(right_90@i+1)^0,c
  4730   002E0A  BE21               	btfsc	(right_90@i+1)^0,7,c
  4731   002E0C  EF11  F017         	goto	u1671
  4732   002E10  5021               	movf	(right_90@i+1)^0,w,c
  4733   002E12  E109               	bnz	u1670
  4734   002E14  0EFB               	movlw	251
  4735   002E16  5C20               	subwf	right_90@i^0,w,c
  4736   002E18  A0D8               	btfss	status,0,c
  4737   002E1A  EF11  F017         	goto	u1671
  4738   002E1E  EF13  F017         	goto	u1670
  4739   002E22                     u1671:
  4740   002E22  EFE2  F016         	goto	l3157
  4741   002E26                     u1670:
  4742   002E26                     
  4743                           ;../dc_motor.c: 149:     _delay((unsigned long)((165)*(64000000/4000.0)));
  4744   002E26  0E0E               	movlw	14
  4745   002E28  6E1F               	movwf	(??_right_90+1)^0,c
  4746   002E2A  0E65               	movlw	101
  4747   002E2C  6E1E               	movwf	??_right_90^0,c
  4748   002E2E  0E87               	movlw	135
  4749   002E30                     u2547:
  4750   002E30  2EE8               	decfsz	wreg,f,c
  4751   002E32  D7FE               	bra	u2547
  4752   002E34  2E1E               	decfsz	??_right_90^0,f,c
  4753   002E36  D7FC               	bra	u2547
  4754   002E38  2E1F               	decfsz	(??_right_90+1)^0,f,c
  4755   002E3A  D7FA               	bra	u2547
  4756   002E3C  F000               	nop	
  4757   002E3E  0012               	return		;funcret
  4758   002E40                     __end_of_right_90:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _right_135 *****************
  4762 ;; Defined at:
  4763 ;;		line 182 in file "../dc_motor.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4766 ;;		 -> main@motorL(9), 
  4767 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4768 ;;		 -> main@motorR(9), 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  i               2   31[COMRAM] int 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;Total ram usage:        8 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 3
  4787 ;; This function calls:
  4788 ;;		_setMotorPWM
  4789 ;; This function is called by:
  4790 ;;		_motor_action
  4791 ;;		_motor_action_return
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text19
  4796   002F86                     __ptext19:
  4797                           	callstack 0
  4798   002F86                     _right_135:
  4799                           	callstack 26
  4800   002F86                     
  4801                           ;../dc_motor.c: 182: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 183: {;../dc_motor.c: 184:     mL->direction = 1;
  4802   002F86  EE20 F001          	lfsr	2,1
  4803   002F8A  501A               	movf	right_135@mL^0,w,c
  4804   002F8C  26D9               	addwf	fsr2l,f,c
  4805   002F8E  501B               	movf	(right_135@mL+1)^0,w,c
  4806   002F90  22DA               	addwfc	fsr2h,f,c
  4807   002F92  0E01               	movlw	1
  4808   002F94  6EDF               	movwf	indf2,c
  4809                           
  4810                           ;../dc_motor.c: 185:     mR->direction = 0;
  4811   002F96  EE20 F001          	lfsr	2,1
  4812   002F9A  501C               	movf	right_135@mR^0,w,c
  4813   002F9C  26D9               	addwf	fsr2l,f,c
  4814   002F9E  501D               	movf	(right_135@mR+1)^0,w,c
  4815   002FA0  22DA               	addwfc	fsr2h,f,c
  4816   002FA2  0E00               	movlw	0
  4817   002FA4  6EDF               	movwf	indf2,c
  4818   002FA6                     
  4819                           ;../dc_motor.c: 186:     for (int i = 0;i<300;i = i + 2)
  4820   002FA6  0E00               	movlw	0
  4821   002FA8  6E21               	movwf	(right_135@i+1)^0,c
  4822   002FAA  0E00               	movlw	0
  4823   002FAC  6E20               	movwf	right_135@i^0,c
  4824   002FAE                     l3205:
  4825                           
  4826                           ;../dc_motor.c: 187:     {;../dc_motor.c: 188:         mL->power = i;
  4827   002FAE  C01A  FFD9         	movff	right_135@mL,fsr2l
  4828   002FB2  C01B  FFDA         	movff	right_135@mL+1,fsr2h
  4829   002FB6  C020  FFDF         	movff	right_135@i,indf2
  4830   002FBA                     
  4831                           ;../dc_motor.c: 189:         mR->power = 50 + i;
  4832   002FBA  5020               	movf	right_135@i^0,w,c
  4833   002FBC  0F32               	addlw	50
  4834   002FBE  C01C  FFD9         	movff	right_135@mR,fsr2l
  4835   002FC2  C01D  FFDA         	movff	right_135@mR+1,fsr2h
  4836   002FC6  6EDF               	movwf	indf2,c
  4837   002FC8                     
  4838                           ;../dc_motor.c: 190:         setMotorPWM(mL);
  4839   002FC8  C01A  F00F         	movff	right_135@mL,setMotorPWM@m
  4840   002FCC  C01B  F010         	movff	right_135@mL+1,setMotorPWM@m+1
  4841   002FD0  ECB6  F010         	call	_setMotorPWM	;wreg free
  4842   002FD4                     
  4843                           ;../dc_motor.c: 191:         setMotorPWM(mR);
  4844   002FD4  C01C  F00F         	movff	right_135@mR,setMotorPWM@m
  4845   002FD8  C01D  F010         	movff	right_135@mR+1,setMotorPWM@m+1
  4846   002FDC  ECB6  F010         	call	_setMotorPWM	;wreg free
  4847   002FE0                     
  4848                           ;../dc_motor.c: 192:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4849   002FE0  0E35               	movlw	53
  4850   002FE2                     u2557:
  4851   002FE2  2EE8               	decfsz	wreg,f,c
  4852   002FE4  D7FE               	bra	u2557
  4853   002FE6  F000               	nop	
  4854   002FE8                     
  4855                           ;../dc_motor.c: 193:     }
  4856   002FE8  0E02               	movlw	2
  4857   002FEA  2420               	addwf	right_135@i^0,w,c
  4858   002FEC  6E20               	movwf	right_135@i^0,c
  4859   002FEE  0E00               	movlw	0
  4860   002FF0  2021               	addwfc	(right_135@i+1)^0,w,c
  4861   002FF2  6E21               	movwf	(right_135@i+1)^0,c
  4862   002FF4  BE21               	btfsc	(right_135@i+1)^0,7,c
  4863   002FF6  EF06  F018         	goto	u1691
  4864   002FFA  0E2C               	movlw	44
  4865   002FFC  5C20               	subwf	right_135@i^0,w,c
  4866   002FFE  0E01               	movlw	1
  4867   003000  5821               	subwfb	(right_135@i+1)^0,w,c
  4868   003002  A0D8               	btfss	status,0,c
  4869   003004  EF06  F018         	goto	u1691
  4870   003008  EF08  F018         	goto	u1690
  4871   00300C                     u1691:
  4872   00300C  EFD7  F017         	goto	l3205
  4873   003010                     u1690:
  4874   003010                     
  4875                           ;../dc_motor.c: 194:     _delay((unsigned long)((230)*(64000000/4000.0)));
  4876   003010  0E13               	movlw	19
  4877   003012  6E1F               	movwf	(??_right_135+1)^0,c
  4878   003014  0EAC               	movlw	172
  4879   003016  6E1E               	movwf	??_right_135^0,c
  4880   003018  0E2A               	movlw	42
  4881   00301A                     u2567:
  4882   00301A  2EE8               	decfsz	wreg,f,c
  4883   00301C  D7FE               	bra	u2567
  4884   00301E  2E1E               	decfsz	??_right_135^0,f,c
  4885   003020  D7FC               	bra	u2567
  4886   003022  2E1F               	decfsz	(??_right_135+1)^0,f,c
  4887   003024  D7FA               	bra	u2567
  4888   003026  0012               	return		;funcret
  4889   003028                     __end_of_right_135:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _reverse_onesquare *****************
  4893 ;; Defined at:
  4894 ;;		line 122 in file "../dc_motor.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4897 ;;		 -> main@motorL(9), 
  4898 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4899 ;;		 -> main@motorR(9), 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  i               2   31[COMRAM] int 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;Total ram usage:        8 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 3
  4918 ;; This function calls:
  4919 ;;		_setMotorPWM
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;;		_motor_action
  4923 ;;		_motor_action_return
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text20
  4928   003028                     __ptext20:
  4929                           	callstack 0
  4930   003028                     _reverse_onesquare:
  4931                           	callstack 27
  4932   003028                     
  4933                           ;../dc_motor.c: 122: void reverse_onesquare (struct DC_motor *mL, struct DC_motor *mR);.
      +                          ./dc_motor.c: 123: {;../dc_motor.c: 124:     mL->direction = 0;
  4934   003028  EE20 F001          	lfsr	2,1
  4935   00302C  501A               	movf	reverse_onesquare@mL^0,w,c
  4936   00302E  26D9               	addwf	fsr2l,f,c
  4937   003030  501B               	movf	(reverse_onesquare@mL+1)^0,w,c
  4938   003032  22DA               	addwfc	fsr2h,f,c
  4939   003034  0E00               	movlw	0
  4940   003036  6EDF               	movwf	indf2,c
  4941                           
  4942                           ;../dc_motor.c: 125:     mR->direction = 0;
  4943   003038  EE20 F001          	lfsr	2,1
  4944   00303C  501C               	movf	reverse_onesquare@mR^0,w,c
  4945   00303E  26D9               	addwf	fsr2l,f,c
  4946   003040  501D               	movf	(reverse_onesquare@mR+1)^0,w,c
  4947   003042  22DA               	addwfc	fsr2h,f,c
  4948   003044  0E00               	movlw	0
  4949   003046  6EDF               	movwf	indf2,c
  4950   003048                     
  4951                           ;../dc_motor.c: 126:     for (int i=0;i<9;i=i + 2)
  4952   003048  0E00               	movlw	0
  4953   00304A  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  4954   00304C  0E00               	movlw	0
  4955   00304E  6E20               	movwf	reverse_onesquare@i^0,c
  4956   003050                     l3047:
  4957                           
  4958                           ;../dc_motor.c: 127:     {;../dc_motor.c: 128:         mL->power = i;
  4959   003050  C01A  FFD9         	movff	reverse_onesquare@mL,fsr2l
  4960   003054  C01B  FFDA         	movff	reverse_onesquare@mL+1,fsr2h
  4961   003058  C020  FFDF         	movff	reverse_onesquare@i,indf2
  4962                           
  4963                           ;../dc_motor.c: 129:         mR->power = i;
  4964   00305C  C01C  FFD9         	movff	reverse_onesquare@mR,fsr2l
  4965   003060  C01D  FFDA         	movff	reverse_onesquare@mR+1,fsr2h
  4966   003064  C020  FFDF         	movff	reverse_onesquare@i,indf2
  4967   003068                     
  4968                           ;../dc_motor.c: 130:         setMotorPWM(mL);
  4969   003068  C01A  F00F         	movff	reverse_onesquare@mL,setMotorPWM@m
  4970   00306C  C01B  F010         	movff	reverse_onesquare@mL+1,setMotorPWM@m+1
  4971   003070  ECB6  F010         	call	_setMotorPWM	;wreg free
  4972   003074                     
  4973                           ;../dc_motor.c: 131:         setMotorPWM(mR);
  4974   003074  C01C  F00F         	movff	reverse_onesquare@mR,setMotorPWM@m
  4975   003078  C01D  F010         	movff	reverse_onesquare@mR+1,setMotorPWM@m+1
  4976   00307C  ECB6  F010         	call	_setMotorPWM	;wreg free
  4977   003080                     
  4978                           ;../dc_motor.c: 132:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4979   003080  0E35               	movlw	53
  4980   003082                     u2577:
  4981   003082  2EE8               	decfsz	wreg,f,c
  4982   003084  D7FE               	bra	u2577
  4983   003086  F000               	nop	
  4984   003088                     
  4985                           ;../dc_motor.c: 133:     }
  4986   003088  0E02               	movlw	2
  4987   00308A  2420               	addwf	reverse_onesquare@i^0,w,c
  4988   00308C  6E20               	movwf	reverse_onesquare@i^0,c
  4989   00308E  0E00               	movlw	0
  4990   003090  2021               	addwfc	(reverse_onesquare@i+1)^0,w,c
  4991   003092  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  4992   003094  BE21               	btfsc	(reverse_onesquare@i+1)^0,7,c
  4993   003096  EF56  F018         	goto	u1621
  4994   00309A  5021               	movf	(reverse_onesquare@i+1)^0,w,c
  4995   00309C  E109               	bnz	u1620
  4996   00309E  0E09               	movlw	9
  4997   0030A0  5C20               	subwf	reverse_onesquare@i^0,w,c
  4998   0030A2  A0D8               	btfss	status,0,c
  4999   0030A4  EF56  F018         	goto	u1621
  5000   0030A8  EF58  F018         	goto	u1620
  5001   0030AC                     u1621:
  5002   0030AC  EF28  F018         	goto	l3047
  5003   0030B0                     u1620:
  5004   0030B0                     
  5005                           ;../dc_motor.c: 134:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  5006   0030B0  0E5A               	movlw	90
  5007   0030B2  6E1F               	movwf	(??_reverse_onesquare+1)^0,c
  5008   0030B4  0E49               	movlw	73
  5009   0030B6  6E1E               	movwf	??_reverse_onesquare^0,c
  5010   0030B8  0EE7               	movlw	231
  5011   0030BA                     u2587:
  5012   0030BA  2EE8               	decfsz	wreg,f,c
  5013   0030BC  D7FE               	bra	u2587
  5014   0030BE  2E1E               	decfsz	??_reverse_onesquare^0,f,c
  5015   0030C0  D7FC               	bra	u2587
  5016   0030C2  2E1F               	decfsz	(??_reverse_onesquare+1)^0,f,c
  5017   0030C4  D7FA               	bra	u2587
  5018   0030C6  F000               	nop	
  5019   0030C8  0012               	return		;funcret
  5020   0030CA                     __end_of_reverse_onesquare:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _reverse_fromcard *****************
  5024 ;; Defined at:
  5025 ;;		line 107 in file "../dc_motor.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5028 ;;		 -> main@motorL(9), 
  5029 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5030 ;;		 -> main@motorR(9), 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  i               2   31[COMRAM] int 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;Total ram usage:        8 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 3
  5049 ;; This function calls:
  5050 ;;		_setMotorPWM
  5051 ;; This function is called by:
  5052 ;;		_motor_action
  5053 ;;		_motor_action_return
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text21
  5058   00320E                     __ptext21:
  5059                           	callstack 0
  5060   00320E                     _reverse_fromcard:
  5061                           	callstack 26
  5062   00320E                     
  5063                           ;../dc_motor.c: 107: void reverse_fromcard (struct DC_motor *mL, struct DC_motor *mR);..
      +                          /dc_motor.c: 108: {;../dc_motor.c: 109:     mL->direction = 0;
  5064   00320E  EE20 F001          	lfsr	2,1
  5065   003212  501A               	movf	reverse_fromcard@mL^0,w,c
  5066   003214  26D9               	addwf	fsr2l,f,c
  5067   003216  501B               	movf	(reverse_fromcard@mL+1)^0,w,c
  5068   003218  22DA               	addwfc	fsr2h,f,c
  5069   00321A  0E00               	movlw	0
  5070   00321C  6EDF               	movwf	indf2,c
  5071                           
  5072                           ;../dc_motor.c: 110:     mR->direction = 0;
  5073   00321E  EE20 F001          	lfsr	2,1
  5074   003222  501C               	movf	reverse_fromcard@mR^0,w,c
  5075   003224  26D9               	addwf	fsr2l,f,c
  5076   003226  501D               	movf	(reverse_fromcard@mR+1)^0,w,c
  5077   003228  22DA               	addwfc	fsr2h,f,c
  5078   00322A  0E00               	movlw	0
  5079   00322C  6EDF               	movwf	indf2,c
  5080   00322E                     
  5081                           ;../dc_motor.c: 111:     for (int i = 0;i < 9;i = i + 2)
  5082   00322E  0E00               	movlw	0
  5083   003230  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  5084   003232  0E00               	movlw	0
  5085   003234  6E20               	movwf	reverse_fromcard@i^0,c
  5086   003236                     l3135:
  5087                           
  5088                           ;../dc_motor.c: 112:     {;../dc_motor.c: 113:         mL->power = i;
  5089   003236  C01A  FFD9         	movff	reverse_fromcard@mL,fsr2l
  5090   00323A  C01B  FFDA         	movff	reverse_fromcard@mL+1,fsr2h
  5091   00323E  C020  FFDF         	movff	reverse_fromcard@i,indf2
  5092                           
  5093                           ;../dc_motor.c: 114:         mR->power = i;
  5094   003242  C01C  FFD9         	movff	reverse_fromcard@mR,fsr2l
  5095   003246  C01D  FFDA         	movff	reverse_fromcard@mR+1,fsr2h
  5096   00324A  C020  FFDF         	movff	reverse_fromcard@i,indf2
  5097   00324E                     
  5098                           ;../dc_motor.c: 115:         setMotorPWM(mL);
  5099   00324E  C01A  F00F         	movff	reverse_fromcard@mL,setMotorPWM@m
  5100   003252  C01B  F010         	movff	reverse_fromcard@mL+1,setMotorPWM@m+1
  5101   003256  ECB6  F010         	call	_setMotorPWM	;wreg free
  5102   00325A                     
  5103                           ;../dc_motor.c: 116:         setMotorPWM(mR);
  5104   00325A  C01C  F00F         	movff	reverse_fromcard@mR,setMotorPWM@m
  5105   00325E  C01D  F010         	movff	reverse_fromcard@mR+1,setMotorPWM@m+1
  5106   003262  ECB6  F010         	call	_setMotorPWM	;wreg free
  5107   003266                     
  5108                           ;../dc_motor.c: 117:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5109   003266  0E35               	movlw	53
  5110   003268                     u2597:
  5111   003268  2EE8               	decfsz	wreg,f,c
  5112   00326A  D7FE               	bra	u2597
  5113   00326C  F000               	nop	
  5114   00326E                     
  5115                           ;../dc_motor.c: 118:     }
  5116   00326E  0E02               	movlw	2
  5117   003270  2420               	addwf	reverse_fromcard@i^0,w,c
  5118   003272  6E20               	movwf	reverse_fromcard@i^0,c
  5119   003274  0E00               	movlw	0
  5120   003276  2021               	addwfc	(reverse_fromcard@i+1)^0,w,c
  5121   003278  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  5122   00327A  BE21               	btfsc	(reverse_fromcard@i+1)^0,7,c
  5123   00327C  EF49  F019         	goto	u1661
  5124   003280  5021               	movf	(reverse_fromcard@i+1)^0,w,c
  5125   003282  E109               	bnz	u1660
  5126   003284  0E09               	movlw	9
  5127   003286  5C20               	subwf	reverse_fromcard@i^0,w,c
  5128   003288  A0D8               	btfss	status,0,c
  5129   00328A  EF49  F019         	goto	u1661
  5130   00328E  EF4B  F019         	goto	u1660
  5131   003292                     u1661:
  5132   003292  EF1B  F019         	goto	l3135
  5133   003296                     u1660:
  5134   003296                     
  5135                           ;../dc_motor.c: 119:     _delay((unsigned long)((300)*(64000000/4000.0)));
  5136   003296  0E19               	movlw	25
  5137   003298  6E1F               	movwf	(??_reverse_fromcard+1)^0,c
  5138   00329A  0E5A               	movlw	90
  5139   00329C  6E1E               	movwf	??_reverse_fromcard^0,c
  5140   00329E  0EB2               	movlw	178
  5141   0032A0                     u2607:
  5142   0032A0  2EE8               	decfsz	wreg,f,c
  5143   0032A2  D7FE               	bra	u2607
  5144   0032A4  2E1E               	decfsz	??_reverse_fromcard^0,f,c
  5145   0032A6  D7FC               	bra	u2607
  5146   0032A8  2E1F               	decfsz	(??_reverse_fromcard+1)^0,f,c
  5147   0032AA  D7FA               	bra	u2607
  5148   0032AC  0012               	return		;funcret
  5149   0032AE                     __end_of_reverse_fromcard:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _left_90 *****************
  5153 ;; Defined at:
  5154 ;;		line 152 in file "../dc_motor.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5157 ;;		 -> main@motorL(9), 
  5158 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5159 ;;		 -> main@motorR(9), 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  i               2   31[COMRAM] int 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;Total ram usage:        8 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; Hardware stack levels required when called: 3
  5178 ;; This function calls:
  5179 ;;		_setMotorPWM
  5180 ;; This function is called by:
  5181 ;;		_motor_action
  5182 ;;		_motor_action_return
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text22
  5187   002E40                     __ptext22:
  5188                           	callstack 0
  5189   002E40                     _left_90:
  5190                           	callstack 26
  5191   002E40                     
  5192                           ;../dc_motor.c: 152: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 153: {;../dc_motor.c: 154:     mL->direction = 0;
  5193   002E40  EE20 F001          	lfsr	2,1
  5194   002E44  501A               	movf	left_90@mL^0,w,c
  5195   002E46  26D9               	addwf	fsr2l,f,c
  5196   002E48  501B               	movf	(left_90@mL+1)^0,w,c
  5197   002E4A  22DA               	addwfc	fsr2h,f,c
  5198   002E4C  0E00               	movlw	0
  5199   002E4E  6EDF               	movwf	indf2,c
  5200                           
  5201                           ;../dc_motor.c: 155:     mR->direction = 1;
  5202   002E50  EE20 F001          	lfsr	2,1
  5203   002E54  501C               	movf	left_90@mR^0,w,c
  5204   002E56  26D9               	addwf	fsr2l,f,c
  5205   002E58  501D               	movf	(left_90@mR+1)^0,w,c
  5206   002E5A  22DA               	addwfc	fsr2h,f,c
  5207   002E5C  0E01               	movlw	1
  5208   002E5E  6EDF               	movwf	indf2,c
  5209   002E60                     
  5210                           ;../dc_motor.c: 156:     for (int i = 0;i<301;i = i + 2)
  5211   002E60  0E00               	movlw	0
  5212   002E62  6E21               	movwf	(left_90@i+1)^0,c
  5213   002E64  0E00               	movlw	0
  5214   002E66  6E20               	movwf	left_90@i^0,c
  5215   002E68                     l3181:
  5216                           
  5217                           ;../dc_motor.c: 157:     {;../dc_motor.c: 158:         mL->power = 50 + i;
  5218   002E68  5020               	movf	left_90@i^0,w,c
  5219   002E6A  0F32               	addlw	50
  5220   002E6C  C01A  FFD9         	movff	left_90@mL,fsr2l
  5221   002E70  C01B  FFDA         	movff	left_90@mL+1,fsr2h
  5222   002E74  6EDF               	movwf	indf2,c
  5223   002E76                     
  5224                           ;../dc_motor.c: 159:         mR->power = i;
  5225   002E76  C01C  FFD9         	movff	left_90@mR,fsr2l
  5226   002E7A  C01D  FFDA         	movff	left_90@mR+1,fsr2h
  5227   002E7E  C020  FFDF         	movff	left_90@i,indf2
  5228   002E82                     
  5229                           ;../dc_motor.c: 160:         setMotorPWM(mL);
  5230   002E82  C01A  F00F         	movff	left_90@mL,setMotorPWM@m
  5231   002E86  C01B  F010         	movff	left_90@mL+1,setMotorPWM@m+1
  5232   002E8A  ECB6  F010         	call	_setMotorPWM	;wreg free
  5233   002E8E                     
  5234                           ;../dc_motor.c: 161:         setMotorPWM(mR);
  5235   002E8E  C01C  F00F         	movff	left_90@mR,setMotorPWM@m
  5236   002E92  C01D  F010         	movff	left_90@mR+1,setMotorPWM@m+1
  5237   002E96  ECB6  F010         	call	_setMotorPWM	;wreg free
  5238   002E9A                     
  5239                           ;../dc_motor.c: 162:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5240   002E9A  0E35               	movlw	53
  5241   002E9C                     u2617:
  5242   002E9C  2EE8               	decfsz	wreg,f,c
  5243   002E9E  D7FE               	bra	u2617
  5244   002EA0  F000               	nop	
  5245   002EA2                     
  5246                           ;../dc_motor.c: 163:     }
  5247   002EA2  0E02               	movlw	2
  5248   002EA4  2420               	addwf	left_90@i^0,w,c
  5249   002EA6  6E20               	movwf	left_90@i^0,c
  5250   002EA8  0E00               	movlw	0
  5251   002EAA  2021               	addwfc	(left_90@i+1)^0,w,c
  5252   002EAC  6E21               	movwf	(left_90@i+1)^0,c
  5253   002EAE  BE21               	btfsc	(left_90@i+1)^0,7,c
  5254   002EB0  EF63  F017         	goto	u1681
  5255   002EB4  0E2D               	movlw	45
  5256   002EB6  5C20               	subwf	left_90@i^0,w,c
  5257   002EB8  0E01               	movlw	1
  5258   002EBA  5821               	subwfb	(left_90@i+1)^0,w,c
  5259   002EBC  A0D8               	btfss	status,0,c
  5260   002EBE  EF63  F017         	goto	u1681
  5261   002EC2  EF65  F017         	goto	u1680
  5262   002EC6                     u1681:
  5263   002EC6  EF34  F017         	goto	l3181
  5264   002ECA                     u1680:
  5265   002ECA                     
  5266                           ;../dc_motor.c: 164:     _delay((unsigned long)((195)*(64000000/4000.0)));
  5267   002ECA  0E10               	movlw	16
  5268   002ECC  6E1F               	movwf	(??_left_90+1)^0,c
  5269   002ECE  0ED4               	movlw	212
  5270   002ED0  6E1E               	movwf	??_left_90^0,c
  5271   002ED2  0EE6               	movlw	230
  5272   002ED4                     u2627:
  5273   002ED4  2EE8               	decfsz	wreg,f,c
  5274   002ED6  D7FE               	bra	u2627
  5275   002ED8  2E1E               	decfsz	??_left_90^0,f,c
  5276   002EDA  D7FC               	bra	u2627
  5277   002EDC  2E1F               	decfsz	(??_left_90+1)^0,f,c
  5278   002EDE  D7FA               	bra	u2627
  5279   002EE0  D000               	nop2	
  5280   002EE2  0012               	return		;funcret
  5281   002EE4                     __end_of_left_90:
  5282                           	callstack 0
  5283                           
  5284 ;; *************** function _left_135 *****************
  5285 ;; Defined at:
  5286 ;;		line 198 in file "../dc_motor.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5289 ;;		 -> main@motorL(9), 
  5290 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5291 ;;		 -> main@motorR(9), 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  i               2   31[COMRAM] int 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      void 
  5296 ;; Registers used:
  5297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5306 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5307 ;;Total ram usage:        8 bytes
  5308 ;; Hardware stack levels used: 1
  5309 ;; Hardware stack levels required when called: 3
  5310 ;; This function calls:
  5311 ;;		_setMotorPWM
  5312 ;; This function is called by:
  5313 ;;		_motor_action
  5314 ;;		_motor_action_return
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text23
  5319   0030CA                     __ptext23:
  5320                           	callstack 0
  5321   0030CA                     _left_135:
  5322                           	callstack 26
  5323   0030CA                     
  5324                           ;../dc_motor.c: 198: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 199: {;../dc_motor.c: 200:     mL->direction = 0;
  5325   0030CA  EE20 F001          	lfsr	2,1
  5326   0030CE  501A               	movf	left_135@mL^0,w,c
  5327   0030D0  26D9               	addwf	fsr2l,f,c
  5328   0030D2  501B               	movf	(left_135@mL+1)^0,w,c
  5329   0030D4  22DA               	addwfc	fsr2h,f,c
  5330   0030D6  0E00               	movlw	0
  5331   0030D8  6EDF               	movwf	indf2,c
  5332                           
  5333                           ;../dc_motor.c: 201:     mR->direction = 1;
  5334   0030DA  EE20 F001          	lfsr	2,1
  5335   0030DE  501C               	movf	left_135@mR^0,w,c
  5336   0030E0  26D9               	addwf	fsr2l,f,c
  5337   0030E2  501D               	movf	(left_135@mR+1)^0,w,c
  5338   0030E4  22DA               	addwfc	fsr2h,f,c
  5339   0030E6  0E01               	movlw	1
  5340   0030E8  6EDF               	movwf	indf2,c
  5341   0030EA                     
  5342                           ;../dc_motor.c: 202:     for (int i = 0;i<300;i = i + 2)
  5343   0030EA  0E00               	movlw	0
  5344   0030EC  6E21               	movwf	(left_135@i+1)^0,c
  5345   0030EE  0E00               	movlw	0
  5346   0030F0  6E20               	movwf	left_135@i^0,c
  5347   0030F2                     l3229:
  5348                           
  5349                           ;../dc_motor.c: 203:     {;../dc_motor.c: 204:         mL->power = 50 + i;
  5350   0030F2  5020               	movf	left_135@i^0,w,c
  5351   0030F4  0F32               	addlw	50
  5352   0030F6  C01A  FFD9         	movff	left_135@mL,fsr2l
  5353   0030FA  C01B  FFDA         	movff	left_135@mL+1,fsr2h
  5354   0030FE  6EDF               	movwf	indf2,c
  5355   003100                     
  5356                           ;../dc_motor.c: 205:         mR->power = i;
  5357   003100  C01C  FFD9         	movff	left_135@mR,fsr2l
  5358   003104  C01D  FFDA         	movff	left_135@mR+1,fsr2h
  5359   003108  C020  FFDF         	movff	left_135@i,indf2
  5360   00310C                     
  5361                           ;../dc_motor.c: 206:         setMotorPWM(mL);
  5362   00310C  C01A  F00F         	movff	left_135@mL,setMotorPWM@m
  5363   003110  C01B  F010         	movff	left_135@mL+1,setMotorPWM@m+1
  5364   003114  ECB6  F010         	call	_setMotorPWM	;wreg free
  5365   003118                     
  5366                           ;../dc_motor.c: 207:         setMotorPWM(mR);
  5367   003118  C01C  F00F         	movff	left_135@mR,setMotorPWM@m
  5368   00311C  C01D  F010         	movff	left_135@mR+1,setMotorPWM@m+1
  5369   003120  ECB6  F010         	call	_setMotorPWM	;wreg free
  5370   003124                     
  5371                           ;../dc_motor.c: 208:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5372   003124  0E35               	movlw	53
  5373   003126                     u2637:
  5374   003126  2EE8               	decfsz	wreg,f,c
  5375   003128  D7FE               	bra	u2637
  5376   00312A  F000               	nop	
  5377   00312C                     
  5378                           ;../dc_motor.c: 209:     }
  5379   00312C  0E02               	movlw	2
  5380   00312E  2420               	addwf	left_135@i^0,w,c
  5381   003130  6E20               	movwf	left_135@i^0,c
  5382   003132  0E00               	movlw	0
  5383   003134  2021               	addwfc	(left_135@i+1)^0,w,c
  5384   003136  6E21               	movwf	(left_135@i+1)^0,c
  5385   003138  BE21               	btfsc	(left_135@i+1)^0,7,c
  5386   00313A  EFA8  F018         	goto	u1701
  5387   00313E  0E2C               	movlw	44
  5388   003140  5C20               	subwf	left_135@i^0,w,c
  5389   003142  0E01               	movlw	1
  5390   003144  5821               	subwfb	(left_135@i+1)^0,w,c
  5391   003146  A0D8               	btfss	status,0,c
  5392   003148  EFA8  F018         	goto	u1701
  5393   00314C  EFAA  F018         	goto	u1700
  5394   003150                     u1701:
  5395   003150  EF79  F018         	goto	l3229
  5396   003154                     u1700:
  5397   003154                     
  5398                           ;../dc_motor.c: 210:     _delay((unsigned long)((290)*(64000000/4000.0)));
  5399   003154  0E18               	movlw	24
  5400   003156  6E1F               	movwf	(??_left_135+1)^0,c
  5401   003158  0E8A               	movlw	138
  5402   00315A  6E1E               	movwf	??_left_135^0,c
  5403   00315C  0EE8               	movlw	232
  5404   00315E                     u2647:
  5405   00315E  2EE8               	decfsz	wreg,f,c
  5406   003160  D7FE               	bra	u2647
  5407   003162  2E1E               	decfsz	??_left_135^0,f,c
  5408   003164  D7FC               	bra	u2647
  5409   003166  2E1F               	decfsz	(??_left_135+1)^0,f,c
  5410   003168  D7FA               	bra	u2647
  5411   00316A  0012               	return		;funcret
  5412   00316C                     __end_of_left_135:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _forward *****************
  5416 ;; Defined at:
  5417 ;;		line 77 in file "../dc_motor.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5420 ;;		 -> main@motorL(9), 
  5421 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5422 ;;		 -> main@motorR(9), 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  i               2   31[COMRAM] int 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;Total ram usage:        8 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 3
  5441 ;; This function calls:
  5442 ;;		_setMotorPWM
  5443 ;; This function is called by:
  5444 ;;		_main
  5445 ;;		_motor_action
  5446 ;;		_motor_action_return
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text24
  5451   00316C                     __ptext24:
  5452                           	callstack 0
  5453   00316C                     _forward:
  5454                           	callstack 26
  5455   00316C                     
  5456                           ;../dc_motor.c: 77: void forward(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c
      +                          : 78: {;../dc_motor.c: 79:     mL->direction = 1;
  5457   00316C  EE20 F001          	lfsr	2,1
  5458   003170  501A               	movf	forward@mL^0,w,c
  5459   003172  26D9               	addwf	fsr2l,f,c
  5460   003174  501B               	movf	(forward@mL+1)^0,w,c
  5461   003176  22DA               	addwfc	fsr2h,f,c
  5462   003178  0E01               	movlw	1
  5463   00317A  6EDF               	movwf	indf2,c
  5464                           
  5465                           ;../dc_motor.c: 80:     mR->direction = 1;
  5466   00317C  EE20 F001          	lfsr	2,1
  5467   003180  501C               	movf	forward@mR^0,w,c
  5468   003182  26D9               	addwf	fsr2l,f,c
  5469   003184  501D               	movf	(forward@mR+1)^0,w,c
  5470   003186  22DA               	addwfc	fsr2h,f,c
  5471   003188  0E01               	movlw	1
  5472   00318A  6EDF               	movwf	indf2,c
  5473   00318C                     
  5474                           ;../dc_motor.c: 81:     for (int i = 0;i < 101;i = i + 2)
  5475   00318C  0E00               	movlw	0
  5476   00318E  6E21               	movwf	(forward@i+1)^0,c
  5477   003190  0E00               	movlw	0
  5478   003192  6E20               	movwf	forward@i^0,c
  5479   003194                     l3113:
  5480                           
  5481                           ;../dc_motor.c: 82:     {;../dc_motor.c: 83:         mL->power = i;
  5482   003194  C01A  FFD9         	movff	forward@mL,fsr2l
  5483   003198  C01B  FFDA         	movff	forward@mL+1,fsr2h
  5484   00319C  C020  FFDF         	movff	forward@i,indf2
  5485                           
  5486                           ;../dc_motor.c: 84:         mR->power = i;
  5487   0031A0  C01C  FFD9         	movff	forward@mR,fsr2l
  5488   0031A4  C01D  FFDA         	movff	forward@mR+1,fsr2h
  5489   0031A8  C020  FFDF         	movff	forward@i,indf2
  5490   0031AC                     
  5491                           ;../dc_motor.c: 85:         setMotorPWM(mL);
  5492   0031AC  C01A  F00F         	movff	forward@mL,setMotorPWM@m
  5493   0031B0  C01B  F010         	movff	forward@mL+1,setMotorPWM@m+1
  5494   0031B4  ECB6  F010         	call	_setMotorPWM	;wreg free
  5495   0031B8                     
  5496                           ;../dc_motor.c: 86:         setMotorPWM(mR);
  5497   0031B8  C01C  F00F         	movff	forward@mR,setMotorPWM@m
  5498   0031BC  C01D  F010         	movff	forward@mR+1,setMotorPWM@m+1
  5499   0031C0  ECB6  F010         	call	_setMotorPWM	;wreg free
  5500   0031C4                     
  5501                           ;../dc_motor.c: 87:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  5502   0031C4  0E35               	movlw	53
  5503   0031C6                     u2657:
  5504   0031C6  2EE8               	decfsz	wreg,f,c
  5505   0031C8  D7FE               	bra	u2657
  5506   0031CA  F000               	nop	
  5507   0031CC                     
  5508                           ;../dc_motor.c: 88:     }
  5509   0031CC  0E02               	movlw	2
  5510   0031CE  2420               	addwf	forward@i^0,w,c
  5511   0031D0  6E20               	movwf	forward@i^0,c
  5512   0031D2  0E00               	movlw	0
  5513   0031D4  2021               	addwfc	(forward@i+1)^0,w,c
  5514   0031D6  6E21               	movwf	(forward@i+1)^0,c
  5515   0031D8  BE21               	btfsc	(forward@i+1)^0,7,c
  5516   0031DA  EFF8  F018         	goto	u1651
  5517   0031DE  5021               	movf	(forward@i+1)^0,w,c
  5518   0031E0  E109               	bnz	u1650
  5519   0031E2  0E65               	movlw	101
  5520   0031E4  5C20               	subwf	forward@i^0,w,c
  5521   0031E6  A0D8               	btfss	status,0,c
  5522   0031E8  EFF8  F018         	goto	u1651
  5523   0031EC  EFFA  F018         	goto	u1650
  5524   0031F0                     u1651:
  5525   0031F0  EFCA  F018         	goto	l3113
  5526   0031F4                     u1650:
  5527   0031F4                     
  5528                           ;../dc_motor.c: 89:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5529   0031F4  0E09               	movlw	9
  5530   0031F6  6E1F               	movwf	(??_forward+1)^0,c
  5531   0031F8  0E1E               	movlw	30
  5532   0031FA  6E1E               	movwf	??_forward^0,c
  5533   0031FC  0EE4               	movlw	228
  5534   0031FE                     u2667:
  5535   0031FE  2EE8               	decfsz	wreg,f,c
  5536   003200  D7FE               	bra	u2667
  5537   003202  2E1E               	decfsz	??_forward^0,f,c
  5538   003204  D7FC               	bra	u2667
  5539   003206  2E1F               	decfsz	(??_forward+1)^0,f,c
  5540   003208  D7FA               	bra	u2667
  5541   00320A  D000               	nop2	
  5542   00320C  0012               	return		;funcret
  5543   00320E                     __end_of_forward:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function _setMotorPWM *****************
  5547 ;; Defined at:
  5548 ;;		line 38 in file "../dc_motor.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  m               2   14[COMRAM] PTR struct DC_motor
  5551 ;;		 -> main@motorR(9), main@motorL(9), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  PWMduty         2   23[COMRAM] int 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;Total ram usage:       11 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 2
  5570 ;; This function calls:
  5571 ;;		___awdiv
  5572 ;;		___wmul
  5573 ;; This function is called by:
  5574 ;;		_main
  5575 ;;		_stop
  5576 ;;		_forward
  5577 ;;		_reverse_fromcard
  5578 ;;		_reverse_onesquare
  5579 ;;		_right_90
  5580 ;;		_left_90
  5581 ;;		_spin_180
  5582 ;;		_right_135
  5583 ;;		_left_135
  5584 ;;		_opposite_forward
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text25
  5589   00216C                     __ptext25:
  5590                           	callstack 0
  5591   00216C                     _setMotorPWM:
  5592                           	callstack 27
  5593   00216C                     
  5594                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  5595   00216C  EE20 F001          	lfsr	2,1
  5596   002170  500F               	movf	setMotorPWM@m^0,w,c
  5597   002172  26D9               	addwf	fsr2l,f,c
  5598   002174  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5599   002176  22DA               	addwfc	fsr2h,f,c
  5600   002178  50DF               	movf	indf2,w,c
  5601   00217A  B4D8               	btfsc	status,2,c
  5602   00217C  EFC2  F010         	goto	u1551
  5603   002180  EFC4  F010         	goto	u1550
  5604   002184                     u1551:
  5605   002184  EFF5  F010         	goto	l2961
  5606   002188                     u1550:
  5607   002188                     
  5608                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  5609   002188  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5610   00218C  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5611   002190  50DF               	movf	indf2,w,c
  5612   002192  6E11               	movwf	??_setMotorPWM^0,c
  5613   002194  5011               	movf	??_setMotorPWM^0,w,c
  5614   002196  6E01               	movwf	___wmul@multiplier^0,c
  5615   002198  6A02               	clrf	(___wmul@multiplier+1)^0,c
  5616   00219A  EE20 F007          	lfsr	2,7
  5617   00219E  500F               	movf	setMotorPWM@m^0,w,c
  5618   0021A0  26D9               	addwf	fsr2l,f,c
  5619   0021A2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5620   0021A4  22DA               	addwfc	fsr2h,f,c
  5621   0021A6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  5622   0021AA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  5623   0021AE  ECE5  F01B         	call	___wmul	;wreg free
  5624   0021B2  C001  F007         	movff	?___wmul,___awdiv@dividend
  5625   0021B6  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5626   0021BA  0E00               	movlw	0
  5627   0021BC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5628   0021BE  0E64               	movlw	100
  5629   0021C0  6E09               	movwf	___awdiv@divisor^0,c
  5630   0021C2  EC19  F016         	call	___awdiv	;wreg free
  5631   0021C6  EE20 F007          	lfsr	2,7
  5632   0021CA  500F               	movf	setMotorPWM@m^0,w,c
  5633   0021CC  26D9               	addwf	fsr2l,f,c
  5634   0021CE  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5635   0021D0  22DA               	addwfc	fsr2h,f,c
  5636   0021D2  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  5637   0021D6  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  5638   0021DA  5007               	movf	?___awdiv^0,w,c
  5639   0021DC  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  5640   0021DE  6E18               	movwf	setMotorPWM@PWMduty^0,c
  5641   0021E0  5008               	movf	(?___awdiv+1)^0,w,c
  5642   0021E2  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  5643   0021E4  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  5644                           
  5645                           ;../dc_motor.c: 45:  }
  5646   0021E6  EF18  F011         	goto	l2963
  5647   0021EA                     l2961:
  5648                           
  5649                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  5650   0021EA  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5651   0021EE  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5652   0021F2  50DF               	movf	indf2,w,c
  5653   0021F4  6E11               	movwf	??_setMotorPWM^0,c
  5654   0021F6  5011               	movf	??_setMotorPWM^0,w,c
  5655   0021F8  6E01               	movwf	___wmul@multiplier^0,c
  5656   0021FA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  5657   0021FC  EE20 F007          	lfsr	2,7
  5658   002200  500F               	movf	setMotorPWM@m^0,w,c
  5659   002202  26D9               	addwf	fsr2l,f,c
  5660   002204  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5661   002206  22DA               	addwfc	fsr2h,f,c
  5662   002208  CFDE F003          	movff	postinc2,___wmul@multiplicand
  5663   00220C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  5664   002210  ECE5  F01B         	call	___wmul	;wreg free
  5665   002214  C001  F007         	movff	?___wmul,___awdiv@dividend
  5666   002218  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5667   00221C  0E00               	movlw	0
  5668   00221E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5669   002220  0E64               	movlw	100
  5670   002222  6E09               	movwf	___awdiv@divisor^0,c
  5671   002224  EC19  F016         	call	___awdiv	;wreg free
  5672   002228  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  5673   00222C  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  5674   002230                     l2963:
  5675                           
  5676                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  5677   002230  EE20 F002          	lfsr	2,2
  5678   002234  500F               	movf	setMotorPWM@m^0,w,c
  5679   002236  26D9               	addwf	fsr2l,f,c
  5680   002238  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5681   00223A  22DA               	addwfc	fsr2h,f,c
  5682   00223C  CFDE F011          	movff	postinc2,??_setMotorPWM
  5683   002240  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5684   002244  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5685   002248  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5686   00224C  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  5687   002250                     
  5688                           ;../dc_motor.c: 53:  if (m->direction){
  5689   002250  EE20 F001          	lfsr	2,1
  5690   002254  500F               	movf	setMotorPWM@m^0,w,c
  5691   002256  26D9               	addwf	fsr2l,f,c
  5692   002258  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5693   00225A  22DA               	addwfc	fsr2h,f,c
  5694   00225C  50DF               	movf	indf2,w,c
  5695   00225E  B4D8               	btfsc	status,2,c
  5696   002260  EF34  F011         	goto	u1561
  5697   002264  EF36  F011         	goto	u1560
  5698   002268                     u1561:
  5699   002268  EF6B  F011         	goto	l2969
  5700   00226C                     u1560:
  5701   00226C                     
  5702                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  5703   00226C  EE20 F004          	lfsr	2,4
  5704   002270  500F               	movf	setMotorPWM@m^0,w,c
  5705   002272  26D9               	addwf	fsr2l,f,c
  5706   002274  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5707   002276  22DA               	addwfc	fsr2h,f,c
  5708   002278  CFDE F011          	movff	postinc2,??_setMotorPWM
  5709   00227C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5710   002280  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5711   002284  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5712   002288  EE10 F004          	lfsr	1,4
  5713   00228C  500F               	movf	setMotorPWM@m^0,w,c
  5714   00228E  26E1               	addwf	fsr1l,f,c
  5715   002290  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5716   002292  22E2               	addwfc	fsr1h,f,c
  5717   002294  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  5718   002298  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  5719   00229C  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  5720   0022A0  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  5721   0022A4  50E7               	movf	indf1,w,c
  5722   0022A6  6E15               	movwf	(??_setMotorPWM+4)^0,c
  5723   0022A8  EE10 F006          	lfsr	1,6
  5724   0022AC  500F               	movf	setMotorPWM@m^0,w,c
  5725   0022AE  26E1               	addwf	fsr1l,f,c
  5726   0022B0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5727   0022B2  22E2               	addwfc	fsr1h,f,c
  5728   0022B4  50E7               	movf	indf1,w,c
  5729   0022B6  6E16               	movwf	(??_setMotorPWM+5)^0,c
  5730   0022B8  0E01               	movlw	1
  5731   0022BA  6E17               	movwf	(??_setMotorPWM+6)^0,c
  5732   0022BC  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  5733   0022BE  EF63  F011         	goto	u1574
  5734   0022C2                     u1575:
  5735   0022C2  90D8               	bcf	status,0,c
  5736   0022C4  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  5737   0022C6                     u1574:
  5738   0022C6  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  5739   0022C8  EF61  F011         	goto	u1575
  5740   0022CC  5017               	movf	(??_setMotorPWM+6)^0,w,c
  5741   0022CE  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  5742   0022D0  6EDF               	movwf	indf2,c
  5743                           
  5744                           ;../dc_motor.c: 55:  } else {
  5745   0022D2  EF9F  F011         	goto	l300
  5746   0022D6                     l2969:
  5747                           
  5748                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  5749   0022D6  EE20 F004          	lfsr	2,4
  5750   0022DA  500F               	movf	setMotorPWM@m^0,w,c
  5751   0022DC  26D9               	addwf	fsr2l,f,c
  5752   0022DE  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5753   0022E0  22DA               	addwfc	fsr2h,f,c
  5754   0022E2  CFDE F011          	movff	postinc2,??_setMotorPWM
  5755   0022E6  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5756   0022EA  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5757   0022EE  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5758   0022F2  EE10 F004          	lfsr	1,4
  5759   0022F6  500F               	movf	setMotorPWM@m^0,w,c
  5760   0022F8  26E1               	addwf	fsr1l,f,c
  5761   0022FA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5762   0022FC  22E2               	addwfc	fsr1h,f,c
  5763   0022FE  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  5764   002302  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  5765   002306  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  5766   00230A  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  5767   00230E  50E7               	movf	indf1,w,c
  5768   002310  6E15               	movwf	(??_setMotorPWM+4)^0,c
  5769   002312  EE10 F006          	lfsr	1,6
  5770   002316  500F               	movf	setMotorPWM@m^0,w,c
  5771   002318  26E1               	addwf	fsr1l,f,c
  5772   00231A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5773   00231C  22E2               	addwfc	fsr1h,f,c
  5774   00231E  50E7               	movf	indf1,w,c
  5775   002320  6E16               	movwf	(??_setMotorPWM+5)^0,c
  5776   002322  0E01               	movlw	1
  5777   002324  6E17               	movwf	(??_setMotorPWM+6)^0,c
  5778   002326  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  5779   002328  EF98  F011         	goto	u1584
  5780   00232C                     u1585:
  5781   00232C  90D8               	bcf	status,0,c
  5782   00232E  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  5783   002330                     u1584:
  5784   002330  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  5785   002332  EF96  F011         	goto	u1585
  5786   002336  5017               	movf	(??_setMotorPWM+6)^0,w,c
  5787   002338  0AFF               	xorlw	255
  5788   00233A  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  5789   00233C  6EDF               	movwf	indf2,c
  5790   00233E                     l300:
  5791   00233E  0012               	return		;funcret
  5792   002340                     __end_of_setMotorPWM:
  5793                           	callstack 0
  5794                           
  5795 ;; *************** function ___wmul *****************
  5796 ;; Defined at:
  5797 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  multiplier      2    0[COMRAM] unsigned int 
  5800 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  product         2    4[COMRAM] unsigned int 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  2    0[COMRAM] unsigned int 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, prodl, prodh
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;Total ram usage:        6 bytes
  5817 ;; Hardware stack levels used: 1
  5818 ;; Hardware stack levels required when called: 1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_setMotorPWM
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text26
  5827   0037CA                     __ptext26:
  5828                           	callstack 0
  5829   0037CA                     ___wmul:
  5830                           	callstack 27
  5831   0037CA  5001               	movf	___wmul@multiplier^0,w,c
  5832   0037CC  0203               	mulwf	___wmul@multiplicand^0,c
  5833   0037CE  CFF3 F005          	movff	prodl,___wmul@product
  5834   0037D2  CFF4 F006          	movff	prodh,___wmul@product+1
  5835   0037D6  5001               	movf	___wmul@multiplier^0,w,c
  5836   0037D8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5837   0037DA  50F3               	movf	243,w,c
  5838   0037DC  2606               	addwf	(___wmul@product+1)^0,f,c
  5839   0037DE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5840   0037E0  0203               	mulwf	___wmul@multiplicand^0,c
  5841   0037E2  50F3               	movf	243,w,c
  5842   0037E4  2606               	addwf	(___wmul@product+1)^0,f,c
  5843   0037E6  C005  F001         	movff	___wmul@product,?___wmul
  5844   0037EA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5845   0037EE  0012               	return		;funcret
  5846   0037F0                     __end_of___wmul:
  5847                           	callstack 0
  5848                           
  5849 ;; *************** function ___awdiv *****************
  5850 ;; Defined at:
  5851 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  dividend        2    6[COMRAM] int 
  5854 ;;  divisor         2    8[COMRAM] int 
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  quotient        2   12[COMRAM] int 
  5857 ;;  sign            1   11[COMRAM] unsigned char 
  5858 ;;  counter         1   10[COMRAM] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2    6[COMRAM] int 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;Total ram usage:        8 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 1
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_setMotorPWM
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text27
  5883   002C32                     __ptext27:
  5884                           	callstack 0
  5885   002C32                     ___awdiv:
  5886                           	callstack 27
  5887   002C32  0E00               	movlw	0
  5888   002C34  6E0C               	movwf	___awdiv@sign^0,c
  5889   002C36  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  5890   002C38  EF22  F016         	goto	u1370
  5891   002C3C  EF20  F016         	goto	u1371
  5892   002C40                     u1371:
  5893   002C40  EF28  F016         	goto	l2839
  5894   002C44                     u1370:
  5895   002C44  6C09               	negf	___awdiv@divisor^0,c
  5896   002C46  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  5897   002C48  B0D8               	btfsc	status,0,c
  5898   002C4A  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  5899   002C4C  0E01               	movlw	1
  5900   002C4E  6E0C               	movwf	___awdiv@sign^0,c
  5901   002C50                     l2839:
  5902   002C50  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  5903   002C52  EF2F  F016         	goto	u1380
  5904   002C56  EF2D  F016         	goto	u1381
  5905   002C5A                     u1381:
  5906   002C5A  EF35  F016         	goto	l2845
  5907   002C5E                     u1380:
  5908   002C5E  6C07               	negf	___awdiv@dividend^0,c
  5909   002C60  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  5910   002C62  B0D8               	btfsc	status,0,c
  5911   002C64  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  5912   002C66  0E01               	movlw	1
  5913   002C68  1A0C               	xorwf	___awdiv@sign^0,f,c
  5914   002C6A                     l2845:
  5915   002C6A  0E00               	movlw	0
  5916   002C6C  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  5917   002C6E  0E00               	movlw	0
  5918   002C70  6E0D               	movwf	___awdiv@quotient^0,c
  5919   002C72  5009               	movf	___awdiv@divisor^0,w,c
  5920   002C74  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  5921   002C76  B4D8               	btfsc	status,2,c
  5922   002C78  EF40  F016         	goto	u1391
  5923   002C7C  EF42  F016         	goto	u1390
  5924   002C80                     u1391:
  5925   002C80  EF6A  F016         	goto	l2867
  5926   002C84                     u1390:
  5927   002C84  0E01               	movlw	1
  5928   002C86  6E0B               	movwf	___awdiv@counter^0,c
  5929   002C88  EF4A  F016         	goto	l2853
  5930   002C8C                     l2851:
  5931   002C8C  90D8               	bcf	status,0,c
  5932   002C8E  3609               	rlcf	___awdiv@divisor^0,f,c
  5933   002C90  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  5934   002C92  2A0B               	incf	___awdiv@counter^0,f,c
  5935   002C94                     l2853:
  5936   002C94  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  5937   002C96  EF4F  F016         	goto	u1401
  5938   002C9A  EF51  F016         	goto	u1400
  5939   002C9E                     u1401:
  5940   002C9E  EF46  F016         	goto	l2851
  5941   002CA2                     u1400:
  5942   002CA2                     l2855:
  5943   002CA2  90D8               	bcf	status,0,c
  5944   002CA4  360D               	rlcf	___awdiv@quotient^0,f,c
  5945   002CA6  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  5946   002CA8  5009               	movf	___awdiv@divisor^0,w,c
  5947   002CAA  5C07               	subwf	___awdiv@dividend^0,w,c
  5948   002CAC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5949   002CAE  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  5950   002CB0  A0D8               	btfss	status,0,c
  5951   002CB2  EF5D  F016         	goto	u1411
  5952   002CB6  EF5F  F016         	goto	u1410
  5953   002CBA                     u1411:
  5954   002CBA  EF64  F016         	goto	l2863
  5955   002CBE                     u1410:
  5956   002CBE  5009               	movf	___awdiv@divisor^0,w,c
  5957   002CC0  5E07               	subwf	___awdiv@dividend^0,f,c
  5958   002CC2  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5959   002CC4  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  5960   002CC6  800D               	bsf	___awdiv@quotient^0,0,c
  5961   002CC8                     l2863:
  5962   002CC8  90D8               	bcf	status,0,c
  5963   002CCA  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  5964   002CCC  3209               	rrcf	___awdiv@divisor^0,f,c
  5965   002CCE  2E0B               	decfsz	___awdiv@counter^0,f,c
  5966   002CD0  EF51  F016         	goto	l2855
  5967   002CD4                     l2867:
  5968   002CD4  500C               	movf	___awdiv@sign^0,w,c
  5969   002CD6  B4D8               	btfsc	status,2,c
  5970   002CD8  EF70  F016         	goto	u1421
  5971   002CDC  EF72  F016         	goto	u1420
  5972   002CE0                     u1421:
  5973   002CE0  EF76  F016         	goto	l2871
  5974   002CE4                     u1420:
  5975   002CE4  6C0D               	negf	___awdiv@quotient^0,c
  5976   002CE6  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  5977   002CE8  B0D8               	btfsc	status,0,c
  5978   002CEA  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  5979   002CEC                     l2871:
  5980   002CEC  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5981   002CF0  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5982   002CF4  0012               	return		;funcret
  5983   002CF6                     __end_of___awdiv:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _initUSART4 *****************
  5987 ;; Defined at:
  5988 ;;		line 5 in file "../serial.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, status,2
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used: 1
  6008 ;; Hardware stack levels required when called: 1
  6009 ;; This function calls:
  6010 ;;		Nothing
  6011 ;; This function is called by:
  6012 ;;		_main
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text28
  6017   003830                     __ptext28:
  6018                           	callstack 0
  6019   003830                     _initUSART4:
  6020                           	callstack 29
  6021   003830                     
  6022                           ;../serial.c: 9:     RC0PPS = 0x12;
  6023   003830  0E12               	movlw	18
  6024   003832  010E               	movlb	14	; () banked
  6025   003834  6F62               	movwf	98,b	;volatile
  6026                           
  6027                           ;../serial.c: 10:     RX4PPS = 0x11;
  6028   003836  0E11               	movlw	17
  6029   003838  6F15               	movwf	21,b	;volatile
  6030   00383A                     
  6031                           ; BSR set to: 14
  6032                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  6033   00383A  97E9               	bcf	233,3,b	;volatile
  6034   00383C                     
  6035                           ; BSR set to: 14
  6036                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  6037   00383C  95E8               	bcf	232,2,b	;volatile
  6038                           
  6039                           ;../serial.c: 14:     SP4BRGL = 103;
  6040   00383E  0E67               	movlw	103
  6041   003840  6FE5               	movwf	229,b	;volatile
  6042                           
  6043                           ;../serial.c: 15:     SP4BRGH = 0;
  6044   003842  0E00               	movlw	0
  6045   003844  6FE6               	movwf	230,b	;volatile
  6046   003846                     
  6047                           ; BSR set to: 14
  6048                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  6049   003846  89E7               	bsf	231,4,b	;volatile
  6050   003848                     
  6051                           ; BSR set to: 14
  6052                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  6053   003848  8BE8               	bsf	232,5,b	;volatile
  6054   00384A                     
  6055                           ; BSR set to: 14
  6056                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  6057   00384A  8FE7               	bsf	231,7,b	;volatile
  6058   00384C                     
  6059                           ; BSR set to: 14
  6060   00384C  0012               	return		;funcret
  6061   00384E                     __end_of_initUSART4:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _initDCmotorsPWM *****************
  6065 ;; Defined at:
  6066 ;;		line 5 in file "../dc_motor.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  PWMperiod       2    0[COMRAM] int 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;Total ram usage:        2 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 1
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_main
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text29
  6095   003684                     __ptext29:
  6096                           	callstack 0
  6097   003684                     _initDCmotorsPWM:
  6098                           	callstack 29
  6099   003684                     
  6100                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  6101   003684  9485               	bcf	133,2,c	;volatile
  6102                           
  6103                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  6104   003686  9885               	bcf	133,4,c	;volatile
  6105                           
  6106                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  6107   003688  9E83               	bcf	131,7,c	;volatile
  6108                           
  6109                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  6110   00368A  9C87               	bcf	135,6,c	;volatile
  6111                           
  6112                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  6113   00368C  947D               	bcf	125,2,c	;volatile
  6114                           
  6115                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  6116   00368E  987D               	bcf	125,4,c	;volatile
  6117                           
  6118                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  6119   003690  9E7B               	bcf	123,7,c	;volatile
  6120                           
  6121                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  6122   003692  9C7F               	bcf	127,6,c	;volatile
  6123   003694                     
  6124                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  6125   003694  50BD               	movf	189,w,c	;volatile
  6126   003696  0B8F               	andlw	-113
  6127   003698  0930               	iorlw	48
  6128   00369A  6EBD               	movwf	189,c	;volatile
  6129                           
  6130                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  6131   00369C  0EE0               	movlw	-32
  6132   00369E  16BE               	andwf	190,f,c	;volatile
  6133                           
  6134                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  6135   0036A0  50BF               	movf	191,w,c	;volatile
  6136   0036A2  0BF0               	andlw	-16
  6137   0036A4  0901               	iorlw	1
  6138   0036A6  6EBF               	movwf	191,c	;volatile
  6139   0036A8                     
  6140                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  6141   0036A8  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6142   0036AC                     
  6143                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  6144   0036AC  8EBD               	bsf	189,7,c	;volatile
  6145                           
  6146                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  6147   0036AE  0E0A               	movlw	10
  6148   0036B0  010E               	movlb	14	; () banked
  6149   0036B2  6F74               	movwf	116,b	;volatile
  6150                           
  6151                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  6152   0036B4  0E0B               	movlw	11
  6153   0036B6  6F69               	movwf	105,b	;volatile
  6154                           
  6155                           ;../dc_motor.c: 29:     PWM6DCH=0;
  6156   0036B8  0E00               	movlw	0
  6157   0036BA  6EA3               	movwf	163,c	;volatile
  6158                           
  6159                           ;../dc_motor.c: 30:     PWM7DCH=0;
  6160   0036BC  0E00               	movlw	0
  6161   0036BE  6EA0               	movwf	160,c	;volatile
  6162   0036C0                     
  6163                           ; BSR set to: 14
  6164                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  6165   0036C0  8EA4               	bsf	164,7,c	;volatile
  6166   0036C2                     
  6167                           ; BSR set to: 14
  6168                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  6169   0036C2  8EA1               	bsf	161,7,c	;volatile
  6170   0036C4                     
  6171                           ; BSR set to: 14
  6172   0036C4  0012               	return		;funcret
  6173   0036C6                     __end_of_initDCmotorsPWM:
  6174                           	callstack 0
  6175                           
  6176 ;; *************** function _color_read *****************
  6177 ;; Defined at:
  6178 ;;		line 111 in file "../color.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  rgb             2   11[COMRAM] PTR struct RGB_val
  6181 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      void 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;Total ram usage:        4 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; Hardware stack levels required when called: 4
  6200 ;; This function calls:
  6201 ;;		_color_read_Blue
  6202 ;;		_color_read_Green
  6203 ;;		_color_read_Luminosity
  6204 ;;		_color_read_Red
  6205 ;; This function is called by:
  6206 ;;		_main
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text30
  6211   002CF6                     __ptext30:
  6212                           	callstack 0
  6213   002CF6                     _color_read:
  6214                           	callstack 26
  6215   002CF6                     
  6216                           ;../color.c: 111: void color_read(struct RGB_val *rgb);../color.c: 112: {;../color.c: 11
      +                          3:     rgb->L = color_read_Luminosity();
  6217   002CF6  EC82  F01A         	call	_color_read_Luminosity	;wreg free
  6218   002CFA  C00C  FFD9         	movff	color_read@rgb,fsr2l
  6219   002CFE  C00D  FFDA         	movff	color_read@rgb+1,fsr2h
  6220   002D02  C005  FFDE         	movff	?_color_read_Luminosity,postinc2
  6221   002D06  C006  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  6222   002D0A                     
  6223                           ;../color.c: 114:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6224   002D0A  0E09               	movlw	9
  6225   002D0C  6E0F               	movwf	(??_color_read+1)^0,c
  6226   002D0E  0E1E               	movlw	30
  6227   002D10  6E0E               	movwf	??_color_read^0,c
  6228   002D12  0EE4               	movlw	228
  6229   002D14                     u2677:
  6230   002D14  2EE8               	decfsz	wreg,f,c
  6231   002D16  D7FE               	bra	u2677
  6232   002D18  2E0E               	decfsz	??_color_read^0,f,c
  6233   002D1A  D7FC               	bra	u2677
  6234   002D1C  2E0F               	decfsz	(??_color_read+1)^0,f,c
  6235   002D1E  D7FA               	bra	u2677
  6236   002D20  D000               	nop2	
  6237   002D22                     
  6238                           ;../color.c: 115:     rgb->R = color_read_Red();
  6239   002D22  EC5A  F01A         	call	_color_read_Red	;wreg free
  6240   002D26  EE20 F002          	lfsr	2,2
  6241   002D2A  500C               	movf	color_read@rgb^0,w,c
  6242   002D2C  26D9               	addwf	fsr2l,f,c
  6243   002D2E  500D               	movf	(color_read@rgb+1)^0,w,c
  6244   002D30  22DA               	addwfc	fsr2h,f,c
  6245   002D32  C005  FFDE         	movff	?_color_read_Red,postinc2
  6246   002D36  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6247                           
  6248                           ;../color.c: 116:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6249   002D3A  0E09               	movlw	9
  6250   002D3C  6E0F               	movwf	(??_color_read+1)^0,c
  6251   002D3E  0E1E               	movlw	30
  6252   002D40  6E0E               	movwf	??_color_read^0,c
  6253   002D42  0EE4               	movlw	228
  6254   002D44                     u2687:
  6255   002D44  2EE8               	decfsz	wreg,f,c
  6256   002D46  D7FE               	bra	u2687
  6257   002D48  2E0E               	decfsz	??_color_read^0,f,c
  6258   002D4A  D7FC               	bra	u2687
  6259   002D4C  2E0F               	decfsz	(??_color_read+1)^0,f,c
  6260   002D4E  D7FA               	bra	u2687
  6261   002D50  D000               	nop2	
  6262   002D52                     
  6263                           ;../color.c: 117:     rgb->G = color_read_Green();
  6264   002D52  ECAA  F01A         	call	_color_read_Green	;wreg free
  6265   002D56  EE20 F004          	lfsr	2,4
  6266   002D5A  500C               	movf	color_read@rgb^0,w,c
  6267   002D5C  26D9               	addwf	fsr2l,f,c
  6268   002D5E  500D               	movf	(color_read@rgb+1)^0,w,c
  6269   002D60  22DA               	addwfc	fsr2h,f,c
  6270   002D62  C005  FFDE         	movff	?_color_read_Green,postinc2
  6271   002D66  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6272   002D6A                     
  6273                           ;../color.c: 118:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6274   002D6A  0E09               	movlw	9
  6275   002D6C  6E0F               	movwf	(??_color_read+1)^0,c
  6276   002D6E  0E1E               	movlw	30
  6277   002D70  6E0E               	movwf	??_color_read^0,c
  6278   002D72  0EE4               	movlw	228
  6279   002D74                     u2697:
  6280   002D74  2EE8               	decfsz	wreg,f,c
  6281   002D76  D7FE               	bra	u2697
  6282   002D78  2E0E               	decfsz	??_color_read^0,f,c
  6283   002D7A  D7FC               	bra	u2697
  6284   002D7C  2E0F               	decfsz	(??_color_read+1)^0,f,c
  6285   002D7E  D7FA               	bra	u2697
  6286   002D80  D000               	nop2	
  6287                           
  6288                           ;../color.c: 119:     rgb->B = color_read_Blue();
  6289   002D82  ECD2  F01A         	call	_color_read_Blue	;wreg free
  6290   002D86  EE20 F006          	lfsr	2,6
  6291   002D8A  500C               	movf	color_read@rgb^0,w,c
  6292   002D8C  26D9               	addwf	fsr2l,f,c
  6293   002D8E  500D               	movf	(color_read@rgb+1)^0,w,c
  6294   002D90  22DA               	addwfc	fsr2h,f,c
  6295   002D92  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6296   002D96  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6297   002D9A  0012               	return		;funcret
  6298   002D9C                     __end_of_color_read:
  6299                           	callstack 0
  6300                           
  6301 ;; *************** function _color_read_Red *****************
  6302 ;; Defined at:
  6303 ;;		line 69 in file "../color.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;		None
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;  tmp             2    9[COMRAM] unsigned int 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  2    4[COMRAM] unsigned int 
  6310 ;; Registers used:
  6311 ;;		wreg, status,2, status,0, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;Total ram usage:        7 bytes
  6322 ;; Hardware stack levels used: 1
  6323 ;; Hardware stack levels required when called: 3
  6324 ;; This function calls:
  6325 ;;		_I2C_2_Master_Read
  6326 ;;		_I2C_2_Master_RepStart
  6327 ;;		_I2C_2_Master_Start
  6328 ;;		_I2C_2_Master_Stop
  6329 ;;		_I2C_2_Master_Write
  6330 ;; This function is called by:
  6331 ;;		_color_read
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text31
  6336   0034B4                     __ptext31:
  6337                           	callstack 0
  6338   0034B4                     _color_read_Red:
  6339                           	callstack 26
  6340   0034B4                     
  6341                           ;../color.c: 71:  unsigned int tmp;;../color.c: 72:  I2C_2_Master_Start();
  6342   0034B4  EC58  F01C         	call	_I2C_2_Master_Start	;wreg free
  6343                           
  6344                           ;../color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  6345   0034B8  0E52               	movlw	82
  6346   0034BA  EC48  F01C         	call	_I2C_2_Master_Write
  6347                           
  6348                           ;../color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  6349   0034BE  0EB6               	movlw	182
  6350   0034C0  EC48  F01C         	call	_I2C_2_Master_Write
  6351                           
  6352                           ;../color.c: 75:  I2C_2_Master_RepStart();
  6353   0034C4  EC4E  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6354                           
  6355                           ;../color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  6356   0034C8  0E53               	movlw	83
  6357   0034CA  EC48  F01C         	call	_I2C_2_Master_Write
  6358                           
  6359                           ;../color.c: 77:  tmp=I2C_2_Master_Read(1);
  6360   0034CE  0E01               	movlw	1
  6361   0034D0  EC63  F01B         	call	_I2C_2_Master_Read
  6362   0034D4  6E07               	movwf	??_color_read_Red^0,c
  6363   0034D6  5007               	movf	??_color_read_Red^0,w,c
  6364   0034D8  6E0A               	movwf	color_read_Red@tmp^0,c
  6365   0034DA  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6366                           
  6367                           ;../color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6368   0034DC  0E00               	movlw	0
  6369   0034DE  EC63  F01B         	call	_I2C_2_Master_Read
  6370   0034E2  6E07               	movwf	??_color_read_Red^0,c
  6371   0034E4  5007               	movf	??_color_read_Red^0,w,c
  6372   0034E6  6E09               	movwf	(??_color_read_Red+2)^0,c
  6373   0034E8  6A08               	clrf	(??_color_read_Red+1)^0,c
  6374   0034EA  500A               	movf	color_read_Red@tmp^0,w,c
  6375   0034EC  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6376   0034EE  6E0A               	movwf	color_read_Red@tmp^0,c
  6377   0034F0  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6378   0034F2  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6379   0034F4  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6380                           
  6381                           ;../color.c: 79:  I2C_2_Master_Stop();
  6382   0034F6  EC53  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6383   0034FA                     
  6384                           ;../color.c: 80:  return tmp;
  6385   0034FA  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6386   0034FE  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6387   003502  0012               	return		;funcret
  6388   003504                     __end_of_color_read_Red:
  6389                           	callstack 0
  6390                           
  6391 ;; *************** function _color_read_Luminosity *****************
  6392 ;; Defined at:
  6393 ;;		line 55 in file "../color.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  tmp             2    9[COMRAM] unsigned int 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2    4[COMRAM] unsigned int 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6409 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6410 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6411 ;;Total ram usage:        7 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; Hardware stack levels required when called: 3
  6414 ;; This function calls:
  6415 ;;		_I2C_2_Master_Read
  6416 ;;		_I2C_2_Master_RepStart
  6417 ;;		_I2C_2_Master_Start
  6418 ;;		_I2C_2_Master_Stop
  6419 ;;		_I2C_2_Master_Write
  6420 ;; This function is called by:
  6421 ;;		_color_read
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text32
  6426   003504                     __ptext32:
  6427                           	callstack 0
  6428   003504                     _color_read_Luminosity:
  6429                           	callstack 26
  6430   003504                     
  6431                           ;../color.c: 57:  unsigned int tmp;;../color.c: 58:  I2C_2_Master_Start();
  6432   003504  EC58  F01C         	call	_I2C_2_Master_Start	;wreg free
  6433                           
  6434                           ;../color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  6435   003508  0E52               	movlw	82
  6436   00350A  EC48  F01C         	call	_I2C_2_Master_Write
  6437                           
  6438                           ;../color.c: 60:  I2C_2_Master_Write(0xA0 | 0x14);
  6439   00350E  0EB4               	movlw	180
  6440   003510  EC48  F01C         	call	_I2C_2_Master_Write
  6441                           
  6442                           ;../color.c: 61:  I2C_2_Master_RepStart();
  6443   003514  EC4E  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6444                           
  6445                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  6446   003518  0E53               	movlw	83
  6447   00351A  EC48  F01C         	call	_I2C_2_Master_Write
  6448                           
  6449                           ;../color.c: 63:  tmp=I2C_2_Master_Read(1);
  6450   00351E  0E01               	movlw	1
  6451   003520  EC63  F01B         	call	_I2C_2_Master_Read
  6452   003524  6E07               	movwf	??_color_read_Luminosity^0,c
  6453   003526  5007               	movf	??_color_read_Luminosity^0,w,c
  6454   003528  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  6455   00352A  6A0B               	clrf	(color_read_Luminosity@tmp+1)^0,c
  6456                           
  6457                           ;../color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6458   00352C  0E00               	movlw	0
  6459   00352E  EC63  F01B         	call	_I2C_2_Master_Read
  6460   003532  6E07               	movwf	??_color_read_Luminosity^0,c
  6461   003534  5007               	movf	??_color_read_Luminosity^0,w,c
  6462   003536  6E09               	movwf	(??_color_read_Luminosity+2)^0,c
  6463   003538  6A08               	clrf	(??_color_read_Luminosity+1)^0,c
  6464   00353A  500A               	movf	color_read_Luminosity@tmp^0,w,c
  6465   00353C  1008               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  6466   00353E  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  6467   003540  500B               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  6468   003542  1009               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  6469   003544  6E0B               	movwf	(color_read_Luminosity@tmp+1)^0,c
  6470                           
  6471                           ;../color.c: 65:  I2C_2_Master_Stop();
  6472   003546  EC53  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6473   00354A                     
  6474                           ;../color.c: 66:  return tmp;
  6475   00354A  C00A  F005         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  6476   00354E  C00B  F006         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  6477   003552  0012               	return		;funcret
  6478   003554                     __end_of_color_read_Luminosity:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function _color_read_Green *****************
  6482 ;; Defined at:
  6483 ;;		line 83 in file "../color.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;		None
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  tmp             2    9[COMRAM] unsigned int 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  2    4[COMRAM] unsigned int 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6499 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6500 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6501 ;;Total ram usage:        7 bytes
  6502 ;; Hardware stack levels used: 1
  6503 ;; Hardware stack levels required when called: 3
  6504 ;; This function calls:
  6505 ;;		_I2C_2_Master_Read
  6506 ;;		_I2C_2_Master_RepStart
  6507 ;;		_I2C_2_Master_Start
  6508 ;;		_I2C_2_Master_Stop
  6509 ;;		_I2C_2_Master_Write
  6510 ;; This function is called by:
  6511 ;;		_color_read
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text33
  6516   003554                     __ptext33:
  6517                           	callstack 0
  6518   003554                     _color_read_Green:
  6519                           	callstack 26
  6520   003554                     
  6521                           ;../color.c: 85:  unsigned int tmp;;../color.c: 86:  I2C_2_Master_Start();
  6522   003554  EC58  F01C         	call	_I2C_2_Master_Start	;wreg free
  6523                           
  6524                           ;../color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  6525   003558  0E52               	movlw	82
  6526   00355A  EC48  F01C         	call	_I2C_2_Master_Write
  6527                           
  6528                           ;../color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  6529   00355E  0EB8               	movlw	184
  6530   003560  EC48  F01C         	call	_I2C_2_Master_Write
  6531                           
  6532                           ;../color.c: 89:  I2C_2_Master_RepStart();
  6533   003564  EC4E  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6534                           
  6535                           ;../color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  6536   003568  0E53               	movlw	83
  6537   00356A  EC48  F01C         	call	_I2C_2_Master_Write
  6538                           
  6539                           ;../color.c: 91:  tmp=I2C_2_Master_Read(1);
  6540   00356E  0E01               	movlw	1
  6541   003570  EC63  F01B         	call	_I2C_2_Master_Read
  6542   003574  6E07               	movwf	??_color_read_Green^0,c
  6543   003576  5007               	movf	??_color_read_Green^0,w,c
  6544   003578  6E0A               	movwf	color_read_Green@tmp^0,c
  6545   00357A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6546                           
  6547                           ;../color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6548   00357C  0E00               	movlw	0
  6549   00357E  EC63  F01B         	call	_I2C_2_Master_Read
  6550   003582  6E07               	movwf	??_color_read_Green^0,c
  6551   003584  5007               	movf	??_color_read_Green^0,w,c
  6552   003586  6E09               	movwf	(??_color_read_Green+2)^0,c
  6553   003588  6A08               	clrf	(??_color_read_Green+1)^0,c
  6554   00358A  500A               	movf	color_read_Green@tmp^0,w,c
  6555   00358C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6556   00358E  6E0A               	movwf	color_read_Green@tmp^0,c
  6557   003590  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6558   003592  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6559   003594  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6560                           
  6561                           ;../color.c: 93:  I2C_2_Master_Stop();
  6562   003596  EC53  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6563   00359A                     
  6564                           ;../color.c: 94:  return tmp;
  6565   00359A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6566   00359E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6567   0035A2  0012               	return		;funcret
  6568   0035A4                     __end_of_color_read_Green:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _color_read_Blue *****************
  6572 ;; Defined at:
  6573 ;;		line 97 in file "../color.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  tmp             2    9[COMRAM] unsigned int 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  2    4[COMRAM] unsigned int 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6589 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6590 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6591 ;;Total ram usage:        7 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 3
  6594 ;; This function calls:
  6595 ;;		_I2C_2_Master_Read
  6596 ;;		_I2C_2_Master_RepStart
  6597 ;;		_I2C_2_Master_Start
  6598 ;;		_I2C_2_Master_Stop
  6599 ;;		_I2C_2_Master_Write
  6600 ;; This function is called by:
  6601 ;;		_color_read
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text34
  6606   0035A4                     __ptext34:
  6607                           	callstack 0
  6608   0035A4                     _color_read_Blue:
  6609                           	callstack 26
  6610   0035A4                     
  6611                           ;../color.c: 99:  unsigned int tmp;;../color.c: 100:  I2C_2_Master_Start();
  6612   0035A4  EC58  F01C         	call	_I2C_2_Master_Start	;wreg free
  6613                           
  6614                           ;../color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  6615   0035A8  0E52               	movlw	82
  6616   0035AA  EC48  F01C         	call	_I2C_2_Master_Write
  6617                           
  6618                           ;../color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  6619   0035AE  0EBA               	movlw	186
  6620   0035B0  EC48  F01C         	call	_I2C_2_Master_Write
  6621                           
  6622                           ;../color.c: 103:  I2C_2_Master_RepStart();
  6623   0035B4  EC4E  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6624                           
  6625                           ;../color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  6626   0035B8  0E53               	movlw	83
  6627   0035BA  EC48  F01C         	call	_I2C_2_Master_Write
  6628                           
  6629                           ;../color.c: 105:  tmp=I2C_2_Master_Read(1);
  6630   0035BE  0E01               	movlw	1
  6631   0035C0  EC63  F01B         	call	_I2C_2_Master_Read
  6632   0035C4  6E07               	movwf	??_color_read_Blue^0,c
  6633   0035C6  5007               	movf	??_color_read_Blue^0,w,c
  6634   0035C8  6E0A               	movwf	color_read_Blue@tmp^0,c
  6635   0035CA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6636                           
  6637                           ;../color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6638   0035CC  0E00               	movlw	0
  6639   0035CE  EC63  F01B         	call	_I2C_2_Master_Read
  6640   0035D2  6E07               	movwf	??_color_read_Blue^0,c
  6641   0035D4  5007               	movf	??_color_read_Blue^0,w,c
  6642   0035D6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6643   0035D8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6644   0035DA  500A               	movf	color_read_Blue@tmp^0,w,c
  6645   0035DC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6646   0035DE  6E0A               	movwf	color_read_Blue@tmp^0,c
  6647   0035E0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6648   0035E2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6649   0035E4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6650                           
  6651                           ;../color.c: 107:  I2C_2_Master_Stop();
  6652   0035E6  EC53  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6653   0035EA                     
  6654                           ;../color.c: 108:  return tmp;
  6655   0035EA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6656   0035EE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6657   0035F2  0012               	return		;funcret
  6658   0035F4                     __end_of_color_read_Blue:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function _I2C_2_Master_RepStart *****************
  6662 ;; Defined at:
  6663 ;;		line 33 in file "../i2c.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 2
  6684 ;; This function calls:
  6685 ;;		_I2C_2_Master_Idle
  6686 ;; This function is called by:
  6687 ;;		_color_read_Luminosity
  6688 ;;		_color_read_Red
  6689 ;;		_color_read_Green
  6690 ;;		_color_read_Blue
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text35
  6695   00389C                     __ptext35:
  6696                           	callstack 0
  6697   00389C                     _I2C_2_Master_RepStart:
  6698                           	callstack 26
  6699   00389C                     
  6700                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  6701   00389C  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6702   0038A0                     
  6703                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6704   0038A0  010E               	movlb	14	; () banked
  6705   0038A2  83DA               	bsf	218,1,b	;volatile
  6706   0038A4                     
  6707                           ; BSR set to: 14
  6708   0038A4  0012               	return		;funcret
  6709   0038A6                     __end_of_I2C_2_Master_RepStart:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _I2C_2_Master_Read *****************
  6713 ;; Defined at:
  6714 ;;		line 51 in file "../i2c.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  ack             1    wreg     unsigned char 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  ack             1    2[COMRAM] unsigned char 
  6719 ;;  tmp             1    3[COMRAM] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      unsigned char 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, status,0, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;Total ram usage:        3 bytes
  6734 ;; Hardware stack levels used: 1
  6735 ;; Hardware stack levels required when called: 2
  6736 ;; This function calls:
  6737 ;;		_I2C_2_Master_Idle
  6738 ;; This function is called by:
  6739 ;;		_color_read_Luminosity
  6740 ;;		_color_read_Red
  6741 ;;		_color_read_Green
  6742 ;;		_color_read_Blue
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text36
  6747   0036C6                     __ptext36:
  6748                           	callstack 0
  6749   0036C6                     _I2C_2_Master_Read:
  6750                           	callstack 26
  6751                           
  6752                           ; BSR set to: 14
  6753                           ;incstack = 0
  6754                           ;I2C_2_Master_Read@ack stored from wreg
  6755   0036C6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6756   0036C8                     
  6757                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  6758   0036C8  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6759   0036CC                     
  6760                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6761   0036CC  010E               	movlb	14	; () banked
  6762   0036CE  87DA               	bsf	218,3,b	;volatile
  6763                           
  6764                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  6765   0036D0  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6766   0036D4                     
  6767                           ;../i2c.c: 57:   tmp = SSP2BUF;
  6768   0036D4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6769                           
  6770                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  6771   0036D8  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6772   0036DC                     
  6773                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6774   0036DC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6775   0036DE  B4D8               	btfsc	status,2,c
  6776   0036E0  EF74  F01B         	goto	u1531
  6777   0036E4  EF78  F01B         	goto	u1530
  6778   0036E8                     u1531:
  6779   0036E8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6780   0036EA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6781   0036EC  EF79  F01B         	goto	u1548
  6782   0036F0                     u1530:
  6783   0036F0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6784   0036F2                     u1548:
  6785   0036F2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6786   0036F4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6787   0036F6  010E               	movlb	14	; () banked
  6788   0036F8  51DA               	movf	218,w,b	;volatile
  6789   0036FA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6790   0036FC  0BDF               	andlw	-33
  6791   0036FE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6792   003700  6FDA               	movwf	218,b	;volatile
  6793   003702                     
  6794                           ; BSR set to: 14
  6795                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6796   003702  89DA               	bsf	218,4,b	;volatile
  6797   003704                     
  6798                           ; BSR set to: 14
  6799                           ;../i2c.c: 61:   return tmp;
  6800   003704  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6801   003706                     
  6802                           ; BSR set to: 14
  6803   003706  0012               	return		;funcret
  6804   003708                     __end_of_I2C_2_Master_Read:
  6805                           	callstack 0
  6806                           
  6807 ;; *************** function _color_processor_hard *****************
  6808 ;; Defined at:
  6809 ;;		line 152 in file "../color.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  6812 ;;		 -> main@RGB_recorded(8), 
  6813 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  6814 ;;		 -> main@color_calibrated(64), 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  cb              2    0        unsigned int 
  6817 ;;  cg              2    0        unsigned int 
  6818 ;;  cr              2    0        unsigned int 
  6819 ;;  condition_b     1    0        _Bool 
  6820 ;;  condition_g     1    0        _Bool 
  6821 ;;  condition_r     1    0        _Bool 
  6822 ;;  i               2    0        unsigned int 
  6823 ;;  b               2    0        unsigned int 
  6824 ;;  g               2    0        unsigned int 
  6825 ;;  r               2    0        unsigned int 
  6826 ;;  maxl            2    0        unsigned int 
  6827 ;;  l               2    0        unsigned int 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  2    0[COMRAM] unsigned int 
  6830 ;; Registers used:
  6831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6840 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6841 ;;Total ram usage:        4 bytes
  6842 ;; Hardware stack levels used: 1
  6843 ;; Hardware stack levels required when called: 1
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_main
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text37
  6852   0038BC                     __ptext37:
  6853                           	callstack 0
  6854   0038BC                     _color_processor_hard:
  6855                           	callstack 29
  6856   0038BC  0012               	return		;funcret
  6857   0038BE                     __end_of_color_processor_hard:
  6858                           	callstack 0
  6859                           
  6860 ;; *************** function _color_processor_easy *****************
  6861 ;; Defined at:
  6862 ;;		line 134 in file "../color.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  6865 ;;		 -> main@RGB_recorded(8), 
  6866 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  6867 ;;		 -> main@color_calibrated(64), 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  b               2   14[COMRAM] unsigned int 
  6870 ;;  g               2   12[COMRAM] unsigned int 
  6871 ;;  r               2   10[COMRAM] unsigned int 
  6872 ;;  l               2    8[COMRAM] unsigned int 
  6873 ;;  color           2    0        unsigned int 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2    0[COMRAM] unsigned int 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;Total ram usage:       16 bytes
  6888 ;; Hardware stack levels used: 1
  6889 ;; Hardware stack levels required when called: 1
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_main
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text38
  6898   00293E                     __ptext38:
  6899                           	callstack 0
  6900   00293E                     _color_processor_easy:
  6901                           	callstack 29
  6902   00293E                     
  6903                           ;../color.c: 134: unsigned int color_processor_easy(struct RGB_val *rgb, unsigned int ca
      +                          librated[]);../color.c: 135: {;../color.c: 136:     unsigned int l = rgb->L;
  6904   00293E  C001  FFD9         	movff	color_processor_easy@rgb,fsr2l
  6905   002942  C002  FFDA         	movff	color_processor_easy@rgb+1,fsr2h
  6906   002946  CFDE F009          	movff	postinc2,color_processor_easy@l
  6907   00294A  CFDD F00A          	movff	postdec2,color_processor_easy@l+1
  6908   00294E                     
  6909                           ;../color.c: 137:     unsigned int r = rgb->R;
  6910   00294E  EE20 F002          	lfsr	2,2
  6911   002952  5001               	movf	color_processor_easy@rgb^0,w,c
  6912   002954  26D9               	addwf	fsr2l,f,c
  6913   002956  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6914   002958  22DA               	addwfc	fsr2h,f,c
  6915   00295A  CFDE F00B          	movff	postinc2,color_processor_easy@r
  6916   00295E  CFDD F00C          	movff	postdec2,color_processor_easy@r+1
  6917   002962                     
  6918                           ;../color.c: 138:     unsigned int g = rgb->G;
  6919   002962  EE20 F004          	lfsr	2,4
  6920   002966  5001               	movf	color_processor_easy@rgb^0,w,c
  6921   002968  26D9               	addwf	fsr2l,f,c
  6922   00296A  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6923   00296C  22DA               	addwfc	fsr2h,f,c
  6924   00296E  CFDE F00D          	movff	postinc2,color_processor_easy@g
  6925   002972  CFDD F00E          	movff	postdec2,color_processor_easy@g+1
  6926   002976                     
  6927                           ;../color.c: 139:     unsigned int b = rgb->B;
  6928   002976  EE20 F006          	lfsr	2,6
  6929   00297A  5001               	movf	color_processor_easy@rgb^0,w,c
  6930   00297C  26D9               	addwf	fsr2l,f,c
  6931   00297E  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6932   002980  22DA               	addwfc	fsr2h,f,c
  6933   002982  CFDE F00F          	movff	postinc2,color_processor_easy@b
  6934   002986  CFDD F010          	movff	postdec2,color_processor_easy@b+1
  6935   00298A                     
  6936                           ;../color.c: 140:     unsigned int color;;../color.c: 141:     if (l<calibrated[28]+100 
      +                          && l>calibrated[28]-100){
  6937   00298A  EE20 F038          	lfsr	2,56
  6938   00298E  5003               	movf	color_processor_easy@calibrated^0,w,c
  6939   002990  26D9               	addwf	fsr2l,f,c
  6940   002992  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  6941   002994  22DA               	addwfc	fsr2h,f,c
  6942   002996  CFDE F005          	movff	postinc2,??_color_processor_easy
  6943   00299A  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  6944   00299E  0E64               	movlw	100
  6945   0029A0  2605               	addwf	??_color_processor_easy^0,f,c
  6946   0029A2  0E00               	movlw	0
  6947   0029A4  2206               	addwfc	(??_color_processor_easy+1)^0,f,c
  6948   0029A6  5005               	movf	??_color_processor_easy^0,w,c
  6949   0029A8  5C09               	subwf	color_processor_easy@l^0,w,c
  6950   0029AA  5006               	movf	(??_color_processor_easy+1)^0,w,c
  6951   0029AC  580A               	subwfb	(color_processor_easy@l+1)^0,w,c
  6952   0029AE  B0D8               	btfsc	status,0,c
  6953   0029B0  EFDC  F014         	goto	u1731
  6954   0029B4  EFDE  F014         	goto	u1730
  6955   0029B8                     u1731:
  6956   0029B8  EFFF  F014         	goto	l3331
  6957   0029BC                     u1730:
  6958   0029BC  EE20 F038          	lfsr	2,56
  6959   0029C0  5003               	movf	color_processor_easy@calibrated^0,w,c
  6960   0029C2  26D9               	addwf	fsr2l,f,c
  6961   0029C4  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  6962   0029C6  22DA               	addwfc	fsr2h,f,c
  6963   0029C8  CFDE F005          	movff	postinc2,??_color_processor_easy
  6964   0029CC  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  6965   0029D0  0E9C               	movlw	156
  6966   0029D2  2405               	addwf	??_color_processor_easy^0,w,c
  6967   0029D4  6E07               	movwf	(??_color_processor_easy+2)^0,c
  6968   0029D6  0EFF               	movlw	255
  6969   0029D8  2006               	addwfc	(??_color_processor_easy+1)^0,w,c
  6970   0029DA  6E08               	movwf	(??_color_processor_easy+3)^0,c
  6971   0029DC  5009               	movf	color_processor_easy@l^0,w,c
  6972   0029DE  5C07               	subwf	(??_color_processor_easy+2)^0,w,c
  6973   0029E0  500A               	movf	(color_processor_easy@l+1)^0,w,c
  6974   0029E2  5808               	subwfb	(??_color_processor_easy+3)^0,w,c
  6975   0029E4  B0D8               	btfsc	status,0,c
  6976   0029E6  EFF7  F014         	goto	u1741
  6977   0029EA  EFF9  F014         	goto	u1740
  6978   0029EE                     u1741:
  6979   0029EE  EFFF  F014         	goto	l3331
  6980   0029F2                     u1740:
  6981   0029F2                     
  6982                           ;../color.c: 142:         return 8;
  6983   0029F2  0E00               	movlw	0
  6984   0029F4  6E02               	movwf	(?_color_processor_easy+1)^0,c
  6985   0029F6  0E08               	movlw	8
  6986   0029F8  6E01               	movwf	?_color_processor_easy^0,c
  6987   0029FA  EF30  F015         	goto	l67
  6988   0029FE                     l3331:
  6989                           
  6990                           ;../color.c: 144:     if (r>g && r>b){
  6991   0029FE  500B               	movf	color_processor_easy@r^0,w,c
  6992   002A00  5C0D               	subwf	color_processor_easy@g^0,w,c
  6993   002A02  500C               	movf	(color_processor_easy@r+1)^0,w,c
  6994   002A04  580E               	subwfb	(color_processor_easy@g+1)^0,w,c
  6995   002A06  B0D8               	btfsc	status,0,c
  6996   002A08  EF08  F015         	goto	u1751
  6997   002A0C  EF0A  F015         	goto	u1750
  6998   002A10                     u1751:
  6999   002A10  EF2C  F015         	goto	l3347
  7000   002A14                     u1750:
  7001   002A14  500B               	movf	color_processor_easy@r^0,w,c
  7002   002A16  5C0F               	subwf	color_processor_easy@b^0,w,c
  7003   002A18  500C               	movf	(color_processor_easy@r+1)^0,w,c
  7004   002A1A  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  7005   002A1C  B0D8               	btfsc	status,0,c
  7006   002A1E  EF13  F015         	goto	u1761
  7007   002A22  EF15  F015         	goto	u1760
  7008   002A26                     u1761:
  7009   002A26  EF2C  F015         	goto	l3347
  7010   002A2A                     u1760:
  7011   002A2A                     
  7012                           ;../color.c: 145:         if (g>b){return 2;}
  7013   002A2A  500D               	movf	color_processor_easy@g^0,w,c
  7014   002A2C  5C0F               	subwf	color_processor_easy@b^0,w,c
  7015   002A2E  500E               	movf	(color_processor_easy@g+1)^0,w,c
  7016   002A30  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  7017   002A32  B0D8               	btfsc	status,0,c
  7018   002A34  EF1E  F015         	goto	u1771
  7019   002A38  EF20  F015         	goto	u1770
  7020   002A3C                     u1771:
  7021   002A3C  EF26  F015         	goto	l3343
  7022   002A40                     u1770:
  7023   002A40  0E00               	movlw	0
  7024   002A42  6E02               	movwf	(?_color_processor_easy+1)^0,c
  7025   002A44  0E02               	movlw	2
  7026   002A46  6E01               	movwf	?_color_processor_easy^0,c
  7027   002A48  EF30  F015         	goto	l67
  7028   002A4C                     l3343:
  7029   002A4C  0E00               	movlw	0
  7030   002A4E  6E02               	movwf	(?_color_processor_easy+1)^0,c
  7031   002A50  0E01               	movlw	1
  7032   002A52  6E01               	movwf	?_color_processor_easy^0,c
  7033   002A54  EF30  F015         	goto	l67
  7034   002A58                     l3347:
  7035   002A58  0E00               	movlw	0
  7036   002A5A  6E02               	movwf	(?_color_processor_easy+1)^0,c
  7037   002A5C  0E03               	movlw	3
  7038   002A5E  6E01               	movwf	?_color_processor_easy^0,c
  7039   002A60                     l67:
  7040   002A60  0012               	return		;funcret
  7041   002A62                     __end_of_color_processor_easy:
  7042                           	callstack 0
  7043                           
  7044 ;; *************** function _color_click_init *****************
  7045 ;; Defined at:
  7046 ;;		line 6 in file "../color.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;		None
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;Total ram usage:        1 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 4
  7067 ;; This function calls:
  7068 ;;		_I2C_2_Master_Init
  7069 ;;		_color_writetoaddr
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text39
  7076   0033B6                     __ptext39:
  7077                           	callstack 0
  7078   0033B6                     _color_click_init:
  7079                           	callstack 26
  7080   0033B6                     
  7081                           ;../color.c: 9:     I2C_2_Master_Init();
  7082   0033B6  ECBC  F01B         	call	_I2C_2_Master_Init	;wreg free
  7083   0033BA                     
  7084                           ;../color.c: 12:   color_writetoaddr(0x00, 0x01);
  7085   0033BA  0E01               	movlw	1
  7086   0033BC  6E03               	movwf	color_writetoaddr@value^0,c
  7087   0033BE  0E00               	movlw	0
  7088   0033C0  ECF8  F01B         	call	_color_writetoaddr
  7089   0033C4                     
  7090                           ;../color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7091   0033C4  0E3F               	movlw	63
  7092   0033C6  6E05               	movwf	??_color_click_init^0,c
  7093   0033C8  0E55               	movlw	85
  7094   0033CA                     u2707:
  7095   0033CA  2EE8               	decfsz	wreg,f,c
  7096   0033CC  D7FE               	bra	u2707
  7097   0033CE  2E05               	decfsz	??_color_click_init^0,f,c
  7098   0033D0  D7FC               	bra	u2707
  7099   0033D2  F000               	nop	
  7100   0033D4                     
  7101                           ;../color.c: 16:  color_writetoaddr(0x00, 0x03);
  7102   0033D4  0E03               	movlw	3
  7103   0033D6  6E03               	movwf	color_writetoaddr@value^0,c
  7104   0033D8  0E00               	movlw	0
  7105   0033DA  ECF8  F01B         	call	_color_writetoaddr
  7106   0033DE                     
  7107                           ;../color.c: 19:  color_writetoaddr(0x01, 0xD5);
  7108   0033DE  0ED5               	movlw	213
  7109   0033E0  6E03               	movwf	color_writetoaddr@value^0,c
  7110   0033E2  0E01               	movlw	1
  7111   0033E4  ECF8  F01B         	call	_color_writetoaddr
  7112   0033E8                     
  7113                           ;../color.c: 22:     TRISHbits.TRISH1 = 0;
  7114   0033E8  9288               	bcf	136,1,c	;volatile
  7115   0033EA                     
  7116                           ;../color.c: 23:     TRISDbits.TRISD3 = 0;
  7117   0033EA  9684               	bcf	132,3,c	;volatile
  7118   0033EC                     
  7119                           ;../color.c: 24:     TRISDbits.TRISD4 = 0;
  7120   0033EC  9884               	bcf	132,4,c	;volatile
  7121   0033EE                     
  7122                           ;../color.c: 25:     TRISHbits.TRISH0 = 0;
  7123   0033EE  9088               	bcf	136,0,c	;volatile
  7124   0033F0                     
  7125                           ;../color.c: 26:     TRISFbits.TRISF0 = 0;
  7126   0033F0  9086               	bcf	134,0,c	;volatile
  7127   0033F2                     
  7128                           ;../color.c: 28:     LATHbits.LATH1 = 1;
  7129   0033F2  8280               	bsf	128,1,c	;volatile
  7130   0033F4                     
  7131                           ;../color.c: 29:     LATDbits.LATD3 = 1;
  7132   0033F4  867C               	bsf	124,3,c	;volatile
  7133   0033F6                     
  7134                           ;../color.c: 30:     LATDbits.LATD4 = 0;
  7135   0033F6  987C               	bcf	124,4,c	;volatile
  7136   0033F8                     
  7137                           ;../color.c: 31:     LATHbits.LATH0 = 0;
  7138   0033F8  9080               	bcf	128,0,c	;volatile
  7139   0033FA                     
  7140                           ;../color.c: 32:     LATFbits.LATF0 = 0;
  7141   0033FA  907E               	bcf	126,0,c	;volatile
  7142   0033FC                     
  7143                           ;../color.c: 35:     LATDbits.LATD7=0;
  7144   0033FC  9E7C               	bcf	124,7,c	;volatile
  7145   0033FE                     
  7146                           ;../color.c: 36:     LATHbits.LATH3=0;
  7147   0033FE  9680               	bcf	128,3,c	;volatile
  7148   003400                     
  7149                           ;../color.c: 37:     TRISDbits.TRISD7=0;
  7150   003400  9E84               	bcf	132,7,c	;volatile
  7151   003402                     
  7152                           ;../color.c: 38:     TRISHbits.TRISH3=0;
  7153   003402  9688               	bcf	136,3,c	;volatile
  7154   003404                     
  7155                           ;../color.c: 40:     TRISFbits.TRISF2=1;
  7156   003404  8486               	bsf	134,2,c	;volatile
  7157   003406                     
  7158                           ;../color.c: 41:     ANSELFbits.ANSELF2=0;
  7159   003406  010E               	movlb	14	; () banked
  7160   003408  95B4               	bcf	180,2,b	;volatile
  7161   00340A                     
  7162                           ; BSR set to: 14
  7163                           ;../color.c: 42:     TRISFbits.TRISF3=1;
  7164   00340A  8686               	bsf	134,3,c	;volatile
  7165   00340C                     
  7166                           ; BSR set to: 14
  7167                           ;../color.c: 43:     ANSELFbits.ANSELF3=0;
  7168   00340C  97B4               	bcf	180,3,b	;volatile
  7169   00340E                     
  7170                           ; BSR set to: 14
  7171   00340E  0012               	return		;funcret
  7172   003410                     __end_of_color_click_init:
  7173                           	callstack 0
  7174                           
  7175 ;; *************** function _color_writetoaddr *****************
  7176 ;; Defined at:
  7177 ;;		line 46 in file "../color.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  address         1    wreg     unsigned char 
  7180 ;;  value           1    2[COMRAM] unsigned char 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  address         1    3[COMRAM] unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7196 ;;Total ram usage:        2 bytes
  7197 ;; Hardware stack levels used: 1
  7198 ;; Hardware stack levels required when called: 3
  7199 ;; This function calls:
  7200 ;;		_I2C_2_Master_Start
  7201 ;;		_I2C_2_Master_Stop
  7202 ;;		_I2C_2_Master_Write
  7203 ;; This function is called by:
  7204 ;;		_color_click_init
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           	psect	text40
  7209   0037F0                     __ptext40:
  7210                           	callstack 0
  7211   0037F0                     _color_writetoaddr:
  7212                           	callstack 26
  7213                           
  7214                           ; BSR set to: 14
  7215                           ;incstack = 0
  7216                           ;color_writetoaddr@address stored from wreg
  7217   0037F0  6E04               	movwf	color_writetoaddr@address^0,c
  7218   0037F2                     
  7219                           ;../color.c: 46: void color_writetoaddr(char address, char value);../color.c: 47: {;../c
      +                          olor.c: 48:     I2C_2_Master_Start();
  7220   0037F2  EC58  F01C         	call	_I2C_2_Master_Start	;wreg free
  7221                           
  7222                           ;../color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  7223   0037F6  0E52               	movlw	82
  7224   0037F8  EC48  F01C         	call	_I2C_2_Master_Write
  7225                           
  7226                           ;../color.c: 50:     I2C_2_Master_Write(0x80 | address);
  7227   0037FC  5004               	movf	color_writetoaddr@address^0,w,c
  7228   0037FE  0980               	iorlw	128
  7229   003800  EC48  F01C         	call	_I2C_2_Master_Write
  7230                           
  7231                           ;../color.c: 51:     I2C_2_Master_Write(value);
  7232   003804  5003               	movf	color_writetoaddr@value^0,w,c
  7233   003806  EC48  F01C         	call	_I2C_2_Master_Write
  7234                           
  7235                           ;../color.c: 52:     I2C_2_Master_Stop();
  7236   00380A  EC53  F01C         	call	_I2C_2_Master_Stop	;wreg free
  7237   00380E  0012               	return		;funcret
  7238   003810                     __end_of_color_writetoaddr:
  7239                           	callstack 0
  7240                           
  7241 ;; *************** function _I2C_2_Master_Write *****************
  7242 ;; Defined at:
  7243 ;;		line 45 in file "../i2c.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  data_byte       1    wreg     unsigned char 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  data_byte       1    1[COMRAM] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;Total ram usage:        1 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; Hardware stack levels required when called: 2
  7264 ;; This function calls:
  7265 ;;		_I2C_2_Master_Idle
  7266 ;; This function is called by:
  7267 ;;		_color_writetoaddr
  7268 ;;		_color_read_Luminosity
  7269 ;;		_color_read_Red
  7270 ;;		_color_read_Green
  7271 ;;		_color_read_Blue
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           	psect	text41
  7276   003890                     __ptext41:
  7277                           	callstack 0
  7278   003890                     _I2C_2_Master_Write:
  7279                           	callstack 26
  7280                           
  7281                           ;incstack = 0
  7282                           ;I2C_2_Master_Write@data_byte stored from wreg
  7283   003890  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7284   003892                     
  7285                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  7286   003892  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7287   003896                     
  7288                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  7289   003896  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7290   00389A  0012               	return		;funcret
  7291   00389C                     __end_of_I2C_2_Master_Write:
  7292                           	callstack 0
  7293                           
  7294 ;; *************** function _I2C_2_Master_Stop *****************
  7295 ;; Defined at:
  7296 ;;		line 39 in file "../i2c.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;Total ram usage:        0 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; Hardware stack levels required when called: 2
  7317 ;; This function calls:
  7318 ;;		_I2C_2_Master_Idle
  7319 ;; This function is called by:
  7320 ;;		_color_writetoaddr
  7321 ;;		_color_read_Luminosity
  7322 ;;		_color_read_Red
  7323 ;;		_color_read_Green
  7324 ;;		_color_read_Blue
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text42
  7329   0038A6                     __ptext42:
  7330                           	callstack 0
  7331   0038A6                     _I2C_2_Master_Stop:
  7332                           	callstack 26
  7333   0038A6                     
  7334                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  7335   0038A6  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7336   0038AA                     
  7337                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7338   0038AA  010E               	movlb	14	; () banked
  7339   0038AC  85DA               	bsf	218,2,b	;volatile
  7340   0038AE                     
  7341                           ; BSR set to: 14
  7342   0038AE  0012               	return		;funcret
  7343   0038B0                     __end_of_I2C_2_Master_Stop:
  7344                           	callstack 0
  7345                           
  7346 ;; *************** function _I2C_2_Master_Start *****************
  7347 ;; Defined at:
  7348 ;;		line 27 in file "../i2c.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;		None
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;		None
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1    wreg      void 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0, cstack
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7366 ;;Total ram usage:        0 bytes
  7367 ;; Hardware stack levels used: 1
  7368 ;; Hardware stack levels required when called: 2
  7369 ;; This function calls:
  7370 ;;		_I2C_2_Master_Idle
  7371 ;; This function is called by:
  7372 ;;		_color_writetoaddr
  7373 ;;		_color_read_Luminosity
  7374 ;;		_color_read_Red
  7375 ;;		_color_read_Green
  7376 ;;		_color_read_Blue
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text43
  7381   0038B0                     __ptext43:
  7382                           	callstack 0
  7383   0038B0                     _I2C_2_Master_Start:
  7384                           	callstack 26
  7385   0038B0                     
  7386                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  7387   0038B0  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7388   0038B4                     
  7389                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7390   0038B4  010E               	movlb	14	; () banked
  7391   0038B6  81DA               	bsf	218,0,b	;volatile
  7392   0038B8                     
  7393                           ; BSR set to: 14
  7394   0038B8  0012               	return		;funcret
  7395   0038BA                     __end_of_I2C_2_Master_Start:
  7396                           	callstack 0
  7397                           
  7398 ;; *************** function _I2C_2_Master_Idle *****************
  7399 ;; Defined at:
  7400 ;;		line 22 in file "../i2c.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;Total ram usage:        1 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 1
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_I2C_2_Master_Start
  7425 ;;		_I2C_2_Master_RepStart
  7426 ;;		_I2C_2_Master_Stop
  7427 ;;		_I2C_2_Master_Write
  7428 ;;		_I2C_2_Master_Read
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text44
  7433   0037A2                     __ptext44:
  7434                           	callstack 0
  7435   0037A2                     _I2C_2_Master_Idle:
  7436                           	callstack 26
  7437   0037A2                     l115:
  7438   0037A2  010E               	movlb	14	; () banked
  7439   0037A4  B5D8               	btfsc	216,2,b	;volatile
  7440   0037A6  EFD7  F01B         	goto	u1351
  7441   0037AA  EFD9  F01B         	goto	u1350
  7442   0037AE                     u1351:
  7443   0037AE  EFD1  F01B         	goto	l115
  7444   0037B2                     u1350:
  7445   0037B2                     
  7446                           ; BSR set to: 14
  7447   0037B2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7448   0037B6  0E1F               	movlw	31
  7449   0037B8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7450   0037BA  A4D8               	btfss	status,2,c
  7451   0037BC  EFE2  F01B         	goto	u1361
  7452   0037C0  EFE4  F01B         	goto	u1360
  7453   0037C4                     u1361:
  7454   0037C4  EFD1  F01B         	goto	l115
  7455   0037C8                     u1360:
  7456   0037C8                     
  7457                           ; BSR set to: 14
  7458   0037C8  0012               	return		;funcret
  7459   0037CA                     __end_of_I2C_2_Master_Idle:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _I2C_2_Master_Init *****************
  7463 ;; Defined at:
  7464 ;;		line 4 in file "../i2c.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;Total ram usage:        0 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 1
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_color_click_init
  7489 ;;		_main
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text45
  7494   003778                     __ptext45:
  7495                           	callstack 0
  7496   003778                     _I2C_2_Master_Init:
  7497                           	callstack 28
  7498   003778                     
  7499                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7500   003778  010E               	movlb	14	; () banked
  7501   00377A  51D9               	movf	217,w,b	;volatile
  7502   00377C  0BF0               	andlw	-16
  7503   00377E  0908               	iorlw	8
  7504   003780  6FD9               	movwf	217,b	;volatile
  7505   003782                     
  7506                           ; BSR set to: 14
  7507                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7508   003782  8BD9               	bsf	217,5,b	;volatile
  7509                           
  7510                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7511   003784  0E9F               	movlw	159
  7512   003786  6FD6               	movwf	214,b	;volatile
  7513   003788                     
  7514                           ; BSR set to: 14
  7515                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7516   003788  8A84               	bsf	132,5,c	;volatile
  7517   00378A                     
  7518                           ; BSR set to: 14
  7519                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7520   00378A  8C84               	bsf	132,6,c	;volatile
  7521   00378C                     
  7522                           ; BSR set to: 14
  7523                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7524   00378C  9BA7               	bcf	167,5,b	;volatile
  7525   00378E                     
  7526                           ; BSR set to: 14
  7527                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7528   00378E  9DA7               	bcf	167,6,b	;volatile
  7529                           
  7530                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  7531   003790  0E1D               	movlw	29
  7532   003792  6F1D               	movwf	29,b	;volatile
  7533                           
  7534                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  7535   003794  0E1E               	movlw	30
  7536   003796  6F1C               	movwf	28,b	;volatile
  7537                           
  7538                           ;../i2c.c: 18:   RD5PPS=0x1C;
  7539   003798  0E1C               	movlw	28
  7540   00379A  6F6F               	movwf	111,b	;volatile
  7541                           
  7542                           ;../i2c.c: 19:   RD6PPS=0x1B;
  7543   00379C  0E1B               	movlw	27
  7544   00379E  6F70               	movwf	112,b	;volatile
  7545   0037A0                     
  7546                           ; BSR set to: 14
  7547   0037A0  0012               	return		;funcret
  7548   0037A2                     __end_of_I2C_2_Master_Init:
  7549                           	callstack 0
  7550                           
  7551 ;; *************** function ___xxtofl *****************
  7552 ;; Defined at:
  7553 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  sign            1    wreg     unsigned char 
  7556 ;;  val             4    0[COMRAM] long 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  sign            1    8[COMRAM] unsigned char 
  7559 ;;  arg             4   10[COMRAM] unsigned long 
  7560 ;;  exp             1    9[COMRAM] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  4    0[COMRAM] unsigned char 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;Total ram usage:       14 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 1
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_main
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text46
  7585   002340                     __ptext46:
  7586                           	callstack 0
  7587   002340                     ___xxtofl:
  7588                           	callstack 29
  7589                           
  7590                           ; BSR set to: 14
  7591                           ;incstack = 0
  7592                           ;___xxtofl@sign stored from wreg
  7593   002340  6E09               	movwf	___xxtofl@sign^0,c
  7594   002342  5009               	movf	___xxtofl@sign^0,w,c
  7595   002344  B4D8               	btfsc	status,2,c
  7596   002346  EFA7  F011         	goto	u2051
  7597   00234A  EFA9  F011         	goto	u2050
  7598   00234E                     u2051:
  7599   00234E  EFCB  F011         	goto	l1140
  7600   002352                     u2050:
  7601   002352  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7602   002354  EFB0  F011         	goto	u2060
  7603   002358  EFAE  F011         	goto	u2061
  7604   00235C                     u2061:
  7605   00235C  EFCB  F011         	goto	l1140
  7606   002360                     u2060:
  7607   002360  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7608   002364  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7609   002368  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7610   00236C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7611   002370  1E05               	comf	??___xxtofl^0,f,c
  7612   002372  1E06               	comf	(??___xxtofl+1)^0,f,c
  7613   002374  1E07               	comf	(??___xxtofl+2)^0,f,c
  7614   002376  1E08               	comf	(??___xxtofl+3)^0,f,c
  7615   002378  2A05               	incf	??___xxtofl^0,f,c
  7616   00237A  0E00               	movlw	0
  7617   00237C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7618   00237E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7619   002380  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7620   002382  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7621   002386  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7622   00238A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7623   00238E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7624   002392  EFD3  F011         	goto	l3805
  7625   002396                     l1140:
  7626   002396  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7627   00239A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7628   00239E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7629   0023A2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7630   0023A6                     l3805:
  7631   0023A6  5001               	movf	___xxtofl@val^0,w,c
  7632   0023A8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7633   0023AA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7634   0023AC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7635   0023AE  A4D8               	btfss	status,2,c
  7636   0023B0  EFDC  F011         	goto	u2071
  7637   0023B4  EFDE  F011         	goto	u2070
  7638   0023B8                     u2071:
  7639   0023B8  EFE8  F011         	goto	l3811
  7640   0023BC                     u2070:
  7641   0023BC  0E00               	movlw	0
  7642   0023BE  6E01               	movwf	?___xxtofl^0,c
  7643   0023C0  0E00               	movlw	0
  7644   0023C2  6E02               	movwf	(?___xxtofl+1)^0,c
  7645   0023C4  0E00               	movlw	0
  7646   0023C6  6E03               	movwf	(?___xxtofl+2)^0,c
  7647   0023C8  0E00               	movlw	0
  7648   0023CA  6E04               	movwf	(?___xxtofl+3)^0,c
  7649   0023CC  EF79  F012         	goto	l1143
  7650   0023D0                     l3811:
  7651   0023D0  0E96               	movlw	150
  7652   0023D2  6E0A               	movwf	___xxtofl@exp^0,c
  7653   0023D4  EFF2  F011         	goto	l3815
  7654   0023D8                     l3813:
  7655   0023D8  2A0A               	incf	___xxtofl@exp^0,f,c
  7656   0023DA  90D8               	bcf	status,0,c
  7657   0023DC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7658   0023DE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7659   0023E0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7660   0023E2  320B               	rrcf	___xxtofl@arg^0,f,c
  7661   0023E4                     l3815:
  7662   0023E4  0E00               	movlw	0
  7663   0023E6  140B               	andwf	___xxtofl@arg^0,w,c
  7664   0023E8  6E05               	movwf	??___xxtofl^0,c
  7665   0023EA  0E00               	movlw	0
  7666   0023EC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7667   0023EE  6E06               	movwf	(??___xxtofl+1)^0,c
  7668   0023F0  0E00               	movlw	0
  7669   0023F2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7670   0023F4  6E07               	movwf	(??___xxtofl+2)^0,c
  7671   0023F6  0EFE               	movlw	254
  7672   0023F8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7673   0023FA  6E08               	movwf	(??___xxtofl+3)^0,c
  7674   0023FC  5005               	movf	??___xxtofl^0,w,c
  7675   0023FE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7676   002400  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7677   002402  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7678   002404  A4D8               	btfss	status,2,c
  7679   002406  EF07  F012         	goto	u2081
  7680   00240A  EF09  F012         	goto	u2080
  7681   00240E                     u2081:
  7682   00240E  EFEC  F011         	goto	l3813
  7683   002412                     u2080:
  7684   002412  EF17  F012         	goto	l1147
  7685   002416                     l3817:
  7686   002416  2A0A               	incf	___xxtofl@exp^0,f,c
  7687   002418  0E01               	movlw	1
  7688   00241A  260B               	addwf	___xxtofl@arg^0,f,c
  7689   00241C  0E00               	movlw	0
  7690   00241E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7691   002420  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7692   002422  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7693   002424  90D8               	bcf	status,0,c
  7694   002426  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7695   002428  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7696   00242A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7697   00242C  320B               	rrcf	___xxtofl@arg^0,f,c
  7698   00242E                     l1147:
  7699   00242E  0E00               	movlw	0
  7700   002430  140B               	andwf	___xxtofl@arg^0,w,c
  7701   002432  6E05               	movwf	??___xxtofl^0,c
  7702   002434  0E00               	movlw	0
  7703   002436  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7704   002438  6E06               	movwf	(??___xxtofl+1)^0,c
  7705   00243A  0E00               	movlw	0
  7706   00243C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7707   00243E  6E07               	movwf	(??___xxtofl+2)^0,c
  7708   002440  0EFF               	movlw	255
  7709   002442  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7710   002444  6E08               	movwf	(??___xxtofl+3)^0,c
  7711   002446  5005               	movf	??___xxtofl^0,w,c
  7712   002448  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7713   00244A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7714   00244C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7715   00244E  A4D8               	btfss	status,2,c
  7716   002450  EF2C  F012         	goto	u2091
  7717   002454  EF2E  F012         	goto	u2090
  7718   002458                     u2091:
  7719   002458  EF0B  F012         	goto	l3817
  7720   00245C                     u2090:
  7721   00245C  EF36  F012         	goto	l3825
  7722   002460                     l3823:
  7723   002460  060A               	decf	___xxtofl@exp^0,f,c
  7724   002462  90D8               	bcf	status,0,c
  7725   002464  360B               	rlcf	___xxtofl@arg^0,f,c
  7726   002466  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7727   002468  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7728   00246A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7729   00246C                     l3825:
  7730   00246C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7731   00246E  EF3B  F012         	goto	u2101
  7732   002472  EF3D  F012         	goto	u2100
  7733   002476                     u2101:
  7734   002476  EF45  F012         	goto	l1154
  7735   00247A                     u2100:
  7736   00247A  0E02               	movlw	2
  7737   00247C  600A               	cpfslt	___xxtofl@exp^0,c
  7738   00247E  EF43  F012         	goto	u2111
  7739   002482  EF45  F012         	goto	u2110
  7740   002486                     u2111:
  7741   002486  EF30  F012         	goto	l3823
  7742   00248A                     u2110:
  7743   00248A                     l1154:
  7744   00248A  B00A               	btfsc	___xxtofl@exp^0,0,c
  7745   00248C  EF4A  F012         	goto	u2121
  7746   002490  EF4C  F012         	goto	u2120
  7747   002494                     u2121:
  7748   002494  EF4D  F012         	goto	l3831
  7749   002498                     u2120:
  7750   002498  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7751   00249A                     l3831:
  7752   00249A  90D8               	bcf	status,0,c
  7753   00249C  320A               	rrcf	___xxtofl@exp^0,f,c
  7754   00249E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7755   0024A2  6A06               	clrf	(??___xxtofl+1)^0,c
  7756   0024A4  6A07               	clrf	(??___xxtofl+2)^0,c
  7757   0024A6  6A08               	clrf	(??___xxtofl+3)^0,c
  7758   0024A8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7759   0024AC  6A07               	clrf	(??___xxtofl+2)^0,c
  7760   0024AE  6A06               	clrf	(??___xxtofl+1)^0,c
  7761   0024B0  6A05               	clrf	??___xxtofl^0,c
  7762   0024B2  5005               	movf	??___xxtofl^0,w,c
  7763   0024B4  120B               	iorwf	___xxtofl@arg^0,f,c
  7764   0024B6  5006               	movf	(??___xxtofl+1)^0,w,c
  7765   0024B8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7766   0024BA  5007               	movf	(??___xxtofl+2)^0,w,c
  7767   0024BC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7768   0024BE  5008               	movf	(??___xxtofl+3)^0,w,c
  7769   0024C0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7770   0024C2  5009               	movf	___xxtofl@sign^0,w,c
  7771   0024C4  B4D8               	btfsc	status,2,c
  7772   0024C6  EF67  F012         	goto	u2131
  7773   0024CA  EF69  F012         	goto	u2130
  7774   0024CE                     u2131:
  7775   0024CE  EF71  F012         	goto	l3841
  7776   0024D2                     u2130:
  7777   0024D2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7778   0024D4  EF70  F012         	goto	u2140
  7779   0024D8  EF6E  F012         	goto	u2141
  7780   0024DC                     u2141:
  7781   0024DC  EF71  F012         	goto	l3841
  7782   0024E0                     u2140:
  7783   0024E0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7784   0024E2                     l3841:
  7785   0024E2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7786   0024E6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7787   0024EA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7788   0024EE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7789   0024F2                     l1143:
  7790   0024F2  0012               	return		;funcret
  7791   0024F4                     __end_of___xxtofl:
  7792                           	callstack 0
  7793                           
  7794 ;; *************** function ___fltol *****************
  7795 ;; Defined at:
  7796 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  f1              4   39[COMRAM] unsigned char 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  exp1            1   48[COMRAM] unsigned char 
  7801 ;;  sign1           1   47[COMRAM] unsigned char 
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  4   39[COMRAM] long 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7814 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;Total ram usage:       10 bytes
  7816 ;; Hardware stack levels used: 1
  7817 ;; Hardware stack levels required when called: 1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_main
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text47
  7826   002A62                     __ptext47:
  7827                           	callstack 0
  7828   002A62                     ___fltol:
  7829                           	callstack 29
  7830   002A62  342A               	rlcf	(___fltol@f1+2)^0,w,c
  7831   002A64  342B               	rlcf	(___fltol@f1+3)^0,w,c
  7832   002A66  6E31               	movwf	___fltol@exp1^0,c
  7833   002A68  5031               	movf	___fltol@exp1^0,w,c
  7834   002A6A  A4D8               	btfss	status,2,c
  7835   002A6C  EF3A  F015         	goto	u1981
  7836   002A70  EF3C  F015         	goto	u1980
  7837   002A74                     u1981:
  7838   002A74  EF46  F015         	goto	l3761
  7839   002A78                     u1980:
  7840   002A78                     l3757:
  7841   002A78  0E00               	movlw	0
  7842   002A7A  6E28               	movwf	?___fltol^0,c
  7843   002A7C  0E00               	movlw	0
  7844   002A7E  6E29               	movwf	(?___fltol+1)^0,c
  7845   002A80  0E00               	movlw	0
  7846   002A82  6E2A               	movwf	(?___fltol+2)^0,c
  7847   002A84  0E00               	movlw	0
  7848   002A86  6E2B               	movwf	(?___fltol+3)^0,c
  7849   002A88  EFB3  F015         	goto	l782
  7850   002A8C                     l3761:
  7851   002A8C  C028  F02C         	movff	___fltol@f1,??___fltol
  7852   002A90  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  7853   002A94  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  7854   002A98  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  7855   002A9C  0E20               	movlw	32
  7856   002A9E  EF56  F015         	goto	u1990
  7857   002AA2                     u1995:
  7858   002AA2  90D8               	bcf	status,0,c
  7859   002AA4  322F               	rrcf	(??___fltol+3)^0,f,c
  7860   002AA6  322E               	rrcf	(??___fltol+2)^0,f,c
  7861   002AA8  322D               	rrcf	(??___fltol+1)^0,f,c
  7862   002AAA  322C               	rrcf	??___fltol^0,f,c
  7863   002AAC                     u1990:
  7864   002AAC  2EE8               	decfsz	wreg,f,c
  7865   002AAE  EF51  F015         	goto	u1995
  7866   002AB2  502C               	movf	??___fltol^0,w,c
  7867   002AB4  6E30               	movwf	___fltol@sign1^0,c
  7868   002AB6  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  7869   002AB8  0EFF               	movlw	255
  7870   002ABA  1628               	andwf	___fltol@f1^0,f,c
  7871   002ABC  0EFF               	movlw	255
  7872   002ABE  1629               	andwf	(___fltol@f1+1)^0,f,c
  7873   002AC0  0EFF               	movlw	255
  7874   002AC2  162A               	andwf	(___fltol@f1+2)^0,f,c
  7875   002AC4  0E00               	movlw	0
  7876   002AC6  162B               	andwf	(___fltol@f1+3)^0,f,c
  7877   002AC8  0E96               	movlw	150
  7878   002ACA  5E31               	subwf	___fltol@exp1^0,f,c
  7879   002ACC  BE31               	btfsc	___fltol@exp1^0,7,c
  7880   002ACE  EF6D  F015         	goto	u2000
  7881   002AD2  EF6B  F015         	goto	u2001
  7882   002AD6                     u2001:
  7883   002AD6  EF83  F015         	goto	l3781
  7884   002ADA                     u2000:
  7885   002ADA  5031               	movf	___fltol@exp1^0,w,c
  7886   002ADC  0A80               	xorlw	128
  7887   002ADE  0F97               	addlw	151
  7888   002AE0  B0D8               	btfsc	status,0,c
  7889   002AE2  EF75  F015         	goto	u2011
  7890   002AE6  EF77  F015         	goto	u2010
  7891   002AEA                     u2011:
  7892   002AEA  EF79  F015         	goto	l3777
  7893   002AEE                     u2010:
  7894   002AEE  EF3C  F015         	goto	l3757
  7895   002AF2                     l3777:
  7896   002AF2  90D8               	bcf	status,0,c
  7897   002AF4  322B               	rrcf	(___fltol@f1+3)^0,f,c
  7898   002AF6  322A               	rrcf	(___fltol@f1+2)^0,f,c
  7899   002AF8  3229               	rrcf	(___fltol@f1+1)^0,f,c
  7900   002AFA  3228               	rrcf	___fltol@f1^0,f,c
  7901   002AFC  3E31               	incfsz	___fltol@exp1^0,f,c
  7902   002AFE  EF79  F015         	goto	l3777
  7903   002B02  EF9B  F015         	goto	l3791
  7904   002B06                     l3781:
  7905   002B06  0E1F               	movlw	31
  7906   002B08  6431               	cpfsgt	___fltol@exp1^0,c
  7907   002B0A  EF89  F015         	goto	u2021
  7908   002B0E  EF8B  F015         	goto	u2020
  7909   002B12                     u2021:
  7910   002B12  EF93  F015         	goto	l3789
  7911   002B16                     u2020:
  7912   002B16  EF3C  F015         	goto	l3757
  7913   002B1A                     l3787:
  7914   002B1A  90D8               	bcf	status,0,c
  7915   002B1C  3628               	rlcf	___fltol@f1^0,f,c
  7916   002B1E  3629               	rlcf	(___fltol@f1+1)^0,f,c
  7917   002B20  362A               	rlcf	(___fltol@f1+2)^0,f,c
  7918   002B22  362B               	rlcf	(___fltol@f1+3)^0,f,c
  7919   002B24  0631               	decf	___fltol@exp1^0,f,c
  7920   002B26                     l3789:
  7921   002B26  5031               	movf	___fltol@exp1^0,w,c
  7922   002B28  A4D8               	btfss	status,2,c
  7923   002B2A  EF99  F015         	goto	u2031
  7924   002B2E  EF9B  F015         	goto	u2030
  7925   002B32                     u2031:
  7926   002B32  EF8D  F015         	goto	l3787
  7927   002B36                     u2030:
  7928   002B36                     l3791:
  7929   002B36  5030               	movf	___fltol@sign1^0,w,c
  7930   002B38  B4D8               	btfsc	status,2,c
  7931   002B3A  EFA1  F015         	goto	u2041
  7932   002B3E  EFA3  F015         	goto	u2040
  7933   002B42                     u2041:
  7934   002B42  EFAB  F015         	goto	l3795
  7935   002B46                     u2040:
  7936   002B46  1E2B               	comf	(___fltol@f1+3)^0,f,c
  7937   002B48  1E2A               	comf	(___fltol@f1+2)^0,f,c
  7938   002B4A  1E29               	comf	(___fltol@f1+1)^0,f,c
  7939   002B4C  6C28               	negf	___fltol@f1^0,c
  7940   002B4E  0E00               	movlw	0
  7941   002B50  2229               	addwfc	(___fltol@f1+1)^0,f,c
  7942   002B52  222A               	addwfc	(___fltol@f1+2)^0,f,c
  7943   002B54  222B               	addwfc	(___fltol@f1+3)^0,f,c
  7944   002B56                     l3795:
  7945   002B56  C028  F028         	movff	___fltol@f1,?___fltol
  7946   002B5A  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  7947   002B5E  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  7948   002B62  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  7949   002B66                     l782:
  7950   002B66  0012               	return		;funcret
  7951   002B68                     __end_of___fltol:
  7952                           	callstack 0
  7953                           
  7954 ;; *************** function ___flmul *****************
  7955 ;; Defined at:
  7956 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  b               4   14[COMRAM] long 
  7959 ;;  a               4   18[COMRAM] long 
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;  prod            4   33[COMRAM] struct .
  7962 ;;  grs             4   27[COMRAM] unsigned long 
  7963 ;;  temp            2   37[COMRAM] struct .
  7964 ;;  bexp            1   32[COMRAM] unsigned char 
  7965 ;;  aexp            1   31[COMRAM] unsigned char 
  7966 ;;  sign            1   26[COMRAM] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  4   14[COMRAM] unsigned char 
  7969 ;; Registers used:
  7970 ;;		wreg, status,2, status,0, prodl, prodh
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7976 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;Total ram usage:       25 bytes
  7981 ;; Hardware stack levels used: 1
  7982 ;; Hardware stack levels required when called: 1
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_main
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text48
  7991   00172A                     __ptext48:
  7992                           	callstack 0
  7993   00172A                     ___flmul:
  7994                           	callstack 29
  7995   00172A  5012               	movf	(___flmul@b+3)^0,w,c
  7996   00172C  0B80               	andlw	128
  7997   00172E  6E1B               	movwf	___flmul@sign^0,c
  7998   001730  5012               	movf	(___flmul@b+3)^0,w,c
  7999   001732  2412               	addwf	(___flmul@b+3)^0,w,c
  8000   001734  6E21               	movwf	___flmul@bexp^0,c
  8001   001736  AE11               	btfss	(___flmul@b+2)^0,7,c
  8002   001738  EFA0  F00B         	goto	u1791
  8003   00173C  EFA2  F00B         	goto	u1790
  8004   001740                     u1791:
  8005   001740  EFA3  F00B         	goto	l3631
  8006   001744                     u1790:
  8007   001744  8021               	bsf	___flmul@bexp^0,0,c
  8008   001746                     l3631:
  8009   001746  5021               	movf	___flmul@bexp^0,w,c
  8010   001748  B4D8               	btfsc	status,2,c
  8011   00174A  EFA9  F00B         	goto	u1801
  8012   00174E  EFAB  F00B         	goto	u1800
  8013   001752                     u1801:
  8014   001752  EFBE  F00B         	goto	l3639
  8015   001756                     u1800:
  8016   001756  2821               	incf	___flmul@bexp^0,w,c
  8017   001758  A4D8               	btfss	status,2,c
  8018   00175A  EFB1  F00B         	goto	u1811
  8019   00175E  EFB3  F00B         	goto	u1810
  8020   001762                     u1811:
  8021   001762  EFBB  F00B         	goto	l3637
  8022   001766                     u1810:
  8023   001766  0E00               	movlw	0
  8024   001768  6E0F               	movwf	___flmul@b^0,c
  8025   00176A  0E00               	movlw	0
  8026   00176C  6E10               	movwf	(___flmul@b+1)^0,c
  8027   00176E  0E00               	movlw	0
  8028   001770  6E11               	movwf	(___flmul@b+2)^0,c
  8029   001772  0E00               	movlw	0
  8030   001774  6E12               	movwf	(___flmul@b+3)^0,c
  8031   001776                     l3637:
  8032   001776  8E11               	bsf	(___flmul@b+2)^0,7,c
  8033   001778  EFC6  F00B         	goto	l3641
  8034   00177C                     l3639:
  8035   00177C  0E00               	movlw	0
  8036   00177E  6E0F               	movwf	___flmul@b^0,c
  8037   001780  0E00               	movlw	0
  8038   001782  6E10               	movwf	(___flmul@b+1)^0,c
  8039   001784  0E00               	movlw	0
  8040   001786  6E11               	movwf	(___flmul@b+2)^0,c
  8041   001788  0E00               	movlw	0
  8042   00178A  6E12               	movwf	(___flmul@b+3)^0,c
  8043   00178C                     l3641:
  8044   00178C  5016               	movf	(___flmul@a+3)^0,w,c
  8045   00178E  0B80               	andlw	128
  8046   001790  1A1B               	xorwf	___flmul@sign^0,f,c
  8047   001792  5016               	movf	(___flmul@a+3)^0,w,c
  8048   001794  2416               	addwf	(___flmul@a+3)^0,w,c
  8049   001796  6E20               	movwf	___flmul@aexp^0,c
  8050   001798  AE15               	btfss	(___flmul@a+2)^0,7,c
  8051   00179A  EFD1  F00B         	goto	u1821
  8052   00179E  EFD3  F00B         	goto	u1820
  8053   0017A2                     u1821:
  8054   0017A2  EFD4  F00B         	goto	l3649
  8055   0017A6                     u1820:
  8056   0017A6  8020               	bsf	___flmul@aexp^0,0,c
  8057   0017A8                     l3649:
  8058   0017A8  5020               	movf	___flmul@aexp^0,w,c
  8059   0017AA  B4D8               	btfsc	status,2,c
  8060   0017AC  EFDA  F00B         	goto	u1831
  8061   0017B0  EFDC  F00B         	goto	u1830
  8062   0017B4                     u1831:
  8063   0017B4  EFEF  F00B         	goto	l3657
  8064   0017B8                     u1830:
  8065   0017B8  2820               	incf	___flmul@aexp^0,w,c
  8066   0017BA  A4D8               	btfss	status,2,c
  8067   0017BC  EFE2  F00B         	goto	u1841
  8068   0017C0  EFE4  F00B         	goto	u1840
  8069   0017C4                     u1841:
  8070   0017C4  EFEC  F00B         	goto	l3655
  8071   0017C8                     u1840:
  8072   0017C8  0E00               	movlw	0
  8073   0017CA  6E13               	movwf	___flmul@a^0,c
  8074   0017CC  0E00               	movlw	0
  8075   0017CE  6E14               	movwf	(___flmul@a+1)^0,c
  8076   0017D0  0E00               	movlw	0
  8077   0017D2  6E15               	movwf	(___flmul@a+2)^0,c
  8078   0017D4  0E00               	movlw	0
  8079   0017D6  6E16               	movwf	(___flmul@a+3)^0,c
  8080   0017D8                     l3655:
  8081   0017D8  8E15               	bsf	(___flmul@a+2)^0,7,c
  8082   0017DA  EFF7  F00B         	goto	l1099
  8083   0017DE                     l3657:
  8084   0017DE  0E00               	movlw	0
  8085   0017E0  6E13               	movwf	___flmul@a^0,c
  8086   0017E2  0E00               	movlw	0
  8087   0017E4  6E14               	movwf	(___flmul@a+1)^0,c
  8088   0017E6  0E00               	movlw	0
  8089   0017E8  6E15               	movwf	(___flmul@a+2)^0,c
  8090   0017EA  0E00               	movlw	0
  8091   0017EC  6E16               	movwf	(___flmul@a+3)^0,c
  8092   0017EE                     l1099:
  8093   0017EE  5020               	movf	___flmul@aexp^0,w,c
  8094   0017F0  B4D8               	btfsc	status,2,c
  8095   0017F2  EFFD  F00B         	goto	u1851
  8096   0017F6  EFFF  F00B         	goto	u1850
  8097   0017FA                     u1851:
  8098   0017FA  EF07  F00C         	goto	l3661
  8099   0017FE                     u1850:
  8100   0017FE  5021               	movf	___flmul@bexp^0,w,c
  8101   001800  A4D8               	btfss	status,2,c
  8102   001802  EF05  F00C         	goto	u1861
  8103   001806  EF07  F00C         	goto	u1860
  8104   00180A                     u1861:
  8105   00180A  EF11  F00C         	goto	l3665
  8106   00180E                     u1860:
  8107   00180E                     l3661:
  8108   00180E  0E00               	movlw	0
  8109   001810  6E0F               	movwf	?___flmul^0,c
  8110   001812  0E00               	movlw	0
  8111   001814  6E10               	movwf	(?___flmul+1)^0,c
  8112   001816  0E00               	movlw	0
  8113   001818  6E11               	movwf	(?___flmul+2)^0,c
  8114   00181A  0E00               	movlw	0
  8115   00181C  6E12               	movwf	(?___flmul+3)^0,c
  8116   00181E  EFA9  F00D         	goto	l1103
  8117   001822                     l3665:
  8118   001822  5015               	movf	(___flmul@a+2)^0,w,c
  8119   001824  020F               	mulwf	___flmul@b^0,c
  8120   001826  CFF3 F026          	movff	prodl,___flmul@temp
  8121   00182A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8122   00182E  5026               	movf	___flmul@temp^0,w,c
  8123   001830  6E1C               	movwf	___flmul@grs^0,c
  8124   001832  6A1D               	clrf	(___flmul@grs+1)^0,c
  8125   001834  6A1E               	clrf	(___flmul@grs+2)^0,c
  8126   001836  6A1F               	clrf	(___flmul@grs+3)^0,c
  8127   001838  5027               	movf	(___flmul@temp+1)^0,w,c
  8128   00183A  6E22               	movwf	___flmul@prod^0,c
  8129   00183C  6A23               	clrf	(___flmul@prod+1)^0,c
  8130   00183E  6A24               	clrf	(___flmul@prod+2)^0,c
  8131   001840  6A25               	clrf	(___flmul@prod+3)^0,c
  8132   001842  5014               	movf	(___flmul@a+1)^0,w,c
  8133   001844  0210               	mulwf	(___flmul@b+1)^0,c
  8134   001846  CFF3 F026          	movff	prodl,___flmul@temp
  8135   00184A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8136   00184E  5026               	movf	___flmul@temp^0,w,c
  8137   001850  261C               	addwf	___flmul@grs^0,f,c
  8138   001852  0E00               	movlw	0
  8139   001854  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8140   001856  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8141   001858  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8142   00185A  5027               	movf	(___flmul@temp+1)^0,w,c
  8143   00185C  2622               	addwf	___flmul@prod^0,f,c
  8144   00185E  0E00               	movlw	0
  8145   001860  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8146   001862  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8147   001864  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8148   001866  5013               	movf	___flmul@a^0,w,c
  8149   001868  0211               	mulwf	(___flmul@b+2)^0,c
  8150   00186A  CFF3 F026          	movff	prodl,___flmul@temp
  8151   00186E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8152   001872  5026               	movf	___flmul@temp^0,w,c
  8153   001874  261C               	addwf	___flmul@grs^0,f,c
  8154   001876  0E00               	movlw	0
  8155   001878  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8156   00187A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8157   00187C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8158   00187E  5027               	movf	(___flmul@temp+1)^0,w,c
  8159   001880  2622               	addwf	___flmul@prod^0,f,c
  8160   001882  0E00               	movlw	0
  8161   001884  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8162   001886  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8163   001888  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8164   00188A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8165   00188E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8166   001892  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8167   001896  6A1C               	clrf	___flmul@grs^0,c
  8168   001898  5013               	movf	___flmul@a^0,w,c
  8169   00189A  0210               	mulwf	(___flmul@b+1)^0,c
  8170   00189C  CFF3 F026          	movff	prodl,___flmul@temp
  8171   0018A0  CFF4 F027          	movff	prodh,___flmul@temp+1
  8172   0018A4  5026               	movf	___flmul@temp^0,w,c
  8173   0018A6  261C               	addwf	___flmul@grs^0,f,c
  8174   0018A8  5027               	movf	(___flmul@temp+1)^0,w,c
  8175   0018AA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8176   0018AC  0E00               	movlw	0
  8177   0018AE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8178   0018B0  0E00               	movlw	0
  8179   0018B2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8180   0018B4  5014               	movf	(___flmul@a+1)^0,w,c
  8181   0018B6  020F               	mulwf	___flmul@b^0,c
  8182   0018B8  CFF3 F026          	movff	prodl,___flmul@temp
  8183   0018BC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8184   0018C0  5026               	movf	___flmul@temp^0,w,c
  8185   0018C2  261C               	addwf	___flmul@grs^0,f,c
  8186   0018C4  5027               	movf	(___flmul@temp+1)^0,w,c
  8187   0018C6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8188   0018C8  0E00               	movlw	0
  8189   0018CA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8190   0018CC  0E00               	movlw	0
  8191   0018CE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8192   0018D0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8193   0018D4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8194   0018D8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8195   0018DC  6A1C               	clrf	___flmul@grs^0,c
  8196   0018DE  5013               	movf	___flmul@a^0,w,c
  8197   0018E0  020F               	mulwf	___flmul@b^0,c
  8198   0018E2  CFF3 F026          	movff	prodl,___flmul@temp
  8199   0018E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8200   0018EA  5026               	movf	___flmul@temp^0,w,c
  8201   0018EC  261C               	addwf	___flmul@grs^0,f,c
  8202   0018EE  5027               	movf	(___flmul@temp+1)^0,w,c
  8203   0018F0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8204   0018F2  0E00               	movlw	0
  8205   0018F4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8206   0018F6  0E00               	movlw	0
  8207   0018F8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8208   0018FA  5015               	movf	(___flmul@a+2)^0,w,c
  8209   0018FC  0210               	mulwf	(___flmul@b+1)^0,c
  8210   0018FE  CFF3 F026          	movff	prodl,___flmul@temp
  8211   001902  CFF4 F027          	movff	prodh,___flmul@temp+1
  8212   001906  5026               	movf	___flmul@temp^0,w,c
  8213   001908  2622               	addwf	___flmul@prod^0,f,c
  8214   00190A  5027               	movf	(___flmul@temp+1)^0,w,c
  8215   00190C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8216   00190E  0E00               	movlw	0
  8217   001910  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8218   001912  0E00               	movlw	0
  8219   001914  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8220   001916  5014               	movf	(___flmul@a+1)^0,w,c
  8221   001918  0211               	mulwf	(___flmul@b+2)^0,c
  8222   00191A  CFF3 F026          	movff	prodl,___flmul@temp
  8223   00191E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8224   001922  5026               	movf	___flmul@temp^0,w,c
  8225   001924  2622               	addwf	___flmul@prod^0,f,c
  8226   001926  5027               	movf	(___flmul@temp+1)^0,w,c
  8227   001928  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8228   00192A  0E00               	movlw	0
  8229   00192C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8230   00192E  0E00               	movlw	0
  8231   001930  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8232   001932  5015               	movf	(___flmul@a+2)^0,w,c
  8233   001934  0211               	mulwf	(___flmul@b+2)^0,c
  8234   001936  CFF3 F026          	movff	prodl,___flmul@temp
  8235   00193A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8236   00193E  5026               	movf	___flmul@temp^0,w,c
  8237   001940  6E17               	movwf	??___flmul^0,c
  8238   001942  5027               	movf	(___flmul@temp+1)^0,w,c
  8239   001944  6E18               	movwf	(??___flmul+1)^0,c
  8240   001946  6A19               	clrf	(??___flmul+2)^0,c
  8241   001948  6A1A               	clrf	(??___flmul+3)^0,c
  8242   00194A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8243   00194E  C018  F019         	movff	??___flmul+1,??___flmul+2
  8244   001952  C017  F018         	movff	??___flmul,??___flmul+1
  8245   001956  6A17               	clrf	??___flmul^0,c
  8246   001958  5017               	movf	??___flmul^0,w,c
  8247   00195A  2622               	addwf	___flmul@prod^0,f,c
  8248   00195C  5018               	movf	(??___flmul+1)^0,w,c
  8249   00195E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8250   001960  5019               	movf	(??___flmul+2)^0,w,c
  8251   001962  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8252   001964  501A               	movf	(??___flmul+3)^0,w,c
  8253   001966  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8254   001968  C01C  F017         	movff	___flmul@grs,??___flmul
  8255   00196C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8256   001970  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8257   001974  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8258   001978  0E19               	movlw	25
  8259   00197A  EFC4  F00C         	goto	u1870
  8260   00197E                     u1875:
  8261   00197E  90D8               	bcf	status,0,c
  8262   001980  321A               	rrcf	(??___flmul+3)^0,f,c
  8263   001982  3219               	rrcf	(??___flmul+2)^0,f,c
  8264   001984  3218               	rrcf	(??___flmul+1)^0,f,c
  8265   001986  3217               	rrcf	??___flmul^0,f,c
  8266   001988                     u1870:
  8267   001988  2EE8               	decfsz	wreg,f,c
  8268   00198A  EFBF  F00C         	goto	u1875
  8269   00198E  5017               	movf	??___flmul^0,w,c
  8270   001990  2622               	addwf	___flmul@prod^0,f,c
  8271   001992  5018               	movf	(??___flmul+1)^0,w,c
  8272   001994  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8273   001996  5019               	movf	(??___flmul+2)^0,w,c
  8274   001998  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8275   00199A  501A               	movf	(??___flmul+3)^0,w,c
  8276   00199C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8277   00199E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8278   0019A2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8279   0019A6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8280   0019AA  6A1C               	clrf	___flmul@grs^0,c
  8281   0019AC  5020               	movf	___flmul@aexp^0,w,c
  8282   0019AE  C021  F017         	movff	___flmul@bexp,??___flmul
  8283   0019B2  6A18               	clrf	(??___flmul+1)^0,c
  8284   0019B4  2617               	addwf	??___flmul^0,f,c
  8285   0019B6  0E00               	movlw	0
  8286   0019B8  2218               	addwfc	(??___flmul+1)^0,f,c
  8287   0019BA  0E82               	movlw	130
  8288   0019BC  2417               	addwf	??___flmul^0,w,c
  8289   0019BE  6E26               	movwf	___flmul@temp^0,c
  8290   0019C0  0EFF               	movlw	255
  8291   0019C2  2018               	addwfc	(??___flmul+1)^0,w,c
  8292   0019C4  6E27               	movwf	(___flmul@temp+1)^0,c
  8293   0019C6  EFFA  F00C         	goto	l3713
  8294   0019CA                     l3707:
  8295   0019CA  90D8               	bcf	status,0,c
  8296   0019CC  3622               	rlcf	___flmul@prod^0,f,c
  8297   0019CE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8298   0019D0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8299   0019D2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8300   0019D4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8301   0019D6  EFEF  F00C         	goto	u1881
  8302   0019DA  EFF1  F00C         	goto	u1880
  8303   0019DE                     u1881:
  8304   0019DE  EFF2  F00C         	goto	l1106
  8305   0019E2                     u1880:
  8306   0019E2  8022               	bsf	___flmul@prod^0,0,c
  8307   0019E4                     l1106:
  8308   0019E4  90D8               	bcf	status,0,c
  8309   0019E6  361C               	rlcf	___flmul@grs^0,f,c
  8310   0019E8  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8311   0019EA  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8312   0019EC  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8313   0019EE  0626               	decf	___flmul@temp^0,f,c
  8314   0019F0  A0D8               	btfss	status,0,c
  8315   0019F2  0627               	decf	(___flmul@temp+1)^0,f,c
  8316   0019F4                     l3713:
  8317   0019F4  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8318   0019F6  EFFF  F00C         	goto	u1891
  8319   0019FA  EF01  F00D         	goto	u1890
  8320   0019FE                     u1891:
  8321   0019FE  EFE5  F00C         	goto	l3707
  8322   001A02                     u1890:
  8323   001A02  0E00               	movlw	0
  8324   001A04  6E20               	movwf	___flmul@aexp^0,c
  8325   001A06  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8326   001A08  EF08  F00D         	goto	u1901
  8327   001A0C  EF0A  F00D         	goto	u1900
  8328   001A10                     u1901:
  8329   001A10  EF2E  F00D         	goto	l1108
  8330   001A14                     u1900:
  8331   001A14  0EFF               	movlw	255
  8332   001A16  141C               	andwf	___flmul@grs^0,w,c
  8333   001A18  6E17               	movwf	??___flmul^0,c
  8334   001A1A  0EFF               	movlw	255
  8335   001A1C  141D               	andwf	(___flmul@grs+1)^0,w,c
  8336   001A1E  6E18               	movwf	(??___flmul+1)^0,c
  8337   001A20  0EFF               	movlw	255
  8338   001A22  141E               	andwf	(___flmul@grs+2)^0,w,c
  8339   001A24  6E19               	movwf	(??___flmul+2)^0,c
  8340   001A26  0E7F               	movlw	127
  8341   001A28  141F               	andwf	(___flmul@grs+3)^0,w,c
  8342   001A2A  6E1A               	movwf	(??___flmul+3)^0,c
  8343   001A2C  5017               	movf	??___flmul^0,w,c
  8344   001A2E  1018               	iorwf	(??___flmul+1)^0,w,c
  8345   001A30  1019               	iorwf	(??___flmul+2)^0,w,c
  8346   001A32  101A               	iorwf	(??___flmul+3)^0,w,c
  8347   001A34  B4D8               	btfsc	status,2,c
  8348   001A36  EF1F  F00D         	goto	u1911
  8349   001A3A  EF21  F00D         	goto	u1910
  8350   001A3E                     u1911:
  8351   001A3E  EF25  F00D         	goto	l1109
  8352   001A42                     u1910:
  8353   001A42                     l3721:
  8354   001A42  0E01               	movlw	1
  8355   001A44  6E20               	movwf	___flmul@aexp^0,c
  8356   001A46  EF2E  F00D         	goto	l1108
  8357   001A4A                     l1109:
  8358   001A4A  A022               	btfss	___flmul@prod^0,0,c
  8359   001A4C  EF2A  F00D         	goto	u1921
  8360   001A50  EF2C  F00D         	goto	u1920
  8361   001A54                     u1921:
  8362   001A54  EF2E  F00D         	goto	l1108
  8363   001A58                     u1920:
  8364   001A58  EF21  F00D         	goto	l3721
  8365   001A5C                     l1108:
  8366   001A5C  5020               	movf	___flmul@aexp^0,w,c
  8367   001A5E  B4D8               	btfsc	status,2,c
  8368   001A60  EF34  F00D         	goto	u1931
  8369   001A64  EF36  F00D         	goto	u1930
  8370   001A68                     u1931:
  8371   001A68  EF5A  F00D         	goto	l3733
  8372   001A6C                     u1930:
  8373   001A6C  0E01               	movlw	1
  8374   001A6E  2622               	addwf	___flmul@prod^0,f,c
  8375   001A70  0E00               	movlw	0
  8376   001A72  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8377   001A74  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8378   001A76  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8379   001A78  A025               	btfss	(___flmul@prod+3)^0,0,c
  8380   001A7A  EF41  F00D         	goto	u1941
  8381   001A7E  EF43  F00D         	goto	u1940
  8382   001A82                     u1941:
  8383   001A82  EF5A  F00D         	goto	l3733
  8384   001A86                     u1940:
  8385   001A86  C022  F017         	movff	___flmul@prod,??___flmul
  8386   001A8A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8387   001A8E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8388   001A92  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8389   001A96  341A               	rlcf	(??___flmul+3)^0,w,c
  8390   001A98  321A               	rrcf	(??___flmul+3)^0,f,c
  8391   001A9A  3219               	rrcf	(??___flmul+2)^0,f,c
  8392   001A9C  3218               	rrcf	(??___flmul+1)^0,f,c
  8393   001A9E  3217               	rrcf	??___flmul^0,f,c
  8394   001AA0  C017  F022         	movff	??___flmul,___flmul@prod
  8395   001AA4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8396   001AA8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8397   001AAC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8398   001AB0  4A26               	infsnz	___flmul@temp^0,f,c
  8399   001AB2  2A27               	incf	(___flmul@temp+1)^0,f,c
  8400   001AB4                     l3733:
  8401   001AB4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8402   001AB6  EF65  F00D         	goto	u1951
  8403   001ABA  5027               	movf	(___flmul@temp+1)^0,w,c
  8404   001ABC  E108               	bnz	u1950
  8405   001ABE  2826               	incf	___flmul@temp^0,w,c
  8406   001AC0  A0D8               	btfss	status,0,c
  8407   001AC2  EF65  F00D         	goto	u1951
  8408   001AC6  EF67  F00D         	goto	u1950
  8409   001ACA                     u1951:
  8410   001ACA  EF71  F00D         	goto	l3737
  8411   001ACE                     u1950:
  8412   001ACE  0E00               	movlw	0
  8413   001AD0  6E22               	movwf	___flmul@prod^0,c
  8414   001AD2  0E00               	movlw	0
  8415   001AD4  6E23               	movwf	(___flmul@prod+1)^0,c
  8416   001AD6  0E80               	movlw	128
  8417   001AD8  6E24               	movwf	(___flmul@prod+2)^0,c
  8418   001ADA  0E7F               	movlw	127
  8419   001ADC  6E25               	movwf	(___flmul@prod+3)^0,c
  8420   001ADE  EF9F  F00D         	goto	l3749
  8421   001AE2                     l3737:
  8422   001AE2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8423   001AE4  EF7E  F00D         	goto	u1960
  8424   001AE8  5027               	movf	(___flmul@temp+1)^0,w,c
  8425   001AEA  E106               	bnz	u1961
  8426   001AEC  0426               	decf	___flmul@temp^0,w,c
  8427   001AEE  B0D8               	btfsc	status,0,c
  8428   001AF0  EF7C  F00D         	goto	u1961
  8429   001AF4  EF7E  F00D         	goto	u1960
  8430   001AF8                     u1961:
  8431   001AF8  EF8A  F00D         	goto	l1116
  8432   001AFC                     u1960:
  8433   001AFC  0E00               	movlw	0
  8434   001AFE  6E22               	movwf	___flmul@prod^0,c
  8435   001B00  0E00               	movlw	0
  8436   001B02  6E23               	movwf	(___flmul@prod+1)^0,c
  8437   001B04  0E00               	movlw	0
  8438   001B06  6E24               	movwf	(___flmul@prod+2)^0,c
  8439   001B08  0E00               	movlw	0
  8440   001B0A  6E25               	movwf	(___flmul@prod+3)^0,c
  8441   001B0C  0E00               	movlw	0
  8442   001B0E  6E1B               	movwf	___flmul@sign^0,c
  8443   001B10  EF9F  F00D         	goto	l3749
  8444   001B14                     l1116:
  8445   001B14  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8446   001B18  0EFF               	movlw	255
  8447   001B1A  1622               	andwf	___flmul@prod^0,f,c
  8448   001B1C  0EFF               	movlw	255
  8449   001B1E  1623               	andwf	(___flmul@prod+1)^0,f,c
  8450   001B20  0E7F               	movlw	127
  8451   001B22  1624               	andwf	(___flmul@prod+2)^0,f,c
  8452   001B24  0E00               	movlw	0
  8453   001B26  1625               	andwf	(___flmul@prod+3)^0,f,c
  8454   001B28  A021               	btfss	___flmul@bexp^0,0,c
  8455   001B2A  EF99  F00D         	goto	u1971
  8456   001B2E  EF9B  F00D         	goto	u1970
  8457   001B32                     u1971:
  8458   001B32  EF9C  F00D         	goto	l3747
  8459   001B36                     u1970:
  8460   001B36  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8461   001B38                     l3747:
  8462   001B38  90D8               	bcf	status,0,c
  8463   001B3A  3021               	rrcf	___flmul@bexp^0,w,c
  8464   001B3C  6E25               	movwf	(___flmul@prod+3)^0,c
  8465   001B3E                     l3749:
  8466   001B3E  501B               	movf	___flmul@sign^0,w,c
  8467   001B40  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8468   001B42  C022  F00F         	movff	___flmul@prod,?___flmul
  8469   001B46  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8470   001B4A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8471   001B4E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8472   001B52                     l1103:
  8473   001B52  0012               	return		;funcret
  8474   001B54                     __end_of___flmul:
  8475                           	callstack 0
  8476                           
  8477 ;; *************** function _Timer0_init *****************
  8478 ;; Defined at:
  8479 ;;		line 62 in file "../rc_servo.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, status,2
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;Total ram usage:        0 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; Hardware stack levels required when called: 1
  8500 ;; This function calls:
  8501 ;;		Nothing
  8502 ;; This function is called by:
  8503 ;;		_main
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           	psect	text49
  8508   003810                     __ptext49:
  8509                           	callstack 0
  8510   003810                     _Timer0_init:
  8511                           	callstack 29
  8512   003810                     
  8513                           ;../rc_servo.c: 64:     T0CON1bits.T0CS=0b010;
  8514   003810  50D6               	movf	214,w,c	;volatile
  8515   003812  0B1F               	andlw	-225
  8516   003814  0940               	iorlw	64
  8517   003816  6ED6               	movwf	214,c	;volatile
  8518   003818                     
  8519                           ;../rc_servo.c: 65:     T0CON1bits.T0ASYNC=1;
  8520   003818  88D6               	bsf	214,4,c	;volatile
  8521                           
  8522                           ;../rc_servo.c: 66:     T0CON1bits.T0CKPS=0b0111;
  8523   00381A  50D6               	movf	214,w,c	;volatile
  8524   00381C  0BF0               	andlw	-16
  8525   00381E  0907               	iorlw	7
  8526   003820  6ED6               	movwf	214,c	;volatile
  8527   003822                     
  8528                           ;../rc_servo.c: 68:     T0CON0bits.T016BIT=1;
  8529   003822  88D5               	bsf	213,4,c	;volatile
  8530                           
  8531                           ;../rc_servo.c: 71:     TMR0H=(65535-2500)>>8;
  8532   003824  0EF6               	movlw	246
  8533   003826  6ED4               	movwf	212,c	;volatile
  8534                           
  8535                           ;../rc_servo.c: 72:     TMR0L=(unsigned char)(65535-2500);
  8536   003828  0E3B               	movlw	59
  8537   00382A  6ED3               	movwf	211,c	;volatile
  8538   00382C                     
  8539                           ;../rc_servo.c: 73:     T0CON0bits.T0EN=1;
  8540   00382C  8ED5               	bsf	213,7,c	;volatile
  8541   00382E  0012               	return		;funcret
  8542   003830                     __end_of_Timer0_init:
  8543                           	callstack 0
  8544                           
  8545 ;; *************** function _Interrupts_init *****************
  8546 ;; Defined at:
  8547 ;;		line 8 in file "../rc_servo.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		None
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8565 ;;Total ram usage:        0 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; Hardware stack levels required when called: 1
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_main
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text50
  8576   003866                     __ptext50:
  8577                           	callstack 0
  8578   003866                     _Interrupts_init:
  8579                           	callstack 29
  8580   003866                     
  8581                           ;../rc_servo.c: 12:     INTCONbits.IPEN = 1;
  8582   003866  8AF2               	bsf	242,5,c	;volatile
  8583                           
  8584                           ;../rc_servo.c: 13:     INTCONbits.PEIE = 1;
  8585   003868  8CF2               	bsf	242,6,c	;volatile
  8586                           
  8587                           ;../rc_servo.c: 16:     PIE0bits.TMR0IE = 1;
  8588   00386A  010E               	movlb	14	; () banked
  8589   00386C  8B29               	bsf	41,5,b	;volatile
  8590                           
  8591                           ;../rc_servo.c: 17:     IPR0bits.TMR0IP = 1;
  8592   00386E  8B1F               	bsf	31,5,b	;volatile
  8593                           
  8594                           ;../rc_servo.c: 18:     PIR0bits.TMR0IF = 0;
  8595   003870  9B33               	bcf	51,5,b	;volatile
  8596                           
  8597                           ;../rc_servo.c: 20:     PIE2bits.C1IE=1;
  8598   003872  812B               	bsf	43,0,b	;volatile
  8599                           
  8600                           ;../rc_servo.c: 21:     IPR2bits.C1IP=0;
  8601   003874  9121               	bcf	33,0,b	;volatile
  8602                           
  8603                           ;../rc_servo.c: 22:     PIR2bits.C1IF=0;
  8604   003876  9135               	bcf	53,0,b	;volatile
  8605                           
  8606                           ;../rc_servo.c: 24:     INTCONbits.GIE = 1;
  8607   003878  8EF2               	bsf	242,7,c	;volatile
  8608   00387A                     
  8609                           ; BSR set to: 14
  8610   00387A  0012               	return		;funcret
  8611   00387C                     __end_of_Interrupts_init:
  8612                           	callstack 0
  8613                           
  8614 ;; *************** function _HighISR *****************
  8615 ;; Defined at:
  8616 ;;		line 31 in file "../rc_servo.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;Total ram usage:        0 bytes
  8635 ;; Hardware stack levels used: 1
  8636 ;; This function calls:
  8637 ;;		Nothing
  8638 ;; This function is called by:
  8639 ;;		Interrupt level 2
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           	psect	intcode
  8644   000008                     __pintcode:
  8645                           	callstack 0
  8646   000008                     _HighISR:
  8647                           	callstack 22
  8648                           
  8649                           ; BSR set to: 14
  8650                           ;incstack = 0
  8651   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8652   00000A                     
  8653                           ;../rc_servo.c: 33:     if(PIR0bits.TMR0IF||!PORTFbits.RF2){
  8654   00000A  010E               	movlb	14	; () banked
  8655   00000C  BB33               	btfsc	51,5,b	;volatile
  8656   00000E  EF0B  F000         	goto	i2u224_41
  8657   000012  EF0D  F000         	goto	i2u224_40
  8658   000016                     i2u224_41:
  8659   000016  EF14  F000         	goto	i2l4089
  8660   00001A                     i2u224_40:
  8661   00001A                     
  8662                           ; BSR set to: 14
  8663   00001A  B48E               	btfsc	142,2,c	;volatile
  8664   00001C  EF12  F000         	goto	i2u225_41
  8665   000020  EF14  F000         	goto	i2u225_40
  8666   000024                     i2u225_41:
  8667   000024  EF1D  F000         	goto	i2l420
  8668   000028                     i2u225_40:
  8669   000028                     i2l4089:
  8670                           
  8671                           ; BSR set to: 14
  8672                           ;../rc_servo.c: 36:         time++;
  8673   000028  0101               	movlb	1	; () banked
  8674   00002A  4BF4               	infsnz	_time& (0+255),f,b
  8675   00002C  2BF5               	incf	(_time+1)& (0+255),f,b
  8676   00002E                     
  8677                           ; BSR set to: 1
  8678                           ;../rc_servo.c: 39:         TMR0L = 0b11011011;
  8679   00002E  0EDB               	movlw	219
  8680   000030  6ED3               	movwf	211,c	;volatile
  8681   000032                     
  8682                           ; BSR set to: 1
  8683                           ;../rc_servo.c: 40:         TMR0H = 0b00001011;
  8684   000032  0E0B               	movlw	11
  8685   000034  6ED4               	movwf	212,c	;volatile
  8686   000036                     
  8687                           ; BSR set to: 1
  8688                           ;../rc_servo.c: 42:         PIR0bits.TMR0IF=0;
  8689   000036  010E               	movlb	14	; () banked
  8690   000038  9B33               	bcf	51,5,b	;volatile
  8691   00003A                     i2l420:
  8692                           
  8693                           ; BSR set to: 14
  8694   00003A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8695   00003C  0011               	retfie		f
  8696   00003E                     __end_of_HighISR:
  8697                           	callstack 0
  8698                           
  8699                           	psect	rparam
  8700   000000                     
  8701                           	psect	temp
  8702   00005E                     btemp:
  8703                           	callstack 0
  8704   00005E                     	ds	1
  8705   000000                     int$flags	set	btemp
  8706   000000                     wtemp8	set	btemp+1
  8707   000000                     ttemp5	set	btemp+1
  8708   000000                     ttemp6	set	btemp+4
  8709   000000                     ttemp7	set	btemp+8
  8710                           
  8711                           	psect	idloc
  8712                           
  8713                           ;Config register IDLOC0 @ 0x200000
  8714                           ;	unspecified, using default values
  8715   200000                     	org	2097152
  8716   200000  0FFF               	dw	4095
  8717                           
  8718                           ;Config register IDLOC1 @ 0x200002
  8719                           ;	unspecified, using default values
  8720   200002                     	org	2097154
  8721   200002  0FFF               	dw	4095
  8722                           
  8723                           ;Config register IDLOC2 @ 0x200004
  8724                           ;	unspecified, using default values
  8725   200004                     	org	2097156
  8726   200004  0FFF               	dw	4095
  8727                           
  8728                           ;Config register IDLOC3 @ 0x200006
  8729                           ;	unspecified, using default values
  8730   200006                     	org	2097158
  8731   200006  0FFF               	dw	4095
  8732                           
  8733                           ;Config register IDLOC4 @ 0x200008
  8734                           ;	unspecified, using default values
  8735   200008                     	org	2097160
  8736   200008  0FFF               	dw	4095
  8737                           
  8738                           ;Config register IDLOC5 @ 0x20000A
  8739                           ;	unspecified, using default values
  8740   20000A                     	org	2097162
  8741   20000A  0FFF               	dw	4095
  8742                           
  8743                           ;Config register IDLOC6 @ 0x20000C
  8744                           ;	unspecified, using default values
  8745   20000C                     	org	2097164
  8746   20000C  0FFF               	dw	4095
  8747                           
  8748                           ;Config register IDLOC7 @ 0x20000E
  8749                           ;	unspecified, using default values
  8750   20000E                     	org	2097166
  8751   20000E  0FFF               	dw	4095
  8752                           
  8753                           	psect	config
  8754                           
  8755                           ;Config register CONFIG1L @ 0x300000
  8756                           ;	External Oscillator mode Selection bits
  8757                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8758                           ;	Power-up default value for COSC bits
  8759                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8760   300000                     	org	3145728
  8761   300000  AA                 	db	170
  8762                           
  8763                           ;Config register CONFIG1H @ 0x300001
  8764                           ;	unspecified, using default values
  8765                           ;	Clock Out Enable bit
  8766                           ;	CLKOUTEN = 0x1, unprogrammed default
  8767                           ;	Clock Switch Enable bit
  8768                           ;	CSWEN = 0x1, unprogrammed default
  8769                           ;	Fail-Safe Clock Monitor Enable bit
  8770                           ;	FCMEN = 0x1, unprogrammed default
  8771   300001                     	org	3145729
  8772   300001  FF                 	db	255
  8773                           
  8774                           ;Config register CONFIG2L @ 0x300002
  8775                           ;	unspecified, using default values
  8776                           ;	Master Clear Enable bit
  8777                           ;	MCLRE = 0x1, unprogrammed default
  8778                           ;	Power-up Timer Enable bit
  8779                           ;	PWRTE = 0x1, unprogrammed default
  8780                           ;	Low-power BOR enable bit
  8781                           ;	LPBOREN = 0x1, unprogrammed default
  8782                           ;	Brown-out Reset Enable bits
  8783                           ;	BOREN = 0x3, unprogrammed default
  8784   300002                     	org	3145730
  8785   300002  FF                 	db	255
  8786                           
  8787                           ;Config register CONFIG2H @ 0x300003
  8788                           ;	unspecified, using default values
  8789                           ;	Brown Out Reset Voltage selection bits
  8790                           ;	BORV = 0x3, unprogrammed default
  8791                           ;	ZCD Disable bit
  8792                           ;	ZCD = 0x1, unprogrammed default
  8793                           ;	PPSLOCK bit One-Way Set Enable bit
  8794                           ;	PPS1WAY = 0x1, unprogrammed default
  8795                           ;	Stack Full/Underflow Reset Enable bit
  8796                           ;	STVREN = 0x1, unprogrammed default
  8797                           ;	Debugger Enable bit
  8798                           ;	DEBUG = 0x1, unprogrammed default
  8799                           ;	Extended Instruction Set Enable bit
  8800                           ;	XINST = 0x1, unprogrammed default
  8801   300003                     	org	3145731
  8802   300003  FF                 	db	255
  8803                           
  8804                           ;Config register CONFIG3L @ 0x300004
  8805                           ;	WDT Period Select bits
  8806                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8807                           ;	WDT operating mode
  8808                           ;	WDTE = OFF, WDT Disabled
  8809   300004                     	org	3145732
  8810   300004  9F                 	db	159
  8811                           
  8812                           ;Config register CONFIG3H @ 0x300005
  8813                           ;	unspecified, using default values
  8814                           ;	WDT Window Select bits
  8815                           ;	WDTCWS = 0x7, unprogrammed default
  8816                           ;	WDT input clock selector
  8817                           ;	WDTCCS = 0x7, unprogrammed default
  8818   300005                     	org	3145733
  8819   300005  FF                 	db	255
  8820                           
  8821                           ;Config register CONFIG4L @ 0x300006
  8822                           ;	unspecified, using default values
  8823                           ;	Write Protection Block 0
  8824                           ;	WRT0 = 0x1, unprogrammed default
  8825                           ;	Write Protection Block 1
  8826                           ;	WRT1 = 0x1, unprogrammed default
  8827                           ;	Write Protection Block 2
  8828                           ;	WRT2 = 0x1, unprogrammed default
  8829                           ;	Write Protection Block 3
  8830                           ;	WRT3 = 0x1, unprogrammed default
  8831                           ;	Write Protection Block 3
  8832                           ;	WRT4 = 0x1, unprogrammed default
  8833                           ;	Write Protection Block 3
  8834                           ;	WRT5 = 0x1, unprogrammed default
  8835                           ;	Write Protection Block 3
  8836                           ;	WRT6 = 0x1, unprogrammed default
  8837                           ;	Write Protection Block 3
  8838                           ;	WRT7 = 0x1, unprogrammed default
  8839   300006                     	org	3145734
  8840   300006  FF                 	db	255
  8841                           
  8842                           ;Config register CONFIG4H @ 0x300007
  8843                           ;	unspecified, using default values
  8844                           ;	Configuration Register Write Protection bit
  8845                           ;	WRTC = 0x1, unprogrammed default
  8846                           ;	Boot Block Write Protection bit
  8847                           ;	WRTB = 0x1, unprogrammed default
  8848                           ;	Data EEPROM Write Protection bit
  8849                           ;	WRTD = 0x1, unprogrammed default
  8850                           ;	Scanner Enable bit
  8851                           ;	SCANE = 0x1, unprogrammed default
  8852                           ;	Low Voltage Programming Enable bit
  8853                           ;	LVP = 0x1, unprogrammed default
  8854   300007                     	org	3145735
  8855   300007  FF                 	db	255
  8856                           
  8857                           ;Config register CONFIG5L @ 0x300008
  8858                           ;	unspecified, using default values
  8859                           ;	UserNVM Program Memory Code Protection bit
  8860                           ;	CP = 0x1, unprogrammed default
  8861                           ;	DataNVM Memory Code Protection bit
  8862                           ;	CPD = 0x1, unprogrammed default
  8863   300008                     	org	3145736
  8864   300008  FF                 	db	255
  8865                           
  8866                           ;Config register CONFIG5H @ 0x300009
  8867                           ;	unspecified, using default values
  8868   300009                     	org	3145737
  8869   300009  FF                 	db	255
  8870                           
  8871                           ;Config register CONFIG6L @ 0x30000A
  8872                           ;	unspecified, using default values
  8873                           ;	Table Read Protection Block 0
  8874                           ;	EBTR0 = 0x1, unprogrammed default
  8875                           ;	Table Read Protection Block 1
  8876                           ;	EBTR1 = 0x1, unprogrammed default
  8877                           ;	Table Read Protection Block 2
  8878                           ;	EBTR2 = 0x1, unprogrammed default
  8879                           ;	Table Read Protection Block 3
  8880                           ;	EBTR3 = 0x1, unprogrammed default
  8881                           ;	Table Read Protection Block 4
  8882                           ;	EBTR4 = 0x1, unprogrammed default
  8883                           ;	Table Read Protection Block 5
  8884                           ;	EBTR5 = 0x1, unprogrammed default
  8885                           ;	Table Read Protection Block 6
  8886                           ;	EBTR6 = 0x1, unprogrammed default
  8887                           ;	Table Read Protection Block 7
  8888                           ;	EBTR7 = 0x1, unprogrammed default
  8889   30000A                     	org	3145738
  8890   30000A  FF                 	db	255
  8891                           
  8892                           ;Config register CONFIG6H @ 0x30000B
  8893                           ;	unspecified, using default values
  8894                           ;	Boot Block Table Read Protection bit
  8895                           ;	EBTRB = 0x1, unprogrammed default
  8896   30000B                     	org	3145739
  8897   30000B  FF                 	db	255
  8898                           tosu	equ	0xFFF
  8899                           tosh	equ	0xFFE
  8900                           tosl	equ	0xFFD
  8901                           stkptr	equ	0xFFC
  8902                           pclatu	equ	0xFFB
  8903                           pclath	equ	0xFFA
  8904                           pcl	equ	0xFF9
  8905                           tblptru	equ	0xFF8
  8906                           tblptrh	equ	0xFF7
  8907                           tblptrl	equ	0xFF6
  8908                           tablat	equ	0xFF5
  8909                           prodh	equ	0xFF4
  8910                           prodl	equ	0xFF3
  8911                           indf0	equ	0xFEF
  8912                           postinc0	equ	0xFEE
  8913                           postdec0	equ	0xFED
  8914                           preinc0	equ	0xFEC
  8915                           plusw0	equ	0xFEB
  8916                           fsr0h	equ	0xFEA
  8917                           fsr0l	equ	0xFE9
  8918                           wreg	equ	0xFE8
  8919                           indf1	equ	0xFE7
  8920                           postinc1	equ	0xFE6
  8921                           postdec1	equ	0xFE5
  8922                           preinc1	equ	0xFE4
  8923                           plusw1	equ	0xFE3
  8924                           fsr1h	equ	0xFE2
  8925                           fsr1l	equ	0xFE1
  8926                           bsr	equ	0xFE0
  8927                           indf2	equ	0xFDF
  8928                           postinc2	equ	0xFDE
  8929                           postdec2	equ	0xFDD
  8930                           preinc2	equ	0xFDC
  8931                           plusw2	equ	0xFDB
  8932                           fsr2h	equ	0xFDA
  8933                           fsr2l	equ	0xFD9
  8934                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        20
    BSS         127
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      93
    BANK0           160    159     159
    BANK1           256    240     250
    BANK2           256     64     196
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[6]), STR_2(CODE[11]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[6]), STR_2(CODE[11]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[6]), STR_2(CODE[11]), STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2456$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[6]), STR_2(CODE[11]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@test(BANK1[100]), main@test0(BANK1[100]), main@readout3(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2403$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2403$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@test(BANK1[100]), main@test0(BANK1[100]), main@readout3(BANK0[100]), 

    motor_action_return@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    motor_action_return@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse_onesquare@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_onesquare@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse_fromcard@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_fromcard@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    opposite_forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    opposite_forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S599DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S599DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK2[64]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_processor_easy@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK2[64]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _motor_action_return->_forward
    _motor_action_return->_left_135
    _motor_action_return->_left_90
    _motor_action_return->_reverse_fromcard
    _motor_action_return->_reverse_onesquare
    _motor_action_return->_right_135
    _motor_action_return->_right_90
    _motor_action_return->_spin_180
    _spin_180->_setMotorPWM
    _motor_action->_forward
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse_fromcard
    _motor_action->_reverse_onesquare
    _motor_action->_right_135
    _motor_action->_right_90
    _stop->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse_onesquare->_setMotorPWM
    _reverse_fromcard->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               457   457      0  120355
                                             27 BANK0    132   132      0
                                              0 BANK1    240   240      0
                                              0 BANK2     64    64      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                _motor_action_return
                  _reverse_onesquare
                  _sendStringSerial4
                        _setMotorPWM
                           _spin_180
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5874
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motor_action_return                                  8     2      6   42741
                                             33 COMRAM     8     2      6
                            _forward
                           _left_135
                            _left_90
                   _reverse_fromcard
                  _reverse_onesquare
                          _right_135
                           _right_90
                           _spin_180
                               _stop
 ---------------------------------------------------------------------------------
 (1) _spin_180                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   39866
                                             33 COMRAM     8     2      6
                            _forward
                           _left_135
                            _left_90
                   _reverse_fromcard
                  _reverse_onesquare
                          _right_135
                           _right_90
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    9787
                                             25 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    4163
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    3707
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _reverse_onesquare                                    8     4      4    3707
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_fromcard                                     8     4      4    4467
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    4315
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              8     4      4    3859
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2855
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     844
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                28    24      4    1203
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                18    14      4     486
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _forward
     _left_135
       _setMotorPWM
     _left_90
       _setMotorPWM
     _reverse_fromcard
       _setMotorPWM
     _reverse_onesquare
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _stop
       _setMotorPWM
   _motor_action_return
     _forward
     _left_135
     _left_90
     _reverse_fromcard
     _reverse_onesquare
     _right_135
     _right_90
     _spin_180
       _setMotorPWM
     _stop
   _reverse_onesquare
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
   _spin_180
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     40      C4       9       76.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F0      FA       7       97.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      9F       5       99.4%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5D       1       98.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhlhhh     1B      0       0      33        0.0%
BITBIGSFRhhll       17      0       0      35        0.0%
BITBIGSFRhhlhl      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRllllll      7      0       0      52        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BA      59        0.0%
DATA                 0      0     2BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 13 15:47:44 2022

                _color_read_Red 34B4                 _color_read_Blue 35A4                              l51 3552  
                            l60 35F2                              l45 340E                              l54 3502  
                            l63 2D9A                              l48 380E                              l57 35A2  
                            l67 2A60                              l83 38BC                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Green 3554               ??_Interrupts_init 0001  
                           l112 37A0                             l121 38B8                             l130 389A  
                           l115 37A2                             l124 38A4                             l300 233E  
                           l220 0EDE                             l133 3706                             l118 37C8  
                           l310 320C                             l127 38AE                             l320 32AC  
                           l305 333A                             l217 0EC6                             l330 2E3E  
                           l226 11F4                             l227 1208                             l412 387A  
                           l340 2F84                             l325 30C8                             l350 316A  
                           l423 382E                             l335 2EE2                             l345 3026  
                           l363 1680                             l612 27DE                             l293 36C4  
                           l365 1728                             l464 384C                             l473 3850  
                           l482 3776                             l379 1EEC                             l716 2CF4  
                           l476 3864                             l485 37EE                             l782 2B66  
                           l599 267A               motor_action@color 0022                             _abs 3708  
                           _pad 333C                             wreg 000FE8                    ___flmul@aexp 0020  
                  ___flmul@bexp 0021                    ___flmul@sign 001B                    ___flmul@temp 0026  
                  ___flmul@prod 0022                    ___fltol@exp1 0031                            l1103 1B52  
                          l1106 19E4                            ?_abs 0013                            l1116 1B14  
                          l1108 1A5C                            l1140 2396                            l1109 1A4A  
                          l1221 34B2                            l1143 24F2                            l1215 293C  
                          l1240 2C30                            l1208 216A                            l3001 3778  
                          l1225 373E                            l1154 248A                            l1147 242E  
                          l3011 378E                            l3003 3782                            l1251 38BA  
                          l1163 3460                            l1228 3746                            l3005 3788  
                          l3013 37F2                            l3021 34B4                            l3101 2F52  
                          l3007 378A                            l3015 3504                            l3023 34FA  
                          l3103 2F6E                            l1248 3682                            l3009 378C  
                          l3033 35A4                            l3017 354A                            l3121 31CC  
                          l3113 3194                            l3105 316C                            l3041 3048  
                          l1185 335E                            l1194 1F7A                            l1099 17EE  
                          l3035 35EA                            l3027 3554                            l3123 31D8  
                          l3115 31AC                            l3107 318C                            l3051 3074  
                          l3211 2FD4                            l1196 1F82                            l3301 340A  
                          l3029 359A                            l3125 31F4                            l3117 31B8  
                          l3221 30CA                            l3141 3266                            l3053 3080  
                          l3213 2FE0                            l3205 2FAE                            l3061 32AE  
                          l1189 33B4                            l1197 1FC8                            l3303 340C  
                          l3311 2D52                            l3119 31C4                            l3231 3100  
                          l3223 30EA                            l3143 326E                            l3135 3236  
                          l3127 320E                            l3055 3088                            l3047 3050  
                          l3039 3028                            l3215 2FE8                            l3207 2FBA  
                          l3151 2DBC                            l3071 32EE                            l3063 32CE  
                          l3321 2976                            l3313 2D6A                            l3305 2CF6  
                          l3241 3138                            l3233 310C                            l3145 327A  
                          l3137 324E                            l3129 322E                            l3057 3094  
                          l3049 3068                            l3217 2FF4                            l3209 2FC8  
                          l3161 2DDE                            l3073 32FA                            l3081 2EE4  
                          l3331 29FE                            l3323 298A                            l3315 293E  
                          l3307 2D0A                            l3243 3154                            l3235 3118  
                          l3147 3296                            l3139 325A                            l3059 30B0  
                          l3219 3010                            l3171 2E26                            l3163 2DEA  
                          l3075 3306                            l3091 2F18                            l3083 2F04  
                          l3251 346E                            l3261 33BA                            l3333 2A14  
                          l3325 29BC                            l3317 294E                            l3309 2D22  
                          l3421 3694                            l3237 3124                            l3229 30F2  
                          l3181 2E68                            l3173 2E40                            l3165 2DF6  
                          l3157 2DC4                            l3149 2D9C                            l3077 3314  
                          l3069 32D6                            l4141 16DA                            l3093 2F26  
                          l3501 1CC8                            l3245 3850                            l2701 2B68  
                          l3253 348A                            l3431 3866                            l3271 33EA  
                          l3263 33C4                            l3343 2A4C                            l3335 2A2A  
                          l3327 29F2                            l3319 2962                            l3351 38BC  
                          l3423 36A8                            l3239 312C                            l3191 2EA2  
                          l3183 2E76                            l3175 2E60                            l3167 2DFE  
                          l3159 2DD0                            l3079 3320                            l3095 2F32  
                          l3503 1D1C                            l3247 3860                            l2711 2BEA  
                          l2703 2B7A                            l3255 34AA                            l3433 3810  
                          l3281 33F4                            l3273 33EC                            l3265 33D4  
                          l3337 2A40                            l3361 38BC                            l3353 38BC  
                          l3425 36AC                            l3441 3830                            l3193 2EAE  
                          l3185 2E82                            l3169 2E0A                            l3097 2F3E  
                          l3089 2F0C                            l3521 1E08                            l3513 1DB4  
                          l3505 1D70                            l2705 2B8C                            l2721 3662  
                          l3249 3462                            l3435 3818                            l3291 33FE  
                          l3283 33F6                            l3275 33EE                            l3267 33DE  
                          l3259 33B6                            l3347 2A58                            l3363 38BC  
                          l3355 38BC                            l3427 36C0                            l3419 3684  
                          l3451 384A                            l3443 383A                            l3195 2ECA  
                          l3187 2E8E                            l3611 1640                            l3603 15D8  
                          l3099 2F46                            l4139 1EA6                            l3523 1E4C  
                          l3515 1DC8                            l3507 1D84                            l3531 1E90  
                          l2731 252A                            l2723 24F4                            l2707 2B96  
                          l2715 3640                            l2811 337E                            l2803 333C  
                          l3437 3822                            l3701 1968                            l2821 37A2  
                          l3293 3400                            l3285 33F8                            l3277 33F0  
                          l3269 33E8                            l3357 38BC                            l3429 36C2  
                          l3445 383C                            l3189 2E9A                            l3197 2F86  
                          l3613 16A8                            l3605 1600                            l3541 12E0  
                          l3525 1E74                            l3517 1DE0                            l3509 1D9C  
                          l2741 2586                            l2733 2538                            l2725 24F8  
                          l2709 2BB4                            l2717 364C                            l2813 3382  
                          l2805 334A                            l2901 1FDA                            l3461 344E  
                          l3453 3410                            l3439 382C                            l3711 19E2  
                          l3703 199E                            l3631 1746                            l2823 37B2  
                          l3295 3402                            l3287 33FA                            l3279 33F2  
                          l3359 38BC                            l3447 3846                            l2831 2C32  
                          l3199 2FA6                            l3607 1618                            l3551 138C  
                          l3543 12F8                            l3519 1DF4                            l3471 375E  
                          l2751 25F0                            l2743 258E                            l2735 2558  
                          l2727 2506                            l2719 365E                            l2815 33A0  
                          l2807 3356                            l2903 1FE0                            l2911 20D2  
                          l3455 3422                            l3721 1A42                            l3713 19F4  
                          l3705 19AC                            l3641 178C                            l3633 1756  
                          l3625 172A                            l3801 2352                            l3297 3404  
                          l3289 33FC                            l3449 3848                            l2841 2C5E  
                          l2833 2C36                            l2825 37CA                            l3609 162C  
                          l3561 1410                            l3553 13A4                            l3545 130C  
                          l3537 12B4                            l3481 1BAC                            l3473 1B54  
                          l3465 3748                            l2761 263A                            l2753 2610  
                          l2745 25A2                            l2737 255C                            l2729 2526  
                          l2817 3708                            l2809 336A                            l2921 213A  
                          l2913 20EC                            l2905 2062                            l3457 342A  
                          l3731 1AB0                            l3715 1A02                            l3707 19CA  
                          l3651 17B8                            l3643 1792                            l3635 1766  
                          l3627 1736                            l3811 23D0                            l3803 2360  
                          l2931 3892                            l3299 3406                            l2851 2C8C  
                          l2843 2C66                            l2835 2C44                            l2827 37E6  
                          l3563 1424                            l3555 13B8                            l3547 1320  
                          l3539 12B8                            l3619 16C4                            l3491 1C2C  
                          l3483 1BC4                            l3475 1B58                            l3467 374C  
                          l2763 265A                            l2755 2612                            l2747 25B0  
                          l2739 2568                            l2771 268E                            l2819 3722  
                          l2923 214A                            l2915 210A                            l2907 2068  
                          l3459 3432                            l3741 1B18                            l3725 1A6C  
                          l3733 1AB4                            l3717 1A06                            l3709 19D4  
                          l3661 180E                            l3653 17C8                            l3645 1798  
                          l3637 1776                            l3629 1744                            l3821 2424  
                          l3813 23D8                            l3805 23A6                            l2933 3896  
                          l2941 38A0                            l2861 2CC6                            l2853 2C94  
                          l2845 2C6A                            l2837 2C4C                            l3565 1438  
                          l3557 13D0                            l3549 1364                            l3493 1C70  
                          l3485 1BEC                            l3477 1B80                            l3469 375A  
                          l2757 2624                            l2749 25C2                            l2781 26FE  
                          l2773 26AE                            l2917 2124                            l2909 206E  
                          l3901 0F52                            ?_pad 0011                            l3751 1B42  
                          l3743 1B28                            l3735 1ACE                            l3727 1A78  
                          l3719 1A14                            l3671 184E                            l3655 17D8  
                          l3647 17A6                            l3639 177C                            l3831 249A  
                          l3823 2460                            l3815 23E4                            l3807 23BC  
                          l2927 38B0                            l2935 38A6                            l2951 3702  
                          l2943 36C8                            l2871 2CEC                            l2863 2CC8  
                          l2855 2CA2                            l2847 2C72                            l2839 2C50  
                          l3591 1528                            l3567 147C                            l3559 13F8  
                          l3495 1C98                            l3487 1C04                            l3479 1B98  
                          l2759 262A                            l2791 2776                            l2783 2706  
                          l2775 26B2                            l2767 267C                            l2919 2134  
                          l3911 0FF4                            l3903 0F88                            l3745 1B36  
                          l3737 1AE2                            l3729 1A86                            l3681 1898  
                          l3673 185A                            l3665 1822                            l3657 17DE  
                          l3649 17A8                            l3761 2A8C                            l3841 24E2  
                          l3833 249E                            l3825 246C                            l3817 2416  
                          l2929 38B4                            l2937 38AA                            l2953 3704  
                          l2945 36CC                            l2865 2CCE                            l2857 2CA8  
                          l2849 2C84                            l2961 21EA                            l3593 153C  
                          l3585 14D4                            l3577 14A8                            l3497 1CB0  
                          l3489 1C18                            l2793 2788                            l2785 271A  
                          l2777 26C0                            l2769 2680                            l2881 1F32  
                          l3921 101E                            l3913 0FFA                            l3905 0FBE  
                          l3747 1B38                            l3739 1AFC                            l3691 18EA  
                          l3683 18A4                            l3675 1872                            l3667 182E  
                          l3659 17FE                            l3771 2ADA                            l3763 2AB6  
                          l3755 2A62                            l3835 24C2                            l3827 247A  
                          l3819 2418                            l2947 36D4                            l2939 389C  
                          l2859 2CBE                            l2867 2CD4                            l2963 2230  
                          l3595 1580                            l3587 14FC                            l2787 2728  
                          l2795 278E                            l2779 26E0                            l2891 1FA0  
                          l2883 1F52                            l2875 1EEE                            l2971 27E0  
                          l3931 115E                            l3923 1118                            l3915 1016  
                          l3907 0FD8                            l3851 0E34                            l3749 1B3E  
                          l3693 18FA                            l3685 18B4                            l3677 187E  
                          l3669 1838                            l3781 2B06                            l3765 2AB8  
                          l3757 2A78                            l3837 24D2                            l3829 2498  
                          l2949 36DC                            l2869 2CE4                            l2965 2250  
                          l2957 216C                            l3597 15A8                            l3589 1514  
                          l2797 279E                            l2789 2756                            l2893 1FB0  
                          l2885 1F6E                            l2877 1F0E                            l2981 2838  
                          l2973 2808                            l3941 121E                            l3933 11BA  
                          l3925 1124                            l3909 0FDA                            l3861 0E46  
                          l3853 0E38                            l3845 0E20                            l3695 1916  
                          l3687 18C0                            l3679 188A                            l3791 2B36  
                          l3767 2AC8                            l3839 24E0                            l2967 226C  
                          l2959 2188                            l3599 15C0                            l2799 27BE  
                          l2895 1FBC                            l2887 1F8A                            l2879 1F22  
                          l2991 28FE                            l2983 2858                            l2975 2816  
                          l3951 1282                            l3943 122A                            l3935 11C2  
                          l3927 113C                            l3871 0E66                            l3863 0E4A  
                          l3855 0E3C                            l3847 0E24                            l3697 1922  
                          l3689 18D0                            l3793 2B46                            l3777 2AF2  
                          l3769 2ACC                            l2969 22D6                            l2897 1FC4  
                          l2889 1F9A                            l2985 2878                            l2977 2824  
                          l3945 1236                            l3937 1202                            l3929 1142  
                          l3881 0E96                            l3873 0E6A                            l3865 0E52  
                          l3857 0E40                            l3849 0E30                            l3699 193E  
                          l3795 2B56                            l3787 2B1A                            l3779 2AFC  
                          l2899 1FD0                            l2987 28CE                            l2979 2828  
                          l2995 2910                            l3947 124E                            l3939 120A  
                          l3883 0EA2                            l3875 0E7E                            l3867 0E5A  
                          l3859 0E40                            l3789 2B26                            l3949 126A  
                          l3885 0EA2                            l3877 0E82                            l3869 0E5E  
                          l3799 2342                            l3895 0EE0                            l3887 0EB4  
                          l3879 0E8A                            l3897 0EEC                            l3889 0ED4  
                          l3899 0F1C                            STR_1 0E01                            STR_2 0E13  
                          STR_3 0E0D                            u2000 2ADA                            u1200 2538  
                          u2001 2AD6                            u1201 2534                            u2010 2AEE  
                          u2011 2AEA                            u1211 2562                            u2020 2B16  
                          u2100 247A                            u1220 2586                            u1300 2756  
                          u1140 2B7A                            u2021 2B12                            u2101 2476  
                          u1221 2582                            u1301 2752                            u1141 2B76  
                          u2030 2B36                            u2110 248A                            u1230 25B0  
                          u1310 279E                            u1150 2B8C                            u2031 2B32  
                          u2111 2486                            u1231 25AC                            u1311 279A  
                          u1151 2B88                            u2040 2B46                            u2120 2498  
                          u1400 2CA2                            u1240 25F0                            u1160 2BB4  
                          u1320 334A                            u2200 11E0                            u2041 2B42  
                          u2121 2494                            u1401 2C9E                            u1241 25EC  
                          u1161 2BB0                            u1321 3346                            u2201 11D6  
                          u2130 24D2                            u2050 2352                            u1410 2CBE  
                          u1250 263A                            u1170 2BEA                            u1330 33A0  
                          u2210 11F4                            u2131 24CE                            u2051 234E  
                          u1411 2CBA                            u1251 2636                            u1171 2BE6  
                          u1331 339C                            u2211 11F0                            u2140 24E0  
                          u2060 2360                            u1420 2CE4                            u1260 268E  
                          u1340 3722                            u1180 3682                            u1500 210A  
                          u2220 1202                            u2141 24DC                            u2061 235C  
                          u1421 2CE0                            u1261 268A                            u1341 371E  
                          u1181 367E                            u1501 2106                            u2221 11FE  
                          u2070 23BC                            u1350 37B2                            u1190 2506  
                          u1270 26C0                            u1510 2124                            u1430 1F1E  
                          u2071 23B8                            u1351 37AE                            u1191 2502  
                          u1271 26BC                            u1511 2120                            u1431 1F18  
                          u2151 0EAC                            u2080 2412                            u1360 37C8  
                          u1280 26FE                            u1520 2134                            u1440 1F20  
                          u1600 2858                            u2208 11E4                    _BAUD4CONbits 000EE9  
                          u2081 240E                            u1361 37C4                            u1281 26FA  
                          u1521 2130                            u1601 2854                            u2161 0EBE  
                          _LATE 000F7D                            u2090 245C                            u1530 36F0  
                          u1370 2C44                            u1290 2728                            u1450 1F32  
                          u1610 2878                            u2170 0ED4                            u2091 2458  
                          u1531 36E8                            u1371 2C40                            u1291 2724  
                          u1451 1F2E                            u1611 2874                            u2307 1276  
                          u2171 0ED0                            _LATG 000F7F                            u1380 2C5E  
                          u1700 3154                            u1620 30B0                            u1460 1F6E  
                          u2180 1016                            u1381 2C5A                            u1701 3150  
                          u1621 30AC                            u2317 1B8A                            u1461 1F6A  
                          u2181 1012                            u1390 2C84                            u1550 2188  
                          u1630 333A                            u1710 3860                            u1470 1F9A  
                          u2190 115E                            u1391 2C80                            u1551 2184  
                          u1631 3336                            u2407 2F78                            u2327 1BF6  
                          u1711 385C                            u1471 1F96                            u2191 115A  
                          u1800 1756                            u1560 226C                            u1640 2F6E  
                          u1480 1FB0                            u1720 34AA                            u1801 1752  
                          u1561 2268                            u2417 12EA                            u1641 2F6A  
                          u2337 1C36                            u1481 1FAC                            u1721 34A6  
                          u1810 1766                            u1730 29BC                            u1650 31F4  
                          u1490 20EC                            _T2PR 000FBC                            u1811 1762  
                          u1731 29B8                            u1651 31F0                            u2507 164A  
                          u2427 132A                            u2347 1CA2                            u1491 20E8  
                          u2267 0FCA                            u1900 1A14                            u1820 17A6  
                          u1740 29F2                            u1548 36F2                            u1660 3296  
                          u1901 1A10                            u1821 17A2                            u1741 29EE  
                          u1661 3292                            u2517 16B2                            u2437 1396  
                          u2357 1D8E                            u2277 0FE6                            u1910 1A42  
                          u1830 17B8                            u1750 2A14                            u1574 22C6  
                          u1670 2E26                            u1590 2808                            u1911 1A3E  
                          u1831 17B4                            u1751 2A10                            u1575 22C2  
                          u2607 32A0                            u1671 2E22                            u2527 330C  
                          u2447 1402                            u2367 1DD2                            u1591 2804  
                          u2287 1130                            u1920 1A58                            u1840 17C8  
                          u1760 2A2A                            u1584 2330                            u1680 2ECA  
                          u1921 1A54                            u1841 17C4                            u1761 2A26  
                          u1585 232C                            u1681 2EC6                            u2617 2E9C  
                          u2537 2DF8                            u2457 1442                            u2377 1E12  
                          u2297 1242                            u1930 1A6C                            u1850 17FE  
                          u1770 2A40                            u1690 3010                            u1931 1A68  
                          u1851 17FA                            u2707 33CA                            u1771 2A3C  
                          u2627 2ED4                            u1691 300C                            u2547 2E30  
                          u2467 1506                            u2387 1E7E                            u1940 1A86  
                          u1860 180E                            u1780 3776                            u1941 1A82  
                          u1861 180A                            u2637 3126                            u2557 2FE2  
                          u2477 1546                            u2397 2F40                            u1781 3772  
                          u1950 1ACE                            u1870 1988                            u1790 1744  
                          u1951 1ACA                            u1791 1740                            u2647 315E  
                          u2567 301A                            u2487 15B2                            u1960 1AFC  
                          u1880 19E2                            u1961 1AF8                            u1881 19DE  
                          u2657 31C6                            u2577 3082                            u2497 160A  
                          u1970 1B36                            u1890 1A02                            u1971 1B32  
                          u1891 19FE                            u1875 197E                            u2667 31FE  
                          u2587 30BA                            u1980 2A78                            u1981 2A74  
                          u2677 2D14                            u2597 3268                            u1990 2AAC  
                          u2687 2D44                            u2697 2D74                            u1995 2AA2  
                          abs@a 0013                            _dbuf 0250                            _main 0E20  
                          _dtoa 1EEE                            _prec 01F2                            _time 01F4  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005E                            _stop 32AE                            prodh 000FF4  
                          prodl 000FF3                            start 003E          __end_of_color_read_Red 3504  
               __end_of_HighISR 003E                    ___param_bank 000000                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0030                 __end_of___aodiv 267C  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 27E0  
               __end_of___awdiv 2CF6         ??_color_read_Luminosity 0007                 __end_of___flmul 1B54  
               __end_of___fltol 2B68                           ?_stop 001A                 ___awdiv@divisor 0009  
                         i2l420 003A                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0041  
                         _TMR0H 000FD4                           _TMR0L 000FD3                    main@readout3 0083  
       __end_of_sendCharSerial4 3866      __end_of_I2C_2_Master_Start 38BA      __end_of_I2C_2_Master_Write 389C  
               __end_of_left_90 2EE4  color_processor_easy@calibrated 0003                           _flags 0059  
                         _fputc 2B68                 __end_of_forward 320E                           _fputs 3640  
                         pad@fp 0011                           _width 01F0                           _putch 38BA  
                         main@i 01CA                           dtoa@d 001E                           dtoa@i 003C  
                         dtoa@n 0034                           dtoa@p 0030                           dtoa@s 003E  
                         dtoa@w 0032                           tablat 000FF5                           plusw1 000FE3  
                         plusw2 000FDB                           ttemp5 005F                           ttemp6 0062  
                         ttemp7 0066                           stop@i 001F                           status 000FD8  
                         wtemp8 005F                 __end_of_sprintf 3462         __end_of_color_read_Blue 35F4  
         _I2C_2_Master_RepStart 389C                 ?_color_read_Red 0005                 __initialization 35F4  
color_processor_hard@calibrated 0003                    __end_of_main 12B4                    __end_of_dtoa 216C  
                  __end_of_stop 333C                          ??_main 007B                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000003                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l4091 002E                          i2l4093 0032  
                        i2l4085 000A                          i2l4095 0036                          i2l4087 001A  
                        i2l4089 0028                       ??_HighISR 0001        __end_of_color_click_init 3410  
                        _RX4PPS 000E15                          _TX4REG 000EE4                __end_of___xxtofl 24F4  
                 ??_Timer0_init 0001                    vfprintf@cfmt 0057                __end_of_left_135 316C  
                     ??___aodiv 0011                       ??___aomod 0011                          ___wmul 37CA  
                     ??___awdiv 000B                       ??___flmul 0017                       ??___fltol 002C  
                        clear_0 361A                          clear_1 3626                ___awdiv@quotient 000D  
                        isa$std 000001                          pad@buf 0013                          dtoa@fp 001C  
                     ??_left_90 001E                __end_of_right_90 2E40                   main@time_path 00F1  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                       ??_forward 001E                __end_of_spin_180 2F86  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                          putch@c 0001  
              __end_of_vfprintf 34B4                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0059             reverse_onesquare@mL 001A  
           reverse_onesquare@mR 001C                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                      __accesstop 0060         __end_of__initialization 3636  
      __end_of_color_read_Green 35A4          ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001  
                    ___fltol@f1 0028                ?_color_read_Blue 0005                 _Interrupts_init 3866  
                __pcstackCOMRAM 0001                    __pidataBANK2 387C                   color_read@rgb 000C  
                 __end_of_fputc 2C32                   __end_of_fputs 3684                   __end_of_putch 38BC  
           __end_of_Timer0_init 3830                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK1 01F0                      __pbssBANK2 0200  
             _color_writetoaddr 37F0                    _T2CLKCONbits 000FBF            motor_action_return@l 0024  
          motor_action_return@r 0026              ?_color_writetoaddr 0003                         ?___wmul 0001  
                main@color_name 01C8                  main@color_path 00E7                     right_135@mL 001A  
                   right_135@mR 001C             ??_color_writetoaddr 0004                _reverse_fromcard 320E  
                     ?___xxtofl 0001   __end_of_color_read_Luminosity 3554                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                       ?_left_135 001A  
                    _color_read 2CF6        motor_action_return@color 0022         __end_of_Interrupts_init 387C  
        color_writetoaddr@value 0003                ??_color_read_Red 0007                         _HighISR 0008  
     __end_of_color_writetoaddr 3810        color_read_Luminosity@tmp 000A              _I2C_2_Master_Start 38B0  
                    _initUSART4 3830              _I2C_2_Master_Write 3890                       ?_right_90 001A  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 3810                       ?_spin_180 001A         sendStringSerial4@string 0002  
                       ___aodiv 24F4                         ___aomod 267C                         ___awdiv 2C32  
                       ___flmul 172A                         ___fltol 2A62             ?_I2C_2_Master_Start 0001  
           ?_I2C_2_Master_Write 0001                      _off_period 01F6                       ?_vfprintf 0051  
                  __psmallconst 0E00                         __pcinit 35F4                         __ramtop 0E00  
                       __ptext0 0E20                         __ptext1 3410                         __ptext2 3462  
                       __ptext3 27E0                         __ptext4 1EEE                         __ptext5 333C  
                       __ptext6 3640                         __ptext7 2B68                         __ptext8 38BA  
                       __ptext9 3708                         _left_90 2E40                       _T2CONbits 000FBD  
                       _forward 316C                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
     main@lowerbound_calibrated 00FB                   ?_motor_action 0022                   _RxBufWriteCnt 005D  
                       _sprintf 3410            ??_I2C_2_Master_Start 0002                      ??_left_135 001E  
           _motor_action_return 1B54            ??_I2C_2_Master_Write 0002            end_of_initialization 3636  
             __end_of_right_135 3028              setMotorPWM@PWMduty 0018                         fputc@fp 0003  
                       fputs@fp 000C               ?_color_click_init 0001    __end_of_color_processor_easy 2A62  
  __end_of_color_processor_hard 38BE                      ??_right_90 001E              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 293E                      ??_spin_180 001E                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                vfpfcnvrt@convarg 0047            ?_motor_action_return 0022  
                    main@F14643 02BA                      main@F14651 02B0                      ??_vfprintf 0057  
               _initDCmotorsPWM 3684                       _PORTFbits 000F8E                  ??_motor_action 0028  
                 ___xxtofl@sign 0009                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88              reverse_fromcard@mL 001A              reverse_fromcard@mR 001C  
                   ?_color_read 000C        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
              ?_Interrupts_init 0001                     ___flmul@grs 001C                      left_135@mL 001A  
                    left_135@mR 001C                    _EUSART4RXbuf 023C                    _EUSART4TXbuf 0200  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                    main@motorL 01DE                      main@motorR 01E7              ??_color_read_Green 0007  
         ??_motor_action_return 0028                     vfpfcnvrt@ap 0043                     vfpfcnvrt@cp 004F  
                   vfpfcnvrt@fp 003F                  __end_of___wmul 37F0             start_initialization 35F4  
                   __end_of_abs 3748                     __end_of_pad 33B6                   _TxBufWriteCnt 005B  
      __end_of_reverse_fromcard 32AE             color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 36C6  
                   vfprintf@fmt 0053                        ??___wmul 0005                     __pdataBANK2 02B0  
            reverse_onesquare@i 0020                       ___flmul@a 0013                       ___flmul@b 000F  
                   __pbssCOMRAM 0059            _color_processor_easy 293E            _color_processor_hard 38BC  
                 __pcstackBANK0 0060                   __pcstackBANK1 0100                   __pcstackBANK2 0270  
              ___aodiv@dividend 0001              main@RGB_calibrated 01CE                        ?_HighISR 0001  
       color_processor_easy@rgb 0001         color_processor_hard@rgb 0001           color_processor_easy@b 000F  
         color_processor_easy@g 000D           color_processor_easy@l 0009           color_processor_easy@r 000B  
                     _dtoa$2484 002E            __end_of_motor_action 172A                    ?_Timer0_init 0001  
                     __pintcode 0008                        ?___aodiv 0001                        ?___aomod 0001  
                      ?___awdiv 0007                ___aodiv@quotient 0013                        ?___flmul 000F  
                      ?___fltol 0028                      right_135@i 0020                      right_90@mL 001A  
                    right_90@mR 001C            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_left_90 001A                     __smallconst 0E00                        ?_forward 001A  
             _I2C_2_Master_Idle 37A2           ?_color_processor_easy 0001           ?_color_processor_hard 0001  
              main@RGB_recorded 01D6               _I2C_2_Master_Init 3778               _I2C_2_Master_Read 36C6  
             _I2C_2_Master_Stop 38A6                    _RxBufReadCnt 005C              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
         _color_read_Luminosity 3504              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 3748             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                       _on_period 01F8  
                      _LATGbits 000F7F                        _LATHbits 000F80                       _right_135 2F86  
                      _IPR0bits 000E1F                        _IPR2bits 000E21                        _PIE0bits 000E29  
                      _PIE2bits 000E2B              ?_sendStringSerial4 0002                      spin_180@mL 001A  
                    spin_180@mR 001C                        i2u224_40 001A                        i2u224_41 0016  
                      i2u225_40 0028                        i2u225_41 0024                        _PIR0bits 000E33  
                      _PIR2bits 000E35                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8               _reverse_onesquare 3028                       _vfpfcnvrt 27E0  
     __end_of_I2C_2_Master_Idle 37CA              ?_reverse_onesquare 001A       __end_of_I2C_2_Master_Init 37A2  
     __end_of_I2C_2_Master_Read 3708                       main@i_883 01CC               ___wmul@multiplier 0001  
             reverse_fromcard@i 0020       __end_of_I2C_2_Master_Stop 38B0                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002                       left_135@i 0020                       left_90@mL 001A  
                     left_90@mR 001C                       main@test0 0100            main@color_calibrated 0270  
             ??_color_read_Blue 0007                    _TxBufReadCnt 005A             ??_reverse_onesquare 001E  
     main@upperbound_calibrated 00FD                    ??_color_read 000E                       copy_data0 3608  
     __end_of_sendStringSerial4 3778   __end_of_I2C_2_Master_RepStart 38A6              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 2340                      ?_right_135 001A                    ??_initUSART4 0001  
                      __Hrparam 0000                      vfprintf@ap 0055                        __Lrparam 0000  
                    vfprintf@fp 0051       __end_of_reverse_onesquare 30CA                       forward@mL 001A  
                     forward@mR 001C                      ?_vfpfcnvrt 003F              __end_of_color_read 2D9C  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
        ??_color_processor_easy 0005          ??_color_processor_hard 0005                      _ANSELFbits 000EB4  
                    sprintf@fmt 0062                        ___xxtofl 2340                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6          ?_color_read_Luminosity 0005              __end_of_initUSART4 384E  
                      __ptext10 267C                        __ptext11 24F4                        __ptext20 3028  
                      __ptext12 3748                        __ptext21 320E                        __ptext13 384E  
                      __ptext30 2CF6                        __ptext22 2E40                        __ptext14 1B54  
                      __ptext31 34B4                        __ptext23 30CA                        __ptext15 2EE4  
                      __ptext40 37F0                        __ptext32 3504                        __ptext24 316C  
                      __ptext16 12B4                        __ptext41 3890                        __ptext33 3554  
                      __ptext25 216C                        __ptext17 32AE                        __ptext50 3866  
                      __ptext42 38A6                        __ptext34 35A4                        __ptext26 37CA  
                      __ptext18 2D9C                        __ptext43 38B0                        __ptext35 389C  
                      __ptext27 2C32                        __ptext19 2F86                        __ptext44 37A2  
                      __ptext36 36C6                        __ptext28 3830                        __ptext45 3778  
                      __ptext37 38BC                        __ptext29 3684                        __ptext46 2340  
                      __ptext38 293E                        __ptext47 2A62                        __ptext39 33B6  
                      __ptext48 172A                        __ptext49 3810                       right_90@i 0020  
                      _left_135 30CA                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
   __end_of_motor_action_return 1EEE                        _right_90 2D9C               ?_reverse_fromcard 001A  
                     spin_180@i 0020                        _spin_180 2EE4                        isa$xinst 000000  
            ??_reverse_fromcard 001E                      _RC4STAbits 000EE7                        int$flags 005E  
                 motor_action@l 0024                   motor_action@r 0026                        _vfprintf 3462  
                      left_90@i 0020                        main@test 0164                ___aomod@dividend 0001  
                    _INTCONbits 000FF2                    _motor_action 12B4                        forward@i 0020  
                   _setMotorPWM 216C                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 006E                     ??_right_135 001E  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0045                 ___aomod@counter 0011  
              _color_click_init 33B6                        sprintf@f 0070                        sprintf@s 0060  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 384E                    ___aomod@sign 0012  
