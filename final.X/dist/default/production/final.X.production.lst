

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 13 14:58:56 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Version 2.35
    59                           ; Generated 05/05/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataBANK0
    95   002182                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for main@F14651
    99   002182  0001               	dw	1
   100   002184  0001               	dw	1
   101   002186  0001               	dw	1
   102   002188  0001               	dw	1
   103   00218A  0001               	dw	1
   104                           
   105                           ;initializer for main@F14643
   106   00218C  0001               	dw	1
   107   00218E  0000               	dw	0
   108   002190  0002               	dw	2
   109   002192  0000               	dw	0
   110   002194  0003               	dw	3
   111   000000                     _TX4REG	set	3812
   112   000000                     _RC4STAbits	set	3815
   113   000000                     _SP4BRGH	set	3814
   114   000000                     _T0CON0bits	set	4053
   115   000000                     _T0CON1bits	set	4054
   116   000000                     _TMR0H	set	4052
   117   000000                     _TRISGbits	set	3975
   118   000000                     _TRISEbits	set	3973
   119   000000                     _LATFbits	set	3966
   120   000000                     _TRISFbits	set	3974
   121   000000                     _LATG	set	3967
   122   000000                     _LATE	set	3965
   123   000000                     _SSP2CON2bits	set	3802
   124   000000                     _LATGbits	set	3967
   125   000000                     _LATEbits	set	3965
   126   000000                     _RX4PPS	set	3605
   127   000000                     _SSP2CLKPPS	set	3612
   128   000000                     _SSP2DATPPS	set	3613
   129   000000                     _ANSELDbits	set	3751
   130   000000                     _ANSELFbits	set	3764
   131   000000                     _LATDbits	set	3964
   132   000000                     _LATHbits	set	3968
   133   000000                     _TRISDbits	set	3972
   134   000000                     _TRISHbits	set	3976
   135   000000                     _PORTFbits	set	3982
   136   000000                     _PWM7DCH	set	4000
   137   000000                     _PWM6DCH	set	4003
   138   000000                     _TRISCbits	set	3971
   139   000000                     _SSP2BUF	set	3797
   140   000000                     _SSP2ADD	set	3798
   141   000000                     _SSP2CON1bits	set	3801
   142   000000                     _RC4REG	set	3811
   143   000000                     _SP4BRGL	set	3813
   144   000000                     _TX4STAbits	set	3816
   145   000000                     _BAUD4CONbits	set	3817
   146   000000                     _LATCbits	set	3963
   147   000000                     _SSP2CON2	set	3802
   148   000000                     _SSP2STAT	set	3800
   149   000000                     _IPR0bits	set	3615
   150   000000                     _PIE0bits	set	3625
   151   000000                     _RC7PPS	set	3689
   152   000000                     _RD5PPS	set	3695
   153   000000                     _RE2PPS	set	3700
   154   000000                     _RD6PPS	set	3696
   155   000000                     _PWM6CONbits	set	4004
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _INTCONbits	set	4082
   159   000000                     _PWM7CONbits	set	4001
   160   000000                     _TMR0L	set	4051
   161   000000                     _T2CLKCONbits	set	4031
   162   000000                     _T2HLTbits	set	4030
   163   000000                     _PIE2bits	set	3627
   164   000000                     _PIR0bits	set	3635
   165   000000                     _IPR2bits	set	3617
   166   000000                     _PIR2bits	set	3637
   167   000000                     _PIR4bits	set	3639
   168   000000                     _RC0PPS	set	3682
   169                           
   170                           ; #config settings
   171                           
   172                           	psect	cinit
   173   001FCA                     __pcinit:
   174                           	callstack 0
   175   001FCA                     start_initialization:
   176                           	callstack 0
   177   001FCA                     __initialization:
   178                           	callstack 0
   179                           
   180                           ; Initialize objects allocated to BANK0 (20 bytes)
   181                           ; load TBLPTR registers with __pidataBANK0
   182   001FCA  0E82               	movlw	low __pidataBANK0
   183   001FCC  6EF6               	movwf	tblptrl,c
   184   001FCE  0E21               	movlw	high __pidataBANK0
   185   001FD0  6EF7               	movwf	tblptrh,c
   186   001FD2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   187   001FD4  6EF8               	movwf	tblptru,c
   188   001FD6  EE00  F0E0         	lfsr	0,__pdataBANK0
   189   001FDA  EE10 F014          	lfsr	1,20
   190   001FDE                     copy_data0:
   191   001FDE  0009               	tblrd		*+
   192   001FE0  CFF5 FFEE          	movff	tablat,postinc0
   193   001FE4  50E5               	movf	postdec1,w,c
   194   001FE6  50E1               	movf	fsr1l,w,c
   195   001FE8  E1FA               	bnz	copy_data0
   196                           
   197                           ; Clear objects allocated to BANK1 (60 bytes)
   198   001FEA  EE01  F000         	lfsr	0,__pbssBANK1
   199   001FEE  0E3C               	movlw	60
   200   001FF0                     clear_0:
   201   001FF0  6AEE               	clrf	postinc0,c
   202   001FF2  06E8               	decf	wreg,f,c
   203   001FF4  E1FD               	bnz	clear_0
   204                           
   205                           ; Clear objects allocated to BANK0 (2 bytes)
   206   001FF6  0100               	movlb	0
   207   001FF8  6BF5               	clrf	(__pbssBANK0+1)& (0+255),b
   208   001FFA  6BF4               	clrf	__pbssBANK0& (0+255),b
   209                           
   210                           ; Clear objects allocated to COMRAM (28 bytes)
   211   001FFC  EE00  F03A         	lfsr	0,__pbssCOMRAM
   212   002000  0E1C               	movlw	28
   213   002002                     clear_1:
   214   002002  6AEE               	clrf	postinc0,c
   215   002004  06E8               	decf	wreg,f,c
   216   002006  E1FD               	bnz	clear_1
   217   002008                     end_of_initialization:
   218                           	callstack 0
   219   002008                     __end_of__initialization:
   220                           	callstack 0
   221   002008  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   222   00200A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   223   00200C  0100               	movlb	0
   224   00200E  EF21  F000         	goto	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMRAM
   227   00003A                     __pbssCOMRAM:
   228                           	callstack 0
   229   00003A                     _EUSART4RXbuf:
   230                           	callstack 0
   231   00003A                     	ds	20
   232   00004E                     _off_period:
   233                           	callstack 0
   234   00004E                     	ds	2
   235   000050                     _on_period:
   236                           	callstack 0
   237   000050                     	ds	2
   238   000052                     _TxBufReadCnt:
   239                           	callstack 0
   240   000052                     	ds	1
   241   000053                     _TxBufWriteCnt:
   242                           	callstack 0
   243   000053                     	ds	1
   244   000054                     _RxBufReadCnt:
   245                           	callstack 0
   246   000054                     	ds	1
   247   000055                     _RxBufWriteCnt:
   248                           	callstack 0
   249   000055                     	ds	1
   250                           
   251                           	psect	bssBANK0
   252   0000F4                     __pbssBANK0:
   253                           	callstack 0
   254   0000F4                     _time:
   255                           	callstack 0
   256   0000F4                     	ds	2
   257                           
   258                           	psect	dataBANK0
   259   0000E0                     __pdataBANK0:
   260                           	callstack 0
   261   0000E0                     main@F14651:
   262                           	callstack 0
   263   0000E0                     	ds	10
   264   0000EA                     main@F14643:
   265                           	callstack 0
   266   0000EA                     	ds	10
   267                           
   268                           	psect	bssBANK1
   269   000100                     __pbssBANK1:
   270                           	callstack 0
   271   000100                     _EUSART4TXbuf:
   272                           	callstack 0
   273   000100                     	ds	60
   274                           
   275                           	psect	cstackBANK0
   276   000060                     __pcstackBANK0:
   277                           	callstack 0
   278   000060                     main@color_calibrated:
   279                           	callstack 0
   280                           
   281                           ; 64 bytes @ 0x0
   282   000060                     	ds	64
   283   0000A0                     main@color_path:
   284                           	callstack 0
   285                           
   286                           ; 10 bytes @ 0x40
   287   0000A0                     	ds	10
   288   0000AA                     main@time_path:
   289                           	callstack 0
   290                           
   291                           ; 10 bytes @ 0x4A
   292   0000AA                     	ds	10
   293   0000B4                     main@lowerbound_calibrated:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x54
   297   0000B4                     	ds	2
   298   0000B6                     main@upperbound_calibrated:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x56
   302   0000B6                     	ds	2
   303   0000B8                     main@color_flag:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x58
   307   0000B8                     	ds	2
   308   0000BA                     main@j:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x5A
   312   0000BA                     	ds	2
   313   0000BC                     main@m:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x5C
   317   0000BC                     	ds	2
   318   0000BE                     main@time_return:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x5E
   322   0000BE                     	ds	2
   323   0000C0                     main@color_name:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x60
   327   0000C0                     	ds	2
   328   0000C2                     main@k:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x62
   332   0000C2                     	ds	2
   333   0000C4                     main@k_878:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x64
   337   0000C4                     	ds	2
   338   0000C6                     main@RGB_recorded:
   339                           	callstack 0
   340                           
   341                           ; 8 bytes @ 0x66
   342   0000C6                     	ds	8
   343   0000CE                     main@motorL:
   344                           	callstack 0
   345                           
   346                           ; 9 bytes @ 0x6E
   347   0000CE                     	ds	9
   348   0000D7                     main@motorR:
   349                           	callstack 0
   350                           
   351                           ; 9 bytes @ 0x77
   352   0000D7                     	ds	9
   353                           
   354                           	psect	cstackCOMRAM
   355   000001                     __pcstackCOMRAM:
   356                           	callstack 0
   357   000001                     ??_I2C_2_Master_Idle:
   358   000001                     ?_color_processor_easy:
   359                           	callstack 0
   360   000001                     ?___wmul:
   361                           	callstack 0
   362   000001                     ?___xxtofl:
   363                           	callstack 0
   364   000001                     color_processor_easy@rgb:
   365                           	callstack 0
   366   000001                     initDCmotorsPWM@PWMperiod:
   367                           	callstack 0
   368   000001                     ___wmul@multiplier:
   369                           	callstack 0
   370   000001                     ___xxtofl@val:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0x0
   374   000001                     	ds	1
   375   000002                     ??_I2C_2_Master_Read:
   376   000002                     I2C_2_Master_Write@data_byte:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x1
   380   000002                     	ds	1
   381   000003                     color_writetoaddr@value:
   382                           	callstack 0
   383   000003                     I2C_2_Master_Read@ack:
   384                           	callstack 0
   385   000003                     color_processor_easy@calibrated:
   386                           	callstack 0
   387   000003                     ___wmul@multiplicand:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391   000003                     	ds	1
   392   000004                     color_writetoaddr@address:
   393                           	callstack 0
   394   000004                     I2C_2_Master_Read@tmp:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x3
   398   000004                     	ds	1
   399   000005                     ??_color_click_init:
   400   000005                     ??_color_processor_easy:
   401   000005                     ??___xxtofl:
   402   000005                     ?_color_read_Luminosity:
   403                           	callstack 0
   404   000005                     ?_color_read_Red:
   405                           	callstack 0
   406   000005                     ?_color_read_Green:
   407                           	callstack 0
   408   000005                     ?_color_read_Blue:
   409                           	callstack 0
   410   000005                     ___wmul@product:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x4
   414   000005                     	ds	2
   415   000007                     ??_color_read_Luminosity:
   416   000007                     ??_color_read_Red:
   417   000007                     ??_color_read_Green:
   418   000007                     ??_color_read_Blue:
   419   000007                     ?___awdiv:
   420                           	callstack 0
   421   000007                     ___awdiv@dividend:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x6
   425   000007                     	ds	2
   426   000009                     ___xxtofl@sign:
   427                           	callstack 0
   428   000009                     color_processor_easy@l:
   429                           	callstack 0
   430   000009                     ___awdiv@divisor:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x8
   434   000009                     	ds	1
   435   00000A                     ___xxtofl@exp:
   436                           	callstack 0
   437   00000A                     color_read_Luminosity@tmp:
   438                           	callstack 0
   439   00000A                     color_read_Red@tmp:
   440                           	callstack 0
   441   00000A                     color_read_Green@tmp:
   442                           	callstack 0
   443   00000A                     color_read_Blue@tmp:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x9
   447   00000A                     	ds	1
   448   00000B                     ___awdiv@counter:
   449                           	callstack 0
   450   00000B                     color_processor_easy@r:
   451                           	callstack 0
   452   00000B                     ___xxtofl@arg:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0xA
   456   00000B                     	ds	1
   457   00000C                     ___awdiv@sign:
   458                           	callstack 0
   459   00000C                     color_read@rgb:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xB
   463   00000C                     	ds	1
   464   00000D                     color_processor_easy@g:
   465                           	callstack 0
   466   00000D                     ___awdiv@quotient:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xC
   470   00000D                     	ds	1
   471   00000E                     ??_color_read:
   472                           
   473                           ; 1 bytes @ 0xD
   474   00000E                     	ds	1
   475   00000F                     ?___flmul:
   476                           	callstack 0
   477   00000F                     color_processor_easy@b:
   478                           	callstack 0
   479   00000F                     setMotorPWM@m:
   480                           	callstack 0
   481   00000F                     ___flmul@b:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0xE
   485   00000F                     	ds	2
   486   000011                     ??_setMotorPWM:
   487                           
   488                           ; 1 bytes @ 0x10
   489   000011                     	ds	2
   490   000013                     ___flmul@a:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x12
   494   000013                     	ds	4
   495   000017                     ??___flmul:
   496                           
   497                           ; 1 bytes @ 0x16
   498   000017                     	ds	1
   499   000018                     setMotorPWM@PWMduty:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x17
   503   000018                     	ds	2
   504   00001A                     stop@mL:
   505                           	callstack 0
   506   00001A                     forward@mL:
   507                           	callstack 0
   508   00001A                     reverse_fromcard@mL:
   509                           	callstack 0
   510   00001A                     reverse_onesquare@mL:
   511                           	callstack 0
   512   00001A                     right_90@mL:
   513                           	callstack 0
   514   00001A                     left_90@mL:
   515                           	callstack 0
   516   00001A                     spin_180@mL:
   517                           	callstack 0
   518   00001A                     right_135@mL:
   519                           	callstack 0
   520   00001A                     left_135@mL:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x19
   524   00001A                     	ds	1
   525   00001B                     ___flmul@sign:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x1A
   529   00001B                     	ds	1
   530   00001C                     stop@mR:
   531                           	callstack 0
   532   00001C                     forward@mR:
   533                           	callstack 0
   534   00001C                     reverse_fromcard@mR:
   535                           	callstack 0
   536   00001C                     reverse_onesquare@mR:
   537                           	callstack 0
   538   00001C                     right_90@mR:
   539                           	callstack 0
   540   00001C                     left_90@mR:
   541                           	callstack 0
   542   00001C                     spin_180@mR:
   543                           	callstack 0
   544   00001C                     right_135@mR:
   545                           	callstack 0
   546   00001C                     left_135@mR:
   547                           	callstack 0
   548   00001C                     ___flmul@grs:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x1B
   552   00001C                     	ds	2
   553   00001E                     ??_reverse_onesquare:
   554   00001E                     ??_stop:
   555   00001E                     ??_spin_180:
   556   00001E                     ??_forward:
   557   00001E                     ??_reverse_fromcard:
   558   00001E                     ??_right_90:
   559   00001E                     ??_left_90:
   560   00001E                     ??_right_135:
   561   00001E                     ??_left_135:
   562                           
   563                           ; 1 bytes @ 0x1D
   564   00001E                     	ds	1
   565   00001F                     stop@i:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x1E
   569   00001F                     	ds	1
   570   000020                     ___flmul@aexp:
   571                           	callstack 0
   572   000020                     forward@i:
   573                           	callstack 0
   574   000020                     reverse_fromcard@i:
   575                           	callstack 0
   576   000020                     reverse_onesquare@i:
   577                           	callstack 0
   578   000020                     right_90@i:
   579                           	callstack 0
   580   000020                     left_90@i:
   581                           	callstack 0
   582   000020                     spin_180@i:
   583                           	callstack 0
   584   000020                     right_135@i:
   585                           	callstack 0
   586   000020                     left_135@i:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x1F
   590   000020                     	ds	1
   591   000021                     ___flmul@bexp:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x20
   595   000021                     	ds	1
   596   000022                     motor_action@color:
   597                           	callstack 0
   598   000022                     motor_action_return@color:
   599                           	callstack 0
   600   000022                     ___flmul@prod:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x21
   604   000022                     	ds	2
   605   000024                     motor_action@l:
   606                           	callstack 0
   607   000024                     motor_action_return@l:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x23
   611   000024                     	ds	2
   612   000026                     motor_action@r:
   613                           	callstack 0
   614   000026                     motor_action_return@r:
   615                           	callstack 0
   616   000026                     ___flmul@temp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x25
   620   000026                     	ds	2
   621   000028                     ??_motor_action_return:
   622   000028                     ??_motor_action:
   623   000028                     ___flge@ff1:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x27
   627   000028                     	ds	4
   628   00002C                     ___flge@ff2:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x2B
   632   00002C                     	ds	4
   633   000030                     ??___flge:
   634                           
   635                           ; 1 bytes @ 0x2F
   636   000030                     	ds	4
   637   000034                     ?_color_processor_hard:
   638                           	callstack 0
   639   000034                     color_processor_hard@rgb:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x33
   643   000034                     	ds	2
   644   000036                     color_processor_hard@calibrated:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x35
   648   000036                     	ds	2
   649   000038                     ??_main:
   650                           
   651                           ; 1 bytes @ 0x37
   652   000038                     	ds	2
   653                           
   654 ;;
   655 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   656 ;;
   657 ;; *************** function _main *****************
   658 ;; Defined at:
   659 ;;		line 20 in file "../main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  k               2  100[BANK0 ] int 
   664 ;;  m               2   92[BANK0 ] int 
   665 ;;  k               2   98[BANK0 ] int 
   666 ;;  color_calibr   64    0[BANK0 ] int [32]
   667 ;;  time_path      10   74[BANK0 ] unsigned int [5]
   668 ;;  color_path     10   64[BANK0 ] unsigned int [5]
   669 ;;  motorR          9  119[BANK0 ] struct DC_motor
   670 ;;  motorL          9  110[BANK0 ] struct DC_motor
   671 ;;  RGB_recorded    8  102[BANK0 ] struct RGB_val
   672 ;;  L_calibrated    8    0        struct RGB_val
   673 ;;  RGB_calibrat    8    0        struct RGB_val
   674 ;;  color_name      2   96[BANK0 ] unsigned int 
   675 ;;  time_return     2   94[BANK0 ] unsigned int 
   676 ;;  j               2   90[BANK0 ] int 
   677 ;;  color_flag      2   88[BANK0 ] unsigned int 
   678 ;;  upperbound_c    2   86[BANK0 ] unsigned int 
   679 ;;  lowerbound_c    2   84[BANK0 ] unsigned int 
   680 ;;  PWMcycle        1    0        unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   691 ;;      Locals:         0     128       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   693 ;;      Totals:         2     128       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   694 ;;Total ram usage:      130 bytes
   695 ;; Hardware stack levels required when called: 5
   696 ;; This function calls:
   697 ;;		_I2C_2_Master_Init
   698 ;;		_Interrupts_init
   699 ;;		_Timer0_init
   700 ;;		_color_click_init
   701 ;;		_color_processor_easy
   702 ;;		_color_processor_hard
   703 ;;		_color_read
   704 ;;		_forward
   705 ;;		_initDCmotorsPWM
   706 ;;		_initUSART4
   707 ;;		_motor_action
   708 ;;		_motor_action_return
   709 ;;		_reverse_onesquare
   710 ;;		_setMotorPWM
   711 ;;		_spin_180
   712 ;;		_stop
   713 ;; This function is called by:
   714 ;;		Startup code after reset
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text0
   719   000042                     __ptext0:
   720                           	callstack 0
   721   000042                     _main:
   722                           	callstack 26
   723   000042                     
   724                           ;../main.c: 22:     color_click_init();
   725   000042  EC18  F00F         	call	_color_click_init	;wreg free
   726   000046                     
   727                           ;../main.c: 23:     initDCmotorsPWM(20);
   728   000046  0E00               	movlw	0
   729   000048  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   730   00004A  0E14               	movlw	20
   731   00004C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   732   00004E  EC09  F010         	call	_initDCmotorsPWM	;wreg free
   733   000052                     
   734                           ;../main.c: 24:     Interrupts_init();
   735   000052  ECB6  F010         	call	_Interrupts_init	;wreg free
   736   000056                     
   737                           ;../main.c: 25:     Timer0_init();
   738   000056  EC97  F010         	call	_Timer0_init	;wreg free
   739   00005A                     
   740                           ;../main.c: 26:     I2C_2_Master_Init();
   741   00005A  EC4B  F010         	call	_I2C_2_Master_Init	;wreg free
   742   00005E                     
   743                           ;../main.c: 27:     initUSART4();
   744   00005E  ECA7  F010         	call	_initUSART4	;wreg free
   745   000062                     
   746                           ;../main.c: 32:     motorL.power = 0;
   747   000062  0E00               	movlw	0
   748   000064  0100               	movlb	0	; () banked
   749   000066  6FCE               	movwf	main@motorL& (0+255),b
   750   000068                     
   751                           ; BSR set to: 0
   752                           ;../main.c: 33:     motorL.direction = 0;
   753   000068  0E00               	movlw	0
   754   00006A  6FCF               	movwf	(main@motorL+1)& (0+255),b
   755   00006C                     
   756                           ; BSR set to: 0
   757                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   758   00006C  0EA3               	movlw	163
   759   00006E  6FD0               	movwf	(main@motorL+2)& (0+255),b
   760   000070  0E0F               	movlw	15
   761   000072  6FD1               	movwf	(main@motorL+3)& (0+255),b
   762   000074                     
   763                           ; BSR set to: 0
   764                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
   765   000074  0E7D               	movlw	125
   766   000076  6FD2               	movwf	(main@motorL+4)& (0+255),b
   767   000078  0E0F               	movlw	15
   768   00007A  6FD3               	movwf	(main@motorL+5)& (0+255),b
   769   00007C                     
   770                           ; BSR set to: 0
   771                           ;../main.c: 36:     motorL.dir_pin = 4;
   772   00007C  0E04               	movlw	4
   773   00007E  6FD4               	movwf	(main@motorL+6)& (0+255),b
   774   000080                     
   775                           ; BSR set to: 0
   776                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
   777   000080  0E00               	movlw	0
   778   000082  6FD6               	movwf	(main@motorL+8)& (0+255),b
   779   000084  0EC7               	movlw	199
   780   000086  6FD5               	movwf	(main@motorL+7)& (0+255),b
   781   000088                     
   782                           ; BSR set to: 0
   783                           ;../main.c: 38:     motorR.power = 0;
   784   000088  0E00               	movlw	0
   785   00008A  6FD7               	movwf	main@motorR& (0+255),b
   786   00008C                     
   787                           ; BSR set to: 0
   788                           ;../main.c: 39:     motorR.direction = 0;
   789   00008C  0E00               	movlw	0
   790   00008E  6FD8               	movwf	(main@motorR+1)& (0+255),b
   791                           
   792                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   793   000090  0EA0               	movlw	160
   794   000092  6FD9               	movwf	(main@motorR+2)& (0+255),b
   795   000094  0E0F               	movlw	15
   796   000096  6FDA               	movwf	(main@motorR+3)& (0+255),b
   797                           
   798                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
   799   000098  0E7F               	movlw	127
   800   00009A  6FDB               	movwf	(main@motorR+4)& (0+255),b
   801   00009C  0E0F               	movlw	15
   802   00009E  6FDC               	movwf	(main@motorR+5)& (0+255),b
   803   0000A0                     
   804                           ; BSR set to: 0
   805                           ;../main.c: 42:     motorR.dir_pin = 6;
   806   0000A0  0E06               	movlw	6
   807   0000A2  6FDD               	movwf	(main@motorR+6)& (0+255),b
   808   0000A4                     
   809                           ; BSR set to: 0
   810                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
   811   0000A4  0E00               	movlw	0
   812   0000A6  6FDF               	movwf	(main@motorR+8)& (0+255),b
   813   0000A8  0EC7               	movlw	199
   814   0000AA  6FDE               	movwf	(main@motorR+7)& (0+255),b
   815   0000AC                     
   816                           ; BSR set to: 0
   817                           ;../main.c: 44:     setMotorPWM(&motorL);
   818   0000AC  0ECE               	movlw	low main@motorL
   819   0000AE  6E0F               	movwf	setMotorPWM@m^0,c
   820   0000B0  0E00               	movlw	high main@motorL
   821   0000B2  6E10               	movwf	(setMotorPWM@m+1)^0,c
   822   0000B4  ECBB  F008         	call	_setMotorPWM	;wreg free
   823   0000B8                     
   824                           ;../main.c: 45:     setMotorPWM(&motorR);
   825   0000B8  0ED7               	movlw	low main@motorR
   826   0000BA  6E0F               	movwf	setMotorPWM@m^0,c
   827   0000BC  0E00               	movlw	high main@motorR
   828   0000BE  6E10               	movwf	(setMotorPWM@m+1)^0,c
   829   0000C0  ECBB  F008         	call	_setMotorPWM	;wreg free
   830   0000C4                     
   831                           ;../main.c: 48:     unsigned int color_flag;;../main.c: 49:     unsigned int color_name 
      +                          = 0;
   832   0000C4  0E00               	movlw	0
   833   0000C6  0100               	movlb	0	; () banked
   834   0000C8  6FC1               	movwf	(main@color_name+1)& (0+255),b
   835   0000CA  0E00               	movlw	0
   836   0000CC  6FC0               	movwf	main@color_name& (0+255),b
   837   0000CE                     
   838                           ; BSR set to: 0
   839                           ;../main.c: 50:     unsigned int color_path[5] = {1,0,2,0,3};
   840   0000CE  EE20  F0EA         	lfsr	2,main@F14643
   841   0000D2  EE10  F0A0         	lfsr	1,main@color_path
   842   0000D6  0E09               	movlw	9
   843   0000D8                     u1481:
   844   0000D8  CFDB FFE3          	movff	plusw2,plusw1
   845   0000DC  06E8               	decf	wreg,f,c
   846   0000DE  E2FC               	bc	u1481
   847   0000E0                     
   848                           ; BSR set to: 0
   849                           ;../main.c: 51:     int color_calibrated[32];;../main.c: 52:     unsigned int lowerbound
      +                          _calibrated;;../main.c: 53:     unsigned int upperbound_calibrated;;../main.c: 54:     s
      +                          truct RGB_val RGB_calibrated;;../main.c: 55:     struct RGB_val L_calibrated;;../main.c:
      +                           56:     struct RGB_val RGB_recorded;;../main.c: 57:     unsigned int time_path[5] = {1,
      +                          1,1,1,1};
   850   0000E0  EE20  F0E0         	lfsr	2,main@F14651
   851   0000E4  EE10  F0AA         	lfsr	1,main@time_path
   852   0000E8  0E09               	movlw	9
   853   0000EA                     u1491:
   854   0000EA  CFDB FFE3          	movff	plusw2,plusw1
   855   0000EE  06E8               	decf	wreg,f,c
   856   0000F0  E2FC               	bc	u1491
   857   0000F2                     l3213:
   858   0000F2  0E01               	movlw	1
   859   0000F4  A68E               	btfss	142,3,c	;volatile
   860   0000F6  0E00               	movlw	0
   861   0000F8  A48E               	btfss	142,2,c	;volatile
   862   0000FA  0E00               	movlw	0
   863   0000FC  B0E8               	btfsc	wreg,0,c
   864   0000FE  EF83  F000         	goto	u1501
   865   000102  EF87  F000         	goto	u1500
   866   000106                     u1501:
   867   000106  6A38               	clrf	??_main^0,c
   868   000108  2A38               	incf	??_main^0,f,c
   869   00010A  EF88  F000         	goto	u1508
   870   00010E                     u1500:
   871   00010E  6A38               	clrf	??_main^0,c
   872   000110                     u1508:
   873   000110  5038               	movf	??_main^0,w,c
   874   000112  A4D8               	btfss	status,2,c
   875   000114  EF8E  F000         	goto	u1511
   876   000118  EF90  F000         	goto	u1510
   877   00011C                     u1511:
   878   00011C  EF79  F000         	goto	l3213
   879   000120                     u1510:
   880   000120                     
   881                           ;../main.c: 94:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
   882   000120  B48E               	btfsc	142,2,c	;volatile
   883   000122  EF95  F000         	goto	u1521
   884   000126  EF97  F000         	goto	u1520
   885   00012A                     u1521:
   886   00012A  EF9A  F000         	goto	l217
   887   00012E                     u1520:
   888   00012E  8E7C               	bsf	124,7,c	;volatile
   889   000130  EF9B  F000         	goto	l3217
   890   000134                     l217:
   891   000134  8680               	bsf	128,3,c	;volatile
   892   000136                     l3217:
   893                           
   894                           ;../main.c: 134:         for (int k=5;k>0;k--){
   895   000136  0E00               	movlw	0
   896   000138  0100               	movlb	0	; () banked
   897   00013A  6FC3               	movwf	(main@k+1)& (0+255),b
   898   00013C  0E05               	movlw	5
   899   00013E  6FC2               	movwf	main@k& (0+255),b
   900   000140                     l219:
   901                           
   902                           ; BSR set to: 0
   903                           ;../main.c: 135:             INTCONbits.GIE = 0;
   904   000140  9EF2               	bcf	242,7,c	;volatile
   905   000142                     
   906                           ; BSR set to: 0
   907                           ;../main.c: 136:             time_return = 0;
   908   000142  0E00               	movlw	0
   909   000144  6FBF               	movwf	(main@time_return+1)& (0+255),b
   910   000146  0E00               	movlw	0
   911   000148  6FBE               	movwf	main@time_return& (0+255),b
   912   00014A                     
   913                           ; BSR set to: 0
   914                           ;../main.c: 137:             motor_action_return(color_path[k],&motorL,&motorR);
   915   00014A  90D8               	bcf	status,0,c
   916   00014C  35C2               	rlcf	main@k& (0+255),w,b
   917   00014E  6ED9               	movwf	fsr2l,c
   918   000150  35C3               	rlcf	(main@k+1)& (0+255),w,b
   919   000152  6EDA               	movwf	fsr2h,c
   920   000154  0EA0               	movlw	low main@color_path
   921   000156  26D9               	addwf	fsr2l,f,c
   922   000158  0E00               	movlw	high main@color_path
   923   00015A  22DA               	addwfc	fsr2h,f,c
   924   00015C  CFDE F022          	movff	postinc2,motor_action_return@color
   925   000160  CFDD F023          	movff	postdec2,motor_action_return@color+1
   926   000164  0ECE               	movlw	low main@motorL
   927   000166  6E24               	movwf	motor_action_return@l^0,c
   928   000168  0E00               	movlw	high main@motorL
   929   00016A  6E25               	movwf	(motor_action_return@l+1)^0,c
   930   00016C  0ED7               	movlw	low main@motorR
   931   00016E  6E26               	movwf	motor_action_return@r^0,c
   932   000170  0E00               	movlw	high main@motorR
   933   000172  6E27               	movwf	(motor_action_return@r+1)^0,c
   934   000174  ECEE  F006         	call	_motor_action_return	;wreg free
   935   000178                     
   936                           ;../main.c: 138:             _delay((unsigned long)((500)*(64000000/4000.0)));
   937   000178  0E29               	movlw	41
   938   00017A  6E39               	movwf	(??_main+1)^0,c
   939   00017C  0E96               	movlw	150
   940   00017E  6E38               	movwf	??_main^0,c
   941   000180  0E7F               	movlw	127
   942   000182                     u1687:
   943   000182  2EE8               	decfsz	wreg,f,c
   944   000184  D7FE               	bra	u1687
   945   000186  2E38               	decfsz	??_main^0,f,c
   946   000188  D7FC               	bra	u1687
   947   00018A  2E39               	decfsz	(??_main+1)^0,f,c
   948   00018C  D7FA               	bra	u1687
   949   00018E  F000               	nop	
   950   000190                     
   951                           ;../main.c: 139:             reverse_onesquare(&motorL,&motorR);
   952   000190  0ECE               	movlw	low main@motorL
   953   000192  6E1A               	movwf	reverse_onesquare@mL^0,c
   954   000194  0E00               	movlw	high main@motorL
   955   000196  6E1B               	movwf	(reverse_onesquare@mL+1)^0,c
   956   000198  0ED7               	movlw	low main@motorR
   957   00019A  6E1C               	movwf	reverse_onesquare@mR^0,c
   958   00019C  0E00               	movlw	high main@motorR
   959   00019E  6E1D               	movwf	(reverse_onesquare@mR+1)^0,c
   960   0001A0  EC8E  F00D         	call	_reverse_onesquare	;wreg free
   961                           
   962                           ;../main.c: 140:             while (time_return < time_path[k]) {
   963   0001A4  EFF9  F000         	goto	l3239
   964   0001A8                     l3231:
   965                           
   966                           ; BSR set to: 0
   967                           ;../main.c: 141:                 _delay((unsigned long)((500)*(64000000/4000.0)));
   968   0001A8  0E29               	movlw	41
   969   0001AA  6E39               	movwf	(??_main+1)^0,c
   970   0001AC  0E96               	movlw	150
   971   0001AE  6E38               	movwf	??_main^0,c
   972   0001B0  0E7F               	movlw	127
   973   0001B2                     u1697:
   974   0001B2  2EE8               	decfsz	wreg,f,c
   975   0001B4  D7FE               	bra	u1697
   976   0001B6  2E38               	decfsz	??_main^0,f,c
   977   0001B8  D7FC               	bra	u1697
   978   0001BA  2E39               	decfsz	(??_main+1)^0,f,c
   979   0001BC  D7FA               	bra	u1697
   980   0001BE  F000               	nop	
   981   0001C0                     
   982                           ;../main.c: 142:                 time_return++;
   983   0001C0  0100               	movlb	0	; () banked
   984   0001C2  4BBE               	infsnz	main@time_return& (0+255),f,b
   985   0001C4  2BBF               	incf	(main@time_return+1)& (0+255),f,b
   986   0001C6                     
   987                           ; BSR set to: 0
   988                           ;../main.c: 143:                 stop(&motorL,&motorR);
   989   0001C6  0ECE               	movlw	low main@motorL
   990   0001C8  6E1A               	movwf	stop@mL^0,c
   991   0001CA  0E00               	movlw	high main@motorL
   992   0001CC  6E1B               	movwf	(stop@mL+1)^0,c
   993   0001CE  0ED7               	movlw	low main@motorR
   994   0001D0  6E1C               	movwf	stop@mR^0,c
   995   0001D2  0E00               	movlw	high main@motorR
   996   0001D4  6E1D               	movwf	(stop@mR+1)^0,c
   997   0001D6  ECD1  F00E         	call	_stop	;wreg free
   998   0001DA                     
   999                           ;../main.c: 144:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1000   0001DA  0E09               	movlw	9
  1001   0001DC  6E39               	movwf	(??_main+1)^0,c
  1002   0001DE  0E1E               	movlw	30
  1003   0001E0  6E38               	movwf	??_main^0,c
  1004   0001E2  0EE4               	movlw	228
  1005   0001E4                     u1707:
  1006   0001E4  2EE8               	decfsz	wreg,f,c
  1007   0001E6  D7FE               	bra	u1707
  1008   0001E8  2E38               	decfsz	??_main^0,f,c
  1009   0001EA  D7FC               	bra	u1707
  1010   0001EC  2E39               	decfsz	(??_main+1)^0,f,c
  1011   0001EE  D7FA               	bra	u1707
  1012   0001F0  D000               	nop2	
  1013   0001F2                     l3239:
  1014                           
  1015                           ;../main.c: 140:             while (time_return < time_path[k]) {
  1016   0001F2  90D8               	bcf	status,0,c
  1017   0001F4  0100               	movlb	0	; () banked
  1018   0001F6  35C2               	rlcf	main@k& (0+255),w,b
  1019   0001F8  6ED9               	movwf	fsr2l,c
  1020   0001FA  35C3               	rlcf	(main@k+1)& (0+255),w,b
  1021   0001FC  6EDA               	movwf	fsr2h,c
  1022   0001FE  0EAA               	movlw	low main@time_path
  1023   000200  26D9               	addwf	fsr2l,f,c
  1024   000202  0E00               	movlw	high main@time_path
  1025   000204  22DA               	addwfc	fsr2h,f,c
  1026   000206  50DE               	movf	postinc2,w,c
  1027   000208  5DBE               	subwf	main@time_return& (0+255),w,b
  1028   00020A  50DE               	movf	postinc2,w,c
  1029   00020C  59BF               	subwfb	(main@time_return+1)& (0+255),w,b
  1030   00020E  A0D8               	btfss	status,0,c
  1031   000210  EF0C  F001         	goto	u1531
  1032   000214  EF0E  F001         	goto	u1530
  1033   000218                     u1531:
  1034   000218  EFD4  F000         	goto	l3231
  1035   00021C                     u1530:
  1036   00021C                     
  1037                           ; BSR set to: 0
  1038                           ;../main.c: 146:             stop(&motorL,&motorR);
  1039   00021C  0ECE               	movlw	low main@motorL
  1040   00021E  6E1A               	movwf	stop@mL^0,c
  1041   000220  0E00               	movlw	high main@motorL
  1042   000222  6E1B               	movwf	(stop@mL+1)^0,c
  1043   000224  0ED7               	movlw	low main@motorR
  1044   000226  6E1C               	movwf	stop@mR^0,c
  1045   000228  0E00               	movlw	high main@motorR
  1046   00022A  6E1D               	movwf	(stop@mR+1)^0,c
  1047   00022C  ECD1  F00E         	call	_stop	;wreg free
  1048   000230                     
  1049                           ;../main.c: 147:         }
  1050   000230  0100               	movlb	0	; () banked
  1051   000232  07C2               	decf	main@k& (0+255),f,b
  1052   000234  A0D8               	btfss	status,0,c
  1053   000236  07C3               	decf	(main@k+1)& (0+255),f,b
  1054   000238                     
  1055                           ; BSR set to: 0
  1056   000238  BFC3               	btfsc	(main@k+1)& (0+255),7,b
  1057   00023A  EF29  F001         	goto	u1540
  1058   00023E  51C3               	movf	(main@k+1)& (0+255),w,b
  1059   000240  E106               	bnz	u1541
  1060   000242  05C2               	decf	main@k& (0+255),w,b
  1061   000244  B0D8               	btfsc	status,0,c
  1062   000246  EF27  F001         	goto	u1541
  1063   00024A  EF29  F001         	goto	u1540
  1064   00024E                     u1541:
  1065   00024E  EFA0  F000         	goto	l219
  1066   000252                     u1540:
  1067   000252  EFEC  F001         	goto	l3293
  1068   000256                     l3247:
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;../main.c: 152:             time = 0;
  1072   000256  0E00               	movlw	0
  1073   000258  6FF5               	movwf	(_time+1)& (0+255),b
  1074   00025A  0E00               	movlw	0
  1075   00025C  6FF4               	movwf	_time& (0+255),b
  1076   00025E                     
  1077                           ; BSR set to: 0
  1078                           ;../main.c: 153:             motor_action(0,&motorL,&motorR);
  1079   00025E  0E00               	movlw	0
  1080   000260  6E23               	movwf	(motor_action@color+1)^0,c
  1081   000262  0E00               	movlw	0
  1082   000264  6E22               	movwf	motor_action@color^0,c
  1083   000266  0ECE               	movlw	low main@motorL
  1084   000268  6E24               	movwf	motor_action@l^0,c
  1085   00026A  0E00               	movlw	high main@motorL
  1086   00026C  6E25               	movwf	(motor_action@l+1)^0,c
  1087   00026E  0ED7               	movlw	low main@motorR
  1088   000270  6E26               	movwf	motor_action@r^0,c
  1089   000272  0E00               	movlw	high main@motorR
  1090   000274  6E27               	movwf	(motor_action@r+1)^0,c
  1091   000276  EC9E  F002         	call	_motor_action	;wreg free
  1092   00027A                     
  1093                           ;../main.c: 154:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1094   00027A  0E29               	movlw	41
  1095   00027C  6E39               	movwf	(??_main+1)^0,c
  1096   00027E  0E96               	movlw	150
  1097   000280  6E38               	movwf	??_main^0,c
  1098   000282  0E7F               	movlw	127
  1099   000284                     u1717:
  1100   000284  2EE8               	decfsz	wreg,f,c
  1101   000286  D7FE               	bra	u1717
  1102   000288  2E38               	decfsz	??_main^0,f,c
  1103   00028A  D7FC               	bra	u1717
  1104   00028C  2E39               	decfsz	(??_main+1)^0,f,c
  1105   00028E  D7FA               	bra	u1717
  1106   000290  F000               	nop	
  1107   000292                     
  1108                           ;../main.c: 155:             color_read(&RGB_recorded);
  1109   000292  0EC6               	movlw	low main@RGB_recorded
  1110   000294  6E0C               	movwf	color_read@rgb^0,c
  1111   000296  0E00               	movlw	high main@RGB_recorded
  1112   000298  6E0D               	movwf	(color_read@rgb+1)^0,c
  1113   00029A  ECF5  F00B         	call	_color_read	;wreg free
  1114   00029E                     
  1115                           ;../main.c: 156:             if (RGB_recorded.L<upperbound_calibrated && RGB_recorded.L>
      +                          lowerbound_calibrated){color_flag=1;}
  1116   00029E  0100               	movlb	0	; () banked
  1117   0002A0  51B6               	movf	main@upperbound_calibrated& (0+255),w,b
  1118   0002A2  5DC6               	subwf	main@RGB_recorded& (0+255),w,b
  1119   0002A4  51B7               	movf	(main@upperbound_calibrated+1)& (0+255),w,b
  1120   0002A6  59C7               	subwfb	(main@RGB_recorded+1)& (0+255),w,b
  1121   0002A8  B0D8               	btfsc	status,0,c
  1122   0002AA  EF59  F001         	goto	u1551
  1123   0002AE  EF5B  F001         	goto	u1550
  1124   0002B2                     u1551:
  1125   0002B2  EF6A  F001         	goto	l3261
  1126   0002B6                     u1550:
  1127   0002B6                     
  1128                           ; BSR set to: 0
  1129   0002B6  51C6               	movf	main@RGB_recorded& (0+255),w,b
  1130   0002B8  5DB4               	subwf	main@lowerbound_calibrated& (0+255),w,b
  1131   0002BA  51C7               	movf	(main@RGB_recorded+1)& (0+255),w,b
  1132   0002BC  59B5               	subwfb	(main@lowerbound_calibrated+1)& (0+255),w,b
  1133   0002BE  B0D8               	btfsc	status,0,c
  1134   0002C0  EF64  F001         	goto	u1561
  1135   0002C4  EF66  F001         	goto	u1560
  1136   0002C8                     u1561:
  1137   0002C8  EF6A  F001         	goto	l3261
  1138   0002CC                     u1560:
  1139   0002CC                     
  1140                           ; BSR set to: 0
  1141   0002CC  0E00               	movlw	0
  1142   0002CE  6FB9               	movwf	(main@color_flag+1)& (0+255),b
  1143   0002D0  0E01               	movlw	1
  1144   0002D2  6FB8               	movwf	main@color_flag& (0+255),b
  1145   0002D4                     l3261:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;../main.c: 157:             if (color_flag){
  1149   0002D4  51B8               	movf	main@color_flag& (0+255),w,b
  1150   0002D6  11B9               	iorwf	(main@color_flag+1)& (0+255),w,b
  1151   0002D8  B4D8               	btfsc	status,2,c
  1152   0002DA  EF71  F001         	goto	u1571
  1153   0002DE  EF73  F001         	goto	u1570
  1154   0002E2                     u1571:
  1155   0002E2  EFE0  F001         	goto	l3291
  1156   0002E6                     u1570:
  1157   0002E6                     
  1158                           ; BSR set to: 0
  1159                           ;../main.c: 158:                 LATHbits.LATH0 = 1;
  1160   0002E6  8080               	bsf	128,0,c	;volatile
  1161                           
  1162                           ;../main.c: 159:                 LATFbits.LATF0 = 1;
  1163   0002E8  807E               	bsf	126,0,c	;volatile
  1164   0002EA                     
  1165                           ; BSR set to: 0
  1166                           ;../main.c: 160:                 stop(&motorL,&motorR);
  1167   0002EA  0ECE               	movlw	low main@motorL
  1168   0002EC  6E1A               	movwf	stop@mL^0,c
  1169   0002EE  0E00               	movlw	high main@motorL
  1170   0002F0  6E1B               	movwf	(stop@mL+1)^0,c
  1171   0002F2  0ED7               	movlw	low main@motorR
  1172   0002F4  6E1C               	movwf	stop@mR^0,c
  1173   0002F6  0E00               	movlw	high main@motorR
  1174   0002F8  6E1D               	movwf	(stop@mR+1)^0,c
  1175   0002FA  ECD1  F00E         	call	_stop	;wreg free
  1176   0002FE                     
  1177                           ;../main.c: 161:                 color_read(&RGB_recorded);
  1178   0002FE  0EC6               	movlw	low main@RGB_recorded
  1179   000300  6E0C               	movwf	color_read@rgb^0,c
  1180   000302  0E00               	movlw	high main@RGB_recorded
  1181   000304  6E0D               	movwf	(color_read@rgb+1)^0,c
  1182   000306  ECF5  F00B         	call	_color_read	;wreg free
  1183   00030A                     
  1184                           ;../main.c: 162:                 if (LATDbits.LATD7)
  1185   00030A  AE7C               	btfss	124,7,c	;volatile
  1186   00030C  EF8A  F001         	goto	u1581
  1187   000310  EF8C  F001         	goto	u1580
  1188   000314                     u1581:
  1189   000314  EF9C  F001         	goto	l3273
  1190   000318                     u1580:
  1191   000318                     
  1192                           ;../main.c: 163:                 {color_name = color_processor_easy(&RGB_recorded,color_
      +                          calibrated);}
  1193   000318  0EC6               	movlw	low main@RGB_recorded
  1194   00031A  6E01               	movwf	color_processor_easy@rgb^0,c
  1195   00031C  0E00               	movlw	high main@RGB_recorded
  1196   00031E  6E02               	movwf	(color_processor_easy@rgb+1)^0,c
  1197   000320  0E60               	movlw	low main@color_calibrated
  1198   000322  6E03               	movwf	color_processor_easy@calibrated^0,c
  1199   000324  0E00               	movlw	high main@color_calibrated
  1200   000326  6E04               	movwf	(color_processor_easy@calibrated+1)^0,c
  1201   000328  EC7F  F00A         	call	_color_processor_easy	;wreg free
  1202   00032C  C001  F0C0         	movff	?_color_processor_easy,main@color_name
  1203   000330  C002  F0C1         	movff	?_color_processor_easy+1,main@color_name+1
  1204   000334  EFAA  F001         	goto	l3275
  1205   000338                     l3273:
  1206                           
  1207                           ;../main.c: 165:                 {color_name = color_processor_hard(&RGB_recorded,color_
      +                          calibrated);}
  1208   000338  0EC6               	movlw	low main@RGB_recorded
  1209   00033A  6E34               	movwf	color_processor_hard@rgb^0,c
  1210   00033C  0E00               	movlw	high main@RGB_recorded
  1211   00033E  6E35               	movwf	(color_processor_hard@rgb+1)^0,c
  1212   000340  0E60               	movlw	low main@color_calibrated
  1213   000342  6E36               	movwf	color_processor_hard@calibrated^0,c
  1214   000344  0E00               	movlw	high main@color_calibrated
  1215   000346  6E37               	movwf	(color_processor_hard@calibrated+1)^0,c
  1216   000348  ECE0  F010         	call	_color_processor_hard	;wreg free
  1217   00034C  C034  F0C0         	movff	?_color_processor_hard,main@color_name
  1218   000350  C035  F0C1         	movff	?_color_processor_hard+1,main@color_name+1
  1219   000354                     l3275:
  1220                           
  1221                           ;../main.c: 166:                 color_path[j] = color_name;
  1222   000354  90D8               	bcf	status,0,c
  1223   000356  0100               	movlb	0	; () banked
  1224   000358  35BA               	rlcf	main@j& (0+255),w,b
  1225   00035A  6ED9               	movwf	fsr2l,c
  1226   00035C  35BB               	rlcf	(main@j+1)& (0+255),w,b
  1227   00035E  6EDA               	movwf	fsr2h,c
  1228   000360  0EA0               	movlw	low main@color_path
  1229   000362  26D9               	addwf	fsr2l,f,c
  1230   000364  0E00               	movlw	high main@color_path
  1231   000366  22DA               	addwfc	fsr2h,f,c
  1232   000368  C0C0  FFDE         	movff	main@color_name,postinc2
  1233   00036C  C0C1  FFDD         	movff	main@color_name+1,postdec2
  1234   000370                     
  1235                           ; BSR set to: 0
  1236                           ;../main.c: 167:                 time_path[j] = time;
  1237   000370  90D8               	bcf	status,0,c
  1238   000372  35BA               	rlcf	main@j& (0+255),w,b
  1239   000374  6ED9               	movwf	fsr2l,c
  1240   000376  35BB               	rlcf	(main@j+1)& (0+255),w,b
  1241   000378  6EDA               	movwf	fsr2h,c
  1242   00037A  0EAA               	movlw	low main@time_path
  1243   00037C  26D9               	addwf	fsr2l,f,c
  1244   00037E  0E00               	movlw	high main@time_path
  1245   000380  22DA               	addwfc	fsr2h,f,c
  1246   000382  C0F4  FFDE         	movff	_time,postinc2
  1247   000386  C0F5  FFDD         	movff	_time+1,postdec2
  1248   00038A                     
  1249                           ; BSR set to: 0
  1250                           ;../main.c: 168:                 motor_action(color_name,&motorL,&motorR);
  1251   00038A  C0C0  F022         	movff	main@color_name,motor_action@color
  1252   00038E  C0C1  F023         	movff	main@color_name+1,motor_action@color+1
  1253   000392  0ECE               	movlw	low main@motorL
  1254   000394  6E24               	movwf	motor_action@l^0,c
  1255   000396  0E00               	movlw	high main@motorL
  1256   000398  6E25               	movwf	(motor_action@l+1)^0,c
  1257   00039A  0ED7               	movlw	low main@motorR
  1258   00039C  6E26               	movwf	motor_action@r^0,c
  1259   00039E  0E00               	movlw	high main@motorR
  1260   0003A0  6E27               	movwf	(motor_action@r+1)^0,c
  1261   0003A2  EC9E  F002         	call	_motor_action	;wreg free
  1262   0003A6                     
  1263                           ;../main.c: 170:                 j++;
  1264   0003A6  0100               	movlb	0	; () banked
  1265   0003A8  4BBA               	infsnz	main@j& (0+255),f,b
  1266   0003AA  2BBB               	incf	(main@j+1)& (0+255),f,b
  1267   0003AC                     
  1268                           ; BSR set to: 0
  1269                           ;../main.c: 171:                 time = 0;
  1270   0003AC  0E00               	movlw	0
  1271   0003AE  6FF5               	movwf	(_time+1)& (0+255),b
  1272   0003B0  0E00               	movlw	0
  1273   0003B2  6FF4               	movwf	_time& (0+255),b
  1274   0003B4                     
  1275                           ; BSR set to: 0
  1276                           ;../main.c: 172:                 color_flag = 0;
  1277   0003B4  0E00               	movlw	0
  1278   0003B6  6FB9               	movwf	(main@color_flag+1)& (0+255),b
  1279   0003B8  0E00               	movlw	0
  1280   0003BA  6FB8               	movwf	main@color_flag& (0+255),b
  1281   0003BC                     
  1282                           ; BSR set to: 0
  1283                           ;../main.c: 173:                 LATHbits.LATH0 = 0;
  1284   0003BC  9080               	bcf	128,0,c	;volatile
  1285   0003BE                     
  1286                           ; BSR set to: 0
  1287                           ;../main.c: 174:                 LATFbits.LATF0 = 0;
  1288   0003BE  907E               	bcf	126,0,c	;volatile
  1289   0003C0                     l3291:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;../main.c: 176:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1293   0003C0  0E11               	movlw	17
  1294   0003C2  6E39               	movwf	(??_main+1)^0,c
  1295   0003C4  0E3C               	movlw	60
  1296   0003C6  6E38               	movwf	??_main^0,c
  1297   0003C8  0ECB               	movlw	203
  1298   0003CA                     u1727:
  1299   0003CA  2EE8               	decfsz	wreg,f,c
  1300   0003CC  D7FE               	bra	u1727
  1301   0003CE  2E38               	decfsz	??_main^0,f,c
  1302   0003D0  D7FC               	bra	u1727
  1303   0003D2  2E39               	decfsz	(??_main+1)^0,f,c
  1304   0003D4  D7FA               	bra	u1727
  1305   0003D6  F000               	nop	
  1306   0003D8                     l3293:
  1307                           
  1308                           ;../main.c: 151:         while (color_name != 8){
  1309   0003D8  0E08               	movlw	8
  1310   0003DA  0100               	movlb	0	; () banked
  1311   0003DC  19C0               	xorwf	main@color_name& (0+255),w,b
  1312   0003DE  11C1               	iorwf	(main@color_name+1)& (0+255),w,b
  1313   0003E0  A4D8               	btfss	status,2,c
  1314   0003E2  EFF5  F001         	goto	u1591
  1315   0003E6  EFF7  F001         	goto	u1590
  1316   0003EA                     u1591:
  1317   0003EA  EF2B  F001         	goto	l3247
  1318   0003EE                     u1590:
  1319   0003EE                     
  1320                           ; BSR set to: 0
  1321                           ;../main.c: 180:         spin_180(&motorL,&motorR);
  1322   0003EE  0ECE               	movlw	low main@motorL
  1323   0003F0  6E1A               	movwf	spin_180@mL^0,c
  1324   0003F2  0E00               	movlw	high main@motorL
  1325   0003F4  6E1B               	movwf	(spin_180@mL+1)^0,c
  1326   0003F6  0ED7               	movlw	low main@motorR
  1327   0003F8  6E1C               	movwf	spin_180@mR^0,c
  1328   0003FA  0E00               	movlw	high main@motorR
  1329   0003FC  6E1D               	movwf	(spin_180@mR+1)^0,c
  1330   0003FE  ECEC  F00C         	call	_spin_180	;wreg free
  1331   000402                     
  1332                           ;../main.c: 181:         for (int m=0;m>12;m++){
  1333   000402  0E00               	movlw	0
  1334   000404  0100               	movlb	0	; () banked
  1335   000406  6FBD               	movwf	(main@m+1)& (0+255),b
  1336   000408  0E00               	movlw	0
  1337   00040A  6FBC               	movwf	main@m& (0+255),b
  1338   00040C                     l3299:
  1339                           
  1340                           ; BSR set to: 0
  1341   00040C  BFBD               	btfsc	(main@m+1)& (0+255),7,b
  1342   00040E  EF14  F002         	goto	u1600
  1343   000412  51BD               	movf	(main@m+1)& (0+255),w,b
  1344   000414  E107               	bnz	u1601
  1345   000416  0E0D               	movlw	13
  1346   000418  5DBC               	subwf	main@m& (0+255),w,b
  1347   00041A  B0D8               	btfsc	status,0,c
  1348   00041C  EF12  F002         	goto	u1601
  1349   000420  EF14  F002         	goto	u1600
  1350   000424                     u1601:
  1351   000424  EF16  F002         	goto	l3303
  1352   000428                     u1600:
  1353   000428  EF2D  F002         	goto	l3309
  1354   00042C                     l3303:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;../main.c: 182:             LATHbits.LATH3=!LATHbits.LATH3;
  1358   00042C  A680               	btfss	128,3,c	;volatile
  1359   00042E  EF1B  F002         	goto	u1611
  1360   000432  EF1F  F002         	goto	u1610
  1361   000436                     u1611:
  1362   000436  6A38               	clrf	??_main^0,c
  1363   000438  2A38               	incf	??_main^0,f,c
  1364   00043A  EF20  F002         	goto	u1628
  1365   00043E                     u1610:
  1366   00043E  6A38               	clrf	??_main^0,c
  1367   000440                     u1628:
  1368   000440  4638               	rlncf	??_main^0,f,c
  1369   000442  4638               	rlncf	??_main^0,f,c
  1370   000444  4638               	rlncf	??_main^0,f,c
  1371   000446  5080               	movf	128,w,c	;volatile
  1372   000448  1838               	xorwf	??_main^0,w,c
  1373   00044A  0BF7               	andlw	-9
  1374   00044C  1838               	xorwf	??_main^0,w,c
  1375   00044E  6E80               	movwf	128,c	;volatile
  1376   000450                     
  1377                           ;../main.c: 183:         }
  1378   000450  0100               	movlb	0	; () banked
  1379   000452  4BBC               	infsnz	main@m& (0+255),f,b
  1380   000454  2BBD               	incf	(main@m+1)& (0+255),f,b
  1381   000456  EF06  F002         	goto	l3299
  1382   00045A                     l3309:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;../main.c: 184:         for (int k=15;k>0;k--){
  1386   00045A  0E00               	movlw	0
  1387   00045C  6FC5               	movwf	(main@k_878+1)& (0+255),b
  1388   00045E  0E0F               	movlw	15
  1389   000460  6FC4               	movwf	main@k_878& (0+255),b
  1390   000462                     l3311:
  1391                           
  1392                           ; BSR set to: 0
  1393   000462  BFC5               	btfsc	(main@k_878+1)& (0+255),7,b
  1394   000464  EF3E  F002         	goto	u1630
  1395   000468  51C5               	movf	(main@k_878+1)& (0+255),w,b
  1396   00046A  E106               	bnz	u1631
  1397   00046C  05C4               	decf	main@k_878& (0+255),w,b
  1398   00046E  B0D8               	btfsc	status,0,c
  1399   000470  EF3C  F002         	goto	u1631
  1400   000474  EF3E  F002         	goto	u1630
  1401   000478                     u1631:
  1402   000478  EF40  F002         	goto	l233
  1403   00047C                     u1630:
  1404   00047C  EF79  F000         	goto	l3213
  1405   000480                     l233:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;../main.c: 185:             INTCONbits.GIE = 0;
  1409   000480  9EF2               	bcf	242,7,c	;volatile
  1410   000482                     
  1411                           ; BSR set to: 0
  1412                           ;../main.c: 186:             time_return = 0;
  1413   000482  0E00               	movlw	0
  1414   000484  6FBF               	movwf	(main@time_return+1)& (0+255),b
  1415   000486  0E00               	movlw	0
  1416   000488  6FBE               	movwf	main@time_return& (0+255),b
  1417   00048A                     
  1418                           ; BSR set to: 0
  1419                           ;../main.c: 187:             motor_action_return(color_path[k],&motorL,&motorR);
  1420   00048A  90D8               	bcf	status,0,c
  1421   00048C  35C4               	rlcf	main@k_878& (0+255),w,b
  1422   00048E  6ED9               	movwf	fsr2l,c
  1423   000490  35C5               	rlcf	(main@k_878+1)& (0+255),w,b
  1424   000492  6EDA               	movwf	fsr2h,c
  1425   000494  0EA0               	movlw	low main@color_path
  1426   000496  26D9               	addwf	fsr2l,f,c
  1427   000498  0E00               	movlw	high main@color_path
  1428   00049A  22DA               	addwfc	fsr2h,f,c
  1429   00049C  CFDE F022          	movff	postinc2,motor_action_return@color
  1430   0004A0  CFDD F023          	movff	postdec2,motor_action_return@color+1
  1431   0004A4  0ECE               	movlw	low main@motorL
  1432   0004A6  6E24               	movwf	motor_action_return@l^0,c
  1433   0004A8  0E00               	movlw	high main@motorL
  1434   0004AA  6E25               	movwf	(motor_action_return@l+1)^0,c
  1435   0004AC  0ED7               	movlw	low main@motorR
  1436   0004AE  6E26               	movwf	motor_action_return@r^0,c
  1437   0004B0  0E00               	movlw	high main@motorR
  1438   0004B2  6E27               	movwf	(motor_action_return@r+1)^0,c
  1439   0004B4  ECEE  F006         	call	_motor_action_return	;wreg free
  1440   0004B8                     
  1441                           ;../main.c: 188:             forward(&motorL,&motorR);
  1442   0004B8  0ECE               	movlw	low main@motorL
  1443   0004BA  6E1A               	movwf	forward@mL^0,c
  1444   0004BC  0E00               	movlw	high main@motorL
  1445   0004BE  6E1B               	movwf	(forward@mL+1)^0,c
  1446   0004C0  0ED7               	movlw	low main@motorR
  1447   0004C2  6E1C               	movwf	forward@mR^0,c
  1448   0004C4  0E00               	movlw	high main@motorR
  1449   0004C6  6E1D               	movwf	(forward@mR+1)^0,c
  1450   0004C8  EC30  F00E         	call	_forward	;wreg free
  1451                           
  1452                           ;../main.c: 189:             while (time_return < time_path[k]) {
  1453   0004CC  EF77  F002         	goto	l3325
  1454   0004D0                     l3321:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;../main.c: 190:                 _delay((unsigned long)((500)*(64000000/4000.0)));
  1458   0004D0  0E29               	movlw	41
  1459   0004D2  6E39               	movwf	(??_main+1)^0,c
  1460   0004D4  0E96               	movlw	150
  1461   0004D6  6E38               	movwf	??_main^0,c
  1462   0004D8  0E7F               	movlw	127
  1463   0004DA                     u1737:
  1464   0004DA  2EE8               	decfsz	wreg,f,c
  1465   0004DC  D7FE               	bra	u1737
  1466   0004DE  2E38               	decfsz	??_main^0,f,c
  1467   0004E0  D7FC               	bra	u1737
  1468   0004E2  2E39               	decfsz	(??_main+1)^0,f,c
  1469   0004E4  D7FA               	bra	u1737
  1470   0004E6  F000               	nop	
  1471   0004E8                     
  1472                           ;../main.c: 191:                 time_return++;
  1473   0004E8  0100               	movlb	0	; () banked
  1474   0004EA  4BBE               	infsnz	main@time_return& (0+255),f,b
  1475   0004EC  2BBF               	incf	(main@time_return+1)& (0+255),f,b
  1476   0004EE                     l3325:
  1477                           
  1478                           ;../main.c: 189:             while (time_return < time_path[k]) {
  1479   0004EE  90D8               	bcf	status,0,c
  1480   0004F0  0100               	movlb	0	; () banked
  1481   0004F2  35C4               	rlcf	main@k_878& (0+255),w,b
  1482   0004F4  6ED9               	movwf	fsr2l,c
  1483   0004F6  35C5               	rlcf	(main@k_878+1)& (0+255),w,b
  1484   0004F8  6EDA               	movwf	fsr2h,c
  1485   0004FA  0EAA               	movlw	low main@time_path
  1486   0004FC  26D9               	addwf	fsr2l,f,c
  1487   0004FE  0E00               	movlw	high main@time_path
  1488   000500  22DA               	addwfc	fsr2h,f,c
  1489   000502  50DE               	movf	postinc2,w,c
  1490   000504  5DBE               	subwf	main@time_return& (0+255),w,b
  1491   000506  50DE               	movf	postinc2,w,c
  1492   000508  59BF               	subwfb	(main@time_return+1)& (0+255),w,b
  1493   00050A  A0D8               	btfss	status,0,c
  1494   00050C  EF8A  F002         	goto	u1641
  1495   000510  EF8C  F002         	goto	u1640
  1496   000514                     u1641:
  1497   000514  EF68  F002         	goto	l3321
  1498   000518                     u1640:
  1499   000518                     
  1500                           ; BSR set to: 0
  1501                           ;../main.c: 193:             stop(&motorL,&motorR);
  1502   000518  0ECE               	movlw	low main@motorL
  1503   00051A  6E1A               	movwf	stop@mL^0,c
  1504   00051C  0E00               	movlw	high main@motorL
  1505   00051E  6E1B               	movwf	(stop@mL+1)^0,c
  1506   000520  0ED7               	movlw	low main@motorR
  1507   000522  6E1C               	movwf	stop@mR^0,c
  1508   000524  0E00               	movlw	high main@motorR
  1509   000526  6E1D               	movwf	(stop@mR+1)^0,c
  1510   000528  ECD1  F00E         	call	_stop	;wreg free
  1511   00052C                     
  1512                           ;../main.c: 194:         }
  1513   00052C  0100               	movlb	0	; () banked
  1514   00052E  07C4               	decf	main@k_878& (0+255),f,b
  1515   000530  A0D8               	btfss	status,0,c
  1516   000532  07C5               	decf	(main@k_878+1)& (0+255),f,b
  1517   000534  EF31  F002         	goto	l3311
  1518   000538  EF1F  F000         	goto	start
  1519   00053C                     __end_of_main:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _motor_action_return *****************
  1523 ;; Defined at:
  1524 ;;		line 297 in file "../dc_motor.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  color           2   33[COMRAM] unsigned int 
  1527 ;;  l               2   35[COMRAM] PTR struct DC_motor
  1528 ;;		 -> main@motorL(9), 
  1529 ;;  r               2   37[COMRAM] PTR struct DC_motor
  1530 ;;		 -> main@motorR(9), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1542 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;Total ram usage:        8 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 4
  1549 ;; This function calls:
  1550 ;;		_forward
  1551 ;;		_left_135
  1552 ;;		_left_90
  1553 ;;		_reverse_fromcard
  1554 ;;		_reverse_onesquare
  1555 ;;		_right_135
  1556 ;;		_right_90
  1557 ;;		_spin_180
  1558 ;;		_stop
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text1
  1565   000DDC                     __ptext1:
  1566                           	callstack 0
  1567   000DDC                     _motor_action_return:
  1568                           	callstack 26
  1569   000DDC                     
  1570                           ;../dc_motor.c: 297: void motor_action_return(unsigned int color, struct DC_motor *l, st
      +                          ruct DC_motor *r);../dc_motor.c: 298: {;../dc_motor.c: 299:     switch (color){
  1571   000DDC  EF8C  F008         	goto	l3075
  1572   000DE0                     l3019:
  1573                           
  1574                           ;../dc_motor.c: 301:             reverse_fromcard(l,r);
  1575   000DE0  C024  F01A         	movff	motor_action_return@l,reverse_fromcard@mL
  1576   000DE4  C025  F01B         	movff	motor_action_return@l+1,reverse_fromcard@mL+1
  1577   000DE8  C026  F01C         	movff	motor_action_return@r,reverse_fromcard@mR
  1578   000DEC  C027  F01D         	movff	motor_action_return@r+1,reverse_fromcard@mR+1
  1579   000DF0  EC81  F00E         	call	_reverse_fromcard	;wreg free
  1580                           
  1581                           ;../dc_motor.c: 302:             stop(l,r);
  1582   000DF4  C024  F01A         	movff	motor_action_return@l,stop@mL
  1583   000DF8  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1584   000DFC  C026  F01C         	movff	motor_action_return@r,stop@mR
  1585   000E00  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1586   000E04  ECD1  F00E         	call	_stop	;wreg free
  1587   000E08                     
  1588                           ;../dc_motor.c: 303:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1589   000E08  0E29               	movlw	41
  1590   000E0A  6E29               	movwf	(??_motor_action_return+1)^0,c
  1591   000E0C  0E96               	movlw	150
  1592   000E0E  6E28               	movwf	??_motor_action_return^0,c
  1593   000E10  0E7F               	movlw	127
  1594   000E12                     u1747:
  1595   000E12  2EE8               	decfsz	wreg,f,c
  1596   000E14  D7FE               	bra	u1747
  1597   000E16  2E28               	decfsz	??_motor_action_return^0,f,c
  1598   000E18  D7FC               	bra	u1747
  1599   000E1A  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1600   000E1C  D7FA               	bra	u1747
  1601   000E1E  F000               	nop	
  1602   000E20                     
  1603                           ;../dc_motor.c: 304:             left_90(l,r);
  1604   000E20  C024  F01A         	movff	motor_action_return@l,left_90@mL
  1605   000E24  C025  F01B         	movff	motor_action_return@l+1,left_90@mL+1
  1606   000E28  C026  F01C         	movff	motor_action_return@r,left_90@mR
  1607   000E2C  C027  F01D         	movff	motor_action_return@r+1,left_90@mR+1
  1608   000E30  EC9A  F00C         	call	_left_90	;wreg free
  1609   000E34                     l3025:
  1610                           
  1611                           ;../dc_motor.c: 305:             stop(l,r);
  1612   000E34  C024  F01A         	movff	motor_action_return@l,stop@mL
  1613   000E38  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1614   000E3C  C026  F01C         	movff	motor_action_return@r,stop@mR
  1615   000E40  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1616   000E44  ECD1  F00E         	call	_stop	;wreg free
  1617                           
  1618                           ;../dc_motor.c: 306:             break;
  1619   000E48  EFBA  F008         	goto	l366
  1620   000E4C                     l3027:
  1621                           
  1622                           ;../dc_motor.c: 308:             reverse_fromcard(l,r);
  1623   000E4C  C024  F01A         	movff	motor_action_return@l,reverse_fromcard@mL
  1624   000E50  C025  F01B         	movff	motor_action_return@l+1,reverse_fromcard@mL+1
  1625   000E54  C026  F01C         	movff	motor_action_return@r,reverse_fromcard@mR
  1626   000E58  C027  F01D         	movff	motor_action_return@r+1,reverse_fromcard@mR+1
  1627   000E5C  EC81  F00E         	call	_reverse_fromcard	;wreg free
  1628                           
  1629                           ;../dc_motor.c: 309:             stop(l,r);
  1630   000E60  C024  F01A         	movff	motor_action_return@l,stop@mL
  1631   000E64  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1632   000E68  C026  F01C         	movff	motor_action_return@r,stop@mR
  1633   000E6C  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1634   000E70  ECD1  F00E         	call	_stop	;wreg free
  1635   000E74                     
  1636                           ;../dc_motor.c: 310:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1637   000E74  0E29               	movlw	41
  1638   000E76  6E29               	movwf	(??_motor_action_return+1)^0,c
  1639   000E78  0E96               	movlw	150
  1640   000E7A  6E28               	movwf	??_motor_action_return^0,c
  1641   000E7C  0E7F               	movlw	127
  1642   000E7E                     u1757:
  1643   000E7E  2EE8               	decfsz	wreg,f,c
  1644   000E80  D7FE               	bra	u1757
  1645   000E82  2E28               	decfsz	??_motor_action_return^0,f,c
  1646   000E84  D7FC               	bra	u1757
  1647   000E86  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1648   000E88  D7FA               	bra	u1757
  1649   000E8A  F000               	nop	
  1650   000E8C                     
  1651                           ;../dc_motor.c: 311:             right_90(l,r);
  1652   000E8C  C024  F01A         	movff	motor_action_return@l,right_90@mL
  1653   000E90  C025  F01B         	movff	motor_action_return@l+1,right_90@mL+1
  1654   000E94  C026  F01C         	movff	motor_action_return@r,right_90@mR
  1655   000E98  C027  F01D         	movff	motor_action_return@r+1,right_90@mR+1
  1656   000E9C  EC48  F00C         	call	_right_90	;wreg free
  1657   000EA0                     
  1658                           ;../dc_motor.c: 312:             stop(l,r);
  1659   000EA0  C024  F01A         	movff	motor_action_return@l,stop@mL
  1660   000EA4  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1661   000EA8  C026  F01C         	movff	motor_action_return@r,stop@mR
  1662   000EAC  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1663   000EB0  ECD1  F00E         	call	_stop	;wreg free
  1664   000EB4                     
  1665                           ;../dc_motor.c: 313:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1666   000EB4  0E29               	movlw	41
  1667   000EB6  6E29               	movwf	(??_motor_action_return+1)^0,c
  1668   000EB8  0E96               	movlw	150
  1669   000EBA  6E28               	movwf	??_motor_action_return^0,c
  1670   000EBC  0E7F               	movlw	127
  1671   000EBE                     u1767:
  1672   000EBE  2EE8               	decfsz	wreg,f,c
  1673   000EC0  D7FE               	bra	u1767
  1674   000EC2  2E28               	decfsz	??_motor_action_return^0,f,c
  1675   000EC4  D7FC               	bra	u1767
  1676   000EC6  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1677   000EC8  D7FA               	bra	u1767
  1678   000ECA  F000               	nop	
  1679                           
  1680                           ;../dc_motor.c: 314:             right_90(l,r);
  1681   000ECC  C024  F01A         	movff	motor_action_return@l,right_90@mL
  1682   000ED0  C025  F01B         	movff	motor_action_return@l+1,right_90@mL+1
  1683   000ED4  C026  F01C         	movff	motor_action_return@r,right_90@mR
  1684   000ED8  C027  F01D         	movff	motor_action_return@r+1,right_90@mR+1
  1685   000EDC  EC48  F00C         	call	_right_90	;wreg free
  1686                           
  1687                           ;../dc_motor.c: 315:             stop(l,r);
  1688   000EE0  C024  F01A         	movff	motor_action_return@l,stop@mL
  1689   000EE4  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1690   000EE8  C026  F01C         	movff	motor_action_return@r,stop@mR
  1691   000EEC  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1692   000EF0  ECD1  F00E         	call	_stop	;wreg free
  1693                           
  1694                           ;../dc_motor.c: 316:             break;
  1695   000EF4  EFBA  F008         	goto	l366
  1696   000EF8                     l3037:
  1697                           
  1698                           ;../dc_motor.c: 318:             reverse_fromcard(l,r);
  1699   000EF8  C024  F01A         	movff	motor_action_return@l,reverse_fromcard@mL
  1700   000EFC  C025  F01B         	movff	motor_action_return@l+1,reverse_fromcard@mL+1
  1701   000F00  C026  F01C         	movff	motor_action_return@r,reverse_fromcard@mR
  1702   000F04  C027  F01D         	movff	motor_action_return@r+1,reverse_fromcard@mR+1
  1703   000F08  EC81  F00E         	call	_reverse_fromcard	;wreg free
  1704                           
  1705                           ;../dc_motor.c: 319:             stop(l,r);
  1706   000F0C  C024  F01A         	movff	motor_action_return@l,stop@mL
  1707   000F10  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1708   000F14  C026  F01C         	movff	motor_action_return@r,stop@mR
  1709   000F18  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1710   000F1C  ECD1  F00E         	call	_stop	;wreg free
  1711   000F20                     
  1712                           ;../dc_motor.c: 320:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1713   000F20  0E29               	movlw	41
  1714   000F22  6E29               	movwf	(??_motor_action_return+1)^0,c
  1715   000F24  0E96               	movlw	150
  1716   000F26  6E28               	movwf	??_motor_action_return^0,c
  1717   000F28  0E7F               	movlw	127
  1718   000F2A                     u1777:
  1719   000F2A  2EE8               	decfsz	wreg,f,c
  1720   000F2C  D7FE               	bra	u1777
  1721   000F2E  2E28               	decfsz	??_motor_action_return^0,f,c
  1722   000F30  D7FC               	bra	u1777
  1723   000F32  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1724   000F34  D7FA               	bra	u1777
  1725   000F36  F000               	nop	
  1726   000F38                     
  1727                           ;../dc_motor.c: 321:             spin_180(l,r);
  1728   000F38  C024  F01A         	movff	motor_action_return@l,spin_180@mL
  1729   000F3C  C025  F01B         	movff	motor_action_return@l+1,spin_180@mL+1
  1730   000F40  C026  F01C         	movff	motor_action_return@r,spin_180@mR
  1731   000F44  C027  F01D         	movff	motor_action_return@r+1,spin_180@mR+1
  1732   000F48  ECEC  F00C         	call	_spin_180	;wreg free
  1733   000F4C  EF1A  F007         	goto	l3025
  1734   000F50                     l3045:
  1735                           
  1736                           ;../dc_motor.c: 325:             forward(l,r);
  1737   000F50  C024  F01A         	movff	motor_action_return@l,forward@mL
  1738   000F54  C025  F01B         	movff	motor_action_return@l+1,forward@mL+1
  1739   000F58  C026  F01C         	movff	motor_action_return@r,forward@mR
  1740   000F5C  C027  F01D         	movff	motor_action_return@r+1,forward@mR+1
  1741   000F60  EC30  F00E         	call	_forward	;wreg free
  1742                           
  1743                           ;../dc_motor.c: 326:             right_90(l,r);
  1744   000F64  C024  F01A         	movff	motor_action_return@l,right_90@mL
  1745   000F68  C025  F01B         	movff	motor_action_return@l+1,right_90@mL+1
  1746   000F6C  C026  F01C         	movff	motor_action_return@r,right_90@mR
  1747   000F70  C027  F01D         	movff	motor_action_return@r+1,right_90@mR+1
  1748   000F74  EC48  F00C         	call	_right_90	;wreg free
  1749                           
  1750                           ;../dc_motor.c: 327:             forward(l,r);
  1751   000F78  C024  F01A         	movff	motor_action_return@l,forward@mL
  1752   000F7C  C025  F01B         	movff	motor_action_return@l+1,forward@mL+1
  1753   000F80  C026  F01C         	movff	motor_action_return@r,forward@mR
  1754   000F84  C027  F01D         	movff	motor_action_return@r+1,forward@mR+1
  1755   000F88  EC30  F00E         	call	_forward	;wreg free
  1756                           
  1757                           ;../dc_motor.c: 328:             stop(l,r);
  1758   000F8C  C024  F01A         	movff	motor_action_return@l,stop@mL
  1759   000F90  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1760   000F94  C026  F01C         	movff	motor_action_return@r,stop@mR
  1761   000F98  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1762   000F9C  ECD1  F00E         	call	_stop	;wreg free
  1763                           
  1764                           ;../dc_motor.c: 329:             break;
  1765   000FA0  EFBA  F008         	goto	l366
  1766   000FA4                     l3047:
  1767                           
  1768                           ;../dc_motor.c: 331:             stop(l,r);
  1769   000FA4  C024  F01A         	movff	motor_action_return@l,stop@mL
  1770   000FA8  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1771   000FAC  C026  F01C         	movff	motor_action_return@r,stop@mR
  1772   000FB0  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1773   000FB4  ECD1  F00E         	call	_stop	;wreg free
  1774                           
  1775                           ;../dc_motor.c: 332:             left_90(l,r);
  1776   000FB8  C024  F01A         	movff	motor_action_return@l,left_90@mL
  1777   000FBC  C025  F01B         	movff	motor_action_return@l+1,left_90@mL+1
  1778   000FC0  C026  F01C         	movff	motor_action_return@r,left_90@mR
  1779   000FC4  C027  F01D         	movff	motor_action_return@r+1,left_90@mR+1
  1780   000FC8  EC9A  F00C         	call	_left_90	;wreg free
  1781                           
  1782                           ;../dc_motor.c: 333:             forward(l,r);
  1783   000FCC  C024  F01A         	movff	motor_action_return@l,forward@mL
  1784   000FD0  C025  F01B         	movff	motor_action_return@l+1,forward@mL+1
  1785   000FD4  C026  F01C         	movff	motor_action_return@r,forward@mR
  1786   000FD8  C027  F01D         	movff	motor_action_return@r+1,forward@mR+1
  1787   000FDC  EC30  F00E         	call	_forward	;wreg free
  1788                           
  1789                           ;../dc_motor.c: 334:             stop(l,r);
  1790   000FE0  C024  F01A         	movff	motor_action_return@l,stop@mL
  1791   000FE4  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1792   000FE8  C026  F01C         	movff	motor_action_return@r,stop@mR
  1793   000FEC  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1794   000FF0  ECD1  F00E         	call	_stop	;wreg free
  1795                           
  1796                           ;../dc_motor.c: 335:             break;
  1797   000FF4  EFBA  F008         	goto	l366
  1798   000FF8                     l3049:
  1799                           
  1800                           ;../dc_motor.c: 337:             stop(l,r);
  1801   000FF8  C024  F01A         	movff	motor_action_return@l,stop@mL
  1802   000FFC  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1803   001000  C026  F01C         	movff	motor_action_return@r,stop@mR
  1804   001004  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1805   001008  ECD1  F00E         	call	_stop	;wreg free
  1806   00100C                     
  1807                           ;../dc_motor.c: 338:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1808   00100C  0E29               	movlw	41
  1809   00100E  6E29               	movwf	(??_motor_action_return+1)^0,c
  1810   001010  0E96               	movlw	150
  1811   001012  6E28               	movwf	??_motor_action_return^0,c
  1812   001014  0E7F               	movlw	127
  1813   001016                     u1787:
  1814   001016  2EE8               	decfsz	wreg,f,c
  1815   001018  D7FE               	bra	u1787
  1816   00101A  2E28               	decfsz	??_motor_action_return^0,f,c
  1817   00101C  D7FC               	bra	u1787
  1818   00101E  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1819   001020  D7FA               	bra	u1787
  1820   001022  F000               	nop	
  1821   001024                     
  1822                           ;../dc_motor.c: 339:             left_135(l,r);
  1823   001024  C024  F01A         	movff	motor_action_return@l,left_135@mL
  1824   001028  C025  F01B         	movff	motor_action_return@l+1,left_135@mL+1
  1825   00102C  C026  F01C         	movff	motor_action_return@r,left_135@mR
  1826   001030  C027  F01D         	movff	motor_action_return@r+1,left_135@mR+1
  1827   001034  ECDF  F00D         	call	_left_135	;wreg free
  1828   001038  EF1A  F007         	goto	l3025
  1829   00103C                     l3057:
  1830                           
  1831                           ;../dc_motor.c: 343:             stop(l,r);
  1832   00103C  C024  F01A         	movff	motor_action_return@l,stop@mL
  1833   001040  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1834   001044  C026  F01C         	movff	motor_action_return@r,stop@mR
  1835   001048  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1836   00104C  ECD1  F00E         	call	_stop	;wreg free
  1837   001050                     
  1838                           ;../dc_motor.c: 344:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1839   001050  0E29               	movlw	41
  1840   001052  6E29               	movwf	(??_motor_action_return+1)^0,c
  1841   001054  0E96               	movlw	150
  1842   001056  6E28               	movwf	??_motor_action_return^0,c
  1843   001058  0E7F               	movlw	127
  1844   00105A                     u1797:
  1845   00105A  2EE8               	decfsz	wreg,f,c
  1846   00105C  D7FE               	bra	u1797
  1847   00105E  2E28               	decfsz	??_motor_action_return^0,f,c
  1848   001060  D7FC               	bra	u1797
  1849   001062  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1850   001064  D7FA               	bra	u1797
  1851   001066  F000               	nop	
  1852   001068                     
  1853                           ;../dc_motor.c: 345:             right_135(l,r);
  1854   001068  C024  F01A         	movff	motor_action_return@l,right_135@mL
  1855   00106C  C025  F01B         	movff	motor_action_return@l+1,right_135@mL+1
  1856   001070  C026  F01C         	movff	motor_action_return@r,right_135@mR
  1857   001074  C027  F01D         	movff	motor_action_return@r+1,right_135@mR+1
  1858   001078  EC3D  F00D         	call	_right_135	;wreg free
  1859   00107C                     
  1860                           ;../dc_motor.c: 346:             stop(l,r);
  1861   00107C  C024  F01A         	movff	motor_action_return@l,stop@mL
  1862   001080  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1863   001084  C026  F01C         	movff	motor_action_return@r,stop@mR
  1864   001088  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1865   00108C  ECD1  F00E         	call	_stop	;wreg free
  1866   001090                     
  1867                           ;../dc_motor.c: 347:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1868   001090  0E29               	movlw	41
  1869   001092  6E29               	movwf	(??_motor_action_return+1)^0,c
  1870   001094  0E96               	movlw	150
  1871   001096  6E28               	movwf	??_motor_action_return^0,c
  1872   001098  0E7F               	movlw	127
  1873   00109A                     u1807:
  1874   00109A  2EE8               	decfsz	wreg,f,c
  1875   00109C  D7FE               	bra	u1807
  1876   00109E  2E28               	decfsz	??_motor_action_return^0,f,c
  1877   0010A0  D7FC               	bra	u1807
  1878   0010A2  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1879   0010A4  D7FA               	bra	u1807
  1880   0010A6  F000               	nop	
  1881                           
  1882                           ;../dc_motor.c: 348:             right_135(l,r);
  1883   0010A8  C024  F01A         	movff	motor_action_return@l,right_135@mL
  1884   0010AC  C025  F01B         	movff	motor_action_return@l+1,right_135@mL+1
  1885   0010B0  C026  F01C         	movff	motor_action_return@r,right_135@mR
  1886   0010B4  C027  F01D         	movff	motor_action_return@r+1,right_135@mR+1
  1887   0010B8  EC3D  F00D         	call	_right_135	;wreg free
  1888                           
  1889                           ;../dc_motor.c: 349:             stop(l,r);
  1890   0010BC  C024  F01A         	movff	motor_action_return@l,stop@mL
  1891   0010C0  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1892   0010C4  C026  F01C         	movff	motor_action_return@r,stop@mR
  1893   0010C8  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1894   0010CC  ECD1  F00E         	call	_stop	;wreg free
  1895                           
  1896                           ;../dc_motor.c: 350:             break;
  1897   0010D0  EFBA  F008         	goto	l366
  1898   0010D4                     l3067:
  1899                           
  1900                           ;../dc_motor.c: 352:             stop(l,r);
  1901   0010D4  C024  F01A         	movff	motor_action_return@l,stop@mL
  1902   0010D8  C025  F01B         	movff	motor_action_return@l+1,stop@mL+1
  1903   0010DC  C026  F01C         	movff	motor_action_return@r,stop@mR
  1904   0010E0  C027  F01D         	movff	motor_action_return@r+1,stop@mR+1
  1905   0010E4  ECD1  F00E         	call	_stop	;wreg free
  1906                           
  1907                           ;../dc_motor.c: 353:             reverse_onesquare(l,r);
  1908   0010E8  C024  F01A         	movff	motor_action_return@l,reverse_onesquare@mL
  1909   0010EC  C025  F01B         	movff	motor_action_return@l+1,reverse_onesquare@mL+1
  1910   0010F0  C026  F01C         	movff	motor_action_return@r,reverse_onesquare@mR
  1911   0010F4  C027  F01D         	movff	motor_action_return@r+1,reverse_onesquare@mR+1
  1912   0010F8  EC8E  F00D         	call	_reverse_onesquare	;wreg free
  1913   0010FC                     
  1914                           ;../dc_motor.c: 354:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1915   0010FC  0E29               	movlw	41
  1916   0010FE  6E29               	movwf	(??_motor_action_return+1)^0,c
  1917   001100  0E96               	movlw	150
  1918   001102  6E28               	movwf	??_motor_action_return^0,c
  1919   001104  0E7F               	movlw	127
  1920   001106                     u1817:
  1921   001106  2EE8               	decfsz	wreg,f,c
  1922   001108  D7FE               	bra	u1817
  1923   00110A  2E28               	decfsz	??_motor_action_return^0,f,c
  1924   00110C  D7FC               	bra	u1817
  1925   00110E  2E29               	decfsz	(??_motor_action_return+1)^0,f,c
  1926   001110  D7FA               	bra	u1817
  1927   001112  F000               	nop	
  1928   001114  EF1A  F007         	goto	l3025
  1929   001118                     l3075:
  1930   001118  C022  F028         	movff	motor_action_return@color,??_motor_action_return
  1931   00111C  C023  F029         	movff	motor_action_return@color+1,??_motor_action_return+1
  1932                           
  1933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1934                           ; Switch size 1, requested type "simple"
  1935                           ; Number of cases is 1, Range of values is 0 to 0
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte            4     3 (average)
  1939                           ;	Chosen strategy is simple_byte
  1940   001120  5029               	movf	(??_motor_action_return+1)^0,w,c
  1941   001122  0A00               	xorlw	0	; case 0
  1942   001124  B4D8               	btfsc	status,2,c
  1943   001126  EF97  F008         	goto	l3401
  1944   00112A  EFBA  F008         	goto	l366
  1945   00112E                     l3401:
  1946                           
  1947                           ; Switch size 1, requested type "simple"
  1948                           ; Number of cases is 8, Range of values is 0 to 7
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte           25    13 (average)
  1952                           ;	Chosen strategy is simple_byte
  1953   00112E  5028               	movf	??_motor_action_return^0,w,c
  1954   001130  0A00               	xorlw	0	; case 0
  1955   001132  B4D8               	btfsc	status,2,c
  1956   001134  EF6A  F008         	goto	l3067
  1957   001138  0A01               	xorlw	1	; case 1
  1958   00113A  B4D8               	btfsc	status,2,c
  1959   00113C  EFF0  F006         	goto	l3019
  1960   001140  0A03               	xorlw	3	; case 2
  1961   001142  B4D8               	btfsc	status,2,c
  1962   001144  EF26  F007         	goto	l3027
  1963   001148  0A01               	xorlw	1	; case 3
  1964   00114A  B4D8               	btfsc	status,2,c
  1965   00114C  EF7C  F007         	goto	l3037
  1966   001150  0A07               	xorlw	7	; case 4
  1967   001152  B4D8               	btfsc	status,2,c
  1968   001154  EFA8  F007         	goto	l3045
  1969   001158  0A01               	xorlw	1	; case 5
  1970   00115A  B4D8               	btfsc	status,2,c
  1971   00115C  EFD2  F007         	goto	l3047
  1972   001160  0A03               	xorlw	3	; case 6
  1973   001162  B4D8               	btfsc	status,2,c
  1974   001164  EFFC  F007         	goto	l3049
  1975   001168  0A01               	xorlw	1	; case 7
  1976   00116A  B4D8               	btfsc	status,2,c
  1977   00116C  EF1E  F008         	goto	l3057
  1978   001170  EFBA  F008         	goto	l366
  1979   001174                     l366:
  1980   001174  0012               	return		;funcret
  1981   001176                     __end_of_motor_action_return:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _spin_180 *****************
  1985 ;; Defined at:
  1986 ;;		line 167 in file "../dc_motor.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  1989 ;;		 -> main@motorL(9), 
  1990 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  1991 ;;		 -> main@motorR(9), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  i               2   31[COMRAM] int 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2006 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;Total ram usage:        8 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 3
  2010 ;; This function calls:
  2011 ;;		_setMotorPWM
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;;		_motor_action_return
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text2
  2019   0019D8                     __ptext2:
  2020                           	callstack 0
  2021   0019D8                     _spin_180:
  2022                           	callstack 27
  2023   0019D8                     
  2024                           ;../dc_motor.c: 167: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 168: {;../dc_motor.c: 169:     mL->direction = 1;
  2025   0019D8  EE20 F001          	lfsr	2,1
  2026   0019DC  501A               	movf	spin_180@mL^0,w,c
  2027   0019DE  26D9               	addwf	fsr2l,f,c
  2028   0019E0  501B               	movf	(spin_180@mL+1)^0,w,c
  2029   0019E2  22DA               	addwfc	fsr2h,f,c
  2030   0019E4  0E01               	movlw	1
  2031   0019E6  6EDF               	movwf	indf2,c
  2032                           
  2033                           ;../dc_motor.c: 170:     mR->direction = 0;
  2034   0019E8  EE20 F001          	lfsr	2,1
  2035   0019EC  501C               	movf	spin_180@mR^0,w,c
  2036   0019EE  26D9               	addwf	fsr2l,f,c
  2037   0019F0  501D               	movf	(spin_180@mR+1)^0,w,c
  2038   0019F2  22DA               	addwfc	fsr2h,f,c
  2039   0019F4  0E00               	movlw	0
  2040   0019F6  6EDF               	movwf	indf2,c
  2041   0019F8                     
  2042                           ;../dc_motor.c: 171:     for (int i = 0;i<50;i = i + 2)
  2043   0019F8  0E00               	movlw	0
  2044   0019FA  6E21               	movwf	(spin_180@i+1)^0,c
  2045   0019FC  0E00               	movlw	0
  2046   0019FE  6E20               	movwf	spin_180@i^0,c
  2047   001A00                     l2471:
  2048                           
  2049                           ;../dc_motor.c: 172:     {;../dc_motor.c: 173:         mL->power = i;
  2050   001A00  C01A  FFD9         	movff	spin_180@mL,fsr2l
  2051   001A04  C01B  FFDA         	movff	spin_180@mL+1,fsr2h
  2052   001A08  C020  FFDF         	movff	spin_180@i,indf2
  2053   001A0C                     
  2054                           ;../dc_motor.c: 174:         mR->power = 50 + i;
  2055   001A0C  5020               	movf	spin_180@i^0,w,c
  2056   001A0E  0F32               	addlw	50
  2057   001A10  C01C  FFD9         	movff	spin_180@mR,fsr2l
  2058   001A14  C01D  FFDA         	movff	spin_180@mR+1,fsr2h
  2059   001A18  6EDF               	movwf	indf2,c
  2060   001A1A                     
  2061                           ;../dc_motor.c: 175:         setMotorPWM(mL);
  2062   001A1A  C01A  F00F         	movff	spin_180@mL,setMotorPWM@m
  2063   001A1E  C01B  F010         	movff	spin_180@mL+1,setMotorPWM@m+1
  2064   001A22  ECBB  F008         	call	_setMotorPWM	;wreg free
  2065   001A26                     
  2066                           ;../dc_motor.c: 176:         setMotorPWM(mR);
  2067   001A26  C01C  F00F         	movff	spin_180@mR,setMotorPWM@m
  2068   001A2A  C01D  F010         	movff	spin_180@mR+1,setMotorPWM@m+1
  2069   001A2E  ECBB  F008         	call	_setMotorPWM	;wreg free
  2070   001A32                     
  2071                           ;../dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  2072   001A32  0E35               	movlw	53
  2073   001A34                     u1827:
  2074   001A34  2EE8               	decfsz	wreg,f,c
  2075   001A36  D7FE               	bra	u1827
  2076   001A38  F000               	nop	
  2077   001A3A                     
  2078                           ;../dc_motor.c: 178:     }
  2079   001A3A  0E02               	movlw	2
  2080   001A3C  2420               	addwf	spin_180@i^0,w,c
  2081   001A3E  6E20               	movwf	spin_180@i^0,c
  2082   001A40  0E00               	movlw	0
  2083   001A42  2021               	addwfc	(spin_180@i+1)^0,w,c
  2084   001A44  6E21               	movwf	(spin_180@i+1)^0,c
  2085   001A46  BE21               	btfsc	(spin_180@i+1)^0,7,c
  2086   001A48  EF2F  F00D         	goto	u1021
  2087   001A4C  5021               	movf	(spin_180@i+1)^0,w,c
  2088   001A4E  E109               	bnz	u1020
  2089   001A50  0E32               	movlw	50
  2090   001A52  5C20               	subwf	spin_180@i^0,w,c
  2091   001A54  A0D8               	btfss	status,0,c
  2092   001A56  EF2F  F00D         	goto	u1021
  2093   001A5A  EF31  F00D         	goto	u1020
  2094   001A5E                     u1021:
  2095   001A5E  EF00  F00D         	goto	l2471
  2096   001A62                     u1020:
  2097   001A62                     
  2098                           ;../dc_motor.c: 179:     _delay((unsigned long)((290)*(64000000/4000.0)));
  2099   001A62  0E18               	movlw	24
  2100   001A64  6E1F               	movwf	(??_spin_180+1)^0,c
  2101   001A66  0E8A               	movlw	138
  2102   001A68  6E1E               	movwf	??_spin_180^0,c
  2103   001A6A  0EE8               	movlw	232
  2104   001A6C                     u1837:
  2105   001A6C  2EE8               	decfsz	wreg,f,c
  2106   001A6E  D7FE               	bra	u1837
  2107   001A70  2E1E               	decfsz	??_spin_180^0,f,c
  2108   001A72  D7FC               	bra	u1837
  2109   001A74  2E1F               	decfsz	(??_spin_180+1)^0,f,c
  2110   001A76  D7FA               	bra	u1837
  2111   001A78  0012               	return		;funcret
  2112   001A7A                     __end_of_spin_180:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _motor_action *****************
  2116 ;; Defined at:
  2117 ;;		line 213 in file "../dc_motor.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  color           2   33[COMRAM] unsigned int 
  2120 ;;  l               2   35[COMRAM] PTR struct DC_motor
  2121 ;;		 -> main@motorL(9), 
  2122 ;;  r               2   37[COMRAM] PTR struct DC_motor
  2123 ;;		 -> main@motorR(9), 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2135 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;Total ram usage:        8 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 4
  2142 ;; This function calls:
  2143 ;;		_forward
  2144 ;;		_left_135
  2145 ;;		_left_90
  2146 ;;		_reverse_fromcard
  2147 ;;		_reverse_onesquare
  2148 ;;		_right_135
  2149 ;;		_right_90
  2150 ;;		_stop
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text3
  2157   00053C                     __ptext3:
  2158                           	callstack 0
  2159   00053C                     _motor_action:
  2160                           	callstack 26
  2161   00053C                     
  2162                           ;../dc_motor.c: 213: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 214: {;../dc_motor.c: 215:     switch (color){
  2163   00053C  EFA6  F004         	goto	l3163
  2164   000540                     l3083:
  2165                           
  2166                           ;../dc_motor.c: 217:             reverse_fromcard(l,r);
  2167   000540  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2168   000544  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2169   000548  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2170   00054C  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2171   000550  EC81  F00E         	call	_reverse_fromcard	;wreg free
  2172                           
  2173                           ;../dc_motor.c: 218:             stop(l,r);
  2174   000554  C024  F01A         	movff	motor_action@l,stop@mL
  2175   000558  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2176   00055C  C026  F01C         	movff	motor_action@r,stop@mR
  2177   000560  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2178   000564  ECD1  F00E         	call	_stop	;wreg free
  2179   000568                     l3085:
  2180                           
  2181                           ;../dc_motor.c: 219:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2182   000568  0E29               	movlw	41
  2183   00056A  6E29               	movwf	(??_motor_action+1)^0,c
  2184   00056C  0E96               	movlw	150
  2185   00056E  6E28               	movwf	??_motor_action^0,c
  2186   000570  0E7F               	movlw	127
  2187   000572                     u1847:
  2188   000572  2EE8               	decfsz	wreg,f,c
  2189   000574  D7FE               	bra	u1847
  2190   000576  2E28               	decfsz	??_motor_action^0,f,c
  2191   000578  D7FC               	bra	u1847
  2192   00057A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2193   00057C  D7FA               	bra	u1847
  2194   00057E  F000               	nop	
  2195   000580                     
  2196                           ;../dc_motor.c: 220:             right_90(l,r);
  2197   000580  C024  F01A         	movff	motor_action@l,right_90@mL
  2198   000584  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  2199   000588  C026  F01C         	movff	motor_action@r,right_90@mR
  2200   00058C  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  2201   000590  EC48  F00C         	call	_right_90	;wreg free
  2202   000594                     
  2203                           ;../dc_motor.c: 221:             stop(l,r);
  2204   000594  C024  F01A         	movff	motor_action@l,stop@mL
  2205   000598  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2206   00059C  C026  F01C         	movff	motor_action@r,stop@mR
  2207   0005A0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2208   0005A4  ECD1  F00E         	call	_stop	;wreg free
  2209   0005A8                     
  2210                           ;../dc_motor.c: 222:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2211   0005A8  0E29               	movlw	41
  2212   0005AA  6E29               	movwf	(??_motor_action+1)^0,c
  2213   0005AC  0E96               	movlw	150
  2214   0005AE  6E28               	movwf	??_motor_action^0,c
  2215   0005B0  0E7F               	movlw	127
  2216   0005B2                     u1857:
  2217   0005B2  2EE8               	decfsz	wreg,f,c
  2218   0005B4  D7FE               	bra	u1857
  2219   0005B6  2E28               	decfsz	??_motor_action^0,f,c
  2220   0005B8  D7FC               	bra	u1857
  2221   0005BA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2222   0005BC  D7FA               	bra	u1857
  2223   0005BE  F000               	nop	
  2224                           
  2225                           ;../dc_motor.c: 223:             right_90(l,r);
  2226   0005C0  C024  F01A         	movff	motor_action@l,right_90@mL
  2227   0005C4  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  2228   0005C8  C026  F01C         	movff	motor_action@r,right_90@mR
  2229   0005CC  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  2230   0005D0  EC48  F00C         	call	_right_90	;wreg free
  2231                           
  2232                           ;../dc_motor.c: 224:             stop(l,r);
  2233   0005D4  C024  F01A         	movff	motor_action@l,stop@mL
  2234   0005D8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2235   0005DC  C026  F01C         	movff	motor_action@r,stop@mR
  2236   0005E0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2237   0005E4  ECD1  F00E         	call	_stop	;wreg free
  2238                           
  2239                           ;../dc_motor.c: 225:             break;
  2240   0005E8  EFD8  F004         	goto	l352
  2241   0005EC                     l3093:
  2242                           
  2243                           ;../dc_motor.c: 227:             reverse_fromcard(l,r);
  2244   0005EC  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2245   0005F0  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2246   0005F4  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2247   0005F8  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2248   0005FC  EC81  F00E         	call	_reverse_fromcard	;wreg free
  2249                           
  2250                           ;../dc_motor.c: 228:             stop(l,r);
  2251   000600  C024  F01A         	movff	motor_action@l,stop@mL
  2252   000604  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2253   000608  C026  F01C         	movff	motor_action@r,stop@mR
  2254   00060C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2255   000610  ECD1  F00E         	call	_stop	;wreg free
  2256   000614                     l3095:
  2257                           
  2258                           ;../dc_motor.c: 229:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2259   000614  0E29               	movlw	41
  2260   000616  6E29               	movwf	(??_motor_action+1)^0,c
  2261   000618  0E96               	movlw	150
  2262   00061A  6E28               	movwf	??_motor_action^0,c
  2263   00061C  0E7F               	movlw	127
  2264   00061E                     u1867:
  2265   00061E  2EE8               	decfsz	wreg,f,c
  2266   000620  D7FE               	bra	u1867
  2267   000622  2E28               	decfsz	??_motor_action^0,f,c
  2268   000624  D7FC               	bra	u1867
  2269   000626  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2270   000628  D7FA               	bra	u1867
  2271   00062A  F000               	nop	
  2272   00062C                     
  2273                           ;../dc_motor.c: 230:             left_90(l,r);
  2274   00062C  C024  F01A         	movff	motor_action@l,left_90@mL
  2275   000630  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2276   000634  C026  F01C         	movff	motor_action@r,left_90@mR
  2277   000638  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2278   00063C  EC9A  F00C         	call	_left_90	;wreg free
  2279   000640                     l3099:
  2280                           
  2281                           ;../dc_motor.c: 231:             stop(l,r);
  2282   000640  C024  F01A         	movff	motor_action@l,stop@mL
  2283   000644  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2284   000648  C026  F01C         	movff	motor_action@r,stop@mR
  2285   00064C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2286   000650  ECD1  F00E         	call	_stop	;wreg free
  2287                           
  2288                           ;../dc_motor.c: 232:             break;
  2289   000654  EFD8  F004         	goto	l352
  2290   000658                     l3101:
  2291                           
  2292                           ;../dc_motor.c: 234:             reverse_fromcard(l,r);
  2293   000658  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2294   00065C  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2295   000660  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2296   000664  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2297   000668  EC81  F00E         	call	_reverse_fromcard	;wreg free
  2298                           
  2299                           ;../dc_motor.c: 235:             stop(l,r);
  2300   00066C  C024  F01A         	movff	motor_action@l,stop@mL
  2301   000670  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2302   000674  C026  F01C         	movff	motor_action@r,stop@mR
  2303   000678  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2304   00067C  ECD1  F00E         	call	_stop	;wreg free
  2305   000680                     
  2306                           ;../dc_motor.c: 236:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2307   000680  0E29               	movlw	41
  2308   000682  6E29               	movwf	(??_motor_action+1)^0,c
  2309   000684  0E96               	movlw	150
  2310   000686  6E28               	movwf	??_motor_action^0,c
  2311   000688  0E7F               	movlw	127
  2312   00068A                     u1877:
  2313   00068A  2EE8               	decfsz	wreg,f,c
  2314   00068C  D7FE               	bra	u1877
  2315   00068E  2E28               	decfsz	??_motor_action^0,f,c
  2316   000690  D7FC               	bra	u1877
  2317   000692  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2318   000694  D7FA               	bra	u1877
  2319   000696  F000               	nop	
  2320   000698                     
  2321                           ;../dc_motor.c: 237:             left_90(l,r);
  2322   000698  C024  F01A         	movff	motor_action@l,left_90@mL
  2323   00069C  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2324   0006A0  C026  F01C         	movff	motor_action@r,left_90@mR
  2325   0006A4  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2326   0006A8  EC9A  F00C         	call	_left_90	;wreg free
  2327   0006AC                     
  2328                           ;../dc_motor.c: 238:             stop(l,r);
  2329   0006AC  C024  F01A         	movff	motor_action@l,stop@mL
  2330   0006B0  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2331   0006B4  C026  F01C         	movff	motor_action@r,stop@mR
  2332   0006B8  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2333   0006BC  ECD1  F00E         	call	_stop	;wreg free
  2334   0006C0                     
  2335                           ;../dc_motor.c: 239:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2336   0006C0  0E29               	movlw	41
  2337   0006C2  6E29               	movwf	(??_motor_action+1)^0,c
  2338   0006C4  0E96               	movlw	150
  2339   0006C6  6E28               	movwf	??_motor_action^0,c
  2340   0006C8  0E7F               	movlw	127
  2341   0006CA                     u1887:
  2342   0006CA  2EE8               	decfsz	wreg,f,c
  2343   0006CC  D7FE               	bra	u1887
  2344   0006CE  2E28               	decfsz	??_motor_action^0,f,c
  2345   0006D0  D7FC               	bra	u1887
  2346   0006D2  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2347   0006D4  D7FA               	bra	u1887
  2348   0006D6  F000               	nop	
  2349                           
  2350                           ;../dc_motor.c: 240:             left_90(l,r);
  2351   0006D8  C024  F01A         	movff	motor_action@l,left_90@mL
  2352   0006DC  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2353   0006E0  C026  F01C         	movff	motor_action@r,left_90@mR
  2354   0006E4  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2355   0006E8  EC9A  F00C         	call	_left_90	;wreg free
  2356                           
  2357                           ;../dc_motor.c: 241:             stop(l,r);
  2358   0006EC  C024  F01A         	movff	motor_action@l,stop@mL
  2359   0006F0  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2360   0006F4  C026  F01C         	movff	motor_action@r,stop@mR
  2361   0006F8  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2362   0006FC  ECD1  F00E         	call	_stop	;wreg free
  2363                           
  2364                           ;../dc_motor.c: 242:             break;
  2365   000700  EFD8  F004         	goto	l352
  2366   000704                     l3111:
  2367                           
  2368                           ;../dc_motor.c: 244:             reverse_onesquare(l,r);
  2369   000704  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  2370   000708  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  2371   00070C  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  2372   000710  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  2373   000714  EC8E  F00D         	call	_reverse_onesquare	;wreg free
  2374                           
  2375                           ;../dc_motor.c: 245:             stop(l,r);
  2376   000718  C024  F01A         	movff	motor_action@l,stop@mL
  2377   00071C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2378   000720  C026  F01C         	movff	motor_action@r,stop@mR
  2379   000724  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2380   000728  ECD1  F00E         	call	_stop	;wreg free
  2381   00072C  EFB4  F002         	goto	l3085
  2382   000730                     l3121:
  2383                           
  2384                           ;../dc_motor.c: 254:             reverse_onesquare(l,r);
  2385   000730  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  2386   000734  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  2387   000738  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  2388   00073C  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  2389   000740  EC8E  F00D         	call	_reverse_onesquare	;wreg free
  2390                           
  2391                           ;../dc_motor.c: 255:             stop(l,r);
  2392   000744  C024  F01A         	movff	motor_action@l,stop@mL
  2393   000748  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2394   00074C  C026  F01C         	movff	motor_action@r,stop@mR
  2395   000750  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2396   000754  ECD1  F00E         	call	_stop	;wreg free
  2397   000758  EF0A  F003         	goto	l3095
  2398   00075C                     l3129:
  2399                           
  2400                           ;../dc_motor.c: 261:             reverse_fromcard(l,r);
  2401   00075C  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2402   000760  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2403   000764  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2404   000768  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2405   00076C  EC81  F00E         	call	_reverse_fromcard	;wreg free
  2406                           
  2407                           ;../dc_motor.c: 262:             stop(l,r);
  2408   000770  C024  F01A         	movff	motor_action@l,stop@mL
  2409   000774  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2410   000778  C026  F01C         	movff	motor_action@r,stop@mR
  2411   00077C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2412   000780  ECD1  F00E         	call	_stop	;wreg free
  2413   000784                     
  2414                           ;../dc_motor.c: 263:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2415   000784  0E29               	movlw	41
  2416   000786  6E29               	movwf	(??_motor_action+1)^0,c
  2417   000788  0E96               	movlw	150
  2418   00078A  6E28               	movwf	??_motor_action^0,c
  2419   00078C  0E7F               	movlw	127
  2420   00078E                     u1897:
  2421   00078E  2EE8               	decfsz	wreg,f,c
  2422   000790  D7FE               	bra	u1897
  2423   000792  2E28               	decfsz	??_motor_action^0,f,c
  2424   000794  D7FC               	bra	u1897
  2425   000796  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2426   000798  D7FA               	bra	u1897
  2427   00079A  F000               	nop	
  2428   00079C                     
  2429                           ;../dc_motor.c: 264:             right_135(l,r);
  2430   00079C  C024  F01A         	movff	motor_action@l,right_135@mL
  2431   0007A0  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  2432   0007A4  C026  F01C         	movff	motor_action@r,right_135@mR
  2433   0007A8  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  2434   0007AC  EC3D  F00D         	call	_right_135	;wreg free
  2435   0007B0                     
  2436                           ;../dc_motor.c: 265:             stop(l,r);
  2437   0007B0  C024  F01A         	movff	motor_action@l,stop@mL
  2438   0007B4  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2439   0007B8  C026  F01C         	movff	motor_action@r,stop@mR
  2440   0007BC  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2441   0007C0  ECD1  F00E         	call	_stop	;wreg free
  2442   0007C4                     
  2443                           ;../dc_motor.c: 266:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2444   0007C4  0E29               	movlw	41
  2445   0007C6  6E29               	movwf	(??_motor_action+1)^0,c
  2446   0007C8  0E96               	movlw	150
  2447   0007CA  6E28               	movwf	??_motor_action^0,c
  2448   0007CC  0E7F               	movlw	127
  2449   0007CE                     u1907:
  2450   0007CE  2EE8               	decfsz	wreg,f,c
  2451   0007D0  D7FE               	bra	u1907
  2452   0007D2  2E28               	decfsz	??_motor_action^0,f,c
  2453   0007D4  D7FC               	bra	u1907
  2454   0007D6  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2455   0007D8  D7FA               	bra	u1907
  2456   0007DA  F000               	nop	
  2457                           
  2458                           ;../dc_motor.c: 267:             right_135(l,r);
  2459   0007DC  C024  F01A         	movff	motor_action@l,right_135@mL
  2460   0007E0  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  2461   0007E4  C026  F01C         	movff	motor_action@r,right_135@mR
  2462   0007E8  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  2463   0007EC  EC3D  F00D         	call	_right_135	;wreg free
  2464                           
  2465                           ;../dc_motor.c: 268:             stop(l,r);
  2466   0007F0  C024  F01A         	movff	motor_action@l,stop@mL
  2467   0007F4  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2468   0007F8  C026  F01C         	movff	motor_action@r,stop@mR
  2469   0007FC  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2470   000800  ECD1  F00E         	call	_stop	;wreg free
  2471                           
  2472                           ;../dc_motor.c: 269:             break;
  2473   000804  EFD8  F004         	goto	l352
  2474   000808                     l3139:
  2475                           
  2476                           ;../dc_motor.c: 271:             reverse_fromcard(l,r);
  2477   000808  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2478   00080C  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2479   000810  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2480   000814  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2481   000818  EC81  F00E         	call	_reverse_fromcard	;wreg free
  2482                           
  2483                           ;../dc_motor.c: 272:             stop(l,r);
  2484   00081C  C024  F01A         	movff	motor_action@l,stop@mL
  2485   000820  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2486   000824  C026  F01C         	movff	motor_action@r,stop@mR
  2487   000828  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2488   00082C  ECD1  F00E         	call	_stop	;wreg free
  2489   000830                     
  2490                           ;../dc_motor.c: 273:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2491   000830  0E29               	movlw	41
  2492   000832  6E29               	movwf	(??_motor_action+1)^0,c
  2493   000834  0E96               	movlw	150
  2494   000836  6E28               	movwf	??_motor_action^0,c
  2495   000838  0E7F               	movlw	127
  2496   00083A                     u1917:
  2497   00083A  2EE8               	decfsz	wreg,f,c
  2498   00083C  D7FE               	bra	u1917
  2499   00083E  2E28               	decfsz	??_motor_action^0,f,c
  2500   000840  D7FC               	bra	u1917
  2501   000842  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2502   000844  D7FA               	bra	u1917
  2503   000846  F000               	nop	
  2504   000848                     
  2505                           ;../dc_motor.c: 274:             left_135(l,r);
  2506   000848  C024  F01A         	movff	motor_action@l,left_135@mL
  2507   00084C  C025  F01B         	movff	motor_action@l+1,left_135@mL+1
  2508   000850  C026  F01C         	movff	motor_action@r,left_135@mR
  2509   000854  C027  F01D         	movff	motor_action@r+1,left_135@mR+1
  2510   000858  ECDF  F00D         	call	_left_135	;wreg free
  2511   00085C  EF20  F003         	goto	l3099
  2512   000860                     l3147:
  2513                           
  2514                           ;../dc_motor.c: 278:             reverse_fromcard(l,r);
  2515   000860  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2516   000864  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2517   000868  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2518   00086C  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2519   000870  EC81  F00E         	call	_reverse_fromcard	;wreg free
  2520                           
  2521                           ;../dc_motor.c: 279:             stop(l,r);
  2522   000874  C024  F01A         	movff	motor_action@l,stop@mL
  2523   000878  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2524   00087C  C026  F01C         	movff	motor_action@r,stop@mR
  2525   000880  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2526   000884  ECD1  F00E         	call	_stop	;wreg free
  2527   000888                     
  2528                           ;../dc_motor.c: 280:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2529   000888  0E29               	movlw	41
  2530   00088A  6E29               	movwf	(??_motor_action+1)^0,c
  2531   00088C  0E96               	movlw	150
  2532   00088E  6E28               	movwf	??_motor_action^0,c
  2533   000890  0E7F               	movlw	127
  2534   000892                     u1927:
  2535   000892  2EE8               	decfsz	wreg,f,c
  2536   000894  D7FE               	bra	u1927
  2537   000896  2E28               	decfsz	??_motor_action^0,f,c
  2538   000898  D7FC               	bra	u1927
  2539   00089A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2540   00089C  D7FA               	bra	u1927
  2541   00089E  F000               	nop	
  2542   0008A0                     
  2543                           ;../dc_motor.c: 281:             left_90(l,r);
  2544   0008A0  C024  F01A         	movff	motor_action@l,left_90@mL
  2545   0008A4  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2546   0008A8  C026  F01C         	movff	motor_action@r,left_90@mR
  2547   0008AC  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2548   0008B0  EC9A  F00C         	call	_left_90	;wreg free
  2549   0008B4                     
  2550                           ;../dc_motor.c: 282:             stop(l,r);
  2551   0008B4  C024  F01A         	movff	motor_action@l,stop@mL
  2552   0008B8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2553   0008BC  C026  F01C         	movff	motor_action@r,stop@mR
  2554   0008C0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2555   0008C4  ECD1  F00E         	call	_stop	;wreg free
  2556   0008C8                     
  2557                           ;../dc_motor.c: 283:             _delay((unsigned long)((800)*(64000000/4000.0)));
  2558   0008C8  0E41               	movlw	65
  2559   0008CA  6E29               	movwf	(??_motor_action+1)^0,c
  2560   0008CC  0EF0               	movlw	240
  2561   0008CE  6E28               	movwf	??_motor_action^0,c
  2562   0008D0  0E33               	movlw	51
  2563   0008D2                     u1937:
  2564   0008D2  2EE8               	decfsz	wreg,f,c
  2565   0008D4  D7FE               	bra	u1937
  2566   0008D6  2E28               	decfsz	??_motor_action^0,f,c
  2567   0008D8  D7FC               	bra	u1937
  2568   0008DA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2569   0008DC  D7FA               	bra	u1937
  2570   0008DE  F000               	nop	
  2571                           
  2572                           ;../dc_motor.c: 284:             left_90(l,r);
  2573   0008E0  C024  F01A         	movff	motor_action@l,left_90@mL
  2574   0008E4  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2575   0008E8  C026  F01C         	movff	motor_action@r,left_90@mR
  2576   0008EC  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2577   0008F0  EC9A  F00C         	call	_left_90	;wreg free
  2578                           
  2579                           ;../dc_motor.c: 285:             stop(l,r);
  2580   0008F4  C024  F01A         	movff	motor_action@l,stop@mL
  2581   0008F8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2582   0008FC  C026  F01C         	movff	motor_action@r,stop@mR
  2583   000900  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2584   000904  ECD1  F00E         	call	_stop	;wreg free
  2585   000908                     l350:
  2586                           
  2587                           ;../dc_motor.c: 287:             stop(l,r);
  2588   000908  C024  F01A         	movff	motor_action@l,stop@mL
  2589   00090C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2590   000910  C026  F01C         	movff	motor_action@r,stop@mR
  2591   000914  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2592   000918  ECD1  F00E         	call	_stop	;wreg free
  2593                           
  2594                           ;../dc_motor.c: 288:             forward(l,r);
  2595   00091C  C024  F01A         	movff	motor_action@l,forward@mL
  2596   000920  C025  F01B         	movff	motor_action@l+1,forward@mL+1
  2597   000924  C026  F01C         	movff	motor_action@r,forward@mR
  2598   000928  C027  F01D         	movff	motor_action@r+1,forward@mR+1
  2599   00092C  EC30  F00E         	call	_forward	;wreg free
  2600   000930                     
  2601                           ;../dc_motor.c: 289:             _delay((unsigned long)((400)*(64000000/4000.0)));
  2602   000930  0E21               	movlw	33
  2603   000932  6E29               	movwf	(??_motor_action+1)^0,c
  2604   000934  0E78               	movlw	120
  2605   000936  6E28               	movwf	??_motor_action^0,c
  2606   000938  0E98               	movlw	152
  2607   00093A                     u1947:
  2608   00093A  2EE8               	decfsz	wreg,f,c
  2609   00093C  D7FE               	bra	u1947
  2610   00093E  2E28               	decfsz	??_motor_action^0,f,c
  2611   000940  D7FC               	bra	u1947
  2612   000942  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2613   000944  D7FA               	bra	u1947
  2614   000946  D000               	nop2	
  2615   000948  EF20  F003         	goto	l3099
  2616   00094C                     l3163:
  2617   00094C  C022  F028         	movff	motor_action@color,??_motor_action
  2618   000950  C023  F029         	movff	motor_action@color+1,??_motor_action+1
  2619                           
  2620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2621                           ; Switch size 1, requested type "simple"
  2622                           ; Number of cases is 1, Range of values is 0 to 0
  2623                           ; switch strategies available:
  2624                           ; Name         Instructions Cycles
  2625                           ; simple_byte            4     3 (average)
  2626                           ;	Chosen strategy is simple_byte
  2627   000954  5029               	movf	(??_motor_action+1)^0,w,c
  2628   000956  0A00               	xorlw	0	; case 0
  2629   000958  B4D8               	btfsc	status,2,c
  2630   00095A  EFB1  F004         	goto	l3403
  2631   00095E  EFD8  F004         	goto	l352
  2632   000962                     l3403:
  2633                           
  2634                           ; Switch size 1, requested type "simple"
  2635                           ; Number of cases is 9, Range of values is 0 to 8
  2636                           ; switch strategies available:
  2637                           ; Name         Instructions Cycles
  2638                           ; simple_byte           28    15 (average)
  2639                           ;	Chosen strategy is simple_byte
  2640   000962  5028               	movf	??_motor_action^0,w,c
  2641   000964  0A00               	xorlw	0	; case 0
  2642   000966  B4D8               	btfsc	status,2,c
  2643   000968  EF84  F004         	goto	l350
  2644   00096C  0A01               	xorlw	1	; case 1
  2645   00096E  B4D8               	btfsc	status,2,c
  2646   000970  EFA0  F002         	goto	l3083
  2647   000974  0A03               	xorlw	3	; case 2
  2648   000976  B4D8               	btfsc	status,2,c
  2649   000978  EFF6  F002         	goto	l3093
  2650   00097C  0A01               	xorlw	1	; case 3
  2651   00097E  B4D8               	btfsc	status,2,c
  2652   000980  EF2C  F003         	goto	l3101
  2653   000984  0A07               	xorlw	7	; case 4
  2654   000986  B4D8               	btfsc	status,2,c
  2655   000988  EF82  F003         	goto	l3111
  2656   00098C  0A01               	xorlw	1	; case 5
  2657   00098E  B4D8               	btfsc	status,2,c
  2658   000990  EF98  F003         	goto	l3121
  2659   000994  0A03               	xorlw	3	; case 6
  2660   000996  B4D8               	btfsc	status,2,c
  2661   000998  EFAE  F003         	goto	l3129
  2662   00099C  0A01               	xorlw	1	; case 7
  2663   00099E  B4D8               	btfsc	status,2,c
  2664   0009A0  EF04  F004         	goto	l3139
  2665   0009A4  0A0F               	xorlw	15	; case 8
  2666   0009A6  B4D8               	btfsc	status,2,c
  2667   0009A8  EF30  F004         	goto	l3147
  2668   0009AC  EFD8  F004         	goto	l352
  2669   0009B0                     l352:
  2670   0009B0  0012               	return		;funcret
  2671   0009B2                     __end_of_motor_action:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _stop *****************
  2675 ;; Defined at:
  2676 ;;		line 61 in file "../dc_motor.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2679 ;;		 -> main@motorL(9), 
  2680 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2681 ;;		 -> main@motorR(9), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  i               2   30[COMRAM] int 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;Total ram usage:        7 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 3
  2700 ;; This function calls:
  2701 ;;		_setMotorPWM
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;;		_motor_action
  2705 ;;		_motor_action_return
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text4
  2710   001DA2                     __ptext4:
  2711                           	callstack 0
  2712   001DA2                     _stop:
  2713                           	callstack 27
  2714   001DA2                     
  2715                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  2716   001DA2  EE20 F001          	lfsr	2,1
  2717   001DA6  501A               	movf	stop@mL^0,w,c
  2718   001DA8  26D9               	addwf	fsr2l,f,c
  2719   001DAA  501B               	movf	(stop@mL+1)^0,w,c
  2720   001DAC  22DA               	addwfc	fsr2h,f,c
  2721   001DAE  0E00               	movlw	0
  2722   001DB0  6EDF               	movwf	indf2,c
  2723                           
  2724                           ;../dc_motor.c: 64:     mR->direction = 0;
  2725   001DB2  EE20 F001          	lfsr	2,1
  2726   001DB6  501C               	movf	stop@mR^0,w,c
  2727   001DB8  26D9               	addwf	fsr2l,f,c
  2728   001DBA  501D               	movf	(stop@mR+1)^0,w,c
  2729   001DBC  22DA               	addwfc	fsr2h,f,c
  2730   001DBE  0E00               	movlw	0
  2731   001DC0  6EDF               	movwf	indf2,c
  2732   001DC2                     
  2733                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  2734   001DC2  0E00               	movlw	0
  2735   001DC4  6E20               	movwf	(stop@i+1)^0,c
  2736   001DC6  0E05               	movlw	5
  2737   001DC8  6E1F               	movwf	stop@i^0,c
  2738   001DCA                     l2451:
  2739                           
  2740                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  2741   001DCA  C01A  FFD9         	movff	stop@mL,fsr2l
  2742   001DCE  C01B  FFDA         	movff	stop@mL+1,fsr2h
  2743   001DD2  C01F  FFDF         	movff	stop@i,indf2
  2744                           
  2745                           ;../dc_motor.c: 68:         mR->power = i;
  2746   001DD6  C01C  FFD9         	movff	stop@mR,fsr2l
  2747   001DDA  C01D  FFDA         	movff	stop@mR+1,fsr2h
  2748   001DDE  C01F  FFDF         	movff	stop@i,indf2
  2749   001DE2                     
  2750                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  2751   001DE2  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  2752   001DE6  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  2753   001DEA  ECBB  F008         	call	_setMotorPWM	;wreg free
  2754   001DEE                     
  2755                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  2756   001DEE  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  2757   001DF2  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  2758   001DF6  ECBB  F008         	call	_setMotorPWM	;wreg free
  2759   001DFA                     
  2760                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2761   001DFA  0ED0               	movlw	208
  2762   001DFC  6E1E               	movwf	??_stop^0,c
  2763   001DFE  0ECA               	movlw	202
  2764   001E00                     u1957:
  2765   001E00  2EE8               	decfsz	wreg,f,c
  2766   001E02  D7FE               	bra	u1957
  2767   001E04  2E1E               	decfsz	??_stop^0,f,c
  2768   001E06  D7FC               	bra	u1957
  2769   001E08                     
  2770                           ;../dc_motor.c: 72:     }
  2771   001E08  0EFF               	movlw	255
  2772   001E0A  241F               	addwf	stop@i^0,w,c
  2773   001E0C  6E1F               	movwf	stop@i^0,c
  2774   001E0E  0EFF               	movlw	255
  2775   001E10  2020               	addwfc	(stop@i+1)^0,w,c
  2776   001E12  6E20               	movwf	(stop@i+1)^0,c
  2777   001E14  BE20               	btfsc	(stop@i+1)^0,7,c
  2778   001E16  EF17  F00F         	goto	u1010
  2779   001E1A  5020               	movf	(stop@i+1)^0,w,c
  2780   001E1C  E106               	bnz	u1011
  2781   001E1E  041F               	decf	stop@i^0,w,c
  2782   001E20  B0D8               	btfsc	status,0,c
  2783   001E22  EF15  F00F         	goto	u1011
  2784   001E26  EF17  F00F         	goto	u1010
  2785   001E2A                     u1011:
  2786   001E2A  EFE5  F00E         	goto	l2451
  2787   001E2E                     u1010:
  2788   001E2E  0012               	return		;funcret
  2789   001E30                     __end_of_stop:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _right_90 *****************
  2793 ;; Defined at:
  2794 ;;		line 137 in file "../dc_motor.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2797 ;;		 -> main@motorL(9), 
  2798 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2799 ;;		 -> main@motorR(9), 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  i               2   31[COMRAM] int 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;Total ram usage:        8 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 3
  2818 ;; This function calls:
  2819 ;;		_setMotorPWM
  2820 ;; This function is called by:
  2821 ;;		_motor_action
  2822 ;;		_motor_action_return
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text5
  2827   001890                     __ptext5:
  2828                           	callstack 0
  2829   001890                     _right_90:
  2830                           	callstack 26
  2831   001890                     
  2832                           ;../dc_motor.c: 137: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 138: {;../dc_motor.c: 139:     mL->direction = 1;
  2833   001890  EE20 F001          	lfsr	2,1
  2834   001894  501A               	movf	right_90@mL^0,w,c
  2835   001896  26D9               	addwf	fsr2l,f,c
  2836   001898  501B               	movf	(right_90@mL+1)^0,w,c
  2837   00189A  22DA               	addwfc	fsr2h,f,c
  2838   00189C  0E01               	movlw	1
  2839   00189E  6EDF               	movwf	indf2,c
  2840                           
  2841                           ;../dc_motor.c: 140:     mR->direction = 0;
  2842   0018A0  EE20 F001          	lfsr	2,1
  2843   0018A4  501C               	movf	right_90@mR^0,w,c
  2844   0018A6  26D9               	addwf	fsr2l,f,c
  2845   0018A8  501D               	movf	(right_90@mR+1)^0,w,c
  2846   0018AA  22DA               	addwfc	fsr2h,f,c
  2847   0018AC  0E00               	movlw	0
  2848   0018AE  6EDF               	movwf	indf2,c
  2849   0018B0                     
  2850                           ;../dc_motor.c: 141:     for (int i = 0;i<251;i = i + 2)
  2851   0018B0  0E00               	movlw	0
  2852   0018B2  6E21               	movwf	(right_90@i+1)^0,c
  2853   0018B4  0E00               	movlw	0
  2854   0018B6  6E20               	movwf	right_90@i^0,c
  2855   0018B8                     l2539:
  2856                           
  2857                           ;../dc_motor.c: 142:     {;../dc_motor.c: 143:         mL->power = i;
  2858   0018B8  C01A  FFD9         	movff	right_90@mL,fsr2l
  2859   0018BC  C01B  FFDA         	movff	right_90@mL+1,fsr2h
  2860   0018C0  C020  FFDF         	movff	right_90@i,indf2
  2861   0018C4                     
  2862                           ;../dc_motor.c: 144:         mR->power = 50 + i;
  2863   0018C4  5020               	movf	right_90@i^0,w,c
  2864   0018C6  0F32               	addlw	50
  2865   0018C8  C01C  FFD9         	movff	right_90@mR,fsr2l
  2866   0018CC  C01D  FFDA         	movff	right_90@mR+1,fsr2h
  2867   0018D0  6EDF               	movwf	indf2,c
  2868   0018D2                     
  2869                           ;../dc_motor.c: 145:         setMotorPWM(mL);
  2870   0018D2  C01A  F00F         	movff	right_90@mL,setMotorPWM@m
  2871   0018D6  C01B  F010         	movff	right_90@mL+1,setMotorPWM@m+1
  2872   0018DA  ECBB  F008         	call	_setMotorPWM	;wreg free
  2873   0018DE                     
  2874                           ;../dc_motor.c: 146:         setMotorPWM(mR);
  2875   0018DE  C01C  F00F         	movff	right_90@mR,setMotorPWM@m
  2876   0018E2  C01D  F010         	movff	right_90@mR+1,setMotorPWM@m+1
  2877   0018E6  ECBB  F008         	call	_setMotorPWM	;wreg free
  2878   0018EA                     
  2879                           ;../dc_motor.c: 147:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  2880   0018EA  0E35               	movlw	53
  2881   0018EC                     u1967:
  2882   0018EC  2EE8               	decfsz	wreg,f,c
  2883   0018EE  D7FE               	bra	u1967
  2884   0018F0  F000               	nop	
  2885   0018F2                     
  2886                           ;../dc_motor.c: 148:     }
  2887   0018F2  0E02               	movlw	2
  2888   0018F4  2420               	addwf	right_90@i^0,w,c
  2889   0018F6  6E20               	movwf	right_90@i^0,c
  2890   0018F8  0E00               	movlw	0
  2891   0018FA  2021               	addwfc	(right_90@i+1)^0,w,c
  2892   0018FC  6E21               	movwf	(right_90@i+1)^0,c
  2893   0018FE  BE21               	btfsc	(right_90@i+1)^0,7,c
  2894   001900  EF8B  F00C         	goto	u1051
  2895   001904  5021               	movf	(right_90@i+1)^0,w,c
  2896   001906  E109               	bnz	u1050
  2897   001908  0EFB               	movlw	251
  2898   00190A  5C20               	subwf	right_90@i^0,w,c
  2899   00190C  A0D8               	btfss	status,0,c
  2900   00190E  EF8B  F00C         	goto	u1051
  2901   001912  EF8D  F00C         	goto	u1050
  2902   001916                     u1051:
  2903   001916  EF5C  F00C         	goto	l2539
  2904   00191A                     u1050:
  2905   00191A                     
  2906                           ;../dc_motor.c: 149:     _delay((unsigned long)((165)*(64000000/4000.0)));
  2907   00191A  0E0E               	movlw	14
  2908   00191C  6E1F               	movwf	(??_right_90+1)^0,c
  2909   00191E  0E65               	movlw	101
  2910   001920  6E1E               	movwf	??_right_90^0,c
  2911   001922  0E87               	movlw	135
  2912   001924                     u1977:
  2913   001924  2EE8               	decfsz	wreg,f,c
  2914   001926  D7FE               	bra	u1977
  2915   001928  2E1E               	decfsz	??_right_90^0,f,c
  2916   00192A  D7FC               	bra	u1977
  2917   00192C  2E1F               	decfsz	(??_right_90+1)^0,f,c
  2918   00192E  D7FA               	bra	u1977
  2919   001930  F000               	nop	
  2920   001932  0012               	return		;funcret
  2921   001934                     __end_of_right_90:
  2922                           	callstack 0
  2923                           
  2924 ;; *************** function _right_135 *****************
  2925 ;; Defined at:
  2926 ;;		line 182 in file "../dc_motor.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2929 ;;		 -> main@motorL(9), 
  2930 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2931 ;;		 -> main@motorR(9), 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  i               2   31[COMRAM] int 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2946 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2947 ;;Total ram usage:        8 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 3
  2950 ;; This function calls:
  2951 ;;		_setMotorPWM
  2952 ;; This function is called by:
  2953 ;;		_motor_action
  2954 ;;		_motor_action_return
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text6
  2959   001A7A                     __ptext6:
  2960                           	callstack 0
  2961   001A7A                     _right_135:
  2962                           	callstack 26
  2963   001A7A                     
  2964                           ;../dc_motor.c: 182: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 183: {;../dc_motor.c: 184:     mL->direction = 1;
  2965   001A7A  EE20 F001          	lfsr	2,1
  2966   001A7E  501A               	movf	right_135@mL^0,w,c
  2967   001A80  26D9               	addwf	fsr2l,f,c
  2968   001A82  501B               	movf	(right_135@mL+1)^0,w,c
  2969   001A84  22DA               	addwfc	fsr2h,f,c
  2970   001A86  0E01               	movlw	1
  2971   001A88  6EDF               	movwf	indf2,c
  2972                           
  2973                           ;../dc_motor.c: 185:     mR->direction = 0;
  2974   001A8A  EE20 F001          	lfsr	2,1
  2975   001A8E  501C               	movf	right_135@mR^0,w,c
  2976   001A90  26D9               	addwf	fsr2l,f,c
  2977   001A92  501D               	movf	(right_135@mR+1)^0,w,c
  2978   001A94  22DA               	addwfc	fsr2h,f,c
  2979   001A96  0E00               	movlw	0
  2980   001A98  6EDF               	movwf	indf2,c
  2981   001A9A                     
  2982                           ;../dc_motor.c: 186:     for (int i = 0;i<300;i = i + 2)
  2983   001A9A  0E00               	movlw	0
  2984   001A9C  6E21               	movwf	(right_135@i+1)^0,c
  2985   001A9E  0E00               	movlw	0
  2986   001AA0  6E20               	movwf	right_135@i^0,c
  2987   001AA2                     l2587:
  2988                           
  2989                           ;../dc_motor.c: 187:     {;../dc_motor.c: 188:         mL->power = i;
  2990   001AA2  C01A  FFD9         	movff	right_135@mL,fsr2l
  2991   001AA6  C01B  FFDA         	movff	right_135@mL+1,fsr2h
  2992   001AAA  C020  FFDF         	movff	right_135@i,indf2
  2993   001AAE                     
  2994                           ;../dc_motor.c: 189:         mR->power = 50 + i;
  2995   001AAE  5020               	movf	right_135@i^0,w,c
  2996   001AB0  0F32               	addlw	50
  2997   001AB2  C01C  FFD9         	movff	right_135@mR,fsr2l
  2998   001AB6  C01D  FFDA         	movff	right_135@mR+1,fsr2h
  2999   001ABA  6EDF               	movwf	indf2,c
  3000   001ABC                     
  3001                           ;../dc_motor.c: 190:         setMotorPWM(mL);
  3002   001ABC  C01A  F00F         	movff	right_135@mL,setMotorPWM@m
  3003   001AC0  C01B  F010         	movff	right_135@mL+1,setMotorPWM@m+1
  3004   001AC4  ECBB  F008         	call	_setMotorPWM	;wreg free
  3005   001AC8                     
  3006                           ;../dc_motor.c: 191:         setMotorPWM(mR);
  3007   001AC8  C01C  F00F         	movff	right_135@mR,setMotorPWM@m
  3008   001ACC  C01D  F010         	movff	right_135@mR+1,setMotorPWM@m+1
  3009   001AD0  ECBB  F008         	call	_setMotorPWM	;wreg free
  3010   001AD4                     
  3011                           ;../dc_motor.c: 192:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3012   001AD4  0E35               	movlw	53
  3013   001AD6                     u1987:
  3014   001AD6  2EE8               	decfsz	wreg,f,c
  3015   001AD8  D7FE               	bra	u1987
  3016   001ADA  F000               	nop	
  3017   001ADC                     
  3018                           ;../dc_motor.c: 193:     }
  3019   001ADC  0E02               	movlw	2
  3020   001ADE  2420               	addwf	right_135@i^0,w,c
  3021   001AE0  6E20               	movwf	right_135@i^0,c
  3022   001AE2  0E00               	movlw	0
  3023   001AE4  2021               	addwfc	(right_135@i+1)^0,w,c
  3024   001AE6  6E21               	movwf	(right_135@i+1)^0,c
  3025   001AE8  BE21               	btfsc	(right_135@i+1)^0,7,c
  3026   001AEA  EF80  F00D         	goto	u1071
  3027   001AEE  0E2C               	movlw	44
  3028   001AF0  5C20               	subwf	right_135@i^0,w,c
  3029   001AF2  0E01               	movlw	1
  3030   001AF4  5821               	subwfb	(right_135@i+1)^0,w,c
  3031   001AF6  A0D8               	btfss	status,0,c
  3032   001AF8  EF80  F00D         	goto	u1071
  3033   001AFC  EF82  F00D         	goto	u1070
  3034   001B00                     u1071:
  3035   001B00  EF51  F00D         	goto	l2587
  3036   001B04                     u1070:
  3037   001B04                     
  3038                           ;../dc_motor.c: 194:     _delay((unsigned long)((230)*(64000000/4000.0)));
  3039   001B04  0E13               	movlw	19
  3040   001B06  6E1F               	movwf	(??_right_135+1)^0,c
  3041   001B08  0EAC               	movlw	172
  3042   001B0A  6E1E               	movwf	??_right_135^0,c
  3043   001B0C  0E2A               	movlw	42
  3044   001B0E                     u1997:
  3045   001B0E  2EE8               	decfsz	wreg,f,c
  3046   001B10  D7FE               	bra	u1997
  3047   001B12  2E1E               	decfsz	??_right_135^0,f,c
  3048   001B14  D7FC               	bra	u1997
  3049   001B16  2E1F               	decfsz	(??_right_135+1)^0,f,c
  3050   001B18  D7FA               	bra	u1997
  3051   001B1A  0012               	return		;funcret
  3052   001B1C                     __end_of_right_135:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _reverse_onesquare *****************
  3056 ;; Defined at:
  3057 ;;		line 122 in file "../dc_motor.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3060 ;;		 -> main@motorL(9), 
  3061 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3062 ;;		 -> main@motorR(9), 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  i               2   31[COMRAM] int 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;Total ram usage:        8 bytes
  3079 ;; Hardware stack levels used: 1
  3080 ;; Hardware stack levels required when called: 3
  3081 ;; This function calls:
  3082 ;;		_setMotorPWM
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;;		_motor_action
  3086 ;;		_motor_action_return
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text7
  3091   001B1C                     __ptext7:
  3092                           	callstack 0
  3093   001B1C                     _reverse_onesquare:
  3094                           	callstack 27
  3095   001B1C                     
  3096                           ;../dc_motor.c: 122: void reverse_onesquare (struct DC_motor *mL, struct DC_motor *mR);.
      +                          ./dc_motor.c: 123: {;../dc_motor.c: 124:     mL->direction = 0;
  3097   001B1C  EE20 F001          	lfsr	2,1
  3098   001B20  501A               	movf	reverse_onesquare@mL^0,w,c
  3099   001B22  26D9               	addwf	fsr2l,f,c
  3100   001B24  501B               	movf	(reverse_onesquare@mL+1)^0,w,c
  3101   001B26  22DA               	addwfc	fsr2h,f,c
  3102   001B28  0E00               	movlw	0
  3103   001B2A  6EDF               	movwf	indf2,c
  3104                           
  3105                           ;../dc_motor.c: 125:     mR->direction = 0;
  3106   001B2C  EE20 F001          	lfsr	2,1
  3107   001B30  501C               	movf	reverse_onesquare@mR^0,w,c
  3108   001B32  26D9               	addwf	fsr2l,f,c
  3109   001B34  501D               	movf	(reverse_onesquare@mR+1)^0,w,c
  3110   001B36  22DA               	addwfc	fsr2h,f,c
  3111   001B38  0E00               	movlw	0
  3112   001B3A  6EDF               	movwf	indf2,c
  3113   001B3C                     
  3114                           ;../dc_motor.c: 126:     for (int i=0;i<9;i=i + 2)
  3115   001B3C  0E00               	movlw	0
  3116   001B3E  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  3117   001B40  0E00               	movlw	0
  3118   001B42  6E20               	movwf	reverse_onesquare@i^0,c
  3119   001B44                     l2429:
  3120                           
  3121                           ;../dc_motor.c: 127:     {;../dc_motor.c: 128:         mL->power = i;
  3122   001B44  C01A  FFD9         	movff	reverse_onesquare@mL,fsr2l
  3123   001B48  C01B  FFDA         	movff	reverse_onesquare@mL+1,fsr2h
  3124   001B4C  C020  FFDF         	movff	reverse_onesquare@i,indf2
  3125                           
  3126                           ;../dc_motor.c: 129:         mR->power = i;
  3127   001B50  C01C  FFD9         	movff	reverse_onesquare@mR,fsr2l
  3128   001B54  C01D  FFDA         	movff	reverse_onesquare@mR+1,fsr2h
  3129   001B58  C020  FFDF         	movff	reverse_onesquare@i,indf2
  3130   001B5C                     
  3131                           ;../dc_motor.c: 130:         setMotorPWM(mL);
  3132   001B5C  C01A  F00F         	movff	reverse_onesquare@mL,setMotorPWM@m
  3133   001B60  C01B  F010         	movff	reverse_onesquare@mL+1,setMotorPWM@m+1
  3134   001B64  ECBB  F008         	call	_setMotorPWM	;wreg free
  3135   001B68                     
  3136                           ;../dc_motor.c: 131:         setMotorPWM(mR);
  3137   001B68  C01C  F00F         	movff	reverse_onesquare@mR,setMotorPWM@m
  3138   001B6C  C01D  F010         	movff	reverse_onesquare@mR+1,setMotorPWM@m+1
  3139   001B70  ECBB  F008         	call	_setMotorPWM	;wreg free
  3140   001B74                     
  3141                           ;../dc_motor.c: 132:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3142   001B74  0E35               	movlw	53
  3143   001B76                     u2007:
  3144   001B76  2EE8               	decfsz	wreg,f,c
  3145   001B78  D7FE               	bra	u2007
  3146   001B7A  F000               	nop	
  3147   001B7C                     
  3148                           ;../dc_motor.c: 133:     }
  3149   001B7C  0E02               	movlw	2
  3150   001B7E  2420               	addwf	reverse_onesquare@i^0,w,c
  3151   001B80  6E20               	movwf	reverse_onesquare@i^0,c
  3152   001B82  0E00               	movlw	0
  3153   001B84  2021               	addwfc	(reverse_onesquare@i+1)^0,w,c
  3154   001B86  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  3155   001B88  BE21               	btfsc	(reverse_onesquare@i+1)^0,7,c
  3156   001B8A  EFD0  F00D         	goto	u1001
  3157   001B8E  5021               	movf	(reverse_onesquare@i+1)^0,w,c
  3158   001B90  E109               	bnz	u1000
  3159   001B92  0E09               	movlw	9
  3160   001B94  5C20               	subwf	reverse_onesquare@i^0,w,c
  3161   001B96  A0D8               	btfss	status,0,c
  3162   001B98  EFD0  F00D         	goto	u1001
  3163   001B9C  EFD2  F00D         	goto	u1000
  3164   001BA0                     u1001:
  3165   001BA0  EFA2  F00D         	goto	l2429
  3166   001BA4                     u1000:
  3167   001BA4                     
  3168                           ;../dc_motor.c: 134:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  3169   001BA4  0E5A               	movlw	90
  3170   001BA6  6E1F               	movwf	(??_reverse_onesquare+1)^0,c
  3171   001BA8  0E49               	movlw	73
  3172   001BAA  6E1E               	movwf	??_reverse_onesquare^0,c
  3173   001BAC  0EE7               	movlw	231
  3174   001BAE                     u2017:
  3175   001BAE  2EE8               	decfsz	wreg,f,c
  3176   001BB0  D7FE               	bra	u2017
  3177   001BB2  2E1E               	decfsz	??_reverse_onesquare^0,f,c
  3178   001BB4  D7FC               	bra	u2017
  3179   001BB6  2E1F               	decfsz	(??_reverse_onesquare+1)^0,f,c
  3180   001BB8  D7FA               	bra	u2017
  3181   001BBA  F000               	nop	
  3182   001BBC  0012               	return		;funcret
  3183   001BBE                     __end_of_reverse_onesquare:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _reverse_fromcard *****************
  3187 ;; Defined at:
  3188 ;;		line 107 in file "../dc_motor.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3191 ;;		 -> main@motorL(9), 
  3192 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3193 ;;		 -> main@motorR(9), 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  i               2   31[COMRAM] int 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;Total ram usage:        8 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 3
  3212 ;; This function calls:
  3213 ;;		_setMotorPWM
  3214 ;; This function is called by:
  3215 ;;		_motor_action
  3216 ;;		_motor_action_return
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text8
  3221   001D02                     __ptext8:
  3222                           	callstack 0
  3223   001D02                     _reverse_fromcard:
  3224                           	callstack 26
  3225   001D02                     
  3226                           ;../dc_motor.c: 107: void reverse_fromcard (struct DC_motor *mL, struct DC_motor *mR);..
      +                          /dc_motor.c: 108: {;../dc_motor.c: 109:     mL->direction = 0;
  3227   001D02  EE20 F001          	lfsr	2,1
  3228   001D06  501A               	movf	reverse_fromcard@mL^0,w,c
  3229   001D08  26D9               	addwf	fsr2l,f,c
  3230   001D0A  501B               	movf	(reverse_fromcard@mL+1)^0,w,c
  3231   001D0C  22DA               	addwfc	fsr2h,f,c
  3232   001D0E  0E00               	movlw	0
  3233   001D10  6EDF               	movwf	indf2,c
  3234                           
  3235                           ;../dc_motor.c: 110:     mR->direction = 0;
  3236   001D12  EE20 F001          	lfsr	2,1
  3237   001D16  501C               	movf	reverse_fromcard@mR^0,w,c
  3238   001D18  26D9               	addwf	fsr2l,f,c
  3239   001D1A  501D               	movf	(reverse_fromcard@mR+1)^0,w,c
  3240   001D1C  22DA               	addwfc	fsr2h,f,c
  3241   001D1E  0E00               	movlw	0
  3242   001D20  6EDF               	movwf	indf2,c
  3243   001D22                     
  3244                           ;../dc_motor.c: 111:     for (int i = 0;i < 9;i = i + 2)
  3245   001D22  0E00               	movlw	0
  3246   001D24  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  3247   001D26  0E00               	movlw	0
  3248   001D28  6E20               	movwf	reverse_fromcard@i^0,c
  3249   001D2A                     l2517:
  3250                           
  3251                           ;../dc_motor.c: 112:     {;../dc_motor.c: 113:         mL->power = i;
  3252   001D2A  C01A  FFD9         	movff	reverse_fromcard@mL,fsr2l
  3253   001D2E  C01B  FFDA         	movff	reverse_fromcard@mL+1,fsr2h
  3254   001D32  C020  FFDF         	movff	reverse_fromcard@i,indf2
  3255                           
  3256                           ;../dc_motor.c: 114:         mR->power = i;
  3257   001D36  C01C  FFD9         	movff	reverse_fromcard@mR,fsr2l
  3258   001D3A  C01D  FFDA         	movff	reverse_fromcard@mR+1,fsr2h
  3259   001D3E  C020  FFDF         	movff	reverse_fromcard@i,indf2
  3260   001D42                     
  3261                           ;../dc_motor.c: 115:         setMotorPWM(mL);
  3262   001D42  C01A  F00F         	movff	reverse_fromcard@mL,setMotorPWM@m
  3263   001D46  C01B  F010         	movff	reverse_fromcard@mL+1,setMotorPWM@m+1
  3264   001D4A  ECBB  F008         	call	_setMotorPWM	;wreg free
  3265   001D4E                     
  3266                           ;../dc_motor.c: 116:         setMotorPWM(mR);
  3267   001D4E  C01C  F00F         	movff	reverse_fromcard@mR,setMotorPWM@m
  3268   001D52  C01D  F010         	movff	reverse_fromcard@mR+1,setMotorPWM@m+1
  3269   001D56  ECBB  F008         	call	_setMotorPWM	;wreg free
  3270   001D5A                     
  3271                           ;../dc_motor.c: 117:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3272   001D5A  0E35               	movlw	53
  3273   001D5C                     u2027:
  3274   001D5C  2EE8               	decfsz	wreg,f,c
  3275   001D5E  D7FE               	bra	u2027
  3276   001D60  F000               	nop	
  3277   001D62                     
  3278                           ;../dc_motor.c: 118:     }
  3279   001D62  0E02               	movlw	2
  3280   001D64  2420               	addwf	reverse_fromcard@i^0,w,c
  3281   001D66  6E20               	movwf	reverse_fromcard@i^0,c
  3282   001D68  0E00               	movlw	0
  3283   001D6A  2021               	addwfc	(reverse_fromcard@i+1)^0,w,c
  3284   001D6C  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  3285   001D6E  BE21               	btfsc	(reverse_fromcard@i+1)^0,7,c
  3286   001D70  EFC3  F00E         	goto	u1041
  3287   001D74  5021               	movf	(reverse_fromcard@i+1)^0,w,c
  3288   001D76  E109               	bnz	u1040
  3289   001D78  0E09               	movlw	9
  3290   001D7A  5C20               	subwf	reverse_fromcard@i^0,w,c
  3291   001D7C  A0D8               	btfss	status,0,c
  3292   001D7E  EFC3  F00E         	goto	u1041
  3293   001D82  EFC5  F00E         	goto	u1040
  3294   001D86                     u1041:
  3295   001D86  EF95  F00E         	goto	l2517
  3296   001D8A                     u1040:
  3297   001D8A                     
  3298                           ;../dc_motor.c: 119:     _delay((unsigned long)((300)*(64000000/4000.0)));
  3299   001D8A  0E19               	movlw	25
  3300   001D8C  6E1F               	movwf	(??_reverse_fromcard+1)^0,c
  3301   001D8E  0E5A               	movlw	90
  3302   001D90  6E1E               	movwf	??_reverse_fromcard^0,c
  3303   001D92  0EB2               	movlw	178
  3304   001D94                     u2037:
  3305   001D94  2EE8               	decfsz	wreg,f,c
  3306   001D96  D7FE               	bra	u2037
  3307   001D98  2E1E               	decfsz	??_reverse_fromcard^0,f,c
  3308   001D9A  D7FC               	bra	u2037
  3309   001D9C  2E1F               	decfsz	(??_reverse_fromcard+1)^0,f,c
  3310   001D9E  D7FA               	bra	u2037
  3311   001DA0  0012               	return		;funcret
  3312   001DA2                     __end_of_reverse_fromcard:
  3313                           	callstack 0
  3314                           
  3315 ;; *************** function _left_90 *****************
  3316 ;; Defined at:
  3317 ;;		line 152 in file "../dc_motor.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3320 ;;		 -> main@motorL(9), 
  3321 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3322 ;;		 -> main@motorR(9), 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  i               2   31[COMRAM] int 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3337 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3338 ;;Total ram usage:        8 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 3
  3341 ;; This function calls:
  3342 ;;		_setMotorPWM
  3343 ;; This function is called by:
  3344 ;;		_motor_action
  3345 ;;		_motor_action_return
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text9
  3350   001934                     __ptext9:
  3351                           	callstack 0
  3352   001934                     _left_90:
  3353                           	callstack 26
  3354   001934                     
  3355                           ;../dc_motor.c: 152: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 153: {;../dc_motor.c: 154:     mL->direction = 0;
  3356   001934  EE20 F001          	lfsr	2,1
  3357   001938  501A               	movf	left_90@mL^0,w,c
  3358   00193A  26D9               	addwf	fsr2l,f,c
  3359   00193C  501B               	movf	(left_90@mL+1)^0,w,c
  3360   00193E  22DA               	addwfc	fsr2h,f,c
  3361   001940  0E00               	movlw	0
  3362   001942  6EDF               	movwf	indf2,c
  3363                           
  3364                           ;../dc_motor.c: 155:     mR->direction = 1;
  3365   001944  EE20 F001          	lfsr	2,1
  3366   001948  501C               	movf	left_90@mR^0,w,c
  3367   00194A  26D9               	addwf	fsr2l,f,c
  3368   00194C  501D               	movf	(left_90@mR+1)^0,w,c
  3369   00194E  22DA               	addwfc	fsr2h,f,c
  3370   001950  0E01               	movlw	1
  3371   001952  6EDF               	movwf	indf2,c
  3372   001954                     
  3373                           ;../dc_motor.c: 156:     for (int i = 0;i<301;i = i + 2)
  3374   001954  0E00               	movlw	0
  3375   001956  6E21               	movwf	(left_90@i+1)^0,c
  3376   001958  0E00               	movlw	0
  3377   00195A  6E20               	movwf	left_90@i^0,c
  3378   00195C                     l2563:
  3379                           
  3380                           ;../dc_motor.c: 157:     {;../dc_motor.c: 158:         mL->power = 50 + i;
  3381   00195C  5020               	movf	left_90@i^0,w,c
  3382   00195E  0F32               	addlw	50
  3383   001960  C01A  FFD9         	movff	left_90@mL,fsr2l
  3384   001964  C01B  FFDA         	movff	left_90@mL+1,fsr2h
  3385   001968  6EDF               	movwf	indf2,c
  3386   00196A                     
  3387                           ;../dc_motor.c: 159:         mR->power = i;
  3388   00196A  C01C  FFD9         	movff	left_90@mR,fsr2l
  3389   00196E  C01D  FFDA         	movff	left_90@mR+1,fsr2h
  3390   001972  C020  FFDF         	movff	left_90@i,indf2
  3391   001976                     
  3392                           ;../dc_motor.c: 160:         setMotorPWM(mL);
  3393   001976  C01A  F00F         	movff	left_90@mL,setMotorPWM@m
  3394   00197A  C01B  F010         	movff	left_90@mL+1,setMotorPWM@m+1
  3395   00197E  ECBB  F008         	call	_setMotorPWM	;wreg free
  3396   001982                     
  3397                           ;../dc_motor.c: 161:         setMotorPWM(mR);
  3398   001982  C01C  F00F         	movff	left_90@mR,setMotorPWM@m
  3399   001986  C01D  F010         	movff	left_90@mR+1,setMotorPWM@m+1
  3400   00198A  ECBB  F008         	call	_setMotorPWM	;wreg free
  3401   00198E                     
  3402                           ;../dc_motor.c: 162:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3403   00198E  0E35               	movlw	53
  3404   001990                     u2047:
  3405   001990  2EE8               	decfsz	wreg,f,c
  3406   001992  D7FE               	bra	u2047
  3407   001994  F000               	nop	
  3408   001996                     
  3409                           ;../dc_motor.c: 163:     }
  3410   001996  0E02               	movlw	2
  3411   001998  2420               	addwf	left_90@i^0,w,c
  3412   00199A  6E20               	movwf	left_90@i^0,c
  3413   00199C  0E00               	movlw	0
  3414   00199E  2021               	addwfc	(left_90@i+1)^0,w,c
  3415   0019A0  6E21               	movwf	(left_90@i+1)^0,c
  3416   0019A2  BE21               	btfsc	(left_90@i+1)^0,7,c
  3417   0019A4  EFDD  F00C         	goto	u1061
  3418   0019A8  0E2D               	movlw	45
  3419   0019AA  5C20               	subwf	left_90@i^0,w,c
  3420   0019AC  0E01               	movlw	1
  3421   0019AE  5821               	subwfb	(left_90@i+1)^0,w,c
  3422   0019B0  A0D8               	btfss	status,0,c
  3423   0019B2  EFDD  F00C         	goto	u1061
  3424   0019B6  EFDF  F00C         	goto	u1060
  3425   0019BA                     u1061:
  3426   0019BA  EFAE  F00C         	goto	l2563
  3427   0019BE                     u1060:
  3428   0019BE                     
  3429                           ;../dc_motor.c: 164:     _delay((unsigned long)((195)*(64000000/4000.0)));
  3430   0019BE  0E10               	movlw	16
  3431   0019C0  6E1F               	movwf	(??_left_90+1)^0,c
  3432   0019C2  0ED4               	movlw	212
  3433   0019C4  6E1E               	movwf	??_left_90^0,c
  3434   0019C6  0EE6               	movlw	230
  3435   0019C8                     u2057:
  3436   0019C8  2EE8               	decfsz	wreg,f,c
  3437   0019CA  D7FE               	bra	u2057
  3438   0019CC  2E1E               	decfsz	??_left_90^0,f,c
  3439   0019CE  D7FC               	bra	u2057
  3440   0019D0  2E1F               	decfsz	(??_left_90+1)^0,f,c
  3441   0019D2  D7FA               	bra	u2057
  3442   0019D4  D000               	nop2	
  3443   0019D6  0012               	return		;funcret
  3444   0019D8                     __end_of_left_90:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _left_135 *****************
  3448 ;; Defined at:
  3449 ;;		line 198 in file "../dc_motor.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3452 ;;		 -> main@motorL(9), 
  3453 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3454 ;;		 -> main@motorR(9), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  i               2   31[COMRAM] int 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;Total ram usage:        8 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 3
  3473 ;; This function calls:
  3474 ;;		_setMotorPWM
  3475 ;; This function is called by:
  3476 ;;		_motor_action
  3477 ;;		_motor_action_return
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text10
  3482   001BBE                     __ptext10:
  3483                           	callstack 0
  3484   001BBE                     _left_135:
  3485                           	callstack 26
  3486   001BBE                     
  3487                           ;../dc_motor.c: 198: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 199: {;../dc_motor.c: 200:     mL->direction = 0;
  3488   001BBE  EE20 F001          	lfsr	2,1
  3489   001BC2  501A               	movf	left_135@mL^0,w,c
  3490   001BC4  26D9               	addwf	fsr2l,f,c
  3491   001BC6  501B               	movf	(left_135@mL+1)^0,w,c
  3492   001BC8  22DA               	addwfc	fsr2h,f,c
  3493   001BCA  0E00               	movlw	0
  3494   001BCC  6EDF               	movwf	indf2,c
  3495                           
  3496                           ;../dc_motor.c: 201:     mR->direction = 1;
  3497   001BCE  EE20 F001          	lfsr	2,1
  3498   001BD2  501C               	movf	left_135@mR^0,w,c
  3499   001BD4  26D9               	addwf	fsr2l,f,c
  3500   001BD6  501D               	movf	(left_135@mR+1)^0,w,c
  3501   001BD8  22DA               	addwfc	fsr2h,f,c
  3502   001BDA  0E01               	movlw	1
  3503   001BDC  6EDF               	movwf	indf2,c
  3504   001BDE                     
  3505                           ;../dc_motor.c: 202:     for (int i = 0;i<300;i = i + 2)
  3506   001BDE  0E00               	movlw	0
  3507   001BE0  6E21               	movwf	(left_135@i+1)^0,c
  3508   001BE2  0E00               	movlw	0
  3509   001BE4  6E20               	movwf	left_135@i^0,c
  3510   001BE6                     l2611:
  3511                           
  3512                           ;../dc_motor.c: 203:     {;../dc_motor.c: 204:         mL->power = 50 + i;
  3513   001BE6  5020               	movf	left_135@i^0,w,c
  3514   001BE8  0F32               	addlw	50
  3515   001BEA  C01A  FFD9         	movff	left_135@mL,fsr2l
  3516   001BEE  C01B  FFDA         	movff	left_135@mL+1,fsr2h
  3517   001BF2  6EDF               	movwf	indf2,c
  3518   001BF4                     
  3519                           ;../dc_motor.c: 205:         mR->power = i;
  3520   001BF4  C01C  FFD9         	movff	left_135@mR,fsr2l
  3521   001BF8  C01D  FFDA         	movff	left_135@mR+1,fsr2h
  3522   001BFC  C020  FFDF         	movff	left_135@i,indf2
  3523   001C00                     
  3524                           ;../dc_motor.c: 206:         setMotorPWM(mL);
  3525   001C00  C01A  F00F         	movff	left_135@mL,setMotorPWM@m
  3526   001C04  C01B  F010         	movff	left_135@mL+1,setMotorPWM@m+1
  3527   001C08  ECBB  F008         	call	_setMotorPWM	;wreg free
  3528   001C0C                     
  3529                           ;../dc_motor.c: 207:         setMotorPWM(mR);
  3530   001C0C  C01C  F00F         	movff	left_135@mR,setMotorPWM@m
  3531   001C10  C01D  F010         	movff	left_135@mR+1,setMotorPWM@m+1
  3532   001C14  ECBB  F008         	call	_setMotorPWM	;wreg free
  3533   001C18                     
  3534                           ;../dc_motor.c: 208:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3535   001C18  0E35               	movlw	53
  3536   001C1A                     u2067:
  3537   001C1A  2EE8               	decfsz	wreg,f,c
  3538   001C1C  D7FE               	bra	u2067
  3539   001C1E  F000               	nop	
  3540   001C20                     
  3541                           ;../dc_motor.c: 209:     }
  3542   001C20  0E02               	movlw	2
  3543   001C22  2420               	addwf	left_135@i^0,w,c
  3544   001C24  6E20               	movwf	left_135@i^0,c
  3545   001C26  0E00               	movlw	0
  3546   001C28  2021               	addwfc	(left_135@i+1)^0,w,c
  3547   001C2A  6E21               	movwf	(left_135@i+1)^0,c
  3548   001C2C  BE21               	btfsc	(left_135@i+1)^0,7,c
  3549   001C2E  EF22  F00E         	goto	u1081
  3550   001C32  0E2C               	movlw	44
  3551   001C34  5C20               	subwf	left_135@i^0,w,c
  3552   001C36  0E01               	movlw	1
  3553   001C38  5821               	subwfb	(left_135@i+1)^0,w,c
  3554   001C3A  A0D8               	btfss	status,0,c
  3555   001C3C  EF22  F00E         	goto	u1081
  3556   001C40  EF24  F00E         	goto	u1080
  3557   001C44                     u1081:
  3558   001C44  EFF3  F00D         	goto	l2611
  3559   001C48                     u1080:
  3560   001C48                     
  3561                           ;../dc_motor.c: 210:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3562   001C48  0E18               	movlw	24
  3563   001C4A  6E1F               	movwf	(??_left_135+1)^0,c
  3564   001C4C  0E8A               	movlw	138
  3565   001C4E  6E1E               	movwf	??_left_135^0,c
  3566   001C50  0EE8               	movlw	232
  3567   001C52                     u2077:
  3568   001C52  2EE8               	decfsz	wreg,f,c
  3569   001C54  D7FE               	bra	u2077
  3570   001C56  2E1E               	decfsz	??_left_135^0,f,c
  3571   001C58  D7FC               	bra	u2077
  3572   001C5A  2E1F               	decfsz	(??_left_135+1)^0,f,c
  3573   001C5C  D7FA               	bra	u2077
  3574   001C5E  0012               	return		;funcret
  3575   001C60                     __end_of_left_135:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _forward *****************
  3579 ;; Defined at:
  3580 ;;		line 77 in file "../dc_motor.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3583 ;;		 -> main@motorL(9), 
  3584 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3585 ;;		 -> main@motorR(9), 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  i               2   31[COMRAM] int 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;Total ram usage:        8 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 3
  3604 ;; This function calls:
  3605 ;;		_setMotorPWM
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;;		_motor_action
  3609 ;;		_motor_action_return
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text11
  3614   001C60                     __ptext11:
  3615                           	callstack 0
  3616   001C60                     _forward:
  3617                           	callstack 26
  3618   001C60                     
  3619                           ;../dc_motor.c: 77: void forward(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c
      +                          : 78: {;../dc_motor.c: 79:     mL->direction = 1;
  3620   001C60  EE20 F001          	lfsr	2,1
  3621   001C64  501A               	movf	forward@mL^0,w,c
  3622   001C66  26D9               	addwf	fsr2l,f,c
  3623   001C68  501B               	movf	(forward@mL+1)^0,w,c
  3624   001C6A  22DA               	addwfc	fsr2h,f,c
  3625   001C6C  0E01               	movlw	1
  3626   001C6E  6EDF               	movwf	indf2,c
  3627                           
  3628                           ;../dc_motor.c: 80:     mR->direction = 1;
  3629   001C70  EE20 F001          	lfsr	2,1
  3630   001C74  501C               	movf	forward@mR^0,w,c
  3631   001C76  26D9               	addwf	fsr2l,f,c
  3632   001C78  501D               	movf	(forward@mR+1)^0,w,c
  3633   001C7A  22DA               	addwfc	fsr2h,f,c
  3634   001C7C  0E01               	movlw	1
  3635   001C7E  6EDF               	movwf	indf2,c
  3636   001C80                     
  3637                           ;../dc_motor.c: 81:     for (int i = 0;i < 101;i = i + 2)
  3638   001C80  0E00               	movlw	0
  3639   001C82  6E21               	movwf	(forward@i+1)^0,c
  3640   001C84  0E00               	movlw	0
  3641   001C86  6E20               	movwf	forward@i^0,c
  3642   001C88                     l2495:
  3643                           
  3644                           ;../dc_motor.c: 82:     {;../dc_motor.c: 83:         mL->power = i;
  3645   001C88  C01A  FFD9         	movff	forward@mL,fsr2l
  3646   001C8C  C01B  FFDA         	movff	forward@mL+1,fsr2h
  3647   001C90  C020  FFDF         	movff	forward@i,indf2
  3648                           
  3649                           ;../dc_motor.c: 84:         mR->power = i;
  3650   001C94  C01C  FFD9         	movff	forward@mR,fsr2l
  3651   001C98  C01D  FFDA         	movff	forward@mR+1,fsr2h
  3652   001C9C  C020  FFDF         	movff	forward@i,indf2
  3653   001CA0                     
  3654                           ;../dc_motor.c: 85:         setMotorPWM(mL);
  3655   001CA0  C01A  F00F         	movff	forward@mL,setMotorPWM@m
  3656   001CA4  C01B  F010         	movff	forward@mL+1,setMotorPWM@m+1
  3657   001CA8  ECBB  F008         	call	_setMotorPWM	;wreg free
  3658   001CAC                     
  3659                           ;../dc_motor.c: 86:         setMotorPWM(mR);
  3660   001CAC  C01C  F00F         	movff	forward@mR,setMotorPWM@m
  3661   001CB0  C01D  F010         	movff	forward@mR+1,setMotorPWM@m+1
  3662   001CB4  ECBB  F008         	call	_setMotorPWM	;wreg free
  3663   001CB8                     
  3664                           ;../dc_motor.c: 87:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3665   001CB8  0E35               	movlw	53
  3666   001CBA                     u2087:
  3667   001CBA  2EE8               	decfsz	wreg,f,c
  3668   001CBC  D7FE               	bra	u2087
  3669   001CBE  F000               	nop	
  3670   001CC0                     
  3671                           ;../dc_motor.c: 88:     }
  3672   001CC0  0E02               	movlw	2
  3673   001CC2  2420               	addwf	forward@i^0,w,c
  3674   001CC4  6E20               	movwf	forward@i^0,c
  3675   001CC6  0E00               	movlw	0
  3676   001CC8  2021               	addwfc	(forward@i+1)^0,w,c
  3677   001CCA  6E21               	movwf	(forward@i+1)^0,c
  3678   001CCC  BE21               	btfsc	(forward@i+1)^0,7,c
  3679   001CCE  EF72  F00E         	goto	u1031
  3680   001CD2  5021               	movf	(forward@i+1)^0,w,c
  3681   001CD4  E109               	bnz	u1030
  3682   001CD6  0E65               	movlw	101
  3683   001CD8  5C20               	subwf	forward@i^0,w,c
  3684   001CDA  A0D8               	btfss	status,0,c
  3685   001CDC  EF72  F00E         	goto	u1031
  3686   001CE0  EF74  F00E         	goto	u1030
  3687   001CE4                     u1031:
  3688   001CE4  EF44  F00E         	goto	l2495
  3689   001CE8                     u1030:
  3690   001CE8                     
  3691                           ;../dc_motor.c: 89:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3692   001CE8  0E09               	movlw	9
  3693   001CEA  6E1F               	movwf	(??_forward+1)^0,c
  3694   001CEC  0E1E               	movlw	30
  3695   001CEE  6E1E               	movwf	??_forward^0,c
  3696   001CF0  0EE4               	movlw	228
  3697   001CF2                     u2097:
  3698   001CF2  2EE8               	decfsz	wreg,f,c
  3699   001CF4  D7FE               	bra	u2097
  3700   001CF6  2E1E               	decfsz	??_forward^0,f,c
  3701   001CF8  D7FC               	bra	u2097
  3702   001CFA  2E1F               	decfsz	(??_forward+1)^0,f,c
  3703   001CFC  D7FA               	bra	u2097
  3704   001CFE  D000               	nop2	
  3705   001D00  0012               	return		;funcret
  3706   001D02                     __end_of_forward:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _setMotorPWM *****************
  3710 ;; Defined at:
  3711 ;;		line 38 in file "../dc_motor.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  m               2   14[COMRAM] PTR struct DC_motor
  3714 ;;		 -> main@motorR(9), main@motorL(9), 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  PWMduty         2   23[COMRAM] int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;Total ram usage:       11 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; Hardware stack levels required when called: 2
  3733 ;; This function calls:
  3734 ;;		___awdiv
  3735 ;;		___wmul
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;;		_stop
  3739 ;;		_forward
  3740 ;;		_reverse_fromcard
  3741 ;;		_reverse_onesquare
  3742 ;;		_right_90
  3743 ;;		_left_90
  3744 ;;		_spin_180
  3745 ;;		_right_135
  3746 ;;		_left_135
  3747 ;;		_opposite_forward
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text12
  3752   001176                     __ptext12:
  3753                           	callstack 0
  3754   001176                     _setMotorPWM:
  3755                           	callstack 27
  3756   001176                     
  3757                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  3758   001176  EE20 F001          	lfsr	2,1
  3759   00117A  500F               	movf	setMotorPWM@m^0,w,c
  3760   00117C  26D9               	addwf	fsr2l,f,c
  3761   00117E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3762   001180  22DA               	addwfc	fsr2h,f,c
  3763   001182  50DF               	movf	indf2,w,c
  3764   001184  B4D8               	btfsc	status,2,c
  3765   001186  EFC7  F008         	goto	u961
  3766   00118A  EFC9  F008         	goto	u960
  3767   00118E                     u961:
  3768   00118E  EFFA  F008         	goto	l2373
  3769   001192                     u960:
  3770   001192                     
  3771                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3772   001192  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3773   001196  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3774   00119A  50DF               	movf	indf2,w,c
  3775   00119C  6E11               	movwf	??_setMotorPWM^0,c
  3776   00119E  5011               	movf	??_setMotorPWM^0,w,c
  3777   0011A0  6E01               	movwf	___wmul@multiplier^0,c
  3778   0011A2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3779   0011A4  EE20 F007          	lfsr	2,7
  3780   0011A8  500F               	movf	setMotorPWM@m^0,w,c
  3781   0011AA  26D9               	addwf	fsr2l,f,c
  3782   0011AC  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3783   0011AE  22DA               	addwfc	fsr2h,f,c
  3784   0011B0  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3785   0011B4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3786   0011B8  EC74  F010         	call	___wmul	;wreg free
  3787   0011BC  C001  F007         	movff	?___wmul,___awdiv@dividend
  3788   0011C0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  3789   0011C4  0E00               	movlw	0
  3790   0011C6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3791   0011C8  0E64               	movlw	100
  3792   0011CA  6E09               	movwf	___awdiv@divisor^0,c
  3793   0011CC  EC93  F00B         	call	___awdiv	;wreg free
  3794   0011D0  EE20 F007          	lfsr	2,7
  3795   0011D4  500F               	movf	setMotorPWM@m^0,w,c
  3796   0011D6  26D9               	addwf	fsr2l,f,c
  3797   0011D8  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3798   0011DA  22DA               	addwfc	fsr2h,f,c
  3799   0011DC  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  3800   0011E0  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  3801   0011E4  5007               	movf	?___awdiv^0,w,c
  3802   0011E6  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  3803   0011E8  6E18               	movwf	setMotorPWM@PWMduty^0,c
  3804   0011EA  5008               	movf	(?___awdiv+1)^0,w,c
  3805   0011EC  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  3806   0011EE  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3807                           
  3808                           ;../dc_motor.c: 45:  }
  3809   0011F0  EF1D  F009         	goto	l2375
  3810   0011F4                     l2373:
  3811                           
  3812                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3813   0011F4  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3814   0011F8  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3815   0011FC  50DF               	movf	indf2,w,c
  3816   0011FE  6E11               	movwf	??_setMotorPWM^0,c
  3817   001200  5011               	movf	??_setMotorPWM^0,w,c
  3818   001202  6E01               	movwf	___wmul@multiplier^0,c
  3819   001204  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3820   001206  EE20 F007          	lfsr	2,7
  3821   00120A  500F               	movf	setMotorPWM@m^0,w,c
  3822   00120C  26D9               	addwf	fsr2l,f,c
  3823   00120E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3824   001210  22DA               	addwfc	fsr2h,f,c
  3825   001212  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3826   001216  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3827   00121A  EC74  F010         	call	___wmul	;wreg free
  3828   00121E  C001  F007         	movff	?___wmul,___awdiv@dividend
  3829   001222  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  3830   001226  0E00               	movlw	0
  3831   001228  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3832   00122A  0E64               	movlw	100
  3833   00122C  6E09               	movwf	___awdiv@divisor^0,c
  3834   00122E  EC93  F00B         	call	___awdiv	;wreg free
  3835   001232  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  3836   001236  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  3837   00123A                     l2375:
  3838                           
  3839                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  3840   00123A  EE20 F002          	lfsr	2,2
  3841   00123E  500F               	movf	setMotorPWM@m^0,w,c
  3842   001240  26D9               	addwf	fsr2l,f,c
  3843   001242  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3844   001244  22DA               	addwfc	fsr2h,f,c
  3845   001246  CFDE F011          	movff	postinc2,??_setMotorPWM
  3846   00124A  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3847   00124E  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3848   001252  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3849   001256  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3850   00125A                     
  3851                           ;../dc_motor.c: 53:  if (m->direction){
  3852   00125A  EE20 F001          	lfsr	2,1
  3853   00125E  500F               	movf	setMotorPWM@m^0,w,c
  3854   001260  26D9               	addwf	fsr2l,f,c
  3855   001262  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3856   001264  22DA               	addwfc	fsr2h,f,c
  3857   001266  50DF               	movf	indf2,w,c
  3858   001268  B4D8               	btfsc	status,2,c
  3859   00126A  EF39  F009         	goto	u971
  3860   00126E  EF3B  F009         	goto	u970
  3861   001272                     u971:
  3862   001272  EF70  F009         	goto	l2381
  3863   001276                     u970:
  3864   001276                     
  3865                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  3866   001276  EE20 F004          	lfsr	2,4
  3867   00127A  500F               	movf	setMotorPWM@m^0,w,c
  3868   00127C  26D9               	addwf	fsr2l,f,c
  3869   00127E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3870   001280  22DA               	addwfc	fsr2h,f,c
  3871   001282  CFDE F011          	movff	postinc2,??_setMotorPWM
  3872   001286  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3873   00128A  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3874   00128E  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3875   001292  EE10 F004          	lfsr	1,4
  3876   001296  500F               	movf	setMotorPWM@m^0,w,c
  3877   001298  26E1               	addwf	fsr1l,f,c
  3878   00129A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3879   00129C  22E2               	addwfc	fsr1h,f,c
  3880   00129E  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  3881   0012A2  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  3882   0012A6  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3883   0012AA  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3884   0012AE  50E7               	movf	indf1,w,c
  3885   0012B0  6E15               	movwf	(??_setMotorPWM+4)^0,c
  3886   0012B2  EE10 F006          	lfsr	1,6
  3887   0012B6  500F               	movf	setMotorPWM@m^0,w,c
  3888   0012B8  26E1               	addwf	fsr1l,f,c
  3889   0012BA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3890   0012BC  22E2               	addwfc	fsr1h,f,c
  3891   0012BE  50E7               	movf	indf1,w,c
  3892   0012C0  6E16               	movwf	(??_setMotorPWM+5)^0,c
  3893   0012C2  0E01               	movlw	1
  3894   0012C4  6E17               	movwf	(??_setMotorPWM+6)^0,c
  3895   0012C6  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  3896   0012C8  EF68  F009         	goto	u984
  3897   0012CC                     u985:
  3898   0012CC  90D8               	bcf	status,0,c
  3899   0012CE  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  3900   0012D0                     u984:
  3901   0012D0  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  3902   0012D2  EF66  F009         	goto	u985
  3903   0012D6  5017               	movf	(??_setMotorPWM+6)^0,w,c
  3904   0012D8  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  3905   0012DA  6EDF               	movwf	indf2,c
  3906                           
  3907                           ;../dc_motor.c: 55:  } else {
  3908   0012DC  EFA4  F009         	goto	l287
  3909   0012E0                     l2381:
  3910                           
  3911                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  3912   0012E0  EE20 F004          	lfsr	2,4
  3913   0012E4  500F               	movf	setMotorPWM@m^0,w,c
  3914   0012E6  26D9               	addwf	fsr2l,f,c
  3915   0012E8  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3916   0012EA  22DA               	addwfc	fsr2h,f,c
  3917   0012EC  CFDE F011          	movff	postinc2,??_setMotorPWM
  3918   0012F0  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3919   0012F4  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3920   0012F8  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3921   0012FC  EE10 F004          	lfsr	1,4
  3922   001300  500F               	movf	setMotorPWM@m^0,w,c
  3923   001302  26E1               	addwf	fsr1l,f,c
  3924   001304  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3925   001306  22E2               	addwfc	fsr1h,f,c
  3926   001308  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  3927   00130C  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  3928   001310  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3929   001314  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3930   001318  50E7               	movf	indf1,w,c
  3931   00131A  6E15               	movwf	(??_setMotorPWM+4)^0,c
  3932   00131C  EE10 F006          	lfsr	1,6
  3933   001320  500F               	movf	setMotorPWM@m^0,w,c
  3934   001322  26E1               	addwf	fsr1l,f,c
  3935   001324  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3936   001326  22E2               	addwfc	fsr1h,f,c
  3937   001328  50E7               	movf	indf1,w,c
  3938   00132A  6E16               	movwf	(??_setMotorPWM+5)^0,c
  3939   00132C  0E01               	movlw	1
  3940   00132E  6E17               	movwf	(??_setMotorPWM+6)^0,c
  3941   001330  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  3942   001332  EF9D  F009         	goto	u994
  3943   001336                     u995:
  3944   001336  90D8               	bcf	status,0,c
  3945   001338  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  3946   00133A                     u994:
  3947   00133A  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  3948   00133C  EF9B  F009         	goto	u995
  3949   001340  5017               	movf	(??_setMotorPWM+6)^0,w,c
  3950   001342  0AFF               	xorlw	255
  3951   001344  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  3952   001346  6EDF               	movwf	indf2,c
  3953   001348                     l287:
  3954   001348  0012               	return		;funcret
  3955   00134A                     __end_of_setMotorPWM:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function ___wmul *****************
  3959 ;; Defined at:
  3960 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  multiplier      2    0[COMRAM] unsigned int 
  3963 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  product         2    4[COMRAM] unsigned int 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  2    0[COMRAM] unsigned int 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, prodl, prodh
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3979 ;;Total ram usage:        6 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 1
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_setMotorPWM
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text13
  3990   0020E8                     __ptext13:
  3991                           	callstack 0
  3992   0020E8                     ___wmul:
  3993                           	callstack 27
  3994   0020E8  5001               	movf	___wmul@multiplier^0,w,c
  3995   0020EA  0203               	mulwf	___wmul@multiplicand^0,c
  3996   0020EC  CFF3 F005          	movff	prodl,___wmul@product
  3997   0020F0  CFF4 F006          	movff	prodh,___wmul@product+1
  3998   0020F4  5001               	movf	___wmul@multiplier^0,w,c
  3999   0020F6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4000   0020F8  50F3               	movf	243,w,c
  4001   0020FA  2606               	addwf	(___wmul@product+1)^0,f,c
  4002   0020FC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4003   0020FE  0203               	mulwf	___wmul@multiplicand^0,c
  4004   002100  50F3               	movf	243,w,c
  4005   002102  2606               	addwf	(___wmul@product+1)^0,f,c
  4006   002104  C005  F001         	movff	___wmul@product,?___wmul
  4007   002108  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4008   00210C  0012               	return		;funcret
  4009   00210E                     __end_of___wmul:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function ___awdiv *****************
  4013 ;; Defined at:
  4014 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  dividend        2    6[COMRAM] int 
  4017 ;;  divisor         2    8[COMRAM] int 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  quotient        2   12[COMRAM] int 
  4020 ;;  sign            1   11[COMRAM] unsigned char 
  4021 ;;  counter         1   10[COMRAM] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  2    6[COMRAM] int 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;Total ram usage:        8 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 1
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_setMotorPWM
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text14
  4046   001726                     __ptext14:
  4047                           	callstack 0
  4048   001726                     ___awdiv:
  4049                           	callstack 27
  4050   001726  0E00               	movlw	0
  4051   001728  6E0C               	movwf	___awdiv@sign^0,c
  4052   00172A  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  4053   00172C  EF9C  F00B         	goto	u880
  4054   001730  EF9A  F00B         	goto	u881
  4055   001734                     u881:
  4056   001734  EFA2  F00B         	goto	l2303
  4057   001738                     u880:
  4058   001738  6C09               	negf	___awdiv@divisor^0,c
  4059   00173A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  4060   00173C  B0D8               	btfsc	status,0,c
  4061   00173E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  4062   001740  0E01               	movlw	1
  4063   001742  6E0C               	movwf	___awdiv@sign^0,c
  4064   001744                     l2303:
  4065   001744  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  4066   001746  EFA9  F00B         	goto	u890
  4067   00174A  EFA7  F00B         	goto	u891
  4068   00174E                     u891:
  4069   00174E  EFAF  F00B         	goto	l2309
  4070   001752                     u890:
  4071   001752  6C07               	negf	___awdiv@dividend^0,c
  4072   001754  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  4073   001756  B0D8               	btfsc	status,0,c
  4074   001758  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  4075   00175A  0E01               	movlw	1
  4076   00175C  1A0C               	xorwf	___awdiv@sign^0,f,c
  4077   00175E                     l2309:
  4078   00175E  0E00               	movlw	0
  4079   001760  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  4080   001762  0E00               	movlw	0
  4081   001764  6E0D               	movwf	___awdiv@quotient^0,c
  4082   001766  5009               	movf	___awdiv@divisor^0,w,c
  4083   001768  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  4084   00176A  B4D8               	btfsc	status,2,c
  4085   00176C  EFBA  F00B         	goto	u901
  4086   001770  EFBC  F00B         	goto	u900
  4087   001774                     u901:
  4088   001774  EFE4  F00B         	goto	l2331
  4089   001778                     u900:
  4090   001778  0E01               	movlw	1
  4091   00177A  6E0B               	movwf	___awdiv@counter^0,c
  4092   00177C  EFC4  F00B         	goto	l2317
  4093   001780                     l2315:
  4094   001780  90D8               	bcf	status,0,c
  4095   001782  3609               	rlcf	___awdiv@divisor^0,f,c
  4096   001784  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  4097   001786  2A0B               	incf	___awdiv@counter^0,f,c
  4098   001788                     l2317:
  4099   001788  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4100   00178A  EFC9  F00B         	goto	u911
  4101   00178E  EFCB  F00B         	goto	u910
  4102   001792                     u911:
  4103   001792  EFC0  F00B         	goto	l2315
  4104   001796                     u910:
  4105   001796                     l2319:
  4106   001796  90D8               	bcf	status,0,c
  4107   001798  360D               	rlcf	___awdiv@quotient^0,f,c
  4108   00179A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  4109   00179C  5009               	movf	___awdiv@divisor^0,w,c
  4110   00179E  5C07               	subwf	___awdiv@dividend^0,w,c
  4111   0017A0  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4112   0017A2  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  4113   0017A4  A0D8               	btfss	status,0,c
  4114   0017A6  EFD7  F00B         	goto	u921
  4115   0017AA  EFD9  F00B         	goto	u920
  4116   0017AE                     u921:
  4117   0017AE  EFDE  F00B         	goto	l2327
  4118   0017B2                     u920:
  4119   0017B2  5009               	movf	___awdiv@divisor^0,w,c
  4120   0017B4  5E07               	subwf	___awdiv@dividend^0,f,c
  4121   0017B6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4122   0017B8  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  4123   0017BA  800D               	bsf	___awdiv@quotient^0,0,c
  4124   0017BC                     l2327:
  4125   0017BC  90D8               	bcf	status,0,c
  4126   0017BE  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  4127   0017C0  3209               	rrcf	___awdiv@divisor^0,f,c
  4128   0017C2  2E0B               	decfsz	___awdiv@counter^0,f,c
  4129   0017C4  EFCB  F00B         	goto	l2319
  4130   0017C8                     l2331:
  4131   0017C8  500C               	movf	___awdiv@sign^0,w,c
  4132   0017CA  B4D8               	btfsc	status,2,c
  4133   0017CC  EFEA  F00B         	goto	u931
  4134   0017D0  EFEC  F00B         	goto	u930
  4135   0017D4                     u931:
  4136   0017D4  EFF0  F00B         	goto	l2335
  4137   0017D8                     u930:
  4138   0017D8  6C0D               	negf	___awdiv@quotient^0,c
  4139   0017DA  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  4140   0017DC  B0D8               	btfsc	status,0,c
  4141   0017DE  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  4142   0017E0                     l2335:
  4143   0017E0  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4144   0017E4  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4145   0017E8  0012               	return		;funcret
  4146   0017EA                     __end_of___awdiv:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function _initUSART4 *****************
  4150 ;; Defined at:
  4151 ;;		line 5 in file "../serial.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;Total ram usage:        0 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 1
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_main
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text15
  4180   00214E                     __ptext15:
  4181                           	callstack 0
  4182   00214E                     _initUSART4:
  4183                           	callstack 29
  4184   00214E                     
  4185                           ;../serial.c: 9:     RC0PPS = 0x12;
  4186   00214E  0E12               	movlw	18
  4187   002150  010E               	movlb	14	; () banked
  4188   002152  6F62               	movwf	98,b	;volatile
  4189                           
  4190                           ;../serial.c: 10:     RX4PPS = 0x11;
  4191   002154  0E11               	movlw	17
  4192   002156  6F15               	movwf	21,b	;volatile
  4193   002158                     
  4194                           ; BSR set to: 14
  4195                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4196   002158  97E9               	bcf	233,3,b	;volatile
  4197   00215A                     
  4198                           ; BSR set to: 14
  4199                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  4200   00215A  95E8               	bcf	232,2,b	;volatile
  4201                           
  4202                           ;../serial.c: 14:     SP4BRGL = 103;
  4203   00215C  0E67               	movlw	103
  4204   00215E  6FE5               	movwf	229,b	;volatile
  4205                           
  4206                           ;../serial.c: 15:     SP4BRGH = 0;
  4207   002160  0E00               	movlw	0
  4208   002162  6FE6               	movwf	230,b	;volatile
  4209   002164                     
  4210                           ; BSR set to: 14
  4211                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  4212   002164  89E7               	bsf	231,4,b	;volatile
  4213   002166                     
  4214                           ; BSR set to: 14
  4215                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  4216   002166  8BE8               	bsf	232,5,b	;volatile
  4217   002168                     
  4218                           ; BSR set to: 14
  4219                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  4220   002168  8FE7               	bsf	231,7,b	;volatile
  4221   00216A                     
  4222                           ; BSR set to: 14
  4223   00216A  0012               	return		;funcret
  4224   00216C                     __end_of_initUSART4:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _initDCmotorsPWM *****************
  4228 ;; Defined at:
  4229 ;;		line 5 in file "../dc_motor.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  PWMperiod       2    0[COMRAM] int 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;Total ram usage:        2 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; Hardware stack levels required when called: 1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text16
  4258   002012                     __ptext16:
  4259                           	callstack 0
  4260   002012                     _initDCmotorsPWM:
  4261                           	callstack 29
  4262   002012                     
  4263                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  4264   002012  9485               	bcf	133,2,c	;volatile
  4265                           
  4266                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  4267   002014  9885               	bcf	133,4,c	;volatile
  4268                           
  4269                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  4270   002016  9E83               	bcf	131,7,c	;volatile
  4271                           
  4272                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  4273   002018  9C87               	bcf	135,6,c	;volatile
  4274                           
  4275                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  4276   00201A  947D               	bcf	125,2,c	;volatile
  4277                           
  4278                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  4279   00201C  987D               	bcf	125,4,c	;volatile
  4280                           
  4281                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  4282   00201E  9E7B               	bcf	123,7,c	;volatile
  4283                           
  4284                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  4285   002020  9C7F               	bcf	127,6,c	;volatile
  4286   002022                     
  4287                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  4288   002022  50BD               	movf	189,w,c	;volatile
  4289   002024  0B8F               	andlw	-113
  4290   002026  0930               	iorlw	48
  4291   002028  6EBD               	movwf	189,c	;volatile
  4292                           
  4293                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4294   00202A  0EE0               	movlw	-32
  4295   00202C  16BE               	andwf	190,f,c	;volatile
  4296                           
  4297                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4298   00202E  50BF               	movf	191,w,c	;volatile
  4299   002030  0BF0               	andlw	-16
  4300   002032  0901               	iorlw	1
  4301   002034  6EBF               	movwf	191,c	;volatile
  4302   002036                     
  4303                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  4304   002036  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4305   00203A                     
  4306                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  4307   00203A  8EBD               	bsf	189,7,c	;volatile
  4308                           
  4309                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  4310   00203C  0E0A               	movlw	10
  4311   00203E  010E               	movlb	14	; () banked
  4312   002040  6F74               	movwf	116,b	;volatile
  4313                           
  4314                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  4315   002042  0E0B               	movlw	11
  4316   002044  6F69               	movwf	105,b	;volatile
  4317                           
  4318                           ;../dc_motor.c: 29:     PWM6DCH=0;
  4319   002046  0E00               	movlw	0
  4320   002048  6EA3               	movwf	163,c	;volatile
  4321                           
  4322                           ;../dc_motor.c: 30:     PWM7DCH=0;
  4323   00204A  0E00               	movlw	0
  4324   00204C  6EA0               	movwf	160,c	;volatile
  4325   00204E                     
  4326                           ; BSR set to: 14
  4327                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  4328   00204E  8EA4               	bsf	164,7,c	;volatile
  4329   002050                     
  4330                           ; BSR set to: 14
  4331                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  4332   002050  8EA1               	bsf	161,7,c	;volatile
  4333   002052                     
  4334                           ; BSR set to: 14
  4335   002052  0012               	return		;funcret
  4336   002054                     __end_of_initDCmotorsPWM:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _color_read *****************
  4340 ;; Defined at:
  4341 ;;		line 111 in file "../color.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  rgb             2   11[COMRAM] PTR struct RGB_val
  4344 ;;		 -> main@RGB_recorded(8), 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;Total ram usage:        4 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 4
  4363 ;; This function calls:
  4364 ;;		_color_read_Blue
  4365 ;;		_color_read_Green
  4366 ;;		_color_read_Luminosity
  4367 ;;		_color_read_Red
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text17
  4374   0017EA                     __ptext17:
  4375                           	callstack 0
  4376   0017EA                     _color_read:
  4377                           	callstack 26
  4378   0017EA                     
  4379                           ;../color.c: 111: void color_read(struct RGB_val *rgb);../color.c: 112: {;../color.c: 11
      +                          3:     rgb->L = color_read_Luminosity();
  4380   0017EA  EC6D  F00F         	call	_color_read_Luminosity	;wreg free
  4381   0017EE  C00C  FFD9         	movff	color_read@rgb,fsr2l
  4382   0017F2  C00D  FFDA         	movff	color_read@rgb+1,fsr2h
  4383   0017F6  C005  FFDE         	movff	?_color_read_Luminosity,postinc2
  4384   0017FA  C006  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  4385   0017FE                     
  4386                           ;../color.c: 114:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4387   0017FE  0E09               	movlw	9
  4388   001800  6E0F               	movwf	(??_color_read+1)^0,c
  4389   001802  0E1E               	movlw	30
  4390   001804  6E0E               	movwf	??_color_read^0,c
  4391   001806  0EE4               	movlw	228
  4392   001808                     u2107:
  4393   001808  2EE8               	decfsz	wreg,f,c
  4394   00180A  D7FE               	bra	u2107
  4395   00180C  2E0E               	decfsz	??_color_read^0,f,c
  4396   00180E  D7FC               	bra	u2107
  4397   001810  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4398   001812  D7FA               	bra	u2107
  4399   001814  D000               	nop2	
  4400   001816                     
  4401                           ;../color.c: 115:     rgb->R = color_read_Red();
  4402   001816  EC45  F00F         	call	_color_read_Red	;wreg free
  4403   00181A  EE20 F002          	lfsr	2,2
  4404   00181E  500C               	movf	color_read@rgb^0,w,c
  4405   001820  26D9               	addwf	fsr2l,f,c
  4406   001822  500D               	movf	(color_read@rgb+1)^0,w,c
  4407   001824  22DA               	addwfc	fsr2h,f,c
  4408   001826  C005  FFDE         	movff	?_color_read_Red,postinc2
  4409   00182A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4410                           
  4411                           ;../color.c: 116:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4412   00182E  0E09               	movlw	9
  4413   001830  6E0F               	movwf	(??_color_read+1)^0,c
  4414   001832  0E1E               	movlw	30
  4415   001834  6E0E               	movwf	??_color_read^0,c
  4416   001836  0EE4               	movlw	228
  4417   001838                     u2117:
  4418   001838  2EE8               	decfsz	wreg,f,c
  4419   00183A  D7FE               	bra	u2117
  4420   00183C  2E0E               	decfsz	??_color_read^0,f,c
  4421   00183E  D7FC               	bra	u2117
  4422   001840  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4423   001842  D7FA               	bra	u2117
  4424   001844  D000               	nop2	
  4425   001846                     
  4426                           ;../color.c: 117:     rgb->G = color_read_Green();
  4427   001846  EC95  F00F         	call	_color_read_Green	;wreg free
  4428   00184A  EE20 F004          	lfsr	2,4
  4429   00184E  500C               	movf	color_read@rgb^0,w,c
  4430   001850  26D9               	addwf	fsr2l,f,c
  4431   001852  500D               	movf	(color_read@rgb+1)^0,w,c
  4432   001854  22DA               	addwfc	fsr2h,f,c
  4433   001856  C005  FFDE         	movff	?_color_read_Green,postinc2
  4434   00185A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4435   00185E                     
  4436                           ;../color.c: 118:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4437   00185E  0E09               	movlw	9
  4438   001860  6E0F               	movwf	(??_color_read+1)^0,c
  4439   001862  0E1E               	movlw	30
  4440   001864  6E0E               	movwf	??_color_read^0,c
  4441   001866  0EE4               	movlw	228
  4442   001868                     u2127:
  4443   001868  2EE8               	decfsz	wreg,f,c
  4444   00186A  D7FE               	bra	u2127
  4445   00186C  2E0E               	decfsz	??_color_read^0,f,c
  4446   00186E  D7FC               	bra	u2127
  4447   001870  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4448   001872  D7FA               	bra	u2127
  4449   001874  D000               	nop2	
  4450                           
  4451                           ;../color.c: 119:     rgb->B = color_read_Blue();
  4452   001876  ECBD  F00F         	call	_color_read_Blue	;wreg free
  4453   00187A  EE20 F006          	lfsr	2,6
  4454   00187E  500C               	movf	color_read@rgb^0,w,c
  4455   001880  26D9               	addwf	fsr2l,f,c
  4456   001882  500D               	movf	(color_read@rgb+1)^0,w,c
  4457   001884  22DA               	addwfc	fsr2h,f,c
  4458   001886  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4459   00188A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4460   00188E  0012               	return		;funcret
  4461   001890                     __end_of_color_read:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function _color_read_Red *****************
  4465 ;; Defined at:
  4466 ;;		line 69 in file "../color.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  tmp             2    9[COMRAM] unsigned int 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  2    4[COMRAM] unsigned int 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4484 ;;Total ram usage:        7 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 3
  4487 ;; This function calls:
  4488 ;;		_I2C_2_Master_Read
  4489 ;;		_I2C_2_Master_RepStart
  4490 ;;		_I2C_2_Master_Start
  4491 ;;		_I2C_2_Master_Stop
  4492 ;;		_I2C_2_Master_Write
  4493 ;; This function is called by:
  4494 ;;		_color_read
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text18
  4499   001E8A                     __ptext18:
  4500                           	callstack 0
  4501   001E8A                     _color_read_Red:
  4502                           	callstack 26
  4503   001E8A                     
  4504                           ;../color.c: 71:  unsigned int tmp;;../color.c: 72:  I2C_2_Master_Start();
  4505   001E8A  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4506                           
  4507                           ;../color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  4508   001E8E  0E52               	movlw	82
  4509   001E90  ECCB  F010         	call	_I2C_2_Master_Write
  4510                           
  4511                           ;../color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  4512   001E94  0EB6               	movlw	182
  4513   001E96  ECCB  F010         	call	_I2C_2_Master_Write
  4514                           
  4515                           ;../color.c: 75:  I2C_2_Master_RepStart();
  4516   001E9A  ECD1  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4517                           
  4518                           ;../color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  4519   001E9E  0E53               	movlw	83
  4520   001EA0  ECCB  F010         	call	_I2C_2_Master_Write
  4521                           
  4522                           ;../color.c: 77:  tmp=I2C_2_Master_Read(1);
  4523   001EA4  0E01               	movlw	1
  4524   001EA6  EC2A  F010         	call	_I2C_2_Master_Read
  4525   001EAA  6E07               	movwf	??_color_read_Red^0,c
  4526   001EAC  5007               	movf	??_color_read_Red^0,w,c
  4527   001EAE  6E0A               	movwf	color_read_Red@tmp^0,c
  4528   001EB0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4529                           
  4530                           ;../color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4531   001EB2  0E00               	movlw	0
  4532   001EB4  EC2A  F010         	call	_I2C_2_Master_Read
  4533   001EB8  6E07               	movwf	??_color_read_Red^0,c
  4534   001EBA  5007               	movf	??_color_read_Red^0,w,c
  4535   001EBC  6E09               	movwf	(??_color_read_Red+2)^0,c
  4536   001EBE  6A08               	clrf	(??_color_read_Red+1)^0,c
  4537   001EC0  500A               	movf	color_read_Red@tmp^0,w,c
  4538   001EC2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4539   001EC4  6E0A               	movwf	color_read_Red@tmp^0,c
  4540   001EC6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4541   001EC8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4542   001ECA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4543                           
  4544                           ;../color.c: 79:  I2C_2_Master_Stop();
  4545   001ECC  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4546   001ED0                     
  4547                           ;../color.c: 80:  return tmp;
  4548   001ED0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4549   001ED4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4550   001ED8  0012               	return		;funcret
  4551   001EDA                     __end_of_color_read_Red:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function _color_read_Luminosity *****************
  4555 ;; Defined at:
  4556 ;;		line 55 in file "../color.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  tmp             2    9[COMRAM] unsigned int 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2    4[COMRAM] unsigned int 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;Total ram usage:        7 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 3
  4577 ;; This function calls:
  4578 ;;		_I2C_2_Master_Read
  4579 ;;		_I2C_2_Master_RepStart
  4580 ;;		_I2C_2_Master_Start
  4581 ;;		_I2C_2_Master_Stop
  4582 ;;		_I2C_2_Master_Write
  4583 ;; This function is called by:
  4584 ;;		_color_read
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text19
  4589   001EDA                     __ptext19:
  4590                           	callstack 0
  4591   001EDA                     _color_read_Luminosity:
  4592                           	callstack 26
  4593   001EDA                     
  4594                           ;../color.c: 57:  unsigned int tmp;;../color.c: 58:  I2C_2_Master_Start();
  4595   001EDA  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4596                           
  4597                           ;../color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  4598   001EDE  0E52               	movlw	82
  4599   001EE0  ECCB  F010         	call	_I2C_2_Master_Write
  4600                           
  4601                           ;../color.c: 60:  I2C_2_Master_Write(0xA0 | 0x14);
  4602   001EE4  0EB4               	movlw	180
  4603   001EE6  ECCB  F010         	call	_I2C_2_Master_Write
  4604                           
  4605                           ;../color.c: 61:  I2C_2_Master_RepStart();
  4606   001EEA  ECD1  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4607                           
  4608                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  4609   001EEE  0E53               	movlw	83
  4610   001EF0  ECCB  F010         	call	_I2C_2_Master_Write
  4611                           
  4612                           ;../color.c: 63:  tmp=I2C_2_Master_Read(1);
  4613   001EF4  0E01               	movlw	1
  4614   001EF6  EC2A  F010         	call	_I2C_2_Master_Read
  4615   001EFA  6E07               	movwf	??_color_read_Luminosity^0,c
  4616   001EFC  5007               	movf	??_color_read_Luminosity^0,w,c
  4617   001EFE  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  4618   001F00  6A0B               	clrf	(color_read_Luminosity@tmp+1)^0,c
  4619                           
  4620                           ;../color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4621   001F02  0E00               	movlw	0
  4622   001F04  EC2A  F010         	call	_I2C_2_Master_Read
  4623   001F08  6E07               	movwf	??_color_read_Luminosity^0,c
  4624   001F0A  5007               	movf	??_color_read_Luminosity^0,w,c
  4625   001F0C  6E09               	movwf	(??_color_read_Luminosity+2)^0,c
  4626   001F0E  6A08               	clrf	(??_color_read_Luminosity+1)^0,c
  4627   001F10  500A               	movf	color_read_Luminosity@tmp^0,w,c
  4628   001F12  1008               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  4629   001F14  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  4630   001F16  500B               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  4631   001F18  1009               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  4632   001F1A  6E0B               	movwf	(color_read_Luminosity@tmp+1)^0,c
  4633                           
  4634                           ;../color.c: 65:  I2C_2_Master_Stop();
  4635   001F1C  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4636   001F20                     
  4637                           ;../color.c: 66:  return tmp;
  4638   001F20  C00A  F005         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  4639   001F24  C00B  F006         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  4640   001F28  0012               	return		;funcret
  4641   001F2A                     __end_of_color_read_Luminosity:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _color_read_Green *****************
  4645 ;; Defined at:
  4646 ;;		line 83 in file "../color.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  tmp             2    9[COMRAM] unsigned int 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  2    4[COMRAM] unsigned int 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;Total ram usage:        7 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 3
  4667 ;; This function calls:
  4668 ;;		_I2C_2_Master_Read
  4669 ;;		_I2C_2_Master_RepStart
  4670 ;;		_I2C_2_Master_Start
  4671 ;;		_I2C_2_Master_Stop
  4672 ;;		_I2C_2_Master_Write
  4673 ;; This function is called by:
  4674 ;;		_color_read
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text20
  4679   001F2A                     __ptext20:
  4680                           	callstack 0
  4681   001F2A                     _color_read_Green:
  4682                           	callstack 26
  4683   001F2A                     
  4684                           ;../color.c: 85:  unsigned int tmp;;../color.c: 86:  I2C_2_Master_Start();
  4685   001F2A  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4686                           
  4687                           ;../color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  4688   001F2E  0E52               	movlw	82
  4689   001F30  ECCB  F010         	call	_I2C_2_Master_Write
  4690                           
  4691                           ;../color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  4692   001F34  0EB8               	movlw	184
  4693   001F36  ECCB  F010         	call	_I2C_2_Master_Write
  4694                           
  4695                           ;../color.c: 89:  I2C_2_Master_RepStart();
  4696   001F3A  ECD1  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4697                           
  4698                           ;../color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  4699   001F3E  0E53               	movlw	83
  4700   001F40  ECCB  F010         	call	_I2C_2_Master_Write
  4701                           
  4702                           ;../color.c: 91:  tmp=I2C_2_Master_Read(1);
  4703   001F44  0E01               	movlw	1
  4704   001F46  EC2A  F010         	call	_I2C_2_Master_Read
  4705   001F4A  6E07               	movwf	??_color_read_Green^0,c
  4706   001F4C  5007               	movf	??_color_read_Green^0,w,c
  4707   001F4E  6E0A               	movwf	color_read_Green@tmp^0,c
  4708   001F50  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4709                           
  4710                           ;../color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4711   001F52  0E00               	movlw	0
  4712   001F54  EC2A  F010         	call	_I2C_2_Master_Read
  4713   001F58  6E07               	movwf	??_color_read_Green^0,c
  4714   001F5A  5007               	movf	??_color_read_Green^0,w,c
  4715   001F5C  6E09               	movwf	(??_color_read_Green+2)^0,c
  4716   001F5E  6A08               	clrf	(??_color_read_Green+1)^0,c
  4717   001F60  500A               	movf	color_read_Green@tmp^0,w,c
  4718   001F62  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4719   001F64  6E0A               	movwf	color_read_Green@tmp^0,c
  4720   001F66  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4721   001F68  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4722   001F6A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4723                           
  4724                           ;../color.c: 93:  I2C_2_Master_Stop();
  4725   001F6C  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4726   001F70                     
  4727                           ;../color.c: 94:  return tmp;
  4728   001F70  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4729   001F74  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4730   001F78  0012               	return		;funcret
  4731   001F7A                     __end_of_color_read_Green:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _color_read_Blue *****************
  4735 ;; Defined at:
  4736 ;;		line 97 in file "../color.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  tmp             2    9[COMRAM] unsigned int 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  2    4[COMRAM] unsigned int 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;Total ram usage:        7 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 3
  4757 ;; This function calls:
  4758 ;;		_I2C_2_Master_Read
  4759 ;;		_I2C_2_Master_RepStart
  4760 ;;		_I2C_2_Master_Start
  4761 ;;		_I2C_2_Master_Stop
  4762 ;;		_I2C_2_Master_Write
  4763 ;; This function is called by:
  4764 ;;		_color_read
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text21
  4769   001F7A                     __ptext21:
  4770                           	callstack 0
  4771   001F7A                     _color_read_Blue:
  4772                           	callstack 26
  4773   001F7A                     
  4774                           ;../color.c: 99:  unsigned int tmp;;../color.c: 100:  I2C_2_Master_Start();
  4775   001F7A  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4776                           
  4777                           ;../color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  4778   001F7E  0E52               	movlw	82
  4779   001F80  ECCB  F010         	call	_I2C_2_Master_Write
  4780                           
  4781                           ;../color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  4782   001F84  0EBA               	movlw	186
  4783   001F86  ECCB  F010         	call	_I2C_2_Master_Write
  4784                           
  4785                           ;../color.c: 103:  I2C_2_Master_RepStart();
  4786   001F8A  ECD1  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4787                           
  4788                           ;../color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  4789   001F8E  0E53               	movlw	83
  4790   001F90  ECCB  F010         	call	_I2C_2_Master_Write
  4791                           
  4792                           ;../color.c: 105:  tmp=I2C_2_Master_Read(1);
  4793   001F94  0E01               	movlw	1
  4794   001F96  EC2A  F010         	call	_I2C_2_Master_Read
  4795   001F9A  6E07               	movwf	??_color_read_Blue^0,c
  4796   001F9C  5007               	movf	??_color_read_Blue^0,w,c
  4797   001F9E  6E0A               	movwf	color_read_Blue@tmp^0,c
  4798   001FA0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4799                           
  4800                           ;../color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4801   001FA2  0E00               	movlw	0
  4802   001FA4  EC2A  F010         	call	_I2C_2_Master_Read
  4803   001FA8  6E07               	movwf	??_color_read_Blue^0,c
  4804   001FAA  5007               	movf	??_color_read_Blue^0,w,c
  4805   001FAC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4806   001FAE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4807   001FB0  500A               	movf	color_read_Blue@tmp^0,w,c
  4808   001FB2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4809   001FB4  6E0A               	movwf	color_read_Blue@tmp^0,c
  4810   001FB6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4811   001FB8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4812   001FBA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4813                           
  4814                           ;../color.c: 107:  I2C_2_Master_Stop();
  4815   001FBC  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4816   001FC0                     
  4817                           ;../color.c: 108:  return tmp;
  4818   001FC0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4819   001FC4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4820   001FC8  0012               	return		;funcret
  4821   001FCA                     __end_of_color_read_Blue:
  4822                           	callstack 0
  4823                           
  4824 ;; *************** function _I2C_2_Master_RepStart *****************
  4825 ;; Defined at:
  4826 ;;		line 33 in file "../i2c.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      void 
  4833 ;; Registers used:
  4834 ;;		wreg, status,2, status,0, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;Total ram usage:        0 bytes
  4845 ;; Hardware stack levels used: 1
  4846 ;; Hardware stack levels required when called: 2
  4847 ;; This function calls:
  4848 ;;		_I2C_2_Master_Idle
  4849 ;; This function is called by:
  4850 ;;		_color_read_Luminosity
  4851 ;;		_color_read_Red
  4852 ;;		_color_read_Green
  4853 ;;		_color_read_Blue
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text22
  4858   0021A2                     __ptext22:
  4859                           	callstack 0
  4860   0021A2                     _I2C_2_Master_RepStart:
  4861                           	callstack 26
  4862   0021A2                     
  4863                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  4864   0021A2  EC60  F010         	call	_I2C_2_Master_Idle	;wreg free
  4865   0021A6                     
  4866                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4867   0021A6  010E               	movlb	14	; () banked
  4868   0021A8  83DA               	bsf	218,1,b	;volatile
  4869   0021AA                     
  4870                           ; BSR set to: 14
  4871   0021AA  0012               	return		;funcret
  4872   0021AC                     __end_of_I2C_2_Master_RepStart:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function _I2C_2_Master_Read *****************
  4876 ;; Defined at:
  4877 ;;		line 51 in file "../i2c.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  ack             1    wreg     unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  ack             1    2[COMRAM] unsigned char 
  4882 ;;  tmp             1    3[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      unsigned char 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;Total ram usage:        3 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; Hardware stack levels required when called: 2
  4899 ;; This function calls:
  4900 ;;		_I2C_2_Master_Idle
  4901 ;; This function is called by:
  4902 ;;		_color_read_Luminosity
  4903 ;;		_color_read_Red
  4904 ;;		_color_read_Green
  4905 ;;		_color_read_Blue
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text23
  4910   002054                     __ptext23:
  4911                           	callstack 0
  4912   002054                     _I2C_2_Master_Read:
  4913                           	callstack 26
  4914                           
  4915                           ; BSR set to: 14
  4916                           ;incstack = 0
  4917                           ;I2C_2_Master_Read@ack stored from wreg
  4918   002054  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4919   002056                     
  4920                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  4921   002056  EC60  F010         	call	_I2C_2_Master_Idle	;wreg free
  4922   00205A                     
  4923                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4924   00205A  010E               	movlb	14	; () banked
  4925   00205C  87DA               	bsf	218,3,b	;volatile
  4926                           
  4927                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  4928   00205E  EC60  F010         	call	_I2C_2_Master_Idle	;wreg free
  4929   002062                     
  4930                           ;../i2c.c: 57:   tmp = SSP2BUF;
  4931   002062  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4932                           
  4933                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  4934   002066  EC60  F010         	call	_I2C_2_Master_Idle	;wreg free
  4935   00206A                     
  4936                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4937   00206A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4938   00206C  B4D8               	btfsc	status,2,c
  4939   00206E  EF3B  F010         	goto	u941
  4940   002072  EF3F  F010         	goto	u940
  4941   002076                     u941:
  4942   002076  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4943   002078  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4944   00207A  EF40  F010         	goto	u958
  4945   00207E                     u940:
  4946   00207E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4947   002080                     u958:
  4948   002080  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4949   002082  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4950   002084  010E               	movlb	14	; () banked
  4951   002086  51DA               	movf	218,w,b	;volatile
  4952   002088  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4953   00208A  0BDF               	andlw	-33
  4954   00208C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4955   00208E  6FDA               	movwf	218,b	;volatile
  4956   002090                     
  4957                           ; BSR set to: 14
  4958                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4959   002090  89DA               	bsf	218,4,b	;volatile
  4960   002092                     
  4961                           ; BSR set to: 14
  4962                           ;../i2c.c: 61:   return tmp;
  4963   002092  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4964   002094                     
  4965                           ; BSR set to: 14
  4966   002094  0012               	return		;funcret
  4967   002096                     __end_of_I2C_2_Master_Read:
  4968                           	callstack 0
  4969                           
  4970 ;; *************** function _color_processor_hard *****************
  4971 ;; Defined at:
  4972 ;;		line 152 in file "../color.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  rgb             2   51[COMRAM] PTR struct RGB_val
  4975 ;;		 -> main@RGB_recorded(8), 
  4976 ;;  calibrated      2   53[COMRAM] PTR unsigned int 
  4977 ;;		 -> main@color_calibrated(64), 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  cb              2    0        unsigned int 
  4980 ;;  cg              2    0        unsigned int 
  4981 ;;  cr              2    0        unsigned int 
  4982 ;;  condition_b     1    0        _Bool 
  4983 ;;  condition_g     1    0        _Bool 
  4984 ;;  condition_r     1    0        _Bool 
  4985 ;;  i               2    0        int 
  4986 ;;  b               2    0        unsigned int 
  4987 ;;  g               2    0        unsigned int 
  4988 ;;  r               2    0        unsigned int 
  4989 ;;  maxl            2    0        unsigned int 
  4990 ;;  l               2    0        unsigned int 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2   51[COMRAM] unsigned int 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;Total ram usage:        4 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 2
  5007 ;; This function calls:
  5008 ;;		___flge
  5009 ;;		___flmul
  5010 ;;		___xxtofl
  5011 ;; This function is called by:
  5012 ;;		_main
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text24
  5017   0021C0                     __ptext24:
  5018                           	callstack 0
  5019   0021C0                     _color_processor_hard:
  5020                           	callstack 28
  5021   0021C0  0012               	return		;funcret
  5022   0021C2                     __end_of_color_processor_hard:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function ___xxtofl *****************
  5026 ;; Defined at:
  5027 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  sign            1    wreg     unsigned char 
  5030 ;;  val             4    0[COMRAM] long 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  sign            1    8[COMRAM] unsigned char 
  5033 ;;  arg             4   10[COMRAM] unsigned long 
  5034 ;;  exp             1    9[COMRAM] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  4    0[COMRAM] unsigned char 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;Total ram usage:       14 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 1
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_color_processor_hard
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text25
  5059   00134A                     __ptext25:
  5060                           	callstack 0
  5061   00134A                     ___xxtofl:
  5062                           	callstack 28
  5063                           
  5064                           ;incstack = 0
  5065                           ;___xxtofl@sign stored from wreg
  5066   00134A  6E09               	movwf	___xxtofl@sign^0,c
  5067   00134C  5009               	movf	___xxtofl@sign^0,w,c
  5068   00134E  B4D8               	btfsc	status,2,c
  5069   001350  EFAC  F009         	goto	u1331
  5070   001354  EFAE  F009         	goto	u1330
  5071   001358                     u1331:
  5072   001358  EFD0  F009         	goto	l1127
  5073   00135C                     u1330:
  5074   00135C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5075   00135E  EFB5  F009         	goto	u1340
  5076   001362  EFB3  F009         	goto	u1341
  5077   001366                     u1341:
  5078   001366  EFD0  F009         	goto	l1127
  5079   00136A                     u1340:
  5080   00136A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5081   00136E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5082   001372  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5083   001376  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5084   00137A  1E05               	comf	??___xxtofl^0,f,c
  5085   00137C  1E06               	comf	(??___xxtofl+1)^0,f,c
  5086   00137E  1E07               	comf	(??___xxtofl+2)^0,f,c
  5087   001380  1E08               	comf	(??___xxtofl+3)^0,f,c
  5088   001382  2A05               	incf	??___xxtofl^0,f,c
  5089   001384  0E00               	movlw	0
  5090   001386  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5091   001388  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5092   00138A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5093   00138C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5094   001390  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5095   001394  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5096   001398  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5097   00139C  EFD8  F009         	goto	l2785
  5098   0013A0                     l1127:
  5099   0013A0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5100   0013A4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5101   0013A8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5102   0013AC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5103   0013B0                     l2785:
  5104   0013B0  5001               	movf	___xxtofl@val^0,w,c
  5105   0013B2  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5106   0013B4  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5107   0013B6  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5108   0013B8  A4D8               	btfss	status,2,c
  5109   0013BA  EFE1  F009         	goto	u1351
  5110   0013BE  EFE3  F009         	goto	u1350
  5111   0013C2                     u1351:
  5112   0013C2  EFED  F009         	goto	l2791
  5113   0013C6                     u1350:
  5114   0013C6  0E00               	movlw	0
  5115   0013C8  6E01               	movwf	?___xxtofl^0,c
  5116   0013CA  0E00               	movlw	0
  5117   0013CC  6E02               	movwf	(?___xxtofl+1)^0,c
  5118   0013CE  0E00               	movlw	0
  5119   0013D0  6E03               	movwf	(?___xxtofl+2)^0,c
  5120   0013D2  0E00               	movlw	0
  5121   0013D4  6E04               	movwf	(?___xxtofl+3)^0,c
  5122   0013D6  EF7E  F00A         	goto	l1130
  5123   0013DA                     l2791:
  5124   0013DA  0E96               	movlw	150
  5125   0013DC  6E0A               	movwf	___xxtofl@exp^0,c
  5126   0013DE  EFF7  F009         	goto	l2795
  5127   0013E2                     l2793:
  5128   0013E2  2A0A               	incf	___xxtofl@exp^0,f,c
  5129   0013E4  90D8               	bcf	status,0,c
  5130   0013E6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5131   0013E8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5132   0013EA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5133   0013EC  320B               	rrcf	___xxtofl@arg^0,f,c
  5134   0013EE                     l2795:
  5135   0013EE  0E00               	movlw	0
  5136   0013F0  140B               	andwf	___xxtofl@arg^0,w,c
  5137   0013F2  6E05               	movwf	??___xxtofl^0,c
  5138   0013F4  0E00               	movlw	0
  5139   0013F6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5140   0013F8  6E06               	movwf	(??___xxtofl+1)^0,c
  5141   0013FA  0E00               	movlw	0
  5142   0013FC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5143   0013FE  6E07               	movwf	(??___xxtofl+2)^0,c
  5144   001400  0EFE               	movlw	254
  5145   001402  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5146   001404  6E08               	movwf	(??___xxtofl+3)^0,c
  5147   001406  5005               	movf	??___xxtofl^0,w,c
  5148   001408  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5149   00140A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5150   00140C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5151   00140E  A4D8               	btfss	status,2,c
  5152   001410  EF0C  F00A         	goto	u1361
  5153   001414  EF0E  F00A         	goto	u1360
  5154   001418                     u1361:
  5155   001418  EFF1  F009         	goto	l2793
  5156   00141C                     u1360:
  5157   00141C  EF1C  F00A         	goto	l1134
  5158   001420                     l2797:
  5159   001420  2A0A               	incf	___xxtofl@exp^0,f,c
  5160   001422  0E01               	movlw	1
  5161   001424  260B               	addwf	___xxtofl@arg^0,f,c
  5162   001426  0E00               	movlw	0
  5163   001428  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5164   00142A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5165   00142C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5166   00142E  90D8               	bcf	status,0,c
  5167   001430  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5168   001432  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5169   001434  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5170   001436  320B               	rrcf	___xxtofl@arg^0,f,c
  5171   001438                     l1134:
  5172   001438  0E00               	movlw	0
  5173   00143A  140B               	andwf	___xxtofl@arg^0,w,c
  5174   00143C  6E05               	movwf	??___xxtofl^0,c
  5175   00143E  0E00               	movlw	0
  5176   001440  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5177   001442  6E06               	movwf	(??___xxtofl+1)^0,c
  5178   001444  0E00               	movlw	0
  5179   001446  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5180   001448  6E07               	movwf	(??___xxtofl+2)^0,c
  5181   00144A  0EFF               	movlw	255
  5182   00144C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5183   00144E  6E08               	movwf	(??___xxtofl+3)^0,c
  5184   001450  5005               	movf	??___xxtofl^0,w,c
  5185   001452  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5186   001454  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5187   001456  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5188   001458  A4D8               	btfss	status,2,c
  5189   00145A  EF31  F00A         	goto	u1371
  5190   00145E  EF33  F00A         	goto	u1370
  5191   001462                     u1371:
  5192   001462  EF10  F00A         	goto	l2797
  5193   001466                     u1370:
  5194   001466  EF3B  F00A         	goto	l2805
  5195   00146A                     l2803:
  5196   00146A  060A               	decf	___xxtofl@exp^0,f,c
  5197   00146C  90D8               	bcf	status,0,c
  5198   00146E  360B               	rlcf	___xxtofl@arg^0,f,c
  5199   001470  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5200   001472  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5201   001474  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5202   001476                     l2805:
  5203   001476  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5204   001478  EF40  F00A         	goto	u1381
  5205   00147C  EF42  F00A         	goto	u1380
  5206   001480                     u1381:
  5207   001480  EF4A  F00A         	goto	l1141
  5208   001484                     u1380:
  5209   001484  0E02               	movlw	2
  5210   001486  600A               	cpfslt	___xxtofl@exp^0,c
  5211   001488  EF48  F00A         	goto	u1391
  5212   00148C  EF4A  F00A         	goto	u1390
  5213   001490                     u1391:
  5214   001490  EF35  F00A         	goto	l2803
  5215   001494                     u1390:
  5216   001494                     l1141:
  5217   001494  B00A               	btfsc	___xxtofl@exp^0,0,c
  5218   001496  EF4F  F00A         	goto	u1401
  5219   00149A  EF51  F00A         	goto	u1400
  5220   00149E                     u1401:
  5221   00149E  EF52  F00A         	goto	l2811
  5222   0014A2                     u1400:
  5223   0014A2  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5224   0014A4                     l2811:
  5225   0014A4  90D8               	bcf	status,0,c
  5226   0014A6  320A               	rrcf	___xxtofl@exp^0,f,c
  5227   0014A8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5228   0014AC  6A06               	clrf	(??___xxtofl+1)^0,c
  5229   0014AE  6A07               	clrf	(??___xxtofl+2)^0,c
  5230   0014B0  6A08               	clrf	(??___xxtofl+3)^0,c
  5231   0014B2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5232   0014B6  6A07               	clrf	(??___xxtofl+2)^0,c
  5233   0014B8  6A06               	clrf	(??___xxtofl+1)^0,c
  5234   0014BA  6A05               	clrf	??___xxtofl^0,c
  5235   0014BC  5005               	movf	??___xxtofl^0,w,c
  5236   0014BE  120B               	iorwf	___xxtofl@arg^0,f,c
  5237   0014C0  5006               	movf	(??___xxtofl+1)^0,w,c
  5238   0014C2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5239   0014C4  5007               	movf	(??___xxtofl+2)^0,w,c
  5240   0014C6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5241   0014C8  5008               	movf	(??___xxtofl+3)^0,w,c
  5242   0014CA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5243   0014CC  5009               	movf	___xxtofl@sign^0,w,c
  5244   0014CE  B4D8               	btfsc	status,2,c
  5245   0014D0  EF6C  F00A         	goto	u1411
  5246   0014D4  EF6E  F00A         	goto	u1410
  5247   0014D8                     u1411:
  5248   0014D8  EF76  F00A         	goto	l2821
  5249   0014DC                     u1410:
  5250   0014DC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5251   0014DE  EF75  F00A         	goto	u1420
  5252   0014E2  EF73  F00A         	goto	u1421
  5253   0014E6                     u1421:
  5254   0014E6  EF76  F00A         	goto	l2821
  5255   0014EA                     u1420:
  5256   0014EA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5257   0014EC                     l2821:
  5258   0014EC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5259   0014F0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5260   0014F4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5261   0014F8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5262   0014FC                     l1130:
  5263   0014FC  0012               	return		;funcret
  5264   0014FE                     __end_of___xxtofl:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function ___flmul *****************
  5268 ;; Defined at:
  5269 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  b               4   14[COMRAM] unsigned char 
  5272 ;;  a               4   18[COMRAM] unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  prod            4   33[COMRAM] struct .
  5275 ;;  grs             4   27[COMRAM] unsigned long 
  5276 ;;  temp            2   37[COMRAM] struct .
  5277 ;;  bexp            1   32[COMRAM] unsigned char 
  5278 ;;  aexp            1   31[COMRAM] unsigned char 
  5279 ;;  sign            1   26[COMRAM] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  4   14[COMRAM] unsigned char 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0, prodl, prodh
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5289 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;Total ram usage:       25 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_color_processor_hard
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text26
  5304   0009B2                     __ptext26:
  5305                           	callstack 0
  5306   0009B2                     ___flmul:
  5307                           	callstack 28
  5308   0009B2  5012               	movf	(___flmul@b+3)^0,w,c
  5309   0009B4  0B80               	andlw	128
  5310   0009B6  6E1B               	movwf	___flmul@sign^0,c
  5311   0009B8  5012               	movf	(___flmul@b+3)^0,w,c
  5312   0009BA  2412               	addwf	(___flmul@b+3)^0,w,c
  5313   0009BC  6E21               	movwf	___flmul@bexp^0,c
  5314   0009BE  AE11               	btfss	(___flmul@b+2)^0,7,c
  5315   0009C0  EFE4  F004         	goto	u1091
  5316   0009C4  EFE6  F004         	goto	u1090
  5317   0009C8                     u1091:
  5318   0009C8  EFE7  F004         	goto	l2633
  5319   0009CC                     u1090:
  5320   0009CC  8021               	bsf	___flmul@bexp^0,0,c
  5321   0009CE                     l2633:
  5322   0009CE  5021               	movf	___flmul@bexp^0,w,c
  5323   0009D0  B4D8               	btfsc	status,2,c
  5324   0009D2  EFED  F004         	goto	u1101
  5325   0009D6  EFEF  F004         	goto	u1100
  5326   0009DA                     u1101:
  5327   0009DA  EF02  F005         	goto	l2641
  5328   0009DE                     u1100:
  5329   0009DE  2821               	incf	___flmul@bexp^0,w,c
  5330   0009E0  A4D8               	btfss	status,2,c
  5331   0009E2  EFF5  F004         	goto	u1111
  5332   0009E6  EFF7  F004         	goto	u1110
  5333   0009EA                     u1111:
  5334   0009EA  EFFF  F004         	goto	l2639
  5335   0009EE                     u1110:
  5336   0009EE  0E00               	movlw	0
  5337   0009F0  6E0F               	movwf	___flmul@b^0,c
  5338   0009F2  0E00               	movlw	0
  5339   0009F4  6E10               	movwf	(___flmul@b+1)^0,c
  5340   0009F6  0E00               	movlw	0
  5341   0009F8  6E11               	movwf	(___flmul@b+2)^0,c
  5342   0009FA  0E00               	movlw	0
  5343   0009FC  6E12               	movwf	(___flmul@b+3)^0,c
  5344   0009FE                     l2639:
  5345   0009FE  8E11               	bsf	(___flmul@b+2)^0,7,c
  5346   000A00  EF0A  F005         	goto	l2643
  5347   000A04                     l2641:
  5348   000A04  0E00               	movlw	0
  5349   000A06  6E0F               	movwf	___flmul@b^0,c
  5350   000A08  0E00               	movlw	0
  5351   000A0A  6E10               	movwf	(___flmul@b+1)^0,c
  5352   000A0C  0E00               	movlw	0
  5353   000A0E  6E11               	movwf	(___flmul@b+2)^0,c
  5354   000A10  0E00               	movlw	0
  5355   000A12  6E12               	movwf	(___flmul@b+3)^0,c
  5356   000A14                     l2643:
  5357   000A14  5016               	movf	(___flmul@a+3)^0,w,c
  5358   000A16  0B80               	andlw	128
  5359   000A18  1A1B               	xorwf	___flmul@sign^0,f,c
  5360   000A1A  5016               	movf	(___flmul@a+3)^0,w,c
  5361   000A1C  2416               	addwf	(___flmul@a+3)^0,w,c
  5362   000A1E  6E20               	movwf	___flmul@aexp^0,c
  5363   000A20  AE15               	btfss	(___flmul@a+2)^0,7,c
  5364   000A22  EF15  F005         	goto	u1121
  5365   000A26  EF17  F005         	goto	u1120
  5366   000A2A                     u1121:
  5367   000A2A  EF18  F005         	goto	l2651
  5368   000A2E                     u1120:
  5369   000A2E  8020               	bsf	___flmul@aexp^0,0,c
  5370   000A30                     l2651:
  5371   000A30  5020               	movf	___flmul@aexp^0,w,c
  5372   000A32  B4D8               	btfsc	status,2,c
  5373   000A34  EF1E  F005         	goto	u1131
  5374   000A38  EF20  F005         	goto	u1130
  5375   000A3C                     u1131:
  5376   000A3C  EF33  F005         	goto	l2659
  5377   000A40                     u1130:
  5378   000A40  2820               	incf	___flmul@aexp^0,w,c
  5379   000A42  A4D8               	btfss	status,2,c
  5380   000A44  EF26  F005         	goto	u1141
  5381   000A48  EF28  F005         	goto	u1140
  5382   000A4C                     u1141:
  5383   000A4C  EF30  F005         	goto	l2657
  5384   000A50                     u1140:
  5385   000A50  0E00               	movlw	0
  5386   000A52  6E13               	movwf	___flmul@a^0,c
  5387   000A54  0E00               	movlw	0
  5388   000A56  6E14               	movwf	(___flmul@a+1)^0,c
  5389   000A58  0E00               	movlw	0
  5390   000A5A  6E15               	movwf	(___flmul@a+2)^0,c
  5391   000A5C  0E00               	movlw	0
  5392   000A5E  6E16               	movwf	(___flmul@a+3)^0,c
  5393   000A60                     l2657:
  5394   000A60  8E15               	bsf	(___flmul@a+2)^0,7,c
  5395   000A62  EF3B  F005         	goto	l1086
  5396   000A66                     l2659:
  5397   000A66  0E00               	movlw	0
  5398   000A68  6E13               	movwf	___flmul@a^0,c
  5399   000A6A  0E00               	movlw	0
  5400   000A6C  6E14               	movwf	(___flmul@a+1)^0,c
  5401   000A6E  0E00               	movlw	0
  5402   000A70  6E15               	movwf	(___flmul@a+2)^0,c
  5403   000A72  0E00               	movlw	0
  5404   000A74  6E16               	movwf	(___flmul@a+3)^0,c
  5405   000A76                     l1086:
  5406   000A76  5020               	movf	___flmul@aexp^0,w,c
  5407   000A78  B4D8               	btfsc	status,2,c
  5408   000A7A  EF41  F005         	goto	u1151
  5409   000A7E  EF43  F005         	goto	u1150
  5410   000A82                     u1151:
  5411   000A82  EF4B  F005         	goto	l2663
  5412   000A86                     u1150:
  5413   000A86  5021               	movf	___flmul@bexp^0,w,c
  5414   000A88  A4D8               	btfss	status,2,c
  5415   000A8A  EF49  F005         	goto	u1161
  5416   000A8E  EF4B  F005         	goto	u1160
  5417   000A92                     u1161:
  5418   000A92  EF55  F005         	goto	l2667
  5419   000A96                     u1160:
  5420   000A96                     l2663:
  5421   000A96  0E00               	movlw	0
  5422   000A98  6E0F               	movwf	?___flmul^0,c
  5423   000A9A  0E00               	movlw	0
  5424   000A9C  6E10               	movwf	(?___flmul+1)^0,c
  5425   000A9E  0E00               	movlw	0
  5426   000AA0  6E11               	movwf	(?___flmul+2)^0,c
  5427   000AA2  0E00               	movlw	0
  5428   000AA4  6E12               	movwf	(?___flmul+3)^0,c
  5429   000AA6  EFED  F006         	goto	l1090
  5430   000AAA                     l2667:
  5431   000AAA  5015               	movf	(___flmul@a+2)^0,w,c
  5432   000AAC  020F               	mulwf	___flmul@b^0,c
  5433   000AAE  CFF3 F026          	movff	prodl,___flmul@temp
  5434   000AB2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5435   000AB6  5026               	movf	___flmul@temp^0,w,c
  5436   000AB8  6E1C               	movwf	___flmul@grs^0,c
  5437   000ABA  6A1D               	clrf	(___flmul@grs+1)^0,c
  5438   000ABC  6A1E               	clrf	(___flmul@grs+2)^0,c
  5439   000ABE  6A1F               	clrf	(___flmul@grs+3)^0,c
  5440   000AC0  5027               	movf	(___flmul@temp+1)^0,w,c
  5441   000AC2  6E22               	movwf	___flmul@prod^0,c
  5442   000AC4  6A23               	clrf	(___flmul@prod+1)^0,c
  5443   000AC6  6A24               	clrf	(___flmul@prod+2)^0,c
  5444   000AC8  6A25               	clrf	(___flmul@prod+3)^0,c
  5445   000ACA  5014               	movf	(___flmul@a+1)^0,w,c
  5446   000ACC  0210               	mulwf	(___flmul@b+1)^0,c
  5447   000ACE  CFF3 F026          	movff	prodl,___flmul@temp
  5448   000AD2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5449   000AD6  5026               	movf	___flmul@temp^0,w,c
  5450   000AD8  261C               	addwf	___flmul@grs^0,f,c
  5451   000ADA  0E00               	movlw	0
  5452   000ADC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5453   000ADE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5454   000AE0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5455   000AE2  5027               	movf	(___flmul@temp+1)^0,w,c
  5456   000AE4  2622               	addwf	___flmul@prod^0,f,c
  5457   000AE6  0E00               	movlw	0
  5458   000AE8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5459   000AEA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5460   000AEC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5461   000AEE  5013               	movf	___flmul@a^0,w,c
  5462   000AF0  0211               	mulwf	(___flmul@b+2)^0,c
  5463   000AF2  CFF3 F026          	movff	prodl,___flmul@temp
  5464   000AF6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5465   000AFA  5026               	movf	___flmul@temp^0,w,c
  5466   000AFC  261C               	addwf	___flmul@grs^0,f,c
  5467   000AFE  0E00               	movlw	0
  5468   000B00  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5469   000B02  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5470   000B04  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5471   000B06  5027               	movf	(___flmul@temp+1)^0,w,c
  5472   000B08  2622               	addwf	___flmul@prod^0,f,c
  5473   000B0A  0E00               	movlw	0
  5474   000B0C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5475   000B0E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5476   000B10  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5477   000B12  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5478   000B16  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5479   000B1A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5480   000B1E  6A1C               	clrf	___flmul@grs^0,c
  5481   000B20  5013               	movf	___flmul@a^0,w,c
  5482   000B22  0210               	mulwf	(___flmul@b+1)^0,c
  5483   000B24  CFF3 F026          	movff	prodl,___flmul@temp
  5484   000B28  CFF4 F027          	movff	prodh,___flmul@temp+1
  5485   000B2C  5026               	movf	___flmul@temp^0,w,c
  5486   000B2E  261C               	addwf	___flmul@grs^0,f,c
  5487   000B30  5027               	movf	(___flmul@temp+1)^0,w,c
  5488   000B32  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5489   000B34  0E00               	movlw	0
  5490   000B36  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5491   000B38  0E00               	movlw	0
  5492   000B3A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5493   000B3C  5014               	movf	(___flmul@a+1)^0,w,c
  5494   000B3E  020F               	mulwf	___flmul@b^0,c
  5495   000B40  CFF3 F026          	movff	prodl,___flmul@temp
  5496   000B44  CFF4 F027          	movff	prodh,___flmul@temp+1
  5497   000B48  5026               	movf	___flmul@temp^0,w,c
  5498   000B4A  261C               	addwf	___flmul@grs^0,f,c
  5499   000B4C  5027               	movf	(___flmul@temp+1)^0,w,c
  5500   000B4E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5501   000B50  0E00               	movlw	0
  5502   000B52  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5503   000B54  0E00               	movlw	0
  5504   000B56  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5505   000B58  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5506   000B5C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5507   000B60  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5508   000B64  6A1C               	clrf	___flmul@grs^0,c
  5509   000B66  5013               	movf	___flmul@a^0,w,c
  5510   000B68  020F               	mulwf	___flmul@b^0,c
  5511   000B6A  CFF3 F026          	movff	prodl,___flmul@temp
  5512   000B6E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5513   000B72  5026               	movf	___flmul@temp^0,w,c
  5514   000B74  261C               	addwf	___flmul@grs^0,f,c
  5515   000B76  5027               	movf	(___flmul@temp+1)^0,w,c
  5516   000B78  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5517   000B7A  0E00               	movlw	0
  5518   000B7C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5519   000B7E  0E00               	movlw	0
  5520   000B80  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5521   000B82  5015               	movf	(___flmul@a+2)^0,w,c
  5522   000B84  0210               	mulwf	(___flmul@b+1)^0,c
  5523   000B86  CFF3 F026          	movff	prodl,___flmul@temp
  5524   000B8A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5525   000B8E  5026               	movf	___flmul@temp^0,w,c
  5526   000B90  2622               	addwf	___flmul@prod^0,f,c
  5527   000B92  5027               	movf	(___flmul@temp+1)^0,w,c
  5528   000B94  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5529   000B96  0E00               	movlw	0
  5530   000B98  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5531   000B9A  0E00               	movlw	0
  5532   000B9C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5533   000B9E  5014               	movf	(___flmul@a+1)^0,w,c
  5534   000BA0  0211               	mulwf	(___flmul@b+2)^0,c
  5535   000BA2  CFF3 F026          	movff	prodl,___flmul@temp
  5536   000BA6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5537   000BAA  5026               	movf	___flmul@temp^0,w,c
  5538   000BAC  2622               	addwf	___flmul@prod^0,f,c
  5539   000BAE  5027               	movf	(___flmul@temp+1)^0,w,c
  5540   000BB0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5541   000BB2  0E00               	movlw	0
  5542   000BB4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5543   000BB6  0E00               	movlw	0
  5544   000BB8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5545   000BBA  5015               	movf	(___flmul@a+2)^0,w,c
  5546   000BBC  0211               	mulwf	(___flmul@b+2)^0,c
  5547   000BBE  CFF3 F026          	movff	prodl,___flmul@temp
  5548   000BC2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5549   000BC6  5026               	movf	___flmul@temp^0,w,c
  5550   000BC8  6E17               	movwf	??___flmul^0,c
  5551   000BCA  5027               	movf	(___flmul@temp+1)^0,w,c
  5552   000BCC  6E18               	movwf	(??___flmul+1)^0,c
  5553   000BCE  6A19               	clrf	(??___flmul+2)^0,c
  5554   000BD0  6A1A               	clrf	(??___flmul+3)^0,c
  5555   000BD2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5556   000BD6  C018  F019         	movff	??___flmul+1,??___flmul+2
  5557   000BDA  C017  F018         	movff	??___flmul,??___flmul+1
  5558   000BDE  6A17               	clrf	??___flmul^0,c
  5559   000BE0  5017               	movf	??___flmul^0,w,c
  5560   000BE2  2622               	addwf	___flmul@prod^0,f,c
  5561   000BE4  5018               	movf	(??___flmul+1)^0,w,c
  5562   000BE6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5563   000BE8  5019               	movf	(??___flmul+2)^0,w,c
  5564   000BEA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5565   000BEC  501A               	movf	(??___flmul+3)^0,w,c
  5566   000BEE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5567   000BF0  C01C  F017         	movff	___flmul@grs,??___flmul
  5568   000BF4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5569   000BF8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5570   000BFC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5571   000C00  0E19               	movlw	25
  5572   000C02  EF08  F006         	goto	u1170
  5573   000C06                     u1175:
  5574   000C06  90D8               	bcf	status,0,c
  5575   000C08  321A               	rrcf	(??___flmul+3)^0,f,c
  5576   000C0A  3219               	rrcf	(??___flmul+2)^0,f,c
  5577   000C0C  3218               	rrcf	(??___flmul+1)^0,f,c
  5578   000C0E  3217               	rrcf	??___flmul^0,f,c
  5579   000C10                     u1170:
  5580   000C10  2EE8               	decfsz	wreg,f,c
  5581   000C12  EF03  F006         	goto	u1175
  5582   000C16  5017               	movf	??___flmul^0,w,c
  5583   000C18  2622               	addwf	___flmul@prod^0,f,c
  5584   000C1A  5018               	movf	(??___flmul+1)^0,w,c
  5585   000C1C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5586   000C1E  5019               	movf	(??___flmul+2)^0,w,c
  5587   000C20  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5588   000C22  501A               	movf	(??___flmul+3)^0,w,c
  5589   000C24  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5590   000C26  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5591   000C2A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5592   000C2E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5593   000C32  6A1C               	clrf	___flmul@grs^0,c
  5594   000C34  5020               	movf	___flmul@aexp^0,w,c
  5595   000C36  C021  F017         	movff	___flmul@bexp,??___flmul
  5596   000C3A  6A18               	clrf	(??___flmul+1)^0,c
  5597   000C3C  2617               	addwf	??___flmul^0,f,c
  5598   000C3E  0E00               	movlw	0
  5599   000C40  2218               	addwfc	(??___flmul+1)^0,f,c
  5600   000C42  0E82               	movlw	130
  5601   000C44  2417               	addwf	??___flmul^0,w,c
  5602   000C46  6E26               	movwf	___flmul@temp^0,c
  5603   000C48  0EFF               	movlw	255
  5604   000C4A  2018               	addwfc	(??___flmul+1)^0,w,c
  5605   000C4C  6E27               	movwf	(___flmul@temp+1)^0,c
  5606   000C4E  EF3E  F006         	goto	l2715
  5607   000C52                     l2709:
  5608   000C52  90D8               	bcf	status,0,c
  5609   000C54  3622               	rlcf	___flmul@prod^0,f,c
  5610   000C56  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5611   000C58  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5612   000C5A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5613   000C5C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5614   000C5E  EF33  F006         	goto	u1181
  5615   000C62  EF35  F006         	goto	u1180
  5616   000C66                     u1181:
  5617   000C66  EF36  F006         	goto	l1093
  5618   000C6A                     u1180:
  5619   000C6A  8022               	bsf	___flmul@prod^0,0,c
  5620   000C6C                     l1093:
  5621   000C6C  90D8               	bcf	status,0,c
  5622   000C6E  361C               	rlcf	___flmul@grs^0,f,c
  5623   000C70  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5624   000C72  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5625   000C74  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5626   000C76  0626               	decf	___flmul@temp^0,f,c
  5627   000C78  A0D8               	btfss	status,0,c
  5628   000C7A  0627               	decf	(___flmul@temp+1)^0,f,c
  5629   000C7C                     l2715:
  5630   000C7C  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5631   000C7E  EF43  F006         	goto	u1191
  5632   000C82  EF45  F006         	goto	u1190
  5633   000C86                     u1191:
  5634   000C86  EF29  F006         	goto	l2709
  5635   000C8A                     u1190:
  5636   000C8A  0E00               	movlw	0
  5637   000C8C  6E20               	movwf	___flmul@aexp^0,c
  5638   000C8E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5639   000C90  EF4C  F006         	goto	u1201
  5640   000C94  EF4E  F006         	goto	u1200
  5641   000C98                     u1201:
  5642   000C98  EF72  F006         	goto	l1095
  5643   000C9C                     u1200:
  5644   000C9C  0EFF               	movlw	255
  5645   000C9E  141C               	andwf	___flmul@grs^0,w,c
  5646   000CA0  6E17               	movwf	??___flmul^0,c
  5647   000CA2  0EFF               	movlw	255
  5648   000CA4  141D               	andwf	(___flmul@grs+1)^0,w,c
  5649   000CA6  6E18               	movwf	(??___flmul+1)^0,c
  5650   000CA8  0EFF               	movlw	255
  5651   000CAA  141E               	andwf	(___flmul@grs+2)^0,w,c
  5652   000CAC  6E19               	movwf	(??___flmul+2)^0,c
  5653   000CAE  0E7F               	movlw	127
  5654   000CB0  141F               	andwf	(___flmul@grs+3)^0,w,c
  5655   000CB2  6E1A               	movwf	(??___flmul+3)^0,c
  5656   000CB4  5017               	movf	??___flmul^0,w,c
  5657   000CB6  1018               	iorwf	(??___flmul+1)^0,w,c
  5658   000CB8  1019               	iorwf	(??___flmul+2)^0,w,c
  5659   000CBA  101A               	iorwf	(??___flmul+3)^0,w,c
  5660   000CBC  B4D8               	btfsc	status,2,c
  5661   000CBE  EF63  F006         	goto	u1211
  5662   000CC2  EF65  F006         	goto	u1210
  5663   000CC6                     u1211:
  5664   000CC6  EF69  F006         	goto	l1096
  5665   000CCA                     u1210:
  5666   000CCA                     l2723:
  5667   000CCA  0E01               	movlw	1
  5668   000CCC  6E20               	movwf	___flmul@aexp^0,c
  5669   000CCE  EF72  F006         	goto	l1095
  5670   000CD2                     l1096:
  5671   000CD2  A022               	btfss	___flmul@prod^0,0,c
  5672   000CD4  EF6E  F006         	goto	u1221
  5673   000CD8  EF70  F006         	goto	u1220
  5674   000CDC                     u1221:
  5675   000CDC  EF72  F006         	goto	l1095
  5676   000CE0                     u1220:
  5677   000CE0  EF65  F006         	goto	l2723
  5678   000CE4                     l1095:
  5679   000CE4  5020               	movf	___flmul@aexp^0,w,c
  5680   000CE6  B4D8               	btfsc	status,2,c
  5681   000CE8  EF78  F006         	goto	u1231
  5682   000CEC  EF7A  F006         	goto	u1230
  5683   000CF0                     u1231:
  5684   000CF0  EF9E  F006         	goto	l2735
  5685   000CF4                     u1230:
  5686   000CF4  0E01               	movlw	1
  5687   000CF6  2622               	addwf	___flmul@prod^0,f,c
  5688   000CF8  0E00               	movlw	0
  5689   000CFA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5690   000CFC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5691   000CFE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5692   000D00  A025               	btfss	(___flmul@prod+3)^0,0,c
  5693   000D02  EF85  F006         	goto	u1241
  5694   000D06  EF87  F006         	goto	u1240
  5695   000D0A                     u1241:
  5696   000D0A  EF9E  F006         	goto	l2735
  5697   000D0E                     u1240:
  5698   000D0E  C022  F017         	movff	___flmul@prod,??___flmul
  5699   000D12  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5700   000D16  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5701   000D1A  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5702   000D1E  341A               	rlcf	(??___flmul+3)^0,w,c
  5703   000D20  321A               	rrcf	(??___flmul+3)^0,f,c
  5704   000D22  3219               	rrcf	(??___flmul+2)^0,f,c
  5705   000D24  3218               	rrcf	(??___flmul+1)^0,f,c
  5706   000D26  3217               	rrcf	??___flmul^0,f,c
  5707   000D28  C017  F022         	movff	??___flmul,___flmul@prod
  5708   000D2C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5709   000D30  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5710   000D34  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5711   000D38  4A26               	infsnz	___flmul@temp^0,f,c
  5712   000D3A  2A27               	incf	(___flmul@temp+1)^0,f,c
  5713   000D3C                     l2735:
  5714   000D3C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5715   000D3E  EFA9  F006         	goto	u1251
  5716   000D42  5027               	movf	(___flmul@temp+1)^0,w,c
  5717   000D44  E108               	bnz	u1250
  5718   000D46  2826               	incf	___flmul@temp^0,w,c
  5719   000D48  A0D8               	btfss	status,0,c
  5720   000D4A  EFA9  F006         	goto	u1251
  5721   000D4E  EFAB  F006         	goto	u1250
  5722   000D52                     u1251:
  5723   000D52  EFB5  F006         	goto	l2739
  5724   000D56                     u1250:
  5725   000D56  0E00               	movlw	0
  5726   000D58  6E22               	movwf	___flmul@prod^0,c
  5727   000D5A  0E00               	movlw	0
  5728   000D5C  6E23               	movwf	(___flmul@prod+1)^0,c
  5729   000D5E  0E80               	movlw	128
  5730   000D60  6E24               	movwf	(___flmul@prod+2)^0,c
  5731   000D62  0E7F               	movlw	127
  5732   000D64  6E25               	movwf	(___flmul@prod+3)^0,c
  5733   000D66  EFE3  F006         	goto	l2751
  5734   000D6A                     l2739:
  5735   000D6A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5736   000D6C  EFC2  F006         	goto	u1260
  5737   000D70  5027               	movf	(___flmul@temp+1)^0,w,c
  5738   000D72  E106               	bnz	u1261
  5739   000D74  0426               	decf	___flmul@temp^0,w,c
  5740   000D76  B0D8               	btfsc	status,0,c
  5741   000D78  EFC0  F006         	goto	u1261
  5742   000D7C  EFC2  F006         	goto	u1260
  5743   000D80                     u1261:
  5744   000D80  EFCE  F006         	goto	l1103
  5745   000D84                     u1260:
  5746   000D84  0E00               	movlw	0
  5747   000D86  6E22               	movwf	___flmul@prod^0,c
  5748   000D88  0E00               	movlw	0
  5749   000D8A  6E23               	movwf	(___flmul@prod+1)^0,c
  5750   000D8C  0E00               	movlw	0
  5751   000D8E  6E24               	movwf	(___flmul@prod+2)^0,c
  5752   000D90  0E00               	movlw	0
  5753   000D92  6E25               	movwf	(___flmul@prod+3)^0,c
  5754   000D94  0E00               	movlw	0
  5755   000D96  6E1B               	movwf	___flmul@sign^0,c
  5756   000D98  EFE3  F006         	goto	l2751
  5757   000D9C                     l1103:
  5758   000D9C  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5759   000DA0  0EFF               	movlw	255
  5760   000DA2  1622               	andwf	___flmul@prod^0,f,c
  5761   000DA4  0EFF               	movlw	255
  5762   000DA6  1623               	andwf	(___flmul@prod+1)^0,f,c
  5763   000DA8  0E7F               	movlw	127
  5764   000DAA  1624               	andwf	(___flmul@prod+2)^0,f,c
  5765   000DAC  0E00               	movlw	0
  5766   000DAE  1625               	andwf	(___flmul@prod+3)^0,f,c
  5767   000DB0  A021               	btfss	___flmul@bexp^0,0,c
  5768   000DB2  EFDD  F006         	goto	u1271
  5769   000DB6  EFDF  F006         	goto	u1270
  5770   000DBA                     u1271:
  5771   000DBA  EFE0  F006         	goto	l2749
  5772   000DBE                     u1270:
  5773   000DBE  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5774   000DC0                     l2749:
  5775   000DC0  90D8               	bcf	status,0,c
  5776   000DC2  3021               	rrcf	___flmul@bexp^0,w,c
  5777   000DC4  6E25               	movwf	(___flmul@prod+3)^0,c
  5778   000DC6                     l2751:
  5779   000DC6  501B               	movf	___flmul@sign^0,w,c
  5780   000DC8  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5781   000DCA  C022  F00F         	movff	___flmul@prod,?___flmul
  5782   000DCE  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5783   000DD2  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5784   000DD6  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5785   000DDA                     l1090:
  5786   000DDA  0012               	return		;funcret
  5787   000DDC                     __end_of___flmul:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function ___flge *****************
  5791 ;; Defined at:
  5792 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  ff1             4   39[COMRAM] unsigned char 
  5795 ;;  ff2             4   43[COMRAM] unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;		None               void
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;Total ram usage:       12 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; Hardware stack levels required when called: 1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_color_processor_hard
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text27
  5822   001622                     __ptext27:
  5823                           	callstack 0
  5824   001622                     ___flge:
  5825                           	callstack 28
  5826   001622  0E00               	movlw	0
  5827   001624  1428               	andwf	___flge@ff1^0,w,c
  5828   001626  6E30               	movwf	??___flge^0,c
  5829   001628  0E00               	movlw	0
  5830   00162A  1429               	andwf	(___flge@ff1+1)^0,w,c
  5831   00162C  6E31               	movwf	(??___flge+1)^0,c
  5832   00162E  0E80               	movlw	128
  5833   001630  142A               	andwf	(___flge@ff1+2)^0,w,c
  5834   001632  6E32               	movwf	(??___flge+2)^0,c
  5835   001634  0E7F               	movlw	127
  5836   001636  142B               	andwf	(___flge@ff1+3)^0,w,c
  5837   001638  6E33               	movwf	(??___flge+3)^0,c
  5838   00163A  5030               	movf	??___flge^0,w,c
  5839   00163C  1031               	iorwf	(??___flge+1)^0,w,c
  5840   00163E  1032               	iorwf	(??___flge+2)^0,w,c
  5841   001640  1033               	iorwf	(??___flge+3)^0,w,c
  5842   001642  A4D8               	btfss	status,2,c
  5843   001644  EF26  F00B         	goto	u1281
  5844   001648  EF28  F00B         	goto	u1280
  5845   00164C                     u1281:
  5846   00164C  EF30  F00B         	goto	l2761
  5847   001650                     u1280:
  5848   001650  0E00               	movlw	0
  5849   001652  6E28               	movwf	___flge@ff1^0,c
  5850   001654  0E00               	movlw	0
  5851   001656  6E29               	movwf	(___flge@ff1+1)^0,c
  5852   001658  0E00               	movlw	0
  5853   00165A  6E2A               	movwf	(___flge@ff1+2)^0,c
  5854   00165C  0E00               	movlw	0
  5855   00165E  6E2B               	movwf	(___flge@ff1+3)^0,c
  5856   001660                     l2761:
  5857   001660  0E00               	movlw	0
  5858   001662  142C               	andwf	___flge@ff2^0,w,c
  5859   001664  6E30               	movwf	??___flge^0,c
  5860   001666  0E00               	movlw	0
  5861   001668  142D               	andwf	(___flge@ff2+1)^0,w,c
  5862   00166A  6E31               	movwf	(??___flge+1)^0,c
  5863   00166C  0E80               	movlw	128
  5864   00166E  142E               	andwf	(___flge@ff2+2)^0,w,c
  5865   001670  6E32               	movwf	(??___flge+2)^0,c
  5866   001672  0E7F               	movlw	127
  5867   001674  142F               	andwf	(___flge@ff2+3)^0,w,c
  5868   001676  6E33               	movwf	(??___flge+3)^0,c
  5869   001678  5030               	movf	??___flge^0,w,c
  5870   00167A  1031               	iorwf	(??___flge+1)^0,w,c
  5871   00167C  1032               	iorwf	(??___flge+2)^0,w,c
  5872   00167E  1033               	iorwf	(??___flge+3)^0,w,c
  5873   001680  A4D8               	btfss	status,2,c
  5874   001682  EF45  F00B         	goto	u1291
  5875   001686  EF47  F00B         	goto	u1290
  5876   00168A                     u1291:
  5877   00168A  EF4F  F00B         	goto	l2765
  5878   00168E                     u1290:
  5879   00168E  0E00               	movlw	0
  5880   001690  6E2C               	movwf	___flge@ff2^0,c
  5881   001692  0E00               	movlw	0
  5882   001694  6E2D               	movwf	(___flge@ff2+1)^0,c
  5883   001696  0E00               	movlw	0
  5884   001698  6E2E               	movwf	(___flge@ff2+2)^0,c
  5885   00169A  0E00               	movlw	0
  5886   00169C  6E2F               	movwf	(___flge@ff2+3)^0,c
  5887   00169E                     l2765:
  5888   00169E  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5889   0016A0  EF54  F00B         	goto	u1301
  5890   0016A4  EF56  F00B         	goto	u1300
  5891   0016A8                     u1301:
  5892   0016A8  EF5F  F00B         	goto	l2769
  5893   0016AC                     u1300:
  5894   0016AC  6C28               	negf	___flge@ff1^0,c
  5895   0016AE  1E29               	comf	(___flge@ff1+1)^0,f,c
  5896   0016B0  B0D8               	btfsc	status,0,c
  5897   0016B2  2A29               	incf	(___flge@ff1+1)^0,f,c
  5898   0016B4  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5899   0016B6  B0D8               	btfsc	status,0,c
  5900   0016B8  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5901   0016BA  0E80               	movlw	128
  5902   0016BC  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5903   0016BE                     l2769:
  5904   0016BE  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5905   0016C0  EF64  F00B         	goto	u1311
  5906   0016C4  EF66  F00B         	goto	u1310
  5907   0016C8                     u1311:
  5908   0016C8  EF6F  F00B         	goto	l737
  5909   0016CC                     u1310:
  5910   0016CC  6C2C               	negf	___flge@ff2^0,c
  5911   0016CE  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5912   0016D0  B0D8               	btfsc	status,0,c
  5913   0016D2  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5914   0016D4  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5915   0016D6  B0D8               	btfsc	status,0,c
  5916   0016D8  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5917   0016DA  0E80               	movlw	128
  5918   0016DC  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5919   0016DE                     l737:
  5920   0016DE  0E00               	movlw	0
  5921   0016E0  1A28               	xorwf	___flge@ff1^0,f,c
  5922   0016E2  0E00               	movlw	0
  5923   0016E4  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5924   0016E6  0E00               	movlw	0
  5925   0016E8  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5926   0016EA  0E80               	movlw	128
  5927   0016EC  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5928   0016EE  0E00               	movlw	0
  5929   0016F0  1A2C               	xorwf	___flge@ff2^0,f,c
  5930   0016F2  0E00               	movlw	0
  5931   0016F4  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5932   0016F6  0E00               	movlw	0
  5933   0016F8  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5934   0016FA  0E80               	movlw	128
  5935   0016FC  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5936   0016FE  502C               	movf	___flge@ff2^0,w,c
  5937   001700  5C28               	subwf	___flge@ff1^0,w,c
  5938   001702  502D               	movf	(___flge@ff2+1)^0,w,c
  5939   001704  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5940   001706  502E               	movf	(___flge@ff2+2)^0,w,c
  5941   001708  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5942   00170A  502F               	movf	(___flge@ff2+3)^0,w,c
  5943   00170C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5944   00170E  B0D8               	btfsc	status,0,c
  5945   001710  EF8C  F00B         	goto	u1321
  5946   001714  EF8E  F00B         	goto	u1320
  5947   001718                     u1321:
  5948   001718  EF91  F00B         	goto	l2775
  5949   00171C                     u1320:
  5950   00171C  90D8               	bcf	status,0,c
  5951   00171E  EF92  F00B         	goto	l742
  5952   001722                     l2775:
  5953   001722  80D8               	bsf	status,0,c
  5954   001724                     l742:
  5955   001724  0012               	return		;funcret
  5956   001726                     __end_of___flge:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _color_processor_easy *****************
  5960 ;; Defined at:
  5961 ;;		line 134 in file "../color.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  5964 ;;		 -> main@RGB_recorded(8), 
  5965 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  5966 ;;		 -> main@color_calibrated(64), 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  b               2   14[COMRAM] unsigned int 
  5969 ;;  g               2   12[COMRAM] unsigned int 
  5970 ;;  r               2   10[COMRAM] unsigned int 
  5971 ;;  l               2    8[COMRAM] unsigned int 
  5972 ;;  color           2    0        unsigned int 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  2    0[COMRAM] unsigned int 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5983 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5984 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5985 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;Total ram usage:       16 bytes
  5987 ;; Hardware stack levels used: 1
  5988 ;; Hardware stack levels required when called: 1
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_main
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text28
  5997   0014FE                     __ptext28:
  5998                           	callstack 0
  5999   0014FE                     _color_processor_easy:
  6000                           	callstack 29
  6001   0014FE                     
  6002                           ;../color.c: 134: unsigned int color_processor_easy(struct RGB_val *rgb, unsigned int ca
      +                          librated[]);../color.c: 135: {;../color.c: 136:     unsigned int l = rgb->L;
  6003   0014FE  C001  FFD9         	movff	color_processor_easy@rgb,fsr2l
  6004   001502  C002  FFDA         	movff	color_processor_easy@rgb+1,fsr2h
  6005   001506  CFDE F009          	movff	postinc2,color_processor_easy@l
  6006   00150A  CFDD F00A          	movff	postdec2,color_processor_easy@l+1
  6007   00150E                     
  6008                           ;../color.c: 137:     unsigned int r = rgb->R;
  6009   00150E  EE20 F002          	lfsr	2,2
  6010   001512  5001               	movf	color_processor_easy@rgb^0,w,c
  6011   001514  26D9               	addwf	fsr2l,f,c
  6012   001516  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6013   001518  22DA               	addwfc	fsr2h,f,c
  6014   00151A  CFDE F00B          	movff	postinc2,color_processor_easy@r
  6015   00151E  CFDD F00C          	movff	postdec2,color_processor_easy@r+1
  6016   001522                     
  6017                           ;../color.c: 138:     unsigned int g = rgb->G;
  6018   001522  EE20 F004          	lfsr	2,4
  6019   001526  5001               	movf	color_processor_easy@rgb^0,w,c
  6020   001528  26D9               	addwf	fsr2l,f,c
  6021   00152A  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6022   00152C  22DA               	addwfc	fsr2h,f,c
  6023   00152E  CFDE F00D          	movff	postinc2,color_processor_easy@g
  6024   001532  CFDD F00E          	movff	postdec2,color_processor_easy@g+1
  6025   001536                     
  6026                           ;../color.c: 139:     unsigned int b = rgb->B;
  6027   001536  EE20 F006          	lfsr	2,6
  6028   00153A  5001               	movf	color_processor_easy@rgb^0,w,c
  6029   00153C  26D9               	addwf	fsr2l,f,c
  6030   00153E  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  6031   001540  22DA               	addwfc	fsr2h,f,c
  6032   001542  CFDE F00F          	movff	postinc2,color_processor_easy@b
  6033   001546  CFDD F010          	movff	postdec2,color_processor_easy@b+1
  6034   00154A                     
  6035                           ;../color.c: 140:     unsigned int color;;../color.c: 141:     if (l<calibrated[28]+100 
      +                          && l>calibrated[28]-100){
  6036   00154A  EE20 F038          	lfsr	2,56
  6037   00154E  5003               	movf	color_processor_easy@calibrated^0,w,c
  6038   001550  26D9               	addwf	fsr2l,f,c
  6039   001552  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  6040   001554  22DA               	addwfc	fsr2h,f,c
  6041   001556  CFDE F005          	movff	postinc2,??_color_processor_easy
  6042   00155A  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  6043   00155E  0E64               	movlw	100
  6044   001560  2605               	addwf	??_color_processor_easy^0,f,c
  6045   001562  0E00               	movlw	0
  6046   001564  2206               	addwfc	(??_color_processor_easy+1)^0,f,c
  6047   001566  5005               	movf	??_color_processor_easy^0,w,c
  6048   001568  5C09               	subwf	color_processor_easy@l^0,w,c
  6049   00156A  5006               	movf	(??_color_processor_easy+1)^0,w,c
  6050   00156C  580A               	subwfb	(color_processor_easy@l+1)^0,w,c
  6051   00156E  B0D8               	btfsc	status,0,c
  6052   001570  EFBC  F00A         	goto	u1431
  6053   001574  EFBE  F00A         	goto	u1430
  6054   001578                     u1431:
  6055   001578  EFDF  F00A         	goto	l2897
  6056   00157C                     u1430:
  6057   00157C  EE20 F038          	lfsr	2,56
  6058   001580  5003               	movf	color_processor_easy@calibrated^0,w,c
  6059   001582  26D9               	addwf	fsr2l,f,c
  6060   001584  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  6061   001586  22DA               	addwfc	fsr2h,f,c
  6062   001588  CFDE F005          	movff	postinc2,??_color_processor_easy
  6063   00158C  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  6064   001590  0E9C               	movlw	156
  6065   001592  2405               	addwf	??_color_processor_easy^0,w,c
  6066   001594  6E07               	movwf	(??_color_processor_easy+2)^0,c
  6067   001596  0EFF               	movlw	255
  6068   001598  2006               	addwfc	(??_color_processor_easy+1)^0,w,c
  6069   00159A  6E08               	movwf	(??_color_processor_easy+3)^0,c
  6070   00159C  5009               	movf	color_processor_easy@l^0,w,c
  6071   00159E  5C07               	subwf	(??_color_processor_easy+2)^0,w,c
  6072   0015A0  500A               	movf	(color_processor_easy@l+1)^0,w,c
  6073   0015A2  5808               	subwfb	(??_color_processor_easy+3)^0,w,c
  6074   0015A4  B0D8               	btfsc	status,0,c
  6075   0015A6  EFD7  F00A         	goto	u1441
  6076   0015AA  EFD9  F00A         	goto	u1440
  6077   0015AE                     u1441:
  6078   0015AE  EFDF  F00A         	goto	l2897
  6079   0015B2                     u1440:
  6080   0015B2                     
  6081                           ;../color.c: 142:         return 8;
  6082   0015B2  0E00               	movlw	0
  6083   0015B4  6E02               	movwf	(?_color_processor_easy+1)^0,c
  6084   0015B6  0E08               	movlw	8
  6085   0015B8  6E01               	movwf	?_color_processor_easy^0,c
  6086   0015BA  EF10  F00B         	goto	l67
  6087   0015BE                     l2897:
  6088                           
  6089                           ;../color.c: 144:     if (r>g && r>b){
  6090   0015BE  500B               	movf	color_processor_easy@r^0,w,c
  6091   0015C0  5C0D               	subwf	color_processor_easy@g^0,w,c
  6092   0015C2  500C               	movf	(color_processor_easy@r+1)^0,w,c
  6093   0015C4  580E               	subwfb	(color_processor_easy@g+1)^0,w,c
  6094   0015C6  B0D8               	btfsc	status,0,c
  6095   0015C8  EFE8  F00A         	goto	u1451
  6096   0015CC  EFEA  F00A         	goto	u1450
  6097   0015D0                     u1451:
  6098   0015D0  EF0C  F00B         	goto	l2913
  6099   0015D4                     u1450:
  6100   0015D4  500B               	movf	color_processor_easy@r^0,w,c
  6101   0015D6  5C0F               	subwf	color_processor_easy@b^0,w,c
  6102   0015D8  500C               	movf	(color_processor_easy@r+1)^0,w,c
  6103   0015DA  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  6104   0015DC  B0D8               	btfsc	status,0,c
  6105   0015DE  EFF3  F00A         	goto	u1461
  6106   0015E2  EFF5  F00A         	goto	u1460
  6107   0015E6                     u1461:
  6108   0015E6  EF0C  F00B         	goto	l2913
  6109   0015EA                     u1460:
  6110   0015EA                     
  6111                           ;../color.c: 145:         if (g>b){return 2;}
  6112   0015EA  500D               	movf	color_processor_easy@g^0,w,c
  6113   0015EC  5C0F               	subwf	color_processor_easy@b^0,w,c
  6114   0015EE  500E               	movf	(color_processor_easy@g+1)^0,w,c
  6115   0015F0  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  6116   0015F2  B0D8               	btfsc	status,0,c
  6117   0015F4  EFFE  F00A         	goto	u1471
  6118   0015F8  EF00  F00B         	goto	u1470
  6119   0015FC                     u1471:
  6120   0015FC  EF06  F00B         	goto	l2909
  6121   001600                     u1470:
  6122   001600  0E00               	movlw	0
  6123   001602  6E02               	movwf	(?_color_processor_easy+1)^0,c
  6124   001604  0E02               	movlw	2
  6125   001606  6E01               	movwf	?_color_processor_easy^0,c
  6126   001608  EF10  F00B         	goto	l67
  6127   00160C                     l2909:
  6128   00160C  0E00               	movlw	0
  6129   00160E  6E02               	movwf	(?_color_processor_easy+1)^0,c
  6130   001610  0E01               	movlw	1
  6131   001612  6E01               	movwf	?_color_processor_easy^0,c
  6132   001614  EF10  F00B         	goto	l67
  6133   001618                     l2913:
  6134   001618  0E00               	movlw	0
  6135   00161A  6E02               	movwf	(?_color_processor_easy+1)^0,c
  6136   00161C  0E03               	movlw	3
  6137   00161E  6E01               	movwf	?_color_processor_easy^0,c
  6138   001620                     l67:
  6139   001620  0012               	return		;funcret
  6140   001622                     __end_of_color_processor_easy:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _color_click_init *****************
  6144 ;; Defined at:
  6145 ;;		line 6 in file "../color.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;Total ram usage:        1 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 4
  6166 ;; This function calls:
  6167 ;;		_I2C_2_Master_Init
  6168 ;;		_color_writetoaddr
  6169 ;; This function is called by:
  6170 ;;		_main
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text29
  6175   001E30                     __ptext29:
  6176                           	callstack 0
  6177   001E30                     _color_click_init:
  6178                           	callstack 26
  6179   001E30                     
  6180                           ;../color.c: 9:     I2C_2_Master_Init();
  6181   001E30  EC4B  F010         	call	_I2C_2_Master_Init	;wreg free
  6182   001E34                     
  6183                           ;../color.c: 12:   color_writetoaddr(0x00, 0x01);
  6184   001E34  0E01               	movlw	1
  6185   001E36  6E03               	movwf	color_writetoaddr@value^0,c
  6186   001E38  0E00               	movlw	0
  6187   001E3A  EC87  F010         	call	_color_writetoaddr
  6188   001E3E                     
  6189                           ;../color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6190   001E3E  0E3F               	movlw	63
  6191   001E40  6E05               	movwf	??_color_click_init^0,c
  6192   001E42  0E55               	movlw	85
  6193   001E44                     u2137:
  6194   001E44  2EE8               	decfsz	wreg,f,c
  6195   001E46  D7FE               	bra	u2137
  6196   001E48  2E05               	decfsz	??_color_click_init^0,f,c
  6197   001E4A  D7FC               	bra	u2137
  6198   001E4C  F000               	nop	
  6199   001E4E                     
  6200                           ;../color.c: 16:  color_writetoaddr(0x00, 0x03);
  6201   001E4E  0E03               	movlw	3
  6202   001E50  6E03               	movwf	color_writetoaddr@value^0,c
  6203   001E52  0E00               	movlw	0
  6204   001E54  EC87  F010         	call	_color_writetoaddr
  6205   001E58                     
  6206                           ;../color.c: 19:  color_writetoaddr(0x01, 0xD5);
  6207   001E58  0ED5               	movlw	213
  6208   001E5A  6E03               	movwf	color_writetoaddr@value^0,c
  6209   001E5C  0E01               	movlw	1
  6210   001E5E  EC87  F010         	call	_color_writetoaddr
  6211   001E62                     
  6212                           ;../color.c: 22:     TRISHbits.TRISH1 = 0;
  6213   001E62  9288               	bcf	136,1,c	;volatile
  6214   001E64                     
  6215                           ;../color.c: 23:     TRISDbits.TRISD3 = 0;
  6216   001E64  9684               	bcf	132,3,c	;volatile
  6217   001E66                     
  6218                           ;../color.c: 24:     TRISDbits.TRISD4 = 0;
  6219   001E66  9884               	bcf	132,4,c	;volatile
  6220   001E68                     
  6221                           ;../color.c: 25:     TRISHbits.TRISH0 = 0;
  6222   001E68  9088               	bcf	136,0,c	;volatile
  6223   001E6A                     
  6224                           ;../color.c: 26:     TRISFbits.TRISF0 = 0;
  6225   001E6A  9086               	bcf	134,0,c	;volatile
  6226   001E6C                     
  6227                           ;../color.c: 28:     LATHbits.LATH1 = 1;
  6228   001E6C  8280               	bsf	128,1,c	;volatile
  6229   001E6E                     
  6230                           ;../color.c: 29:     LATDbits.LATD3 = 1;
  6231   001E6E  867C               	bsf	124,3,c	;volatile
  6232   001E70                     
  6233                           ;../color.c: 30:     LATDbits.LATD4 = 0;
  6234   001E70  987C               	bcf	124,4,c	;volatile
  6235   001E72                     
  6236                           ;../color.c: 31:     LATHbits.LATH0 = 0;
  6237   001E72  9080               	bcf	128,0,c	;volatile
  6238   001E74                     
  6239                           ;../color.c: 32:     LATFbits.LATF0 = 0;
  6240   001E74  907E               	bcf	126,0,c	;volatile
  6241   001E76                     
  6242                           ;../color.c: 35:     LATDbits.LATD7=0;
  6243   001E76  9E7C               	bcf	124,7,c	;volatile
  6244   001E78                     
  6245                           ;../color.c: 36:     LATHbits.LATH3=0;
  6246   001E78  9680               	bcf	128,3,c	;volatile
  6247   001E7A                     
  6248                           ;../color.c: 37:     TRISDbits.TRISD7=0;
  6249   001E7A  9E84               	bcf	132,7,c	;volatile
  6250   001E7C                     
  6251                           ;../color.c: 38:     TRISHbits.TRISH3=0;
  6252   001E7C  9688               	bcf	136,3,c	;volatile
  6253   001E7E                     
  6254                           ;../color.c: 40:     TRISFbits.TRISF2=1;
  6255   001E7E  8486               	bsf	134,2,c	;volatile
  6256   001E80                     
  6257                           ;../color.c: 41:     ANSELFbits.ANSELF2=0;
  6258   001E80  010E               	movlb	14	; () banked
  6259   001E82  95B4               	bcf	180,2,b	;volatile
  6260   001E84                     
  6261                           ; BSR set to: 14
  6262                           ;../color.c: 42:     TRISFbits.TRISF3=1;
  6263   001E84  8686               	bsf	134,3,c	;volatile
  6264   001E86                     
  6265                           ; BSR set to: 14
  6266                           ;../color.c: 43:     ANSELFbits.ANSELF3=0;
  6267   001E86  97B4               	bcf	180,3,b	;volatile
  6268   001E88                     
  6269                           ; BSR set to: 14
  6270   001E88  0012               	return		;funcret
  6271   001E8A                     __end_of_color_click_init:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _color_writetoaddr *****************
  6275 ;; Defined at:
  6276 ;;		line 46 in file "../color.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  address         1    wreg     unsigned char 
  6279 ;;  value           1    2[COMRAM] unsigned char 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  address         1    3[COMRAM] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;Total ram usage:        2 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 3
  6298 ;; This function calls:
  6299 ;;		_I2C_2_Master_Start
  6300 ;;		_I2C_2_Master_Stop
  6301 ;;		_I2C_2_Master_Write
  6302 ;; This function is called by:
  6303 ;;		_color_click_init
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text30
  6308   00210E                     __ptext30:
  6309                           	callstack 0
  6310   00210E                     _color_writetoaddr:
  6311                           	callstack 26
  6312                           
  6313                           ; BSR set to: 14
  6314                           ;incstack = 0
  6315                           ;color_writetoaddr@address stored from wreg
  6316   00210E  6E04               	movwf	color_writetoaddr@address^0,c
  6317   002110                     
  6318                           ;../color.c: 46: void color_writetoaddr(char address, char value);../color.c: 47: {;../c
      +                          olor.c: 48:     I2C_2_Master_Start();
  6319   002110  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  6320                           
  6321                           ;../color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  6322   002114  0E52               	movlw	82
  6323   002116  ECCB  F010         	call	_I2C_2_Master_Write
  6324                           
  6325                           ;../color.c: 50:     I2C_2_Master_Write(0x80 | address);
  6326   00211A  5004               	movf	color_writetoaddr@address^0,w,c
  6327   00211C  0980               	iorlw	128
  6328   00211E  ECCB  F010         	call	_I2C_2_Master_Write
  6329                           
  6330                           ;../color.c: 51:     I2C_2_Master_Write(value);
  6331   002122  5003               	movf	color_writetoaddr@value^0,w,c
  6332   002124  ECCB  F010         	call	_I2C_2_Master_Write
  6333                           
  6334                           ;../color.c: 52:     I2C_2_Master_Stop();
  6335   002128  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  6336   00212C  0012               	return		;funcret
  6337   00212E                     __end_of_color_writetoaddr:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _I2C_2_Master_Write *****************
  6341 ;; Defined at:
  6342 ;;		line 45 in file "../i2c.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  data_byte       1    wreg     unsigned char 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  data_byte       1    1[COMRAM] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;Total ram usage:        1 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 2
  6363 ;; This function calls:
  6364 ;;		_I2C_2_Master_Idle
  6365 ;; This function is called by:
  6366 ;;		_color_writetoaddr
  6367 ;;		_color_read_Luminosity
  6368 ;;		_color_read_Red
  6369 ;;		_color_read_Green
  6370 ;;		_color_read_Blue
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text31
  6375   002196                     __ptext31:
  6376                           	callstack 0
  6377   002196                     _I2C_2_Master_Write:
  6378                           	callstack 26
  6379                           
  6380                           ;incstack = 0
  6381                           ;I2C_2_Master_Write@data_byte stored from wreg
  6382   002196  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6383   002198                     
  6384                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  6385   002198  EC60  F010         	call	_I2C_2_Master_Idle	;wreg free
  6386   00219C                     
  6387                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  6388   00219C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6389   0021A0  0012               	return		;funcret
  6390   0021A2                     __end_of_I2C_2_Master_Write:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function _I2C_2_Master_Stop *****************
  6394 ;; Defined at:
  6395 ;;		line 39 in file "../i2c.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;Total ram usage:        0 bytes
  6414 ;; Hardware stack levels used: 1
  6415 ;; Hardware stack levels required when called: 2
  6416 ;; This function calls:
  6417 ;;		_I2C_2_Master_Idle
  6418 ;; This function is called by:
  6419 ;;		_color_writetoaddr
  6420 ;;		_color_read_Luminosity
  6421 ;;		_color_read_Red
  6422 ;;		_color_read_Green
  6423 ;;		_color_read_Blue
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text32
  6428   0021AC                     __ptext32:
  6429                           	callstack 0
  6430   0021AC                     _I2C_2_Master_Stop:
  6431                           	callstack 26
  6432   0021AC                     
  6433                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  6434   0021AC  EC60  F010         	call	_I2C_2_Master_Idle	;wreg free
  6435   0021B0                     
  6436                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6437   0021B0  010E               	movlb	14	; () banked
  6438   0021B2  85DA               	bsf	218,2,b	;volatile
  6439   0021B4                     
  6440                           ; BSR set to: 14
  6441   0021B4  0012               	return		;funcret
  6442   0021B6                     __end_of_I2C_2_Master_Stop:
  6443                           	callstack 0
  6444                           
  6445 ;; *************** function _I2C_2_Master_Start *****************
  6446 ;; Defined at:
  6447 ;;		line 27 in file "../i2c.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;Total ram usage:        0 bytes
  6466 ;; Hardware stack levels used: 1
  6467 ;; Hardware stack levels required when called: 2
  6468 ;; This function calls:
  6469 ;;		_I2C_2_Master_Idle
  6470 ;; This function is called by:
  6471 ;;		_color_writetoaddr
  6472 ;;		_color_read_Luminosity
  6473 ;;		_color_read_Red
  6474 ;;		_color_read_Green
  6475 ;;		_color_read_Blue
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text33
  6480   0021B6                     __ptext33:
  6481                           	callstack 0
  6482   0021B6                     _I2C_2_Master_Start:
  6483                           	callstack 26
  6484   0021B6                     
  6485                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  6486   0021B6  EC60  F010         	call	_I2C_2_Master_Idle	;wreg free
  6487   0021BA                     
  6488                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6489   0021BA  010E               	movlb	14	; () banked
  6490   0021BC  81DA               	bsf	218,0,b	;volatile
  6491   0021BE                     
  6492                           ; BSR set to: 14
  6493   0021BE  0012               	return		;funcret
  6494   0021C0                     __end_of_I2C_2_Master_Start:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function _I2C_2_Master_Idle *****************
  6498 ;; Defined at:
  6499 ;;		line 22 in file "../i2c.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg, status,2, status,0
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;Total ram usage:        1 bytes
  6518 ;; Hardware stack levels used: 1
  6519 ;; Hardware stack levels required when called: 1
  6520 ;; This function calls:
  6521 ;;		Nothing
  6522 ;; This function is called by:
  6523 ;;		_I2C_2_Master_Start
  6524 ;;		_I2C_2_Master_RepStart
  6525 ;;		_I2C_2_Master_Stop
  6526 ;;		_I2C_2_Master_Write
  6527 ;;		_I2C_2_Master_Read
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text34
  6532   0020C0                     __ptext34:
  6533                           	callstack 0
  6534   0020C0                     _I2C_2_Master_Idle:
  6535                           	callstack 26
  6536   0020C0                     l116:
  6537   0020C0  010E               	movlb	14	; () banked
  6538   0020C2  B5D8               	btfsc	216,2,b	;volatile
  6539   0020C4  EF66  F010         	goto	u861
  6540   0020C8  EF68  F010         	goto	u860
  6541   0020CC                     u861:
  6542   0020CC  EF60  F010         	goto	l116
  6543   0020D0                     u860:
  6544   0020D0                     
  6545                           ; BSR set to: 14
  6546   0020D0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6547   0020D4  0E1F               	movlw	31
  6548   0020D6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6549   0020D8  A4D8               	btfss	status,2,c
  6550   0020DA  EF71  F010         	goto	u871
  6551   0020DE  EF73  F010         	goto	u870
  6552   0020E2                     u871:
  6553   0020E2  EF60  F010         	goto	l116
  6554   0020E6                     u870:
  6555   0020E6                     
  6556                           ; BSR set to: 14
  6557   0020E6  0012               	return		;funcret
  6558   0020E8                     __end_of_I2C_2_Master_Idle:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function _I2C_2_Master_Init *****************
  6562 ;; Defined at:
  6563 ;;		line 4 in file "../i2c.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; Hardware stack levels required when called: 1
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_color_click_init
  6588 ;;		_main
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text35
  6593   002096                     __ptext35:
  6594                           	callstack 0
  6595   002096                     _I2C_2_Master_Init:
  6596                           	callstack 28
  6597   002096                     
  6598                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6599   002096  010E               	movlb	14	; () banked
  6600   002098  51D9               	movf	217,w,b	;volatile
  6601   00209A  0BF0               	andlw	-16
  6602   00209C  0908               	iorlw	8
  6603   00209E  6FD9               	movwf	217,b	;volatile
  6604   0020A0                     
  6605                           ; BSR set to: 14
  6606                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6607   0020A0  8BD9               	bsf	217,5,b	;volatile
  6608                           
  6609                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6610   0020A2  0E9F               	movlw	159
  6611   0020A4  6FD6               	movwf	214,b	;volatile
  6612   0020A6                     
  6613                           ; BSR set to: 14
  6614                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6615   0020A6  8A84               	bsf	132,5,c	;volatile
  6616   0020A8                     
  6617                           ; BSR set to: 14
  6618                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6619   0020A8  8C84               	bsf	132,6,c	;volatile
  6620   0020AA                     
  6621                           ; BSR set to: 14
  6622                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6623   0020AA  9BA7               	bcf	167,5,b	;volatile
  6624   0020AC                     
  6625                           ; BSR set to: 14
  6626                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6627   0020AC  9DA7               	bcf	167,6,b	;volatile
  6628                           
  6629                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  6630   0020AE  0E1D               	movlw	29
  6631   0020B0  6F1D               	movwf	29,b	;volatile
  6632                           
  6633                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  6634   0020B2  0E1E               	movlw	30
  6635   0020B4  6F1C               	movwf	28,b	;volatile
  6636                           
  6637                           ;../i2c.c: 18:   RD5PPS=0x1C;
  6638   0020B6  0E1C               	movlw	28
  6639   0020B8  6F6F               	movwf	111,b	;volatile
  6640                           
  6641                           ;../i2c.c: 19:   RD6PPS=0x1B;
  6642   0020BA  0E1B               	movlw	27
  6643   0020BC  6F70               	movwf	112,b	;volatile
  6644   0020BE                     
  6645                           ; BSR set to: 14
  6646   0020BE  0012               	return		;funcret
  6647   0020C0                     __end_of_I2C_2_Master_Init:
  6648                           	callstack 0
  6649                           
  6650 ;; *************** function _Timer0_init *****************
  6651 ;; Defined at:
  6652 ;;		line 62 in file "../rc_servo.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;		None
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;Total ram usage:        0 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; Hardware stack levels required when called: 1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_main
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text36
  6681   00212E                     __ptext36:
  6682                           	callstack 0
  6683   00212E                     _Timer0_init:
  6684                           	callstack 29
  6685   00212E                     
  6686                           ;../rc_servo.c: 64:     T0CON1bits.T0CS=0b010;
  6687   00212E  50D6               	movf	214,w,c	;volatile
  6688   002130  0B1F               	andlw	-225
  6689   002132  0940               	iorlw	64
  6690   002134  6ED6               	movwf	214,c	;volatile
  6691   002136                     
  6692                           ;../rc_servo.c: 65:     T0CON1bits.T0ASYNC=1;
  6693   002136  88D6               	bsf	214,4,c	;volatile
  6694                           
  6695                           ;../rc_servo.c: 66:     T0CON1bits.T0CKPS=0b0111;
  6696   002138  50D6               	movf	214,w,c	;volatile
  6697   00213A  0BF0               	andlw	-16
  6698   00213C  0907               	iorlw	7
  6699   00213E  6ED6               	movwf	214,c	;volatile
  6700   002140                     
  6701                           ;../rc_servo.c: 68:     T0CON0bits.T016BIT=1;
  6702   002140  88D5               	bsf	213,4,c	;volatile
  6703                           
  6704                           ;../rc_servo.c: 71:     TMR0H=(65535-2500)>>8;
  6705   002142  0EF6               	movlw	246
  6706   002144  6ED4               	movwf	212,c	;volatile
  6707                           
  6708                           ;../rc_servo.c: 72:     TMR0L=(unsigned char)(65535-2500);
  6709   002146  0E3B               	movlw	59
  6710   002148  6ED3               	movwf	211,c	;volatile
  6711   00214A                     
  6712                           ;../rc_servo.c: 73:     T0CON0bits.T0EN=1;
  6713   00214A  8ED5               	bsf	213,7,c	;volatile
  6714   00214C  0012               	return		;funcret
  6715   00214E                     __end_of_Timer0_init:
  6716                           	callstack 0
  6717                           
  6718 ;; *************** function _Interrupts_init *****************
  6719 ;; Defined at:
  6720 ;;		line 8 in file "../rc_servo.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;		None
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;		None
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      void 
  6727 ;; Registers used:
  6728 ;;		None
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;Total ram usage:        0 bytes
  6739 ;; Hardware stack levels used: 1
  6740 ;; Hardware stack levels required when called: 1
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_main
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text37
  6749   00216C                     __ptext37:
  6750                           	callstack 0
  6751   00216C                     _Interrupts_init:
  6752                           	callstack 29
  6753   00216C                     
  6754                           ;../rc_servo.c: 12:     INTCONbits.IPEN = 1;
  6755   00216C  8AF2               	bsf	242,5,c	;volatile
  6756                           
  6757                           ;../rc_servo.c: 13:     INTCONbits.PEIE = 1;
  6758   00216E  8CF2               	bsf	242,6,c	;volatile
  6759                           
  6760                           ;../rc_servo.c: 16:     PIE0bits.TMR0IE = 1;
  6761   002170  010E               	movlb	14	; () banked
  6762   002172  8B29               	bsf	41,5,b	;volatile
  6763                           
  6764                           ;../rc_servo.c: 17:     IPR0bits.TMR0IP = 1;
  6765   002174  8B1F               	bsf	31,5,b	;volatile
  6766                           
  6767                           ;../rc_servo.c: 18:     PIR0bits.TMR0IF = 0;
  6768   002176  9B33               	bcf	51,5,b	;volatile
  6769                           
  6770                           ;../rc_servo.c: 20:     PIE2bits.C1IE=1;
  6771   002178  812B               	bsf	43,0,b	;volatile
  6772                           
  6773                           ;../rc_servo.c: 21:     IPR2bits.C1IP=0;
  6774   00217A  9121               	bcf	33,0,b	;volatile
  6775                           
  6776                           ;../rc_servo.c: 22:     PIR2bits.C1IF=0;
  6777   00217C  9135               	bcf	53,0,b	;volatile
  6778                           
  6779                           ;../rc_servo.c: 24:     INTCONbits.GIE = 1;
  6780   00217E  8EF2               	bsf	242,7,c	;volatile
  6781   002180                     
  6782                           ; BSR set to: 14
  6783   002180  0012               	return		;funcret
  6784   002182                     __end_of_Interrupts_init:
  6785                           	callstack 0
  6786                           
  6787 ;; *************** function _HighISR *****************
  6788 ;; Defined at:
  6789 ;;		line 31 in file "../rc_servo.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg, status,2, status,0
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		Interrupt level 2
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	intcode
  6817   000008                     __pintcode:
  6818                           	callstack 0
  6819   000008                     _HighISR:
  6820                           	callstack 26
  6821                           
  6822                           ; BSR set to: 14
  6823                           ;incstack = 0
  6824   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6825   00000A                     
  6826                           ;../rc_servo.c: 33:     if(PIR0bits.TMR0IF||!PORTFbits.RF2){
  6827   00000A  010E               	movlb	14	; () banked
  6828   00000C  BB33               	btfsc	51,5,b	;volatile
  6829   00000E  EF0B  F000         	goto	i2u166_41
  6830   000012  EF0D  F000         	goto	i2u166_40
  6831   000016                     i2u166_41:
  6832   000016  EF14  F000         	goto	i2l3353
  6833   00001A                     i2u166_40:
  6834   00001A                     
  6835                           ; BSR set to: 14
  6836   00001A  B48E               	btfsc	142,2,c	;volatile
  6837   00001C  EF12  F000         	goto	i2u167_41
  6838   000020  EF14  F000         	goto	i2u167_40
  6839   000024                     i2u167_41:
  6840   000024  EF1D  F000         	goto	i2l407
  6841   000028                     i2u167_40:
  6842   000028                     i2l3353:
  6843                           
  6844                           ; BSR set to: 14
  6845                           ;../rc_servo.c: 36:         time++;
  6846   000028  0100               	movlb	0	; () banked
  6847   00002A  4BF4               	infsnz	_time& (0+255),f,b
  6848   00002C  2BF5               	incf	(_time+1)& (0+255),f,b
  6849   00002E                     
  6850                           ; BSR set to: 0
  6851                           ;../rc_servo.c: 39:         TMR0L = 0b11011011;
  6852   00002E  0EDB               	movlw	219
  6853   000030  6ED3               	movwf	211,c	;volatile
  6854   000032                     
  6855                           ; BSR set to: 0
  6856                           ;../rc_servo.c: 40:         TMR0H = 0b00001011;
  6857   000032  0E0B               	movlw	11
  6858   000034  6ED4               	movwf	212,c	;volatile
  6859   000036                     
  6860                           ; BSR set to: 0
  6861                           ;../rc_servo.c: 42:         PIR0bits.TMR0IF=0;
  6862   000036  010E               	movlb	14	; () banked
  6863   000038  9B33               	bcf	51,5,b	;volatile
  6864   00003A                     i2l407:
  6865                           
  6866                           ; BSR set to: 14
  6867   00003A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6868   00003C  0011               	retfie		f
  6869   00003E                     __end_of_HighISR:
  6870                           	callstack 0
  6871   000000                     
  6872                           	psect	rparam
  6873   000000                     
  6874                           	psect	temp
  6875   000056                     btemp:
  6876                           	callstack 0
  6877   000056                     	ds	1
  6878   000000                     int$flags	set	btemp
  6879   000000                     wtemp8	set	btemp+1
  6880   000000                     ttemp5	set	btemp+1
  6881   000000                     ttemp6	set	btemp+4
  6882   000000                     ttemp7	set	btemp+8
  6883                           
  6884                           	psect	idloc
  6885                           
  6886                           ;Config register IDLOC0 @ 0x200000
  6887                           ;	unspecified, using default values
  6888   200000                     	org	2097152
  6889   200000  0FFF               	dw	4095
  6890                           
  6891                           ;Config register IDLOC1 @ 0x200002
  6892                           ;	unspecified, using default values
  6893   200002                     	org	2097154
  6894   200002  0FFF               	dw	4095
  6895                           
  6896                           ;Config register IDLOC2 @ 0x200004
  6897                           ;	unspecified, using default values
  6898   200004                     	org	2097156
  6899   200004  0FFF               	dw	4095
  6900                           
  6901                           ;Config register IDLOC3 @ 0x200006
  6902                           ;	unspecified, using default values
  6903   200006                     	org	2097158
  6904   200006  0FFF               	dw	4095
  6905                           
  6906                           ;Config register IDLOC4 @ 0x200008
  6907                           ;	unspecified, using default values
  6908   200008                     	org	2097160
  6909   200008  0FFF               	dw	4095
  6910                           
  6911                           ;Config register IDLOC5 @ 0x20000A
  6912                           ;	unspecified, using default values
  6913   20000A                     	org	2097162
  6914   20000A  0FFF               	dw	4095
  6915                           
  6916                           ;Config register IDLOC6 @ 0x20000C
  6917                           ;	unspecified, using default values
  6918   20000C                     	org	2097164
  6919   20000C  0FFF               	dw	4095
  6920                           
  6921                           ;Config register IDLOC7 @ 0x20000E
  6922                           ;	unspecified, using default values
  6923   20000E                     	org	2097166
  6924   20000E  0FFF               	dw	4095
  6925                           
  6926                           	psect	config
  6927                           
  6928                           ;Config register CONFIG1L @ 0x300000
  6929                           ;	External Oscillator mode Selection bits
  6930                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6931                           ;	Power-up default value for COSC bits
  6932                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6933   300000                     	org	3145728
  6934   300000  AA                 	db	170
  6935                           
  6936                           ;Config register CONFIG1H @ 0x300001
  6937                           ;	unspecified, using default values
  6938                           ;	Clock Out Enable bit
  6939                           ;	CLKOUTEN = 0x1, unprogrammed default
  6940                           ;	Clock Switch Enable bit
  6941                           ;	CSWEN = 0x1, unprogrammed default
  6942                           ;	Fail-Safe Clock Monitor Enable bit
  6943                           ;	FCMEN = 0x1, unprogrammed default
  6944   300001                     	org	3145729
  6945   300001  FF                 	db	255
  6946                           
  6947                           ;Config register CONFIG2L @ 0x300002
  6948                           ;	unspecified, using default values
  6949                           ;	Master Clear Enable bit
  6950                           ;	MCLRE = 0x1, unprogrammed default
  6951                           ;	Power-up Timer Enable bit
  6952                           ;	PWRTE = 0x1, unprogrammed default
  6953                           ;	Low-power BOR enable bit
  6954                           ;	LPBOREN = 0x1, unprogrammed default
  6955                           ;	Brown-out Reset Enable bits
  6956                           ;	BOREN = 0x3, unprogrammed default
  6957   300002                     	org	3145730
  6958   300002  FF                 	db	255
  6959                           
  6960                           ;Config register CONFIG2H @ 0x300003
  6961                           ;	unspecified, using default values
  6962                           ;	Brown Out Reset Voltage selection bits
  6963                           ;	BORV = 0x3, unprogrammed default
  6964                           ;	ZCD Disable bit
  6965                           ;	ZCD = 0x1, unprogrammed default
  6966                           ;	PPSLOCK bit One-Way Set Enable bit
  6967                           ;	PPS1WAY = 0x1, unprogrammed default
  6968                           ;	Stack Full/Underflow Reset Enable bit
  6969                           ;	STVREN = 0x1, unprogrammed default
  6970                           ;	Debugger Enable bit
  6971                           ;	DEBUG = 0x1, unprogrammed default
  6972                           ;	Extended Instruction Set Enable bit
  6973                           ;	XINST = 0x1, unprogrammed default
  6974   300003                     	org	3145731
  6975   300003  FF                 	db	255
  6976                           
  6977                           ;Config register CONFIG3L @ 0x300004
  6978                           ;	WDT Period Select bits
  6979                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6980                           ;	WDT operating mode
  6981                           ;	WDTE = OFF, WDT Disabled
  6982   300004                     	org	3145732
  6983   300004  9F                 	db	159
  6984                           
  6985                           ;Config register CONFIG3H @ 0x300005
  6986                           ;	unspecified, using default values
  6987                           ;	WDT Window Select bits
  6988                           ;	WDTCWS = 0x7, unprogrammed default
  6989                           ;	WDT input clock selector
  6990                           ;	WDTCCS = 0x7, unprogrammed default
  6991   300005                     	org	3145733
  6992   300005  FF                 	db	255
  6993                           
  6994                           ;Config register CONFIG4L @ 0x300006
  6995                           ;	unspecified, using default values
  6996                           ;	Write Protection Block 0
  6997                           ;	WRT0 = 0x1, unprogrammed default
  6998                           ;	Write Protection Block 1
  6999                           ;	WRT1 = 0x1, unprogrammed default
  7000                           ;	Write Protection Block 2
  7001                           ;	WRT2 = 0x1, unprogrammed default
  7002                           ;	Write Protection Block 3
  7003                           ;	WRT3 = 0x1, unprogrammed default
  7004                           ;	Write Protection Block 3
  7005                           ;	WRT4 = 0x1, unprogrammed default
  7006                           ;	Write Protection Block 3
  7007                           ;	WRT5 = 0x1, unprogrammed default
  7008                           ;	Write Protection Block 3
  7009                           ;	WRT6 = 0x1, unprogrammed default
  7010                           ;	Write Protection Block 3
  7011                           ;	WRT7 = 0x1, unprogrammed default
  7012   300006                     	org	3145734
  7013   300006  FF                 	db	255
  7014                           
  7015                           ;Config register CONFIG4H @ 0x300007
  7016                           ;	unspecified, using default values
  7017                           ;	Configuration Register Write Protection bit
  7018                           ;	WRTC = 0x1, unprogrammed default
  7019                           ;	Boot Block Write Protection bit
  7020                           ;	WRTB = 0x1, unprogrammed default
  7021                           ;	Data EEPROM Write Protection bit
  7022                           ;	WRTD = 0x1, unprogrammed default
  7023                           ;	Scanner Enable bit
  7024                           ;	SCANE = 0x1, unprogrammed default
  7025                           ;	Low Voltage Programming Enable bit
  7026                           ;	LVP = 0x1, unprogrammed default
  7027   300007                     	org	3145735
  7028   300007  FF                 	db	255
  7029                           
  7030                           ;Config register CONFIG5L @ 0x300008
  7031                           ;	unspecified, using default values
  7032                           ;	UserNVM Program Memory Code Protection bit
  7033                           ;	CP = 0x1, unprogrammed default
  7034                           ;	DataNVM Memory Code Protection bit
  7035                           ;	CPD = 0x1, unprogrammed default
  7036   300008                     	org	3145736
  7037   300008  FF                 	db	255
  7038                           
  7039                           ;Config register CONFIG5H @ 0x300009
  7040                           ;	unspecified, using default values
  7041   300009                     	org	3145737
  7042   300009  FF                 	db	255
  7043                           
  7044                           ;Config register CONFIG6L @ 0x30000A
  7045                           ;	unspecified, using default values
  7046                           ;	Table Read Protection Block 0
  7047                           ;	EBTR0 = 0x1, unprogrammed default
  7048                           ;	Table Read Protection Block 1
  7049                           ;	EBTR1 = 0x1, unprogrammed default
  7050                           ;	Table Read Protection Block 2
  7051                           ;	EBTR2 = 0x1, unprogrammed default
  7052                           ;	Table Read Protection Block 3
  7053                           ;	EBTR3 = 0x1, unprogrammed default
  7054                           ;	Table Read Protection Block 4
  7055                           ;	EBTR4 = 0x1, unprogrammed default
  7056                           ;	Table Read Protection Block 5
  7057                           ;	EBTR5 = 0x1, unprogrammed default
  7058                           ;	Table Read Protection Block 6
  7059                           ;	EBTR6 = 0x1, unprogrammed default
  7060                           ;	Table Read Protection Block 7
  7061                           ;	EBTR7 = 0x1, unprogrammed default
  7062   30000A                     	org	3145738
  7063   30000A  FF                 	db	255
  7064                           
  7065                           ;Config register CONFIG6H @ 0x30000B
  7066                           ;	unspecified, using default values
  7067                           ;	Boot Block Table Read Protection bit
  7068                           ;	EBTRB = 0x1, unprogrammed default
  7069   30000B                     	org	3145739
  7070   30000B  FF                 	db	255
  7071                           tosu	equ	0xFFF
  7072                           tosh	equ	0xFFE
  7073                           tosl	equ	0xFFD
  7074                           stkptr	equ	0xFFC
  7075                           pclatu	equ	0xFFB
  7076                           pclath	equ	0xFFA
  7077                           pcl	equ	0xFF9
  7078                           tblptru	equ	0xFF8
  7079                           tblptrh	equ	0xFF7
  7080                           tblptrl	equ	0xFF6
  7081                           tablat	equ	0xFF5
  7082                           prodh	equ	0xFF4
  7083                           prodl	equ	0xFF3
  7084                           indf0	equ	0xFEF
  7085                           postinc0	equ	0xFEE
  7086                           postdec0	equ	0xFED
  7087                           preinc0	equ	0xFEC
  7088                           plusw0	equ	0xFEB
  7089                           fsr0h	equ	0xFEA
  7090                           fsr0l	equ	0xFE9
  7091                           wreg	equ	0xFE8
  7092                           indf1	equ	0xFE7
  7093                           postinc1	equ	0xFE6
  7094                           postdec1	equ	0xFE5
  7095                           preinc1	equ	0xFE4
  7096                           plusw1	equ	0xFE3
  7097                           fsr1h	equ	0xFE2
  7098                           fsr1l	equ	0xFE1
  7099                           bsr	equ	0xFE0
  7100                           indf2	equ	0xFDF
  7101                           postinc2	equ	0xFDE
  7102                           postdec2	equ	0xFDD
  7103                           preinc2	equ	0xFDC
  7104                           plusw2	equ	0xFDB
  7105                           fsr2h	equ	0xFDA
  7106                           fsr2l	equ	0xFD9
  7107                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         90
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      85
    BANK0           160    128     150
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motor_action_return@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    motor_action_return@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse_onesquare@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse_onesquare@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse_fromcard@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse_fromcard@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    opposite_forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    opposite_forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S599DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S599DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK0[64]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), 

    color_processor_easy@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK0[64]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_color_processor_hard
    _motor_action_return->_forward
    _motor_action_return->_left_135
    _motor_action_return->_left_90
    _motor_action_return->_reverse_fromcard
    _motor_action_return->_reverse_onesquare
    _motor_action_return->_right_135
    _motor_action_return->_right_90
    _motor_action_return->_spin_180
    _spin_180->_setMotorPWM
    _motor_action->_forward
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse_fromcard
    _motor_action->_reverse_onesquare
    _motor_action->_right_135
    _motor_action->_right_90
    _stop->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse_onesquare->_setMotorPWM
    _reverse_fromcard->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_processor_hard->___flge
    ___flmul->___xxtofl
    ___flge->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               147   147      0  113080
                                             55 COMRAM     2     2      0
                                              0 BANK0    128   128      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                _motor_action_return
                  _reverse_onesquare
                        _setMotorPWM
                           _spin_180
                               _stop
 ---------------------------------------------------------------------------------
 (1) _motor_action_return                                  8     2      6   42741
                                             33 COMRAM     8     2      6
                            _forward
                           _left_135
                            _left_90
                   _reverse_fromcard
                  _reverse_onesquare
                          _right_135
                           _right_90
                           _spin_180
                               _stop
 ---------------------------------------------------------------------------------
 (1) _spin_180                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   39866
                                             33 COMRAM     8     2      6
                            _forward
                           _left_135
                            _left_90
                   _reverse_fromcard
                  _reverse_onesquare
                          _right_135
                           _right_90
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    9787
                                             25 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    4163
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    3707
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _reverse_onesquare                                    8     4      4    3707
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_fromcard                                     8     4      4    4467
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    4315
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              8     4      4    3859
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2855
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     692
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                28    24      4    3581
                                             51 COMRAM     4     0      4
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                18    14      4     486
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _forward
     _left_135
       _setMotorPWM
     _left_90
       _setMotorPWM
     _reverse_fromcard
       _setMotorPWM
     _reverse_onesquare
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _stop
       _setMotorPWM
   _motor_action_return
     _forward
     _left_135
     _left_90
     _reverse_fromcard
     _reverse_onesquare
     _right_135
     _right_90
     _spin_180
       _setMotorPWM
     _stop
   _reverse_onesquare
   _setMotorPWM
   _spin_180
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      96       5       93.8%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      55       1       90.4%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhlhhh     1B      0       0      33        0.0%
BITBIGSFRhhll       17      0       0      35        0.0%
BITBIGSFRhhlhl      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRllllll      7      0       0      52        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      59        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 13 14:58:56 2022

                _color_read_Red 1E8A                 _color_read_Blue 1F7A                              l51 1F28  
                            l60 1FC8                              l45 1E88                              l54 1ED8  
                            l63 188E                              l48 212C                              l57 1F78  
                            l67 1620                              l84 21C0                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Green 1F2A               ??_Interrupts_init 0001  
                           l113 20BE                             l122 21BE                             l131 21A0  
                           l116 20C0                             l125 21AA                             l134 2094  
                           l119 20E6                             l128 21B4                             l312 1BBC  
                           l216 0120                             l233 0480                             l217 0134  
                           l410 214C                             l322 19D6                             l307 1DA0  
                           l219 0140                             l332 1B1A                             l317 1932  
                           l350 0908                             l327 1A78                             l280 2052  
                           l352 09B0                             l337 1C5E                             l451 216A  
                           l292 1E2E                             l366 1174                             l703 17E8  
                           l287 1348                             l472 210C                             l297 1D00  
                           l742 1724                             l399 2180                             l737 16DE  
             motor_action@color 0022                             u900 1778                             u901 1774  
                           u910 1796                             u911 1792                             u920 17B2  
                           u921 17AE                             u930 17D8                             u931 17D4  
                           u860 20D0                             u940 207E                             u861 20CC  
                           u941 2076                             u870 20E6                             u871 20E2  
                           u880 1738                             u960 1192                             u881 1734  
                           u961 118E                             u890 1752                             u970 1276  
                           u891 174E                             u971 1272                             u958 2080  
                           u984 12D0                             u985 12CC                             u994 133A  
                           u995 1336                             wreg 000FE8                    ___flmul@aexp 0020  
                  ___flmul@bexp 0021                    ___flmul@sign 001B                    ___flmul@temp 0026  
                  ___flmul@prod 0022                            l1103 0D9C                            l1130 14FC  
                          l1141 1494                            l1134 1438                            l1127 13A0  
                          l3001 2140                            l1090 0DDA                            l3003 214A  
                          l3011 2164                            l1093 0C6C                            l3013 2166  
                          l3005 214E                            l2301 1740                            l3101 0658  
                          l3021 0E08                            l1086 0A76                            l1095 0CE4  
                          l3015 2168                            l3007 2158                            l2311 1766  
                          l2303 1744                            l3111 0704                            l3103 0680  
                          l3031 0E8C                            l3023 0E20                            l1096 0CD2  
                          l3009 215A                            l2321 179C                            l2313 1778  
                          l2305 1752                            l3121 0730                            l3105 0698  
                          l3041 0F38                            l3033 0EA0                            l3025 0E34  
                          l3017 0DDC                            l3201 00A4                            l2411 1F70  
                          l2403 1E8A                            l2323 17B2                            l2315 1780  
                          l2331 17C8                            l2307 175A                            l3131 0784  
                          l3107 06AC                            l3051 100C                            l3035 0EB4  
                          l3027 0E4C                            l3019 0DE0                            l3211 00E0  
                          l3203 00AC                            l2341 21BA                            l2405 1ED0  
                          l2333 17D8                            l2325 17BA                            l2317 1788  
                          l2309 175E                            l2501 1CB8                            l2421 1B1C  
                          l3141 0830                            l3133 079C                            l3109 06C0  
                          l3061 1068                            l3053 1024                            l3045 0F50  
                          l3037 0EF8                            l3029 0E74                            l3213 00F2  
                          l3205 00B8                            l2343 2198                            l2351 21A2  
                          l2415 1F7A                            l2335 17E0                            l2327 17BC  
                          l2319 1796                            l2503 1CC0                            l2511 1D22  
                          l2431 1B5C                            l2423 1B3C                            l3151 08A0  
                          l3143 0848                            l3135 07B0                            l3063 107C  
                          l3047 0FA4                            l3039 0F20                            l3311 0462  
                          l3303 042C                            l3231 01A8                            l3223 0142  
                          l3215 012E                            l3207 00C4                            l2345 219C  
                          l2361 206A                            l2353 21A6                            l2417 1FC0  
                          l2409 1F2A                            l2329 17C2                            l2505 1CCC  
                          l2521 1D4E                            l2441 1BA4                            l2433 1B68  
                          l2601 1B04                            l3153 08B4                            l3137 07C4  
                          l3129 075C                            l3081 053C                            l3401 112E  
                          l3065 1090                            l3057 103C                            l3049 0FF8  
                          l3321 04D0                            l3305 0450                            l3241 021C  
                          l3233 01C0                            l3225 014A                            l3217 0136  
                          l3209 00CE                            l2339 21B6                            l2347 21AC  
                          l2363 2090                            l2355 2056                            l2291 2104  
                          l2371 1192                            l2507 1CE8                            l2611 1BE6  
                          l2603 1BBE                            l2523 1D5A                            l2435 1B74  
                          l2531 1890                            l2451 1DCA                            l2443 1DA2  
                          l3403 0962                            l3155 08C8                            l3147 0860  
                          l3139 0808                            l3091 05A8                            l3083 0540  
                          l3163 094C                            l3067 10D4                            l3059 1050  
                          l3075 1118                            l3323 04E8                            l3315 0482  
                          l3251 027A                            l3243 0230                            l3235 01C6  
                          l3227 0178                            l3171 0046                            l2285 20C0  
                          l2349 21B0                            l2701 0BC6                            l2365 2092  
                          l2357 205A                            l2381 12E0                            l2373 11F4  
                          l2621 1C20                            l2613 1BF4                            l2605 1BDE  
                          l2525 1D62                            l2517 1D2A                            l2509 1D02  
                          l2437 1B7C                            l2429 1B44                            l2541 18C4  
                          l2533 18B0                            l2461 1E14                            l2453 1DE2  
                          l2445 1DC2                            l3157 0930                            l3149 0888  
                          l3093 05EC                            l3085 0568                            l3069 10FC  
                          l3325 04EE                            l3317 048A                            l3309 045A  
                          l3261 02D4                            l3253 0292                            l3245 0238  
                          l3237 01DA                            l3229 0190                            l3181 0062  
                          l3173 0052                            l2391 20AA                            l2383 2096  
                          l2287 20D0                            l2711 0C5C                            l2703 0BF0  
                          l2631 09CC                            l2359 2062                            l2295 1726  
                          l2375 123A                            l2623 1C2C                            l2615 1C00  
                          l2527 1D6E                            l2519 1D42                            l2439 1B88  
                          l2551 18FE                            l2543 18D2                            l2455 1DEE  
                          l3095 0614                            l3087 0580                            l2471 1A00  
                          l2463 19D8                            l3327 0518                            l3319 04B8  
                          l3271 0318                            l3263 02E6                            l3255 029E  
                          l3247 0256                            l3239 01F2                            l3191 007C  
                          l3183 0062                            l3175 0056                            l2393 20AC  
                          l2385 20A0                            l2721 0C9C                            l2713 0C6A  
                          l2705 0C26                            l2641 0A04                            l2633 09CE  
                          l2801 142E                            l2297 172A                            l2289 20E8  
                          l2377 125A                            l2369 1176                            l2625 1C48  
                          l2617 1C0C                            l2529 1D8A                            l2553 191A  
                          l2545 18DE                            l2457 1DFA                            l3097 062C  
                          l3089 0594                            l2481 1A3A                            l2473 1A0C  
                          l2465 19F8                            l3329 052C                            l3281 03A6  
                          l3273 0338                            l3265 02EA                            l3257 02B6  
                          l3249 025E                            l3193 0080                            l3185 0068  
                          l3177 005A                            l3169 0042                            l2387 20A6  
                          l2395 2110                            l2731 0D0E                            l2723 0CCA  
                          l2715 0C7C                            l2707 0C34                            l2651 0A30  
                          l2643 0A14                            l2635 09DE                            l2627 09B2  
                          l2811 14A4                            l2803 146A                            l2299 1738  
                          l2379 1276                            l2619 1C18                            l2571 198E  
                          l2563 195C                            l2555 1934                            l2547 18EA  
                          l2539 18B8                            l2459 1E08                            l3099 0640  
                          l2483 1A46                            l2475 1A1A                            l3283 03AC  
                          l3275 0354                            l3267 02FE                            l3291 03C0  
                          l3259 02CC                            l3195 0088                            l3187 006C  
                          l3179 005E                            l2389 20A8                            l2901 15EA  
                          l2741 0D84                            l2733 0D38                            l2717 0C8A  
                          l2709 0C52                            l2661 0A86                            l2653 0A40  
                          l2645 0A1A                            l2637 09EE                            l2629 09BE  
                          l2821 14EC                            l2813 14A8                            l2805 1476  
                          l2397 1EDA                            l2573 1996                            l2565 196A  
                          l2557 1954                            l2581 1A9A                            l2549 18F2  
                          l2485 1A62                            l2477 1A26                            l3285 03B4  
                          l3277 0370                            l3269 030A                            l3293 03D8  
                          l3197 008C                            l3189 0074                            l2831 1E4E  
                          l2903 1600                            l2743 0DA0                            l2751 0DC6  
                          l2727 0CF4                            l2735 0D3C                            l2719 0C8E  
                          l2671 0AC0                            l2663 0A96                            l2655 0A50  
                          l2647 0A20                            l2639 09FE                            l2815 14CC  
                          l2807 1484                            l2399 1F20                            l2495 1C88  
                          l2487 1C60                            l2575 19A2                            l2567 1976  
                          l2591 1ABC                            l2479 1A32                            l3295 03EE  
                          l3287 03BC                            l3279 038A                            l3199 00A0  
                          l2841 1E68                            l2833 1E58                            l2825 1E30  
                          l2913 1618                            l2761 1660                            l2753 0DCA  
                          l2745 0DB0                            l2737 0D56                            l2729 0D00  
                          l2681 0B12                            l2673 0AD6                            l2657 0A60  
                          l2649 0A2E                            l2817 14DC                            l2809 14A2  
                          l2921 21C0                            l2497 1CA0                            l2489 1C80  
                          l2577 19BE                            l2569 1982                            l2593 1AC8  
                          l3297 0402                            l3289 03BE                            l2851 1E72  
                          l2843 1E6A                            l2835 1E62                            l2827 1E34  
                          l2771 16CC                            l2763 168E                            l2747 0DBE  
                          l2739 0D6A                            l2691 0B58                            l2683 0B20  
                          l2675 0AE2                            l2667 0AAA                            l2659 0A66  
                          l2819 14EA                            l2923 21C0                            l2499 1CAC  
                          l2595 1AD4                            l2587 1AA2                            l2579 1A7A  
                          l3299 040C                            l2861 1E7C                            l2853 1E74  
                          l2845 1E6C                            l2837 1E64                            l2829 1E3E  
                          l2909 160C                            l2773 171C                            l2765 169E  
                          l2757 1622                            l2749 0DC0                            l2693 0B72  
                          l2685 0B2C                            l2677 0AFA                            l2669 0AB6  
                          l2781 135C                            l2925 21C0                            l2917 21C0  
                          l2597 1ADC                            l2589 1AAE                            l2863 1E7E  
                          l2855 1E76                            l2847 1E6E                            l2839 1E66  
                          l2775 1722                            l2767 16AC                            l2759 1650  
                          l2695 0B82                            l2687 0B3C                            l2679 0B06  
                          l2791 13DA                            l2783 136A                            l2927 21C0  
                          l2919 21C0                            l2871 17EA                            l2599 1AE8  
                          l2865 1E80                            l2857 1E78                            l2849 1E70  
                          l2881 14FE                            l2769 16BE                            l2697 0B9E  
                          l2689 0B48                            l2793 13E2                            l2785 13B0  
                          l2929 21C0                            l2873 17FE                            l2867 1E84  
                          l2859 1E7A                            l2891 157C                            l2883 150E  
                          l2699 0BAA                            l2795 13EE                            l2787 13C6  
                          l2779 134C                            l2875 1816                            l2869 1E86  
                          l2893 15B2                            l2885 1522                            l2797 1420  
                          l2877 1846                            l2887 1536                            l2799 1422  
                          l2879 185E                            l2991 204E                            l2983 2012  
                          l2897 15BE                            l2889 154A                            l2993 2050  
                          l2985 2022                            l2995 216C                            l2899 15D4  
                          l2987 2036                            l2997 212E                            l2989 203A  
                          l2999 2136                            u1000 1BA4                            u1001 1BA0  
                          u1010 1E2E                            u1011 1E2A                            u1100 09DE  
                          u1020 1A62                            u1101 09DA                            u1021 1A5E  
                          u1110 09EE                            u1030 1CE8                            u1111 09EA  
                          u1031 1CE4                            u1200 0C9C                            u1120 0A2E  
                          u1040 1D8A                            u1201 0C98                            u1121 0A2A  
                          u1041 1D86                            u1210 0CCA                            u1130 0A40  
                          u1050 191A                            u1211 0CC6                            u1131 0A3C  
                          u1051 1916                            u1300 16AC                            u1220 0CE0  
                          u1140 0A50                            u1060 19BE                            u1301 16A8  
                          u1221 0CDC                            u1141 0A4C                            u1061 19BA  
                          u1310 16CC                            u1230 0CF4                            u1150 0A86  
                          u1070 1B04                            u1311 16C8                            u1231 0CF0  
                          u1151 0A82                            u2007 1B76                            u1071 1B00  
                          u1320 171C                            u1240 0D0E                            u1160 0A96  
                          u1400 14A2                            u1080 1C48                            u1321 1718  
                          u1241 0D0A                            u1161 0A92                            u1401 149E  
                          u1081 1C44                            u2017 1BAE                            u1250 0D56  
                          u1170 0C10                            u1090 09CC                            u1410 14DC  
                          u1330 135C                            u1251 0D52                            u1091 09C8  
                          u1411 14D8                            u1331 1358                            u2107 1808  
                          u2027 1D5C                            u1260 0D84                            u1180 0C6A  
                          u1420 14EA                            u1340 136A                            u1500 010E  
                          u1261 0D80                            u1181 0C66                            u1421 14E6  
                          u1341 1366                            u2117 1838                            u2037 1D94  
                          u1501 0106                            u1430 157C                            u1270 0DBE  
                          u1190 0C8A                            u1350 13C6                            u1510 0120  
                          u1431 1578                            u1271 0DBA                            u1191 0C86  
                          u1175 0C06                            u1351 13C2                            u2127 1868  
                          u2047 1990                            u1511 011C                            u1440 15B2  
                          u1280 1650                            u1360 141C                            u1600 0428  
                          u1520 012E                    _BAUD4CONbits 000EE9                            u2137 1E44  
                          u1441 15AE                            u1281 164C                            u1361 1418  
                          u2057 19C8                            u1601 0424                            u1521 012A  
                          _LATE 000F7D                            u1450 15D4                            u1290 168E  
                          u1370 1466                            u1610 043E                            u1530 021C  
                          u1451 15D0                            u1291 168A                            u1371 1462  
                          u2067 1C1A                            u1611 0436                            u1531 0218  
                          _LATG 000F7F                            u1460 15EA                            u1380 1484  
                          u1540 0252                            u1508 0110                            u1461 15E6  
                          u1381 1480                            u2077 1C52                            u1541 024E  
                          u1470 1600                            u1390 1494                            u1630 047C  
                          u1550 02B6                            u1471 15FC                            u1391 1490  
                          u2087 1CBA                            u1631 0478                            u1551 02B2  
                          u1640 0518                            u1560 02CC                            u2097 1CF2  
                          u1641 0514                            u1561 02C8                            u1481 00D8  
                          u1570 02E6                            _T2PR 000FBC                            u1571 02E2  
                          u1707 01E4                            u1491 00EA                            u1628 0440  
                          u1580 0318                            u1581 0314                            u1717 0284  
                          u1590 03EE                            u1807 109A                            u1591 03EA  
                          u1727 03CA                            u1817 1106                            u1737 04DA  
                          u1907 07CE                            u1827 1A34                            u1747 0E12  
                          u1917 083A                            u1837 1A6C                            u1757 0E7E  
                          u1927 0892                            u1847 0572                            u1767 0EBE  
                          u1687 0182                            u1937 08D2                            u1857 05B2  
                          u1777 0F2A                            u1697 01B2                            u1947 093A  
                          u1867 061E                            u1787 1016                            u1957 1E00  
                          u1877 068A                            u1797 105A                            u1967 18EC  
                          u1887 06CA                            u1977 1924                            u1897 078E  
                          u1987 1AD6                            u1997 1B0E                            _main 0042  
                          _time 00F4                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            btemp 0056                            _stop 1DA2  
                          prodh 000FF4                            prodl 000FF3                            start 003E  
        __end_of_color_read_Red 1EDA                 __end_of_HighISR 003E                    ___param_bank 000000  
                         ?_main 0001                 __end_of___awdiv 17EA         ??_color_read_Luminosity 0007  
               __end_of___flmul 0DDC                           ?_stop 001A                 ___awdiv@divisor 0009  
                         i2l407 003A                 ___awdiv@counter 000B                           _TMR0H 000FD4  
                         _TMR0L 000FD3      __end_of_I2C_2_Master_Start 21C0      __end_of_I2C_2_Master_Write 21A2  
               __end_of_left_90 19D8  color_processor_easy@calibrated 0003                 __end_of_forward 1D02  
                         main@j 00BA                           main@k 00C2                           main@m 00BC  
                         tablat 000FF5                           plusw1 000FE3                           plusw2 000FDB  
                         ttemp5 0057                           ttemp6 005A                           ttemp7 005E  
                         stop@i 001F                           status 000FD8                           wtemp8 0057  
       __end_of_color_read_Blue 1FCA           _I2C_2_Master_RepStart 21A2                 ?_color_read_Red 0005  
               __initialization 1FCA  color_processor_hard@calibrated 0036                    __end_of_main 053C  
                  __end_of_stop 1E30                          ??_main 0038                          ??_stop 001E  
                 __activetblptr 000003                    ?_setMotorPWM 000F                ___awdiv@dividend 0007  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l3351 001A                          i2l3353 0028                          i2l3355 002E  
                        i2l3357 0032                          i2l3349 000A                          i2l3359 0036  
                     ??_HighISR 0001        __end_of_color_click_init 1E8A                          _RX4PPS 000E15  
                        _TX4REG 000EE4                __end_of___xxtofl 14FE                   ??_Timer0_init 0001  
              __end_of_left_135 1C60                          ___flge 1622                          ___wmul 20E8  
                     ??___awdiv 000B                       ??___flmul 0017                          clear_0 1FF0  
                        clear_1 2002                ___awdiv@quotient 000D                          isa$std 000001  
                     ??_left_90 001E                __end_of_right_90 1934                   main@time_path 00AA  
                     ??_forward 001E                __end_of_spin_180 1A7A                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003             reverse_onesquare@mL 001A  
           reverse_onesquare@mR 001C                      ___flge@ff1 0028                      ___flge@ff2 002C  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    __accesstop 0060         __end_of__initialization 2008        __end_of_color_read_Green 1F7A  
        ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001                ?_color_read_Blue 0005  
               _Interrupts_init 216C                  __pcstackCOMRAM 0001                    __pidataBANK0 2182  
                 color_read@rgb 000C             __end_of_Timer0_init 214E                      __pbssBANK0 00F4  
                    __pbssBANK1 0100               _color_writetoaddr 210E                    _T2CLKCONbits 000FBF  
          motor_action_return@l 0024            motor_action_return@r 0026                         ?___flge 0028  
            ?_color_writetoaddr 0003                         ?___wmul 0001                  main@color_flag 00B8  
                main@color_name 00C0                  main@color_path 00A0                     right_135@mL 001A  
                   right_135@mR 001C             ??_color_writetoaddr 0004                _reverse_fromcard 1D02  
                     ?___xxtofl 0001   __end_of_color_read_Luminosity 1F2A                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                       ?_left_135 001A  
                    _color_read 17EA        motor_action_return@color 0022         __end_of_Interrupts_init 2182  
        color_writetoaddr@value 0003                ??_color_read_Red 0007                         _HighISR 0008  
     __end_of_color_writetoaddr 212E        color_read_Luminosity@tmp 000A              _I2C_2_Master_Start 21B6  
                    _initUSART4 214E              _I2C_2_Master_Write 2196                       ?_right_90 001A  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 212E                       ?_spin_180 001A                         ___awdiv 1726  
                       ___flmul 09B2             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                    _off_period 004E                         __pcinit 1FCA                         __ramtop 0E00  
                       __ptext0 0042                         __ptext1 0DDC                         __ptext2 19D8  
                       __ptext3 053C                         __ptext4 1DA2                         __ptext5 1890  
                       __ptext6 1A7A                         __ptext7 1B1C                         __ptext8 1D02  
                       __ptext9 1934                         _left_90 1934                       _T2CONbits 000FBD  
                       _forward 1C60                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
     main@lowerbound_calibrated 00B4                   ?_motor_action 0022                   _RxBufWriteCnt 0055  
          ??_I2C_2_Master_Start 0002                      ??_left_135 001E             _motor_action_return 0DDC  
          ??_I2C_2_Master_Write 0002            end_of_initialization 2008               __end_of_right_135 1B1C  
            setMotorPWM@PWMduty 0018               ?_color_click_init 0001    __end_of_color_processor_easy 1622  
  __end_of_color_processor_hard 21C2                      ??_right_90 001E              ??_color_click_init 0005  
                    ??_spin_180 001E                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
          ?_motor_action_return 0022                      main@F14643 00EA                      main@F14651 00E0  
               _initDCmotorsPWM 2012                       _PORTFbits 000F8E                  ??_motor_action 0028  
                 ___xxtofl@sign 0009                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88              reverse_fromcard@mL 001A              reverse_fromcard@mR 001C  
                   ?_color_read 000C        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
              ?_Interrupts_init 0001                     ___flmul@grs 001C                      left_135@mL 001A  
                    left_135@mR 001C                    _EUSART4RXbuf 003A                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0005                     ?_initUSART4 0001                      main@motorL 00CE  
                    main@motorR 00D7              ??_color_read_Green 0007           ??_motor_action_return 0028  
                __end_of___flge 1726                  __end_of___wmul 210E             start_initialization 1FCA  
                 _TxBufWriteCnt 0053        __end_of_reverse_fromcard 1DA2             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 2054                        ??___flge 0030                        ??___wmul 0005  
                   __pdataBANK0 00E0              reverse_onesquare@i 0020                       ___flmul@a 0013  
                     ___flmul@b 000F                     __pbssCOMRAM 003A            _color_processor_easy 14FE  
          _color_processor_hard 21C0                   __pcstackBANK0 0060                        ?_HighISR 0001  
       color_processor_easy@rgb 0001         color_processor_hard@rgb 0034           color_processor_easy@b 000F  
         color_processor_easy@g 000D           color_processor_easy@l 0009           color_processor_easy@r 000B  
          __end_of_motor_action 09B2                    ?_Timer0_init 0001                       __pintcode 0008  
                      ?___awdiv 0007                        ?___flmul 000F                      right_135@i 0020  
                    right_90@mL 001A                      right_90@mR 001C            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_left_90 001A                        ?_forward 001A  
             _I2C_2_Master_Idle 20C0           ?_color_processor_easy 0001           ?_color_processor_hard 0034  
              main@RGB_recorded 00C6               _I2C_2_Master_Init 2096               _I2C_2_Master_Read 2054  
             _I2C_2_Master_Stop 21AC                    _RxBufReadCnt 0054              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
         _color_read_Luminosity 1EDA              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                     _on_period 0050                        _LATGbits 000F7F                        _LATHbits 000F80  
                     _right_135 1A7A                        _IPR0bits 000E1F                        _IPR2bits 000E21  
                      _PIE0bits 000E29                        _PIE2bits 000E2B                      spin_180@mL 001A  
                    spin_180@mR 001C                        i2u166_40 001A                        i2u166_41 0016  
                      i2u167_40 0028                        i2u167_41 0024                        _PIR0bits 000E33  
                      _PIR2bits 000E35                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
                      _SSP2CON2 000EDA                        _SSP2STAT 000ED8               _reverse_onesquare 1B1C  
     __end_of_I2C_2_Master_Idle 20E8              ?_reverse_onesquare 001A       __end_of_I2C_2_Master_Init 20C0  
     __end_of_I2C_2_Master_Read 2096               ___wmul@multiplier 0001               reverse_fromcard@i 0020  
                     main@k_878 00C4       __end_of_I2C_2_Master_Stop 21B6                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002                       left_135@i 0020                       left_90@mL 001A  
                     left_90@mR 001C            main@color_calibrated 0060               ??_color_read_Blue 0007  
                  _TxBufReadCnt 0052             ??_reverse_onesquare 001E       main@upperbound_calibrated 00B6  
                  ??_color_read 000E                       copy_data0 1FDE   __end_of_I2C_2_Master_RepStart 21AC  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 134A                      ?_right_135 001A  
                  ??_initUSART4 0001                        __Hrparam 0000                        __Lrparam 0000  
     __end_of_reverse_onesquare 1BBE                       forward@mL 001A                       forward@mR 001C  
            __end_of_color_read 1890                      _ANSELDbits 000EA7          ??_color_processor_easy 0005  
        ??_color_processor_hard 0038                      _ANSELFbits 000EB4                        ___xxtofl 134A  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6          ?_color_read_Luminosity 0005  
            __end_of_initUSART4 216C                        __ptext10 1BBE                        __ptext11 1C60  
                      __ptext20 1F2A                        __ptext12 1176                        __ptext21 1F7A  
                      __ptext13 20E8                        __ptext30 210E                        __ptext22 21A2  
                      __ptext14 1726                        __ptext31 2196                        __ptext23 2054  
                      __ptext15 214E                        __ptext32 21AC                        __ptext24 21C0  
                      __ptext16 2012                        __ptext33 21B6                        __ptext25 134A  
                      __ptext17 17EA                        __ptext34 20C0                        __ptext26 09B2  
                      __ptext18 1E8A                        __ptext35 2096                        __ptext27 1622  
                      __ptext19 1EDA                        __ptext36 212E                        __ptext28 14FE  
                      __ptext37 216C                        __ptext29 1E30                       right_90@i 0020  
                      _left_135 1BBE                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
   __end_of_motor_action_return 1176                        _right_90 1890               ?_reverse_fromcard 001A  
                     spin_180@i 0020                        _spin_180 19D8                        isa$xinst 000000  
            ??_reverse_fromcard 001E                      _RC4STAbits 000EE7                        int$flags 0056  
                 motor_action@l 0024                   motor_action@r 0026                        left_90@i 0020  
               main@time_return 00BE                      _INTCONbits 000FF2                    _motor_action 053C  
                      forward@i 0020                     _setMotorPWM 1176                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                     ??_right_135 001E  
              _color_click_init 1E30                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                    _TX4STAbits 000EE8  
