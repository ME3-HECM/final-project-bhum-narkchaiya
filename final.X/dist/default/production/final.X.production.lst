

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 19:24:48 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.35
    54                           ; Generated 05/05/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _TX4REG	set	3812
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _LATGbits	set	3967
    92   000000                     _LATEbits	set	3965
    93   000000                     _TRISGbits	set	3975
    94   000000                     _TRISEbits	set	3973
    95   000000                     _LATFbits	set	3966
    96   000000                     _TRISFbits	set	3974
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _LATDbits	set	3964
   105   000000                     _LATHbits	set	3968
   106   000000                     _TRISDbits	set	3972
   107   000000                     _TRISHbits	set	3976
   108   000000                     _PORTFbits	set	3982
   109   000000                     _TRISCbits	set	3971
   110   000000                     _RC4REG	set	3811
   111   000000                     _SP4BRGL	set	3813
   112   000000                     _TX4STAbits	set	3816
   113   000000                     _BAUD4CONbits	set	3817
   114   000000                     _LATCbits	set	3963
   115   000000                     _SSP2CON2	set	3802
   116   000000                     _SSP2STAT	set	3800
   117   000000                     _ANSELFbits	set	3764
   118   000000                     _SSP2BUF	set	3797
   119   000000                     _PIE0bits	set	3625
   120   000000                     _RC7PPS	set	3689
   121   000000                     _RD5PPS	set	3695
   122   000000                     _RE2PPS	set	3700
   123   000000                     _RD6PPS	set	3696
   124   000000                     _PWM7DCH	set	4000
   125   000000                     _PWM6DCH	set	4003
   126   000000                     _T2PR	set	4028
   127   000000                     _T2CONbits	set	4029
   128   000000                     _TMR0L	set	4051
   129   000000                     _TMR0H	set	4052
   130   000000                     _T0CON0bits	set	4053
   131   000000                     _T0CON1bits	set	4054
   132   000000                     _INTCONbits	set	4082
   133   000000                     _T2CLKCONbits	set	4031
   134   000000                     _T2HLTbits	set	4030
   135   000000                     _PWM6CONbits	set	4004
   136   000000                     _PWM7CONbits	set	4001
   137   000000                     _PIR0bits	set	3635
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140                           
   141                           	psect	smallconst
   142   000E00                     __psmallconst:
   143                           	callstack 0
   144   000E00  00                 	db	0
   145   000E01                     STR_1:
   146   000E01  25                 	db	37
   147   000E02  64                 	db	100	;'d'
   148   000E03  20                 	db	32
   149   000E04  25                 	db	37
   150   000E05  64                 	db	100	;'d'
   151   000E06  20                 	db	32
   152   000E07  25                 	db	37
   153   000E08  64                 	db	100	;'d'
   154   000E09  20                 	db	32
   155   000E0A  0D                 	db	13
   156   000E0B  0A                 	db	10
   157   000E0C  00                 	db	0
   158   000E0D  00                 	db	0	; dummy byte at the end
   159   000000                     
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163   001C5C                     __pcinit:
   164                           	callstack 0
   165   001C5C                     start_initialization:
   166                           	callstack 0
   167   001C5C                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Clear objects allocated to BANK1 (60 bytes)
   171   001C5C  EE01  F000         	lfsr	0,__pbssBANK1
   172   001C60  0E3C               	movlw	60
   173   001C62                     clear_0:
   174   001C62  6AEE               	clrf	postinc0,c
   175   001C64  06E8               	decf	wreg,f,c
   176   001C66  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to BANK0 (63 bytes)
   179   001C68  EE00  F0BD         	lfsr	0,__pbssBANK0
   180   001C6C  0E3F               	movlw	63
   181   001C6E                     clear_1:
   182   001C6E  6AEE               	clrf	postinc0,c
   183   001C70  06E8               	decf	wreg,f,c
   184   001C72  E1FD               	bnz	clear_1
   185                           
   186                           ; Clear objects allocated to COMRAM (2 bytes)
   187   001C74  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   188   001C76  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   189   001C78                     end_of_initialization:
   190                           	callstack 0
   191   001C78                     __end_of__initialization:
   192                           	callstack 0
   193   001C78  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   194   001C7A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   195   001C7C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   196   001C7E  6EF8               	movwf	tblptru,c
   197   001C80  0E0E               	movlw	high __Lsmallconst
   198   001C82  6EF7               	movwf	tblptrh,c
   199   001C84  0100               	movlb	0
   200   001C86  EF45  F008         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203   00005B                     __pbssCOMRAM:
   204                           	callstack 0
   205   00005B                     _RxBufReadCnt:
   206                           	callstack 0
   207   00005B                     	ds	1
   208   00005C                     _RxBufWriteCnt:
   209                           	callstack 0
   210   00005C                     	ds	1
   211                           
   212                           	psect	bssBANK0
   213   0000BD                     __pbssBANK0:
   214                           	callstack 0
   215   0000BD                     _EUSART4RXbuf:
   216                           	callstack 0
   217   0000BD                     	ds	20
   218   0000D1                     _width:
   219                           	callstack 0
   220   0000D1                     	ds	2
   221   0000D3                     _prec:
   222                           	callstack 0
   223   0000D3                     	ds	2
   224   0000D5                     _off_period:
   225                           	callstack 0
   226   0000D5                     	ds	2
   227   0000D7                     _on_period:
   228                           	callstack 0
   229   0000D7                     	ds	2
   230   0000D9                     _flags:
   231                           	callstack 0
   232   0000D9                     	ds	1
   233   0000DA                     _TxBufReadCnt:
   234                           	callstack 0
   235   0000DA                     	ds	1
   236   0000DB                     _TxBufWriteCnt:
   237                           	callstack 0
   238   0000DB                     	ds	1
   239   0000DC                     _dbuf:
   240                           	callstack 0
   241   0000DC                     	ds	32
   242                           
   243                           	psect	bssBANK1
   244   000100                     __pbssBANK1:
   245                           	callstack 0
   246   000100                     _EUSART4TXbuf:
   247                           	callstack 0
   248   000100                     	ds	60
   249                           
   250                           	psect	cstackBANK0
   251   000060                     __pcstackBANK0:
   252                           	callstack 0
   253   000060                     ?_sprintf:
   254                           	callstack 0
   255   000060                     sprintf@s:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x0
   259   000060                     	ds	2
   260   000062                     sprintf@fmt:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x2
   264   000062                     	ds	8
   265   00006A                     sprintf@ap:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0xA
   269   00006A                     	ds	2
   270   00006C                     sprintf@f:
   271                           	callstack 0
   272                           
   273                           ; 11 bytes @ 0xC
   274   00006C                     	ds	11
   275   000077                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x17
   278   000077                     	ds	2
   279   000079                     main@readout:
   280                           	callstack 0
   281                           
   282                           ; 50 bytes @ 0x19
   283   000079                     	ds	50
   284   0000AB                     main@color_flag:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x4B
   288   0000AB                     	ds	2
   289   0000AD                     main@RGB_recorded:
   290                           	callstack 0
   291                           
   292                           ; 8 bytes @ 0x4D
   293   0000AD                     	ds	8
   294   0000B5                     main@RGB_calibrated:
   295                           	callstack 0
   296                           
   297                           ; 8 bytes @ 0x55
   298   0000B5                     	ds	8
   299                           
   300                           	psect	cstackCOMRAM
   301   000001                     __pcstackCOMRAM:
   302                           	callstack 0
   303   000001                     write16bitTMR0val@tmp:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x0
   307   000001                     	ds	2
   308   000003                     ??_I2C_2_Master_Idle:
   309   000003                     ?_color_processor_easy:
   310                           	callstack 0
   311   000003                     ?___aodiv:
   312                           	callstack 0
   313   000003                     ?___aomod:
   314                           	callstack 0
   315   000003                     sendCharSerial4@charToSend:
   316                           	callstack 0
   317   000003                     color_processor_easy@rgb:
   318                           	callstack 0
   319   000003                     initDCmotorsPWM@PWMperiod:
   320                           	callstack 0
   321   000003                     fputc@c:
   322                           	callstack 0
   323   000003                     ___aodiv@dividend:
   324                           	callstack 0
   325   000003                     ___aomod@dividend:
   326                           	callstack 0
   327                           
   328                           ; 8 bytes @ 0x2
   329   000003                     	ds	1
   330   000004                     ??_I2C_2_Master_Read:
   331   000004                     I2C_2_Master_Write@data_byte:
   332                           	callstack 0
   333   000004                     sendStringSerial4@string:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x3
   337   000004                     	ds	1
   338   000005                     color_writetoaddr@value:
   339                           	callstack 0
   340   000005                     I2C_2_Master_Read@ack:
   341                           	callstack 0
   342   000005                     color_processor_easy@color:
   343                           	callstack 0
   344   000005                     fputc@fp:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x4
   348   000005                     	ds	1
   349   000006                     color_writetoaddr@address:
   350                           	callstack 0
   351   000006                     I2C_2_Master_Read@tmp:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x5
   355   000006                     	ds	1
   356   000007                     ??_fputc:
   357   000007                     ??_color_click_init:
   358   000007                     ?_color_read_Luminosity:
   359                           	callstack 0
   360   000007                     ?_color_read_Red:
   361                           	callstack 0
   362   000007                     ?_color_read_Green:
   363                           	callstack 0
   364   000007                     ?_color_read_Blue:
   365                           	callstack 0
   366   000007                     color_processor_easy@c:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x6
   370   000007                     	ds	2
   371   000009                     ??_color_read_Luminosity:
   372   000009                     ??_color_read_Red:
   373   000009                     ??_color_read_Green:
   374   000009                     ??_color_read_Blue:
   375   000009                     color_processor_easy@a:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x8
   379   000009                     	ds	2
   380   00000B                     color_processor_easy@b:
   381                           	callstack 0
   382   00000B                     ___aodiv@divisor:
   383                           	callstack 0
   384   00000B                     ___aomod@divisor:
   385                           	callstack 0
   386                           
   387                           ; 8 bytes @ 0xA
   388   00000B                     	ds	1
   389   00000C                     color_read_Luminosity@tmp:
   390                           	callstack 0
   391   00000C                     color_read_Red@tmp:
   392                           	callstack 0
   393   00000C                     color_read_Green@tmp:
   394                           	callstack 0
   395   00000C                     color_read_Blue@tmp:
   396                           	callstack 0
   397   00000C                     fputs@s:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0xB
   401   00000C                     	ds	2
   402   00000E                     color_read@rgb:
   403                           	callstack 0
   404   00000E                     fputs@fp:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0xD
   408   00000E                     	ds	2
   409   000010                     ??_color_read:
   410   000010                     fputs@c:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xF
   414   000010                     	ds	1
   415   000011                     fputs@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x10
   419   000011                     	ds	2
   420   000013                     ___aodiv@counter:
   421                           	callstack 0
   422   000013                     ___aomod@counter:
   423                           	callstack 0
   424   000013                     pad@fp:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x12
   428   000013                     	ds	1
   429   000014                     ___aodiv@sign:
   430                           	callstack 0
   431   000014                     ___aomod@sign:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x13
   435   000014                     	ds	1
   436   000015                     ?_abs:
   437                           	callstack 0
   438   000015                     pad@buf:
   439                           	callstack 0
   440   000015                     abs@a:
   441                           	callstack 0
   442   000015                     ___aodiv@quotient:
   443                           	callstack 0
   444                           
   445                           ; 8 bytes @ 0x14
   446   000015                     	ds	2
   447   000017                     ??_abs:
   448   000017                     pad@p:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x16
   452   000017                     	ds	2
   453   000019                     ??_pad:
   454                           
   455                           ; 1 bytes @ 0x18
   456   000019                     	ds	1
   457   00001A                     pad@i:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x19
   461   00001A                     	ds	2
   462   00001C                     pad@w:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x1B
   466   00001C                     	ds	2
   467   00001E                     dtoa@fp:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x1D
   471   00001E                     	ds	2
   472   000020                     dtoa@d:
   473                           	callstack 0
   474                           
   475                           ; 8 bytes @ 0x1F
   476   000020                     	ds	8
   477   000028                     ??_dtoa:
   478                           
   479                           ; 1 bytes @ 0x27
   480   000028                     	ds	8
   481   000030                     _dtoa$2145:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x2F
   485   000030                     	ds	2
   486   000032                     dtoa@p:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x31
   490   000032                     	ds	2
   491   000034                     dtoa@w:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x33
   495   000034                     	ds	2
   496   000036                     dtoa@n:
   497                           	callstack 0
   498                           
   499                           ; 8 bytes @ 0x35
   500   000036                     	ds	8
   501   00003E                     dtoa@i:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x3D
   505   00003E                     	ds	2
   506   000040                     dtoa@s:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x3F
   510   000040                     	ds	1
   511   000041                     vfpfcnvrt@fp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x40
   515   000041                     	ds	2
   516   000043                     vfpfcnvrt@fmt:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x42
   520   000043                     	ds	2
   521   000045                     vfpfcnvrt@ap:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x44
   525   000045                     	ds	2
   526   000047                     ??_vfpfcnvrt:
   527                           
   528                           ; 1 bytes @ 0x46
   529   000047                     	ds	2
   530   000049                     vfpfcnvrt@convarg:
   531                           	callstack 0
   532                           
   533                           ; 8 bytes @ 0x48
   534   000049                     	ds	8
   535   000051                     vfpfcnvrt@cp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x50
   539   000051                     	ds	2
   540   000053                     ?_vfprintf:
   541                           	callstack 0
   542   000053                     vfprintf@fp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x52
   546   000053                     	ds	2
   547   000055                     vfprintf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x54
   551   000055                     	ds	2
   552   000057                     vfprintf@ap:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x56
   556   000057                     	ds	2
   557   000059                     vfprintf@cfmt:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x58
   561   000059                     	ds	2
   562   00005B                     
   563                           ; 1 bytes @ 0x5A
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 20 in file "../main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  readout        50   25[BANK0 ] unsigned char [50]
   574 ;;  color_calibr   48    0        unsigned int [24]
   575 ;;  RGB_calibrat    8   85[BANK0 ] struct RGB_val
   576 ;;  RGB_recorded    8   77[BANK0 ] struct RGB_val
   577 ;;  color_flag      2   75[BANK0 ] unsigned int 
   578 ;;  color_name      2    0        unsigned int 
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   589 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   590 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   591 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   592 ;;Total ram usage:       70 bytes
   593 ;; Hardware stack levels required when called: 10
   594 ;; This function calls:
   595 ;;		_I2C_2_Master_Init
   596 ;;		_Interrupts_init
   597 ;;		_Timer0_init
   598 ;;		_color_click_init
   599 ;;		_color_processor_easy
   600 ;;		_color_read
   601 ;;		_initDCmotorsPWM
   602 ;;		_initUSART4
   603 ;;		_sendStringSerial4
   604 ;;		_sprintf
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text0
   611   00108A                     __ptext0:
   612                           	callstack 0
   613   00108A                     _main:
   614                           	callstack 21
   615   00108A                     
   616                           ;../main.c: 22:     LATDbits.LATD7=0;
   617   00108A  9E7C               	bcf	124,7,c	;volatile
   618                           
   619                           ;../main.c: 23:     LATHbits.LATH3=0;
   620   00108C  9680               	bcf	128,3,c	;volatile
   621                           
   622                           ;../main.c: 24:     TRISDbits.TRISD7=0;
   623   00108E  9E84               	bcf	132,7,c	;volatile
   624                           
   625                           ;../main.c: 25:     TRISHbits.TRISH3=0;
   626   001090  9688               	bcf	136,3,c	;volatile
   627                           
   628                           ;../main.c: 28:     TRISFbits.TRISF2=1;
   629   001092  8486               	bsf	134,2,c	;volatile
   630                           
   631                           ;../main.c: 29:     ANSELFbits.ANSELF2=0;
   632   001094  010E               	movlb	14	; () banked
   633   001096  95B4               	bcf	180,2,b	;volatile
   634                           
   635                           ;../main.c: 30:     TRISFbits.TRISF3=1;
   636   001098  8686               	bsf	134,3,c	;volatile
   637                           
   638                           ;../main.c: 31:     ANSELFbits.ANSELF3=0;
   639   00109A  97B4               	bcf	180,3,b	;volatile
   640   00109C                     
   641                           ; BSR set to: 14
   642                           ;../main.c: 34:     color_click_init();
   643   00109C  EC6C  F00D         	call	_color_click_init	;wreg free
   644   0010A0                     
   645                           ;../main.c: 35:     initDCmotorsPWM(20);
   646   0010A0  0E00               	movlw	0
   647   0010A2  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   648   0010A4  0E14               	movlw	20
   649   0010A6  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
   650   0010A8  EC90  F00D         	call	_initDCmotorsPWM	;wreg free
   651   0010AC                     
   652                           ;../main.c: 36:     Interrupts_init();
   653   0010AC  ECAF  F00E         	call	_Interrupts_init	;wreg free
   654   0010B0                     
   655                           ;../main.c: 37:     Timer0_init();
   656   0010B0  EC7E  F00E         	call	_Timer0_init	;wreg free
   657   0010B4                     
   658                           ;../main.c: 38:     I2C_2_Master_Init();
   659   0010B4  EC45  F00E         	call	_I2C_2_Master_Init	;wreg free
   660   0010B8                     
   661                           ;../main.c: 39:     initUSART4();
   662   0010B8  EC8E  F00E         	call	_initUSART4	;wreg free
   663   0010BC                     
   664                           ;../main.c: 43:     unsigned int color_flag;;../main.c: 44:     unsigned int color_name;
      +                          ;../main.c: 45:     struct RGB_val RGB_calibrated;;../main.c: 46:     struct RGB_val RGB
      +                          _recorded;;../main.c: 49:     unsigned int color_calibrated[24];;../main.c: 63:     colo
      +                          r_read(&RGB_calibrated);
   665   0010BC  0EB5               	movlw	low main@RGB_calibrated
   666   0010BE  6E0E               	movwf	color_read@rgb^0,c
   667   0010C0  0E00               	movlw	high main@RGB_calibrated
   668   0010C2  6E0F               	movwf	(color_read@rgb+1)^0,c
   669   0010C4  ECEC  F00B         	call	_color_read	;wreg free
   670   0010C8                     
   671                           ;../main.c: 64:     char readout[50];;../main.c: 65:     sprintf(readout,"%d %d %d \r\n"
      +                          , RGB_calibrated.R, RGB_calibrated.G, RGB_calibrated.B);
   672   0010C8  0E79               	movlw	low main@readout
   673   0010CA  0100               	movlb	0	; () banked
   674   0010CC  6F60               	movwf	sprintf@s& (0+255),b
   675   0010CE  0E00               	movlw	high main@readout
   676   0010D0  6F61               	movwf	(sprintf@s+1)& (0+255),b
   677   0010D2  0E01               	movlw	low STR_1
   678   0010D4  6F62               	movwf	sprintf@fmt& (0+255),b
   679   0010D6  0E0E               	movlw	high STR_1
   680   0010D8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   681   0010DA  C0B7  F064         	movff	main@RGB_calibrated+2,?_sprintf+4
   682   0010DE  C0B8  F065         	movff	main@RGB_calibrated+3,?_sprintf+5
   683   0010E2  C0B9  F066         	movff	main@RGB_calibrated+4,?_sprintf+6
   684   0010E6  C0BA  F067         	movff	main@RGB_calibrated+5,?_sprintf+7
   685   0010EA  C0BB  F068         	movff	main@RGB_calibrated+6,?_sprintf+8
   686   0010EE  C0BC  F069         	movff	main@RGB_calibrated+7,?_sprintf+9
   687   0010F2  EC7C  F00C         	call	_sprintf	;wreg free
   688   0010F6                     
   689                           ;../main.c: 66:     sendStringSerial4(readout);
   690   0010F6  0E79               	movlw	low main@readout
   691   0010F8  6E04               	movwf	sendStringSerial4@string^0,c
   692   0010FA  0E00               	movlw	high main@readout
   693   0010FC  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   694   0010FE  EC16  F00E         	call	_sendStringSerial4	;wreg free
   695   001102                     l2147:
   696   001102  0E01               	movlw	1
   697   001104  A68E               	btfss	142,3,c	;volatile
   698   001106  0E00               	movlw	0
   699   001108  A48E               	btfss	142,2,c	;volatile
   700   00110A  0E00               	movlw	0
   701   00110C  B0E8               	btfsc	wreg,0,c
   702   00110E  EF8B  F008         	goto	u1261
   703   001112  EF90  F008         	goto	u1260
   704   001116                     u1261:
   705   001116  0100               	movlb	0	; () banked
   706   001118  6B77               	clrf	??_main& (0+255),b
   707   00111A  2B77               	incf	??_main& (0+255),f,b
   708   00111C  EF92  F008         	goto	u1268
   709   001120                     u1260:
   710   001120  0100               	movlb	0	; () banked
   711   001122  6B77               	clrf	??_main& (0+255),b
   712   001124                     u1268:
   713   001124  5177               	movf	??_main& (0+255),w,b
   714   001126  A4D8               	btfss	status,2,c
   715   001128  EF98  F008         	goto	u1271
   716   00112C  EF9A  F008         	goto	u1270
   717   001130                     u1271:
   718   001130  EF81  F008         	goto	l2147
   719   001134                     u1270:
   720   001134                     
   721                           ; BSR set to: 0
   722                           ;../main.c: 78:         if (!PORTFbits.RF2){LATDbits.LATD7 = !LATDbits.LATD7;}
   723   001134  B48E               	btfsc	142,2,c	;volatile
   724   001136  EF9F  F008         	goto	u1281
   725   00113A  EFA1  F008         	goto	u1280
   726   00113E                     u1281:
   727   00113E  EFB5  F008         	goto	l172
   728   001142                     u1280:
   729   001142                     
   730                           ; BSR set to: 0
   731   001142  AE7C               	btfss	124,7,c	;volatile
   732   001144  EFA6  F008         	goto	u1291
   733   001148  EFAA  F008         	goto	u1290
   734   00114C                     u1291:
   735   00114C  6B77               	clrf	??_main& (0+255),b
   736   00114E  2B77               	incf	??_main& (0+255),f,b
   737   001150  EFAC  F008         	goto	u1308
   738   001154                     u1290:
   739   001154  0100               	movlb	0	; () banked
   740   001156  6B77               	clrf	??_main& (0+255),b
   741   001158                     u1308:
   742   001158  3377               	rrcf	??_main& (0+255),f,b
   743   00115A  3377               	rrcf	??_main& (0+255),f,b
   744   00115C  507C               	movf	124,w,c	;volatile
   745   00115E  1977               	xorwf	??_main& (0+255),w,b
   746   001160  0B7F               	andlw	-129
   747   001162  1977               	xorwf	??_main& (0+255),w,b
   748   001164  6E7C               	movwf	124,c	;volatile
   749   001166  EFCF  F008         	goto	l2153
   750   00116A                     l172:
   751                           
   752                           ; BSR set to: 0
   753   00116A  B68E               	btfsc	142,3,c	;volatile
   754   00116C  EFBA  F008         	goto	u1311
   755   001170  EFBC  F008         	goto	u1310
   756   001174                     u1311:
   757   001174  EFCF  F008         	goto	l2153
   758   001178                     u1310:
   759   001178                     
   760                           ; BSR set to: 0
   761   001178  A680               	btfss	128,3,c	;volatile
   762   00117A  EFC1  F008         	goto	u1321
   763   00117E  EFC5  F008         	goto	u1320
   764   001182                     u1321:
   765   001182  6B77               	clrf	??_main& (0+255),b
   766   001184  2B77               	incf	??_main& (0+255),f,b
   767   001186  EFC7  F008         	goto	u1338
   768   00118A                     u1320:
   769   00118A  0100               	movlb	0	; () banked
   770   00118C  6B77               	clrf	??_main& (0+255),b
   771   00118E                     u1338:
   772   00118E  4777               	rlncf	??_main& (0+255),f,b
   773   001190  4777               	rlncf	??_main& (0+255),f,b
   774   001192  4777               	rlncf	??_main& (0+255),f,b
   775   001194  5080               	movf	128,w,c	;volatile
   776   001196  1977               	xorwf	??_main& (0+255),w,b
   777   001198  0BF7               	andlw	-9
   778   00119A  1977               	xorwf	??_main& (0+255),w,b
   779   00119C  6E80               	movwf	128,c	;volatile
   780   00119E                     l2153:
   781                           
   782                           ;../main.c: 83:             if (LATDbits.LATD7){
   783   00119E  AE7C               	btfss	124,7,c	;volatile
   784   0011A0  EFD4  F008         	goto	u1341
   785   0011A4  EFD6  F008         	goto	u1340
   786   0011A8                     u1341:
   787   0011A8  EFEE  F008         	goto	l176
   788   0011AC                     u1340:
   789   0011AC                     
   790                           ;../main.c: 84:                 if (color_flag){
   791   0011AC  0100               	movlb	0	; () banked
   792   0011AE  51AB               	movf	main@color_flag& (0+255),w,b
   793   0011B0  11AC               	iorwf	(main@color_flag+1)& (0+255),w,b
   794   0011B2  B4D8               	btfsc	status,2,c
   795   0011B4  EFDE  F008         	goto	u1351
   796   0011B8  EFE0  F008         	goto	u1350
   797   0011BC                     u1351:
   798   0011BC  EFFB  F008         	goto	l2161
   799   0011C0                     u1350:
   800   0011C0                     
   801                           ; BSR set to: 0
   802                           ;../main.c: 85:                     color_read(&RGB_recorded);
   803   0011C0  0EAD               	movlw	low main@RGB_recorded
   804   0011C2  6E0E               	movwf	color_read@rgb^0,c
   805   0011C4  0E00               	movlw	high main@RGB_recorded
   806   0011C6  6E0F               	movwf	(color_read@rgb+1)^0,c
   807   0011C8  ECEC  F00B         	call	_color_read	;wreg free
   808   0011CC  0EAD               	movlw	low main@RGB_recorded
   809   0011CE  6E03               	movwf	color_processor_easy@rgb^0,c
   810   0011D0  0E00               	movlw	high main@RGB_recorded
   811   0011D2  6E04               	movwf	(color_processor_easy@rgb+1)^0,c
   812   0011D4  EC8D  F00B         	call	_color_processor_easy	;wreg free
   813   0011D8  EFFB  F008         	goto	l2161
   814   0011DC                     l176:
   815   0011DC  A680               	btfss	128,3,c	;volatile
   816   0011DE  EFF3  F008         	goto	u1361
   817   0011E2  EFF5  F008         	goto	u1360
   818   0011E6                     u1361:
   819   0011E6  EFFB  F008         	goto	l2161
   820   0011EA                     u1360:
   821   0011EA                     
   822                           ;../main.c: 93:                 color_read(&RGB_recorded);
   823   0011EA  0EAD               	movlw	low main@RGB_recorded
   824   0011EC  6E0E               	movwf	color_read@rgb^0,c
   825   0011EE  0E00               	movlw	high main@RGB_recorded
   826   0011F0  6E0F               	movwf	(color_read@rgb+1)^0,c
   827   0011F2  ECEC  F00B         	call	_color_read	;wreg free
   828   0011F6                     l2161:
   829                           
   830                           ;../main.c: 95:             _delay((unsigned long)((200)*(64000000/4000.0)));
   831   0011F6  0E11               	movlw	17
   832   0011F8  0100               	movlb	0	; () banked
   833   0011FA  6F78               	movwf	(??_main+1)& (0+255),b
   834   0011FC  0E3C               	movlw	60
   835   0011FE  6F77               	movwf	??_main& (0+255),b
   836   001200  0ECB               	movlw	203
   837   001202                     u1377:
   838   001202  2EE8               	decfsz	wreg,f,c
   839   001204  D7FE               	bra	u1377
   840   001206  2F77               	decfsz	??_main& (0+255),f,b
   841   001208  D7FC               	bra	u1377
   842   00120A  2F78               	decfsz	(??_main+1)& (0+255),f,b
   843   00120C  D7FA               	bra	u1377
   844   00120E  EFCF  F008         	goto	l2153
   845   001212  EF2A  F000         	goto	start
   846   001216                     __end_of_main:
   847                           	callstack 0
   848                           
   849 ;; *************** function _sprintf *****************
   850 ;; Defined at:
   851 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  s               2    0[BANK0 ] PTR unsigned char 
   854 ;;		 -> main@readout(50), 
   855 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   856 ;;		 -> STR_1(12), 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  f              11   12[BANK0 ] struct _IO_FILE
   859 ;;  ap              2   10[BANK0 ] PTR void [1]
   860 ;;		 -> ?_sprintf(2), 
   861 ;;  ret             2    0        int 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  2    0[BANK0 ] int 
   864 ;; Registers used:
   865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   871 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   872 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;Total ram usage:       23 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 9
   878 ;; This function calls:
   879 ;;		_vfprintf
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text1
   886   0018F8                     __ptext1:
   887                           	callstack 0
   888   0018F8                     _sprintf:
   889                           	callstack 21
   890   0018F8  0E64               	movlw	low (?_sprintf+4)
   891   0018FA  0100               	movlb	0	; () banked
   892   0018FC  6F6A               	movwf	sprintf@ap& (0+255),b
   893   0018FE  0E00               	movlw	high (?_sprintf+4)
   894   001900  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
   895   001902  C060  F06C         	movff	sprintf@s,sprintf@f
   896   001906  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
   897   00190A                     
   898                           ; BSR set to: 0
   899   00190A  0E00               	movlw	0
   900   00190C  6F70               	movwf	(sprintf@f+4)& (0+255),b
   901   00190E  0E00               	movlw	0
   902   001910  6F6F               	movwf	(sprintf@f+3)& (0+255),b
   903   001912                     
   904                           ; BSR set to: 0
   905   001912  0E00               	movlw	0
   906   001914  6F76               	movwf	(sprintf@f+10)& (0+255),b
   907   001916  0E00               	movlw	0
   908   001918  6F75               	movwf	(sprintf@f+9)& (0+255),b
   909   00191A                     
   910                           ; BSR set to: 0
   911   00191A  0E6C               	movlw	low sprintf@f
   912   00191C  6E53               	movwf	vfprintf@fp^0,c
   913   00191E  0E00               	movlw	high sprintf@f
   914   001920  6E54               	movwf	(vfprintf@fp+1)^0,c
   915   001922  C062  F055         	movff	sprintf@fmt,vfprintf@fmt
   916   001926  C063  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
   917   00192A  0E6A               	movlw	low sprintf@ap
   918   00192C  6E57               	movwf	vfprintf@ap^0,c
   919   00192E  0E00               	movlw	high sprintf@ap
   920   001930  6E58               	movwf	(vfprintf@ap+1)^0,c
   921   001932  EC45  F00D         	call	_vfprintf	;wreg free
   922   001936  0100               	movlb	0	; () banked
   923   001938  516F               	movf	(sprintf@f+3)& (0+255),w,b
   924   00193A  2560               	addwf	sprintf@s& (0+255),w,b
   925   00193C  6ED9               	movwf	fsr2l,c
   926   00193E  5170               	movf	(sprintf@f+4)& (0+255),w,b
   927   001940  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   928   001942  6EDA               	movwf	fsr2h,c
   929   001944  0E00               	movlw	0
   930   001946  6EDF               	movwf	indf2,c
   931   001948                     
   932                           ; BSR set to: 0
   933   001948  0012               	return		;funcret
   934   00194A                     __end_of_sprintf:
   935                           	callstack 0
   936                           
   937 ;; *************** function _vfprintf *****************
   938 ;; Defined at:
   939 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
   942 ;;		 -> sprintf@f(11), 
   943 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
   944 ;;		 -> STR_1(12), 
   945 ;;  ap              2   86[COMRAM] PTR PTR void 
   946 ;;		 -> sprintf@ap(2), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
   949 ;;		 -> STR_1(12), 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  2   82[COMRAM] int 
   952 ;; Registers used:
   953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   959 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   962 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   963 ;;Total ram usage:        8 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 8
   966 ;; This function calls:
   967 ;;		_vfpfcnvrt
   968 ;; This function is called by:
   969 ;;		_sprintf
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text2
   974   001A8A                     __ptext2:
   975                           	callstack 0
   976   001A8A                     _vfprintf:
   977                           	callstack 21
   978   001A8A                     
   979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   980   001A8A  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
   981   001A8E  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   982                           
   983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   984   001A92  EF59  F00D         	goto	l1943
   985   001A96                     l1941:
   986                           
   987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   988   001A96  C053  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
   989   001A9A  C054  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   990   001A9E  0E59               	movlw	low vfprintf@cfmt
   991   001AA0  6E43               	movwf	vfpfcnvrt@fmt^0,c
   992   001AA2  0E00               	movlw	high vfprintf@cfmt
   993   001AA4  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
   994   001AA6  C057  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
   995   001AAA  C058  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   996   001AAE  EC81  F00A         	call	_vfpfcnvrt	;wreg free
   997   001AB2                     l1943:
   998                           
   999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1000   001AB2  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1001   001AB6  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1002   001ABA                     	if	0	;tblptru may be non-zero
  1003   001ABA                     	endif
  1004   001ABA                     	if	0	;tblptru may be non-zero
  1005   001ABA                     	endif
  1006   001ABA  0008               	tblrd		*
  1007   001ABC  50F5               	movf	tablat,w,c
  1008   001ABE  0900               	iorlw	0
  1009   001AC0  A4D8               	btfss	status,2,c
  1010   001AC2  EF65  F00D         	goto	u1071
  1011   001AC6  EF67  F00D         	goto	u1070
  1012   001ACA                     u1071:
  1013   001ACA  EF4B  F00D         	goto	l1941
  1014   001ACE                     u1070:
  1015   001ACE                     
  1016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1017   001ACE  0E00               	movlw	0
  1018   001AD0  6E54               	movwf	(?_vfprintf+1)^0,c
  1019   001AD2  0E00               	movlw	0
  1020   001AD4  6E53               	movwf	?_vfprintf^0,c
  1021   001AD6  0012               	return		;funcret
  1022   001AD8                     __end_of_vfprintf:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _vfpfcnvrt *****************
  1026 ;; Defined at:
  1027 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1030 ;;		 -> sprintf@f(11), 
  1031 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1032 ;;		 -> vfprintf@cfmt(2), 
  1033 ;;  ap              2   68[COMRAM] PTR PTR void 
  1034 ;;		 -> sprintf@ap(2), 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  convarg         8   72[COMRAM] struct .
  1037 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1038 ;;		 -> STR_1(12), 
  1039 ;;  i               2    0        int 
  1040 ;;  done            2    0        int 
  1041 ;;  c               1    0        unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1051 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1055 ;;Total ram usage:       18 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 7
  1058 ;; This function calls:
  1059 ;;		_dtoa
  1060 ;;		_fputc
  1061 ;; This function is called by:
  1062 ;;		_vfprintf
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text3
  1067   001502                     __ptext3:
  1068                           	callstack 0
  1069   001502                     _vfpfcnvrt:
  1070                           	callstack 21
  1071   001502                     
  1072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1073   001502  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1074   001506  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1075   00150A  CFDE FFF6          	movff	postinc2,tblptrl
  1076   00150E  CFDD FFF7          	movff	postdec2,tblptrh
  1077   001512                     	if	0	;tblptru may be non-zero
  1078   001512                     	endif
  1079   001512                     	if	0	;tblptru may be non-zero
  1080   001512                     	endif
  1081   001512  0008               	tblrd		*
  1082   001514  50F5               	movf	tablat,w,c
  1083   001516  0A25               	xorlw	37
  1084   001518  A4D8               	btfss	status,2,c
  1085   00151A  EF91  F00A         	goto	u1031
  1086   00151E  EF93  F00A         	goto	u1030
  1087   001522                     u1031:
  1088   001522  EF13  F00B         	goto	l1891
  1089   001526                     u1030:
  1090   001526                     
  1091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1092   001526  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1093   00152A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1094   00152E  2ADE               	incf	postinc2,f,c
  1095   001530  0E00               	movlw	0
  1096   001532  22DD               	addwfc	postdec2,f,c
  1097   001534                     
  1098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1099   001534  0E00               	movlw	0
  1100   001536  0100               	movlb	0	; () banked
  1101   001538  6FD2               	movwf	(_width+1)& (0+255),b
  1102   00153A  0E00               	movlw	0
  1103   00153C  6FD1               	movwf	_width& (0+255),b
  1104   00153E  C0D1  F0D9         	movff	_width,_flags
  1105   001542                     
  1106                           ; BSR set to: 0
  1107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1108   001542  69D3               	setf	_prec& (0+255),b
  1109   001544  69D4               	setf	(_prec+1)& (0+255),b
  1110   001546                     
  1111                           ; BSR set to: 0
  1112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1113   001546  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1114   00154A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1115   00154E  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1116   001552  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1117   001556                     
  1118                           ; BSR set to: 0
  1119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1120   001556  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1121   00155A  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1122   00155E                     	if	0	;tblptru may be non-zero
  1123   00155E                     	endif
  1124   00155E                     	if	0	;tblptru may be non-zero
  1125   00155E                     	endif
  1126   00155E  0008               	tblrd		*
  1127   001560  50F5               	movf	tablat,w,c
  1128   001562  0A64               	xorlw	100
  1129   001564  B4D8               	btfsc	status,2,c
  1130   001566  EFB7  F00A         	goto	u1041
  1131   00156A  EFB9  F00A         	goto	u1040
  1132   00156E                     u1041:
  1133   00156E  EFC7  F00A         	goto	l1881
  1134   001572                     u1040:
  1135   001572                     
  1136                           ; BSR set to: 0
  1137   001572  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1138   001576  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1139   00157A                     	if	0	;tblptru may be non-zero
  1140   00157A                     	endif
  1141   00157A                     	if	0	;tblptru may be non-zero
  1142   00157A                     	endif
  1143   00157A  0008               	tblrd		*
  1144   00157C  50F5               	movf	tablat,w,c
  1145   00157E  0A69               	xorlw	105
  1146   001580  A4D8               	btfss	status,2,c
  1147   001582  EFC5  F00A         	goto	u1051
  1148   001586  EFC7  F00A         	goto	u1050
  1149   00158A                     u1051:
  1150   00158A  EF0A  F00B         	goto	l1887
  1151   00158E                     u1050:
  1152   00158E                     l1881:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1156   00158E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1157   001592  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1158   001596  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1159   00159A  0E02               	movlw	2
  1160   00159C  26DE               	addwf	postinc2,f,c
  1161   00159E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1162   0015A2  0E00               	movlw	0
  1163   0015A4  22DD               	addwfc	postdec2,f,c
  1164   0015A6  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1165   0015AA  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1166   0015AE  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1167   0015B2  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1168   0015B6  0E00               	movlw	0
  1169   0015B8  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1170   0015BA  0EFF               	movlw	-1
  1171   0015BC  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1172   0015BE  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1173   0015C0  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1174   0015C2  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1175   0015C4  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1176   0015C6  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1177                           
  1178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1179   0015C8  0E01               	movlw	1
  1180   0015CA  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1181   0015CC  6E47               	movwf	??_vfpfcnvrt^0,c
  1182   0015CE  0E00               	movlw	0
  1183   0015D0  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1184   0015D2  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1185   0015D4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1186   0015D8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1187   0015DC  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1188   0015E0  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1189   0015E4                     
  1190                           ; BSR set to: 0
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1192   0015E4  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1193   0015E8  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1194   0015EC  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1195   0015F0  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1196   0015F4  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1197   0015F8  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1198   0015FC  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1199   001600  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1200   001604  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1201   001608  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1202   00160C  EC07  F007         	call	_dtoa	;wreg free
  1203   001610  EF27  F00B         	goto	l1077
  1204   001614                     l1887:
  1205                           
  1206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1207   001614  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1208   001618  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1209   00161C  2ADE               	incf	postinc2,f,c
  1210   00161E  0E00               	movlw	0
  1211   001620  22DD               	addwfc	postdec2,f,c
  1212   001622  EF27  F00B         	goto	l1077
  1213   001626                     l1891:
  1214                           
  1215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1216   001626  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1217   00162A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1218   00162E  CFDE FFF6          	movff	postinc2,tblptrl
  1219   001632  CFDD FFF7          	movff	postdec2,tblptrh
  1220   001636                     	if	0	;tblptru may be non-zero
  1221   001636                     	endif
  1222   001636                     	if	0	;tblptru may be non-zero
  1223   001636                     	endif
  1224   001636  0008               	tblrd		*
  1225   001638  50F5               	movf	tablat,w,c
  1226   00163A  6E03               	movwf	fputc@c^0,c
  1227   00163C  6A04               	clrf	(fputc@c+1)^0,c
  1228   00163E  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1229   001642  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1230   001646  EC28  F00B         	call	_fputc	;wreg free
  1231   00164A  EF0A  F00B         	goto	l1887
  1232   00164E                     l1077:
  1233   00164E  0012               	return		;funcret
  1234   001650                     __end_of_vfpfcnvrt:
  1235                           	callstack 0
  1236                           
  1237 ;; *************** function _dtoa *****************
  1238 ;; Defined at:
  1239 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1242 ;;		 -> sprintf@f(11), 
  1243 ;;  d               8   31[COMRAM] long long 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  n               8   53[COMRAM] long long 
  1246 ;;  i               2   61[COMRAM] int 
  1247 ;;  w               2   51[COMRAM] int 
  1248 ;;  p               2   49[COMRAM] int 
  1249 ;;  s               1   63[COMRAM] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1259 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;Total ram usage:       35 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; Hardware stack levels required when called: 6
  1266 ;; This function calls:
  1267 ;;		___aodiv
  1268 ;;		___aomod
  1269 ;;		_abs
  1270 ;;		_pad
  1271 ;; This function is called by:
  1272 ;;		_vfpfcnvrt
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text4
  1277   000E0E                     __ptext4:
  1278                           	callstack 0
  1279   000E0E                     _dtoa:
  1280                           	callstack 21
  1281   000E0E                     
  1282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1283   000E0E  C020  F036         	movff	dtoa@d,dtoa@n
  1284   000E12  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  1285   000E16  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  1286   000E1A  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  1287   000E1E  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  1288   000E22  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  1289   000E26  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  1290   000E2A  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  1291   000E2E                     
  1292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1293   000E2E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1294   000E30  EF1C  F007         	goto	u911
  1295   000E34  EF1F  F007         	goto	u910
  1296   000E38                     u911:
  1297   000E38  0E01               	movlw	1
  1298   000E3A  EF20  F007         	goto	u920
  1299   000E3E                     u910:
  1300   000E3E  0E00               	movlw	0
  1301   000E40                     u920:
  1302   000E40  6E40               	movwf	dtoa@s^0,c
  1303   000E42                     
  1304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1305   000E42  5040               	movf	dtoa@s^0,w,c
  1306   000E44  B4D8               	btfsc	status,2,c
  1307   000E46  EF27  F007         	goto	u931
  1308   000E4A  EF29  F007         	goto	u930
  1309   000E4E                     u931:
  1310   000E4E  EF39  F007         	goto	l1793
  1311   000E52                     u930:
  1312   000E52                     
  1313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1314   000E52  1E3D               	comf	(dtoa@n+7)^0,f,c
  1315   000E54  1E3C               	comf	(dtoa@n+6)^0,f,c
  1316   000E56  1E3B               	comf	(dtoa@n+5)^0,f,c
  1317   000E58  1E3A               	comf	(dtoa@n+4)^0,f,c
  1318   000E5A  1E39               	comf	(dtoa@n+3)^0,f,c
  1319   000E5C  1E38               	comf	(dtoa@n+2)^0,f,c
  1320   000E5E  1E37               	comf	(dtoa@n+1)^0,f,c
  1321   000E60  6C36               	negf	dtoa@n^0,c
  1322   000E62  0E00               	movlw	0
  1323   000E64  2237               	addwfc	(dtoa@n+1)^0,f,c
  1324   000E66  2238               	addwfc	(dtoa@n+2)^0,f,c
  1325   000E68  2239               	addwfc	(dtoa@n+3)^0,f,c
  1326   000E6A  223A               	addwfc	(dtoa@n+4)^0,f,c
  1327   000E6C  223B               	addwfc	(dtoa@n+5)^0,f,c
  1328   000E6E  223C               	addwfc	(dtoa@n+6)^0,f,c
  1329   000E70  223D               	addwfc	(dtoa@n+7)^0,f,c
  1330   000E72                     l1793:
  1331                           
  1332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1333   000E72  0100               	movlb	0	; () banked
  1334   000E74  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  1335   000E76  EF47  F007         	goto	u940
  1336   000E7A  51D4               	movf	(_prec+1)& (0+255),w,b
  1337   000E7C  E106               	bnz	u941
  1338   000E7E  05D3               	decf	_prec& (0+255),w,b
  1339   000E80  B0D8               	btfsc	status,0,c
  1340   000E82  EF45  F007         	goto	u941
  1341   000E86  EF47  F007         	goto	u940
  1342   000E8A                     u941:
  1343   000E8A  EF4D  F007         	goto	l1056
  1344   000E8E                     u940:
  1345   000E8E                     
  1346                           ; BSR set to: 0
  1347   000E8E  0E00               	movlw	0
  1348   000E90  6E33               	movwf	(dtoa@p+1)^0,c
  1349   000E92  0E01               	movlw	1
  1350   000E94  6E32               	movwf	dtoa@p^0,c
  1351   000E96  EF51  F007         	goto	l1058
  1352   000E9A                     l1056:
  1353                           
  1354                           ; BSR set to: 0
  1355   000E9A  C0D3  F032         	movff	_prec,dtoa@p
  1356   000E9E  C0D4  F033         	movff	_prec+1,dtoa@p+1
  1357   000EA2                     l1058:
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1361   000EA2  C0D1  F034         	movff	_width,dtoa@w
  1362   000EA6  C0D2  F035         	movff	_width+1,dtoa@w+1
  1363   000EAA                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1366   000EAA  5040               	movf	dtoa@s^0,w,c
  1367   000EAC  B4D8               	btfsc	status,2,c
  1368   000EAE  EF5B  F007         	goto	u951
  1369   000EB2  EF5D  F007         	goto	u950
  1370   000EB6                     u951:
  1371   000EB6  EF74  F007         	goto	l1059
  1372   000EBA                     u950:
  1373   000EBA                     
  1374                           ; BSR set to: 0
  1375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1376   000EBA  0634               	decf	dtoa@w^0,f,c
  1377   000EBC  A0D8               	btfss	status,0,c
  1378   000EBE  0635               	decf	(dtoa@w+1)^0,f,c
  1379   000EC0                     
  1380                           ; BSR set to: 0
  1381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1382   000EC0  5040               	movf	dtoa@s^0,w,c
  1383   000EC2  A4D8               	btfss	status,2,c
  1384   000EC4  EF66  F007         	goto	u961
  1385   000EC8  EF68  F007         	goto	u960
  1386   000ECC                     u961:
  1387   000ECC  EF6E  F007         	goto	l1805
  1388   000ED0                     u960:
  1389   000ED0                     
  1390                           ; BSR set to: 0
  1391   000ED0  0E00               	movlw	0
  1392   000ED2  6E31               	movwf	(_dtoa$2145+1)^0,c
  1393   000ED4  0E2B               	movlw	43
  1394   000ED6  6E30               	movwf	_dtoa$2145^0,c
  1395   000ED8  EF72  F007         	goto	l1807
  1396   000EDC                     l1805:
  1397                           
  1398                           ; BSR set to: 0
  1399   000EDC  0E00               	movlw	0
  1400   000EDE  6E31               	movwf	(_dtoa$2145+1)^0,c
  1401   000EE0  0E2D               	movlw	45
  1402   000EE2  6E30               	movwf	_dtoa$2145^0,c
  1403   000EE4                     l1807:
  1404                           
  1405                           ; BSR set to: 0
  1406   000EE4  C030  F040         	movff	_dtoa$2145,dtoa@s
  1407   000EE8                     l1059:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1411   000EE8  0E00               	movlw	0
  1412   000EEA  6E3F               	movwf	(dtoa@i+1)^0,c
  1413   000EEC  0E1F               	movlw	31
  1414   000EEE  6E3E               	movwf	dtoa@i^0,c
  1415   000EF0                     
  1416                           ; BSR set to: 0
  1417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1418   000EF0  0E00               	movlw	0
  1419   000EF2  6FFB               	movwf	(_dbuf+31)& (0+255),b
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1422   000EF4  EFF8  F007         	goto	l1821
  1423   000EF8                     l1811:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1426   000EF8  063E               	decf	dtoa@i^0,f,c
  1427   000EFA  A0D8               	btfss	status,0,c
  1428   000EFC  063F               	decf	(dtoa@i+1)^0,f,c
  1429   000EFE                     
  1430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1431   000EFE  0EDC               	movlw	low _dbuf
  1432   000F00  243E               	addwf	dtoa@i^0,w,c
  1433   000F02  6ED9               	movwf	fsr2l,c
  1434   000F04  0E00               	movlw	high _dbuf
  1435   000F06  203F               	addwfc	(dtoa@i+1)^0,w,c
  1436   000F08  6EDA               	movwf	fsr2h,c
  1437   000F0A  C036  F003         	movff	dtoa@n,___aomod@dividend
  1438   000F0E  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1439   000F12  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1440   000F16  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1441   000F1A  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1442   000F1E  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1443   000F22  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1444   000F26  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1445   000F2A  0E0A               	movlw	10
  1446   000F2C  6E0B               	movwf	___aomod@divisor^0,c
  1447   000F2E  0E00               	movlw	0
  1448   000F30  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1449   000F32  0E00               	movlw	0
  1450   000F34  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1451   000F36  0E00               	movlw	0
  1452   000F38  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1453   000F3A  0E00               	movlw	0
  1454   000F3C  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1455   000F3E  0E00               	movlw	0
  1456   000F40  6E10               	movwf	(___aomod@divisor+5)^0,c
  1457   000F42  0E00               	movlw	0
  1458   000F44  6E11               	movwf	(___aomod@divisor+6)^0,c
  1459   000F46  0E00               	movlw	0
  1460   000F48  6E12               	movwf	(___aomod@divisor+7)^0,c
  1461   000F4A  ECCF  F009         	call	___aomod	;wreg free
  1462   000F4E  C003  F028         	movff	?___aomod,??_dtoa
  1463   000F52  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1464   000F56  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1465   000F5A  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1466   000F5E  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1467   000F62  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1468   000F66  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1469   000F6A  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1470   000F6E  C028  F015         	movff	??_dtoa,abs@a
  1471   000F72  C029  F016         	movff	??_dtoa+1,abs@a+1
  1472   000F76  ECF6  F00D         	call	_abs	;wreg free
  1473   000F7A  5015               	movf	?_abs^0,w,c
  1474   000F7C  0F30               	addlw	48
  1475   000F7E  6EDF               	movwf	indf2,c
  1476   000F80                     
  1477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1478   000F80  0632               	decf	dtoa@p^0,f,c
  1479   000F82  A0D8               	btfss	status,0,c
  1480   000F84  0633               	decf	(dtoa@p+1)^0,f,c
  1481   000F86                     
  1482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1483   000F86  0634               	decf	dtoa@w^0,f,c
  1484   000F88  A0D8               	btfss	status,0,c
  1485   000F8A  0635               	decf	(dtoa@w+1)^0,f,c
  1486   000F8C                     
  1487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1488   000F8C  C036  F003         	movff	dtoa@n,___aodiv@dividend
  1489   000F90  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1490   000F94  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1491   000F98  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1492   000F9C  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1493   000FA0  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1494   000FA4  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1495   000FA8  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  1496   000FAC  0E0A               	movlw	10
  1497   000FAE  6E0B               	movwf	___aodiv@divisor^0,c
  1498   000FB0  0E00               	movlw	0
  1499   000FB2  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  1500   000FB4  0E00               	movlw	0
  1501   000FB6  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  1502   000FB8  0E00               	movlw	0
  1503   000FBA  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  1504   000FBC  0E00               	movlw	0
  1505   000FBE  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  1506   000FC0  0E00               	movlw	0
  1507   000FC2  6E10               	movwf	(___aodiv@divisor+5)^0,c
  1508   000FC4  0E00               	movlw	0
  1509   000FC6  6E11               	movwf	(___aodiv@divisor+6)^0,c
  1510   000FC8  0E00               	movlw	0
  1511   000FCA  6E12               	movwf	(___aodiv@divisor+7)^0,c
  1512   000FCC  EC0B  F009         	call	___aodiv	;wreg free
  1513   000FD0  C003  F036         	movff	?___aodiv,dtoa@n
  1514   000FD4  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  1515   000FD8  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  1516   000FDC  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  1517   000FE0  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  1518   000FE4  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  1519   000FE8  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  1520   000FEC  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  1521   000FF0                     l1821:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1524   000FF0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1525   000FF2  EF03  F008         	goto	u971
  1526   000FF6  503F               	movf	(dtoa@i+1)^0,w,c
  1527   000FF8  E108               	bnz	u970
  1528   000FFA  043E               	decf	dtoa@i^0,w,c
  1529   000FFC  A0D8               	btfss	status,0,c
  1530   000FFE  EF03  F008         	goto	u971
  1531   001002  EF05  F008         	goto	u970
  1532   001006                     u971:
  1533   001006  EF21  F008         	goto	l1827
  1534   00100A                     u970:
  1535   00100A  5036               	movf	dtoa@n^0,w,c
  1536   00100C  1037               	iorwf	(dtoa@n+1)^0,w,c
  1537   00100E  1038               	iorwf	(dtoa@n+2)^0,w,c
  1538   001010  1039               	iorwf	(dtoa@n+3)^0,w,c
  1539   001012  103A               	iorwf	(dtoa@n+4)^0,w,c
  1540   001014  103B               	iorwf	(dtoa@n+5)^0,w,c
  1541   001016  103C               	iorwf	(dtoa@n+6)^0,w,c
  1542   001018  103D               	iorwf	(dtoa@n+7)^0,w,c
  1543   00101A  A4D8               	btfss	status,2,c
  1544   00101C  EF12  F008         	goto	u981
  1545   001020  EF14  F008         	goto	u980
  1546   001024                     u981:
  1547   001024  EF7C  F007         	goto	l1811
  1548   001028                     u980:
  1549   001028  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1550   00102A  EF21  F008         	goto	u990
  1551   00102E  5033               	movf	(dtoa@p+1)^0,w,c
  1552   001030  E106               	bnz	u991
  1553   001032  0432               	decf	dtoa@p^0,w,c
  1554   001034  B0D8               	btfsc	status,0,c
  1555   001036  EF1F  F008         	goto	u991
  1556   00103A  EF21  F008         	goto	u990
  1557   00103E                     u991:
  1558   00103E  EF7C  F007         	goto	l1811
  1559   001042                     u990:
  1560   001042                     l1827:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1563   001042  5040               	movf	dtoa@s^0,w,c
  1564   001044  B4D8               	btfsc	status,2,c
  1565   001046  EF27  F008         	goto	u1001
  1566   00104A  EF29  F008         	goto	u1000
  1567   00104E                     u1001:
  1568   00104E  EF34  F008         	goto	l1833
  1569   001052                     u1000:
  1570   001052                     
  1571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1572   001052  063E               	decf	dtoa@i^0,f,c
  1573   001054  A0D8               	btfss	status,0,c
  1574   001056  063F               	decf	(dtoa@i+1)^0,f,c
  1575   001058                     
  1576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1577   001058  0EDC               	movlw	low _dbuf
  1578   00105A  243E               	addwf	dtoa@i^0,w,c
  1579   00105C  6ED9               	movwf	fsr2l,c
  1580   00105E  0E00               	movlw	high _dbuf
  1581   001060  203F               	addwfc	(dtoa@i+1)^0,w,c
  1582   001062  6EDA               	movwf	fsr2h,c
  1583   001064  C040  FFDF         	movff	dtoa@s,indf2
  1584   001068                     l1833:
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1587   001068  C01E  F013         	movff	dtoa@fp,pad@fp
  1588   00106C  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1589   001070  0EDC               	movlw	low _dbuf
  1590   001072  243E               	addwf	dtoa@i^0,w,c
  1591   001074  6E15               	movwf	pad@buf^0,c
  1592   001076  0E00               	movlw	high _dbuf
  1593   001078  203F               	addwfc	(dtoa@i+1)^0,w,c
  1594   00107A  6E16               	movwf	(pad@buf+1)^0,c
  1595   00107C  C034  F017         	movff	dtoa@w,pad@p
  1596   001080  C035  F018         	movff	dtoa@w+1,pad@p+1
  1597   001084  EC3F  F00C         	call	_pad	;wreg free
  1598   001088  0012               	return		;funcret
  1599   00108A                     __end_of_dtoa:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _pad *****************
  1603 ;; Defined at:
  1604 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1607 ;;		 -> sprintf@f(11), 
  1608 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1609 ;;		 -> dbuf(32), 
  1610 ;;  p               2   22[COMRAM] int 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  w               2   27[COMRAM] int 
  1613 ;;  i               2   25[COMRAM] int 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1623 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;Total ram usage:       11 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 5
  1630 ;; This function calls:
  1631 ;;		_fputc
  1632 ;;		_fputs
  1633 ;; This function is called by:
  1634 ;;		_dtoa
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text5
  1639   00187E                     __ptext5:
  1640                           	callstack 0
  1641   00187E                     _pad:
  1642                           	callstack 21
  1643   00187E                     
  1644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1645   00187E  BE18               	btfsc	(pad@p+1)^0,7,c
  1646   001880  EF44  F00C         	goto	u861
  1647   001884  EF46  F00C         	goto	u860
  1648   001888                     u861:
  1649   001888  EF4C  F00C         	goto	l1767
  1650   00188C                     u860:
  1651   00188C  C017  F01C         	movff	pad@p,pad@w
  1652   001890  C018  F01D         	movff	pad@p+1,pad@w+1
  1653   001894  EF50  F00C         	goto	l1047
  1654   001898                     l1767:
  1655   001898  0E00               	movlw	0
  1656   00189A  6E1D               	movwf	(pad@w+1)^0,c
  1657   00189C  0E00               	movlw	0
  1658   00189E  6E1C               	movwf	pad@w^0,c
  1659   0018A0                     l1047:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1662   0018A0  0E00               	movlw	0
  1663   0018A2  6E1B               	movwf	(pad@i+1)^0,c
  1664   0018A4  0E00               	movlw	0
  1665   0018A6  6E1A               	movwf	pad@i^0,c
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1668   0018A8  EF62  F00C         	goto	l1773
  1669   0018AC                     l1769:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1672   0018AC  0E00               	movlw	0
  1673   0018AE  6E04               	movwf	(fputc@c+1)^0,c
  1674   0018B0  0E20               	movlw	32
  1675   0018B2  6E03               	movwf	fputc@c^0,c
  1676   0018B4  C013  F005         	movff	pad@fp,fputc@fp
  1677   0018B8  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1678   0018BC  EC28  F00B         	call	_fputc	;wreg free
  1679   0018C0                     
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1681   0018C0  4A1A               	infsnz	pad@i^0,f,c
  1682   0018C2  2A1B               	incf	(pad@i+1)^0,f,c
  1683   0018C4                     l1773:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1686   0018C4  501C               	movf	pad@w^0,w,c
  1687   0018C6  5C1A               	subwf	pad@i^0,w,c
  1688   0018C8  501B               	movf	(pad@i+1)^0,w,c
  1689   0018CA  0A80               	xorlw	128
  1690   0018CC  6E19               	movwf	??_pad^0,c
  1691   0018CE  501D               	movf	(pad@w+1)^0,w,c
  1692   0018D0  0A80               	xorlw	128
  1693   0018D2  5819               	subwfb	??_pad^0,w,c
  1694   0018D4  A0D8               	btfss	status,0,c
  1695   0018D6  EF6F  F00C         	goto	u871
  1696   0018DA  EF71  F00C         	goto	u870
  1697   0018DE                     u871:
  1698   0018DE  EF56  F00C         	goto	l1769
  1699   0018E2                     u870:
  1700   0018E2                     
  1701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1702   0018E2  C015  F00C         	movff	pad@buf,fputs@s
  1703   0018E6  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1704   0018EA  C013  F00E         	movff	pad@fp,fputs@fp
  1705   0018EE  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1706   0018F2  ECB3  F00D         	call	_fputs	;wreg free
  1707   0018F6  0012               	return		;funcret
  1708   0018F8                     __end_of_pad:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _fputs *****************
  1712 ;; Defined at:
  1713 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1716 ;;		 -> dbuf(32), 
  1717 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1718 ;;		 -> sprintf@f(11), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  i               2   16[COMRAM] int 
  1721 ;;  c               1   15[COMRAM] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2   11[COMRAM] int 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;Total ram usage:        7 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 4
  1738 ;; This function calls:
  1739 ;;		_fputc
  1740 ;; This function is called by:
  1741 ;;		_pad
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text6
  1746   001B66                     __ptext6:
  1747                           	callstack 0
  1748   001B66                     _fputs:
  1749                           	callstack 21
  1750   001B66  0E00               	movlw	0
  1751   001B68  6E12               	movwf	(fputs@i+1)^0,c
  1752   001B6A  0E00               	movlw	0
  1753   001B6C  6E11               	movwf	fputs@i^0,c
  1754   001B6E  EFC4  F00D         	goto	l1681
  1755   001B72                     l1677:
  1756   001B72  C010  F003         	movff	fputs@c,fputc@c
  1757   001B76  6A04               	clrf	(fputc@c+1)^0,c
  1758   001B78  C00E  F005         	movff	fputs@fp,fputc@fp
  1759   001B7C  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1760   001B80  EC28  F00B         	call	_fputc	;wreg free
  1761   001B84  4A11               	infsnz	fputs@i^0,f,c
  1762   001B86  2A12               	incf	(fputs@i+1)^0,f,c
  1763   001B88                     l1681:
  1764   001B88  5011               	movf	fputs@i^0,w,c
  1765   001B8A  240C               	addwf	fputs@s^0,w,c
  1766   001B8C  6ED9               	movwf	fsr2l,c
  1767   001B8E  5012               	movf	(fputs@i+1)^0,w,c
  1768   001B90  200D               	addwfc	(fputs@s+1)^0,w,c
  1769   001B92  6EDA               	movwf	fsr2h,c
  1770   001B94  50DF               	movf	indf2,w,c
  1771   001B96  6E10               	movwf	fputs@c^0,c
  1772   001B98  5010               	movf	fputs@c^0,w,c
  1773   001B9A  A4D8               	btfss	status,2,c
  1774   001B9C  EFD2  F00D         	goto	u721
  1775   001BA0  EFD4  F00D         	goto	u720
  1776   001BA4                     u721:
  1777   001BA4  EFB9  F00D         	goto	l1677
  1778   001BA8                     u720:
  1779   001BA8  0012               	return		;funcret
  1780   001BAA                     __end_of_fputs:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _fputc *****************
  1784 ;; Defined at:
  1785 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  c               2    2[COMRAM] int 
  1788 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1789 ;;		 -> sprintf@f(11), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  2    2[COMRAM] int 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;Total ram usage:        9 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 3
  1808 ;; This function calls:
  1809 ;;		_putch
  1810 ;; This function is called by:
  1811 ;;		_pad
  1812 ;;		_vfpfcnvrt
  1813 ;;		_fputs
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text7
  1818   001650                     __ptext7:
  1819                           	callstack 0
  1820   001650                     _fputc:
  1821                           	callstack 24
  1822   001650  5005               	movf	fputc@fp^0,w,c
  1823   001652  1006               	iorwf	(fputc@fp+1)^0,w,c
  1824   001654  B4D8               	btfsc	status,2,c
  1825   001656  EF2F  F00B         	goto	u681
  1826   00165A  EF31  F00B         	goto	u680
  1827   00165E                     u681:
  1828   00165E  EF3A  F00B         	goto	l1665
  1829   001662                     u680:
  1830   001662  5005               	movf	fputc@fp^0,w,c
  1831   001664  1006               	iorwf	(fputc@fp+1)^0,w,c
  1832   001666  A4D8               	btfss	status,2,c
  1833   001668  EF38  F00B         	goto	u691
  1834   00166C  EF3A  F00B         	goto	u690
  1835   001670                     u691:
  1836   001670  EF3F  F00B         	goto	l1667
  1837   001674                     u690:
  1838   001674                     l1665:
  1839   001674  5003               	movf	fputc@c^0,w,c
  1840   001676  ECC9  F00E         	call	_putch
  1841   00167A  EF8C  F00B         	goto	l1102
  1842   00167E                     l1667:
  1843   00167E  EE20 F009          	lfsr	2,9
  1844   001682  5005               	movf	fputc@fp^0,w,c
  1845   001684  26D9               	addwf	fsr2l,f,c
  1846   001686  5006               	movf	(fputc@fp+1)^0,w,c
  1847   001688  22DA               	addwfc	fsr2h,f,c
  1848   00168A  50DE               	movf	postinc2,w,c
  1849   00168C  10DE               	iorwf	postinc2,w,c
  1850   00168E  B4D8               	btfsc	status,2,c
  1851   001690  EF4C  F00B         	goto	u701
  1852   001694  EF4E  F00B         	goto	u700
  1853   001698                     u701:
  1854   001698  EF69  F00B         	goto	l1671
  1855   00169C                     u700:
  1856   00169C  EE20 F009          	lfsr	2,9
  1857   0016A0  5005               	movf	fputc@fp^0,w,c
  1858   0016A2  26D9               	addwf	fsr2l,f,c
  1859   0016A4  5006               	movf	(fputc@fp+1)^0,w,c
  1860   0016A6  22DA               	addwfc	fsr2h,f,c
  1861   0016A8  EE10 F003          	lfsr	1,3
  1862   0016AC  5005               	movf	fputc@fp^0,w,c
  1863   0016AE  26E1               	addwf	fsr1l,f,c
  1864   0016B0  5006               	movf	(fputc@fp+1)^0,w,c
  1865   0016B2  22E2               	addwfc	fsr1h,f,c
  1866   0016B4  50DE               	movf	postinc2,w,c
  1867   0016B6  5CE6               	subwf	postinc1,w,c
  1868   0016B8  50E6               	movf	postinc1,w,c
  1869   0016BA  0A80               	xorlw	128
  1870   0016BC  6E0B               	movwf	(??_fputc+4)^0,c
  1871   0016BE  50DE               	movf	postinc2,w,c
  1872   0016C0  0A80               	xorlw	128
  1873   0016C2  580B               	subwfb	(??_fputc+4)^0,w,c
  1874   0016C4  B0D8               	btfsc	status,0,c
  1875   0016C6  EF67  F00B         	goto	u711
  1876   0016CA  EF69  F00B         	goto	u710
  1877   0016CE                     u711:
  1878   0016CE  EF8C  F00B         	goto	l1102
  1879   0016D2                     u710:
  1880   0016D2                     l1671:
  1881   0016D2  EE20 F003          	lfsr	2,3
  1882   0016D6  5005               	movf	fputc@fp^0,w,c
  1883   0016D8  26D9               	addwf	fsr2l,f,c
  1884   0016DA  5006               	movf	(fputc@fp+1)^0,w,c
  1885   0016DC  22DA               	addwfc	fsr2h,f,c
  1886   0016DE  CFDE F007          	movff	postinc2,??_fputc
  1887   0016E2  CFDD F008          	movff	postdec2,??_fputc+1
  1888   0016E6  C005  FFD9         	movff	fputc@fp,fsr2l
  1889   0016EA  C006  FFDA         	movff	fputc@fp+1,fsr2h
  1890   0016EE  CFDE F009          	movff	postinc2,??_fputc+2
  1891   0016F2  CFDD F00A          	movff	postdec2,??_fputc+3
  1892   0016F6  5007               	movf	??_fputc^0,w,c
  1893   0016F8  2409               	addwf	(??_fputc+2)^0,w,c
  1894   0016FA  6ED9               	movwf	fsr2l,c
  1895   0016FC  5008               	movf	(??_fputc+1)^0,w,c
  1896   0016FE  200A               	addwfc	(??_fputc+3)^0,w,c
  1897   001700  6EDA               	movwf	fsr2h,c
  1898   001702  C003  FFDF         	movff	fputc@c,indf2
  1899   001706  EE20 F003          	lfsr	2,3
  1900   00170A  5005               	movf	fputc@fp^0,w,c
  1901   00170C  26D9               	addwf	fsr2l,f,c
  1902   00170E  5006               	movf	(fputc@fp+1)^0,w,c
  1903   001710  22DA               	addwfc	fsr2h,f,c
  1904   001712  2ADE               	incf	postinc2,f,c
  1905   001714  0E00               	movlw	0
  1906   001716  22DD               	addwfc	postdec2,f,c
  1907   001718                     l1102:
  1908   001718  0012               	return		;funcret
  1909   00171A                     __end_of_fputc:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _putch *****************
  1913 ;; Defined at:
  1914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  c               1    wreg     unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  c               1    0[COMRAM] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 2
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_fputc
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text8
  1943   001D92                     __ptext8:
  1944                           	callstack 0
  1945   001D92                     _putch:
  1946                           	callstack 24
  1947   001D92  0012               	return		;funcret
  1948   001D94                     __end_of_putch:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _abs *****************
  1952 ;; Defined at:
  1953 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  a               2   20[COMRAM] int 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2   20[COMRAM] int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;Total ram usage:        4 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 2
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_dtoa
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text9
  1982   001BEC                     __ptext9:
  1983                           	callstack 0
  1984   001BEC                     _abs:
  1985                           	callstack 24
  1986   001BEC  BE16               	btfsc	(abs@a+1)^0,7,c
  1987   001BEE  EF03  F00E         	goto	u880
  1988   001BF2  5016               	movf	(abs@a+1)^0,w,c
  1989   001BF4  E106               	bnz	u881
  1990   001BF6  0415               	decf	abs@a^0,w,c
  1991   001BF8  B0D8               	btfsc	status,0,c
  1992   001BFA  EF01  F00E         	goto	u881
  1993   001BFE  EF03  F00E         	goto	u880
  1994   001C02                     u881:
  1995   001C02  EF11  F00E         	goto	l1087
  1996   001C06                     u880:
  1997   001C06  C015  F017         	movff	abs@a,??_abs
  1998   001C0A  C016  F018         	movff	abs@a+1,??_abs+1
  1999   001C0E  1E17               	comf	??_abs^0,f,c
  2000   001C10  1E18               	comf	(??_abs+1)^0,f,c
  2001   001C12  4A17               	infsnz	??_abs^0,f,c
  2002   001C14  2A18               	incf	(??_abs+1)^0,f,c
  2003   001C16  C017  F015         	movff	??_abs,?_abs
  2004   001C1A  C018  F016         	movff	??_abs+1,?_abs+1
  2005   001C1E  EF15  F00E         	goto	l1090
  2006   001C22                     l1087:
  2007   001C22  C015  F015         	movff	abs@a,?_abs
  2008   001C26  C016  F016         	movff	abs@a+1,?_abs+1
  2009   001C2A                     l1090:
  2010   001C2A  0012               	return		;funcret
  2011   001C2C                     __end_of_abs:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function ___aomod *****************
  2015 ;; Defined at:
  2016 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  dividend        8    2[COMRAM] long long 
  2019 ;;  divisor         8   10[COMRAM] long long 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  sign            1   19[COMRAM] unsigned char 
  2022 ;;  counter         1   18[COMRAM] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  8    2[COMRAM] long long 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2032 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;Total ram usage:       18 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 2
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_dtoa
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text10
  2047   00139E                     __ptext10:
  2048                           	callstack 0
  2049   00139E                     ___aomod:
  2050                           	callstack 24
  2051   00139E  0E00               	movlw	0
  2052   0013A0  6E14               	movwf	___aomod@sign^0,c
  2053   0013A2  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2054   0013A4  EFD8  F009         	goto	u800
  2055   0013A8  EFD6  F009         	goto	u801
  2056   0013AC                     u801:
  2057   0013AC  EFEA  F009         	goto	l1735
  2058   0013B0                     u800:
  2059   0013B0  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2060   0013B2  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2061   0013B4  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2062   0013B6  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2063   0013B8  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2064   0013BA  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2065   0013BC  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2066   0013BE  6C03               	negf	___aomod@dividend^0,c
  2067   0013C0  0E00               	movlw	0
  2068   0013C2  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2069   0013C4  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2070   0013C6  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2071   0013C8  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2072   0013CA  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2073   0013CC  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2074   0013CE  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2075   0013D0  0E01               	movlw	1
  2076   0013D2  6E14               	movwf	___aomod@sign^0,c
  2077   0013D4                     l1735:
  2078   0013D4  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2079   0013D6  EFF1  F009         	goto	u810
  2080   0013DA  EFEF  F009         	goto	u811
  2081   0013DE                     u811:
  2082   0013DE  EF01  F00A         	goto	l1739
  2083   0013E2                     u810:
  2084   0013E2  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2085   0013E4  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2086   0013E6  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2087   0013E8  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2088   0013EA  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2089   0013EC  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2090   0013EE  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2091   0013F0  6C0B               	negf	___aomod@divisor^0,c
  2092   0013F2  0E00               	movlw	0
  2093   0013F4  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2094   0013F6  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2095   0013F8  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2096   0013FA  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2097   0013FC  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2098   0013FE  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2099   001400  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2100   001402                     l1739:
  2101   001402  500B               	movf	___aomod@divisor^0,w,c
  2102   001404  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2103   001406  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2104   001408  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2105   00140A  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2106   00140C  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2107   00140E  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2108   001410  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2109   001412  B4D8               	btfsc	status,2,c
  2110   001414  EF0E  F00A         	goto	u821
  2111   001418  EF10  F00A         	goto	u820
  2112   00141C                     u821:
  2113   00141C  EF58  F00A         	goto	l1755
  2114   001420                     u820:
  2115   001420  0E01               	movlw	1
  2116   001422  6E13               	movwf	___aomod@counter^0,c
  2117   001424  EF1E  F00A         	goto	l1745
  2118   001428                     l1743:
  2119   001428  90D8               	bcf	status,0,c
  2120   00142A  360B               	rlcf	___aomod@divisor^0,f,c
  2121   00142C  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2122   00142E  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2123   001430  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2124   001432  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2125   001434  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2126   001436  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2127   001438  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2128   00143A  2A13               	incf	___aomod@counter^0,f,c
  2129   00143C                     l1745:
  2130   00143C  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2131   00143E  EF23  F00A         	goto	u831
  2132   001442  EF25  F00A         	goto	u830
  2133   001446                     u831:
  2134   001446  EF14  F00A         	goto	l1743
  2135   00144A                     u830:
  2136   00144A                     l1747:
  2137   00144A  500B               	movf	___aomod@divisor^0,w,c
  2138   00144C  5C03               	subwf	___aomod@dividend^0,w,c
  2139   00144E  500C               	movf	(___aomod@divisor+1)^0,w,c
  2140   001450  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2141   001452  500D               	movf	(___aomod@divisor+2)^0,w,c
  2142   001454  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2143   001456  500E               	movf	(___aomod@divisor+3)^0,w,c
  2144   001458  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2145   00145A  500F               	movf	(___aomod@divisor+4)^0,w,c
  2146   00145C  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2147   00145E  5010               	movf	(___aomod@divisor+5)^0,w,c
  2148   001460  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2149   001462  5011               	movf	(___aomod@divisor+6)^0,w,c
  2150   001464  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2151   001466  5012               	movf	(___aomod@divisor+7)^0,w,c
  2152   001468  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2153   00146A  A0D8               	btfss	status,0,c
  2154   00146C  EF3A  F00A         	goto	u841
  2155   001470  EF3C  F00A         	goto	u840
  2156   001474                     u841:
  2157   001474  EF4C  F00A         	goto	l1751
  2158   001478                     u840:
  2159   001478  500B               	movf	___aomod@divisor^0,w,c
  2160   00147A  5E03               	subwf	___aomod@dividend^0,f,c
  2161   00147C  500C               	movf	(___aomod@divisor+1)^0,w,c
  2162   00147E  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2163   001480  500D               	movf	(___aomod@divisor+2)^0,w,c
  2164   001482  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2165   001484  500E               	movf	(___aomod@divisor+3)^0,w,c
  2166   001486  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2167   001488  500F               	movf	(___aomod@divisor+4)^0,w,c
  2168   00148A  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2169   00148C  5010               	movf	(___aomod@divisor+5)^0,w,c
  2170   00148E  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2171   001490  5011               	movf	(___aomod@divisor+6)^0,w,c
  2172   001492  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2173   001494  5012               	movf	(___aomod@divisor+7)^0,w,c
  2174   001496  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2175   001498                     l1751:
  2176   001498  90D8               	bcf	status,0,c
  2177   00149A  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2178   00149C  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2179   00149E  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2180   0014A0  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2181   0014A2  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2182   0014A4  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2183   0014A6  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2184   0014A8  320B               	rrcf	___aomod@divisor^0,f,c
  2185   0014AA  2E13               	decfsz	___aomod@counter^0,f,c
  2186   0014AC  EF25  F00A         	goto	l1747
  2187   0014B0                     l1755:
  2188   0014B0  5014               	movf	___aomod@sign^0,w,c
  2189   0014B2  B4D8               	btfsc	status,2,c
  2190   0014B4  EF5E  F00A         	goto	u851
  2191   0014B8  EF60  F00A         	goto	u850
  2192   0014BC                     u851:
  2193   0014BC  EF70  F00A         	goto	l1759
  2194   0014C0                     u850:
  2195   0014C0  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2196   0014C2  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2197   0014C4  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2198   0014C6  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2199   0014C8  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2200   0014CA  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2201   0014CC  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2202   0014CE  6C03               	negf	___aomod@dividend^0,c
  2203   0014D0  0E00               	movlw	0
  2204   0014D2  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2205   0014D4  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2206   0014D6  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2207   0014D8  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2208   0014DA  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2209   0014DC  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2210   0014DE  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2211   0014E0                     l1759:
  2212   0014E0  C003  F003         	movff	___aomod@dividend,?___aomod
  2213   0014E4  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2214   0014E8  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2215   0014EC  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2216   0014F0  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2217   0014F4  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2218   0014F8  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2219   0014FC  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2220   001500  0012               	return		;funcret
  2221   001502                     __end_of___aomod:
  2222                           	callstack 0
  2223                           
  2224 ;; *************** function ___aodiv *****************
  2225 ;; Defined at:
  2226 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  dividend        8    2[COMRAM] long long 
  2229 ;;  divisor         8   10[COMRAM] long long 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  quotient        8   20[COMRAM] long long 
  2232 ;;  sign            1   19[COMRAM] unsigned char 
  2233 ;;  counter         1   18[COMRAM] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  8    2[COMRAM] long long 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2243 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;Total ram usage:       26 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 2
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_dtoa
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text11
  2258   001216                     __ptext11:
  2259                           	callstack 0
  2260   001216                     ___aodiv:
  2261                           	callstack 24
  2262   001216  0E00               	movlw	0
  2263   001218  6E14               	movwf	___aodiv@sign^0,c
  2264   00121A  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2265   00121C  EF14  F009         	goto	u730
  2266   001220  EF12  F009         	goto	u731
  2267   001224                     u731:
  2268   001224  EF26  F009         	goto	l1691
  2269   001228                     u730:
  2270   001228  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2271   00122A  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2272   00122C  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2273   00122E  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2274   001230  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2275   001232  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2276   001234  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2277   001236  6C0B               	negf	___aodiv@divisor^0,c
  2278   001238  0E00               	movlw	0
  2279   00123A  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2280   00123C  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2281   00123E  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2282   001240  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2283   001242  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2284   001244  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2285   001246  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2286   001248  0E01               	movlw	1
  2287   00124A  6E14               	movwf	___aodiv@sign^0,c
  2288   00124C                     l1691:
  2289   00124C  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2290   00124E  EF2D  F009         	goto	u740
  2291   001252  EF2B  F009         	goto	u741
  2292   001256                     u741:
  2293   001256  EF3F  F009         	goto	l1697
  2294   00125A                     u740:
  2295   00125A  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2296   00125C  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2297   00125E  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2298   001260  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2299   001262  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2300   001264  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2301   001266  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2302   001268  6C03               	negf	___aodiv@dividend^0,c
  2303   00126A  0E00               	movlw	0
  2304   00126C  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2305   00126E  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2306   001270  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2307   001272  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2308   001274  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2309   001276  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2310   001278  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2311   00127A  0E01               	movlw	1
  2312   00127C  1A14               	xorwf	___aodiv@sign^0,f,c
  2313   00127E                     l1697:
  2314   00127E  EE20  F015         	lfsr	2,___aodiv@quotient
  2315   001282  0E07               	movlw	7
  2316   001284                     u751:
  2317   001284  6ADE               	clrf	postinc2,c
  2318   001286  06E8               	decf	wreg,f,c
  2319   001288  E2FD               	bc	u751
  2320   00128A  500B               	movf	___aodiv@divisor^0,w,c
  2321   00128C  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2322   00128E  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2323   001290  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2324   001292  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2325   001294  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2326   001296  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2327   001298  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2328   00129A  B4D8               	btfsc	status,2,c
  2329   00129C  EF52  F009         	goto	u761
  2330   0012A0  EF54  F009         	goto	u760
  2331   0012A4                     u761:
  2332   0012A4  EFA6  F009         	goto	l1719
  2333   0012A8                     u760:
  2334   0012A8  0E01               	movlw	1
  2335   0012AA  6E13               	movwf	___aodiv@counter^0,c
  2336   0012AC  EF62  F009         	goto	l1705
  2337   0012B0                     l1703:
  2338   0012B0  90D8               	bcf	status,0,c
  2339   0012B2  360B               	rlcf	___aodiv@divisor^0,f,c
  2340   0012B4  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2341   0012B6  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2342   0012B8  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2343   0012BA  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2344   0012BC  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2345   0012BE  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2346   0012C0  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2347   0012C2  2A13               	incf	___aodiv@counter^0,f,c
  2348   0012C4                     l1705:
  2349   0012C4  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2350   0012C6  EF67  F009         	goto	u771
  2351   0012CA  EF69  F009         	goto	u770
  2352   0012CE                     u771:
  2353   0012CE  EF58  F009         	goto	l1703
  2354   0012D2                     u770:
  2355   0012D2                     l1707:
  2356   0012D2  90D8               	bcf	status,0,c
  2357   0012D4  3615               	rlcf	___aodiv@quotient^0,f,c
  2358   0012D6  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2359   0012D8  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2360   0012DA  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2361   0012DC  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2362   0012DE  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2363   0012E0  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2364   0012E2  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2365   0012E4  500B               	movf	___aodiv@divisor^0,w,c
  2366   0012E6  5C03               	subwf	___aodiv@dividend^0,w,c
  2367   0012E8  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2368   0012EA  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2369   0012EC  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2370   0012EE  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2371   0012F0  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2372   0012F2  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2373   0012F4  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2374   0012F6  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2375   0012F8  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2376   0012FA  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2377   0012FC  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2378   0012FE  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2379   001300  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2380   001302  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2381   001304  A0D8               	btfss	status,0,c
  2382   001306  EF87  F009         	goto	u781
  2383   00130A  EF89  F009         	goto	u780
  2384   00130E                     u781:
  2385   00130E  EF9A  F009         	goto	l1715
  2386   001312                     u780:
  2387   001312  500B               	movf	___aodiv@divisor^0,w,c
  2388   001314  5E03               	subwf	___aodiv@dividend^0,f,c
  2389   001316  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2390   001318  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2391   00131A  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2392   00131C  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2393   00131E  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2394   001320  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2395   001322  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2396   001324  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2397   001326  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2398   001328  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2399   00132A  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2400   00132C  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2401   00132E  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2402   001330  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2403   001332  8015               	bsf	___aodiv@quotient^0,0,c
  2404   001334                     l1715:
  2405   001334  90D8               	bcf	status,0,c
  2406   001336  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2407   001338  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2408   00133A  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2409   00133C  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2410   00133E  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2411   001340  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2412   001342  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2413   001344  320B               	rrcf	___aodiv@divisor^0,f,c
  2414   001346  2E13               	decfsz	___aodiv@counter^0,f,c
  2415   001348  EF69  F009         	goto	l1707
  2416   00134C                     l1719:
  2417   00134C  5014               	movf	___aodiv@sign^0,w,c
  2418   00134E  B4D8               	btfsc	status,2,c
  2419   001350  EFAC  F009         	goto	u791
  2420   001354  EFAE  F009         	goto	u790
  2421   001358                     u791:
  2422   001358  EFBE  F009         	goto	l1723
  2423   00135C                     u790:
  2424   00135C  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2425   00135E  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2426   001360  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2427   001362  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2428   001364  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2429   001366  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2430   001368  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2431   00136A  6C15               	negf	___aodiv@quotient^0,c
  2432   00136C  0E00               	movlw	0
  2433   00136E  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2434   001370  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2435   001372  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2436   001374  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2437   001376  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2438   001378  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2439   00137A  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2440   00137C                     l1723:
  2441   00137C  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2442   001380  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2443   001384  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2444   001388  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2445   00138C  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2446   001390  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2447   001394  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2448   001398  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2449   00139C  0012               	return		;funcret
  2450   00139E                     __end_of___aodiv:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _sendStringSerial4 *****************
  2454 ;; Defined at:
  2455 ;;		line 36 in file "../serial.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  string          2    3[COMRAM] PTR unsigned char 
  2458 ;;		 -> main@readout(50), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 3
  2477 ;; This function calls:
  2478 ;;		_sendCharSerial4
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text12
  2485   001C2C                     __ptext12:
  2486                           	callstack 0
  2487   001C2C                     _sendStringSerial4:
  2488                           	callstack 27
  2489   001C2C                     
  2490                           ;../serial.c: 39:     while (*string != 0)
  2491   001C2C  EF21  F00E         	goto	l2069
  2492   001C30                     l2065:
  2493                           
  2494                           ;../serial.c: 40:     {;../serial.c: 41:         sendCharSerial4(*string++);
  2495   001C30  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2496   001C34  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2497   001C38  50DF               	movf	indf2,w,c
  2498   001C3A  EC9D  F00E         	call	_sendCharSerial4
  2499   001C3E  4A04               	infsnz	sendStringSerial4@string^0,f,c
  2500   001C40  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  2501   001C42                     l2069:
  2502                           
  2503                           ;../serial.c: 39:     while (*string != 0)
  2504   001C42  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2505   001C46  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2506   001C4A  50DF               	movf	indf2,w,c
  2507   001C4C  A4D8               	btfss	status,2,c
  2508   001C4E  EF2B  F00E         	goto	u1121
  2509   001C52  EF2D  F00E         	goto	u1120
  2510   001C56                     u1121:
  2511   001C56  EF18  F00E         	goto	l2065
  2512   001C5A                     u1120:
  2513   001C5A  0012               	return		;funcret
  2514   001C5C                     __end_of_sendStringSerial4:
  2515                           	callstack 0
  2516                           
  2517 ;; *************** function _sendCharSerial4 *****************
  2518 ;; Defined at:
  2519 ;;		line 29 in file "../serial.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  charToSend      1    wreg     unsigned char 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  charToSend      1    2[COMRAM] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;Total ram usage:        1 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 2
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_sendStringSerial4
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text13
  2548   001D3A                     __ptext13:
  2549                           	callstack 0
  2550   001D3A                     _sendCharSerial4:
  2551                           	callstack 27
  2552                           
  2553                           ;incstack = 0
  2554                           ;sendCharSerial4@charToSend stored from wreg
  2555   001D3A  6E03               	movwf	sendCharSerial4@charToSend^0,c
  2556   001D3C                     l335:
  2557   001D3C  010E               	movlb	14	; () banked
  2558   001D3E  A537               	btfss	55,2,b	;volatile
  2559   001D40  EFA4  F00E         	goto	u1061
  2560   001D44  EFA6  F00E         	goto	u1060
  2561   001D48                     u1061:
  2562   001D48  EF9E  F00E         	goto	l335
  2563   001D4C                     u1060:
  2564   001D4C                     
  2565                           ; BSR set to: 14
  2566                           ;../serial.c: 31:     TX4REG = charToSend;
  2567   001D4C  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2568   001D50                     
  2569                           ; BSR set to: 14
  2570   001D50  0012               	return		;funcret
  2571   001D52                     __end_of_sendCharSerial4:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _initUSART4 *****************
  2575 ;; Defined at:
  2576 ;;		line 4 in file "../serial.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 2
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text14
  2605   001D1C                     __ptext14:
  2606                           	callstack 0
  2607   001D1C                     _initUSART4:
  2608                           	callstack 28
  2609   001D1C                     
  2610                           ;../serial.c: 8:     RC0PPS = 0x12;
  2611   001D1C  0E12               	movlw	18
  2612   001D1E  010E               	movlb	14	; () banked
  2613   001D20  6F62               	movwf	98,b	;volatile
  2614                           
  2615                           ;../serial.c: 9:     RX4PPS = 0x11;
  2616   001D22  0E11               	movlw	17
  2617   001D24  6F15               	movwf	21,b	;volatile
  2618   001D26                     
  2619                           ; BSR set to: 14
  2620                           ;../serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  2621   001D26  97E9               	bcf	233,3,b	;volatile
  2622   001D28                     
  2623                           ; BSR set to: 14
  2624                           ;../serial.c: 12:     TX4STAbits.BRGH = 0;
  2625   001D28  95E8               	bcf	232,2,b	;volatile
  2626                           
  2627                           ;../serial.c: 13:     SP4BRGL = 51;
  2628   001D2A  0E33               	movlw	51
  2629   001D2C  6FE5               	movwf	229,b	;volatile
  2630                           
  2631                           ;../serial.c: 14:     SP4BRGH = 0;
  2632   001D2E  0E00               	movlw	0
  2633   001D30  6FE6               	movwf	230,b	;volatile
  2634   001D32                     
  2635                           ; BSR set to: 14
  2636                           ;../serial.c: 16:     RC4STAbits.CREN = 1;
  2637   001D32  89E7               	bsf	231,4,b	;volatile
  2638   001D34                     
  2639                           ; BSR set to: 14
  2640                           ;../serial.c: 17:     TX4STAbits.TXEN = 1;
  2641   001D34  8BE8               	bsf	232,5,b	;volatile
  2642   001D36                     
  2643                           ; BSR set to: 14
  2644                           ;../serial.c: 18:     RC4STAbits.SPEN = 1;
  2645   001D36  8FE7               	bsf	231,7,b	;volatile
  2646   001D38                     
  2647                           ; BSR set to: 14
  2648   001D38  0012               	return		;funcret
  2649   001D3A                     __end_of_initUSART4:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _initDCmotorsPWM *****************
  2653 ;; Defined at:
  2654 ;;		line 5 in file "../dc_motor.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  PWMperiod       2    2[COMRAM] int 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, prodl, prodh
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;Total ram usage:        2 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 2
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text15
  2683   001B20                     __ptext15:
  2684                           	callstack 0
  2685   001B20                     _initDCmotorsPWM:
  2686                           	callstack 28
  2687   001B20                     
  2688                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2689   001B20  9485               	bcf	133,2,c	;volatile
  2690                           
  2691                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2692   001B22  9885               	bcf	133,4,c	;volatile
  2693                           
  2694                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2695   001B24  9E83               	bcf	131,7,c	;volatile
  2696                           
  2697                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2698   001B26  9C87               	bcf	135,6,c	;volatile
  2699                           
  2700                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2701   001B28  947D               	bcf	125,2,c	;volatile
  2702                           
  2703                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2704   001B2A  987D               	bcf	125,4,c	;volatile
  2705                           
  2706                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2707   001B2C  9E7B               	bcf	123,7,c	;volatile
  2708                           
  2709                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2710   001B2E  9C7F               	bcf	127,6,c	;volatile
  2711   001B30                     
  2712                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  2713   001B30  50BD               	movf	189,w,c	;volatile
  2714   001B32  0B8F               	andlw	-113
  2715   001B34  0930               	iorlw	48
  2716   001B36  6EBD               	movwf	189,c	;volatile
  2717                           
  2718                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2719   001B38  0EE0               	movlw	-32
  2720   001B3A  16BE               	andwf	190,f,c	;volatile
  2721                           
  2722                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2723   001B3C  50BF               	movf	191,w,c	;volatile
  2724   001B3E  0BF0               	andlw	-16
  2725   001B40  0901               	iorlw	1
  2726   001B42  6EBF               	movwf	191,c	;volatile
  2727   001B44                     
  2728                           ;../dc_motor.c: 23:     T2PR=PWMperiod * 2000000 - 1;
  2729   001B44  5003               	movf	initDCmotorsPWM@PWMperiod^0,w,c
  2730   001B46  0D80               	mullw	-128
  2731   001B48  04F3               	decf	243,w,c
  2732   001B4A  6EBC               	movwf	188,c	;volatile
  2733   001B4C                     
  2734                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  2735   001B4C  8EBD               	bsf	189,7,c	;volatile
  2736   001B4E                     
  2737                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  2738   001B4E  0E0A               	movlw	10
  2739   001B50  010E               	movlb	14	; () banked
  2740   001B52  6F74               	movwf	116,b	;volatile
  2741   001B54                     
  2742                           ; BSR set to: 14
  2743                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  2744   001B54  0E0B               	movlw	11
  2745   001B56  6F69               	movwf	105,b	;volatile
  2746   001B58                     
  2747                           ; BSR set to: 14
  2748                           ;../dc_motor.c: 29:     PWM6DCH=0;
  2749   001B58  0E00               	movlw	0
  2750   001B5A  6EA3               	movwf	163,c	;volatile
  2751   001B5C                     
  2752                           ; BSR set to: 14
  2753                           ;../dc_motor.c: 30:     PWM7DCH=0;
  2754   001B5C  0E00               	movlw	0
  2755   001B5E  6EA0               	movwf	160,c	;volatile
  2756   001B60                     
  2757                           ; BSR set to: 14
  2758                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  2759   001B60  8EA4               	bsf	164,7,c	;volatile
  2760   001B62                     
  2761                           ; BSR set to: 14
  2762                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  2763   001B62  8EA1               	bsf	161,7,c	;volatile
  2764   001B64                     
  2765                           ; BSR set to: 14
  2766   001B64  0012               	return		;funcret
  2767   001B66                     __end_of_initDCmotorsPWM:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _color_read *****************
  2771 ;; Defined at:
  2772 ;;		line 99 in file "../color.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  rgb             2   13[COMRAM] PTR struct RGB_val
  2775 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;Total ram usage:        4 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 5
  2794 ;; This function calls:
  2795 ;;		_color_read_Blue
  2796 ;;		_color_read_Green
  2797 ;;		_color_read_Luminosity
  2798 ;;		_color_read_Red
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text16
  2805   0017D8                     __ptext16:
  2806                           	callstack 0
  2807   0017D8                     _color_read:
  2808                           	callstack 25
  2809   0017D8                     
  2810                           ;../color.c: 99: void color_read(struct RGB_val *rgb);../color.c: 100: {;../color.c: 101
      +                          :     rgb->L = color_read_Luminosity();
  2811   0017D8  ECCD  F00C         	call	_color_read_Luminosity	;wreg free
  2812   0017DC  C00E  FFD9         	movff	color_read@rgb,fsr2l
  2813   0017E0  C00F  FFDA         	movff	color_read@rgb+1,fsr2h
  2814   0017E4  C007  FFDE         	movff	?_color_read_Luminosity,postinc2
  2815   0017E8  C008  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  2816   0017EC                     
  2817                           ;../color.c: 102:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2818   0017EC  0E09               	movlw	9
  2819   0017EE  6E11               	movwf	(??_color_read+1)^0,c
  2820   0017F0  0E1E               	movlw	30
  2821   0017F2  6E10               	movwf	??_color_read^0,c
  2822   0017F4  0EE4               	movlw	228
  2823   0017F6                     u1387:
  2824   0017F6  2EE8               	decfsz	wreg,f,c
  2825   0017F8  D7FE               	bra	u1387
  2826   0017FA  2E10               	decfsz	??_color_read^0,f,c
  2827   0017FC  D7FC               	bra	u1387
  2828   0017FE  2E11               	decfsz	(??_color_read+1)^0,f,c
  2829   001800  D7FA               	bra	u1387
  2830   001802  D000               	nop2	
  2831   001804                     
  2832                           ;../color.c: 103:     rgb->R = color_read_Red();
  2833   001804  ECA5  F00C         	call	_color_read_Red	;wreg free
  2834   001808  EE20 F002          	lfsr	2,2
  2835   00180C  500E               	movf	color_read@rgb^0,w,c
  2836   00180E  26D9               	addwf	fsr2l,f,c
  2837   001810  500F               	movf	(color_read@rgb+1)^0,w,c
  2838   001812  22DA               	addwfc	fsr2h,f,c
  2839   001814  C007  FFDE         	movff	?_color_read_Red,postinc2
  2840   001818  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  2841                           
  2842                           ;../color.c: 104:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2843   00181C  0E09               	movlw	9
  2844   00181E  6E11               	movwf	(??_color_read+1)^0,c
  2845   001820  0E1E               	movlw	30
  2846   001822  6E10               	movwf	??_color_read^0,c
  2847   001824  0EE4               	movlw	228
  2848   001826                     u1397:
  2849   001826  2EE8               	decfsz	wreg,f,c
  2850   001828  D7FE               	bra	u1397
  2851   00182A  2E10               	decfsz	??_color_read^0,f,c
  2852   00182C  D7FC               	bra	u1397
  2853   00182E  2E11               	decfsz	(??_color_read+1)^0,f,c
  2854   001830  D7FA               	bra	u1397
  2855   001832  D000               	nop2	
  2856   001834                     
  2857                           ;../color.c: 105:     rgb->G = color_read_Green();
  2858   001834  ECF5  F00C         	call	_color_read_Green	;wreg free
  2859   001838  EE20 F004          	lfsr	2,4
  2860   00183C  500E               	movf	color_read@rgb^0,w,c
  2861   00183E  26D9               	addwf	fsr2l,f,c
  2862   001840  500F               	movf	(color_read@rgb+1)^0,w,c
  2863   001842  22DA               	addwfc	fsr2h,f,c
  2864   001844  C007  FFDE         	movff	?_color_read_Green,postinc2
  2865   001848  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  2866   00184C                     
  2867                           ;../color.c: 106:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2868   00184C  0E09               	movlw	9
  2869   00184E  6E11               	movwf	(??_color_read+1)^0,c
  2870   001850  0E1E               	movlw	30
  2871   001852  6E10               	movwf	??_color_read^0,c
  2872   001854  0EE4               	movlw	228
  2873   001856                     u1407:
  2874   001856  2EE8               	decfsz	wreg,f,c
  2875   001858  D7FE               	bra	u1407
  2876   00185A  2E10               	decfsz	??_color_read^0,f,c
  2877   00185C  D7FC               	bra	u1407
  2878   00185E  2E11               	decfsz	(??_color_read+1)^0,f,c
  2879   001860  D7FA               	bra	u1407
  2880   001862  D000               	nop2	
  2881                           
  2882                           ;../color.c: 107:     rgb->B = color_read_Blue();
  2883   001864  EC1D  F00D         	call	_color_read_Blue	;wreg free
  2884   001868  EE20 F006          	lfsr	2,6
  2885   00186C  500E               	movf	color_read@rgb^0,w,c
  2886   00186E  26D9               	addwf	fsr2l,f,c
  2887   001870  500F               	movf	(color_read@rgb+1)^0,w,c
  2888   001872  22DA               	addwfc	fsr2h,f,c
  2889   001874  C007  FFDE         	movff	?_color_read_Blue,postinc2
  2890   001878  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  2891   00187C  0012               	return		;funcret
  2892   00187E                     __end_of_color_read:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _color_read_Red *****************
  2896 ;; Defined at:
  2897 ;;		line 57 in file "../color.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  tmp             2   11[COMRAM] unsigned int 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  2    6[COMRAM] unsigned int 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;Total ram usage:        7 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 4
  2918 ;; This function calls:
  2919 ;;		_I2C_2_Master_Read
  2920 ;;		_I2C_2_Master_RepStart
  2921 ;;		_I2C_2_Master_Start
  2922 ;;		_I2C_2_Master_Stop
  2923 ;;		_I2C_2_Master_Write
  2924 ;; This function is called by:
  2925 ;;		_color_read
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text17
  2930   00194A                     __ptext17:
  2931                           	callstack 0
  2932   00194A                     _color_read_Red:
  2933                           	callstack 25
  2934   00194A                     
  2935                           ;../color.c: 59:  unsigned int tmp;;../color.c: 60:  I2C_2_Master_Start();
  2936   00194A  ECBF  F00E         	call	_I2C_2_Master_Start	;wreg free
  2937                           
  2938                           ;../color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  2939   00194E  0E52               	movlw	82
  2940   001950  ECA9  F00E         	call	_I2C_2_Master_Write
  2941                           
  2942                           ;../color.c: 62:  I2C_2_Master_Write(0xA0 | 0x16);
  2943   001954  0EB6               	movlw	182
  2944   001956  ECA9  F00E         	call	_I2C_2_Master_Write
  2945                           
  2946                           ;../color.c: 63:  I2C_2_Master_RepStart();
  2947   00195A  ECB5  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2948                           
  2949                           ;../color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  2950   00195E  0E53               	movlw	83
  2951   001960  ECA9  F00E         	call	_I2C_2_Master_Write
  2952                           
  2953                           ;../color.c: 65:  tmp=I2C_2_Master_Read(1);
  2954   001964  0E01               	movlw	1
  2955   001966  ECD5  F00D         	call	_I2C_2_Master_Read
  2956   00196A  6E09               	movwf	??_color_read_Red^0,c
  2957   00196C  5009               	movf	??_color_read_Red^0,w,c
  2958   00196E  6E0C               	movwf	color_read_Red@tmp^0,c
  2959   001970  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  2960                           
  2961                           ;../color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2962   001972  0E00               	movlw	0
  2963   001974  ECD5  F00D         	call	_I2C_2_Master_Read
  2964   001978  6E09               	movwf	??_color_read_Red^0,c
  2965   00197A  5009               	movf	??_color_read_Red^0,w,c
  2966   00197C  6E0B               	movwf	(??_color_read_Red+2)^0,c
  2967   00197E  6A0A               	clrf	(??_color_read_Red+1)^0,c
  2968   001980  500C               	movf	color_read_Red@tmp^0,w,c
  2969   001982  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  2970   001984  6E0C               	movwf	color_read_Red@tmp^0,c
  2971   001986  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  2972   001988  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  2973   00198A  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  2974                           
  2975                           ;../color.c: 67:  I2C_2_Master_Stop();
  2976   00198C  ECBA  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2977   001990                     
  2978                           ;../color.c: 68:  return tmp;
  2979   001990  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  2980   001994  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2981   001998  0012               	return		;funcret
  2982   00199A                     __end_of_color_read_Red:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _color_read_Luminosity *****************
  2986 ;; Defined at:
  2987 ;;		line 43 in file "../color.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  tmp             2   11[COMRAM] unsigned int 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  2    6[COMRAM] unsigned int 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;Total ram usage:        7 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 4
  3008 ;; This function calls:
  3009 ;;		_I2C_2_Master_Read
  3010 ;;		_I2C_2_Master_RepStart
  3011 ;;		_I2C_2_Master_Start
  3012 ;;		_I2C_2_Master_Stop
  3013 ;;		_I2C_2_Master_Write
  3014 ;; This function is called by:
  3015 ;;		_color_read
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text18
  3020   00199A                     __ptext18:
  3021                           	callstack 0
  3022   00199A                     _color_read_Luminosity:
  3023                           	callstack 25
  3024   00199A                     
  3025                           ;../color.c: 45:  unsigned int tmp;;../color.c: 46:  I2C_2_Master_Start();
  3026   00199A  ECBF  F00E         	call	_I2C_2_Master_Start	;wreg free
  3027                           
  3028                           ;../color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3029   00199E  0E52               	movlw	82
  3030   0019A0  ECA9  F00E         	call	_I2C_2_Master_Write
  3031                           
  3032                           ;../color.c: 48:  I2C_2_Master_Write(0xA0 | 0x14);
  3033   0019A4  0EB4               	movlw	180
  3034   0019A6  ECA9  F00E         	call	_I2C_2_Master_Write
  3035                           
  3036                           ;../color.c: 49:  I2C_2_Master_RepStart();
  3037   0019AA  ECB5  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3038                           
  3039                           ;../color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3040   0019AE  0E53               	movlw	83
  3041   0019B0  ECA9  F00E         	call	_I2C_2_Master_Write
  3042                           
  3043                           ;../color.c: 51:  tmp=I2C_2_Master_Read(1);
  3044   0019B4  0E01               	movlw	1
  3045   0019B6  ECD5  F00D         	call	_I2C_2_Master_Read
  3046   0019BA  6E09               	movwf	??_color_read_Luminosity^0,c
  3047   0019BC  5009               	movf	??_color_read_Luminosity^0,w,c
  3048   0019BE  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3049   0019C0  6A0D               	clrf	(color_read_Luminosity@tmp+1)^0,c
  3050                           
  3051                           ;../color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3052   0019C2  0E00               	movlw	0
  3053   0019C4  ECD5  F00D         	call	_I2C_2_Master_Read
  3054   0019C8  6E09               	movwf	??_color_read_Luminosity^0,c
  3055   0019CA  5009               	movf	??_color_read_Luminosity^0,w,c
  3056   0019CC  6E0B               	movwf	(??_color_read_Luminosity+2)^0,c
  3057   0019CE  6A0A               	clrf	(??_color_read_Luminosity+1)^0,c
  3058   0019D0  500C               	movf	color_read_Luminosity@tmp^0,w,c
  3059   0019D2  100A               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  3060   0019D4  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3061   0019D6  500D               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  3062   0019D8  100B               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  3063   0019DA  6E0D               	movwf	(color_read_Luminosity@tmp+1)^0,c
  3064                           
  3065                           ;../color.c: 53:  I2C_2_Master_Stop();
  3066   0019DC  ECBA  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3067   0019E0                     
  3068                           ;../color.c: 54:  return tmp;
  3069   0019E0  C00C  F007         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  3070   0019E4  C00D  F008         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  3071   0019E8  0012               	return		;funcret
  3072   0019EA                     __end_of_color_read_Luminosity:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _color_read_Green *****************
  3076 ;; Defined at:
  3077 ;;		line 71 in file "../color.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  tmp             2   11[COMRAM] unsigned int 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  2    6[COMRAM] unsigned int 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;Total ram usage:        7 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 4
  3098 ;; This function calls:
  3099 ;;		_I2C_2_Master_Read
  3100 ;;		_I2C_2_Master_RepStart
  3101 ;;		_I2C_2_Master_Start
  3102 ;;		_I2C_2_Master_Stop
  3103 ;;		_I2C_2_Master_Write
  3104 ;; This function is called by:
  3105 ;;		_color_read
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text19
  3110   0019EA                     __ptext19:
  3111                           	callstack 0
  3112   0019EA                     _color_read_Green:
  3113                           	callstack 25
  3114   0019EA                     
  3115                           ;../color.c: 73:  unsigned int tmp;;../color.c: 74:  I2C_2_Master_Start();
  3116   0019EA  ECBF  F00E         	call	_I2C_2_Master_Start	;wreg free
  3117                           
  3118                           ;../color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3119   0019EE  0E52               	movlw	82
  3120   0019F0  ECA9  F00E         	call	_I2C_2_Master_Write
  3121                           
  3122                           ;../color.c: 76:  I2C_2_Master_Write(0xA0 | 0x18);
  3123   0019F4  0EB8               	movlw	184
  3124   0019F6  ECA9  F00E         	call	_I2C_2_Master_Write
  3125                           
  3126                           ;../color.c: 77:  I2C_2_Master_RepStart();
  3127   0019FA  ECB5  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3128                           
  3129                           ;../color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3130   0019FE  0E53               	movlw	83
  3131   001A00  ECA9  F00E         	call	_I2C_2_Master_Write
  3132                           
  3133                           ;../color.c: 79:  tmp=I2C_2_Master_Read(1);
  3134   001A04  0E01               	movlw	1
  3135   001A06  ECD5  F00D         	call	_I2C_2_Master_Read
  3136   001A0A  6E09               	movwf	??_color_read_Green^0,c
  3137   001A0C  5009               	movf	??_color_read_Green^0,w,c
  3138   001A0E  6E0C               	movwf	color_read_Green@tmp^0,c
  3139   001A10  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  3140                           
  3141                           ;../color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3142   001A12  0E00               	movlw	0
  3143   001A14  ECD5  F00D         	call	_I2C_2_Master_Read
  3144   001A18  6E09               	movwf	??_color_read_Green^0,c
  3145   001A1A  5009               	movf	??_color_read_Green^0,w,c
  3146   001A1C  6E0B               	movwf	(??_color_read_Green+2)^0,c
  3147   001A1E  6A0A               	clrf	(??_color_read_Green+1)^0,c
  3148   001A20  500C               	movf	color_read_Green@tmp^0,w,c
  3149   001A22  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  3150   001A24  6E0C               	movwf	color_read_Green@tmp^0,c
  3151   001A26  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  3152   001A28  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  3153   001A2A  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  3154                           
  3155                           ;../color.c: 81:  I2C_2_Master_Stop();
  3156   001A2C  ECBA  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3157   001A30                     
  3158                           ;../color.c: 82:  return tmp;
  3159   001A30  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  3160   001A34  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3161   001A38  0012               	return		;funcret
  3162   001A3A                     __end_of_color_read_Green:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _color_read_Blue *****************
  3166 ;; Defined at:
  3167 ;;		line 85 in file "../color.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  tmp             2   11[COMRAM] unsigned int 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  2    6[COMRAM] unsigned int 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;Total ram usage:        7 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 4
  3188 ;; This function calls:
  3189 ;;		_I2C_2_Master_Read
  3190 ;;		_I2C_2_Master_RepStart
  3191 ;;		_I2C_2_Master_Start
  3192 ;;		_I2C_2_Master_Stop
  3193 ;;		_I2C_2_Master_Write
  3194 ;; This function is called by:
  3195 ;;		_color_read
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text20
  3200   001A3A                     __ptext20:
  3201                           	callstack 0
  3202   001A3A                     _color_read_Blue:
  3203                           	callstack 25
  3204   001A3A                     
  3205                           ;../color.c: 87:  unsigned int tmp;;../color.c: 88:  I2C_2_Master_Start();
  3206   001A3A  ECBF  F00E         	call	_I2C_2_Master_Start	;wreg free
  3207                           
  3208                           ;../color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  3209   001A3E  0E52               	movlw	82
  3210   001A40  ECA9  F00E         	call	_I2C_2_Master_Write
  3211                           
  3212                           ;../color.c: 90:  I2C_2_Master_Write(0xA0 | 0x1A);
  3213   001A44  0EBA               	movlw	186
  3214   001A46  ECA9  F00E         	call	_I2C_2_Master_Write
  3215                           
  3216                           ;../color.c: 91:  I2C_2_Master_RepStart();
  3217   001A4A  ECB5  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3218                           
  3219                           ;../color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  3220   001A4E  0E53               	movlw	83
  3221   001A50  ECA9  F00E         	call	_I2C_2_Master_Write
  3222                           
  3223                           ;../color.c: 93:  tmp=I2C_2_Master_Read(1);
  3224   001A54  0E01               	movlw	1
  3225   001A56  ECD5  F00D         	call	_I2C_2_Master_Read
  3226   001A5A  6E09               	movwf	??_color_read_Blue^0,c
  3227   001A5C  5009               	movf	??_color_read_Blue^0,w,c
  3228   001A5E  6E0C               	movwf	color_read_Blue@tmp^0,c
  3229   001A60  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  3230                           
  3231                           ;../color.c: 94:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3232   001A62  0E00               	movlw	0
  3233   001A64  ECD5  F00D         	call	_I2C_2_Master_Read
  3234   001A68  6E09               	movwf	??_color_read_Blue^0,c
  3235   001A6A  5009               	movf	??_color_read_Blue^0,w,c
  3236   001A6C  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  3237   001A6E  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  3238   001A70  500C               	movf	color_read_Blue@tmp^0,w,c
  3239   001A72  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  3240   001A74  6E0C               	movwf	color_read_Blue@tmp^0,c
  3241   001A76  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  3242   001A78  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  3243   001A7A  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  3244                           
  3245                           ;../color.c: 95:  I2C_2_Master_Stop();
  3246   001A7C  ECBA  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3247   001A80                     
  3248                           ;../color.c: 96:  return tmp;
  3249   001A80  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  3250   001A84  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3251   001A88  0012               	return		;funcret
  3252   001A8A                     __end_of_color_read_Blue:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _I2C_2_Master_RepStart *****************
  3256 ;; Defined at:
  3257 ;;		line 33 in file "../i2c.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;Total ram usage:        0 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 3
  3278 ;; This function calls:
  3279 ;;		_I2C_2_Master_Idle
  3280 ;; This function is called by:
  3281 ;;		_color_read_Luminosity
  3282 ;;		_color_read_Red
  3283 ;;		_color_read_Green
  3284 ;;		_color_read_Blue
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text21
  3289   001D6A                     __ptext21:
  3290                           	callstack 0
  3291   001D6A                     _I2C_2_Master_RepStart:
  3292                           	callstack 25
  3293   001D6A                     
  3294                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3295   001D6A  EC5A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3296   001D6E                     
  3297                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3298   001D6E  010E               	movlb	14	; () banked
  3299   001D70  83DA               	bsf	218,1,b	;volatile
  3300   001D72                     
  3301                           ; BSR set to: 14
  3302   001D72  0012               	return		;funcret
  3303   001D74                     __end_of_I2C_2_Master_RepStart:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _I2C_2_Master_Read *****************
  3307 ;; Defined at:
  3308 ;;		line 51 in file "../i2c.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  ack             1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  ack             1    4[COMRAM] unsigned char 
  3313 ;;  tmp             1    5[COMRAM] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;Total ram usage:        3 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 3
  3330 ;; This function calls:
  3331 ;;		_I2C_2_Master_Idle
  3332 ;; This function is called by:
  3333 ;;		_color_read_Luminosity
  3334 ;;		_color_read_Red
  3335 ;;		_color_read_Green
  3336 ;;		_color_read_Blue
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text22
  3341   001BAA                     __ptext22:
  3342                           	callstack 0
  3343   001BAA                     _I2C_2_Master_Read:
  3344                           	callstack 25
  3345                           
  3346                           ; BSR set to: 14
  3347                           ;incstack = 0
  3348                           ;I2C_2_Master_Read@ack stored from wreg
  3349   001BAA  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  3350   001BAC                     
  3351                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  3352   001BAC  EC5A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3353   001BB0                     
  3354                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3355   001BB0  010E               	movlb	14	; () banked
  3356   001BB2  87DA               	bsf	218,3,b	;volatile
  3357                           
  3358                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  3359   001BB4  EC5A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3360   001BB8                     
  3361                           ;../i2c.c: 57:   tmp = SSP2BUF;
  3362   001BB8  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3363                           
  3364                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  3365   001BBC  EC5A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3366   001BC0                     
  3367                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3368   001BC0  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  3369   001BC2  B4D8               	btfsc	status,2,c
  3370   001BC4  EFE6  F00D         	goto	u1011
  3371   001BC8  EFEA  F00D         	goto	u1010
  3372   001BCC                     u1011:
  3373   001BCC  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3374   001BCE  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  3375   001BD0  EFEB  F00D         	goto	u1028
  3376   001BD4                     u1010:
  3377   001BD4  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3378   001BD6                     u1028:
  3379   001BD6  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  3380   001BD8  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  3381   001BDA  010E               	movlb	14	; () banked
  3382   001BDC  51DA               	movf	218,w,b	;volatile
  3383   001BDE  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3384   001BE0  0BDF               	andlw	-33
  3385   001BE2  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3386   001BE4  6FDA               	movwf	218,b	;volatile
  3387   001BE6                     
  3388                           ; BSR set to: 14
  3389                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3390   001BE6  89DA               	bsf	218,4,b	;volatile
  3391   001BE8                     
  3392                           ; BSR set to: 14
  3393                           ;../i2c.c: 61:   return tmp;
  3394   001BE8  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  3395   001BEA                     
  3396                           ; BSR set to: 14
  3397   001BEA  0012               	return		;funcret
  3398   001BEC                     __end_of_I2C_2_Master_Read:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _color_processor_easy *****************
  3402 ;; Defined at:
  3403 ;;		line 122 in file "../color.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  3406 ;;		 -> main@RGB_recorded(8), 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  b               2   10[COMRAM] unsigned int 
  3409 ;;  a               2    8[COMRAM] unsigned int 
  3410 ;;  c               2    6[COMRAM] unsigned int 
  3411 ;;  color           2    4[COMRAM] unsigned int 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  2    2[COMRAM] unsigned int 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;Total ram usage:       10 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 2
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text23
  3436   00171A                     __ptext23:
  3437                           	callstack 0
  3438   00171A                     _color_processor_easy:
  3439                           	callstack 28
  3440   00171A                     
  3441                           ;../color.c: 122: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 123
      +                          : {;../color.c: 124:     unsigned int a = rgb->R;
  3442   00171A  EE20 F002          	lfsr	2,2
  3443   00171E  5003               	movf	color_processor_easy@rgb^0,w,c
  3444   001720  26D9               	addwf	fsr2l,f,c
  3445   001722  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3446   001724  22DA               	addwfc	fsr2h,f,c
  3447   001726  CFDE F009          	movff	postinc2,color_processor_easy@a
  3448   00172A  CFDD F00A          	movff	postdec2,color_processor_easy@a+1
  3449                           
  3450                           ;../color.c: 125:     unsigned int b = rgb->G;
  3451   00172E  EE20 F004          	lfsr	2,4
  3452   001732  5003               	movf	color_processor_easy@rgb^0,w,c
  3453   001734  26D9               	addwf	fsr2l,f,c
  3454   001736  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3455   001738  22DA               	addwfc	fsr2h,f,c
  3456   00173A  CFDE F00B          	movff	postinc2,color_processor_easy@b
  3457   00173E  CFDD F00C          	movff	postdec2,color_processor_easy@b+1
  3458                           
  3459                           ;../color.c: 126:     unsigned int c = rgb->B;
  3460   001742  EE20 F006          	lfsr	2,6
  3461   001746  5003               	movf	color_processor_easy@rgb^0,w,c
  3462   001748  26D9               	addwf	fsr2l,f,c
  3463   00174A  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3464   00174C  22DA               	addwfc	fsr2h,f,c
  3465   00174E  CFDE F007          	movff	postinc2,color_processor_easy@c
  3466   001752  CFDD F008          	movff	postdec2,color_processor_easy@c+1
  3467   001756                     
  3468                           ;../color.c: 127:     unsigned int color;;../color.c: 128:     if (a>=b & a>=c){color=1;
      +                          }
  3469   001756  500B               	movf	color_processor_easy@b^0,w,c
  3470   001758  5C09               	subwf	color_processor_easy@a^0,w,c
  3471   00175A  500C               	movf	(color_processor_easy@b+1)^0,w,c
  3472   00175C  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3473   00175E  A0D8               	btfss	status,0,c
  3474   001760  EFB4  F00B         	goto	u1081
  3475   001764  EFB6  F00B         	goto	u1080
  3476   001768                     u1081:
  3477   001768  EFC7  F00B         	goto	l1997
  3478   00176C                     u1080:
  3479   00176C  5007               	movf	color_processor_easy@c^0,w,c
  3480   00176E  5C09               	subwf	color_processor_easy@a^0,w,c
  3481   001770  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3482   001772  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3483   001774  A0D8               	btfss	status,0,c
  3484   001776  EFBF  F00B         	goto	u1091
  3485   00177A  EFC1  F00B         	goto	u1090
  3486   00177E                     u1091:
  3487   00177E  EFC7  F00B         	goto	l1997
  3488   001782                     u1090:
  3489   001782  0E00               	movlw	0
  3490   001784  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3491   001786  0E01               	movlw	1
  3492   001788  6E05               	movwf	color_processor_easy@color^0,c
  3493   00178A  EFE7  F00B         	goto	l2005
  3494   00178E                     l1997:
  3495   00178E  5009               	movf	color_processor_easy@a^0,w,c
  3496   001790  5C0B               	subwf	color_processor_easy@b^0,w,c
  3497   001792  500A               	movf	(color_processor_easy@a+1)^0,w,c
  3498   001794  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3499   001796  A0D8               	btfss	status,0,c
  3500   001798  EFD0  F00B         	goto	u1101
  3501   00179C  EFD2  F00B         	goto	u1100
  3502   0017A0                     u1101:
  3503   0017A0  EFE3  F00B         	goto	l2003
  3504   0017A4                     u1100:
  3505   0017A4  5007               	movf	color_processor_easy@c^0,w,c
  3506   0017A6  5C0B               	subwf	color_processor_easy@b^0,w,c
  3507   0017A8  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3508   0017AA  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3509   0017AC  A0D8               	btfss	status,0,c
  3510   0017AE  EFDB  F00B         	goto	u1111
  3511   0017B2  EFDD  F00B         	goto	u1110
  3512   0017B6                     u1111:
  3513   0017B6  EFE3  F00B         	goto	l2003
  3514   0017BA                     u1110:
  3515   0017BA  0E00               	movlw	0
  3516   0017BC  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3517   0017BE  0E02               	movlw	2
  3518   0017C0  6E05               	movwf	color_processor_easy@color^0,c
  3519   0017C2  EFE7  F00B         	goto	l2005
  3520   0017C6                     l2003:
  3521   0017C6  0E00               	movlw	0
  3522   0017C8  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3523   0017CA  0E03               	movlw	3
  3524   0017CC  6E05               	movwf	color_processor_easy@color^0,c
  3525   0017CE                     l2005:
  3526                           
  3527                           ;../color.c: 131:     return color;
  3528   0017CE  C005  F003         	movff	color_processor_easy@color,?_color_processor_easy
  3529   0017D2  C006  F004         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  3530   0017D6  0012               	return		;funcret
  3531   0017D8                     __end_of_color_processor_easy:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _color_click_init *****************
  3535 ;; Defined at:
  3536 ;;		line 5 in file "../color.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;Total ram usage:        1 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 5
  3557 ;; This function calls:
  3558 ;;		_I2C_2_Master_Init
  3559 ;;		_color_writetoaddr
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text24
  3566   001AD8                     __ptext24:
  3567                           	callstack 0
  3568   001AD8                     _color_click_init:
  3569                           	callstack 25
  3570   001AD8                     
  3571                           ;../color.c: 8:     I2C_2_Master_Init();
  3572   001AD8  EC45  F00E         	call	_I2C_2_Master_Init	;wreg free
  3573   001ADC                     
  3574                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  3575   001ADC  0E01               	movlw	1
  3576   001ADE  6E05               	movwf	color_writetoaddr@value^0,c
  3577   001AE0  0E00               	movlw	0
  3578   001AE2  EC6E  F00E         	call	_color_writetoaddr
  3579   001AE6                     
  3580                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3581   001AE6  0E3F               	movlw	63
  3582   001AE8  6E07               	movwf	??_color_click_init^0,c
  3583   001AEA  0E55               	movlw	85
  3584   001AEC                     u1417:
  3585   001AEC  2EE8               	decfsz	wreg,f,c
  3586   001AEE  D7FE               	bra	u1417
  3587   001AF0  2E07               	decfsz	??_color_click_init^0,f,c
  3588   001AF2  D7FC               	bra	u1417
  3589   001AF4  F000               	nop	
  3590   001AF6                     
  3591                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  3592   001AF6  0E03               	movlw	3
  3593   001AF8  6E05               	movwf	color_writetoaddr@value^0,c
  3594   001AFA  0E00               	movlw	0
  3595   001AFC  EC6E  F00E         	call	_color_writetoaddr
  3596   001B00                     
  3597                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3598   001B00  0ED5               	movlw	213
  3599   001B02  6E05               	movwf	color_writetoaddr@value^0,c
  3600   001B04  0E01               	movlw	1
  3601   001B06  EC6E  F00E         	call	_color_writetoaddr
  3602   001B0A                     
  3603                           ;../color.c: 21:     TRISHbits.TRISH1 = 0;
  3604   001B0A  9288               	bcf	136,1,c	;volatile
  3605   001B0C                     
  3606                           ;../color.c: 22:     TRISDbits.TRISD3 = 0;
  3607   001B0C  9684               	bcf	132,3,c	;volatile
  3608   001B0E                     
  3609                           ;../color.c: 23:     TRISDbits.TRISD4 = 0;
  3610   001B0E  9884               	bcf	132,4,c	;volatile
  3611   001B10                     
  3612                           ;../color.c: 24:     TRISHbits.TRISH0 = 0;
  3613   001B10  9088               	bcf	136,0,c	;volatile
  3614   001B12                     
  3615                           ;../color.c: 25:     TRISFbits.TRISF0 = 0;
  3616   001B12  9086               	bcf	134,0,c	;volatile
  3617   001B14                     
  3618                           ;../color.c: 27:     LATHbits.LATH1 = 1;
  3619   001B14  8280               	bsf	128,1,c	;volatile
  3620   001B16                     
  3621                           ;../color.c: 28:     LATDbits.LATD3 = 1;
  3622   001B16  867C               	bsf	124,3,c	;volatile
  3623   001B18                     
  3624                           ;../color.c: 29:     LATDbits.LATD4 = 1;
  3625   001B18  887C               	bsf	124,4,c	;volatile
  3626   001B1A                     
  3627                           ;../color.c: 30:     LATHbits.LATH0 = 1;
  3628   001B1A  8080               	bsf	128,0,c	;volatile
  3629   001B1C                     
  3630                           ;../color.c: 31:     LATFbits.LATF0 = 1;
  3631   001B1C  807E               	bsf	126,0,c	;volatile
  3632   001B1E  0012               	return		;funcret
  3633   001B20                     __end_of_color_click_init:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _color_writetoaddr *****************
  3637 ;; Defined at:
  3638 ;;		line 34 in file "../color.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  address         1    wreg     unsigned char 
  3641 ;;  value           1    4[COMRAM] unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  address         1    5[COMRAM] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3653 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;Total ram usage:        2 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 4
  3660 ;; This function calls:
  3661 ;;		_I2C_2_Master_Start
  3662 ;;		_I2C_2_Master_Stop
  3663 ;;		_I2C_2_Master_Write
  3664 ;; This function is called by:
  3665 ;;		_color_click_init
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text25
  3670   001CDC                     __ptext25:
  3671                           	callstack 0
  3672   001CDC                     _color_writetoaddr:
  3673                           	callstack 25
  3674                           
  3675                           ;incstack = 0
  3676                           ;color_writetoaddr@address stored from wreg
  3677   001CDC  6E06               	movwf	color_writetoaddr@address^0,c
  3678   001CDE                     
  3679                           ;../color.c: 34: void color_writetoaddr(char address, char value);../color.c: 35: {;../c
      +                          olor.c: 36:     I2C_2_Master_Start();
  3680   001CDE  ECBF  F00E         	call	_I2C_2_Master_Start	;wreg free
  3681                           
  3682                           ;../color.c: 37:     I2C_2_Master_Write(0x52 | 0x00);
  3683   001CE2  0E52               	movlw	82
  3684   001CE4  ECA9  F00E         	call	_I2C_2_Master_Write
  3685                           
  3686                           ;../color.c: 38:     I2C_2_Master_Write(0x80 | address);
  3687   001CE8  5006               	movf	color_writetoaddr@address^0,w,c
  3688   001CEA  0980               	iorlw	128
  3689   001CEC  ECA9  F00E         	call	_I2C_2_Master_Write
  3690                           
  3691                           ;../color.c: 39:     I2C_2_Master_Write(value);
  3692   001CF0  5005               	movf	color_writetoaddr@value^0,w,c
  3693   001CF2  ECA9  F00E         	call	_I2C_2_Master_Write
  3694                           
  3695                           ;../color.c: 40:     I2C_2_Master_Stop();
  3696   001CF6  ECBA  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3697   001CFA  0012               	return		;funcret
  3698   001CFC                     __end_of_color_writetoaddr:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _I2C_2_Master_Write *****************
  3702 ;; Defined at:
  3703 ;;		line 45 in file "../i2c.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  data_byte       1    wreg     unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  data_byte       1    3[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;Total ram usage:        1 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 3
  3724 ;; This function calls:
  3725 ;;		_I2C_2_Master_Idle
  3726 ;; This function is called by:
  3727 ;;		_color_writetoaddr
  3728 ;;		_color_read_Luminosity
  3729 ;;		_color_read_Red
  3730 ;;		_color_read_Green
  3731 ;;		_color_read_Blue
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text26
  3736   001D52                     __ptext26:
  3737                           	callstack 0
  3738   001D52                     _I2C_2_Master_Write:
  3739                           	callstack 25
  3740                           
  3741                           ;incstack = 0
  3742                           ;I2C_2_Master_Write@data_byte stored from wreg
  3743   001D52  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  3744   001D54                     
  3745                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  3746   001D54  EC5A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3747   001D58                     
  3748                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  3749   001D58  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3750   001D5C  0012               	return		;funcret
  3751   001D5E                     __end_of_I2C_2_Master_Write:
  3752                           	callstack 0
  3753                           
  3754 ;; *************** function _I2C_2_Master_Stop *****************
  3755 ;; Defined at:
  3756 ;;		line 39 in file "../i2c.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; Hardware stack levels required when called: 3
  3777 ;; This function calls:
  3778 ;;		_I2C_2_Master_Idle
  3779 ;; This function is called by:
  3780 ;;		_color_writetoaddr
  3781 ;;		_color_read_Luminosity
  3782 ;;		_color_read_Red
  3783 ;;		_color_read_Green
  3784 ;;		_color_read_Blue
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text27
  3789   001D74                     __ptext27:
  3790                           	callstack 0
  3791   001D74                     _I2C_2_Master_Stop:
  3792                           	callstack 25
  3793   001D74                     
  3794                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  3795   001D74  EC5A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3796   001D78                     
  3797                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3798   001D78  010E               	movlb	14	; () banked
  3799   001D7A  85DA               	bsf	218,2,b	;volatile
  3800   001D7C                     
  3801                           ; BSR set to: 14
  3802   001D7C  0012               	return		;funcret
  3803   001D7E                     __end_of_I2C_2_Master_Stop:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _I2C_2_Master_Start *****************
  3807 ;; Defined at:
  3808 ;;		line 27 in file "../i2c.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;Total ram usage:        0 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 3
  3829 ;; This function calls:
  3830 ;;		_I2C_2_Master_Idle
  3831 ;; This function is called by:
  3832 ;;		_color_writetoaddr
  3833 ;;		_color_read_Luminosity
  3834 ;;		_color_read_Red
  3835 ;;		_color_read_Green
  3836 ;;		_color_read_Blue
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text28
  3841   001D7E                     __ptext28:
  3842                           	callstack 0
  3843   001D7E                     _I2C_2_Master_Start:
  3844                           	callstack 25
  3845   001D7E                     
  3846                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  3847   001D7E  EC5A  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3848   001D82                     
  3849                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3850   001D82  010E               	movlb	14	; () banked
  3851   001D84  81DA               	bsf	218,0,b	;volatile
  3852   001D86                     
  3853                           ; BSR set to: 14
  3854   001D86  0012               	return		;funcret
  3855   001D88                     __end_of_I2C_2_Master_Start:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _I2C_2_Master_Idle *****************
  3859 ;; Defined at:
  3860 ;;		line 22 in file "../i2c.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;Total ram usage:        1 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 2
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_I2C_2_Master_Start
  3885 ;;		_I2C_2_Master_RepStart
  3886 ;;		_I2C_2_Master_Stop
  3887 ;;		_I2C_2_Master_Write
  3888 ;;		_I2C_2_Master_Read
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text29
  3893   001CB4                     __ptext29:
  3894                           	callstack 0
  3895   001CB4                     _I2C_2_Master_Idle:
  3896                           	callstack 25
  3897   001CB4                     l93:
  3898   001CB4  010E               	movlb	14	; () banked
  3899   001CB6  B5D8               	btfsc	216,2,b	;volatile
  3900   001CB8  EF60  F00E         	goto	u891
  3901   001CBC  EF62  F00E         	goto	u890
  3902   001CC0                     u891:
  3903   001CC0  EF5A  F00E         	goto	l93
  3904   001CC4                     u890:
  3905   001CC4                     
  3906                           ; BSR set to: 14
  3907   001CC4  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3908   001CC8  0E1F               	movlw	31
  3909   001CCA  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  3910   001CCC  A4D8               	btfss	status,2,c
  3911   001CCE  EF6B  F00E         	goto	u901
  3912   001CD2  EF6D  F00E         	goto	u900
  3913   001CD6                     u901:
  3914   001CD6  EF5A  F00E         	goto	l93
  3915   001CDA                     u900:
  3916   001CDA                     
  3917                           ; BSR set to: 14
  3918   001CDA  0012               	return		;funcret
  3919   001CDC                     __end_of_I2C_2_Master_Idle:
  3920                           	callstack 0
  3921                           
  3922 ;; *************** function _I2C_2_Master_Init *****************
  3923 ;; Defined at:
  3924 ;;		line 4 in file "../i2c.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;Total ram usage:        0 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; Hardware stack levels required when called: 2
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_color_click_init
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text30
  3954   001C8A                     __ptext30:
  3955                           	callstack 0
  3956   001C8A                     _I2C_2_Master_Init:
  3957                           	callstack 27
  3958   001C8A                     
  3959                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3960   001C8A  010E               	movlb	14	; () banked
  3961   001C8C  51D9               	movf	217,w,b	;volatile
  3962   001C8E  0BF0               	andlw	-16
  3963   001C90  0908               	iorlw	8
  3964   001C92  6FD9               	movwf	217,b	;volatile
  3965   001C94                     
  3966                           ; BSR set to: 14
  3967                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3968   001C94  8BD9               	bsf	217,5,b	;volatile
  3969                           
  3970                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3971   001C96  0E9F               	movlw	159
  3972   001C98  6FD6               	movwf	214,b	;volatile
  3973   001C9A                     
  3974                           ; BSR set to: 14
  3975                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3976   001C9A  8A84               	bsf	132,5,c	;volatile
  3977   001C9C                     
  3978                           ; BSR set to: 14
  3979                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3980   001C9C  8C84               	bsf	132,6,c	;volatile
  3981   001C9E                     
  3982                           ; BSR set to: 14
  3983                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3984   001C9E  9BA7               	bcf	167,5,b	;volatile
  3985   001CA0                     
  3986                           ; BSR set to: 14
  3987                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3988   001CA0  9DA7               	bcf	167,6,b	;volatile
  3989                           
  3990                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  3991   001CA2  0E1D               	movlw	29
  3992   001CA4  6F1D               	movwf	29,b	;volatile
  3993                           
  3994                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  3995   001CA6  0E1E               	movlw	30
  3996   001CA8  6F1C               	movwf	28,b	;volatile
  3997                           
  3998                           ;../i2c.c: 18:   RD5PPS=0x1C;
  3999   001CAA  0E1C               	movlw	28
  4000   001CAC  6F6F               	movwf	111,b	;volatile
  4001                           
  4002                           ;../i2c.c: 19:   RD6PPS=0x1B;
  4003   001CAE  0E1B               	movlw	27
  4004   001CB0  6F70               	movwf	112,b	;volatile
  4005   001CB2                     
  4006                           ; BSR set to: 14
  4007   001CB2  0012               	return		;funcret
  4008   001CB4                     __end_of_I2C_2_Master_Init:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function _Timer0_init *****************
  4012 ;; Defined at:
  4013 ;;		line 40 in file "../rc_servo.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;Total ram usage:        0 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 2
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_main
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text31
  4042   001CFC                     __ptext31:
  4043                           	callstack 0
  4044   001CFC                     _Timer0_init:
  4045                           	callstack 28
  4046   001CFC                     
  4047                           ;../rc_servo.c: 42:     T0CON1bits.T0CS=0b010;
  4048   001CFC  50D6               	movf	214,w,c	;volatile
  4049   001CFE  0B1F               	andlw	-225
  4050   001D00  0940               	iorlw	64
  4051   001D02  6ED6               	movwf	214,c	;volatile
  4052   001D04                     
  4053                           ;../rc_servo.c: 43:     T0CON1bits.T0ASYNC=1;
  4054   001D04  88D6               	bsf	214,4,c	;volatile
  4055                           
  4056                           ;../rc_servo.c: 44:     T0CON1bits.T0CKPS=0b0111;
  4057   001D06  50D6               	movf	214,w,c	;volatile
  4058   001D08  0BF0               	andlw	-16
  4059   001D0A  0907               	iorlw	7
  4060   001D0C  6ED6               	movwf	214,c	;volatile
  4061   001D0E                     
  4062                           ;../rc_servo.c: 46:     T0CON0bits.T016BIT=1;
  4063   001D0E  88D5               	bsf	213,4,c	;volatile
  4064                           
  4065                           ;../rc_servo.c: 49:     TMR0H=(65535-2500)>>8;
  4066   001D10  0EF6               	movlw	246
  4067   001D12  6ED4               	movwf	212,c	;volatile
  4068                           
  4069                           ;../rc_servo.c: 50:     TMR0L=(unsigned char)(65535-2500);
  4070   001D14  0E3B               	movlw	59
  4071   001D16  6ED3               	movwf	211,c	;volatile
  4072   001D18                     
  4073                           ;../rc_servo.c: 51:     T0CON0bits.T0EN=1;
  4074   001D18  8ED5               	bsf	213,7,c	;volatile
  4075   001D1A  0012               	return		;funcret
  4076   001D1C                     __end_of_Timer0_init:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _Interrupts_init *****************
  4080 ;; Defined at:
  4081 ;;		line 8 in file "../rc_servo.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		None
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 2
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text32
  4110   001D5E                     __ptext32:
  4111                           	callstack 0
  4112   001D5E                     _Interrupts_init:
  4113                           	callstack 28
  4114   001D5E                     
  4115                           ;../rc_servo.c: 10:     PIE0bits.TMR0IE=1;
  4116   001D5E  010E               	movlb	14	; () banked
  4117   001D60  8B29               	bsf	41,5,b	;volatile
  4118                           
  4119                           ;../rc_servo.c: 11:     INTCONbits.PEIE=1;
  4120   001D62  8CF2               	bsf	242,6,c	;volatile
  4121                           
  4122                           ;../rc_servo.c: 12:     INTCONbits.IPEN=0;
  4123   001D64  9AF2               	bcf	242,5,c	;volatile
  4124                           
  4125                           ;../rc_servo.c: 13:     INTCONbits.GIE=1;
  4126   001D66  8EF2               	bsf	242,7,c	;volatile
  4127   001D68                     
  4128                           ; BSR set to: 14
  4129   001D68  0012               	return		;funcret
  4130   001D6A                     __end_of_Interrupts_init:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _HighISR *****************
  4134 ;; Defined at:
  4135 ;;		line 20 in file "../rc_servo.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 1
  4156 ;; This function calls:
  4157 ;;		_write16bitTMR0val
  4158 ;; This function is called by:
  4159 ;;		Interrupt level 2
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	intcode
  4164   000008                     __pintcode:
  4165                           	callstack 0
  4166   000008                     _HighISR:
  4167                           	callstack 21
  4168                           
  4169                           ; BSR set to: 14
  4170                           ;incstack = 0
  4171   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4172   00000A                     
  4173                           ;../rc_servo.c: 22:     if (PIR0bits.TMR0IF)
  4174   00000A  010E               	movlb	14	; () banked
  4175   00000C  AB33               	btfss	51,5,b	;volatile
  4176   00000E  EF0B  F000         	goto	i2u124_41
  4177   000012  EF0D  F000         	goto	i2u124_40
  4178   000016                     i2u124_41:
  4179   000016  EF26  F000         	goto	i2l2123
  4180   00001A                     i2u124_40:
  4181   00001A                     
  4182                           ; BSR set to: 14
  4183                           ;../rc_servo.c: 23:     {;../rc_servo.c: 24:         if(LATEbits.LATE2){
  4184   00001A  A47D               	btfss	125,2,c	;volatile
  4185   00001C  EF12  F000         	goto	i2u125_41
  4186   000020  EF14  F000         	goto	i2u125_40
  4187   000024                     i2u125_41:
  4188   000024  EF1E  F000         	goto	i2l2119
  4189   000028                     i2u125_40:
  4190   000028                     
  4191                           ; BSR set to: 14
  4192                           ;../rc_servo.c: 25:             write16bitTMR0val(65535-off_period);
  4193   000028  0100               	movlb	0	; () banked
  4194   00002A  1DD5               	comf	_off_period& (0+255),w,b
  4195   00002C  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4196   00002E  1DD6               	comf	(_off_period+1)& (0+255),w,b
  4197   000030  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4198   000032  ECC4  F00E         	call	_write16bitTMR0val	;wreg free
  4199   000036                     
  4200                           ;../rc_servo.c: 26:             LATEbits.LATE2=0;
  4201   000036  947D               	bcf	125,2,c	;volatile
  4202                           
  4203                           ;../rc_servo.c: 28:         } else {
  4204   000038  EF26  F000         	goto	i2l2123
  4205   00003C                     i2l2119:
  4206                           
  4207                           ; BSR set to: 14
  4208                           ;../rc_servo.c: 29:             write16bitTMR0val(65535-on_period);
  4209   00003C  0100               	movlb	0	; () banked
  4210   00003E  1DD7               	comf	_on_period& (0+255),w,b
  4211   000040  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4212   000042  1DD8               	comf	(_on_period+1)& (0+255),w,b
  4213   000044  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4214   000046  ECC4  F00E         	call	_write16bitTMR0val	;wreg free
  4215   00004A                     
  4216                           ;../rc_servo.c: 30:             LATEbits.LATE2=1;
  4217   00004A  847D               	bsf	125,2,c	;volatile
  4218   00004C                     i2l2123:
  4219                           
  4220                           ;../rc_servo.c: 34:     PIR0bits.TMR0IF=0;
  4221   00004C  010E               	movlb	14	; () banked
  4222   00004E  9B33               	bcf	51,5,b	;volatile
  4223   000050                     
  4224                           ; BSR set to: 14
  4225   000050  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4226   000052  0011               	retfie		f
  4227   000054                     __end_of_HighISR:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _write16bitTMR0val *****************
  4231 ;; Defined at:
  4232 ;;		line 58 in file "../rc_servo.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  tmp             2    0[COMRAM] unsigned int 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;Total ram usage:        2 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_HighISR
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text34
  4260   001D88                     __ptext34:
  4261                           	callstack 0
  4262   001D88                     _write16bitTMR0val:
  4263                           	callstack 21
  4264   001D88                     
  4265                           ;../rc_servo.c: 58: void write16bitTMR0val(unsigned int tmp);../rc_servo.c: 59: {;../rc_
      +                          servo.c: 60:     TMR0H=tmp>>8;
  4266   001D88  5002               	movf	(write16bitTMR0val@tmp+1)^0,w,c
  4267   001D8A  6ED4               	movwf	212,c	;volatile
  4268   001D8C                     
  4269                           ;../rc_servo.c: 61:     TMR0L=tmp;
  4270   001D8C  C001  FFD3         	movff	write16bitTMR0val@tmp,4051	;volatile
  4271   001D90  0012               	return		;funcret
  4272   001D92                     __end_of_write16bitTMR0val:
  4273                           	callstack 0
  4274                           
  4275                           	psect	rparam
  4276   000000                     
  4277                           	psect	temp
  4278   00005D                     btemp:
  4279                           	callstack 0
  4280   00005D                     	ds	1
  4281   000000                     int$flags	set	btemp
  4282   000000                     wtemp8	set	btemp+1
  4283   000000                     ttemp5	set	btemp+1
  4284   000000                     ttemp6	set	btemp+4
  4285   000000                     ttemp7	set	btemp+8
  4286                           
  4287                           	psect	idloc
  4288                           
  4289                           ;Config register IDLOC0 @ 0x200000
  4290                           ;	unspecified, using default values
  4291   200000                     	org	2097152
  4292   200000  0FFF               	dw	4095
  4293                           
  4294                           ;Config register IDLOC1 @ 0x200002
  4295                           ;	unspecified, using default values
  4296   200002                     	org	2097154
  4297   200002  0FFF               	dw	4095
  4298                           
  4299                           ;Config register IDLOC2 @ 0x200004
  4300                           ;	unspecified, using default values
  4301   200004                     	org	2097156
  4302   200004  0FFF               	dw	4095
  4303                           
  4304                           ;Config register IDLOC3 @ 0x200006
  4305                           ;	unspecified, using default values
  4306   200006                     	org	2097158
  4307   200006  0FFF               	dw	4095
  4308                           
  4309                           ;Config register IDLOC4 @ 0x200008
  4310                           ;	unspecified, using default values
  4311   200008                     	org	2097160
  4312   200008  0FFF               	dw	4095
  4313                           
  4314                           ;Config register IDLOC5 @ 0x20000A
  4315                           ;	unspecified, using default values
  4316   20000A                     	org	2097162
  4317   20000A  0FFF               	dw	4095
  4318                           
  4319                           ;Config register IDLOC6 @ 0x20000C
  4320                           ;	unspecified, using default values
  4321   20000C                     	org	2097164
  4322   20000C  0FFF               	dw	4095
  4323                           
  4324                           ;Config register IDLOC7 @ 0x20000E
  4325                           ;	unspecified, using default values
  4326   20000E                     	org	2097166
  4327   20000E  0FFF               	dw	4095
  4328                           
  4329                           	psect	config
  4330                           
  4331                           ;Config register CONFIG1L @ 0x300000
  4332                           ;	External Oscillator mode Selection bits
  4333                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4334                           ;	Power-up default value for COSC bits
  4335                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4336   300000                     	org	3145728
  4337   300000  AA                 	db	170
  4338                           
  4339                           ;Config register CONFIG1H @ 0x300001
  4340                           ;	unspecified, using default values
  4341                           ;	Clock Out Enable bit
  4342                           ;	CLKOUTEN = 0x1, unprogrammed default
  4343                           ;	Clock Switch Enable bit
  4344                           ;	CSWEN = 0x1, unprogrammed default
  4345                           ;	Fail-Safe Clock Monitor Enable bit
  4346                           ;	FCMEN = 0x1, unprogrammed default
  4347   300001                     	org	3145729
  4348   300001  FF                 	db	255
  4349                           
  4350                           ;Config register CONFIG2L @ 0x300002
  4351                           ;	unspecified, using default values
  4352                           ;	Master Clear Enable bit
  4353                           ;	MCLRE = 0x1, unprogrammed default
  4354                           ;	Power-up Timer Enable bit
  4355                           ;	PWRTE = 0x1, unprogrammed default
  4356                           ;	Low-power BOR enable bit
  4357                           ;	LPBOREN = 0x1, unprogrammed default
  4358                           ;	Brown-out Reset Enable bits
  4359                           ;	BOREN = 0x3, unprogrammed default
  4360   300002                     	org	3145730
  4361   300002  FF                 	db	255
  4362                           
  4363                           ;Config register CONFIG2H @ 0x300003
  4364                           ;	unspecified, using default values
  4365                           ;	Brown Out Reset Voltage selection bits
  4366                           ;	BORV = 0x3, unprogrammed default
  4367                           ;	ZCD Disable bit
  4368                           ;	ZCD = 0x1, unprogrammed default
  4369                           ;	PPSLOCK bit One-Way Set Enable bit
  4370                           ;	PPS1WAY = 0x1, unprogrammed default
  4371                           ;	Stack Full/Underflow Reset Enable bit
  4372                           ;	STVREN = 0x1, unprogrammed default
  4373                           ;	Debugger Enable bit
  4374                           ;	DEBUG = 0x1, unprogrammed default
  4375                           ;	Extended Instruction Set Enable bit
  4376                           ;	XINST = 0x1, unprogrammed default
  4377   300003                     	org	3145731
  4378   300003  FF                 	db	255
  4379                           
  4380                           ;Config register CONFIG3L @ 0x300004
  4381                           ;	WDT Period Select bits
  4382                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4383                           ;	WDT operating mode
  4384                           ;	WDTE = OFF, WDT Disabled
  4385   300004                     	org	3145732
  4386   300004  9F                 	db	159
  4387                           
  4388                           ;Config register CONFIG3H @ 0x300005
  4389                           ;	unspecified, using default values
  4390                           ;	WDT Window Select bits
  4391                           ;	WDTCWS = 0x7, unprogrammed default
  4392                           ;	WDT input clock selector
  4393                           ;	WDTCCS = 0x7, unprogrammed default
  4394   300005                     	org	3145733
  4395   300005  FF                 	db	255
  4396                           
  4397                           ;Config register CONFIG4L @ 0x300006
  4398                           ;	unspecified, using default values
  4399                           ;	Write Protection Block 0
  4400                           ;	WRT0 = 0x1, unprogrammed default
  4401                           ;	Write Protection Block 1
  4402                           ;	WRT1 = 0x1, unprogrammed default
  4403                           ;	Write Protection Block 2
  4404                           ;	WRT2 = 0x1, unprogrammed default
  4405                           ;	Write Protection Block 3
  4406                           ;	WRT3 = 0x1, unprogrammed default
  4407                           ;	Write Protection Block 3
  4408                           ;	WRT4 = 0x1, unprogrammed default
  4409                           ;	Write Protection Block 3
  4410                           ;	WRT5 = 0x1, unprogrammed default
  4411                           ;	Write Protection Block 3
  4412                           ;	WRT6 = 0x1, unprogrammed default
  4413                           ;	Write Protection Block 3
  4414                           ;	WRT7 = 0x1, unprogrammed default
  4415   300006                     	org	3145734
  4416   300006  FF                 	db	255
  4417                           
  4418                           ;Config register CONFIG4H @ 0x300007
  4419                           ;	unspecified, using default values
  4420                           ;	Configuration Register Write Protection bit
  4421                           ;	WRTC = 0x1, unprogrammed default
  4422                           ;	Boot Block Write Protection bit
  4423                           ;	WRTB = 0x1, unprogrammed default
  4424                           ;	Data EEPROM Write Protection bit
  4425                           ;	WRTD = 0x1, unprogrammed default
  4426                           ;	Scanner Enable bit
  4427                           ;	SCANE = 0x1, unprogrammed default
  4428                           ;	Low Voltage Programming Enable bit
  4429                           ;	LVP = 0x1, unprogrammed default
  4430   300007                     	org	3145735
  4431   300007  FF                 	db	255
  4432                           
  4433                           ;Config register CONFIG5L @ 0x300008
  4434                           ;	unspecified, using default values
  4435                           ;	UserNVM Program Memory Code Protection bit
  4436                           ;	CP = 0x1, unprogrammed default
  4437                           ;	DataNVM Memory Code Protection bit
  4438                           ;	CPD = 0x1, unprogrammed default
  4439   300008                     	org	3145736
  4440   300008  FF                 	db	255
  4441                           
  4442                           ;Config register CONFIG5H @ 0x300009
  4443                           ;	unspecified, using default values
  4444   300009                     	org	3145737
  4445   300009  FF                 	db	255
  4446                           
  4447                           ;Config register CONFIG6L @ 0x30000A
  4448                           ;	unspecified, using default values
  4449                           ;	Table Read Protection Block 0
  4450                           ;	EBTR0 = 0x1, unprogrammed default
  4451                           ;	Table Read Protection Block 1
  4452                           ;	EBTR1 = 0x1, unprogrammed default
  4453                           ;	Table Read Protection Block 2
  4454                           ;	EBTR2 = 0x1, unprogrammed default
  4455                           ;	Table Read Protection Block 3
  4456                           ;	EBTR3 = 0x1, unprogrammed default
  4457                           ;	Table Read Protection Block 4
  4458                           ;	EBTR4 = 0x1, unprogrammed default
  4459                           ;	Table Read Protection Block 5
  4460                           ;	EBTR5 = 0x1, unprogrammed default
  4461                           ;	Table Read Protection Block 6
  4462                           ;	EBTR6 = 0x1, unprogrammed default
  4463                           ;	Table Read Protection Block 7
  4464                           ;	EBTR7 = 0x1, unprogrammed default
  4465   30000A                     	org	3145738
  4466   30000A  FF                 	db	255
  4467                           
  4468                           ;Config register CONFIG6H @ 0x30000B
  4469                           ;	unspecified, using default values
  4470                           ;	Boot Block Table Read Protection bit
  4471                           ;	EBTRB = 0x1, unprogrammed default
  4472   30000B                     	org	3145739
  4473   30000B  FF                 	db	255
  4474                           tosu	equ	0xFFF
  4475                           tosh	equ	0xFFE
  4476                           tosl	equ	0xFFD
  4477                           stkptr	equ	0xFFC
  4478                           pclatu	equ	0xFFB
  4479                           pclath	equ	0xFFA
  4480                           pcl	equ	0xFF9
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           prodh	equ	0xFF4
  4486                           prodl	equ	0xFF3
  4487                           indf0	equ	0xFEF
  4488                           postinc0	equ	0xFEE
  4489                           postdec0	equ	0xFED
  4490                           preinc0	equ	0xFEC
  4491                           plusw0	equ	0xFEB
  4492                           fsr0h	equ	0xFEA
  4493                           fsr0l	equ	0xFE9
  4494                           wreg	equ	0xFE8
  4495                           indf1	equ	0xFE7
  4496                           postinc1	equ	0xFE6
  4497                           postdec1	equ	0xFE5
  4498                           preinc1	equ	0xFE4
  4499                           plusw1	equ	0xFE3
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           bsr	equ	0xFE0
  4503                           indf2	equ	0xFDF
  4504                           postinc2	equ	0xFDE
  4505                           postdec2	equ	0xFDD
  4506                           preinc2	equ	0xFDC
  4507                           plusw2	equ	0xFDB
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     93     156
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2117$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2064$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2064$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK0[50]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1130DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S1130DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), main@RGB_calibrated(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_write16bitTMR0val

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               120   120      0    7616
                                             23 BANK0     70    70      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
                         _color_read
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    5570
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             64 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             13 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     196
                  _write16bitTMR0val
 ---------------------------------------------------------------------------------
 (10) _write16bitTMR0val                                   2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _write16bitTMR0val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5D      9C       5       97.5%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      54        0.0%
BITBIGSFRllllll     20      0       0      43        0.0%
BITBIGSFRhhhlh      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRhhlll      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      44        0.0%
BITBIGSFRllllll      B      0       0      52        0.0%
BITBIGSFRllllll      9      0       0      51        0.0%
BITBIGSFRllllhl      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhl          5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     134      55        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 19:24:48 2022

               _color_read_Red 194A                _color_read_Blue 1A3A                             l31 1B1E  
                           l40 1998                             l34 1CFA                             l43 1A38  
                           l37 19E8                             l46 1A88                             l56 17D6  
                           l49 187C                             l90 1CB2                             l93 1CB4  
                           l96 1CDA                             l99 1D86               _color_read_Green 19EA  
            ??_Interrupts_init 0003                            l102 1D72                            l111 1BEA  
                          l105 1D7C                            l108 1D5C                            l224 1B64  
                          l171 1134                            l172 116A                            l326 1D38  
                          l335 1D3C                            l344 1C5A                            l176 11DC  
                          l274 1D68                            l338 1D50                            l285 1D1A  
                          l461 139C                            l474 1500                            u700 169C  
                          u701 1698                            u710 16D2                            u711 16CE  
                          u800 13B0                            u720 1BA8                            u801 13AC  
                          u721 1BA4                            u730 1228                            u810 13E2  
                          u731 1224                            u811 13DE                            u900 1CDA  
                          u740 125A                            u820 1420                            u901 1CD6  
                          u741 1256                            u821 141C                            u830 144A  
                          u910 0E3E                            u751 1284                            u831 1446  
                          u911 0E38                            u760 12A8                            u840 1478  
                          u680 1662                            u920 0E40                            u761 12A4  
                          u841 1474                            u681 165E                            u770 12D2  
                          u850 14C0                            u690 1674                            u930 0E52  
                          u771 12CE                            u851 14BC                            u691 1670  
                          u931 0E4E                            u780 1312                            u860 188C  
                          u940 0E8E                            u781 130E                            u861 1888  
                          u941 0E8A                            u790 135C                            u870 18E2  
                          u950 0EBA                            u791 1358                            u871 18DE  
                          u951 0EB6                            u880 1C06                            u960 0ED0  
                          u881 1C02                            u961 0ECC                            u890 1CC4  
                          u970 100A                            u891 1CC0                            u971 1006  
                          u980 1028                            u981 1024                            u990 1042  
                          u991 103E                            _abs 1BEC                            _pad 187E  
                          wreg 000FE8                           l1102 1718                           l1110 1BA8  
                         l2001 17BA                           l1113 1D92                           l1025 1948  
                         l2003 17C6                           l2011 1B30                           l1051 18F6  
                         ?_abs 0015                           l2005 17CE                           l2021 1B58  
                         l2013 1B44                           l1070 1088                           l2031 1CFC  
                         l2023 1B5C                           l2015 1B4C                           l1047 18A0  
                         l1056 0E9A                           l2033 1D04                           l2025 1B60  
                         l2017 1B4E                           l2009 1B20                           l2041 1D26  
                         l1090 1C2A                           l1058 0EA2                           l2035 1D0E  
                         l2027 1B62                           l2019 1B54                           l2043 1D28  
                         l1059 0EE8                           l1083 1AD6                           l2051 18F8  
                         l2131 10A0                           l2029 1D5E                           l2037 1D18  
                         l2045 1D32                           l1077 164E                           l2053 190A  
                         l2141 10BC                           l2133 10AC                           l2047 1D34  
                         l2039 1D1C                           l2063 1C2C                           l1087 1C22  
                         l2055 1912                           l2151 1178                           l2143 10C8  
                         l2135 10B0                           l2127 108A                           l2049 1D36  
                         l2065 1C30                           l2057 191A                           l2161 11F6  
                         l2153 119E                           l2145 10F6                           l2137 10B4  
                         l2129 109C                           l2067 1C3E                           l2059 1936  
                         l2155 11AC                           l2147 1102                           l2139 10B8  
                         l2069 1C42                           l1701 12A8                           l2157 11C0  
                         l2149 1142                           l1711 1312                           l1703 12B0  
                         l2159 11EA                           l1721 135C                           l1713 1332  
                         l1705 12C4                           l1801 0EC0                           l1723 137C  
                         l1715 1334                           l1707 12D2                           l1731 13B0  
                         l1811 0EF8                           l1803 0ED0                           l1901 1C9A  
                         l1717 1346                           l1709 12E4                           l1741 1420  
                         l1733 13D0                           l1661 1650                           l1813 0EFE  
                         l1821 0FF0                           l1805 0EDC                           l1903 1C9C  
                         l1911 199A                           l1719 134C                           l1751 1498  
                         l1743 1428                           l1735 13D4                           l1727 139E  
                         l1671 16D2                           l1663 1662                           l1831 1058  
                         l1823 100A                           l1815 0F80                           l1807 0EE4  
                         l1905 1C9E                           l1841 1D54                           l1913 19E0  
                         l1753 14AA                           l1745 143C                           l1737 13E2  
                         l1729 13A2                           l1665 1674                           l1681 1B88  
                         l1833 1068                           l1825 1028                           l1817 0F86  
                         l1809 0EF0                           l1907 1CA0                           l1843 1D58  
                         l1851 1D6E                           l1931 1A80                           l1923 19EA  
                         l1691 124C                           l1683 1216                           l1747 144A  
                         l1755 14B0                           l1739 1402                           l1667 167E  
                         l1675 1B66                           l1771 18C0                           l1763 187E  
                         l1827 1042                           l1819 0F8C                           l1781 1CB4  
                         l1837 1D7E                           l1845 1D74                           l1909 1CDE  
                         l1861 1BE6                           l1853 1BAC                           l1925 1A30  
                         l1917 194A                           l1693 125A                           l1685 121A  
                         l1757 14C0                           l1749 1478                           l1669 169C  
                         l1677 1B72                           l1773 18C4                           l1765 188C  
                         l1829 1052                           l1941 1A96                           l1783 1CC4  
                         l1839 1D82                           l1847 1D78                           l1951 1ADC  
                         l1863 1BE8                           l1855 1BB0                           l1919 1990  
                         l1935 1D3C                           l1695 127A                           l1687 1228  
                         l1759 14E0                           l1679 1B84                           l1775 18E2  
                         l1767 1898                           l1791 0E52                           l1871 1534  
                         l1943 1AB2                           l1961 1B0C                           l1953 1AE6  
                         l1857 1BB8                           l1849 1D6A                           l1929 1A3A  
                         l1937 1D4C                           l1697 127E                           l1689 1248  
                         l1777 1BEC                           l1769 18AC                           l1793 0E72  
                         l1785 0E0E                           l1881 158E                           l1873 1542  
                         l1945 1ACE                           l1971 1B16                           l1963 1B0E  
                         l1955 1AF6                           l1859 1BC0                           l1699 128A  
                         l1779 1C06                           l1795 0E8E                           l1787 0E2E  
                         l1883 15E4                           l1875 1546                           l1891 1626  
                         l1867 1502                           l1939 1A8A                           l1973 1B18  
                         l1965 1B10                           l1957 1B00                           l1949 1AD8  
                         l1981 17EC                           l1797 0EAA                           l1789 0E42  
                         l1877 1556                           l1869 1526                           ?_pad 0013  
                         l1975 1B1A                           l1967 1B12                           l1959 1B0A  
                         l1991 1756                           l1983 1804                           l1799 0EBA  
                         l1887 1614                           l1879 1572                           l1897 1C8A  
                         l1977 1B1C                           l1969 1B14                           l1993 176C  
                         l1985 1834                           l1899 1C94                           l1995 1782  
                         l1987 184C                           l1979 17D8                           l1997 178E  
                         l1989 171A                           l1999 17A4                           STR_1 0E01  
                         u1000 1052                           u1001 104E                           u1010 1BD4  
                         u1011 1BCC                           u1100 17A4                           u1101 17A0  
                         u1110 17BA                           u1030 1526                           u1111 17B6  
                         u1031 1522                           u1120 1C5A                           u1040 1572  
                         u1121 1C56                           u1041 156E                           u1050 158E  
                         u1051 158A                           u1028 1BD6                           u1060 1D4C  
                         u1061 1D48                           u1070 1ACE                           u1310 1178  
                         u1071 1ACA                           u1311 1174                           u1080 176C  
                         u1320 118A                           u1081 1768                           u1321 1182  
                         u1090 1782                           u1091 177E                           u1340 11AC  
                         u1308 1158                           u1260 1120                           u1341 11A8  
                         u1261 1116                           u1350 11C0                           u1270 1134  
                         u1407 1856                           u1351 11BC                           u1271 1130  
                         u1360 11EA                           u1280 1142                   _BAUD4CONbits 000EE9  
                         u1417 1AEC                           u1361 11E6                           u1281 113E  
                         u1338 118E                           u1290 1154                           u1291 114C  
                         u1268 1124                           u1377 1202                           _T2PR 000FBC  
                         u1387 17F6                           u1397 1826                    main@readout 0079  
                         abs@a 0015                           _dbuf 00DC                           _main 108A  
                         _dtoa 0E0E                           _prec 00D3                           pad@i 001A  
                         pad@p 0017                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001C  
                         fsr2l 000FD9                           btemp 005D                           prodl 000FF3  
                         start 0054         __end_of_color_read_Red 199A                __end_of_HighISR 0054  
                 ___param_bank 000000                          ??_abs 0017                          ??_pad 0019  
              __end_of___aodiv 139E                          ?_main 0001                          ?_dtoa 001E  
              __end_of___aomod 1502        ??_color_read_Luminosity 0009                          i2l282 0050  
                        i2l288 1D90                   vfpfcnvrt@fmt 0043                          _TMR0H 000FD4  
                        _TMR0L 000FD3        __end_of_sendCharSerial4 1D52     __end_of_I2C_2_Master_Start 1D88  
   __end_of_I2C_2_Master_Write 1D5E                          _flags 00D9                          _fputc 1650  
                        _fputs 1B66                          pad@fp 0013                          _width 00D1  
                        _putch 1D92                          dtoa@d 0020                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0032                          dtoa@s 0040  
                        dtoa@w 0034                          tablat 000FF5                          ttemp5 005E  
                        ttemp6 0061                          ttemp7 0065                          status 000FD8  
                        wtemp8 005E                __end_of_sprintf 194A        __end_of_color_read_Blue 1A8A  
        _I2C_2_Master_RepStart 1D6A                ?_color_read_Red 0007                __initialization 1C5C  
                 __end_of_main 1216                   __end_of_dtoa 108A                         ??_main 0077  
                       ??_dtoa 0028                  __activetblptr 000001                         ?_fputc 0003  
                       ?_fputs 000C                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70                         i2l2111 000A  
                       i2l2121 004A                         i2l2113 001A                         i2l2115 0028  
                       i2l2123 004C                         i2l2117 0036                         i2l2071 1D88  
                       i2l2119 003C                         i2l2073 1D8C                      ??_HighISR 0003  
     __end_of_color_click_init 1B20                         _RX4PPS 000E15                         _TX4REG 000EE4  
                ??_Timer0_init 0003      color_processor_easy@color 0005                   vfprintf@cfmt 0059  
                    ??___aodiv 0013                      ??___aomod 0013                         clear_0 1C62  
                       clear_1 1C6E                         isa$std 000001                         pad@buf 0015  
                       dtoa@fp 001E                         fputc@c 0003                         fputs@c 0010  
                       fputs@i 0011                         fputs@s 000C                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1AD8  
            ??_initDCmotorsPWM 0005                      ??_sprintf 005B                     __accesstop 0060  
      __end_of__initialization 1C78       __end_of_color_read_Green 1A3A         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0007                _Interrupts_init 1D5E  
               __pcstackCOMRAM 0001                  color_read@rgb 000E                  __end_of_fputc 171A  
                __end_of_fputs 1BAA                  __end_of_putch 1D94            __end_of_Timer0_init 1D1C  
                      ??_fputc 0007                        ??_fputs 0010                        ??_putch 0003  
                   __pbssBANK0 00BD                     __pbssBANK1 0100              _color_writetoaddr 1CDC  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0005                 main@color_flag 00AB  
          ??_color_writetoaddr 0006  __end_of_color_read_Luminosity 19EA                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _PWM6DCH 000FA3                        _PWM7DCH 000FA0  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                     _color_read 17D8  
      __end_of_Interrupts_init 1D6A         color_writetoaddr@value 0005               ??_color_read_Red 0009  
                      _HighISR 0008      __end_of_color_writetoaddr 1CFC       color_read_Luminosity@tmp 000C  
           _I2C_2_Master_Start 1D7E                     _initUSART4 1D1C             _I2C_2_Master_Write 1D52  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000C  
                  _Timer0_init 1CFC        sendStringSerial4@string 0004                        ___aodiv 1216  
                      ___aomod 139E            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                   _off_period 00D5                      ?_vfprintf 0053                   __psmallconst 0E00  
                      __pcinit 1C5C                        __ramtop 0E00                        __ptext0 108A  
                      __ptext1 18F8                        __ptext2 1A8A                        __ptext3 1502  
                      __ptext4 0E0E                        __ptext5 187E                        __ptext6 1B66  
                      __ptext7 1650                        __ptext8 1D92                        __ptext9 1BEC  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005C  
                      _sprintf 18F8           ??_I2C_2_Master_Start 0004           ??_I2C_2_Master_Write 0004  
         end_of_initialization 1C78                        fputc@fp 0005                        fputs@fp 000E  
            ?_color_click_init 0001   __end_of_color_processor_easy 17D8             ??_color_click_init 0007  
            __end_of_vfpfcnvrt 1650                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0049  
                   ??_vfprintf 0059                _initDCmotorsPWM 1B20                      _PORTFbits 000F8E  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ?_color_read 000E       color_writetoaddr@address 0006        ??_I2C_2_Master_RepStart 0004  
             ?_Interrupts_init 0001                   _EUSART4RXbuf 00BD                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0007                    ?_initUSART4 0001      sendCharSerial4@charToSend 0003  
           ??_color_read_Green 0009                    vfpfcnvrt@ap 0045                    vfpfcnvrt@cp 0051  
                  vfpfcnvrt@fp 0041            start_initialization 1C5C                    __end_of_abs 1C2C  
                  __end_of_pad 18F8                  _TxBufWriteCnt 00DB            color_read_Green@tmp 000C  
      __end_of_initDCmotorsPWM 1B66                    vfprintf@fmt 0055                    __pbssCOMRAM 005B  
         _color_processor_easy 171A                  __pcstackBANK0 0060               ___aodiv@dividend 0003  
           main@RGB_calibrated 00B5                       ?_HighISR 0001        color_processor_easy@rgb 0003  
        color_processor_easy@a 0009          color_processor_easy@b 000B          color_processor_easy@c 0007  
                    _dtoa$2145 0030                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___aodiv 0003                       ?___aomod 0003               ___aodiv@quotient 0015  
         I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006                    __smallconst 0E00  
            _I2C_2_Master_Idle 1CB4          ?_color_processor_easy 0003               main@RGB_recorded 00AD  
            _I2C_2_Master_Init 1C8A              _I2C_2_Master_Read 1BAA              _I2C_2_Master_Stop 1D74  
                 _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001          _color_read_Luminosity 199A             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0003                       ?_sprintf 0060              _sendStringSerial4 1C2C  
          ??_I2C_2_Master_Idle 0003            ??_I2C_2_Master_Init 0003            ??_I2C_2_Master_Read 0004  
          ??_I2C_2_Master_Stop 0004                       _LATCbits 000F7B                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E                      _on_period 00D7  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _PIE0bits 000E29  
           ?_sendStringSerial4 0004                       i2u124_40 001A                       i2u124_41 0016  
                     i2u125_40 0028                       i2u125_41 0024                       _PIR0bits 000E33  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0003              ??_sendCharSerial4 0003  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0006                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 1502      __end_of_I2C_2_Master_Idle 1CDC      __end_of_I2C_2_Master_Init 1CB4  
    __end_of_I2C_2_Master_Read 1BEC      __end_of_I2C_2_Master_Stop 1D7E           write16bitTMR0val@tmp 0001  
  I2C_2_Master_Write@data_byte 0004              _write16bitTMR0val 1D88              ??_color_read_Blue 0009  
                 _TxBufReadCnt 00DA             ?_write16bitTMR0val 0001                   ??_color_read 0010  
    __end_of_sendStringSerial4 1C5C  __end_of_I2C_2_Master_RepStart 1D74             color_read_Blue@tmp 000C  
          ??_write16bitTMR0val 0003                   ??_initUSART4 0003                       __Hrparam 0000  
                   vfprintf@ap 0057                       __Lrparam 0000                     vfprintf@fp 0053  
                 __Lsmallconst 0E00                     ?_vfpfcnvrt 0041             __end_of_color_read 187E  
              ___aodiv@divisor 000B                ___aodiv@counter 0013      __end_of_write16bitTMR0val 1D92  
                   _ANSELDbits 000EA7         ??_color_processor_easy 0005                     _ANSELFbits 000EB4  
                   sprintf@fmt 0062                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
       ?_color_read_Luminosity 0007             __end_of_initUSART4 1D3A                       __ptext10 139E  
                     __ptext11 1216                       __ptext20 1A3A                       __ptext12 1C2C  
                     __ptext21 1D6A                       __ptext13 1D3A                       __ptext30 1C8A  
                     __ptext22 1BAA                       __ptext14 1D1C                       __ptext31 1CFC  
                     __ptext23 171A                       __ptext15 1B20                       __ptext32 1D5E  
                     __ptext24 1AD8                       __ptext16 17D8                       __ptext25 1CDC  
                     __ptext17 194A                       __ptext34 1D88                       __ptext26 1D52  
                     __ptext18 199A                       __ptext27 1D74                       __ptext19 19EA  
                     __ptext28 1D7E                       __ptext29 1CB4                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005D                       _vfprintf 1A8A               ___aomod@dividend 0003  
                   _INTCONbits 000FF2                    _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1  
                     intlevel2 0000                      sprintf@ap 006A                ___aomod@divisor 000B  
                  ??_vfpfcnvrt 0047                ___aomod@counter 0013               _color_click_init 1AD8  
                     sprintf@f 006C                       sprintf@s 0060                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0014  
              _sendCharSerial4 1D3A                   ___aomod@sign 0014  
