

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 02:33:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Version 2.35
    57                           ; Generated 05/05/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F67K40 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     _TX4REG	set	3812
    92   000000                     _RC4STAbits	set	3815
    93   000000                     _SP4BRGH	set	3814
    94   000000                     _TRISGbits	set	3975
    95   000000                     _TRISEbits	set	3973
    96   000000                     _LATFbits	set	3966
    97   000000                     _TRISFbits	set	3974
    98   000000                     _LATG	set	3967
    99   000000                     _LATE	set	3965
   100   000000                     _SSP2CON2bits	set	3802
   101   000000                     _LATGbits	set	3967
   102   000000                     _LATEbits	set	3965
   103   000000                     _RX4PPS	set	3605
   104   000000                     _SSP2CLKPPS	set	3612
   105   000000                     _SSP2DATPPS	set	3613
   106   000000                     _ANSELDbits	set	3751
   107   000000                     _ANSELFbits	set	3764
   108   000000                     _LATDbits	set	3964
   109   000000                     _LATHbits	set	3968
   110   000000                     _TRISDbits	set	3972
   111   000000                     _TRISHbits	set	3976
   112   000000                     _PORTFbits	set	3982
   113   000000                     _PWM7DCH	set	4000
   114   000000                     _PWM6DCH	set	4003
   115   000000                     _TRISCbits	set	3971
   116   000000                     _SSP2BUF	set	3797
   117   000000                     _SSP2ADD	set	3798
   118   000000                     _SSP2CON1bits	set	3801
   119   000000                     _RC4REG	set	3811
   120   000000                     _SP4BRGL	set	3813
   121   000000                     _TX4STAbits	set	3816
   122   000000                     _BAUD4CONbits	set	3817
   123   000000                     _LATCbits	set	3963
   124   000000                     _SSP2CON2	set	3802
   125   000000                     _SSP2STAT	set	3800
   126   000000                     _PIE0bits	set	3625
   127   000000                     _RC7PPS	set	3689
   128   000000                     _RD5PPS	set	3695
   129   000000                     _RE2PPS	set	3700
   130   000000                     _RD6PPS	set	3696
   131   000000                     _PWM6CONbits	set	4004
   132   000000                     _T2PR	set	4028
   133   000000                     _T2CONbits	set	4029
   134   000000                     _PWM7CONbits	set	4001
   135   000000                     _TMR0L	set	4051
   136   000000                     _TMR0H	set	4052
   137   000000                     _T0CON0bits	set	4053
   138   000000                     _T0CON1bits	set	4054
   139   000000                     _INTCONbits	set	4082
   140   000000                     _T2CLKCONbits	set	4031
   141   000000                     _T2HLTbits	set	4030
   142   000000                     _PIR0bits	set	3635
   143   000000                     _PIR4bits	set	3639
   144   000000                     _RC0PPS	set	3682
   145                           
   146                           	psect	smallconst
   147   000E00                     __psmallconst:
   148                           	callstack 0
   149   000E00  00                 	db	0
   150   000E01                     STR_1:
   151   000E01  25                 	db	37
   152   000E02  64                 	db	100	;'d'
   153   000E03  20                 	db	32
   154   000E04  25                 	db	37
   155   000E05  64                 	db	100	;'d'
   156   000E06  20                 	db	32
   157   000E07  25                 	db	37
   158   000E08  64                 	db	100	;'d'
   159   000E09  20                 	db	32
   160   000E0A  25                 	db	37
   161   000E0B  64                 	db	100	;'d'
   162   000E0C  20                 	db	32
   163   000E0D  0D                 	db	13
   164   000E0E  0A                 	db	10
   165   000E0F  00                 	db	0
   166   000E10  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   0020CA                     __pcinit:
   172                           	callstack 0
   173   0020CA                     start_initialization:
   174                           	callstack 0
   175   0020CA                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Clear objects allocated to BANK0 (123 bytes)
   179   0020CA  EE00  F060         	lfsr	0,__pbssBANK0
   180   0020CE  0E7B               	movlw	123
   181   0020D0                     clear_0:
   182   0020D0  6AEE               	clrf	postinc0,c
   183   0020D2  06E8               	decf	wreg,f,c
   184   0020D4  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to COMRAM (2 bytes)
   187   0020D6  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   188   0020D8  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   189   0020DA                     end_of_initialization:
   190                           	callstack 0
   191   0020DA                     __end_of__initialization:
   192                           	callstack 0
   193   0020DA  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   194   0020DC  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   195   0020DE  0100               	movlb	0
   196   0020E0  EF47  F008         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMRAM
   199   00005B                     __pbssCOMRAM:
   200                           	callstack 0
   201   00005B                     _RxBufReadCnt:
   202                           	callstack 0
   203   00005B                     	ds	1
   204   00005C                     _RxBufWriteCnt:
   205                           	callstack 0
   206   00005C                     	ds	1
   207                           
   208                           	psect	bssBANK0
   209   000060                     __pbssBANK0:
   210                           	callstack 0
   211   000060                     _EUSART4TXbuf:
   212                           	callstack 0
   213   000060                     	ds	60
   214   00009C                     _EUSART4RXbuf:
   215                           	callstack 0
   216   00009C                     	ds	20
   217   0000B0                     _width:
   218                           	callstack 0
   219   0000B0                     	ds	2
   220   0000B2                     _prec:
   221                           	callstack 0
   222   0000B2                     	ds	2
   223   0000B4                     _off_period:
   224                           	callstack 0
   225   0000B4                     	ds	2
   226   0000B6                     _on_period:
   227                           	callstack 0
   228   0000B6                     	ds	2
   229   0000B8                     _flags:
   230                           	callstack 0
   231   0000B8                     	ds	1
   232   0000B9                     _TxBufReadCnt:
   233                           	callstack 0
   234   0000B9                     	ds	1
   235   0000BA                     _TxBufWriteCnt:
   236                           	callstack 0
   237   0000BA                     	ds	1
   238   0000BB                     _dbuf:
   239                           	callstack 0
   240   0000BB                     	ds	32
   241                           
   242                           	psect	cstackBANK1
   243   000100                     __pcstackBANK1:
   244                           	callstack 0
   245   000100                     main@readout:
   246                           	callstack 0
   247                           
   248                           ; 50 bytes @ 0x0
   249   000100                     	ds	50
   250   000132                     main@color_storage:
   251                           	callstack 0
   252                           
   253                           ; 30 bytes @ 0x32
   254   000132                     	ds	30
   255   000150                     main@time_storage:
   256                           	callstack 0
   257                           
   258                           ; 30 bytes @ 0x50
   259   000150                     	ds	30
   260   00016E                     main@color_flag:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x6E
   264   00016E                     	ds	2
   265   000170                     main@time_flag:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x70
   269   000170                     	ds	2
   270   000172                     main@time:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x72
   274   000172                     	ds	2
   275   000174                     main@home:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x74
   279   000174                     	ds	2
   280   000176                     main@color_name:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x76
   284   000176                     	ds	2
   285   000178                     main@j:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x78
   289   000178                     	ds	2
   290   00017A                     main@k:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x7A
   294   00017A                     	ds	2
   295   00017C                     main@RGB_recorded:
   296                           	callstack 0
   297                           
   298                           ; 8 bytes @ 0x7C
   299   00017C                     	ds	8
   300   000184                     main@RGB_calibrated:
   301                           	callstack 0
   302                           
   303                           ; 8 bytes @ 0x84
   304   000184                     	ds	8
   305   00018C                     main@motorL:
   306                           	callstack 0
   307                           
   308                           ; 9 bytes @ 0x8C
   309   00018C                     	ds	9
   310   000195                     main@motorR:
   311                           	callstack 0
   312                           
   313                           ; 9 bytes @ 0x95
   314   000195                     	ds	9
   315                           
   316                           	psect	cstackBANK0
   317   0000DB                     __pcstackBANK0:
   318                           	callstack 0
   319   0000DB                     ?_sprintf:
   320                           	callstack 0
   321   0000DB                     sprintf@s:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x0
   325   0000DB                     	ds	2
   326   0000DD                     sprintf@fmt:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2
   330   0000DD                     	ds	10
   331   0000E7                     sprintf@ap:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xC
   335   0000E7                     	ds	2
   336   0000E9                     sprintf@f:
   337                           	callstack 0
   338                           
   339                           ; 11 bytes @ 0xE
   340   0000E9                     	ds	11
   341   0000F4                     ??_main:
   342                           
   343                           ; 1 bytes @ 0x19
   344   0000F4                     	ds	2
   345                           
   346                           	psect	cstackCOMRAM
   347   000001                     __pcstackCOMRAM:
   348                           	callstack 0
   349   000001                     write16bitTMR0val@tmp:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x0
   353   000001                     	ds	2
   354   000003                     ??_I2C_2_Master_Idle:
   355   000003                     ?_color_processor_easy:
   356                           	callstack 0
   357   000003                     ?___wmul:
   358                           	callstack 0
   359   000003                     ?___aodiv:
   360                           	callstack 0
   361   000003                     ?___aomod:
   362                           	callstack 0
   363   000003                     sendCharSerial4@charToSend:
   364                           	callstack 0
   365   000003                     color_processor_easy@rgb:
   366                           	callstack 0
   367   000003                     initDCmotorsPWM@PWMperiod:
   368                           	callstack 0
   369   000003                     ___wmul@multiplier:
   370                           	callstack 0
   371   000003                     fputc@c:
   372                           	callstack 0
   373   000003                     ___aodiv@dividend:
   374                           	callstack 0
   375   000003                     ___aomod@dividend:
   376                           	callstack 0
   377                           
   378                           ; 8 bytes @ 0x2
   379   000003                     	ds	1
   380   000004                     ??_I2C_2_Master_Read:
   381   000004                     I2C_2_Master_Write@data_byte:
   382                           	callstack 0
   383   000004                     sendStringSerial4@string:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x3
   387   000004                     	ds	1
   388   000005                     color_writetoaddr@value:
   389                           	callstack 0
   390   000005                     I2C_2_Master_Read@ack:
   391                           	callstack 0
   392   000005                     color_processor_easy@color:
   393                           	callstack 0
   394   000005                     ___wmul@multiplicand:
   395                           	callstack 0
   396   000005                     fputc@fp:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x4
   400   000005                     	ds	1
   401   000006                     color_writetoaddr@address:
   402                           	callstack 0
   403   000006                     I2C_2_Master_Read@tmp:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x5
   407   000006                     	ds	1
   408   000007                     ??_fputc:
   409   000007                     ??_color_click_init:
   410   000007                     ?_color_read_Luminosity:
   411                           	callstack 0
   412   000007                     ?_color_read_Red:
   413                           	callstack 0
   414   000007                     ?_color_read_Green:
   415                           	callstack 0
   416   000007                     ?_color_read_Blue:
   417                           	callstack 0
   418   000007                     color_processor_easy@c:
   419                           	callstack 0
   420   000007                     ___wmul@product:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x6
   424   000007                     	ds	2
   425   000009                     ??_color_read_Luminosity:
   426   000009                     ??_color_read_Red:
   427   000009                     ??_color_read_Green:
   428   000009                     ??_color_read_Blue:
   429   000009                     ?___awdiv:
   430                           	callstack 0
   431   000009                     color_processor_easy@a:
   432                           	callstack 0
   433   000009                     ___awdiv@dividend:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x8
   437   000009                     	ds	2
   438   00000B                     color_processor_easy@b:
   439                           	callstack 0
   440   00000B                     ___awdiv@divisor:
   441                           	callstack 0
   442   00000B                     ___aodiv@divisor:
   443                           	callstack 0
   444   00000B                     ___aomod@divisor:
   445                           	callstack 0
   446                           
   447                           ; 8 bytes @ 0xA
   448   00000B                     	ds	1
   449   00000C                     color_read_Luminosity@tmp:
   450                           	callstack 0
   451   00000C                     color_read_Red@tmp:
   452                           	callstack 0
   453   00000C                     color_read_Green@tmp:
   454                           	callstack 0
   455   00000C                     color_read_Blue@tmp:
   456                           	callstack 0
   457   00000C                     fputs@s:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xB
   461   00000C                     	ds	1
   462   00000D                     ___awdiv@counter:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xC
   466   00000D                     	ds	1
   467   00000E                     ___awdiv@sign:
   468                           	callstack 0
   469   00000E                     color_read@rgb:
   470                           	callstack 0
   471   00000E                     fputs@fp:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xD
   475   00000E                     	ds	1
   476   00000F                     ___awdiv@quotient:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xE
   480   00000F                     	ds	1
   481   000010                     ??_color_read:
   482   000010                     fputs@c:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0xF
   486   000010                     	ds	1
   487   000011                     setMotorPWM@m:
   488                           	callstack 0
   489   000011                     fputs@i:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x10
   493   000011                     	ds	2
   494   000013                     ??_setMotorPWM:
   495   000013                     ___aodiv@counter:
   496                           	callstack 0
   497   000013                     ___aomod@counter:
   498                           	callstack 0
   499   000013                     pad@fp:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x12
   503   000013                     	ds	1
   504   000014                     ___aodiv@sign:
   505                           	callstack 0
   506   000014                     ___aomod@sign:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x13
   510   000014                     	ds	1
   511   000015                     ?_abs:
   512                           	callstack 0
   513   000015                     pad@buf:
   514                           	callstack 0
   515   000015                     abs@a:
   516                           	callstack 0
   517   000015                     ___aodiv@quotient:
   518                           	callstack 0
   519                           
   520                           ; 8 bytes @ 0x14
   521   000015                     	ds	2
   522   000017                     ??_abs:
   523   000017                     pad@p:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x16
   527   000017                     	ds	2
   528   000019                     ??_pad:
   529                           
   530                           ; 1 bytes @ 0x18
   531   000019                     	ds	1
   532   00001A                     setMotorPWM@PWMduty:
   533                           	callstack 0
   534   00001A                     pad@i:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x19
   538   00001A                     	ds	2
   539   00001C                     pad@w:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x1B
   543   00001C                     	ds	2
   544   00001E                     dtoa@fp:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x1D
   548   00001E                     	ds	2
   549   000020                     dtoa@d:
   550                           	callstack 0
   551                           
   552                           ; 8 bytes @ 0x1F
   553   000020                     	ds	8
   554   000028                     ??_dtoa:
   555                           
   556                           ; 1 bytes @ 0x27
   557   000028                     	ds	8
   558   000030                     _dtoa$2225:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x2F
   562   000030                     	ds	2
   563   000032                     dtoa@p:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x31
   567   000032                     	ds	2
   568   000034                     dtoa@w:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x33
   572   000034                     	ds	2
   573   000036                     dtoa@n:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x35
   577   000036                     	ds	8
   578   00003E                     dtoa@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x3D
   582   00003E                     	ds	2
   583   000040                     dtoa@s:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x3F
   587   000040                     	ds	1
   588   000041                     vfpfcnvrt@fp:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x40
   592   000041                     	ds	2
   593   000043                     vfpfcnvrt@fmt:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x42
   597   000043                     	ds	2
   598   000045                     vfpfcnvrt@ap:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x44
   602   000045                     	ds	2
   603   000047                     ??_vfpfcnvrt:
   604                           
   605                           ; 1 bytes @ 0x46
   606   000047                     	ds	2
   607   000049                     vfpfcnvrt@convarg:
   608                           	callstack 0
   609                           
   610                           ; 8 bytes @ 0x48
   611   000049                     	ds	8
   612   000051                     vfpfcnvrt@cp:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x50
   616   000051                     	ds	2
   617   000053                     ?_vfprintf:
   618                           	callstack 0
   619   000053                     vfprintf@fp:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x52
   623   000053                     	ds	2
   624   000055                     vfprintf@fmt:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x54
   628   000055                     	ds	2
   629   000057                     vfprintf@ap:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x56
   633   000057                     	ds	2
   634   000059                     vfprintf@cfmt:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x58
   638   000059                     	ds	2
   639   00005B                     
   640                           ; 1 bytes @ 0x5A
   641 ;;
   642 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   643 ;;
   644 ;; *************** function _main *****************
   645 ;; Defined at:
   646 ;;		line 20 in file "../main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  k               2  122[BANK1 ] int 
   651 ;;  readout        50    0[BANK1 ] unsigned char [50]
   652 ;;  color_calibr   48    0        unsigned int [24]
   653 ;;  time_storage   30   80[BANK1 ] unsigned int [15]
   654 ;;  color_storag   30   50[BANK1 ] unsigned int [15]
   655 ;;  motorR          9  149[BANK1 ] struct DC_motor
   656 ;;  motorL          9  140[BANK1 ] struct DC_motor
   657 ;;  RGB_calibrat    8  132[BANK1 ] struct RGB_val
   658 ;;  RGB_recorded    8  124[BANK1 ] struct RGB_val
   659 ;;  j               2  120[BANK1 ] int 
   660 ;;  color_name      2  118[BANK1 ] unsigned int 
   661 ;;  home            2  116[BANK1 ] unsigned int 
   662 ;;  time            2  114[BANK1 ] unsigned int 
   663 ;;  time_flag       2  112[BANK1 ] unsigned int 
   664 ;;  color_flag      2  110[BANK1 ] unsigned int 
   665 ;;  PWMcycle        1    0        unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   676 ;;      Locals:         0       0     158       0       0       0       0       0       0       0       0       0       
      +0       0       0
   677 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   678 ;;      Totals:         0       2     158       0       0       0       0       0       0       0       0       0       
      +0       0       0
   679 ;;Total ram usage:      160 bytes
   680 ;; Hardware stack levels required when called: 10
   681 ;; This function calls:
   682 ;;		_I2C_2_Master_Init
   683 ;;		_Interrupts_init
   684 ;;		_Timer0_init
   685 ;;		_color_click_init
   686 ;;		_color_processor_easy
   687 ;;		_color_read
   688 ;;		_initDCmotorsPWM
   689 ;;		_initUSART4
   690 ;;		_sendStringSerial4
   691 ;;		_setMotorPWM
   692 ;;		_sprintf
   693 ;; This function is called by:
   694 ;;		Startup code after reset
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text0
   699   00108E                     __ptext0:
   700                           	callstack 0
   701   00108E                     _main:
   702                           	callstack 21
   703   00108E                     
   704                           ;../main.c: 22:     color_click_init();
   705   00108E  EC3F  F00E         	call	_color_click_init	;wreg free
   706   001092                     
   707                           ;../main.c: 23:     initDCmotorsPWM(20);
   708   001092  0E00               	movlw	0
   709   001094  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   710   001096  0E14               	movlw	20
   711   001098  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
   712   00109A  EC80  F00F         	call	_initDCmotorsPWM	;wreg free
   713   00109E                     
   714                           ;../main.c: 24:     Interrupts_init();
   715   00109E  EC84  F010         	call	_Interrupts_init	;wreg free
   716   0010A2                     
   717                           ;../main.c: 25:     Timer0_init();
   718   0010A2  EC46  F010         	call	_Timer0_init	;wreg free
   719   0010A6                     
   720                           ;../main.c: 26:     I2C_2_Master_Init();
   721   0010A6  ECFA  F00F         	call	_I2C_2_Master_Init	;wreg free
   722   0010AA                     
   723                           ;../main.c: 27:     initUSART4();
   724   0010AA  EC56  F010         	call	_initUSART4	;wreg free
   725   0010AE                     
   726                           ;../main.c: 32:     motorL.power = 0;
   727   0010AE  0E00               	movlw	0
   728   0010B0  0101               	movlb	1	; () banked
   729   0010B2  6F8C               	movwf	main@motorL& (0+255),b
   730   0010B4                     
   731                           ; BSR set to: 1
   732                           ;../main.c: 33:     motorL.direction = 0;
   733   0010B4  0E00               	movlw	0
   734   0010B6  6F8D               	movwf	(main@motorL+1)& (0+255),b
   735   0010B8                     
   736                           ; BSR set to: 1
   737                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   738   0010B8  0EA3               	movlw	163
   739   0010BA  6F8E               	movwf	(main@motorL+2)& (0+255),b
   740   0010BC  0E0F               	movlw	15
   741   0010BE  6F8F               	movwf	(main@motorL+3)& (0+255),b
   742   0010C0                     
   743                           ; BSR set to: 1
   744                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
   745   0010C0  0E7D               	movlw	125
   746   0010C2  6F90               	movwf	(main@motorL+4)& (0+255),b
   747   0010C4  0E0F               	movlw	15
   748   0010C6  6F91               	movwf	(main@motorL+5)& (0+255),b
   749   0010C8                     
   750                           ; BSR set to: 1
   751                           ;../main.c: 36:     motorL.dir_pin = 4;
   752   0010C8  0E04               	movlw	4
   753   0010CA  6F92               	movwf	(main@motorL+6)& (0+255),b
   754   0010CC                     
   755                           ; BSR set to: 1
   756                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
   757   0010CC  0E00               	movlw	0
   758   0010CE  6F94               	movwf	(main@motorL+8)& (0+255),b
   759   0010D0  0EC8               	movlw	200
   760   0010D2  6F93               	movwf	(main@motorL+7)& (0+255),b
   761   0010D4                     
   762                           ; BSR set to: 1
   763                           ;../main.c: 38:     motorR.power = 0;
   764   0010D4  0E00               	movlw	0
   765   0010D6  6F95               	movwf	main@motorR& (0+255),b
   766   0010D8                     
   767                           ; BSR set to: 1
   768                           ;../main.c: 39:     motorR.direction = 0;
   769   0010D8  0E00               	movlw	0
   770   0010DA  6F96               	movwf	(main@motorR+1)& (0+255),b
   771                           
   772                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   773   0010DC  0EA0               	movlw	160
   774   0010DE  6F97               	movwf	(main@motorR+2)& (0+255),b
   775   0010E0  0E0F               	movlw	15
   776   0010E2  6F98               	movwf	(main@motorR+3)& (0+255),b
   777                           
   778                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
   779   0010E4  0E7F               	movlw	127
   780   0010E6  6F99               	movwf	(main@motorR+4)& (0+255),b
   781   0010E8  0E0F               	movlw	15
   782   0010EA  6F9A               	movwf	(main@motorR+5)& (0+255),b
   783   0010EC                     
   784                           ; BSR set to: 1
   785                           ;../main.c: 42:     motorR.dir_pin = 6;
   786   0010EC  0E06               	movlw	6
   787   0010EE  6F9B               	movwf	(main@motorR+6)& (0+255),b
   788   0010F0                     
   789                           ; BSR set to: 1
   790                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
   791   0010F0  0E00               	movlw	0
   792   0010F2  6F9D               	movwf	(main@motorR+8)& (0+255),b
   793   0010F4  0EC8               	movlw	200
   794   0010F6  6F9C               	movwf	(main@motorR+7)& (0+255),b
   795   0010F8                     
   796                           ; BSR set to: 1
   797                           ;../main.c: 44:     setMotorPWM(&motorL);
   798   0010F8  0E8C               	movlw	low main@motorL
   799   0010FA  6E11               	movwf	setMotorPWM@m^0,c
   800   0010FC  0E01               	movlw	high main@motorL
   801   0010FE  6E12               	movwf	(setMotorPWM@m+1)^0,c
   802   001100  EC7A  F009         	call	_setMotorPWM	;wreg free
   803   001104                     
   804                           ;../main.c: 45:     setMotorPWM(&motorR);
   805   001104  0E95               	movlw	low main@motorR
   806   001106  6E11               	movwf	setMotorPWM@m^0,c
   807   001108  0E01               	movlw	high main@motorR
   808   00110A  6E12               	movwf	(setMotorPWM@m+1)^0,c
   809   00110C  EC7A  F009         	call	_setMotorPWM	;wreg free
   810   001110                     
   811                           ;../main.c: 48:     unsigned int color_flag;;../main.c: 49:     unsigned int color_name;
      +                          ;../main.c: 50:     unsigned int color_storage[15];;../main.c: 51:     struct RGB_val RG
      +                          B_recorded;;../main.c: 53:     unsigned int time_storage[15];;../main.c: 54:     unsigne
      +                          d int time;;../main.c: 55:     unsigned int time_flag;;../main.c: 56:     int j;;../main
      +                          .c: 57:     unsigned int home = 0;
   812   001110  0E00               	movlw	0
   813   001112  0101               	movlb	1	; () banked
   814   001114  6F75               	movwf	(main@home+1)& (0+255),b
   815   001116  0E00               	movlw	0
   816   001118  6F74               	movwf	main@home& (0+255),b
   817   00111A                     
   818                           ; BSR set to: 1
   819                           ;../main.c: 59:     unsigned int color_calibrated[24];;../main.c: 60:     struct RGB_val
      +                           RGB_calibrated;;../main.c: 63:     color_read(&RGB_calibrated);
   820   00111A  0E84               	movlw	low main@RGB_calibrated
   821   00111C  6E0E               	movwf	color_read@rgb^0,c
   822   00111E  0E01               	movlw	high main@RGB_calibrated
   823   001120  6E0F               	movwf	(color_read@rgb+1)^0,c
   824   001122  ECAF  F00D         	call	_color_read	;wreg free
   825   001126                     
   826                           ;../main.c: 64:     char readout[50];;../main.c: 65:     sprintf(readout,"%d %d %d %d \r
      +                          \n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrated.B);
   827   001126  0E00               	movlw	low main@readout
   828   001128  0100               	movlb	0	; () banked
   829   00112A  6FDB               	movwf	sprintf@s& (0+255),b
   830   00112C  0E01               	movlw	high main@readout
   831   00112E  6FDC               	movwf	(sprintf@s+1)& (0+255),b
   832   001130  0E01               	movlw	low STR_1
   833   001132  6FDD               	movwf	sprintf@fmt& (0+255),b
   834   001134  0E0E               	movlw	high STR_1
   835   001136  6FDE               	movwf	(sprintf@fmt+1)& (0+255),b
   836   001138  C184  F0DF         	movff	main@RGB_calibrated,?_sprintf+4
   837   00113C  C185  F0E0         	movff	main@RGB_calibrated+1,?_sprintf+5
   838   001140  C186  F0E1         	movff	main@RGB_calibrated+2,?_sprintf+6
   839   001144  C187  F0E2         	movff	main@RGB_calibrated+3,?_sprintf+7
   840   001148  C188  F0E3         	movff	main@RGB_calibrated+4,?_sprintf+8
   841   00114C  C189  F0E4         	movff	main@RGB_calibrated+5,?_sprintf+9
   842   001150  C18A  F0E5         	movff	main@RGB_calibrated+6,?_sprintf+10
   843   001154  C18B  F0E6         	movff	main@RGB_calibrated+7,?_sprintf+11
   844   001158  EC6C  F00E         	call	_sprintf	;wreg free
   845   00115C                     
   846                           ;../main.c: 66:     sendStringSerial4(readout);
   847   00115C  0E00               	movlw	low main@readout
   848   00115E  6E04               	movwf	sendStringSerial4@string^0,c
   849   001160  0E01               	movlw	high main@readout
   850   001162  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   851   001164  ECE2  F00F         	call	_sendStringSerial4	;wreg free
   852   001168                     l2703:
   853                           
   854                           ;../main.c: 77:         if (time_flag==1){
   855   001168  0101               	movlb	1	; () banked
   856   00116A  0570               	decf	main@time_flag& (0+255),w,b
   857   00116C  1171               	iorwf	(main@time_flag+1)& (0+255),w,b
   858   00116E  A4D8               	btfss	status,2,c
   859   001170  EFBC  F008         	goto	u1561
   860   001174  EFBE  F008         	goto	u1560
   861   001178                     u1561:
   862   001178  EFC4  F008         	goto	l2709
   863   00117C                     u1560:
   864   00117C                     
   865                           ; BSR set to: 1
   866                           ;../main.c: 78:             time++;
   867   00117C  4B72               	infsnz	main@time& (0+255),f,b
   868   00117E  2B73               	incf	(main@time+1)& (0+255),f,b
   869   001180                     
   870                           ; BSR set to: 1
   871                           ;../main.c: 79:             time_flag = 0;
   872   001180  0E00               	movlw	0
   873   001182  6F71               	movwf	(main@time_flag+1)& (0+255),b
   874   001184  0E00               	movlw	0
   875   001186  6F70               	movwf	main@time_flag& (0+255),b
   876   001188                     l2709:
   877   001188  0E01               	movlw	1
   878   00118A  A68E               	btfss	142,3,c	;volatile
   879   00118C  0E00               	movlw	0
   880   00118E  A48E               	btfss	142,2,c	;volatile
   881   001190  0E00               	movlw	0
   882   001192  B0E8               	btfsc	wreg,0,c
   883   001194  EFCE  F008         	goto	u1571
   884   001198  EFD3  F008         	goto	u1570
   885   00119C                     u1571:
   886   00119C  0100               	movlb	0	; () banked
   887   00119E  6BF4               	clrf	??_main& (0+255),b
   888   0011A0  2BF4               	incf	??_main& (0+255),f,b
   889   0011A2  EFD5  F008         	goto	u1578
   890   0011A6                     u1570:
   891   0011A6  0100               	movlb	0	; () banked
   892   0011A8  6BF4               	clrf	??_main& (0+255),b
   893   0011AA                     u1578:
   894   0011AA  51F4               	movf	??_main& (0+255),w,b
   895   0011AC  A4D8               	btfss	status,2,c
   896   0011AE  EFDB  F008         	goto	u1581
   897   0011B2  EFDD  F008         	goto	u1580
   898   0011B6                     u1581:
   899   0011B6  EFC4  F008         	goto	l2709
   900   0011BA                     u1580:
   901   0011BA                     
   902                           ; BSR set to: 0
   903                           ;../main.c: 84:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
   904   0011BA  B48E               	btfsc	142,2,c	;volatile
   905   0011BC  EFE2  F008         	goto	u1591
   906   0011C0  EFE4  F008         	goto	u1590
   907   0011C4                     u1591:
   908   0011C4  EFE7  F008         	goto	l177
   909   0011C8                     u1590:
   910   0011C8                     
   911                           ; BSR set to: 0
   912   0011C8  8E7C               	bsf	124,7,c	;volatile
   913   0011CA  EF58  F009         	goto	l2733
   914   0011CE                     l177:
   915                           
   916                           ; BSR set to: 0
   917   0011CE  8680               	bsf	128,3,c	;volatile
   918   0011D0  EF58  F009         	goto	l2733
   919   0011D4                     l180:
   920                           
   921                           ; BSR set to: 1
   922                           ;../main.c: 89:             if (LATDbits.LATD7){
   923   0011D4  AE7C               	btfss	124,7,c	;volatile
   924   0011D6  EFEF  F008         	goto	u1601
   925   0011DA  EFF1  F008         	goto	u1600
   926   0011DE                     u1601:
   927   0011DE  EF3F  F009         	goto	l181
   928   0011E2                     u1600:
   929   0011E2                     
   930                           ; BSR set to: 1
   931                           ;../main.c: 90:                 if (color_flag){
   932   0011E2  516E               	movf	main@color_flag& (0+255),w,b
   933   0011E4  116F               	iorwf	(main@color_flag+1)& (0+255),w,b
   934   0011E6  B4D8               	btfsc	status,2,c
   935   0011E8  EFF8  F008         	goto	u1611
   936   0011EC  EFFA  F008         	goto	u1610
   937   0011F0                     u1611:
   938   0011F0  EF4C  F009         	goto	l2731
   939   0011F4                     u1610:
   940   0011F4                     
   941                           ; BSR set to: 1
   942                           ;../main.c: 91:                     color_read(&RGB_recorded);
   943   0011F4  0E7C               	movlw	low main@RGB_recorded
   944   0011F6  6E0E               	movwf	color_read@rgb^0,c
   945   0011F8  0E01               	movlw	high main@RGB_recorded
   946   0011FA  6E0F               	movwf	(color_read@rgb+1)^0,c
   947   0011FC  ECAF  F00D         	call	_color_read	;wreg free
   948                           
   949                           ;../main.c: 92:                     color_name = color_processor_easy(&RGB_recorded);
   950   001200  0E7C               	movlw	low main@RGB_recorded
   951   001202  6E03               	movwf	color_processor_easy@rgb^0,c
   952   001204  0E01               	movlw	high main@RGB_recorded
   953   001206  6E04               	movwf	(color_processor_easy@rgb+1)^0,c
   954   001208  EC50  F00D         	call	_color_processor_easy	;wreg free
   955   00120C  C003  F176         	movff	?_color_processor_easy,main@color_name
   956   001210  C004  F177         	movff	?_color_processor_easy+1,main@color_name+1
   957   001214                     
   958                           ;../main.c: 93:                     color_storage[j] = color_name;
   959   001214  90D8               	bcf	status,0,c
   960   001216  0101               	movlb	1	; () banked
   961   001218  3578               	rlcf	main@j& (0+255),w,b
   962   00121A  6ED9               	movwf	fsr2l,c
   963   00121C  3579               	rlcf	(main@j+1)& (0+255),w,b
   964   00121E  6EDA               	movwf	fsr2h,c
   965   001220  0E32               	movlw	low main@color_storage
   966   001222  26D9               	addwf	fsr2l,f,c
   967   001224  0E01               	movlw	high main@color_storage
   968   001226  22DA               	addwfc	fsr2h,f,c
   969   001228  C176  FFDE         	movff	main@color_name,postinc2
   970   00122C  C177  FFDD         	movff	main@color_name+1,postdec2
   971   001230                     
   972                           ; BSR set to: 1
   973                           ;../main.c: 94:                     time_storage[j] = time;
   974   001230  90D8               	bcf	status,0,c
   975   001232  3578               	rlcf	main@j& (0+255),w,b
   976   001234  6ED9               	movwf	fsr2l,c
   977   001236  3579               	rlcf	(main@j+1)& (0+255),w,b
   978   001238  6EDA               	movwf	fsr2h,c
   979   00123A  0E50               	movlw	low main@time_storage
   980   00123C  26D9               	addwf	fsr2l,f,c
   981   00123E  0E01               	movlw	high main@time_storage
   982   001240  22DA               	addwfc	fsr2h,f,c
   983   001242  C172  FFDE         	movff	main@time,postinc2
   984   001246  C173  FFDD         	movff	main@time+1,postdec2
   985   00124A                     
   986                           ; BSR set to: 1
   987                           ;../main.c: 96:                     j++;
   988   00124A  4B78               	infsnz	main@j& (0+255),f,b
   989   00124C  2B79               	incf	(main@j+1)& (0+255),f,b
   990   00124E                     
   991                           ; BSR set to: 1
   992                           ;../main.c: 97:                     time = 0;
   993   00124E  0E00               	movlw	0
   994   001250  6F73               	movwf	(main@time+1)& (0+255),b
   995   001252  0E00               	movlw	0
   996   001254  6F72               	movwf	main@time& (0+255),b
   997   001256                     
   998                           ; BSR set to: 1
   999                           ;../main.c: 99:                     if (color_name != 8) {
  1000   001256  0E08               	movlw	8
  1001   001258  1976               	xorwf	main@color_name& (0+255),w,b
  1002   00125A  1177               	iorwf	(main@color_name+1)& (0+255),w,b
  1003   00125C  B4D8               	btfsc	status,2,c
  1004   00125E  EF33  F009         	goto	u1621
  1005   001262  EF35  F009         	goto	u1620
  1006   001266                     u1621:
  1007   001266  EF4C  F009         	goto	l2731
  1008   00126A                     u1620:
  1009   00126A                     
  1010                           ; BSR set to: 1
  1011                           ;../main.c: 100:                         color_flag = 0;
  1012   00126A  0E00               	movlw	0
  1013   00126C  6F6F               	movwf	(main@color_flag+1)& (0+255),b
  1014   00126E  0E00               	movlw	0
  1015   001270  6F6E               	movwf	main@color_flag& (0+255),b
  1016                           
  1017                           ;../main.c: 101:                         home = 1;
  1018   001272  0E00               	movlw	0
  1019   001274  6F75               	movwf	(main@home+1)& (0+255),b
  1020   001276  0E01               	movlw	1
  1021   001278  6F74               	movwf	main@home& (0+255),b
  1022   00127A  EF4C  F009         	goto	l2731
  1023   00127E                     l181:
  1024                           
  1025                           ; BSR set to: 1
  1026   00127E  A680               	btfss	128,3,c	;volatile
  1027   001280  EF44  F009         	goto	u1631
  1028   001284  EF46  F009         	goto	u1630
  1029   001288                     u1631:
  1030   001288  EF4C  F009         	goto	l2731
  1031   00128C                     u1630:
  1032   00128C                     
  1033                           ; BSR set to: 1
  1034                           ;../main.c: 108:                 color_read(&RGB_recorded);
  1035   00128C  0E7C               	movlw	low main@RGB_recorded
  1036   00128E  6E0E               	movwf	color_read@rgb^0,c
  1037   001290  0E01               	movlw	high main@RGB_recorded
  1038   001292  6E0F               	movwf	(color_read@rgb+1)^0,c
  1039   001294  ECAF  F00D         	call	_color_read	;wreg free
  1040   001298                     l2731:
  1041                           
  1042                           ;../main.c: 110:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1043   001298  0E11               	movlw	17
  1044   00129A  0100               	movlb	0	; () banked
  1045   00129C  6FF5               	movwf	(??_main+1)& (0+255),b
  1046   00129E  0E3C               	movlw	60
  1047   0012A0  6FF4               	movwf	??_main& (0+255),b
  1048   0012A2  0ECB               	movlw	203
  1049   0012A4                     u1667:
  1050   0012A4  2EE8               	decfsz	wreg,f,c
  1051   0012A6  D7FE               	bra	u1667
  1052   0012A8  2FF4               	decfsz	??_main& (0+255),f,b
  1053   0012AA  D7FC               	bra	u1667
  1054   0012AC  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1055   0012AE  D7FA               	bra	u1667
  1056   0012B0                     l2733:
  1057                           
  1058                           ;../main.c: 88:         while (!home) {
  1059   0012B0  0101               	movlb	1	; () banked
  1060   0012B2  5174               	movf	main@home& (0+255),w,b
  1061   0012B4  1175               	iorwf	(main@home+1)& (0+255),w,b
  1062   0012B6  B4D8               	btfsc	status,2,c
  1063   0012B8  EF60  F009         	goto	u1641
  1064   0012BC  EF62  F009         	goto	u1640
  1065   0012C0                     u1641:
  1066   0012C0  EFEA  F008         	goto	l180
  1067   0012C4                     u1640:
  1068   0012C4                     
  1069                           ; BSR set to: 1
  1070                           ;../main.c: 113:         int k;;../main.c: 114:         for (k=0;k<15;k++){
  1071   0012C4  0E00               	movlw	0
  1072   0012C6  6F7B               	movwf	(main@k+1)& (0+255),b
  1073   0012C8  0E00               	movlw	0
  1074   0012CA  6F7A               	movwf	main@k& (0+255),b
  1075   0012CC                     l2741:
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;../main.c: 116:         }
  1079   0012CC  4B7A               	infsnz	main@k& (0+255),f,b
  1080   0012CE  2B7B               	incf	(main@k+1)& (0+255),f,b
  1081   0012D0                     
  1082                           ; BSR set to: 1
  1083   0012D0  BF7B               	btfsc	(main@k+1)& (0+255),7,b
  1084   0012D2  EF74  F009         	goto	u1651
  1085   0012D6  517B               	movf	(main@k+1)& (0+255),w,b
  1086   0012D8  E109               	bnz	u1650
  1087   0012DA  0E0F               	movlw	15
  1088   0012DC  5D7A               	subwf	main@k& (0+255),w,b
  1089   0012DE  A0D8               	btfss	status,0,c
  1090   0012E0  EF74  F009         	goto	u1651
  1091   0012E4  EF76  F009         	goto	u1650
  1092   0012E8                     u1651:
  1093   0012E8  EF66  F009         	goto	l2741
  1094   0012EC                     u1650:
  1095   0012EC  EFB4  F008         	goto	l2703
  1096   0012F0  EF2A  F000         	goto	start
  1097   0012F4                     __end_of_main:
  1098                           	callstack 0
  1099                           
  1100 ;; *************** function _sprintf *****************
  1101 ;; Defined at:
  1102 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1105 ;;		 -> main@readout(50), 
  1106 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1107 ;;		 -> STR_1(15), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1110 ;;  ap              2   12[BANK0 ] PTR void [1]
  1111 ;;		 -> ?_sprintf(2), 
  1112 ;;  ret             2    0        int 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  2    0[BANK0 ] int 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1122 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;Total ram usage:       25 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 9
  1129 ;; This function calls:
  1130 ;;		_vfprintf
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text1
  1137   001CD8                     __ptext1:
  1138                           	callstack 0
  1139   001CD8                     _sprintf:
  1140                           	callstack 21
  1141   001CD8  0EDF               	movlw	low (?_sprintf+4)
  1142   001CDA  0100               	movlb	0	; () banked
  1143   001CDC  6FE7               	movwf	sprintf@ap& (0+255),b
  1144   001CDE  0E00               	movlw	high (?_sprintf+4)
  1145   001CE0  6FE8               	movwf	(sprintf@ap+1)& (0+255),b
  1146   001CE2  C0DB  F0E9         	movff	sprintf@s,sprintf@f
  1147   001CE6  C0DC  F0EA         	movff	sprintf@s+1,sprintf@f+1
  1148   001CEA                     
  1149                           ; BSR set to: 0
  1150   001CEA  0E00               	movlw	0
  1151   001CEC  6FED               	movwf	(sprintf@f+4)& (0+255),b
  1152   001CEE  0E00               	movlw	0
  1153   001CF0  6FEC               	movwf	(sprintf@f+3)& (0+255),b
  1154   001CF2                     
  1155                           ; BSR set to: 0
  1156   001CF2  0E00               	movlw	0
  1157   001CF4  6FF3               	movwf	(sprintf@f+10)& (0+255),b
  1158   001CF6  0E00               	movlw	0
  1159   001CF8  6FF2               	movwf	(sprintf@f+9)& (0+255),b
  1160   001CFA                     
  1161                           ; BSR set to: 0
  1162   001CFA  0EE9               	movlw	low sprintf@f
  1163   001CFC  6E53               	movwf	vfprintf@fp^0,c
  1164   001CFE  0E00               	movlw	high sprintf@f
  1165   001D00  6E54               	movwf	(vfprintf@fp+1)^0,c
  1166   001D02  C0DD  F055         	movff	sprintf@fmt,vfprintf@fmt
  1167   001D06  C0DE  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1168   001D0A  0EE7               	movlw	low sprintf@ap
  1169   001D0C  6E57               	movwf	vfprintf@ap^0,c
  1170   001D0E  0E00               	movlw	high sprintf@ap
  1171   001D10  6E58               	movwf	(vfprintf@ap+1)^0,c
  1172   001D12  EC95  F00E         	call	_vfprintf	;wreg free
  1173   001D16  0100               	movlb	0	; () banked
  1174   001D18  51EC               	movf	(sprintf@f+3)& (0+255),w,b
  1175   001D1A  25DB               	addwf	sprintf@s& (0+255),w,b
  1176   001D1C  6ED9               	movwf	fsr2l,c
  1177   001D1E  51ED               	movf	(sprintf@f+4)& (0+255),w,b
  1178   001D20  21DC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1179   001D22  6EDA               	movwf	fsr2h,c
  1180   001D24  0E00               	movlw	0
  1181   001D26  6EDF               	movwf	indf2,c
  1182   001D28                     
  1183                           ; BSR set to: 0
  1184   001D28  0012               	return		;funcret
  1185   001D2A                     __end_of_sprintf:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _vfprintf *****************
  1189 ;; Defined at:
  1190 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1193 ;;		 -> sprintf@f(11), 
  1194 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1195 ;;		 -> STR_1(15), 
  1196 ;;  ap              2   86[COMRAM] PTR PTR void 
  1197 ;;		 -> sprintf@ap(2), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1200 ;;		 -> STR_1(15), 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  2   82[COMRAM] int 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1210 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1214 ;;Total ram usage:        8 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 8
  1217 ;; This function calls:
  1218 ;;		_vfpfcnvrt
  1219 ;; This function is called by:
  1220 ;;		_sprintf
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text2
  1225   001D2A                     __ptext2:
  1226                           	callstack 0
  1227   001D2A                     _vfprintf:
  1228                           	callstack 21
  1229   001D2A                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1231   001D2A  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1232   001D2E  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1235   001D32  EFA9  F00E         	goto	l2251
  1236   001D36                     l2249:
  1237                           
  1238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1239   001D36  C053  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1240   001D3A  C054  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1241   001D3E  0E59               	movlw	low vfprintf@cfmt
  1242   001D40  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1243   001D42  0E00               	movlw	high vfprintf@cfmt
  1244   001D44  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1245   001D46  C057  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1246   001D4A  C058  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1247   001D4E  ECDA  F00B         	call	_vfpfcnvrt	;wreg free
  1248   001D52                     l2251:
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1251   001D52  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1252   001D56  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1253   001D5A                     	if	0	;tblptru may be non-zero
  1254   001D5A                     	endif
  1255   001D5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1256   001D5A  0E00               	movlw	low (__mediumconst shr (0+16))
  1257   001D5C  6EF8               	movwf	tblptru,c
  1258   001D5E                     	endif
  1259   001D5E  0008               	tblrd		*
  1260   001D60  50F5               	movf	tablat,w,c
  1261   001D62  0900               	iorlw	0
  1262   001D64  A4D8               	btfss	status,2,c
  1263   001D66  EFB7  F00E         	goto	u1261
  1264   001D6A  EFB9  F00E         	goto	u1260
  1265   001D6E                     u1261:
  1266   001D6E  EF9B  F00E         	goto	l2249
  1267   001D72                     u1260:
  1268   001D72                     
  1269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1270   001D72  0E00               	movlw	0
  1271   001D74  6E54               	movwf	(?_vfprintf+1)^0,c
  1272   001D76  0E00               	movlw	0
  1273   001D78  6E53               	movwf	?_vfprintf^0,c
  1274   001D7A  0012               	return		;funcret
  1275   001D7C                     __end_of_vfprintf:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _vfpfcnvrt *****************
  1279 ;; Defined at:
  1280 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1283 ;;		 -> sprintf@f(11), 
  1284 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1285 ;;		 -> vfprintf@cfmt(2), 
  1286 ;;  ap              2   68[COMRAM] PTR PTR void 
  1287 ;;		 -> sprintf@ap(2), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  convarg         8   72[COMRAM] struct .
  1290 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1291 ;;		 -> STR_1(15), 
  1292 ;;  i               2    0        int 
  1293 ;;  done            2    0        int 
  1294 ;;  c               1    0        unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1304 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;Total ram usage:       18 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 7
  1311 ;; This function calls:
  1312 ;;		_dtoa
  1313 ;;		_fputc
  1314 ;; This function is called by:
  1315 ;;		_vfprintf
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text3
  1320   0017B4                     __ptext3:
  1321                           	callstack 0
  1322   0017B4                     _vfpfcnvrt:
  1323                           	callstack 21
  1324   0017B4                     
  1325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1326   0017B4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1327   0017B8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1328   0017BC  CFDE FFF6          	movff	postinc2,tblptrl
  1329   0017C0  CFDD FFF7          	movff	postdec2,tblptrh
  1330   0017C4                     	if	0	;tblptru may be non-zero
  1331   0017C4                     	endif
  1332   0017C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1333   0017C4  0E00               	movlw	low (__mediumconst shr (0+16))
  1334   0017C6  6EF8               	movwf	tblptru,c
  1335   0017C8                     	endif
  1336   0017C8  0008               	tblrd		*
  1337   0017CA  50F5               	movf	tablat,w,c
  1338   0017CC  0A25               	xorlw	37
  1339   0017CE  A4D8               	btfss	status,2,c
  1340   0017D0  EFEC  F00B         	goto	u1161
  1341   0017D4  EFEE  F00B         	goto	u1160
  1342   0017D8                     u1161:
  1343   0017D8  EF72  F00C         	goto	l2149
  1344   0017DC                     u1160:
  1345   0017DC                     
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1347   0017DC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1348   0017E0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1349   0017E4  2ADE               	incf	postinc2,f,c
  1350   0017E6  0E00               	movlw	0
  1351   0017E8  22DD               	addwfc	postdec2,f,c
  1352   0017EA                     
  1353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1354   0017EA  0E00               	movlw	0
  1355   0017EC  0100               	movlb	0	; () banked
  1356   0017EE  6FB1               	movwf	(_width+1)& (0+255),b
  1357   0017F0  0E00               	movlw	0
  1358   0017F2  6FB0               	movwf	_width& (0+255),b
  1359   0017F4  C0B0  F0B8         	movff	_width,_flags
  1360   0017F8                     
  1361                           ; BSR set to: 0
  1362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1363   0017F8  69B2               	setf	_prec& (0+255),b
  1364   0017FA  69B3               	setf	(_prec+1)& (0+255),b
  1365   0017FC                     
  1366                           ; BSR set to: 0
  1367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1368   0017FC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1369   001800  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1370   001804  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1371   001808  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1372   00180C                     
  1373                           ; BSR set to: 0
  1374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1375   00180C  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1376   001810  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1377   001814                     	if	0	;tblptru may be non-zero
  1378   001814                     	endif
  1379   001814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1380   001814  0E00               	movlw	low (__mediumconst shr (0+16))
  1381   001816  6EF8               	movwf	tblptru,c
  1382   001818                     	endif
  1383   001818  0008               	tblrd		*
  1384   00181A  50F5               	movf	tablat,w,c
  1385   00181C  0A64               	xorlw	100
  1386   00181E  B4D8               	btfsc	status,2,c
  1387   001820  EF14  F00C         	goto	u1171
  1388   001824  EF16  F00C         	goto	u1170
  1389   001828                     u1171:
  1390   001828  EF26  F00C         	goto	l2139
  1391   00182C                     u1170:
  1392   00182C                     
  1393                           ; BSR set to: 0
  1394   00182C  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1395   001830  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1396   001834                     	if	0	;tblptru may be non-zero
  1397   001834                     	endif
  1398   001834                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1399   001834  0E00               	movlw	low (__mediumconst shr (0+16))
  1400   001836  6EF8               	movwf	tblptru,c
  1401   001838                     	endif
  1402   001838  0008               	tblrd		*
  1403   00183A  50F5               	movf	tablat,w,c
  1404   00183C  0A69               	xorlw	105
  1405   00183E  A4D8               	btfss	status,2,c
  1406   001840  EF24  F00C         	goto	u1181
  1407   001844  EF26  F00C         	goto	u1180
  1408   001848                     u1181:
  1409   001848  EF69  F00C         	goto	l2145
  1410   00184C                     u1180:
  1411   00184C                     l2139:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1415   00184C  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1416   001850  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1417   001854  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1418   001858  0E02               	movlw	2
  1419   00185A  26DE               	addwf	postinc2,f,c
  1420   00185C  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1421   001860  0E00               	movlw	0
  1422   001862  22DD               	addwfc	postdec2,f,c
  1423   001864  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1424   001868  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1425   00186C  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1426   001870  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1427   001874  0E00               	movlw	0
  1428   001876  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1429   001878  0EFF               	movlw	-1
  1430   00187A  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1431   00187C  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1432   00187E  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1433   001880  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1434   001882  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1435   001884  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1438   001886  0E01               	movlw	1
  1439   001888  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1440   00188A  6E47               	movwf	??_vfpfcnvrt^0,c
  1441   00188C  0E00               	movlw	0
  1442   00188E  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1443   001890  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1444   001892  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1445   001896  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1446   00189A  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1447   00189E  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1448   0018A2                     
  1449                           ; BSR set to: 0
  1450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1451   0018A2  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1452   0018A6  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1453   0018AA  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1454   0018AE  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1455   0018B2  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1456   0018B6  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1457   0018BA  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1458   0018BE  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1459   0018C2  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1460   0018C6  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1461   0018CA  EC09  F007         	call	_dtoa	;wreg free
  1462   0018CE  EF88  F00C         	goto	l1119
  1463   0018D2                     l2145:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1466   0018D2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467   0018D6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468   0018DA  2ADE               	incf	postinc2,f,c
  1469   0018DC  0E00               	movlw	0
  1470   0018DE  22DD               	addwfc	postdec2,f,c
  1471   0018E0  EF88  F00C         	goto	l1119
  1472   0018E4                     l2149:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1475   0018E4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1476   0018E8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1477   0018EC  CFDE FFF6          	movff	postinc2,tblptrl
  1478   0018F0  CFDD FFF7          	movff	postdec2,tblptrh
  1479   0018F4                     	if	0	;tblptru may be non-zero
  1480   0018F4                     	endif
  1481   0018F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1482   0018F4  0E00               	movlw	low (__mediumconst shr (0+16))
  1483   0018F6  6EF8               	movwf	tblptru,c
  1484   0018F8                     	endif
  1485   0018F8  0008               	tblrd		*
  1486   0018FA  50F5               	movf	tablat,w,c
  1487   0018FC  6E03               	movwf	fputc@c^0,c
  1488   0018FE  6A04               	clrf	(fputc@c+1)^0,c
  1489   001900  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1490   001904  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1491   001908  EC89  F00C         	call	_fputc	;wreg free
  1492   00190C  EF69  F00C         	goto	l2145
  1493   001910                     l1119:
  1494   001910  0012               	return		;funcret
  1495   001912                     __end_of_vfpfcnvrt:
  1496                           	callstack 0
  1497                           
  1498 ;; *************** function _dtoa *****************
  1499 ;; Defined at:
  1500 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1503 ;;		 -> sprintf@f(11), 
  1504 ;;  d               8   31[COMRAM] long long 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  n               8   53[COMRAM] long long 
  1507 ;;  i               2   61[COMRAM] int 
  1508 ;;  w               2   51[COMRAM] int 
  1509 ;;  p               2   49[COMRAM] int 
  1510 ;;  s               1   63[COMRAM] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1520 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1521 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1522 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1524 ;;Total ram usage:       35 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 6
  1527 ;; This function calls:
  1528 ;;		___aodiv
  1529 ;;		___aomod
  1530 ;;		_abs
  1531 ;;		_pad
  1532 ;; This function is called by:
  1533 ;;		_vfpfcnvrt
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text4
  1538   000E12                     __ptext4:
  1539                           	callstack 0
  1540   000E12                     _dtoa:
  1541                           	callstack 21
  1542   000E12                     
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1544   000E12  C020  F036         	movff	dtoa@d,dtoa@n
  1545   000E16  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  1546   000E1A  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  1547   000E1E  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  1548   000E22  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  1549   000E26  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  1550   000E2A  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  1551   000E2E  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  1552   000E32                     
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1554   000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1555   000E34  EF1E  F007         	goto	u1041
  1556   000E38  EF21  F007         	goto	u1040
  1557   000E3C                     u1041:
  1558   000E3C  0E01               	movlw	1
  1559   000E3E  EF22  F007         	goto	u1050
  1560   000E42                     u1040:
  1561   000E42  0E00               	movlw	0
  1562   000E44                     u1050:
  1563   000E44  6E40               	movwf	dtoa@s^0,c
  1564   000E46                     
  1565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1566   000E46  5040               	movf	dtoa@s^0,w,c
  1567   000E48  B4D8               	btfsc	status,2,c
  1568   000E4A  EF29  F007         	goto	u1061
  1569   000E4E  EF2B  F007         	goto	u1060
  1570   000E52                     u1061:
  1571   000E52  EF3B  F007         	goto	l2051
  1572   000E56                     u1060:
  1573   000E56                     
  1574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1575   000E56  1E3D               	comf	(dtoa@n+7)^0,f,c
  1576   000E58  1E3C               	comf	(dtoa@n+6)^0,f,c
  1577   000E5A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1578   000E5C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1579   000E5E  1E39               	comf	(dtoa@n+3)^0,f,c
  1580   000E60  1E38               	comf	(dtoa@n+2)^0,f,c
  1581   000E62  1E37               	comf	(dtoa@n+1)^0,f,c
  1582   000E64  6C36               	negf	dtoa@n^0,c
  1583   000E66  0E00               	movlw	0
  1584   000E68  2237               	addwfc	(dtoa@n+1)^0,f,c
  1585   000E6A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1586   000E6C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1587   000E6E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1588   000E70  223B               	addwfc	(dtoa@n+5)^0,f,c
  1589   000E72  223C               	addwfc	(dtoa@n+6)^0,f,c
  1590   000E74  223D               	addwfc	(dtoa@n+7)^0,f,c
  1591   000E76                     l2051:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1594   000E76  0100               	movlb	0	; () banked
  1595   000E78  BFB3               	btfsc	(_prec+1)& (0+255),7,b
  1596   000E7A  EF49  F007         	goto	u1070
  1597   000E7E  51B3               	movf	(_prec+1)& (0+255),w,b
  1598   000E80  E106               	bnz	u1071
  1599   000E82  05B2               	decf	_prec& (0+255),w,b
  1600   000E84  B0D8               	btfsc	status,0,c
  1601   000E86  EF47  F007         	goto	u1071
  1602   000E8A  EF49  F007         	goto	u1070
  1603   000E8E                     u1071:
  1604   000E8E  EF4F  F007         	goto	l1098
  1605   000E92                     u1070:
  1606   000E92                     
  1607                           ; BSR set to: 0
  1608   000E92  0E00               	movlw	0
  1609   000E94  6E33               	movwf	(dtoa@p+1)^0,c
  1610   000E96  0E01               	movlw	1
  1611   000E98  6E32               	movwf	dtoa@p^0,c
  1612   000E9A  EF53  F007         	goto	l1100
  1613   000E9E                     l1098:
  1614                           
  1615                           ; BSR set to: 0
  1616   000E9E  C0B2  F032         	movff	_prec,dtoa@p
  1617   000EA2  C0B3  F033         	movff	_prec+1,dtoa@p+1
  1618   000EA6                     l1100:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1622   000EA6  C0B0  F034         	movff	_width,dtoa@w
  1623   000EAA  C0B1  F035         	movff	_width+1,dtoa@w+1
  1624   000EAE                     
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1627   000EAE  5040               	movf	dtoa@s^0,w,c
  1628   000EB0  B4D8               	btfsc	status,2,c
  1629   000EB2  EF5D  F007         	goto	u1081
  1630   000EB6  EF5F  F007         	goto	u1080
  1631   000EBA                     u1081:
  1632   000EBA  EF76  F007         	goto	l1101
  1633   000EBE                     u1080:
  1634   000EBE                     
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1637   000EBE  0634               	decf	dtoa@w^0,f,c
  1638   000EC0  A0D8               	btfss	status,0,c
  1639   000EC2  0635               	decf	(dtoa@w+1)^0,f,c
  1640   000EC4                     
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1643   000EC4  5040               	movf	dtoa@s^0,w,c
  1644   000EC6  A4D8               	btfss	status,2,c
  1645   000EC8  EF68  F007         	goto	u1091
  1646   000ECC  EF6A  F007         	goto	u1090
  1647   000ED0                     u1091:
  1648   000ED0  EF70  F007         	goto	l2063
  1649   000ED4                     u1090:
  1650   000ED4                     
  1651                           ; BSR set to: 0
  1652   000ED4  0E00               	movlw	0
  1653   000ED6  6E31               	movwf	(_dtoa$2225+1)^0,c
  1654   000ED8  0E2B               	movlw	43
  1655   000EDA  6E30               	movwf	_dtoa$2225^0,c
  1656   000EDC  EF74  F007         	goto	l2065
  1657   000EE0                     l2063:
  1658                           
  1659                           ; BSR set to: 0
  1660   000EE0  0E00               	movlw	0
  1661   000EE2  6E31               	movwf	(_dtoa$2225+1)^0,c
  1662   000EE4  0E2D               	movlw	45
  1663   000EE6  6E30               	movwf	_dtoa$2225^0,c
  1664   000EE8                     l2065:
  1665                           
  1666                           ; BSR set to: 0
  1667   000EE8  C030  F040         	movff	_dtoa$2225,dtoa@s
  1668   000EEC                     l1101:
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1672   000EEC  0E00               	movlw	0
  1673   000EEE  6E3F               	movwf	(dtoa@i+1)^0,c
  1674   000EF0  0E1F               	movlw	31
  1675   000EF2  6E3E               	movwf	dtoa@i^0,c
  1676   000EF4                     
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1679   000EF4  0E00               	movlw	0
  1680   000EF6  6FDA               	movwf	(_dbuf+31)& (0+255),b
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1683   000EF8  EFFA  F007         	goto	l2079
  1684   000EFC                     l2069:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1687   000EFC  063E               	decf	dtoa@i^0,f,c
  1688   000EFE  A0D8               	btfss	status,0,c
  1689   000F00  063F               	decf	(dtoa@i+1)^0,f,c
  1690   000F02                     
  1691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1692   000F02  0EBB               	movlw	low _dbuf
  1693   000F04  243E               	addwf	dtoa@i^0,w,c
  1694   000F06  6ED9               	movwf	fsr2l,c
  1695   000F08  0E00               	movlw	high _dbuf
  1696   000F0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  1697   000F0C  6EDA               	movwf	fsr2h,c
  1698   000F0E  C036  F003         	movff	dtoa@n,___aomod@dividend
  1699   000F12  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1700   000F16  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1701   000F1A  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1702   000F1E  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1703   000F22  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1704   000F26  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1705   000F2A  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1706   000F2E  0E0A               	movlw	10
  1707   000F30  6E0B               	movwf	___aomod@divisor^0,c
  1708   000F32  0E00               	movlw	0
  1709   000F34  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1710   000F36  0E00               	movlw	0
  1711   000F38  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1712   000F3A  0E00               	movlw	0
  1713   000F3C  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1714   000F3E  0E00               	movlw	0
  1715   000F40  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1716   000F42  0E00               	movlw	0
  1717   000F44  6E10               	movwf	(___aomod@divisor+5)^0,c
  1718   000F46  0E00               	movlw	0
  1719   000F48  6E11               	movwf	(___aomod@divisor+6)^0,c
  1720   000F4A  0E00               	movlw	0
  1721   000F4C  6E12               	movwf	(___aomod@divisor+7)^0,c
  1722   000F4E  EC28  F00B         	call	___aomod	;wreg free
  1723   000F52  C003  F028         	movff	?___aomod,??_dtoa
  1724   000F56  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1725   000F5A  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1726   000F5E  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1727   000F62  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1728   000F66  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1729   000F6A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1730   000F6E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1731   000F72  C028  F015         	movff	??_dtoa,abs@a
  1732   000F76  C029  F016         	movff	??_dtoa+1,abs@a+1
  1733   000F7A  ECC2  F00F         	call	_abs	;wreg free
  1734   000F7E  5015               	movf	?_abs^0,w,c
  1735   000F80  0F30               	addlw	48
  1736   000F82  6EDF               	movwf	indf2,c
  1737   000F84                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1739   000F84  0632               	decf	dtoa@p^0,f,c
  1740   000F86  A0D8               	btfss	status,0,c
  1741   000F88  0633               	decf	(dtoa@p+1)^0,f,c
  1742   000F8A                     
  1743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1744   000F8A  0634               	decf	dtoa@w^0,f,c
  1745   000F8C  A0D8               	btfss	status,0,c
  1746   000F8E  0635               	decf	(dtoa@w+1)^0,f,c
  1747   000F90                     
  1748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1749   000F90  C036  F003         	movff	dtoa@n,___aodiv@dividend
  1750   000F94  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1751   000F98  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1752   000F9C  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1753   000FA0  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1754   000FA4  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1755   000FA8  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1756   000FAC  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  1757   000FB0  0E0A               	movlw	10
  1758   000FB2  6E0B               	movwf	___aodiv@divisor^0,c
  1759   000FB4  0E00               	movlw	0
  1760   000FB6  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  1761   000FB8  0E00               	movlw	0
  1762   000FBA  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  1763   000FBC  0E00               	movlw	0
  1764   000FBE  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  1765   000FC0  0E00               	movlw	0
  1766   000FC2  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  1767   000FC4  0E00               	movlw	0
  1768   000FC6  6E10               	movwf	(___aodiv@divisor+5)^0,c
  1769   000FC8  0E00               	movlw	0
  1770   000FCA  6E11               	movwf	(___aodiv@divisor+6)^0,c
  1771   000FCC  0E00               	movlw	0
  1772   000FCE  6E12               	movwf	(___aodiv@divisor+7)^0,c
  1773   000FD0  EC64  F00A         	call	___aodiv	;wreg free
  1774   000FD4  C003  F036         	movff	?___aodiv,dtoa@n
  1775   000FD8  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  1776   000FDC  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  1777   000FE0  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  1778   000FE4  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  1779   000FE8  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  1780   000FEC  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  1781   000FF0  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  1782   000FF4                     l2079:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1785   000FF4  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1786   000FF6  EF05  F008         	goto	u1101
  1787   000FFA  503F               	movf	(dtoa@i+1)^0,w,c
  1788   000FFC  E108               	bnz	u1100
  1789   000FFE  043E               	decf	dtoa@i^0,w,c
  1790   001000  A0D8               	btfss	status,0,c
  1791   001002  EF05  F008         	goto	u1101
  1792   001006  EF07  F008         	goto	u1100
  1793   00100A                     u1101:
  1794   00100A  EF23  F008         	goto	l2085
  1795   00100E                     u1100:
  1796   00100E  5036               	movf	dtoa@n^0,w,c
  1797   001010  1037               	iorwf	(dtoa@n+1)^0,w,c
  1798   001012  1038               	iorwf	(dtoa@n+2)^0,w,c
  1799   001014  1039               	iorwf	(dtoa@n+3)^0,w,c
  1800   001016  103A               	iorwf	(dtoa@n+4)^0,w,c
  1801   001018  103B               	iorwf	(dtoa@n+5)^0,w,c
  1802   00101A  103C               	iorwf	(dtoa@n+6)^0,w,c
  1803   00101C  103D               	iorwf	(dtoa@n+7)^0,w,c
  1804   00101E  A4D8               	btfss	status,2,c
  1805   001020  EF14  F008         	goto	u1111
  1806   001024  EF16  F008         	goto	u1110
  1807   001028                     u1111:
  1808   001028  EF7E  F007         	goto	l2069
  1809   00102C                     u1110:
  1810   00102C  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1811   00102E  EF23  F008         	goto	u1120
  1812   001032  5033               	movf	(dtoa@p+1)^0,w,c
  1813   001034  E106               	bnz	u1121
  1814   001036  0432               	decf	dtoa@p^0,w,c
  1815   001038  B0D8               	btfsc	status,0,c
  1816   00103A  EF21  F008         	goto	u1121
  1817   00103E  EF23  F008         	goto	u1120
  1818   001042                     u1121:
  1819   001042  EF7E  F007         	goto	l2069
  1820   001046                     u1120:
  1821   001046                     l2085:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1824   001046  5040               	movf	dtoa@s^0,w,c
  1825   001048  B4D8               	btfsc	status,2,c
  1826   00104A  EF29  F008         	goto	u1131
  1827   00104E  EF2B  F008         	goto	u1130
  1828   001052                     u1131:
  1829   001052  EF36  F008         	goto	l2091
  1830   001056                     u1130:
  1831   001056                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1833   001056  063E               	decf	dtoa@i^0,f,c
  1834   001058  A0D8               	btfss	status,0,c
  1835   00105A  063F               	decf	(dtoa@i+1)^0,f,c
  1836   00105C                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1838   00105C  0EBB               	movlw	low _dbuf
  1839   00105E  243E               	addwf	dtoa@i^0,w,c
  1840   001060  6ED9               	movwf	fsr2l,c
  1841   001062  0E00               	movlw	high _dbuf
  1842   001064  203F               	addwfc	(dtoa@i+1)^0,w,c
  1843   001066  6EDA               	movwf	fsr2h,c
  1844   001068  C040  FFDF         	movff	dtoa@s,indf2
  1845   00106C                     l2091:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1848   00106C  C01E  F013         	movff	dtoa@fp,pad@fp
  1849   001070  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1850   001074  0EBB               	movlw	low _dbuf
  1851   001076  243E               	addwf	dtoa@i^0,w,c
  1852   001078  6E15               	movwf	pad@buf^0,c
  1853   00107A  0E00               	movlw	high _dbuf
  1854   00107C  203F               	addwfc	(dtoa@i+1)^0,w,c
  1855   00107E  6E16               	movwf	(pad@buf+1)^0,c
  1856   001080  C034  F017         	movff	dtoa@w,pad@p
  1857   001084  C035  F018         	movff	dtoa@w+1,pad@p+1
  1858   001088  EC02  F00E         	call	_pad	;wreg free
  1859   00108C  0012               	return		;funcret
  1860   00108E                     __end_of_dtoa:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _pad *****************
  1864 ;; Defined at:
  1865 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1868 ;;		 -> sprintf@f(11), 
  1869 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1870 ;;		 -> dbuf(32), 
  1871 ;;  p               2   22[COMRAM] int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  w               2   27[COMRAM] int 
  1874 ;;  i               2   25[COMRAM] int 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1884 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;Total ram usage:       11 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 5
  1891 ;; This function calls:
  1892 ;;		_fputc
  1893 ;;		_fputs
  1894 ;; This function is called by:
  1895 ;;		_dtoa
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text5
  1900   001C04                     __ptext5:
  1901                           	callstack 0
  1902   001C04                     _pad:
  1903                           	callstack 21
  1904   001C04                     
  1905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1906   001C04  BE18               	btfsc	(pad@p+1)^0,7,c
  1907   001C06  EF07  F00E         	goto	u991
  1908   001C0A  EF09  F00E         	goto	u990
  1909   001C0E                     u991:
  1910   001C0E  EF0F  F00E         	goto	l2025
  1911   001C12                     u990:
  1912   001C12  C017  F01C         	movff	pad@p,pad@w
  1913   001C16  C018  F01D         	movff	pad@p+1,pad@w+1
  1914   001C1A  EF13  F00E         	goto	l1089
  1915   001C1E                     l2025:
  1916   001C1E  0E00               	movlw	0
  1917   001C20  6E1D               	movwf	(pad@w+1)^0,c
  1918   001C22  0E00               	movlw	0
  1919   001C24  6E1C               	movwf	pad@w^0,c
  1920   001C26                     l1089:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1923   001C26  0E00               	movlw	0
  1924   001C28  6E1B               	movwf	(pad@i+1)^0,c
  1925   001C2A  0E00               	movlw	0
  1926   001C2C  6E1A               	movwf	pad@i^0,c
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1929   001C2E  EF25  F00E         	goto	l2031
  1930   001C32                     l2027:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1933   001C32  0E00               	movlw	0
  1934   001C34  6E04               	movwf	(fputc@c+1)^0,c
  1935   001C36  0E20               	movlw	32
  1936   001C38  6E03               	movwf	fputc@c^0,c
  1937   001C3A  C013  F005         	movff	pad@fp,fputc@fp
  1938   001C3E  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1939   001C42  EC89  F00C         	call	_fputc	;wreg free
  1940   001C46                     
  1941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1942   001C46  4A1A               	infsnz	pad@i^0,f,c
  1943   001C48  2A1B               	incf	(pad@i+1)^0,f,c
  1944   001C4A                     l2031:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1947   001C4A  501C               	movf	pad@w^0,w,c
  1948   001C4C  5C1A               	subwf	pad@i^0,w,c
  1949   001C4E  501B               	movf	(pad@i+1)^0,w,c
  1950   001C50  0A80               	xorlw	128
  1951   001C52  6E19               	movwf	??_pad^0,c
  1952   001C54  501D               	movf	(pad@w+1)^0,w,c
  1953   001C56  0A80               	xorlw	128
  1954   001C58  5819               	subwfb	??_pad^0,w,c
  1955   001C5A  A0D8               	btfss	status,0,c
  1956   001C5C  EF32  F00E         	goto	u1001
  1957   001C60  EF34  F00E         	goto	u1000
  1958   001C64                     u1001:
  1959   001C64  EF19  F00E         	goto	l2027
  1960   001C68                     u1000:
  1961   001C68                     
  1962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1963   001C68  C015  F00C         	movff	pad@buf,fputs@s
  1964   001C6C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1965   001C70  C013  F00E         	movff	pad@fp,fputs@fp
  1966   001C74  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1967   001C78  EC5E  F00F         	call	_fputs	;wreg free
  1968   001C7C  0012               	return		;funcret
  1969   001C7E                     __end_of_pad:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _fputs *****************
  1973 ;; Defined at:
  1974 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1977 ;;		 -> dbuf(32), 
  1978 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1979 ;;		 -> sprintf@f(11), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  i               2   16[COMRAM] int 
  1982 ;;  c               1   15[COMRAM] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2   11[COMRAM] int 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;Total ram usage:        7 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 4
  1999 ;; This function calls:
  2000 ;;		_fputc
  2001 ;; This function is called by:
  2002 ;;		_pad
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text6
  2007   001EBC                     __ptext6:
  2008                           	callstack 0
  2009   001EBC                     _fputs:
  2010                           	callstack 21
  2011   001EBC  0E00               	movlw	0
  2012   001EBE  6E12               	movwf	(fputs@i+1)^0,c
  2013   001EC0  0E00               	movlw	0
  2014   001EC2  6E11               	movwf	fputs@i^0,c
  2015   001EC4  EF6F  F00F         	goto	l1939
  2016   001EC8                     l1935:
  2017   001EC8  C010  F003         	movff	fputs@c,fputc@c
  2018   001ECC  6A04               	clrf	(fputc@c+1)^0,c
  2019   001ECE  C00E  F005         	movff	fputs@fp,fputc@fp
  2020   001ED2  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2021   001ED6  EC89  F00C         	call	_fputc	;wreg free
  2022   001EDA  4A11               	infsnz	fputs@i^0,f,c
  2023   001EDC  2A12               	incf	(fputs@i+1)^0,f,c
  2024   001EDE                     l1939:
  2025   001EDE  5011               	movf	fputs@i^0,w,c
  2026   001EE0  240C               	addwf	fputs@s^0,w,c
  2027   001EE2  6ED9               	movwf	fsr2l,c
  2028   001EE4  5012               	movf	(fputs@i+1)^0,w,c
  2029   001EE6  200D               	addwfc	(fputs@s+1)^0,w,c
  2030   001EE8  6EDA               	movwf	fsr2h,c
  2031   001EEA  50DF               	movf	indf2,w,c
  2032   001EEC  6E10               	movwf	fputs@c^0,c
  2033   001EEE  5010               	movf	fputs@c^0,w,c
  2034   001EF0  A4D8               	btfss	status,2,c
  2035   001EF2  EF7D  F00F         	goto	u851
  2036   001EF6  EF7F  F00F         	goto	u850
  2037   001EFA                     u851:
  2038   001EFA  EF64  F00F         	goto	l1935
  2039   001EFE                     u850:
  2040   001EFE  0012               	return		;funcret
  2041   001F00                     __end_of_fputs:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _fputc *****************
  2045 ;; Defined at:
  2046 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  c               2    2[COMRAM] int 
  2049 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2050 ;;		 -> sprintf@f(11), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2    2[COMRAM] int 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;Total ram usage:        9 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 3
  2069 ;; This function calls:
  2070 ;;		_putch
  2071 ;; This function is called by:
  2072 ;;		_pad
  2073 ;;		_vfpfcnvrt
  2074 ;;		_fputs
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text7
  2079   001912                     __ptext7:
  2080                           	callstack 0
  2081   001912                     _fputc:
  2082                           	callstack 24
  2083   001912  5005               	movf	fputc@fp^0,w,c
  2084   001914  1006               	iorwf	(fputc@fp+1)^0,w,c
  2085   001916  B4D8               	btfsc	status,2,c
  2086   001918  EF90  F00C         	goto	u811
  2087   00191C  EF92  F00C         	goto	u810
  2088   001920                     u811:
  2089   001920  EF9B  F00C         	goto	l1923
  2090   001924                     u810:
  2091   001924  5005               	movf	fputc@fp^0,w,c
  2092   001926  1006               	iorwf	(fputc@fp+1)^0,w,c
  2093   001928  A4D8               	btfss	status,2,c
  2094   00192A  EF99  F00C         	goto	u821
  2095   00192E  EF9B  F00C         	goto	u820
  2096   001932                     u821:
  2097   001932  EFA0  F00C         	goto	l1925
  2098   001936                     u820:
  2099   001936                     l1923:
  2100   001936  5003               	movf	fputc@c^0,w,c
  2101   001938  EC9E  F010         	call	_putch
  2102   00193C  EFED  F00C         	goto	l1144
  2103   001940                     l1925:
  2104   001940  EE20 F009          	lfsr	2,9
  2105   001944  5005               	movf	fputc@fp^0,w,c
  2106   001946  26D9               	addwf	fsr2l,f,c
  2107   001948  5006               	movf	(fputc@fp+1)^0,w,c
  2108   00194A  22DA               	addwfc	fsr2h,f,c
  2109   00194C  50DE               	movf	postinc2,w,c
  2110   00194E  10DE               	iorwf	postinc2,w,c
  2111   001950  B4D8               	btfsc	status,2,c
  2112   001952  EFAD  F00C         	goto	u831
  2113   001956  EFAF  F00C         	goto	u830
  2114   00195A                     u831:
  2115   00195A  EFCA  F00C         	goto	l1929
  2116   00195E                     u830:
  2117   00195E  EE20 F009          	lfsr	2,9
  2118   001962  5005               	movf	fputc@fp^0,w,c
  2119   001964  26D9               	addwf	fsr2l,f,c
  2120   001966  5006               	movf	(fputc@fp+1)^0,w,c
  2121   001968  22DA               	addwfc	fsr2h,f,c
  2122   00196A  EE10 F003          	lfsr	1,3
  2123   00196E  5005               	movf	fputc@fp^0,w,c
  2124   001970  26E1               	addwf	fsr1l,f,c
  2125   001972  5006               	movf	(fputc@fp+1)^0,w,c
  2126   001974  22E2               	addwfc	fsr1h,f,c
  2127   001976  50DE               	movf	postinc2,w,c
  2128   001978  5CE6               	subwf	postinc1,w,c
  2129   00197A  50E6               	movf	postinc1,w,c
  2130   00197C  0A80               	xorlw	128
  2131   00197E  6E0B               	movwf	(??_fputc+4)^0,c
  2132   001980  50DE               	movf	postinc2,w,c
  2133   001982  0A80               	xorlw	128
  2134   001984  580B               	subwfb	(??_fputc+4)^0,w,c
  2135   001986  B0D8               	btfsc	status,0,c
  2136   001988  EFC8  F00C         	goto	u841
  2137   00198C  EFCA  F00C         	goto	u840
  2138   001990                     u841:
  2139   001990  EFED  F00C         	goto	l1144
  2140   001994                     u840:
  2141   001994                     l1929:
  2142   001994  EE20 F003          	lfsr	2,3
  2143   001998  5005               	movf	fputc@fp^0,w,c
  2144   00199A  26D9               	addwf	fsr2l,f,c
  2145   00199C  5006               	movf	(fputc@fp+1)^0,w,c
  2146   00199E  22DA               	addwfc	fsr2h,f,c
  2147   0019A0  CFDE F007          	movff	postinc2,??_fputc
  2148   0019A4  CFDD F008          	movff	postdec2,??_fputc+1
  2149   0019A8  C005  FFD9         	movff	fputc@fp,fsr2l
  2150   0019AC  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2151   0019B0  CFDE F009          	movff	postinc2,??_fputc+2
  2152   0019B4  CFDD F00A          	movff	postdec2,??_fputc+3
  2153   0019B8  5007               	movf	??_fputc^0,w,c
  2154   0019BA  2409               	addwf	(??_fputc+2)^0,w,c
  2155   0019BC  6ED9               	movwf	fsr2l,c
  2156   0019BE  5008               	movf	(??_fputc+1)^0,w,c
  2157   0019C0  200A               	addwfc	(??_fputc+3)^0,w,c
  2158   0019C2  6EDA               	movwf	fsr2h,c
  2159   0019C4  C003  FFDF         	movff	fputc@c,indf2
  2160   0019C8  EE20 F003          	lfsr	2,3
  2161   0019CC  5005               	movf	fputc@fp^0,w,c
  2162   0019CE  26D9               	addwf	fsr2l,f,c
  2163   0019D0  5006               	movf	(fputc@fp+1)^0,w,c
  2164   0019D2  22DA               	addwfc	fsr2h,f,c
  2165   0019D4  2ADE               	incf	postinc2,f,c
  2166   0019D6  0E00               	movlw	0
  2167   0019D8  22DD               	addwfc	postdec2,f,c
  2168   0019DA                     l1144:
  2169   0019DA  0012               	return		;funcret
  2170   0019DC                     __end_of_fputc:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _putch *****************
  2174 ;; Defined at:
  2175 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  c               1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  c               1    0[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 2
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_fputc
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text8
  2204   00213C                     __ptext8:
  2205                           	callstack 0
  2206   00213C                     _putch:
  2207                           	callstack 24
  2208   00213C  0012               	return		;funcret
  2209   00213E                     __end_of_putch:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _abs *****************
  2213 ;; Defined at:
  2214 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  a               2   20[COMRAM] int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  2   20[COMRAM] int 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;Total ram usage:        4 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 2
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_dtoa
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text9
  2243   001F84                     __ptext9:
  2244                           	callstack 0
  2245   001F84                     _abs:
  2246                           	callstack 24
  2247   001F84  BE16               	btfsc	(abs@a+1)^0,7,c
  2248   001F86  EFCF  F00F         	goto	u1010
  2249   001F8A  5016               	movf	(abs@a+1)^0,w,c
  2250   001F8C  E106               	bnz	u1011
  2251   001F8E  0415               	decf	abs@a^0,w,c
  2252   001F90  B0D8               	btfsc	status,0,c
  2253   001F92  EFCD  F00F         	goto	u1011
  2254   001F96  EFCF  F00F         	goto	u1010
  2255   001F9A                     u1011:
  2256   001F9A  EFDD  F00F         	goto	l1129
  2257   001F9E                     u1010:
  2258   001F9E  C015  F017         	movff	abs@a,??_abs
  2259   001FA2  C016  F018         	movff	abs@a+1,??_abs+1
  2260   001FA6  1E17               	comf	??_abs^0,f,c
  2261   001FA8  1E18               	comf	(??_abs+1)^0,f,c
  2262   001FAA  4A17               	infsnz	??_abs^0,f,c
  2263   001FAC  2A18               	incf	(??_abs+1)^0,f,c
  2264   001FAE  C017  F015         	movff	??_abs,?_abs
  2265   001FB2  C018  F016         	movff	??_abs+1,?_abs+1
  2266   001FB6  EFE1  F00F         	goto	l1132
  2267   001FBA                     l1129:
  2268   001FBA  C015  F015         	movff	abs@a,?_abs
  2269   001FBE  C016  F016         	movff	abs@a+1,?_abs+1
  2270   001FC2                     l1132:
  2271   001FC2  0012               	return		;funcret
  2272   001FC4                     __end_of_abs:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function ___aomod *****************
  2276 ;; Defined at:
  2277 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  dividend        8    2[COMRAM] long long 
  2280 ;;  divisor         8   10[COMRAM] long long 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  sign            1   19[COMRAM] unsigned char 
  2283 ;;  counter         1   18[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  8    2[COMRAM] long long 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2293 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;Total ram usage:       18 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_dtoa
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text10
  2308   001650                     __ptext10:
  2309                           	callstack 0
  2310   001650                     ___aomod:
  2311                           	callstack 24
  2312   001650  0E00               	movlw	0
  2313   001652  6E14               	movwf	___aomod@sign^0,c
  2314   001654  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2315   001656  EF31  F00B         	goto	u930
  2316   00165A  EF2F  F00B         	goto	u931
  2317   00165E                     u931:
  2318   00165E  EF43  F00B         	goto	l1993
  2319   001662                     u930:
  2320   001662  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2321   001664  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2322   001666  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2323   001668  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2324   00166A  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2325   00166C  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2326   00166E  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2327   001670  6C03               	negf	___aomod@dividend^0,c
  2328   001672  0E00               	movlw	0
  2329   001674  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2330   001676  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2331   001678  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2332   00167A  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2333   00167C  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2334   00167E  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2335   001680  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2336   001682  0E01               	movlw	1
  2337   001684  6E14               	movwf	___aomod@sign^0,c
  2338   001686                     l1993:
  2339   001686  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2340   001688  EF4A  F00B         	goto	u940
  2341   00168C  EF48  F00B         	goto	u941
  2342   001690                     u941:
  2343   001690  EF5A  F00B         	goto	l1997
  2344   001694                     u940:
  2345   001694  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2346   001696  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2347   001698  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2348   00169A  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2349   00169C  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2350   00169E  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2351   0016A0  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2352   0016A2  6C0B               	negf	___aomod@divisor^0,c
  2353   0016A4  0E00               	movlw	0
  2354   0016A6  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2355   0016A8  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2356   0016AA  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2357   0016AC  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2358   0016AE  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2359   0016B0  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2360   0016B2  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2361   0016B4                     l1997:
  2362   0016B4  500B               	movf	___aomod@divisor^0,w,c
  2363   0016B6  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2364   0016B8  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2365   0016BA  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2366   0016BC  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2367   0016BE  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2368   0016C0  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2369   0016C2  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2370   0016C4  B4D8               	btfsc	status,2,c
  2371   0016C6  EF67  F00B         	goto	u951
  2372   0016CA  EF69  F00B         	goto	u950
  2373   0016CE                     u951:
  2374   0016CE  EFB1  F00B         	goto	l2013
  2375   0016D2                     u950:
  2376   0016D2  0E01               	movlw	1
  2377   0016D4  6E13               	movwf	___aomod@counter^0,c
  2378   0016D6  EF77  F00B         	goto	l2003
  2379   0016DA                     l2001:
  2380   0016DA  90D8               	bcf	status,0,c
  2381   0016DC  360B               	rlcf	___aomod@divisor^0,f,c
  2382   0016DE  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2383   0016E0  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2384   0016E2  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2385   0016E4  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2386   0016E6  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2387   0016E8  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2388   0016EA  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2389   0016EC  2A13               	incf	___aomod@counter^0,f,c
  2390   0016EE                     l2003:
  2391   0016EE  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2392   0016F0  EF7C  F00B         	goto	u961
  2393   0016F4  EF7E  F00B         	goto	u960
  2394   0016F8                     u961:
  2395   0016F8  EF6D  F00B         	goto	l2001
  2396   0016FC                     u960:
  2397   0016FC                     l2005:
  2398   0016FC  500B               	movf	___aomod@divisor^0,w,c
  2399   0016FE  5C03               	subwf	___aomod@dividend^0,w,c
  2400   001700  500C               	movf	(___aomod@divisor+1)^0,w,c
  2401   001702  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2402   001704  500D               	movf	(___aomod@divisor+2)^0,w,c
  2403   001706  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2404   001708  500E               	movf	(___aomod@divisor+3)^0,w,c
  2405   00170A  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2406   00170C  500F               	movf	(___aomod@divisor+4)^0,w,c
  2407   00170E  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2408   001710  5010               	movf	(___aomod@divisor+5)^0,w,c
  2409   001712  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2410   001714  5011               	movf	(___aomod@divisor+6)^0,w,c
  2411   001716  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2412   001718  5012               	movf	(___aomod@divisor+7)^0,w,c
  2413   00171A  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2414   00171C  A0D8               	btfss	status,0,c
  2415   00171E  EF93  F00B         	goto	u971
  2416   001722  EF95  F00B         	goto	u970
  2417   001726                     u971:
  2418   001726  EFA5  F00B         	goto	l2009
  2419   00172A                     u970:
  2420   00172A  500B               	movf	___aomod@divisor^0,w,c
  2421   00172C  5E03               	subwf	___aomod@dividend^0,f,c
  2422   00172E  500C               	movf	(___aomod@divisor+1)^0,w,c
  2423   001730  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2424   001732  500D               	movf	(___aomod@divisor+2)^0,w,c
  2425   001734  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2426   001736  500E               	movf	(___aomod@divisor+3)^0,w,c
  2427   001738  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2428   00173A  500F               	movf	(___aomod@divisor+4)^0,w,c
  2429   00173C  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2430   00173E  5010               	movf	(___aomod@divisor+5)^0,w,c
  2431   001740  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2432   001742  5011               	movf	(___aomod@divisor+6)^0,w,c
  2433   001744  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2434   001746  5012               	movf	(___aomod@divisor+7)^0,w,c
  2435   001748  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2436   00174A                     l2009:
  2437   00174A  90D8               	bcf	status,0,c
  2438   00174C  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2439   00174E  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2440   001750  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2441   001752  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2442   001754  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2443   001756  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2444   001758  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2445   00175A  320B               	rrcf	___aomod@divisor^0,f,c
  2446   00175C  2E13               	decfsz	___aomod@counter^0,f,c
  2447   00175E  EF7E  F00B         	goto	l2005
  2448   001762                     l2013:
  2449   001762  5014               	movf	___aomod@sign^0,w,c
  2450   001764  B4D8               	btfsc	status,2,c
  2451   001766  EFB7  F00B         	goto	u981
  2452   00176A  EFB9  F00B         	goto	u980
  2453   00176E                     u981:
  2454   00176E  EFC9  F00B         	goto	l2017
  2455   001772                     u980:
  2456   001772  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2457   001774  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2458   001776  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2459   001778  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2460   00177A  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2461   00177C  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2462   00177E  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2463   001780  6C03               	negf	___aomod@dividend^0,c
  2464   001782  0E00               	movlw	0
  2465   001784  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2466   001786  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2467   001788  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2468   00178A  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2469   00178C  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2470   00178E  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2471   001790  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2472   001792                     l2017:
  2473   001792  C003  F003         	movff	___aomod@dividend,?___aomod
  2474   001796  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2475   00179A  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2476   00179E  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2477   0017A2  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2478   0017A6  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2479   0017AA  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2480   0017AE  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2481   0017B2  0012               	return		;funcret
  2482   0017B4                     __end_of___aomod:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function ___aodiv *****************
  2486 ;; Defined at:
  2487 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  dividend        8    2[COMRAM] long long 
  2490 ;;  divisor         8   10[COMRAM] long long 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  quotient        8   20[COMRAM] long long 
  2493 ;;  sign            1   19[COMRAM] unsigned char 
  2494 ;;  counter         1   18[COMRAM] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  8    2[COMRAM] long long 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2504 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;Total ram usage:       26 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 2
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_dtoa
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text11
  2519   0014C8                     __ptext11:
  2520                           	callstack 0
  2521   0014C8                     ___aodiv:
  2522                           	callstack 24
  2523   0014C8  0E00               	movlw	0
  2524   0014CA  6E14               	movwf	___aodiv@sign^0,c
  2525   0014CC  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2526   0014CE  EF6D  F00A         	goto	u860
  2527   0014D2  EF6B  F00A         	goto	u861
  2528   0014D6                     u861:
  2529   0014D6  EF7F  F00A         	goto	l1949
  2530   0014DA                     u860:
  2531   0014DA  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2532   0014DC  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2533   0014DE  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2534   0014E0  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2535   0014E2  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2536   0014E4  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2537   0014E6  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2538   0014E8  6C0B               	negf	___aodiv@divisor^0,c
  2539   0014EA  0E00               	movlw	0
  2540   0014EC  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2541   0014EE  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2542   0014F0  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2543   0014F2  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2544   0014F4  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2545   0014F6  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2546   0014F8  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2547   0014FA  0E01               	movlw	1
  2548   0014FC  6E14               	movwf	___aodiv@sign^0,c
  2549   0014FE                     l1949:
  2550   0014FE  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2551   001500  EF86  F00A         	goto	u870
  2552   001504  EF84  F00A         	goto	u871
  2553   001508                     u871:
  2554   001508  EF98  F00A         	goto	l1955
  2555   00150C                     u870:
  2556   00150C  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2557   00150E  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2558   001510  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2559   001512  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2560   001514  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2561   001516  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2562   001518  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2563   00151A  6C03               	negf	___aodiv@dividend^0,c
  2564   00151C  0E00               	movlw	0
  2565   00151E  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2566   001520  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2567   001522  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2568   001524  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2569   001526  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2570   001528  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2571   00152A  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2572   00152C  0E01               	movlw	1
  2573   00152E  1A14               	xorwf	___aodiv@sign^0,f,c
  2574   001530                     l1955:
  2575   001530  EE20  F015         	lfsr	2,___aodiv@quotient
  2576   001534  0E07               	movlw	7
  2577   001536                     u881:
  2578   001536  6ADE               	clrf	postinc2,c
  2579   001538  06E8               	decf	wreg,f,c
  2580   00153A  E2FD               	bc	u881
  2581   00153C  500B               	movf	___aodiv@divisor^0,w,c
  2582   00153E  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2583   001540  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2584   001542  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2585   001544  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2586   001546  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2587   001548  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2588   00154A  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2589   00154C  B4D8               	btfsc	status,2,c
  2590   00154E  EFAB  F00A         	goto	u891
  2591   001552  EFAD  F00A         	goto	u890
  2592   001556                     u891:
  2593   001556  EFFF  F00A         	goto	l1977
  2594   00155A                     u890:
  2595   00155A  0E01               	movlw	1
  2596   00155C  6E13               	movwf	___aodiv@counter^0,c
  2597   00155E  EFBB  F00A         	goto	l1963
  2598   001562                     l1961:
  2599   001562  90D8               	bcf	status,0,c
  2600   001564  360B               	rlcf	___aodiv@divisor^0,f,c
  2601   001566  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2602   001568  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2603   00156A  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2604   00156C  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2605   00156E  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2606   001570  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2607   001572  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2608   001574  2A13               	incf	___aodiv@counter^0,f,c
  2609   001576                     l1963:
  2610   001576  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2611   001578  EFC0  F00A         	goto	u901
  2612   00157C  EFC2  F00A         	goto	u900
  2613   001580                     u901:
  2614   001580  EFB1  F00A         	goto	l1961
  2615   001584                     u900:
  2616   001584                     l1965:
  2617   001584  90D8               	bcf	status,0,c
  2618   001586  3615               	rlcf	___aodiv@quotient^0,f,c
  2619   001588  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2620   00158A  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2621   00158C  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2622   00158E  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2623   001590  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2624   001592  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2625   001594  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2626   001596  500B               	movf	___aodiv@divisor^0,w,c
  2627   001598  5C03               	subwf	___aodiv@dividend^0,w,c
  2628   00159A  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2629   00159C  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2630   00159E  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2631   0015A0  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2632   0015A2  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2633   0015A4  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2634   0015A6  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2635   0015A8  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2636   0015AA  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2637   0015AC  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2638   0015AE  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2639   0015B0  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2640   0015B2  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2641   0015B4  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2642   0015B6  A0D8               	btfss	status,0,c
  2643   0015B8  EFE0  F00A         	goto	u911
  2644   0015BC  EFE2  F00A         	goto	u910
  2645   0015C0                     u911:
  2646   0015C0  EFF3  F00A         	goto	l1973
  2647   0015C4                     u910:
  2648   0015C4  500B               	movf	___aodiv@divisor^0,w,c
  2649   0015C6  5E03               	subwf	___aodiv@dividend^0,f,c
  2650   0015C8  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2651   0015CA  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2652   0015CC  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2653   0015CE  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2654   0015D0  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2655   0015D2  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2656   0015D4  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2657   0015D6  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2658   0015D8  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2659   0015DA  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2660   0015DC  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2661   0015DE  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2662   0015E0  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2663   0015E2  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2664   0015E4  8015               	bsf	___aodiv@quotient^0,0,c
  2665   0015E6                     l1973:
  2666   0015E6  90D8               	bcf	status,0,c
  2667   0015E8  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2668   0015EA  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2669   0015EC  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2670   0015EE  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2671   0015F0  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2672   0015F2  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2673   0015F4  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2674   0015F6  320B               	rrcf	___aodiv@divisor^0,f,c
  2675   0015F8  2E13               	decfsz	___aodiv@counter^0,f,c
  2676   0015FA  EFC2  F00A         	goto	l1965
  2677   0015FE                     l1977:
  2678   0015FE  5014               	movf	___aodiv@sign^0,w,c
  2679   001600  B4D8               	btfsc	status,2,c
  2680   001602  EF05  F00B         	goto	u921
  2681   001606  EF07  F00B         	goto	u920
  2682   00160A                     u921:
  2683   00160A  EF17  F00B         	goto	l1981
  2684   00160E                     u920:
  2685   00160E  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2686   001610  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2687   001612  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2688   001614  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2689   001616  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2690   001618  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2691   00161A  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2692   00161C  6C15               	negf	___aodiv@quotient^0,c
  2693   00161E  0E00               	movlw	0
  2694   001620  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2695   001622  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2696   001624  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2697   001626  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2698   001628  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2699   00162A  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2700   00162C  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2701   00162E                     l1981:
  2702   00162E  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2703   001632  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2704   001636  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2705   00163A  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2706   00163E  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2707   001642  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2708   001646  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2709   00164A  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2710   00164E  0012               	return		;funcret
  2711   001650                     __end_of___aodiv:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _setMotorPWM *****************
  2715 ;; Defined at:
  2716 ;;		line 38 in file "../dc_motor.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  m               2   16[COMRAM] PTR struct DC_motor
  2719 ;;		 -> main@motorR(9), main@motorL(9), 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  PWMduty         2   25[COMRAM] int 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;Total ram usage:       11 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 3
  2738 ;; This function calls:
  2739 ;;		___awdiv
  2740 ;;		___wmul
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;;		_stop
  2744 ;;		_forward
  2745 ;;		_reverse
  2746 ;;		_right_90
  2747 ;;		_left_90
  2748 ;;		_spin_180
  2749 ;;		_right_135
  2750 ;;		_left_135
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text12
  2755   0012F4                     __ptext12:
  2756                           	callstack 0
  2757   0012F4                     _setMotorPWM:
  2758                           	callstack 27
  2759   0012F4                     
  2760                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  2761   0012F4  EE20 F001          	lfsr	2,1
  2762   0012F8  5011               	movf	setMotorPWM@m^0,w,c
  2763   0012FA  26D9               	addwf	fsr2l,f,c
  2764   0012FC  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2765   0012FE  22DA               	addwfc	fsr2h,f,c
  2766   001300  50DF               	movf	indf2,w,c
  2767   001302  B4D8               	btfsc	status,2,c
  2768   001304  EF86  F009         	goto	u1311
  2769   001308  EF88  F009         	goto	u1310
  2770   00130C                     u1311:
  2771   00130C  EFB9  F009         	goto	l2371
  2772   001310                     u1310:
  2773   001310                     
  2774                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  2775   001310  C011  FFD9         	movff	setMotorPWM@m,fsr2l
  2776   001314  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2777   001318  50DF               	movf	indf2,w,c
  2778   00131A  6E13               	movwf	??_setMotorPWM^0,c
  2779   00131C  5013               	movf	??_setMotorPWM^0,w,c
  2780   00131E  6E03               	movwf	___wmul@multiplier^0,c
  2781   001320  6A04               	clrf	(___wmul@multiplier+1)^0,c
  2782   001322  EE20 F007          	lfsr	2,7
  2783   001326  5011               	movf	setMotorPWM@m^0,w,c
  2784   001328  26D9               	addwf	fsr2l,f,c
  2785   00132A  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2786   00132C  22DA               	addwfc	fsr2h,f,c
  2787   00132E  CFDE F005          	movff	postinc2,___wmul@multiplicand
  2788   001332  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
  2789   001336  EC23  F010         	call	___wmul	;wreg free
  2790   00133A  C003  F009         	movff	?___wmul,___awdiv@dividend
  2791   00133E  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
  2792   001342  0E00               	movlw	0
  2793   001344  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2794   001346  0E64               	movlw	100
  2795   001348  6E0B               	movwf	___awdiv@divisor^0,c
  2796   00134A  ECEE  F00C         	call	___awdiv	;wreg free
  2797   00134E  EE20 F007          	lfsr	2,7
  2798   001352  5011               	movf	setMotorPWM@m^0,w,c
  2799   001354  26D9               	addwf	fsr2l,f,c
  2800   001356  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2801   001358  22DA               	addwfc	fsr2h,f,c
  2802   00135A  CFDE F014          	movff	postinc2,??_setMotorPWM+1
  2803   00135E  CFDD F015          	movff	postdec2,??_setMotorPWM+2
  2804   001362  5009               	movf	?___awdiv^0,w,c
  2805   001364  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
  2806   001366  6E1A               	movwf	setMotorPWM@PWMduty^0,c
  2807   001368  500A               	movf	(?___awdiv+1)^0,w,c
  2808   00136A  5815               	subwfb	(??_setMotorPWM+2)^0,w,c
  2809   00136C  6E1B               	movwf	(setMotorPWM@PWMduty+1)^0,c
  2810                           
  2811                           ;../dc_motor.c: 45:  }
  2812   00136E  EFDC  F009         	goto	l2373
  2813   001372                     l2371:
  2814                           
  2815                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  2816   001372  C011  FFD9         	movff	setMotorPWM@m,fsr2l
  2817   001376  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2818   00137A  50DF               	movf	indf2,w,c
  2819   00137C  6E13               	movwf	??_setMotorPWM^0,c
  2820   00137E  5013               	movf	??_setMotorPWM^0,w,c
  2821   001380  6E03               	movwf	___wmul@multiplier^0,c
  2822   001382  6A04               	clrf	(___wmul@multiplier+1)^0,c
  2823   001384  EE20 F007          	lfsr	2,7
  2824   001388  5011               	movf	setMotorPWM@m^0,w,c
  2825   00138A  26D9               	addwf	fsr2l,f,c
  2826   00138C  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2827   00138E  22DA               	addwfc	fsr2h,f,c
  2828   001390  CFDE F005          	movff	postinc2,___wmul@multiplicand
  2829   001394  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
  2830   001398  EC23  F010         	call	___wmul	;wreg free
  2831   00139C  C003  F009         	movff	?___wmul,___awdiv@dividend
  2832   0013A0  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
  2833   0013A4  0E00               	movlw	0
  2834   0013A6  6E0C               	movwf	(___awdiv@divisor+1)^0,c
  2835   0013A8  0E64               	movlw	100
  2836   0013AA  6E0B               	movwf	___awdiv@divisor^0,c
  2837   0013AC  ECEE  F00C         	call	___awdiv	;wreg free
  2838   0013B0  C009  F01A         	movff	?___awdiv,setMotorPWM@PWMduty
  2839   0013B4  C00A  F01B         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  2840   0013B8                     l2373:
  2841                           
  2842                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  2843   0013B8  EE20 F002          	lfsr	2,2
  2844   0013BC  5011               	movf	setMotorPWM@m^0,w,c
  2845   0013BE  26D9               	addwf	fsr2l,f,c
  2846   0013C0  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2847   0013C2  22DA               	addwfc	fsr2h,f,c
  2848   0013C4  CFDE F013          	movff	postinc2,??_setMotorPWM
  2849   0013C8  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  2850   0013CC  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  2851   0013D0  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2852   0013D4  C01A  FFDF         	movff	setMotorPWM@PWMduty,indf2
  2853   0013D8                     
  2854                           ;../dc_motor.c: 53:  if (m->direction){
  2855   0013D8  EE20 F001          	lfsr	2,1
  2856   0013DC  5011               	movf	setMotorPWM@m^0,w,c
  2857   0013DE  26D9               	addwf	fsr2l,f,c
  2858   0013E0  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2859   0013E2  22DA               	addwfc	fsr2h,f,c
  2860   0013E4  50DF               	movf	indf2,w,c
  2861   0013E6  B4D8               	btfsc	status,2,c
  2862   0013E8  EFF8  F009         	goto	u1321
  2863   0013EC  EFFA  F009         	goto	u1320
  2864   0013F0                     u1321:
  2865   0013F0  EF2F  F00A         	goto	l2379
  2866   0013F4                     u1320:
  2867   0013F4                     
  2868                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  2869   0013F4  EE20 F004          	lfsr	2,4
  2870   0013F8  5011               	movf	setMotorPWM@m^0,w,c
  2871   0013FA  26D9               	addwf	fsr2l,f,c
  2872   0013FC  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2873   0013FE  22DA               	addwfc	fsr2h,f,c
  2874   001400  CFDE F013          	movff	postinc2,??_setMotorPWM
  2875   001404  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  2876   001408  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  2877   00140C  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2878   001410  EE10 F004          	lfsr	1,4
  2879   001414  5011               	movf	setMotorPWM@m^0,w,c
  2880   001416  26E1               	addwf	fsr1l,f,c
  2881   001418  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2882   00141A  22E2               	addwfc	fsr1h,f,c
  2883   00141C  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
  2884   001420  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
  2885   001424  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
  2886   001428  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
  2887   00142C  50E7               	movf	indf1,w,c
  2888   00142E  6E17               	movwf	(??_setMotorPWM+4)^0,c
  2889   001430  EE10 F006          	lfsr	1,6
  2890   001434  5011               	movf	setMotorPWM@m^0,w,c
  2891   001436  26E1               	addwf	fsr1l,f,c
  2892   001438  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2893   00143A  22E2               	addwfc	fsr1h,f,c
  2894   00143C  50E7               	movf	indf1,w,c
  2895   00143E  6E18               	movwf	(??_setMotorPWM+5)^0,c
  2896   001440  0E01               	movlw	1
  2897   001442  6E19               	movwf	(??_setMotorPWM+6)^0,c
  2898   001444  2A18               	incf	(??_setMotorPWM+5)^0,f,c
  2899   001446  EF27  F00A         	goto	u1334
  2900   00144A                     u1335:
  2901   00144A  90D8               	bcf	status,0,c
  2902   00144C  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
  2903   00144E                     u1334:
  2904   00144E  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
  2905   001450  EF25  F00A         	goto	u1335
  2906   001454  5019               	movf	(??_setMotorPWM+6)^0,w,c
  2907   001456  1017               	iorwf	(??_setMotorPWM+4)^0,w,c
  2908   001458  6EDF               	movwf	indf2,c
  2909                           
  2910                           ;../dc_motor.c: 55:  } else {
  2911   00145A  EF63  F00A         	goto	l238
  2912   00145E                     l2379:
  2913                           
  2914                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  2915   00145E  EE20 F004          	lfsr	2,4
  2916   001462  5011               	movf	setMotorPWM@m^0,w,c
  2917   001464  26D9               	addwf	fsr2l,f,c
  2918   001466  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2919   001468  22DA               	addwfc	fsr2h,f,c
  2920   00146A  CFDE F013          	movff	postinc2,??_setMotorPWM
  2921   00146E  CFDD F014          	movff	postdec2,??_setMotorPWM+1
  2922   001472  C013  FFD9         	movff	??_setMotorPWM,fsr2l
  2923   001476  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2924   00147A  EE10 F004          	lfsr	1,4
  2925   00147E  5011               	movf	setMotorPWM@m^0,w,c
  2926   001480  26E1               	addwf	fsr1l,f,c
  2927   001482  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2928   001484  22E2               	addwfc	fsr1h,f,c
  2929   001486  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
  2930   00148A  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
  2931   00148E  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
  2932   001492  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
  2933   001496  50E7               	movf	indf1,w,c
  2934   001498  6E17               	movwf	(??_setMotorPWM+4)^0,c
  2935   00149A  EE10 F006          	lfsr	1,6
  2936   00149E  5011               	movf	setMotorPWM@m^0,w,c
  2937   0014A0  26E1               	addwf	fsr1l,f,c
  2938   0014A2  5012               	movf	(setMotorPWM@m+1)^0,w,c
  2939   0014A4  22E2               	addwfc	fsr1h,f,c
  2940   0014A6  50E7               	movf	indf1,w,c
  2941   0014A8  6E18               	movwf	(??_setMotorPWM+5)^0,c
  2942   0014AA  0E01               	movlw	1
  2943   0014AC  6E19               	movwf	(??_setMotorPWM+6)^0,c
  2944   0014AE  2A18               	incf	(??_setMotorPWM+5)^0,f,c
  2945   0014B0  EF5C  F00A         	goto	u1344
  2946   0014B4                     u1345:
  2947   0014B4  90D8               	bcf	status,0,c
  2948   0014B6  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
  2949   0014B8                     u1344:
  2950   0014B8  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
  2951   0014BA  EF5A  F00A         	goto	u1345
  2952   0014BE  5019               	movf	(??_setMotorPWM+6)^0,w,c
  2953   0014C0  0AFF               	xorlw	255
  2954   0014C2  1417               	andwf	(??_setMotorPWM+4)^0,w,c
  2955   0014C4  6EDF               	movwf	indf2,c
  2956   0014C6                     l238:
  2957   0014C6  0012               	return		;funcret
  2958   0014C8                     __end_of_setMotorPWM:
  2959                           	callstack 0
  2960                           
  2961 ;; *************** function ___wmul *****************
  2962 ;; Defined at:
  2963 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  multiplier      2    2[COMRAM] unsigned int 
  2966 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  product         2    6[COMRAM] unsigned int 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  2    2[COMRAM] unsigned int 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0, prodl, prodh
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;Total ram usage:        6 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 2
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_setMotorPWM
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text13
  2993   002046                     __ptext13:
  2994                           	callstack 0
  2995   002046                     ___wmul:
  2996                           	callstack 27
  2997   002046  5003               	movf	___wmul@multiplier^0,w,c
  2998   002048  0205               	mulwf	___wmul@multiplicand^0,c
  2999   00204A  CFF3 F007          	movff	prodl,___wmul@product
  3000   00204E  CFF4 F008          	movff	prodh,___wmul@product+1
  3001   002052  5003               	movf	___wmul@multiplier^0,w,c
  3002   002054  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  3003   002056  50F3               	movf	243,w,c
  3004   002058  2608               	addwf	(___wmul@product+1)^0,f,c
  3005   00205A  5004               	movf	(___wmul@multiplier+1)^0,w,c
  3006   00205C  0205               	mulwf	___wmul@multiplicand^0,c
  3007   00205E  50F3               	movf	243,w,c
  3008   002060  2608               	addwf	(___wmul@product+1)^0,f,c
  3009   002062  C007  F003         	movff	___wmul@product,?___wmul
  3010   002066  C008  F004         	movff	___wmul@product+1,?___wmul+1
  3011   00206A  0012               	return		;funcret
  3012   00206C                     __end_of___wmul:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function ___awdiv *****************
  3016 ;; Defined at:
  3017 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  dividend        2    8[COMRAM] int 
  3020 ;;  divisor         2   10[COMRAM] int 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  quotient        2   14[COMRAM] int 
  3023 ;;  sign            1   13[COMRAM] unsigned char 
  3024 ;;  counter         1   12[COMRAM] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  2    8[COMRAM] int 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3037 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;Total ram usage:        8 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; Hardware stack levels required when called: 2
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_setMotorPWM
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text14
  3049   0019DC                     __ptext14:
  3050                           	callstack 0
  3051   0019DC                     ___awdiv:
  3052                           	callstack 27
  3053   0019DC  0E00               	movlw	0
  3054   0019DE  6E0E               	movwf	___awdiv@sign^0,c
  3055   0019E0  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
  3056   0019E2  EFF7  F00C         	goto	u1200
  3057   0019E6  EFF5  F00C         	goto	u1201
  3058   0019EA                     u1201:
  3059   0019EA  EFFD  F00C         	goto	l2211
  3060   0019EE                     u1200:
  3061   0019EE  6C0B               	negf	___awdiv@divisor^0,c
  3062   0019F0  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
  3063   0019F2  B0D8               	btfsc	status,0,c
  3064   0019F4  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
  3065   0019F6  0E01               	movlw	1
  3066   0019F8  6E0E               	movwf	___awdiv@sign^0,c
  3067   0019FA                     l2211:
  3068   0019FA  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
  3069   0019FC  EF04  F00D         	goto	u1210
  3070   001A00  EF02  F00D         	goto	u1211
  3071   001A04                     u1211:
  3072   001A04  EF0A  F00D         	goto	l2217
  3073   001A08                     u1210:
  3074   001A08  6C09               	negf	___awdiv@dividend^0,c
  3075   001A0A  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
  3076   001A0C  B0D8               	btfsc	status,0,c
  3077   001A0E  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
  3078   001A10  0E01               	movlw	1
  3079   001A12  1A0E               	xorwf	___awdiv@sign^0,f,c
  3080   001A14                     l2217:
  3081   001A14  0E00               	movlw	0
  3082   001A16  6E10               	movwf	(___awdiv@quotient+1)^0,c
  3083   001A18  0E00               	movlw	0
  3084   001A1A  6E0F               	movwf	___awdiv@quotient^0,c
  3085   001A1C  500B               	movf	___awdiv@divisor^0,w,c
  3086   001A1E  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
  3087   001A20  B4D8               	btfsc	status,2,c
  3088   001A22  EF15  F00D         	goto	u1221
  3089   001A26  EF17  F00D         	goto	u1220
  3090   001A2A                     u1221:
  3091   001A2A  EF3F  F00D         	goto	l2239
  3092   001A2E                     u1220:
  3093   001A2E  0E01               	movlw	1
  3094   001A30  6E0D               	movwf	___awdiv@counter^0,c
  3095   001A32  EF1F  F00D         	goto	l2225
  3096   001A36                     l2223:
  3097   001A36  90D8               	bcf	status,0,c
  3098   001A38  360B               	rlcf	___awdiv@divisor^0,f,c
  3099   001A3A  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
  3100   001A3C  2A0D               	incf	___awdiv@counter^0,f,c
  3101   001A3E                     l2225:
  3102   001A3E  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
  3103   001A40  EF24  F00D         	goto	u1231
  3104   001A44  EF26  F00D         	goto	u1230
  3105   001A48                     u1231:
  3106   001A48  EF1B  F00D         	goto	l2223
  3107   001A4C                     u1230:
  3108   001A4C                     l2227:
  3109   001A4C  90D8               	bcf	status,0,c
  3110   001A4E  360F               	rlcf	___awdiv@quotient^0,f,c
  3111   001A50  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
  3112   001A52  500B               	movf	___awdiv@divisor^0,w,c
  3113   001A54  5C09               	subwf	___awdiv@dividend^0,w,c
  3114   001A56  500C               	movf	(___awdiv@divisor+1)^0,w,c
  3115   001A58  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
  3116   001A5A  A0D8               	btfss	status,0,c
  3117   001A5C  EF32  F00D         	goto	u1241
  3118   001A60  EF34  F00D         	goto	u1240
  3119   001A64                     u1241:
  3120   001A64  EF39  F00D         	goto	l2235
  3121   001A68                     u1240:
  3122   001A68  500B               	movf	___awdiv@divisor^0,w,c
  3123   001A6A  5E09               	subwf	___awdiv@dividend^0,f,c
  3124   001A6C  500C               	movf	(___awdiv@divisor+1)^0,w,c
  3125   001A6E  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
  3126   001A70  800F               	bsf	___awdiv@quotient^0,0,c
  3127   001A72                     l2235:
  3128   001A72  90D8               	bcf	status,0,c
  3129   001A74  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
  3130   001A76  320B               	rrcf	___awdiv@divisor^0,f,c
  3131   001A78  2E0D               	decfsz	___awdiv@counter^0,f,c
  3132   001A7A  EF26  F00D         	goto	l2227
  3133   001A7E                     l2239:
  3134   001A7E  500E               	movf	___awdiv@sign^0,w,c
  3135   001A80  B4D8               	btfsc	status,2,c
  3136   001A82  EF45  F00D         	goto	u1251
  3137   001A86  EF47  F00D         	goto	u1250
  3138   001A8A                     u1251:
  3139   001A8A  EF4B  F00D         	goto	l2243
  3140   001A8E                     u1250:
  3141   001A8E  6C0F               	negf	___awdiv@quotient^0,c
  3142   001A90  1E10               	comf	(___awdiv@quotient+1)^0,f,c
  3143   001A92  B0D8               	btfsc	status,0,c
  3144   001A94  2A10               	incf	(___awdiv@quotient+1)^0,f,c
  3145   001A96                     l2243:
  3146   001A96  C00F  F009         	movff	___awdiv@quotient,?___awdiv
  3147   001A9A  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
  3148   001A9E  0012               	return		;funcret
  3149   001AA0                     __end_of___awdiv:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _sendStringSerial4 *****************
  3153 ;; Defined at:
  3154 ;;		line 37 in file "../serial.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  string          2    3[COMRAM] PTR unsigned char 
  3157 ;;		 -> main@readout(50), 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 3
  3176 ;; This function calls:
  3177 ;;		_sendCharSerial4
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text15
  3184   001FC4                     __ptext15:
  3185                           	callstack 0
  3186   001FC4                     _sendStringSerial4:
  3187                           	callstack 27
  3188   001FC4                     
  3189                           ;../serial.c: 40:     while (*string != 0)
  3190   001FC4  EFED  F00F         	goto	l2399
  3191   001FC8                     l2395:
  3192                           
  3193                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  3194   001FC8  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  3195   001FCC  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3196   001FD0  50DF               	movf	indf2,w,c
  3197   001FD2  EC72  F010         	call	_sendCharSerial4
  3198   001FD6  4A04               	infsnz	sendStringSerial4@string^0,f,c
  3199   001FD8  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  3200   001FDA                     l2399:
  3201                           
  3202                           ;../serial.c: 40:     while (*string != 0)
  3203   001FDA  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  3204   001FDE  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3205   001FE2  50DF               	movf	indf2,w,c
  3206   001FE4  A4D8               	btfss	status,2,c
  3207   001FE6  EFF7  F00F         	goto	u1351
  3208   001FEA  EFF9  F00F         	goto	u1350
  3209   001FEE                     u1351:
  3210   001FEE  EFE4  F00F         	goto	l2395
  3211   001FF2                     u1350:
  3212   001FF2  0012               	return		;funcret
  3213   001FF4                     __end_of_sendStringSerial4:
  3214                           	callstack 0
  3215                           
  3216 ;; *************** function _sendCharSerial4 *****************
  3217 ;; Defined at:
  3218 ;;		line 30 in file "../serial.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  charToSend      1    wreg     unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  charToSend      1    2[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 2
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_sendStringSerial4
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text16
  3247   0020E4                     __ptext16:
  3248                           	callstack 0
  3249   0020E4                     _sendCharSerial4:
  3250                           	callstack 27
  3251                           
  3252                           ;incstack = 0
  3253                           ;sendCharSerial4@charToSend stored from wreg
  3254   0020E4  6E03               	movwf	sendCharSerial4@charToSend^0,c
  3255   0020E6                     l377:
  3256   0020E6  010E               	movlb	14	; () banked
  3257   0020E8  A537               	btfss	55,2,b	;volatile
  3258   0020EA  EF79  F010         	goto	u1191
  3259   0020EE  EF7B  F010         	goto	u1190
  3260   0020F2                     u1191:
  3261   0020F2  EF73  F010         	goto	l377
  3262   0020F6                     u1190:
  3263   0020F6                     
  3264                           ; BSR set to: 14
  3265                           ;../serial.c: 32:     TX4REG = charToSend;
  3266   0020F6  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3267   0020FA                     
  3268                           ; BSR set to: 14
  3269   0020FA  0012               	return		;funcret
  3270   0020FC                     __end_of_sendCharSerial4:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _initUSART4 *****************
  3274 ;; Defined at:
  3275 ;;		line 5 in file "../serial.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 2
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text17
  3304   0020AC                     __ptext17:
  3305                           	callstack 0
  3306   0020AC                     _initUSART4:
  3307                           	callstack 28
  3308   0020AC                     
  3309                           ;../serial.c: 9:     RC0PPS = 0x12;
  3310   0020AC  0E12               	movlw	18
  3311   0020AE  010E               	movlb	14	; () banked
  3312   0020B0  6F62               	movwf	98,b	;volatile
  3313                           
  3314                           ;../serial.c: 10:     RX4PPS = 0x11;
  3315   0020B2  0E11               	movlw	17
  3316   0020B4  6F15               	movwf	21,b	;volatile
  3317   0020B6                     
  3318                           ; BSR set to: 14
  3319                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3320   0020B6  97E9               	bcf	233,3,b	;volatile
  3321   0020B8                     
  3322                           ; BSR set to: 14
  3323                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  3324   0020B8  95E8               	bcf	232,2,b	;volatile
  3325                           
  3326                           ;../serial.c: 14:     SP4BRGL = 103;
  3327   0020BA  0E67               	movlw	103
  3328   0020BC  6FE5               	movwf	229,b	;volatile
  3329                           
  3330                           ;../serial.c: 15:     SP4BRGH = 0;
  3331   0020BE  0E00               	movlw	0
  3332   0020C0  6FE6               	movwf	230,b	;volatile
  3333   0020C2                     
  3334                           ; BSR set to: 14
  3335                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  3336   0020C2  89E7               	bsf	231,4,b	;volatile
  3337   0020C4                     
  3338                           ; BSR set to: 14
  3339                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  3340   0020C4  8BE8               	bsf	232,5,b	;volatile
  3341   0020C6                     
  3342                           ; BSR set to: 14
  3343                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  3344   0020C6  8FE7               	bsf	231,7,b	;volatile
  3345   0020C8                     
  3346                           ; BSR set to: 14
  3347   0020C8  0012               	return		;funcret
  3348   0020CA                     __end_of_initUSART4:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _initDCmotorsPWM *****************
  3352 ;; Defined at:
  3353 ;;		line 5 in file "../dc_motor.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  PWMperiod       2    2[COMRAM] int 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 2
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text18
  3382   001F00                     __ptext18:
  3383                           	callstack 0
  3384   001F00                     _initDCmotorsPWM:
  3385                           	callstack 28
  3386   001F00                     
  3387                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  3388   001F00  9485               	bcf	133,2,c	;volatile
  3389                           
  3390                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  3391   001F02  9885               	bcf	133,4,c	;volatile
  3392                           
  3393                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  3394   001F04  9E83               	bcf	131,7,c	;volatile
  3395                           
  3396                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  3397   001F06  9C87               	bcf	135,6,c	;volatile
  3398                           
  3399                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  3400   001F08  947D               	bcf	125,2,c	;volatile
  3401                           
  3402                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  3403   001F0A  987D               	bcf	125,4,c	;volatile
  3404                           
  3405                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  3406   001F0C  9E7B               	bcf	123,7,c	;volatile
  3407                           
  3408                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  3409   001F0E  9C7F               	bcf	127,6,c	;volatile
  3410   001F10                     
  3411                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  3412   001F10  50BD               	movf	189,w,c	;volatile
  3413   001F12  0B8F               	andlw	-113
  3414   001F14  0930               	iorlw	48
  3415   001F16  6EBD               	movwf	189,c	;volatile
  3416                           
  3417                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  3418   001F18  0EE0               	movlw	-32
  3419   001F1A  16BE               	andwf	190,f,c	;volatile
  3420                           
  3421                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  3422   001F1C  50BF               	movf	191,w,c	;volatile
  3423   001F1E  0BF0               	andlw	-16
  3424   001F20  0901               	iorlw	1
  3425   001F22  6EBF               	movwf	191,c	;volatile
  3426   001F24                     
  3427                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  3428   001F24  C003  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3429   001F28                     
  3430                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  3431   001F28  8EBD               	bsf	189,7,c	;volatile
  3432                           
  3433                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  3434   001F2A  0E0A               	movlw	10
  3435   001F2C  010E               	movlb	14	; () banked
  3436   001F2E  6F74               	movwf	116,b	;volatile
  3437                           
  3438                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  3439   001F30  0E0B               	movlw	11
  3440   001F32  6F69               	movwf	105,b	;volatile
  3441                           
  3442                           ;../dc_motor.c: 29:     PWM6DCH=0;
  3443   001F34  0E00               	movlw	0
  3444   001F36  6EA3               	movwf	163,c	;volatile
  3445                           
  3446                           ;../dc_motor.c: 30:     PWM7DCH=0;
  3447   001F38  0E00               	movlw	0
  3448   001F3A  6EA0               	movwf	160,c	;volatile
  3449   001F3C                     
  3450                           ; BSR set to: 14
  3451                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  3452   001F3C  8EA4               	bsf	164,7,c	;volatile
  3453   001F3E                     
  3454                           ; BSR set to: 14
  3455                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  3456   001F3E  8EA1               	bsf	161,7,c	;volatile
  3457   001F40                     
  3458                           ; BSR set to: 14
  3459   001F40  0012               	return		;funcret
  3460   001F42                     __end_of_initDCmotorsPWM:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _color_read *****************
  3464 ;; Defined at:
  3465 ;;		line 110 in file "../color.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  rgb             2   13[COMRAM] PTR struct RGB_val
  3468 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;Total ram usage:        4 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 5
  3487 ;; This function calls:
  3488 ;;		_color_read_Blue
  3489 ;;		_color_read_Green
  3490 ;;		_color_read_Luminosity
  3491 ;;		_color_read_Red
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text19
  3498   001B5E                     __ptext19:
  3499                           	callstack 0
  3500   001B5E                     _color_read:
  3501                           	callstack 25
  3502   001B5E                     
  3503                           ;../color.c: 110: void color_read(struct RGB_val *rgb);../color.c: 111: {;../color.c: 11
      +                          2:     rgb->L = color_read_Luminosity();
  3504   001B5E  ECE6  F00E         	call	_color_read_Luminosity	;wreg free
  3505   001B62  C00E  FFD9         	movff	color_read@rgb,fsr2l
  3506   001B66  C00F  FFDA         	movff	color_read@rgb+1,fsr2h
  3507   001B6A  C007  FFDE         	movff	?_color_read_Luminosity,postinc2
  3508   001B6E  C008  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  3509   001B72                     
  3510                           ;../color.c: 113:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3511   001B72  0E09               	movlw	9
  3512   001B74  6E11               	movwf	(??_color_read+1)^0,c
  3513   001B76  0E1E               	movlw	30
  3514   001B78  6E10               	movwf	??_color_read^0,c
  3515   001B7A  0EE4               	movlw	228
  3516   001B7C                     u1677:
  3517   001B7C  2EE8               	decfsz	wreg,f,c
  3518   001B7E  D7FE               	bra	u1677
  3519   001B80  2E10               	decfsz	??_color_read^0,f,c
  3520   001B82  D7FC               	bra	u1677
  3521   001B84  2E11               	decfsz	(??_color_read+1)^0,f,c
  3522   001B86  D7FA               	bra	u1677
  3523   001B88  D000               	nop2	
  3524   001B8A                     
  3525                           ;../color.c: 114:     rgb->R = color_read_Red();
  3526   001B8A  ECBE  F00E         	call	_color_read_Red	;wreg free
  3527   001B8E  EE20 F002          	lfsr	2,2
  3528   001B92  500E               	movf	color_read@rgb^0,w,c
  3529   001B94  26D9               	addwf	fsr2l,f,c
  3530   001B96  500F               	movf	(color_read@rgb+1)^0,w,c
  3531   001B98  22DA               	addwfc	fsr2h,f,c
  3532   001B9A  C007  FFDE         	movff	?_color_read_Red,postinc2
  3533   001B9E  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  3534                           
  3535                           ;../color.c: 115:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3536   001BA2  0E09               	movlw	9
  3537   001BA4  6E11               	movwf	(??_color_read+1)^0,c
  3538   001BA6  0E1E               	movlw	30
  3539   001BA8  6E10               	movwf	??_color_read^0,c
  3540   001BAA  0EE4               	movlw	228
  3541   001BAC                     u1687:
  3542   001BAC  2EE8               	decfsz	wreg,f,c
  3543   001BAE  D7FE               	bra	u1687
  3544   001BB0  2E10               	decfsz	??_color_read^0,f,c
  3545   001BB2  D7FC               	bra	u1687
  3546   001BB4  2E11               	decfsz	(??_color_read+1)^0,f,c
  3547   001BB6  D7FA               	bra	u1687
  3548   001BB8  D000               	nop2	
  3549   001BBA                     
  3550                           ;../color.c: 116:     rgb->G = color_read_Green();
  3551   001BBA  EC0E  F00F         	call	_color_read_Green	;wreg free
  3552   001BBE  EE20 F004          	lfsr	2,4
  3553   001BC2  500E               	movf	color_read@rgb^0,w,c
  3554   001BC4  26D9               	addwf	fsr2l,f,c
  3555   001BC6  500F               	movf	(color_read@rgb+1)^0,w,c
  3556   001BC8  22DA               	addwfc	fsr2h,f,c
  3557   001BCA  C007  FFDE         	movff	?_color_read_Green,postinc2
  3558   001BCE  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  3559   001BD2                     
  3560                           ;../color.c: 117:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3561   001BD2  0E09               	movlw	9
  3562   001BD4  6E11               	movwf	(??_color_read+1)^0,c
  3563   001BD6  0E1E               	movlw	30
  3564   001BD8  6E10               	movwf	??_color_read^0,c
  3565   001BDA  0EE4               	movlw	228
  3566   001BDC                     u1697:
  3567   001BDC  2EE8               	decfsz	wreg,f,c
  3568   001BDE  D7FE               	bra	u1697
  3569   001BE0  2E10               	decfsz	??_color_read^0,f,c
  3570   001BE2  D7FC               	bra	u1697
  3571   001BE4  2E11               	decfsz	(??_color_read+1)^0,f,c
  3572   001BE6  D7FA               	bra	u1697
  3573   001BE8  D000               	nop2	
  3574                           
  3575                           ;../color.c: 118:     rgb->B = color_read_Blue();
  3576   001BEA  EC36  F00F         	call	_color_read_Blue	;wreg free
  3577   001BEE  EE20 F006          	lfsr	2,6
  3578   001BF2  500E               	movf	color_read@rgb^0,w,c
  3579   001BF4  26D9               	addwf	fsr2l,f,c
  3580   001BF6  500F               	movf	(color_read@rgb+1)^0,w,c
  3581   001BF8  22DA               	addwfc	fsr2h,f,c
  3582   001BFA  C007  FFDE         	movff	?_color_read_Blue,postinc2
  3583   001BFE  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  3584   001C02  0012               	return		;funcret
  3585   001C04                     __end_of_color_read:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function _color_read_Red *****************
  3589 ;; Defined at:
  3590 ;;		line 68 in file "../color.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  tmp             2   11[COMRAM] unsigned int 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2    6[COMRAM] unsigned int 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;Total ram usage:        7 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 4
  3611 ;; This function calls:
  3612 ;;		_I2C_2_Master_Read
  3613 ;;		_I2C_2_Master_RepStart
  3614 ;;		_I2C_2_Master_Start
  3615 ;;		_I2C_2_Master_Stop
  3616 ;;		_I2C_2_Master_Write
  3617 ;; This function is called by:
  3618 ;;		_color_read
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text20
  3623   001D7C                     __ptext20:
  3624                           	callstack 0
  3625   001D7C                     _color_read_Red:
  3626                           	callstack 25
  3627   001D7C                     
  3628                           ;../color.c: 70:  unsigned int tmp;;../color.c: 71:  I2C_2_Master_Start();
  3629   001D7C  EC94  F010         	call	_I2C_2_Master_Start	;wreg free
  3630                           
  3631                           ;../color.c: 72:  I2C_2_Master_Write(0x52 | 0x00);
  3632   001D80  0E52               	movlw	82
  3633   001D82  EC7E  F010         	call	_I2C_2_Master_Write
  3634                           
  3635                           ;../color.c: 73:  I2C_2_Master_Write(0xA0 | 0x16);
  3636   001D86  0EB6               	movlw	182
  3637   001D88  EC7E  F010         	call	_I2C_2_Master_Write
  3638                           
  3639                           ;../color.c: 74:  I2C_2_Master_RepStart();
  3640   001D8C  EC8A  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3641                           
  3642                           ;../color.c: 75:  I2C_2_Master_Write(0x52 | 0x01);
  3643   001D90  0E53               	movlw	83
  3644   001D92  EC7E  F010         	call	_I2C_2_Master_Write
  3645                           
  3646                           ;../color.c: 76:  tmp=I2C_2_Master_Read(1);
  3647   001D96  0E01               	movlw	1
  3648   001D98  ECA1  F00F         	call	_I2C_2_Master_Read
  3649   001D9C  6E09               	movwf	??_color_read_Red^0,c
  3650   001D9E  5009               	movf	??_color_read_Red^0,w,c
  3651   001DA0  6E0C               	movwf	color_read_Red@tmp^0,c
  3652   001DA2  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  3653                           
  3654                           ;../color.c: 77:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3655   001DA4  0E00               	movlw	0
  3656   001DA6  ECA1  F00F         	call	_I2C_2_Master_Read
  3657   001DAA  6E09               	movwf	??_color_read_Red^0,c
  3658   001DAC  5009               	movf	??_color_read_Red^0,w,c
  3659   001DAE  6E0B               	movwf	(??_color_read_Red+2)^0,c
  3660   001DB0  6A0A               	clrf	(??_color_read_Red+1)^0,c
  3661   001DB2  500C               	movf	color_read_Red@tmp^0,w,c
  3662   001DB4  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  3663   001DB6  6E0C               	movwf	color_read_Red@tmp^0,c
  3664   001DB8  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  3665   001DBA  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  3666   001DBC  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  3667                           
  3668                           ;../color.c: 78:  I2C_2_Master_Stop();
  3669   001DBE  EC8F  F010         	call	_I2C_2_Master_Stop	;wreg free
  3670   001DC2                     
  3671                           ;../color.c: 79:  return tmp;
  3672   001DC2  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  3673   001DC6  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3674   001DCA  0012               	return		;funcret
  3675   001DCC                     __end_of_color_read_Red:
  3676                           	callstack 0
  3677                           
  3678 ;; *************** function _color_read_Luminosity *****************
  3679 ;; Defined at:
  3680 ;;		line 54 in file "../color.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  tmp             2   11[COMRAM] unsigned int 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    6[COMRAM] unsigned int 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;Total ram usage:        7 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 4
  3701 ;; This function calls:
  3702 ;;		_I2C_2_Master_Read
  3703 ;;		_I2C_2_Master_RepStart
  3704 ;;		_I2C_2_Master_Start
  3705 ;;		_I2C_2_Master_Stop
  3706 ;;		_I2C_2_Master_Write
  3707 ;; This function is called by:
  3708 ;;		_color_read
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text21
  3713   001DCC                     __ptext21:
  3714                           	callstack 0
  3715   001DCC                     _color_read_Luminosity:
  3716                           	callstack 25
  3717   001DCC                     
  3718                           ;../color.c: 56:  unsigned int tmp;;../color.c: 57:  I2C_2_Master_Start();
  3719   001DCC  EC94  F010         	call	_I2C_2_Master_Start	;wreg free
  3720                           
  3721                           ;../color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  3722   001DD0  0E52               	movlw	82
  3723   001DD2  EC7E  F010         	call	_I2C_2_Master_Write
  3724                           
  3725                           ;../color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
  3726   001DD6  0EB4               	movlw	180
  3727   001DD8  EC7E  F010         	call	_I2C_2_Master_Write
  3728                           
  3729                           ;../color.c: 60:  I2C_2_Master_RepStart();
  3730   001DDC  EC8A  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3731                           
  3732                           ;../color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  3733   001DE0  0E53               	movlw	83
  3734   001DE2  EC7E  F010         	call	_I2C_2_Master_Write
  3735                           
  3736                           ;../color.c: 62:  tmp=I2C_2_Master_Read(1);
  3737   001DE6  0E01               	movlw	1
  3738   001DE8  ECA1  F00F         	call	_I2C_2_Master_Read
  3739   001DEC  6E09               	movwf	??_color_read_Luminosity^0,c
  3740   001DEE  5009               	movf	??_color_read_Luminosity^0,w,c
  3741   001DF0  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3742   001DF2  6A0D               	clrf	(color_read_Luminosity@tmp+1)^0,c
  3743                           
  3744                           ;../color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3745   001DF4  0E00               	movlw	0
  3746   001DF6  ECA1  F00F         	call	_I2C_2_Master_Read
  3747   001DFA  6E09               	movwf	??_color_read_Luminosity^0,c
  3748   001DFC  5009               	movf	??_color_read_Luminosity^0,w,c
  3749   001DFE  6E0B               	movwf	(??_color_read_Luminosity+2)^0,c
  3750   001E00  6A0A               	clrf	(??_color_read_Luminosity+1)^0,c
  3751   001E02  500C               	movf	color_read_Luminosity@tmp^0,w,c
  3752   001E04  100A               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  3753   001E06  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3754   001E08  500D               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  3755   001E0A  100B               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  3756   001E0C  6E0D               	movwf	(color_read_Luminosity@tmp+1)^0,c
  3757                           
  3758                           ;../color.c: 64:  I2C_2_Master_Stop();
  3759   001E0E  EC8F  F010         	call	_I2C_2_Master_Stop	;wreg free
  3760   001E12                     
  3761                           ;../color.c: 65:  return tmp;
  3762   001E12  C00C  F007         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  3763   001E16  C00D  F008         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  3764   001E1A  0012               	return		;funcret
  3765   001E1C                     __end_of_color_read_Luminosity:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _color_read_Green *****************
  3769 ;; Defined at:
  3770 ;;		line 82 in file "../color.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  tmp             2   11[COMRAM] unsigned int 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    6[COMRAM] unsigned int 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;Total ram usage:        7 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 4
  3791 ;; This function calls:
  3792 ;;		_I2C_2_Master_Read
  3793 ;;		_I2C_2_Master_RepStart
  3794 ;;		_I2C_2_Master_Start
  3795 ;;		_I2C_2_Master_Stop
  3796 ;;		_I2C_2_Master_Write
  3797 ;; This function is called by:
  3798 ;;		_color_read
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text22
  3803   001E1C                     __ptext22:
  3804                           	callstack 0
  3805   001E1C                     _color_read_Green:
  3806                           	callstack 25
  3807   001E1C                     
  3808                           ;../color.c: 84:  unsigned int tmp;;../color.c: 85:  I2C_2_Master_Start();
  3809   001E1C  EC94  F010         	call	_I2C_2_Master_Start	;wreg free
  3810                           
  3811                           ;../color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  3812   001E20  0E52               	movlw	82
  3813   001E22  EC7E  F010         	call	_I2C_2_Master_Write
  3814                           
  3815                           ;../color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  3816   001E26  0EB8               	movlw	184
  3817   001E28  EC7E  F010         	call	_I2C_2_Master_Write
  3818                           
  3819                           ;../color.c: 88:  I2C_2_Master_RepStart();
  3820   001E2C  EC8A  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3821                           
  3822                           ;../color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  3823   001E30  0E53               	movlw	83
  3824   001E32  EC7E  F010         	call	_I2C_2_Master_Write
  3825                           
  3826                           ;../color.c: 90:  tmp=I2C_2_Master_Read(1);
  3827   001E36  0E01               	movlw	1
  3828   001E38  ECA1  F00F         	call	_I2C_2_Master_Read
  3829   001E3C  6E09               	movwf	??_color_read_Green^0,c
  3830   001E3E  5009               	movf	??_color_read_Green^0,w,c
  3831   001E40  6E0C               	movwf	color_read_Green@tmp^0,c
  3832   001E42  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  3833                           
  3834                           ;../color.c: 91:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3835   001E44  0E00               	movlw	0
  3836   001E46  ECA1  F00F         	call	_I2C_2_Master_Read
  3837   001E4A  6E09               	movwf	??_color_read_Green^0,c
  3838   001E4C  5009               	movf	??_color_read_Green^0,w,c
  3839   001E4E  6E0B               	movwf	(??_color_read_Green+2)^0,c
  3840   001E50  6A0A               	clrf	(??_color_read_Green+1)^0,c
  3841   001E52  500C               	movf	color_read_Green@tmp^0,w,c
  3842   001E54  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  3843   001E56  6E0C               	movwf	color_read_Green@tmp^0,c
  3844   001E58  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  3845   001E5A  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  3846   001E5C  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  3847                           
  3848                           ;../color.c: 92:  I2C_2_Master_Stop();
  3849   001E5E  EC8F  F010         	call	_I2C_2_Master_Stop	;wreg free
  3850   001E62                     
  3851                           ;../color.c: 93:  return tmp;
  3852   001E62  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  3853   001E66  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3854   001E6A  0012               	return		;funcret
  3855   001E6C                     __end_of_color_read_Green:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _color_read_Blue *****************
  3859 ;; Defined at:
  3860 ;;		line 96 in file "../color.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  tmp             2   11[COMRAM] unsigned int 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  2    6[COMRAM] unsigned int 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;Total ram usage:        7 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 4
  3881 ;; This function calls:
  3882 ;;		_I2C_2_Master_Read
  3883 ;;		_I2C_2_Master_RepStart
  3884 ;;		_I2C_2_Master_Start
  3885 ;;		_I2C_2_Master_Stop
  3886 ;;		_I2C_2_Master_Write
  3887 ;; This function is called by:
  3888 ;;		_color_read
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text23
  3893   001E6C                     __ptext23:
  3894                           	callstack 0
  3895   001E6C                     _color_read_Blue:
  3896                           	callstack 25
  3897   001E6C                     
  3898                           ;../color.c: 98:  unsigned int tmp;;../color.c: 99:  I2C_2_Master_Start();
  3899   001E6C  EC94  F010         	call	_I2C_2_Master_Start	;wreg free
  3900                           
  3901                           ;../color.c: 100:  I2C_2_Master_Write(0x52 | 0x00);
  3902   001E70  0E52               	movlw	82
  3903   001E72  EC7E  F010         	call	_I2C_2_Master_Write
  3904                           
  3905                           ;../color.c: 101:  I2C_2_Master_Write(0xA0 | 0x1A);
  3906   001E76  0EBA               	movlw	186
  3907   001E78  EC7E  F010         	call	_I2C_2_Master_Write
  3908                           
  3909                           ;../color.c: 102:  I2C_2_Master_RepStart();
  3910   001E7C  EC8A  F010         	call	_I2C_2_Master_RepStart	;wreg free
  3911                           
  3912                           ;../color.c: 103:  I2C_2_Master_Write(0x52 | 0x01);
  3913   001E80  0E53               	movlw	83
  3914   001E82  EC7E  F010         	call	_I2C_2_Master_Write
  3915                           
  3916                           ;../color.c: 104:  tmp=I2C_2_Master_Read(1);
  3917   001E86  0E01               	movlw	1
  3918   001E88  ECA1  F00F         	call	_I2C_2_Master_Read
  3919   001E8C  6E09               	movwf	??_color_read_Blue^0,c
  3920   001E8E  5009               	movf	??_color_read_Blue^0,w,c
  3921   001E90  6E0C               	movwf	color_read_Blue@tmp^0,c
  3922   001E92  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  3923                           
  3924                           ;../color.c: 105:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3925   001E94  0E00               	movlw	0
  3926   001E96  ECA1  F00F         	call	_I2C_2_Master_Read
  3927   001E9A  6E09               	movwf	??_color_read_Blue^0,c
  3928   001E9C  5009               	movf	??_color_read_Blue^0,w,c
  3929   001E9E  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  3930   001EA0  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  3931   001EA2  500C               	movf	color_read_Blue@tmp^0,w,c
  3932   001EA4  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  3933   001EA6  6E0C               	movwf	color_read_Blue@tmp^0,c
  3934   001EA8  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  3935   001EAA  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  3936   001EAC  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  3937                           
  3938                           ;../color.c: 106:  I2C_2_Master_Stop();
  3939   001EAE  EC8F  F010         	call	_I2C_2_Master_Stop	;wreg free
  3940   001EB2                     
  3941                           ;../color.c: 107:  return tmp;
  3942   001EB2  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  3943   001EB6  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3944   001EBA  0012               	return		;funcret
  3945   001EBC                     __end_of_color_read_Blue:
  3946                           	callstack 0
  3947                           
  3948 ;; *************** function _I2C_2_Master_RepStart *****************
  3949 ;; Defined at:
  3950 ;;		line 33 in file "../i2c.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 3
  3971 ;; This function calls:
  3972 ;;		_I2C_2_Master_Idle
  3973 ;; This function is called by:
  3974 ;;		_color_read_Luminosity
  3975 ;;		_color_read_Red
  3976 ;;		_color_read_Green
  3977 ;;		_color_read_Blue
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text24
  3982   002114                     __ptext24:
  3983                           	callstack 0
  3984   002114                     _I2C_2_Master_RepStart:
  3985                           	callstack 25
  3986   002114                     
  3987                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3988   002114  EC0F  F010         	call	_I2C_2_Master_Idle	;wreg free
  3989   002118                     
  3990                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3991   002118  010E               	movlb	14	; () banked
  3992   00211A  83DA               	bsf	218,1,b	;volatile
  3993   00211C                     
  3994                           ; BSR set to: 14
  3995   00211C  0012               	return		;funcret
  3996   00211E                     __end_of_I2C_2_Master_RepStart:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _I2C_2_Master_Read *****************
  4000 ;; Defined at:
  4001 ;;		line 51 in file "../i2c.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  ack             1    wreg     unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  ack             1    4[COMRAM] unsigned char 
  4006 ;;  tmp             1    5[COMRAM] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      unsigned char 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;Total ram usage:        3 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 3
  4023 ;; This function calls:
  4024 ;;		_I2C_2_Master_Idle
  4025 ;; This function is called by:
  4026 ;;		_color_read_Luminosity
  4027 ;;		_color_read_Red
  4028 ;;		_color_read_Green
  4029 ;;		_color_read_Blue
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text25
  4034   001F42                     __ptext25:
  4035                           	callstack 0
  4036   001F42                     _I2C_2_Master_Read:
  4037                           	callstack 25
  4038                           
  4039                           ; BSR set to: 14
  4040                           ;incstack = 0
  4041                           ;I2C_2_Master_Read@ack stored from wreg
  4042   001F42  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  4043   001F44                     
  4044                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  4045   001F44  EC0F  F010         	call	_I2C_2_Master_Idle	;wreg free
  4046   001F48                     
  4047                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4048   001F48  010E               	movlb	14	; () banked
  4049   001F4A  87DA               	bsf	218,3,b	;volatile
  4050                           
  4051                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  4052   001F4C  EC0F  F010         	call	_I2C_2_Master_Idle	;wreg free
  4053   001F50                     
  4054                           ;../i2c.c: 57:   tmp = SSP2BUF;
  4055   001F50  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4056                           
  4057                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  4058   001F54  EC0F  F010         	call	_I2C_2_Master_Idle	;wreg free
  4059   001F58                     
  4060                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4061   001F58  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  4062   001F5A  B4D8               	btfsc	status,2,c
  4063   001F5C  EFB2  F00F         	goto	u1141
  4064   001F60  EFB6  F00F         	goto	u1140
  4065   001F64                     u1141:
  4066   001F64  6A04               	clrf	??_I2C_2_Master_Read^0,c
  4067   001F66  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  4068   001F68  EFB7  F00F         	goto	u1158
  4069   001F6C                     u1140:
  4070   001F6C  6A04               	clrf	??_I2C_2_Master_Read^0,c
  4071   001F6E                     u1158:
  4072   001F6E  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  4073   001F70  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  4074   001F72  010E               	movlb	14	; () banked
  4075   001F74  51DA               	movf	218,w,b	;volatile
  4076   001F76  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  4077   001F78  0BDF               	andlw	-33
  4078   001F7A  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  4079   001F7C  6FDA               	movwf	218,b	;volatile
  4080   001F7E                     
  4081                           ; BSR set to: 14
  4082                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4083   001F7E  89DA               	bsf	218,4,b	;volatile
  4084   001F80                     
  4085                           ; BSR set to: 14
  4086                           ;../i2c.c: 61:   return tmp;
  4087   001F80  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  4088   001F82                     
  4089                           ; BSR set to: 14
  4090   001F82  0012               	return		;funcret
  4091   001F84                     __end_of_I2C_2_Master_Read:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _color_processor_easy *****************
  4095 ;; Defined at:
  4096 ;;		line 133 in file "../color.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  4099 ;;		 -> main@RGB_recorded(8), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  b               2   10[COMRAM] unsigned int 
  4102 ;;  a               2    8[COMRAM] unsigned int 
  4103 ;;  c               2    6[COMRAM] unsigned int 
  4104 ;;  color           2    4[COMRAM] unsigned int 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  2    2[COMRAM] unsigned int 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;Total ram usage:       10 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 2
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_main
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text26
  4129   001AA0                     __ptext26:
  4130                           	callstack 0
  4131   001AA0                     _color_processor_easy:
  4132                           	callstack 28
  4133   001AA0                     
  4134                           ;../color.c: 133: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 134
      +                          : {;../color.c: 135:     unsigned int a = rgb->R;
  4135   001AA0  EE20 F002          	lfsr	2,2
  4136   001AA4  5003               	movf	color_processor_easy@rgb^0,w,c
  4137   001AA6  26D9               	addwf	fsr2l,f,c
  4138   001AA8  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  4139   001AAA  22DA               	addwfc	fsr2h,f,c
  4140   001AAC  CFDE F009          	movff	postinc2,color_processor_easy@a
  4141   001AB0  CFDD F00A          	movff	postdec2,color_processor_easy@a+1
  4142                           
  4143                           ;../color.c: 136:     unsigned int b = rgb->G;
  4144   001AB4  EE20 F004          	lfsr	2,4
  4145   001AB8  5003               	movf	color_processor_easy@rgb^0,w,c
  4146   001ABA  26D9               	addwf	fsr2l,f,c
  4147   001ABC  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  4148   001ABE  22DA               	addwfc	fsr2h,f,c
  4149   001AC0  CFDE F00B          	movff	postinc2,color_processor_easy@b
  4150   001AC4  CFDD F00C          	movff	postdec2,color_processor_easy@b+1
  4151                           
  4152                           ;../color.c: 137:     unsigned int c = rgb->B;
  4153   001AC8  EE20 F006          	lfsr	2,6
  4154   001ACC  5003               	movf	color_processor_easy@rgb^0,w,c
  4155   001ACE  26D9               	addwf	fsr2l,f,c
  4156   001AD0  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  4157   001AD2  22DA               	addwfc	fsr2h,f,c
  4158   001AD4  CFDE F007          	movff	postinc2,color_processor_easy@c
  4159   001AD8  CFDD F008          	movff	postdec2,color_processor_easy@c+1
  4160   001ADC                     
  4161                           ;../color.c: 138:     unsigned int color;;../color.c: 139:     if (a>=b & a>=c){color=1;
      +                          }
  4162   001ADC  500B               	movf	color_processor_easy@b^0,w,c
  4163   001ADE  5C09               	subwf	color_processor_easy@a^0,w,c
  4164   001AE0  500C               	movf	(color_processor_easy@b+1)^0,w,c
  4165   001AE2  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  4166   001AE4  A0D8               	btfss	status,0,c
  4167   001AE6  EF77  F00D         	goto	u1271
  4168   001AEA  EF79  F00D         	goto	u1270
  4169   001AEE                     u1271:
  4170   001AEE  EF8A  F00D         	goto	l2321
  4171   001AF2                     u1270:
  4172   001AF2  5007               	movf	color_processor_easy@c^0,w,c
  4173   001AF4  5C09               	subwf	color_processor_easy@a^0,w,c
  4174   001AF6  5008               	movf	(color_processor_easy@c+1)^0,w,c
  4175   001AF8  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  4176   001AFA  A0D8               	btfss	status,0,c
  4177   001AFC  EF82  F00D         	goto	u1281
  4178   001B00  EF84  F00D         	goto	u1280
  4179   001B04                     u1281:
  4180   001B04  EF8A  F00D         	goto	l2321
  4181   001B08                     u1280:
  4182   001B08  0E00               	movlw	0
  4183   001B0A  6E06               	movwf	(color_processor_easy@color+1)^0,c
  4184   001B0C  0E01               	movlw	1
  4185   001B0E  6E05               	movwf	color_processor_easy@color^0,c
  4186   001B10  EFAA  F00D         	goto	l2329
  4187   001B14                     l2321:
  4188   001B14  5009               	movf	color_processor_easy@a^0,w,c
  4189   001B16  5C0B               	subwf	color_processor_easy@b^0,w,c
  4190   001B18  500A               	movf	(color_processor_easy@a+1)^0,w,c
  4191   001B1A  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  4192   001B1C  A0D8               	btfss	status,0,c
  4193   001B1E  EF93  F00D         	goto	u1291
  4194   001B22  EF95  F00D         	goto	u1290
  4195   001B26                     u1291:
  4196   001B26  EFA6  F00D         	goto	l2327
  4197   001B2A                     u1290:
  4198   001B2A  5007               	movf	color_processor_easy@c^0,w,c
  4199   001B2C  5C0B               	subwf	color_processor_easy@b^0,w,c
  4200   001B2E  5008               	movf	(color_processor_easy@c+1)^0,w,c
  4201   001B30  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  4202   001B32  A0D8               	btfss	status,0,c
  4203   001B34  EF9E  F00D         	goto	u1301
  4204   001B38  EFA0  F00D         	goto	u1300
  4205   001B3C                     u1301:
  4206   001B3C  EFA6  F00D         	goto	l2327
  4207   001B40                     u1300:
  4208   001B40  0E00               	movlw	0
  4209   001B42  6E06               	movwf	(color_processor_easy@color+1)^0,c
  4210   001B44  0E02               	movlw	2
  4211   001B46  6E05               	movwf	color_processor_easy@color^0,c
  4212   001B48  EFAA  F00D         	goto	l2329
  4213   001B4C                     l2327:
  4214   001B4C  0E00               	movlw	0
  4215   001B4E  6E06               	movwf	(color_processor_easy@color+1)^0,c
  4216   001B50  0E03               	movlw	3
  4217   001B52  6E05               	movwf	color_processor_easy@color^0,c
  4218   001B54                     l2329:
  4219                           
  4220                           ;../color.c: 142:     return color;
  4221   001B54  C005  F003         	movff	color_processor_easy@color,?_color_processor_easy
  4222   001B58  C006  F004         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  4223   001B5C  0012               	return		;funcret
  4224   001B5E                     __end_of_color_processor_easy:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _color_click_init *****************
  4228 ;; Defined at:
  4229 ;;		line 5 in file "../color.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;		None
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; Hardware stack levels required when called: 5
  4250 ;; This function calls:
  4251 ;;		_I2C_2_Master_Init
  4252 ;;		_color_writetoaddr
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text27
  4259   001C7E                     __ptext27:
  4260                           	callstack 0
  4261   001C7E                     _color_click_init:
  4262                           	callstack 25
  4263   001C7E                     
  4264                           ;../color.c: 8:     I2C_2_Master_Init();
  4265   001C7E  ECFA  F00F         	call	_I2C_2_Master_Init	;wreg free
  4266   001C82                     
  4267                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  4268   001C82  0E01               	movlw	1
  4269   001C84  6E05               	movwf	color_writetoaddr@value^0,c
  4270   001C86  0E00               	movlw	0
  4271   001C88  EC36  F010         	call	_color_writetoaddr
  4272   001C8C                     
  4273                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4274   001C8C  0E3F               	movlw	63
  4275   001C8E  6E07               	movwf	??_color_click_init^0,c
  4276   001C90  0E55               	movlw	85
  4277   001C92                     u1707:
  4278   001C92  2EE8               	decfsz	wreg,f,c
  4279   001C94  D7FE               	bra	u1707
  4280   001C96  2E07               	decfsz	??_color_click_init^0,f,c
  4281   001C98  D7FC               	bra	u1707
  4282   001C9A  F000               	nop	
  4283   001C9C                     
  4284                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  4285   001C9C  0E03               	movlw	3
  4286   001C9E  6E05               	movwf	color_writetoaddr@value^0,c
  4287   001CA0  0E00               	movlw	0
  4288   001CA2  EC36  F010         	call	_color_writetoaddr
  4289   001CA6                     
  4290                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  4291   001CA6  0ED5               	movlw	213
  4292   001CA8  6E05               	movwf	color_writetoaddr@value^0,c
  4293   001CAA  0E01               	movlw	1
  4294   001CAC  EC36  F010         	call	_color_writetoaddr
  4295   001CB0                     
  4296                           ;../color.c: 21:     TRISHbits.TRISH1 = 0;
  4297   001CB0  9288               	bcf	136,1,c	;volatile
  4298   001CB2                     
  4299                           ;../color.c: 22:     TRISDbits.TRISD3 = 0;
  4300   001CB2  9684               	bcf	132,3,c	;volatile
  4301   001CB4                     
  4302                           ;../color.c: 23:     TRISDbits.TRISD4 = 0;
  4303   001CB4  9884               	bcf	132,4,c	;volatile
  4304   001CB6                     
  4305                           ;../color.c: 24:     TRISHbits.TRISH0 = 0;
  4306   001CB6  9088               	bcf	136,0,c	;volatile
  4307   001CB8                     
  4308                           ;../color.c: 25:     TRISFbits.TRISF0 = 0;
  4309   001CB8  9086               	bcf	134,0,c	;volatile
  4310   001CBA                     
  4311                           ;../color.c: 27:     LATHbits.LATH1 = 1;
  4312   001CBA  8280               	bsf	128,1,c	;volatile
  4313   001CBC                     
  4314                           ;../color.c: 28:     LATDbits.LATD3 = 1;
  4315   001CBC  867C               	bsf	124,3,c	;volatile
  4316   001CBE                     
  4317                           ;../color.c: 29:     LATDbits.LATD4 = 1;
  4318   001CBE  887C               	bsf	124,4,c	;volatile
  4319   001CC0                     
  4320                           ;../color.c: 30:     LATHbits.LATH0 = 1;
  4321   001CC0  8080               	bsf	128,0,c	;volatile
  4322   001CC2                     
  4323                           ;../color.c: 31:     LATFbits.LATF0 = 1;
  4324   001CC2  807E               	bsf	126,0,c	;volatile
  4325   001CC4                     
  4326                           ;../color.c: 34:     LATDbits.LATD7=0;
  4327   001CC4  9E7C               	bcf	124,7,c	;volatile
  4328   001CC6                     
  4329                           ;../color.c: 35:     LATHbits.LATH3=0;
  4330   001CC6  9680               	bcf	128,3,c	;volatile
  4331   001CC8                     
  4332                           ;../color.c: 36:     TRISDbits.TRISD7=0;
  4333   001CC8  9E84               	bcf	132,7,c	;volatile
  4334   001CCA                     
  4335                           ;../color.c: 37:     TRISHbits.TRISH3=0;
  4336   001CCA  9688               	bcf	136,3,c	;volatile
  4337   001CCC                     
  4338                           ;../color.c: 39:     TRISFbits.TRISF2=1;
  4339   001CCC  8486               	bsf	134,2,c	;volatile
  4340   001CCE                     
  4341                           ;../color.c: 40:     ANSELFbits.ANSELF2=0;
  4342   001CCE  010E               	movlb	14	; () banked
  4343   001CD0  95B4               	bcf	180,2,b	;volatile
  4344   001CD2                     
  4345                           ; BSR set to: 14
  4346                           ;../color.c: 41:     TRISFbits.TRISF3=1;
  4347   001CD2  8686               	bsf	134,3,c	;volatile
  4348   001CD4                     
  4349                           ; BSR set to: 14
  4350                           ;../color.c: 42:     ANSELFbits.ANSELF3=0;
  4351   001CD4  97B4               	bcf	180,3,b	;volatile
  4352   001CD6                     
  4353                           ; BSR set to: 14
  4354   001CD6  0012               	return		;funcret
  4355   001CD8                     __end_of_color_click_init:
  4356                           	callstack 0
  4357                           
  4358 ;; *************** function _color_writetoaddr *****************
  4359 ;; Defined at:
  4360 ;;		line 45 in file "../color.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  address         1    wreg     unsigned char 
  4363 ;;  value           1    4[COMRAM] unsigned char 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  address         1    5[COMRAM] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4375 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 4
  4382 ;; This function calls:
  4383 ;;		_I2C_2_Master_Start
  4384 ;;		_I2C_2_Master_Stop
  4385 ;;		_I2C_2_Master_Write
  4386 ;; This function is called by:
  4387 ;;		_color_click_init
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text28
  4392   00206C                     __ptext28:
  4393                           	callstack 0
  4394   00206C                     _color_writetoaddr:
  4395                           	callstack 25
  4396                           
  4397                           ; BSR set to: 14
  4398                           ;incstack = 0
  4399                           ;color_writetoaddr@address stored from wreg
  4400   00206C  6E06               	movwf	color_writetoaddr@address^0,c
  4401   00206E                     
  4402                           ;../color.c: 45: void color_writetoaddr(char address, char value);../color.c: 46: {;../c
      +                          olor.c: 47:     I2C_2_Master_Start();
  4403   00206E  EC94  F010         	call	_I2C_2_Master_Start	;wreg free
  4404                           
  4405                           ;../color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  4406   002072  0E52               	movlw	82
  4407   002074  EC7E  F010         	call	_I2C_2_Master_Write
  4408                           
  4409                           ;../color.c: 49:     I2C_2_Master_Write(0x80 | address);
  4410   002078  5006               	movf	color_writetoaddr@address^0,w,c
  4411   00207A  0980               	iorlw	128
  4412   00207C  EC7E  F010         	call	_I2C_2_Master_Write
  4413                           
  4414                           ;../color.c: 50:     I2C_2_Master_Write(value);
  4415   002080  5005               	movf	color_writetoaddr@value^0,w,c
  4416   002082  EC7E  F010         	call	_I2C_2_Master_Write
  4417                           
  4418                           ;../color.c: 51:     I2C_2_Master_Stop();
  4419   002086  EC8F  F010         	call	_I2C_2_Master_Stop	;wreg free
  4420   00208A  0012               	return		;funcret
  4421   00208C                     __end_of_color_writetoaddr:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function _I2C_2_Master_Write *****************
  4425 ;; Defined at:
  4426 ;;		line 45 in file "../i2c.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  data_byte       1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  data_byte       1    3[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;Total ram usage:        1 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 3
  4447 ;; This function calls:
  4448 ;;		_I2C_2_Master_Idle
  4449 ;; This function is called by:
  4450 ;;		_color_writetoaddr
  4451 ;;		_color_read_Luminosity
  4452 ;;		_color_read_Red
  4453 ;;		_color_read_Green
  4454 ;;		_color_read_Blue
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text29
  4459   0020FC                     __ptext29:
  4460                           	callstack 0
  4461   0020FC                     _I2C_2_Master_Write:
  4462                           	callstack 25
  4463                           
  4464                           ;incstack = 0
  4465                           ;I2C_2_Master_Write@data_byte stored from wreg
  4466   0020FC  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  4467   0020FE                     
  4468                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  4469   0020FE  EC0F  F010         	call	_I2C_2_Master_Idle	;wreg free
  4470   002102                     
  4471                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  4472   002102  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4473   002106  0012               	return		;funcret
  4474   002108                     __end_of_I2C_2_Master_Write:
  4475                           	callstack 0
  4476                           
  4477 ;; *************** function _I2C_2_Master_Stop *****************
  4478 ;; Defined at:
  4479 ;;		line 39 in file "../i2c.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used: 1
  4499 ;; Hardware stack levels required when called: 3
  4500 ;; This function calls:
  4501 ;;		_I2C_2_Master_Idle
  4502 ;; This function is called by:
  4503 ;;		_color_writetoaddr
  4504 ;;		_color_read_Luminosity
  4505 ;;		_color_read_Red
  4506 ;;		_color_read_Green
  4507 ;;		_color_read_Blue
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text30
  4512   00211E                     __ptext30:
  4513                           	callstack 0
  4514   00211E                     _I2C_2_Master_Stop:
  4515                           	callstack 25
  4516   00211E                     
  4517                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  4518   00211E  EC0F  F010         	call	_I2C_2_Master_Idle	;wreg free
  4519   002122                     
  4520                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4521   002122  010E               	movlb	14	; () banked
  4522   002124  85DA               	bsf	218,2,b	;volatile
  4523   002126                     
  4524                           ; BSR set to: 14
  4525   002126  0012               	return		;funcret
  4526   002128                     __end_of_I2C_2_Master_Stop:
  4527                           	callstack 0
  4528                           
  4529 ;; *************** function _I2C_2_Master_Start *****************
  4530 ;; Defined at:
  4531 ;;		line 27 in file "../i2c.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; Hardware stack levels required when called: 3
  4552 ;; This function calls:
  4553 ;;		_I2C_2_Master_Idle
  4554 ;; This function is called by:
  4555 ;;		_color_writetoaddr
  4556 ;;		_color_read_Luminosity
  4557 ;;		_color_read_Red
  4558 ;;		_color_read_Green
  4559 ;;		_color_read_Blue
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text31
  4564   002128                     __ptext31:
  4565                           	callstack 0
  4566   002128                     _I2C_2_Master_Start:
  4567                           	callstack 25
  4568   002128                     
  4569                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  4570   002128  EC0F  F010         	call	_I2C_2_Master_Idle	;wreg free
  4571   00212C                     
  4572                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4573   00212C  010E               	movlb	14	; () banked
  4574   00212E  81DA               	bsf	218,0,b	;volatile
  4575   002130                     
  4576                           ; BSR set to: 14
  4577   002130  0012               	return		;funcret
  4578   002132                     __end_of_I2C_2_Master_Start:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function _I2C_2_Master_Idle *****************
  4582 ;; Defined at:
  4583 ;;		line 22 in file "../i2c.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;Total ram usage:        1 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 2
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_I2C_2_Master_Start
  4608 ;;		_I2C_2_Master_RepStart
  4609 ;;		_I2C_2_Master_Stop
  4610 ;;		_I2C_2_Master_Write
  4611 ;;		_I2C_2_Master_Read
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text32
  4616   00201E                     __ptext32:
  4617                           	callstack 0
  4618   00201E                     _I2C_2_Master_Idle:
  4619                           	callstack 25
  4620   00201E                     l95:
  4621   00201E  010E               	movlb	14	; () banked
  4622   002020  B5D8               	btfsc	216,2,b	;volatile
  4623   002022  EF15  F010         	goto	u1021
  4624   002026  EF17  F010         	goto	u1020
  4625   00202A                     u1021:
  4626   00202A  EF0F  F010         	goto	l95
  4627   00202E                     u1020:
  4628   00202E                     
  4629                           ; BSR set to: 14
  4630   00202E  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4631   002032  0E1F               	movlw	31
  4632   002034  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  4633   002036  A4D8               	btfss	status,2,c
  4634   002038  EF20  F010         	goto	u1031
  4635   00203C  EF22  F010         	goto	u1030
  4636   002040                     u1031:
  4637   002040  EF0F  F010         	goto	l95
  4638   002044                     u1030:
  4639   002044                     
  4640                           ; BSR set to: 14
  4641   002044  0012               	return		;funcret
  4642   002046                     __end_of_I2C_2_Master_Idle:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function _I2C_2_Master_Init *****************
  4646 ;; Defined at:
  4647 ;;		line 4 in file "../i2c.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: 2
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_color_click_init
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text33
  4677   001FF4                     __ptext33:
  4678                           	callstack 0
  4679   001FF4                     _I2C_2_Master_Init:
  4680                           	callstack 27
  4681   001FF4                     
  4682                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4683   001FF4  010E               	movlb	14	; () banked
  4684   001FF6  51D9               	movf	217,w,b	;volatile
  4685   001FF8  0BF0               	andlw	-16
  4686   001FFA  0908               	iorlw	8
  4687   001FFC  6FD9               	movwf	217,b	;volatile
  4688   001FFE                     
  4689                           ; BSR set to: 14
  4690                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4691   001FFE  8BD9               	bsf	217,5,b	;volatile
  4692                           
  4693                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4694   002000  0E9F               	movlw	159
  4695   002002  6FD6               	movwf	214,b	;volatile
  4696   002004                     
  4697                           ; BSR set to: 14
  4698                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4699   002004  8A84               	bsf	132,5,c	;volatile
  4700   002006                     
  4701                           ; BSR set to: 14
  4702                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4703   002006  8C84               	bsf	132,6,c	;volatile
  4704   002008                     
  4705                           ; BSR set to: 14
  4706                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4707   002008  9BA7               	bcf	167,5,b	;volatile
  4708   00200A                     
  4709                           ; BSR set to: 14
  4710                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4711   00200A  9DA7               	bcf	167,6,b	;volatile
  4712                           
  4713                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  4714   00200C  0E1D               	movlw	29
  4715   00200E  6F1D               	movwf	29,b	;volatile
  4716                           
  4717                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  4718   002010  0E1E               	movlw	30
  4719   002012  6F1C               	movwf	28,b	;volatile
  4720                           
  4721                           ;../i2c.c: 18:   RD5PPS=0x1C;
  4722   002014  0E1C               	movlw	28
  4723   002016  6F6F               	movwf	111,b	;volatile
  4724                           
  4725                           ;../i2c.c: 19:   RD6PPS=0x1B;
  4726   002018  0E1B               	movlw	27
  4727   00201A  6F70               	movwf	112,b	;volatile
  4728   00201C                     
  4729                           ; BSR set to: 14
  4730   00201C  0012               	return		;funcret
  4731   00201E                     __end_of_I2C_2_Master_Init:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _Timer0_init *****************
  4735 ;; Defined at:
  4736 ;;		line 40 in file "../rc_servo.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;Total ram usage:        0 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 2
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_main
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text34
  4765   00208C                     __ptext34:
  4766                           	callstack 0
  4767   00208C                     _Timer0_init:
  4768                           	callstack 28
  4769   00208C                     
  4770                           ;../rc_servo.c: 42:     T0CON1bits.T0CS=0b010;
  4771   00208C  50D6               	movf	214,w,c	;volatile
  4772   00208E  0B1F               	andlw	-225
  4773   002090  0940               	iorlw	64
  4774   002092  6ED6               	movwf	214,c	;volatile
  4775   002094                     
  4776                           ;../rc_servo.c: 43:     T0CON1bits.T0ASYNC=1;
  4777   002094  88D6               	bsf	214,4,c	;volatile
  4778                           
  4779                           ;../rc_servo.c: 44:     T0CON1bits.T0CKPS=0b0111;
  4780   002096  50D6               	movf	214,w,c	;volatile
  4781   002098  0BF0               	andlw	-16
  4782   00209A  0907               	iorlw	7
  4783   00209C  6ED6               	movwf	214,c	;volatile
  4784   00209E                     
  4785                           ;../rc_servo.c: 46:     T0CON0bits.T016BIT=1;
  4786   00209E  88D5               	bsf	213,4,c	;volatile
  4787                           
  4788                           ;../rc_servo.c: 49:     TMR0H=(65535-2500)>>8;
  4789   0020A0  0EF6               	movlw	246
  4790   0020A2  6ED4               	movwf	212,c	;volatile
  4791                           
  4792                           ;../rc_servo.c: 50:     TMR0L=(unsigned char)(65535-2500);
  4793   0020A4  0E3B               	movlw	59
  4794   0020A6  6ED3               	movwf	211,c	;volatile
  4795   0020A8                     
  4796                           ;../rc_servo.c: 51:     T0CON0bits.T0EN=1;
  4797   0020A8  8ED5               	bsf	213,7,c	;volatile
  4798   0020AA  0012               	return		;funcret
  4799   0020AC                     __end_of_Timer0_init:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _Interrupts_init *****************
  4803 ;; Defined at:
  4804 ;;		line 8 in file "../rc_servo.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		None
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 2
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_main
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text35
  4833   002108                     __ptext35:
  4834                           	callstack 0
  4835   002108                     _Interrupts_init:
  4836                           	callstack 28
  4837   002108                     
  4838                           ;../rc_servo.c: 10:     PIE0bits.TMR0IE=1;
  4839   002108  010E               	movlb	14	; () banked
  4840   00210A  8B29               	bsf	41,5,b	;volatile
  4841                           
  4842                           ;../rc_servo.c: 11:     INTCONbits.PEIE=1;
  4843   00210C  8CF2               	bsf	242,6,c	;volatile
  4844                           
  4845                           ;../rc_servo.c: 12:     INTCONbits.IPEN=0;
  4846   00210E  9AF2               	bcf	242,5,c	;volatile
  4847                           
  4848                           ;../rc_servo.c: 13:     INTCONbits.GIE=1;
  4849   002110  8EF2               	bsf	242,7,c	;volatile
  4850   002112                     
  4851                           ; BSR set to: 14
  4852   002112  0012               	return		;funcret
  4853   002114                     __end_of_Interrupts_init:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _HighISR *****************
  4857 ;; Defined at:
  4858 ;;		line 20 in file "../rc_servo.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;Total ram usage:        0 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 1
  4879 ;; This function calls:
  4880 ;;		_write16bitTMR0val
  4881 ;; This function is called by:
  4882 ;;		Interrupt level 2
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	intcode
  4887   000008                     __pintcode:
  4888                           	callstack 0
  4889   000008                     _HighISR:
  4890                           	callstack 21
  4891                           
  4892                           ; BSR set to: 14
  4893                           ;incstack = 0
  4894   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4895   00000A                     
  4896                           ;../rc_servo.c: 22:     if (PIR0bits.TMR0IF)
  4897   00000A  010E               	movlb	14	; () banked
  4898   00000C  AB33               	btfss	51,5,b	;volatile
  4899   00000E  EF0B  F000         	goto	i2u154_41
  4900   000012  EF0D  F000         	goto	i2u154_40
  4901   000016                     i2u154_41:
  4902   000016  EF26  F000         	goto	i2l2653
  4903   00001A                     i2u154_40:
  4904   00001A                     
  4905                           ; BSR set to: 14
  4906                           ;../rc_servo.c: 23:     {;../rc_servo.c: 24:         if(LATEbits.LATE2){
  4907   00001A  A47D               	btfss	125,2,c	;volatile
  4908   00001C  EF12  F000         	goto	i2u155_41
  4909   000020  EF14  F000         	goto	i2u155_40
  4910   000024                     i2u155_41:
  4911   000024  EF1E  F000         	goto	i2l2649
  4912   000028                     i2u155_40:
  4913   000028                     
  4914                           ; BSR set to: 14
  4915                           ;../rc_servo.c: 25:             write16bitTMR0val(65535-off_period);
  4916   000028  0100               	movlb	0	; () banked
  4917   00002A  1DB4               	comf	_off_period& (0+255),w,b
  4918   00002C  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4919   00002E  1DB5               	comf	(_off_period+1)& (0+255),w,b
  4920   000030  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4921   000032  EC99  F010         	call	_write16bitTMR0val	;wreg free
  4922   000036                     
  4923                           ;../rc_servo.c: 26:             LATEbits.LATE2=0;
  4924   000036  947D               	bcf	125,2,c	;volatile
  4925                           
  4926                           ;../rc_servo.c: 28:         } else {
  4927   000038  EF26  F000         	goto	i2l2653
  4928   00003C                     i2l2649:
  4929                           
  4930                           ; BSR set to: 14
  4931                           ;../rc_servo.c: 29:             write16bitTMR0val(65535-on_period);
  4932   00003C  0100               	movlb	0	; () banked
  4933   00003E  1DB6               	comf	_on_period& (0+255),w,b
  4934   000040  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4935   000042  1DB7               	comf	(_on_period+1)& (0+255),w,b
  4936   000044  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4937   000046  EC99  F010         	call	_write16bitTMR0val	;wreg free
  4938   00004A                     
  4939                           ;../rc_servo.c: 30:             LATEbits.LATE2=1;
  4940   00004A  847D               	bsf	125,2,c	;volatile
  4941   00004C                     i2l2653:
  4942                           
  4943                           ;../rc_servo.c: 34:     PIR0bits.TMR0IF=0;
  4944   00004C  010E               	movlb	14	; () banked
  4945   00004E  9B33               	bcf	51,5,b	;volatile
  4946   000050                     
  4947                           ; BSR set to: 14
  4948   000050  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4949   000052  0011               	retfie		f
  4950   000054                     __end_of_HighISR:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _write16bitTMR0val *****************
  4954 ;; Defined at:
  4955 ;;		line 58 in file "../rc_servo.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  tmp             2    0[COMRAM] unsigned int 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;Total ram usage:        2 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_HighISR
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text37
  4983   002132                     __ptext37:
  4984                           	callstack 0
  4985   002132                     _write16bitTMR0val:
  4986                           	callstack 21
  4987   002132                     
  4988                           ;../rc_servo.c: 58: void write16bitTMR0val(unsigned int tmp);../rc_servo.c: 59: {;../rc_
      +                          servo.c: 60:     TMR0H=tmp>>8;
  4989   002132  5002               	movf	(write16bitTMR0val@tmp+1)^0,w,c
  4990   002134  6ED4               	movwf	212,c	;volatile
  4991   002136                     
  4992                           ;../rc_servo.c: 61:     TMR0L=tmp;
  4993   002136  C001  FFD3         	movff	write16bitTMR0val@tmp,4051	;volatile
  4994   00213A  0012               	return		;funcret
  4995   00213C                     __end_of_write16bitTMR0val:
  4996                           	callstack 0
  4997                           
  4998                           	psect	rparam
  4999   000000                     
  5000                           	psect	temp
  5001   00005D                     btemp:
  5002                           	callstack 0
  5003   00005D                     	ds	1
  5004   000000                     int$flags	set	btemp
  5005   000000                     wtemp8	set	btemp+1
  5006   000000                     ttemp5	set	btemp+1
  5007   000000                     ttemp6	set	btemp+4
  5008   000000                     ttemp7	set	btemp+8
  5009                           
  5010                           	psect	idloc
  5011                           
  5012                           ;Config register IDLOC0 @ 0x200000
  5013                           ;	unspecified, using default values
  5014   200000                     	org	2097152
  5015   200000  0FFF               	dw	4095
  5016                           
  5017                           ;Config register IDLOC1 @ 0x200002
  5018                           ;	unspecified, using default values
  5019   200002                     	org	2097154
  5020   200002  0FFF               	dw	4095
  5021                           
  5022                           ;Config register IDLOC2 @ 0x200004
  5023                           ;	unspecified, using default values
  5024   200004                     	org	2097156
  5025   200004  0FFF               	dw	4095
  5026                           
  5027                           ;Config register IDLOC3 @ 0x200006
  5028                           ;	unspecified, using default values
  5029   200006                     	org	2097158
  5030   200006  0FFF               	dw	4095
  5031                           
  5032                           ;Config register IDLOC4 @ 0x200008
  5033                           ;	unspecified, using default values
  5034   200008                     	org	2097160
  5035   200008  0FFF               	dw	4095
  5036                           
  5037                           ;Config register IDLOC5 @ 0x20000A
  5038                           ;	unspecified, using default values
  5039   20000A                     	org	2097162
  5040   20000A  0FFF               	dw	4095
  5041                           
  5042                           ;Config register IDLOC6 @ 0x20000C
  5043                           ;	unspecified, using default values
  5044   20000C                     	org	2097164
  5045   20000C  0FFF               	dw	4095
  5046                           
  5047                           ;Config register IDLOC7 @ 0x20000E
  5048                           ;	unspecified, using default values
  5049   20000E                     	org	2097166
  5050   20000E  0FFF               	dw	4095
  5051                           
  5052                           	psect	config
  5053                           
  5054                           ;Config register CONFIG1L @ 0x300000
  5055                           ;	External Oscillator mode Selection bits
  5056                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5057                           ;	Power-up default value for COSC bits
  5058                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5059   300000                     	org	3145728
  5060   300000  AA                 	db	170
  5061                           
  5062                           ;Config register CONFIG1H @ 0x300001
  5063                           ;	unspecified, using default values
  5064                           ;	Clock Out Enable bit
  5065                           ;	CLKOUTEN = 0x1, unprogrammed default
  5066                           ;	Clock Switch Enable bit
  5067                           ;	CSWEN = 0x1, unprogrammed default
  5068                           ;	Fail-Safe Clock Monitor Enable bit
  5069                           ;	FCMEN = 0x1, unprogrammed default
  5070   300001                     	org	3145729
  5071   300001  FF                 	db	255
  5072                           
  5073                           ;Config register CONFIG2L @ 0x300002
  5074                           ;	unspecified, using default values
  5075                           ;	Master Clear Enable bit
  5076                           ;	MCLRE = 0x1, unprogrammed default
  5077                           ;	Power-up Timer Enable bit
  5078                           ;	PWRTE = 0x1, unprogrammed default
  5079                           ;	Low-power BOR enable bit
  5080                           ;	LPBOREN = 0x1, unprogrammed default
  5081                           ;	Brown-out Reset Enable bits
  5082                           ;	BOREN = 0x3, unprogrammed default
  5083   300002                     	org	3145730
  5084   300002  FF                 	db	255
  5085                           
  5086                           ;Config register CONFIG2H @ 0x300003
  5087                           ;	unspecified, using default values
  5088                           ;	Brown Out Reset Voltage selection bits
  5089                           ;	BORV = 0x3, unprogrammed default
  5090                           ;	ZCD Disable bit
  5091                           ;	ZCD = 0x1, unprogrammed default
  5092                           ;	PPSLOCK bit One-Way Set Enable bit
  5093                           ;	PPS1WAY = 0x1, unprogrammed default
  5094                           ;	Stack Full/Underflow Reset Enable bit
  5095                           ;	STVREN = 0x1, unprogrammed default
  5096                           ;	Debugger Enable bit
  5097                           ;	DEBUG = 0x1, unprogrammed default
  5098                           ;	Extended Instruction Set Enable bit
  5099                           ;	XINST = 0x1, unprogrammed default
  5100   300003                     	org	3145731
  5101   300003  FF                 	db	255
  5102                           
  5103                           ;Config register CONFIG3L @ 0x300004
  5104                           ;	WDT Period Select bits
  5105                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5106                           ;	WDT operating mode
  5107                           ;	WDTE = OFF, WDT Disabled
  5108   300004                     	org	3145732
  5109   300004  9F                 	db	159
  5110                           
  5111                           ;Config register CONFIG3H @ 0x300005
  5112                           ;	unspecified, using default values
  5113                           ;	WDT Window Select bits
  5114                           ;	WDTCWS = 0x7, unprogrammed default
  5115                           ;	WDT input clock selector
  5116                           ;	WDTCCS = 0x7, unprogrammed default
  5117   300005                     	org	3145733
  5118   300005  FF                 	db	255
  5119                           
  5120                           ;Config register CONFIG4L @ 0x300006
  5121                           ;	unspecified, using default values
  5122                           ;	Write Protection Block 0
  5123                           ;	WRT0 = 0x1, unprogrammed default
  5124                           ;	Write Protection Block 1
  5125                           ;	WRT1 = 0x1, unprogrammed default
  5126                           ;	Write Protection Block 2
  5127                           ;	WRT2 = 0x1, unprogrammed default
  5128                           ;	Write Protection Block 3
  5129                           ;	WRT3 = 0x1, unprogrammed default
  5130                           ;	Write Protection Block 3
  5131                           ;	WRT4 = 0x1, unprogrammed default
  5132                           ;	Write Protection Block 3
  5133                           ;	WRT5 = 0x1, unprogrammed default
  5134                           ;	Write Protection Block 3
  5135                           ;	WRT6 = 0x1, unprogrammed default
  5136                           ;	Write Protection Block 3
  5137                           ;	WRT7 = 0x1, unprogrammed default
  5138   300006                     	org	3145734
  5139   300006  FF                 	db	255
  5140                           
  5141                           ;Config register CONFIG4H @ 0x300007
  5142                           ;	unspecified, using default values
  5143                           ;	Configuration Register Write Protection bit
  5144                           ;	WRTC = 0x1, unprogrammed default
  5145                           ;	Boot Block Write Protection bit
  5146                           ;	WRTB = 0x1, unprogrammed default
  5147                           ;	Data EEPROM Write Protection bit
  5148                           ;	WRTD = 0x1, unprogrammed default
  5149                           ;	Scanner Enable bit
  5150                           ;	SCANE = 0x1, unprogrammed default
  5151                           ;	Low Voltage Programming Enable bit
  5152                           ;	LVP = 0x1, unprogrammed default
  5153   300007                     	org	3145735
  5154   300007  FF                 	db	255
  5155                           
  5156                           ;Config register CONFIG5L @ 0x300008
  5157                           ;	unspecified, using default values
  5158                           ;	UserNVM Program Memory Code Protection bit
  5159                           ;	CP = 0x1, unprogrammed default
  5160                           ;	DataNVM Memory Code Protection bit
  5161                           ;	CPD = 0x1, unprogrammed default
  5162   300008                     	org	3145736
  5163   300008  FF                 	db	255
  5164                           
  5165                           ;Config register CONFIG5H @ 0x300009
  5166                           ;	unspecified, using default values
  5167   300009                     	org	3145737
  5168   300009  FF                 	db	255
  5169                           
  5170                           ;Config register CONFIG6L @ 0x30000A
  5171                           ;	unspecified, using default values
  5172                           ;	Table Read Protection Block 0
  5173                           ;	EBTR0 = 0x1, unprogrammed default
  5174                           ;	Table Read Protection Block 1
  5175                           ;	EBTR1 = 0x1, unprogrammed default
  5176                           ;	Table Read Protection Block 2
  5177                           ;	EBTR2 = 0x1, unprogrammed default
  5178                           ;	Table Read Protection Block 3
  5179                           ;	EBTR3 = 0x1, unprogrammed default
  5180                           ;	Table Read Protection Block 4
  5181                           ;	EBTR4 = 0x1, unprogrammed default
  5182                           ;	Table Read Protection Block 5
  5183                           ;	EBTR5 = 0x1, unprogrammed default
  5184                           ;	Table Read Protection Block 6
  5185                           ;	EBTR6 = 0x1, unprogrammed default
  5186                           ;	Table Read Protection Block 7
  5187                           ;	EBTR7 = 0x1, unprogrammed default
  5188   30000A                     	org	3145738
  5189   30000A  FF                 	db	255
  5190                           
  5191                           ;Config register CONFIG6H @ 0x30000B
  5192                           ;	unspecified, using default values
  5193                           ;	Boot Block Table Read Protection bit
  5194                           ;	EBTRB = 0x1, unprogrammed default
  5195   30000B                     	org	3145739
  5196   30000B  FF                 	db	255
  5197                           tosu	equ	0xFFF
  5198                           tosh	equ	0xFFE
  5199                           tosl	equ	0xFFD
  5200                           stkptr	equ	0xFFC
  5201                           pclatu	equ	0xFFB
  5202                           pclath	equ	0xFFA
  5203                           pcl	equ	0xFF9
  5204                           tblptru	equ	0xFF8
  5205                           tblptrh	equ	0xFF7
  5206                           tblptrl	equ	0xFF6
  5207                           tablat	equ	0xFF5
  5208                           prodh	equ	0xFF4
  5209                           prodl	equ	0xFF3
  5210                           indf0	equ	0xFEF
  5211                           postinc0	equ	0xFEE
  5212                           postdec0	equ	0xFED
  5213                           preinc0	equ	0xFEC
  5214                           plusw0	equ	0xFEB
  5215                           fsr0h	equ	0xFEA
  5216                           fsr0l	equ	0xFE9
  5217                           wreg	equ	0xFE8
  5218                           indf1	equ	0xFE7
  5219                           postinc1	equ	0xFE6
  5220                           postdec1	equ	0xFE5
  5221                           preinc1	equ	0xFE4
  5222                           plusw1	equ	0xFE3
  5223                           fsr1h	equ	0xFE2
  5224                           fsr1l	equ	0xFE1
  5225                           bsr	equ	0xFE0
  5226                           indf2	equ	0xFDF
  5227                           postinc2	equ	0xFDE
  5228                           postdec2	equ	0xFDD
  5229                           preinc2	equ	0xFDC
  5230                           plusw2	equ	0xFDB
  5231                           fsr2h	equ	0xFDA
  5232                           fsr2l	equ	0xFD9
  5233                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     27     150
    BANK1           256    158     158
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2197$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2144$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2144$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK1[50]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S579DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S579DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_write16bitTMR0val

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               209   209      0   11165
                                             25 BANK0      2     2      0
                                              0 BANK1    158   158      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
                         _color_read
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                        _setMotorPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             64 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _setMotorPWM                                         11     9      2    2551
                                             16 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     496
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             13 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     196
                  _write16bitTMR0val
 ---------------------------------------------------------------------------------
 (10) _write16bitTMR0val                                   2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _write16bitTMR0val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9E      9E       7       61.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      96       5       93.8%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      54        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhhlh      1B      0       0      33        0.0%
BITBIGSFRhhl        17      0       0      35        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllll      B      0       0      52        0.0%
BITBIGSFRllllll      9      0       0      51        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     190      55        0.0%
DATA                 0      0     190       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 02:33:26 2022

               _color_read_Red 1D7C                _color_read_Blue 1E6C                             l33 1CD6  
                           l42 1DCA                             l51 1C02                             l36 208A  
                           l45 1E6A                             l39 1E1A                             l48 1EBA  
                           l58 1B5C                             l92 201C                             l95 201E  
                           l98 2044                   ___awdiv@sign 000E            ___wmul@multiplicand 0005  
             _color_read_Green 1E1C              ??_Interrupts_init 0003                            l101 2130  
                          l110 2106                            l104 211C                            l113 1F82  
                          l107 2126                            l231 1F40                            l316 2112  
                          l180 11D4                            l181 127E                            l238 14C6  
                          l327 20AA                            l503 164E                            l176 11BA  
                          l177 11CE                            l380 20FA                            l620 1A9E  
                          l516 17B2                            l368 20C8                            l377 20E6  
                          l386 1FF2                            l389 206A                            u810 1924  
                          u811 1920                            u900 1584                            u820 1936  
                          u901 1580                            u821 1932                            u910 15C4  
                          u830 195E                            u911 15C0                            u831 195A  
                          u920 160E                            u840 1994                            u921 160A  
                          u841 1990                            u930 1662                            u850 1EFE  
                          u931 165E                            u851 1EFA                            u860 14DA  
                          u940 1694                            u861 14D6                            u941 1690  
                          u870 150C                            u950 16D2                            u871 1508  
                          u951 16CE                            u960 16FC                            u881 1536  
                          u961 16F8                            u890 155A                            u970 172A  
                          u891 1556                            u971 1726                            u980 1772  
                          u981 176E                            u990 1C12                            u991 1C0E  
                          _abs 1F84                            _pad 1C04                            wreg 000FE8  
                         l1100 0EA6                           l1101 0EEC                           l1112 108C  
                         l2001 16DA                           l2011 175C                           l2003 16EE  
                         ?_abs 0015                           l1132 1FC2                           l2101 2102  
                         l2005 16FC                           l2013 1762                           l2021 1C04  
                         l1125 1D7A                           l2103 211E                           l2111 1F44  
                         l2015 1772                           l2007 172A                           l2031 1C4A  
                         l2023 1C12                           l1119 1910                           l1144 19DA  
                         l1152 1EFE                           l2041 202E                           l2105 2122  
                         l2121 1F80                           l2113 1F48                           l2017 1792  
                         l2009 174A                           l1129 1FBA                           l2033 1C68  
                         l2025 1C1E                           l2115 1F50                           l2107 2114  
                         l2211 19FA                           l2203 19DC                           l2035 1F84  
                         l1155 213C                           l2027 1C32                           l2051 0E76  
                         l2043 0E12                           l2131 17F8                           l1067 1D28  
                         l2301 1CD4                           l2117 1F58                           l2109 2118  
                         l2221 1A2E                           l2213 1A08                           l2205 19E0  
                         l2037 1F9E                           l1093 1C7C                           l2029 1C46  
                         l2061 0ED4                           l2053 0E92                           l2045 0E32  
                         l2141 18A2                           l2133 17FC                           l2125 17B4  
                         l2039 201E                           l2119 1F7E                           l2311 1BD2  
                         l2303 1B5E                           l2231 1A68                           l2223 1A36  
                         l2215 1A10                           l2207 19EE                           l2071 0F02  
                         l2063 0EE0                           l2055 0EAE                           l2047 0E46  
                         l2135 180C                           l2127 17DC                           l2161 2006  
                         l2321 1B14                           l2313 1AA0                           l2305 1B72  
                         l2241 1A8E                           l2233 1A70                           l2225 1A3E  
                         l2217 1A14                           l2209 19F6                           l1089 1C26  
                         l2081 100E                           l2073 0F84                           l2065 0EE8  
                         l2057 0EBE                           l2049 0E56                           l2145 18D2  
                         l2137 182C                           l2129 17EA                           l1098 0E9E  
                         l2163 2008                           l2155 1FF4                           l2323 1B2A  
                         l2315 1ADC                           l2171 1E12                           l2307 1B8A  
                         l2243 1A96                           l2235 1A72                           l2227 1A4C  
                         l2219 1A1C                           l2091 106C                           l2083 102C  
                         l2075 0F8A                           l2067 0EF4                           l2059 0EC4  
                         l2139 184C                           l2251 1D52                           l2165 200A  
                         l2157 1FFE                           l2261 1C8C                           l2325 1B40  
                         l2317 1AF2                           l2181 1E1C                           l2309 1BBA  
                         l2341 1F3C                           l2333 1F00                           l2237 1A78  
                         l2229 1A52                           l2085 1046                           l2077 0F90  
                         l2069 0EFC                           l2149 18E4                           l2253 1D72  
                         l2351 209E                           l2159 2004                           l2095 2128  
                         l2167 206E                           l2271 1CB4                           l2263 1C9C  
                         l2327 1B4C                           l2319 1B08                           l2183 1E62  
                         l2175 1D7C                           l2343 1F3E                           l2335 1F10  
                         l2239 1A7E                           l2087 1056                           l2079 0FF4  
                         l2247 1D2A                           l2345 2108                           l2353 20A8  
                         l2097 212C                           l2281 1CBE                           l2273 1CB6  
                         l2265 1CA6                           l2257 1C7E                           l2329 1B54  
                         l2169 1DCC                           l2177 1DC2                           l2337 1F24  
                         l2361 20C2                           l2193 20E6                           l2089 105C  
                         l2249 1D36                           l2347 208C                           l2099 20FE  
                         l2291 1CC8                           l2283 1CC0                           l2275 1CB8  
                         l2267 1CB0                           l2259 1C82                           l2187 1E6C  
                         l2339 1F28                           l2363 20C4                           l2355 20AC  
                         l2195 20F6                           l2371 1372                           l2349 2094  
                         l2293 1CCA                           l2285 1CC2                           l2277 1CBA  
                         l2269 1CB2                           l2189 1EB2                           l2365 20C6  
                         l2357 20B6                           l2197 2046                           l2373 13B8  
                         l2381 1CD8                           l2701 115C                           l2295 1CCC  
                         l2287 1CC4                           l2279 1CBC                           l2359 20B8  
                         l2199 2062                           l2375 13D8                           l2367 12F4  
                         l2383 1CEA                           l2711 11C8                           l2703 1168  
                         l2297 1CCE                           l2289 1CC6                           l2393 1FC4  
                         l2377 13F4                           l2369 1310                           l1921 1924  
                         l2385 1CF2                           l2721 124A                           l2713 11E2  
                         l2705 117C                           l2299 1CD2                           l2395 1FC8  
                         l2379 145E                           l1923 1936                           l2387 1CFA  
                         l2723 124E                           l2715 11F4                           l2731 1298  
                         l2707 1180                           l2397 1FD6                           l1941 14C8  
                         l1925 1940                           l1933 1EBC                           l2389 1D16  
                         l2741 12CC                           l2725 1256                           l2717 1214  
                         l2733 12B0                           l2709 1188                           l2661 109E  
                         l2399 1FDA                           l1951 150C                           l1943 14CC  
                         l1927 195E                           l1919 1912                           l1935 1EC8  
                         l2743 12D0                           l2735 12C4                           l2727 126A  
                         l2719 1230                           l2671 10AE                           l2663 10A2  
                         l1961 1562                           l1953 152C                           l1945 14DA  
                         l1929 1994                           l1937 1EDA                           l2729 128C  
                         l2681 10CC                           l2673 10B4                           l2665 10A6  
                         l2657 108E                           l1971 15E4                           l1963 1576  
                         l1955 1530                           l1947 14FA                           l1939 1EDE  
                         l2691 10F8                           l2683 10D4                           l2675 10B8  
                         l2667 10AA                           l2659 1092                           l1981 162E  
                         l1973 15E6                           l1965 1584                           l1957 153C  
                         l1949 14FE                           l2693 1104                           l2685 10D8  
                         l2677 10C0                           l2669 10AE                           ?_pad 0013  
                         l1975 15F8                           l1967 1596                           l1959 155A  
                         l1991 1682                           l2695 1110                           l2687 10EC  
                         l2679 10C8                           l1969 15C4                           l1977 15FE  
                         l1993 1686                           l1985 1650                           l2697 111A  
                         l2689 10F0                           l1979 160E                           l1995 1694  
                         l1987 1654                           l2699 1126                           l1997 16B4  
                         l1989 1662                           l1999 16D2                           STR_1 0E01  
                         u1000 1C68                           u1001 1C64                           u1010 1F9E  
                         u1011 1F9A                           u1020 202E                           u1100 100E  
                         u1021 202A                           u1101 100A                           u1030 2044  
                         u1110 102C                           u1031 2040                           u1111 1028  
                         u1200 19EE                           u1120 1046                           u1040 0E42  
                         u1201 19EA                           u1121 1042                           u1041 0E3C  
                         u1210 1A08                           u1130 1056                           u1050 0E44  
                         u1211 1A04                           u1131 1052                           u1300 1B40  
                         u1140 1F6C                           u1220 1A2E                           u1060 0E56  
                         u1301 1B3C                           u1141 1F64                           u1221 1A2A  
                         u1061 0E52                           u1230 1A4C                           u1310 1310  
                         u1070 0E92                           u1231 1A48                           u1311 130C  
                         u1071 0E8E                           u1240 1A68                           u1320 13F4  
                         u1080 0EBE                           u1160 17DC                           u1241 1A64  
                         u1321 13F0                           u1081 0EBA                           u1161 17D8  
                         u1250 1A8E                           u1090 0ED4                           u1170 182C  
                         u1251 1A8A                           u1091 0ED0                           u1171 1828  
                         u1180 184C                           u1260 1D72                           u1181 1848  
                         u1261 1D6E                           u1270 1AF2                           u1158 1F6E  
                         u1190 20F6                           u1350 1FF2                           u1334 144E  
                         u1271 1AEE                           u1191 20F2                           u1351 1FEE  
                         u1335 144A                           u1280 1B08                           u1344 14B8  
                         u1600 11E2                   _BAUD4CONbits 000EE9                           u1281 1B04  
                         u1345 14B4                           u1601 11DE                           _LATE 000F7D  
                         u1290 1B2A                           u1610 11F4                           u1291 1B26  
                         u1611 11F0                           _LATG 000F7F                           u1620 126A  
                         u1621 1266                           u1630 128C                           u1631 1288  
                         u1640 12C4                           u1560 117C                           u1641 12C0  
                         u1561 1178                           u1650 12EC                           u1570 11A6  
                         _T2PR 000FBC                           u1707 1C92                           u1651 12E8  
                         u1571 119C                           u1580 11BA                           u1581 11B6  
                         u1590 11C8                           u1591 11C4                           u1578 11AA  
                         u1667 12A4                           u1677 1B7C                           u1687 1BAC  
                         u1697 1BDC                    main@readout 0100                           abs@a 0015  
                         _dbuf 00BB                           _main 108E                           _dtoa 0E12  
                         _prec 00B2                           pad@i 001A                           pad@p 0017  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001C  
                         fsr2l 000FD9                           btemp 005D                           prodh 000FF4  
                         prodl 000FF3                           start 0054         __end_of_color_read_Red 1DCC  
              __end_of_HighISR 0054                   ___param_bank 000000                          ??_abs 0017  
                        ??_pad 0019                __end_of___aodiv 1650                          ?_main 0001  
                        ?_dtoa 001E                __end_of___aomod 17B4                __end_of___awdiv 1AA0  
      ??_color_read_Luminosity 0009                ___awdiv@divisor 000B                          i2l330 213A  
                        i2l324 0050                ___awdiv@counter 000D                   vfpfcnvrt@fmt 0043  
                        _TMR0H 000FD4                          _TMR0L 000FD3        __end_of_sendCharSerial4 20FC  
   __end_of_I2C_2_Master_Start 2132     __end_of_I2C_2_Master_Write 2108                          _flags 00B8  
                        _fputc 1912                          _fputs 1EBC                          pad@fp 0013  
                        _width 00B0                          _putch 213C                          main@j 0178  
                        main@k 017A                          dtoa@d 0020                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0032                          dtoa@s 0040  
                        dtoa@w 0034                          tablat 000FF5                          ttemp5 005E  
                        ttemp6 0061                          ttemp7 0065                          status 000FD8  
                        wtemp8 005E                __end_of_sprintf 1D2A        __end_of_color_read_Blue 1EBC  
        _I2C_2_Master_RepStart 2114                ?_color_read_Red 0007                __initialization 20CA  
                 __end_of_main 12F4                   __end_of_dtoa 108E                         ??_main 00F4  
                       ??_dtoa 0028                  __activetblptr 000003                   ?_setMotorPWM 0011  
                       ?_fputc 0003                         ?_fputs 000C               ___awdiv@dividend 0009  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RD6PPS 000E70                         i2l2641 000A                         i2l2651 004A  
                       i2l2643 001A                         i2l2645 0028                         i2l2653 004C  
                       i2l2647 0036                         i2l2497 2132                         i2l2649 003C  
                       i2l2499 2136                      ??_HighISR 0003       __end_of_color_click_init 1CD8  
                       _RX4PPS 000E15                         _TX4REG 000EE4                  ??_Timer0_init 0003  
    color_processor_easy@color 0005                   vfprintf@cfmt 0059                      ??___aodiv 0013  
                    ??___aomod 0013                         ___wmul 2046                      ??___awdiv 000D  
                       clear_0 20D0               ___awdiv@quotient 000F                         isa$std 000001  
                       pad@buf 0015                         dtoa@fp 001E                  main@time_flag 0170  
                       fputc@c 0003                         fputs@c 0010                         fputs@i 0011  
                       fputs@s 000C                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 1D7C              ??_initDCmotorsPWM 0005  
                    ??_sprintf 005B                     __accesstop 0060        __end_of__initialization 20DA  
     __end_of_color_read_Green 1E6C         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0007                _Interrupts_init 2108                 __pcstackCOMRAM 0001  
                color_read@rgb 000E                  __end_of_fputc 19DC                  __end_of_fputs 1F00  
                __end_of_putch 213E            __end_of_Timer0_init 20AC                        ??_fputc 0007  
                      ??_fputs 0010                        ??_putch 0003                     __pbssBANK0 0060  
            _color_writetoaddr 206C                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0005  
                      ?___wmul 0003                 main@color_flag 016E                 main@color_name 0176  
          ??_color_writetoaddr 0006  __end_of_color_read_Luminosity 1E1C                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _PWM6DCH 000FA3                        _PWM7DCH 000FA0  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                     _color_read 1B5E  
      __end_of_Interrupts_init 2114         color_writetoaddr@value 0005               ??_color_read_Red 0009  
                      _HighISR 0008      __end_of_color_writetoaddr 208C       color_read_Luminosity@tmp 000C  
           _I2C_2_Master_Start 2128                     _initUSART4 20AC             _I2C_2_Master_Write 20FC  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000C  
                  _Timer0_init 208C        sendStringSerial4@string 0004                        ___aodiv 14C8  
                      ___aomod 1650                        ___awdiv 19DC            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                     _off_period 00B4                      ?_vfprintf 0053  
                 __psmallconst 0E00                        __pcinit 20CA                        __ramtop 0E00  
                      __ptext0 108E                        __ptext1 1CD8                        __ptext2 1D2A  
                      __ptext3 17B4                        __ptext4 0E12                        __ptext5 1C04  
                      __ptext6 1EBC                        __ptext7 1912                        __ptext8 213C  
                      __ptext9 1F84                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005C                        _sprintf 1CD8           ??_I2C_2_Master_Start 0004  
         ??_I2C_2_Master_Write 0004           end_of_initialization 20DA             setMotorPWM@PWMduty 001A  
                      fputc@fp 0005                        fputs@fp 000E              ?_color_click_init 0001  
 __end_of_color_processor_easy 1B5E             ??_color_click_init 0007              __end_of_vfpfcnvrt 1912  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0049  
                   ??_vfprintf 0059                _initDCmotorsPWM 1F00                      _PORTFbits 000F8E  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ?_color_read 000E       color_writetoaddr@address 0006        ??_I2C_2_Master_RepStart 0004  
             ?_Interrupts_init 0001                   _EUSART4RXbuf 009C                   _EUSART4TXbuf 0060  
            ?_color_read_Green 0007                    ?_initUSART4 0001      sendCharSerial4@charToSend 0003  
                   main@motorL 018C                     main@motorR 0195             ??_color_read_Green 0009  
                  vfpfcnvrt@ap 0045                    vfpfcnvrt@cp 0051                    vfpfcnvrt@fp 0041  
               __end_of___wmul 206C            start_initialization 20CA                    __end_of_abs 1FC4  
                  __end_of_pad 1C7E                  _TxBufWriteCnt 00BA            color_read_Green@tmp 000C  
      __end_of_initDCmotorsPWM 1F42                    vfprintf@fmt 0055                       ??___wmul 0007  
                  __pbssCOMRAM 005B           _color_processor_easy 1AA0                  __pcstackBANK0 00DB  
                __pcstackBANK1 0100               ___aodiv@dividend 0003             main@RGB_calibrated 0184  
                     ?_HighISR 0001        color_processor_easy@rgb 0003          color_processor_easy@a 0009  
        color_processor_easy@b 000B          color_processor_easy@c 0007                      _dtoa$2225 0030  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___aodiv 0003  
                     ?___aomod 0003                       ?___awdiv 0009               ___aodiv@quotient 0015  
         I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006                    __smallconst 0E00  
            _I2C_2_Master_Idle 201E          ?_color_processor_easy 0003               main@RGB_recorded 017C  
            _I2C_2_Master_Init 1FF4              _I2C_2_Master_Read 1F42              _I2C_2_Master_Stop 211E  
                 _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0013          _color_read_Luminosity 1DCC  
           ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0003                       ?_sprintf 00DB  
            _sendStringSerial4 1FC4            ??_I2C_2_Master_Idle 0003            ??_I2C_2_Master_Init 0003  
          ??_I2C_2_Master_Read 0004                 ___wmul@product 0007            ??_I2C_2_Master_Stop 0004  
                     _LATCbits 000F7B                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                      _on_period 00B6                       _LATGbits 000F7F  
                     _LATHbits 000F80                       _PIE0bits 000E29             ?_sendStringSerial4 0004  
                     i2u154_40 001A                       i2u154_41 0016                       i2u155_40 0028  
                     i2u155_41 0024                       _PIR0bits 000E33                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0003              ??_sendCharSerial4 0003                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0006                       _SSP2STAT 000ED8                      _vfpfcnvrt 17B4  
            main@color_storage 0132      __end_of_I2C_2_Master_Idle 2046      __end_of_I2C_2_Master_Init 201E  
    __end_of_I2C_2_Master_Read 1F84              ___wmul@multiplier 0003      __end_of_I2C_2_Master_Stop 2128  
         write16bitTMR0val@tmp 0001                   setMotorPWM@m 0011    I2C_2_Master_Write@data_byte 0004  
            _write16bitTMR0val 2132              ??_color_read_Blue 0009                   _TxBufReadCnt 00B9  
           ?_write16bitTMR0val 0001                   ??_color_read 0010      __end_of_sendStringSerial4 1FF4  
__end_of_I2C_2_Master_RepStart 211E             color_read_Blue@tmp 000C            ??_write16bitTMR0val 0003  
          __end_of_setMotorPWM 14C8                   ??_initUSART4 0003               main@time_storage 0150  
                     __Hrparam 0000                     vfprintf@ap 0057                       __Lrparam 0000  
                   vfprintf@fp 0053                     ?_vfpfcnvrt 0041             __end_of_color_read 1C04  
              ___aodiv@divisor 000B                ___aodiv@counter 0013      __end_of_write16bitTMR0val 213C  
                   _ANSELDbits 000EA7         ??_color_processor_easy 0005                     _ANSELFbits 000EB4  
                   sprintf@fmt 00DD                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
       ?_color_read_Luminosity 0007             __end_of_initUSART4 20CA                       __ptext10 1650  
                     __ptext11 14C8                       __ptext20 1D7C                       __ptext12 12F4  
                     __ptext21 1DCC                       __ptext13 2046                       __ptext30 211E  
                     __ptext22 1E1C                       __ptext14 19DC                       __ptext31 2128  
                     __ptext23 1E6C                       __ptext15 1FC4                       __ptext32 201E  
                     __ptext24 2114                       __ptext16 20E4                       __ptext33 1FF4  
                     __ptext25 1F42                       __ptext17 20AC                       __ptext34 208C  
                     __ptext26 1AA0                       __ptext18 1F00                       __ptext35 2108  
                     __ptext27 1C7E                       __ptext19 1B5E                       __ptext28 206C  
                     __ptext37 2132                       __ptext29 20FC                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005D                       _vfprintf 1D2A                       main@home 0174  
                     main@time 0172               ___aomod@dividend 0003                     _INTCONbits 000FF2  
                  _setMotorPWM 12F4                    _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1  
                     intlevel2 0000                      sprintf@ap 00E7                ___aomod@divisor 000B  
                  ??_vfpfcnvrt 0047                ___aomod@counter 0013               _color_click_init 1C7E  
                     sprintf@f 00E9                       sprintf@s 00DB                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0014  
              _sendCharSerial4 20E4                   ___aomod@sign 0014  
