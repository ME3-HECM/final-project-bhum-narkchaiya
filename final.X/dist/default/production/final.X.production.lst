

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 13 12:44:56 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.35
    56                           ; Generated 05/05/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _TX4REG	set	3812
    91   000000                     _RC4STAbits	set	3815
    92   000000                     _SP4BRGH	set	3814
    93   000000                     _T0CON0bits	set	4053
    94   000000                     _T0CON1bits	set	4054
    95   000000                     _TMR0H	set	4052
    96   000000                     _TRISGbits	set	3975
    97   000000                     _TRISEbits	set	3973
    98   000000                     _LATFbits	set	3966
    99   000000                     _TRISFbits	set	3974
   100   000000                     _LATG	set	3967
   101   000000                     _LATE	set	3965
   102   000000                     _SSP2CON2bits	set	3802
   103   000000                     _LATGbits	set	3967
   104   000000                     _LATEbits	set	3965
   105   000000                     _RX4PPS	set	3605
   106   000000                     _SSP2CLKPPS	set	3612
   107   000000                     _SSP2DATPPS	set	3613
   108   000000                     _ANSELDbits	set	3751
   109   000000                     _ANSELFbits	set	3764
   110   000000                     _LATDbits	set	3964
   111   000000                     _LATHbits	set	3968
   112   000000                     _TRISDbits	set	3972
   113   000000                     _TRISHbits	set	3976
   114   000000                     _PORTFbits	set	3982
   115   000000                     _PWM7DCH	set	4000
   116   000000                     _PWM6DCH	set	4003
   117   000000                     _TRISCbits	set	3971
   118   000000                     _SSP2BUF	set	3797
   119   000000                     _SSP2ADD	set	3798
   120   000000                     _SSP2CON1bits	set	3801
   121   000000                     _RC4REG	set	3811
   122   000000                     _SP4BRGL	set	3813
   123   000000                     _TX4STAbits	set	3816
   124   000000                     _BAUD4CONbits	set	3817
   125   000000                     _LATCbits	set	3963
   126   000000                     _SSP2CON2	set	3802
   127   000000                     _SSP2STAT	set	3800
   128   000000                     _IPR0bits	set	3615
   129   000000                     _PIE0bits	set	3625
   130   000000                     _RC7PPS	set	3689
   131   000000                     _RD5PPS	set	3695
   132   000000                     _RE2PPS	set	3700
   133   000000                     _RD6PPS	set	3696
   134   000000                     _PWM6CONbits	set	4004
   135   000000                     _T2PR	set	4028
   136   000000                     _T2CONbits	set	4029
   137   000000                     _INTCONbits	set	4082
   138   000000                     _PWM7CONbits	set	4001
   139   000000                     _TMR0L	set	4051
   140   000000                     _T2CLKCONbits	set	4031
   141   000000                     _T2HLTbits	set	4030
   142   000000                     _PIE2bits	set	3627
   143   000000                     _PIR0bits	set	3635
   144   000000                     _IPR2bits	set	3617
   145   000000                     _PIR2bits	set	3637
   146   000000                     _PIR4bits	set	3639
   147   000000                     _RC0PPS	set	3682
   148                           
   149                           ; #config settings
   150                           
   151                           	psect	cinit
   152   001D84                     __pcinit:
   153                           	callstack 0
   154   001D84                     start_initialization:
   155                           	callstack 0
   156   001D84                     __initialization:
   157                           	callstack 0
   158                           
   159                           ; Clear objects allocated to BANK1 (62 bytes)
   160   001D84  EE01  F0A6         	lfsr	0,__pbssBANK1
   161   001D88  0E3E               	movlw	62
   162   001D8A                     clear_0:
   163   001D8A  6AEE               	clrf	postinc0,c
   164   001D8C  06E8               	decf	wreg,f,c
   165   001D8E  E1FD               	bnz	clear_0
   166                           
   167                           ; Clear objects allocated to BANK0 (60 bytes)
   168   001D90  EE00  F060         	lfsr	0,__pbssBANK0
   169   001D94  0E3C               	movlw	60
   170   001D96                     clear_1:
   171   001D96  6AEE               	clrf	postinc0,c
   172   001D98  06E8               	decf	wreg,f,c
   173   001D9A  E1FD               	bnz	clear_1
   174                           
   175                           ; Clear objects allocated to COMRAM (28 bytes)
   176   001D9C  EE00  F03A         	lfsr	0,__pbssCOMRAM
   177   001DA0  0E1C               	movlw	28
   178   001DA2                     clear_2:
   179   001DA2  6AEE               	clrf	postinc0,c
   180   001DA4  06E8               	decf	wreg,f,c
   181   001DA6  E1FD               	bnz	clear_2
   182   001DA8                     end_of_initialization:
   183                           	callstack 0
   184   001DA8                     __end_of__initialization:
   185                           	callstack 0
   186   001DA8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   187   001DAA  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   188   001DAC  0100               	movlb	0
   189   001DAE  EF21  F000         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMRAM
   192   00003A                     __pbssCOMRAM:
   193                           	callstack 0
   194   00003A                     _EUSART4RXbuf:
   195                           	callstack 0
   196   00003A                     	ds	20
   197   00004E                     _off_period:
   198                           	callstack 0
   199   00004E                     	ds	2
   200   000050                     _on_period:
   201                           	callstack 0
   202   000050                     	ds	2
   203   000052                     _TxBufReadCnt:
   204                           	callstack 0
   205   000052                     	ds	1
   206   000053                     _TxBufWriteCnt:
   207                           	callstack 0
   208   000053                     	ds	1
   209   000054                     _RxBufReadCnt:
   210                           	callstack 0
   211   000054                     	ds	1
   212   000055                     _RxBufWriteCnt:
   213                           	callstack 0
   214   000055                     	ds	1
   215                           
   216                           	psect	bssBANK0
   217   000060                     __pbssBANK0:
   218                           	callstack 0
   219   000060                     _EUSART4TXbuf:
   220                           	callstack 0
   221   000060                     	ds	60
   222                           
   223                           	psect	bssBANK1
   224   0001A6                     __pbssBANK1:
   225                           	callstack 0
   226   0001A6                     	ds	30
   227   0001C4                     	ds	30
   228   0001E2                     _time:
   229                           	callstack 0
   230   0001E2                     	ds	2
   231                           
   232                           	psect	cstackBANK1
   233   000100                     __pcstackBANK1:
   234                           	callstack 0
   235   000100                     main@color_calibrated:
   236                           	callstack 0
   237                           
   238                           ; 64 bytes @ 0x0
   239   000100                     	ds	64
   240   000140                     main@color_path:
   241                           	callstack 0
   242                           
   243                           ; 30 bytes @ 0x40
   244   000140                     	ds	30
   245   00015E                     main@time_path:
   246                           	callstack 0
   247                           
   248                           ; 30 bytes @ 0x5E
   249   00015E                     	ds	30
   250   00017C                     main@lowerbound_calibrated:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x7C
   254   00017C                     	ds	2
   255   00017E                     main@upperbound_calibrated:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x7E
   259   00017E                     	ds	2
   260   000180                     main@color_flag:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x80
   264   000180                     	ds	2
   265   000182                     main@time_return:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x82
   269   000182                     	ds	2
   270   000184                     main@j:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x84
   274   000184                     	ds	2
   275   000186                     main@m:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x86
   279   000186                     	ds	2
   280   000188                     main@color_name:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x88
   284   000188                     	ds	2
   285   00018A                     main@k:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x8A
   289   00018A                     	ds	2
   290   00018C                     main@RGB_recorded:
   291                           	callstack 0
   292                           
   293                           ; 8 bytes @ 0x8C
   294   00018C                     	ds	8
   295   000194                     main@motorL:
   296                           	callstack 0
   297                           
   298                           ; 9 bytes @ 0x94
   299   000194                     	ds	9
   300   00019D                     main@motorR:
   301                           	callstack 0
   302                           
   303                           ; 9 bytes @ 0x9D
   304   00019D                     	ds	9
   305                           
   306                           	psect	cstackCOMRAM
   307   000001                     __pcstackCOMRAM:
   308                           	callstack 0
   309   000001                     ??_I2C_2_Master_Idle:
   310   000001                     ?_color_processor_easy:
   311                           	callstack 0
   312   000001                     ?___wmul:
   313                           	callstack 0
   314   000001                     ?___xxtofl:
   315                           	callstack 0
   316   000001                     color_processor_easy@rgb:
   317                           	callstack 0
   318   000001                     initDCmotorsPWM@PWMperiod:
   319                           	callstack 0
   320   000001                     ___wmul@multiplier:
   321                           	callstack 0
   322   000001                     ___xxtofl@val:
   323                           	callstack 0
   324                           
   325                           ; 4 bytes @ 0x0
   326   000001                     	ds	1
   327   000002                     ??_I2C_2_Master_Read:
   328   000002                     I2C_2_Master_Write@data_byte:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x1
   332   000002                     	ds	1
   333   000003                     color_writetoaddr@value:
   334                           	callstack 0
   335   000003                     I2C_2_Master_Read@ack:
   336                           	callstack 0
   337   000003                     color_processor_easy@calibrated:
   338                           	callstack 0
   339   000003                     ___wmul@multiplicand:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x2
   343   000003                     	ds	1
   344   000004                     color_writetoaddr@address:
   345                           	callstack 0
   346   000004                     I2C_2_Master_Read@tmp:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x3
   350   000004                     	ds	1
   351   000005                     ??_color_click_init:
   352   000005                     ??_color_processor_easy:
   353   000005                     ??___xxtofl:
   354   000005                     ?_color_read_Luminosity:
   355                           	callstack 0
   356   000005                     ?_color_read_Red:
   357                           	callstack 0
   358   000005                     ?_color_read_Green:
   359                           	callstack 0
   360   000005                     ?_color_read_Blue:
   361                           	callstack 0
   362   000005                     ___wmul@product:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x4
   366   000005                     	ds	2
   367   000007                     ??_color_read_Luminosity:
   368   000007                     ??_color_read_Red:
   369   000007                     ??_color_read_Green:
   370   000007                     ??_color_read_Blue:
   371   000007                     ?___awdiv:
   372                           	callstack 0
   373   000007                     ___awdiv@dividend:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x6
   377   000007                     	ds	2
   378   000009                     ___xxtofl@sign:
   379                           	callstack 0
   380   000009                     color_processor_easy@l:
   381                           	callstack 0
   382   000009                     ___awdiv@divisor:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x8
   386   000009                     	ds	1
   387   00000A                     ___xxtofl@exp:
   388                           	callstack 0
   389   00000A                     color_read_Luminosity@tmp:
   390                           	callstack 0
   391   00000A                     color_read_Red@tmp:
   392                           	callstack 0
   393   00000A                     color_read_Green@tmp:
   394                           	callstack 0
   395   00000A                     color_read_Blue@tmp:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x9
   399   00000A                     	ds	1
   400   00000B                     ___awdiv@counter:
   401                           	callstack 0
   402   00000B                     color_processor_easy@r:
   403                           	callstack 0
   404   00000B                     ___xxtofl@arg:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0xA
   408   00000B                     	ds	1
   409   00000C                     ___awdiv@sign:
   410                           	callstack 0
   411   00000C                     color_read@rgb:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0xB
   415   00000C                     	ds	1
   416   00000D                     color_processor_easy@g:
   417                           	callstack 0
   418   00000D                     ___awdiv@quotient:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0xC
   422   00000D                     	ds	1
   423   00000E                     ??_color_read:
   424                           
   425                           ; 1 bytes @ 0xD
   426   00000E                     	ds	1
   427   00000F                     ?___flmul:
   428                           	callstack 0
   429   00000F                     color_processor_easy@b:
   430                           	callstack 0
   431   00000F                     setMotorPWM@m:
   432                           	callstack 0
   433   00000F                     ___flmul@b:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0xE
   437   00000F                     	ds	2
   438   000011                     ??_setMotorPWM:
   439                           
   440                           ; 1 bytes @ 0x10
   441   000011                     	ds	2
   442   000013                     ___flmul@a:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x12
   446   000013                     	ds	4
   447   000017                     ??___flmul:
   448                           
   449                           ; 1 bytes @ 0x16
   450   000017                     	ds	1
   451   000018                     setMotorPWM@PWMduty:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x17
   455   000018                     	ds	2
   456   00001A                     stop@mL:
   457                           	callstack 0
   458   00001A                     forward@mL:
   459                           	callstack 0
   460   00001A                     reverse_fromcard@mL:
   461                           	callstack 0
   462   00001A                     reverse_onesquare@mL:
   463                           	callstack 0
   464   00001A                     right_90@mL:
   465                           	callstack 0
   466   00001A                     left_90@mL:
   467                           	callstack 0
   468   00001A                     spin_180@mL:
   469                           	callstack 0
   470   00001A                     right_135@mL:
   471                           	callstack 0
   472   00001A                     left_135@mL:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x19
   476   00001A                     	ds	1
   477   00001B                     ___flmul@sign:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x1A
   481   00001B                     	ds	1
   482   00001C                     stop@mR:
   483                           	callstack 0
   484   00001C                     forward@mR:
   485                           	callstack 0
   486   00001C                     reverse_fromcard@mR:
   487                           	callstack 0
   488   00001C                     reverse_onesquare@mR:
   489                           	callstack 0
   490   00001C                     right_90@mR:
   491                           	callstack 0
   492   00001C                     left_90@mR:
   493                           	callstack 0
   494   00001C                     spin_180@mR:
   495                           	callstack 0
   496   00001C                     right_135@mR:
   497                           	callstack 0
   498   00001C                     left_135@mR:
   499                           	callstack 0
   500   00001C                     ___flmul@grs:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x1B
   504   00001C                     	ds	2
   505   00001E                     ??_stop:
   506   00001E                     ??_spin_180:
   507   00001E                     ??_forward:
   508   00001E                     ??_reverse_fromcard:
   509   00001E                     ??_reverse_onesquare:
   510   00001E                     ??_right_90:
   511   00001E                     ??_left_90:
   512   00001E                     ??_right_135:
   513   00001E                     ??_left_135:
   514                           
   515                           ; 1 bytes @ 0x1D
   516   00001E                     	ds	1
   517   00001F                     stop@i:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1E
   521   00001F                     	ds	1
   522   000020                     ___flmul@aexp:
   523                           	callstack 0
   524   000020                     forward@i:
   525                           	callstack 0
   526   000020                     reverse_fromcard@i:
   527                           	callstack 0
   528   000020                     reverse_onesquare@i:
   529                           	callstack 0
   530   000020                     right_90@i:
   531                           	callstack 0
   532   000020                     left_90@i:
   533                           	callstack 0
   534   000020                     spin_180@i:
   535                           	callstack 0
   536   000020                     right_135@i:
   537                           	callstack 0
   538   000020                     left_135@i:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1F
   542   000020                     	ds	1
   543   000021                     ___flmul@bexp:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x20
   547   000021                     	ds	1
   548   000022                     motor_action@color:
   549                           	callstack 0
   550   000022                     ___flmul@prod:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x21
   554   000022                     	ds	2
   555   000024                     motor_action@l:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x23
   559   000024                     	ds	2
   560   000026                     motor_action@r:
   561                           	callstack 0
   562   000026                     ___flmul@temp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x25
   566   000026                     	ds	2
   567   000028                     ??_motor_action:
   568   000028                     ___flge@ff1:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x27
   572   000028                     	ds	4
   573   00002C                     ___flge@ff2:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x2B
   577   00002C                     	ds	4
   578   000030                     ??___flge:
   579                           
   580                           ; 1 bytes @ 0x2F
   581   000030                     	ds	4
   582   000034                     ?_color_processor_hard:
   583                           	callstack 0
   584   000034                     color_processor_hard@rgb:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x33
   588   000034                     	ds	2
   589   000036                     color_processor_hard@calibrated:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x35
   593   000036                     	ds	2
   594   000038                     ??_main:
   595                           
   596                           ; 1 bytes @ 0x37
   597   000038                     	ds	2
   598                           
   599 ;;
   600 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   601 ;;
   602 ;; *************** function _main *****************
   603 ;; Defined at:
   604 ;;		line 20 in file "../main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  k               2  138[BANK1 ] int 
   609 ;;  m               2  134[BANK1 ] int 
   610 ;;  color_calibr   64    0[BANK1 ] int [32]
   611 ;;  time_path      30   94[BANK1 ] unsigned int [15]
   612 ;;  color_path     30   64[BANK1 ] unsigned int [15]
   613 ;;  motorR          9  157[BANK1 ] struct DC_motor
   614 ;;  motorL          9  148[BANK1 ] struct DC_motor
   615 ;;  RGB_recorded    8  140[BANK1 ] struct RGB_val
   616 ;;  L_calibrated    8    0        struct RGB_val
   617 ;;  RGB_calibrat    8    0        struct RGB_val
   618 ;;  color_name      2  136[BANK1 ] unsigned int 
   619 ;;  j               2  132[BANK1 ] int 
   620 ;;  time_return     2  130[BANK1 ] unsigned int 
   621 ;;  color_flag      2  128[BANK1 ] unsigned int 
   622 ;;  upperbound_c    2  126[BANK1 ] unsigned int 
   623 ;;  lowerbound_c    2  124[BANK1 ] unsigned int 
   624 ;;  PWMcycle        1    0        unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   635 ;;      Locals:         0       0     166       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   637 ;;      Totals:         2       0     166       0       0       0       0       0       0       0       0       0       
      +0       0       0
   638 ;;Total ram usage:      168 bytes
   639 ;; Hardware stack levels required when called: 5
   640 ;; This function calls:
   641 ;;		_I2C_2_Master_Init
   642 ;;		_Interrupts_init
   643 ;;		_Timer0_init
   644 ;;		_color_click_init
   645 ;;		_color_processor_easy
   646 ;;		_color_processor_hard
   647 ;;		_color_read
   648 ;;		_forward
   649 ;;		_initDCmotorsPWM
   650 ;;		_initUSART4
   651 ;;		_motor_action
   652 ;;		_setMotorPWM
   653 ;;		_spin_180
   654 ;;		_stop
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661   000042                     __ptext0:
   662                           	callstack 0
   663   000042                     _main:
   664                           	callstack 26
   665   000042                     
   666                           ;../main.c: 22:     color_click_init();
   667   000042  ECB3  F00D         	call	_color_click_init	;wreg free
   668   000046                     
   669                           ;../main.c: 23:     initDCmotorsPWM(20);
   670   000046  0E00               	movlw	0
   671   000048  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   672   00004A  0E14               	movlw	20
   673   00004C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   674   00004E  EC80  F00E         	call	_initDCmotorsPWM	;wreg free
   675   000052                     
   676                           ;../main.c: 24:     Interrupts_init();
   677   000052  EC44  F00F         	call	_Interrupts_init	;wreg free
   678   000056                     
   679                           ;../main.c: 25:     Timer0_init();
   680   000056  EC25  F00F         	call	_Timer0_init	;wreg free
   681   00005A                     
   682                           ;../main.c: 26:     I2C_2_Master_Init();
   683   00005A  ECD9  F00E         	call	_I2C_2_Master_Init	;wreg free
   684   00005E                     
   685                           ;../main.c: 27:     initUSART4();
   686   00005E  EC35  F00F         	call	_initUSART4	;wreg free
   687   000062                     
   688                           ;../main.c: 32:     motorL.power = 0;
   689   000062  0E00               	movlw	0
   690   000064  0101               	movlb	1	; () banked
   691   000066  6F94               	movwf	main@motorL& (0+255),b
   692   000068                     
   693                           ; BSR set to: 1
   694                           ;../main.c: 33:     motorL.direction = 0;
   695   000068  0E00               	movlw	0
   696   00006A  6F95               	movwf	(main@motorL+1)& (0+255),b
   697   00006C                     
   698                           ; BSR set to: 1
   699                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   700   00006C  0EA3               	movlw	163
   701   00006E  6F96               	movwf	(main@motorL+2)& (0+255),b
   702   000070  0E0F               	movlw	15
   703   000072  6F97               	movwf	(main@motorL+3)& (0+255),b
   704   000074                     
   705                           ; BSR set to: 1
   706                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
   707   000074  0E7D               	movlw	125
   708   000076  6F98               	movwf	(main@motorL+4)& (0+255),b
   709   000078  0E0F               	movlw	15
   710   00007A  6F99               	movwf	(main@motorL+5)& (0+255),b
   711   00007C                     
   712                           ; BSR set to: 1
   713                           ;../main.c: 36:     motorL.dir_pin = 4;
   714   00007C  0E04               	movlw	4
   715   00007E  6F9A               	movwf	(main@motorL+6)& (0+255),b
   716   000080                     
   717                           ; BSR set to: 1
   718                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
   719   000080  0E00               	movlw	0
   720   000082  6F9C               	movwf	(main@motorL+8)& (0+255),b
   721   000084  0EC7               	movlw	199
   722   000086  6F9B               	movwf	(main@motorL+7)& (0+255),b
   723   000088                     
   724                           ; BSR set to: 1
   725                           ;../main.c: 38:     motorR.power = 0;
   726   000088  0E00               	movlw	0
   727   00008A  6F9D               	movwf	main@motorR& (0+255),b
   728   00008C                     
   729                           ; BSR set to: 1
   730                           ;../main.c: 39:     motorR.direction = 0;
   731   00008C  0E00               	movlw	0
   732   00008E  6F9E               	movwf	(main@motorR+1)& (0+255),b
   733                           
   734                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   735   000090  0EA0               	movlw	160
   736   000092  6F9F               	movwf	(main@motorR+2)& (0+255),b
   737   000094  0E0F               	movlw	15
   738   000096  6FA0               	movwf	(main@motorR+3)& (0+255),b
   739                           
   740                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
   741   000098  0E7F               	movlw	127
   742   00009A  6FA1               	movwf	(main@motorR+4)& (0+255),b
   743   00009C  0E0F               	movlw	15
   744   00009E  6FA2               	movwf	(main@motorR+5)& (0+255),b
   745   0000A0                     
   746                           ; BSR set to: 1
   747                           ;../main.c: 42:     motorR.dir_pin = 6;
   748   0000A0  0E06               	movlw	6
   749   0000A2  6FA3               	movwf	(main@motorR+6)& (0+255),b
   750   0000A4                     
   751                           ; BSR set to: 1
   752                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
   753   0000A4  0E00               	movlw	0
   754   0000A6  6FA5               	movwf	(main@motorR+8)& (0+255),b
   755   0000A8  0EC7               	movlw	199
   756   0000AA  6FA4               	movwf	(main@motorR+7)& (0+255),b
   757   0000AC                     
   758                           ; BSR set to: 1
   759                           ;../main.c: 44:     setMotorPWM(&motorL);
   760   0000AC  0E94               	movlw	low main@motorL
   761   0000AE  6E0F               	movwf	setMotorPWM@m^0,c
   762   0000B0  0E01               	movlw	high main@motorL
   763   0000B2  6E10               	movwf	(setMotorPWM@m+1)^0,c
   764   0000B4  EC56  F007         	call	_setMotorPWM	;wreg free
   765   0000B8                     
   766                           ;../main.c: 45:     setMotorPWM(&motorR);
   767   0000B8  0E9D               	movlw	low main@motorR
   768   0000BA  6E0F               	movwf	setMotorPWM@m^0,c
   769   0000BC  0E01               	movlw	high main@motorR
   770   0000BE  6E10               	movwf	(setMotorPWM@m+1)^0,c
   771   0000C0  EC56  F007         	call	_setMotorPWM	;wreg free
   772   0000C4                     
   773                           ;../main.c: 48:     unsigned int color_flag;;../main.c: 49:     unsigned int color_name 
      +                          = 0;
   774   0000C4  0E00               	movlw	0
   775   0000C6  0101               	movlb	1	; () banked
   776   0000C8  6F89               	movwf	(main@color_name+1)& (0+255),b
   777   0000CA  0E00               	movlw	0
   778   0000CC  6F88               	movwf	main@color_name& (0+255),b
   779   0000CE                     
   780                           ; BSR set to: 1
   781                           ;../main.c: 50:     unsigned int color_path[15] = {0};
   782   0000CE  EE21  F040         	lfsr	2,main@color_path
   783   0000D2  0E1D               	movlw	29
   784   0000D4                     u1461:
   785   0000D4  6ADE               	clrf	postinc2,c
   786   0000D6  06E8               	decf	wreg,f,c
   787   0000D8  E2FD               	bc	u1461
   788   0000DA                     
   789                           ; BSR set to: 1
   790                           ;../main.c: 51:     int color_calibrated[32];;../main.c: 52:     unsigned int lowerbound
      +                          _calibrated;;../main.c: 53:     unsigned int upperbound_calibrated;;../main.c: 54:     s
      +                          truct RGB_val RGB_calibrated;;../main.c: 55:     struct RGB_val L_calibrated;;../main.c:
      +                           56:     struct RGB_val RGB_recorded;;../main.c: 57:     unsigned int time_path[15] = {0
      +                          };
   791   0000DA  EE21  F05E         	lfsr	2,main@time_path
   792   0000DE  0E1D               	movlw	29
   793   0000E0                     u1471:
   794   0000E0  6ADE               	clrf	postinc2,c
   795   0000E2  06E8               	decf	wreg,f,c
   796   0000E4  E2FD               	bc	u1471
   797   0000E6                     l3086:
   798   0000E6  0E01               	movlw	1
   799   0000E8  A68E               	btfss	142,3,c	;volatile
   800   0000EA  0E00               	movlw	0
   801   0000EC  A48E               	btfss	142,2,c	;volatile
   802   0000EE  0E00               	movlw	0
   803   0000F0  B0E8               	btfsc	wreg,0,c
   804   0000F2  EF7D  F000         	goto	u1481
   805   0000F6  EF81  F000         	goto	u1480
   806   0000FA                     u1481:
   807   0000FA  6A38               	clrf	??_main^0,c
   808   0000FC  2A38               	incf	??_main^0,f,c
   809   0000FE  EF82  F000         	goto	u1488
   810   000102                     u1480:
   811   000102  6A38               	clrf	??_main^0,c
   812   000104                     u1488:
   813   000104  5038               	movf	??_main^0,w,c
   814   000106  A4D8               	btfss	status,2,c
   815   000108  EF88  F000         	goto	u1491
   816   00010C  EF8A  F000         	goto	u1490
   817   000110                     u1491:
   818   000110  EF73  F000         	goto	l3086
   819   000114                     u1490:
   820   000114                     
   821                           ;../main.c: 94:         if (!PORTFbits.RF2){LATDbits.LATD7 = 1;}
   822   000114  B48E               	btfsc	142,2,c	;volatile
   823   000116  EF8F  F000         	goto	u1501
   824   00011A  EF91  F000         	goto	u1500
   825   00011E                     u1501:
   826   00011E  EF94  F000         	goto	l211
   827   000122                     u1500:
   828   000122  8E7C               	bsf	124,7,c	;volatile
   829   000124  EF95  F000         	goto	l3090
   830   000128                     l211:
   831   000128  8680               	bsf	128,3,c	;volatile
   832   00012A                     l3090:
   833                           
   834                           ;../main.c: 112:         motor_action(1,&motorL,&motorR);
   835   00012A  0E00               	movlw	0
   836   00012C  6E23               	movwf	(motor_action@color+1)^0,c
   837   00012E  0E01               	movlw	1
   838   000130  6E22               	movwf	motor_action@color^0,c
   839   000132  0E94               	movlw	low main@motorL
   840   000134  6E24               	movwf	motor_action@l^0,c
   841   000136  0E01               	movlw	high main@motorL
   842   000138  6E25               	movwf	(motor_action@l+1)^0,c
   843   00013A  0E9D               	movlw	low main@motorR
   844   00013C  6E26               	movwf	motor_action@r^0,c
   845   00013E  0E01               	movlw	high main@motorR
   846   000140  6E27               	movwf	(motor_action@r+1)^0,c
   847   000142  EC06  F003         	call	_motor_action	;wreg free
   848   000146                     
   849                           ;../main.c: 113:         _delay((unsigned long)((2000)*(64000000/4000.0)));
   850   000146  0EA3               	movlw	163
   851   000148  6E39               	movwf	(??_main+1)^0,c
   852   00014A  0E57               	movlw	87
   853   00014C  6E38               	movwf	??_main^0,c
   854   00014E  0E02               	movlw	2
   855   000150                     u1647:
   856   000150  2EE8               	decfsz	wreg,f,c
   857   000152  D7FE               	bra	u1647
   858   000154  2E38               	decfsz	??_main^0,f,c
   859   000156  D7FC               	bra	u1647
   860   000158  2E39               	decfsz	(??_main+1)^0,f,c
   861   00015A  D7FA               	bra	u1647
   862   00015C  D000               	nop2	
   863   00015E                     
   864                           ;../main.c: 114:         motor_action(2,&motorL,&motorR);
   865   00015E  0E00               	movlw	0
   866   000160  6E23               	movwf	(motor_action@color+1)^0,c
   867   000162  0E02               	movlw	2
   868   000164  6E22               	movwf	motor_action@color^0,c
   869   000166  0E94               	movlw	low main@motorL
   870   000168  6E24               	movwf	motor_action@l^0,c
   871   00016A  0E01               	movlw	high main@motorL
   872   00016C  6E25               	movwf	(motor_action@l+1)^0,c
   873   00016E  0E9D               	movlw	low main@motorR
   874   000170  6E26               	movwf	motor_action@r^0,c
   875   000172  0E01               	movlw	high main@motorR
   876   000174  6E27               	movwf	(motor_action@r+1)^0,c
   877   000176  EC06  F003         	call	_motor_action	;wreg free
   878                           
   879                           ;../main.c: 115:         _delay((unsigned long)((2000)*(64000000/4000.0)));
   880   00017A  0EA3               	movlw	163
   881   00017C  6E39               	movwf	(??_main+1)^0,c
   882   00017E  0E57               	movlw	87
   883   000180  6E38               	movwf	??_main^0,c
   884   000182  0E02               	movlw	2
   885   000184                     u1657:
   886   000184  2EE8               	decfsz	wreg,f,c
   887   000186  D7FE               	bra	u1657
   888   000188  2E38               	decfsz	??_main^0,f,c
   889   00018A  D7FC               	bra	u1657
   890   00018C  2E39               	decfsz	(??_main+1)^0,f,c
   891   00018E  D7FA               	bra	u1657
   892   000190  D000               	nop2	
   893   000192                     
   894                           ;../main.c: 116:         motor_action(3,&motorL,&motorR);
   895   000192  0E00               	movlw	0
   896   000194  6E23               	movwf	(motor_action@color+1)^0,c
   897   000196  0E03               	movlw	3
   898   000198  6E22               	movwf	motor_action@color^0,c
   899   00019A  0E94               	movlw	low main@motorL
   900   00019C  6E24               	movwf	motor_action@l^0,c
   901   00019E  0E01               	movlw	high main@motorL
   902   0001A0  6E25               	movwf	(motor_action@l+1)^0,c
   903   0001A2  0E9D               	movlw	low main@motorR
   904   0001A4  6E26               	movwf	motor_action@r^0,c
   905   0001A6  0E01               	movlw	high main@motorR
   906   0001A8  6E27               	movwf	(motor_action@r+1)^0,c
   907   0001AA  EC06  F003         	call	_motor_action	;wreg free
   908   0001AE                     
   909                           ;../main.c: 117:         _delay((unsigned long)((2000)*(64000000/4000.0)));
   910   0001AE  0EA3               	movlw	163
   911   0001B0  6E39               	movwf	(??_main+1)^0,c
   912   0001B2  0E57               	movlw	87
   913   0001B4  6E38               	movwf	??_main^0,c
   914   0001B6  0E02               	movlw	2
   915   0001B8                     u1667:
   916   0001B8  2EE8               	decfsz	wreg,f,c
   917   0001BA  D7FE               	bra	u1667
   918   0001BC  2E38               	decfsz	??_main^0,f,c
   919   0001BE  D7FC               	bra	u1667
   920   0001C0  2E39               	decfsz	(??_main+1)^0,f,c
   921   0001C2  D7FA               	bra	u1667
   922   0001C4  D000               	nop2	
   923                           
   924                           ;../main.c: 118:         motor_action(4,&motorL,&motorR);
   925   0001C6  0E00               	movlw	0
   926   0001C8  6E23               	movwf	(motor_action@color+1)^0,c
   927   0001CA  0E04               	movlw	4
   928   0001CC  6E22               	movwf	motor_action@color^0,c
   929   0001CE  0E94               	movlw	low main@motorL
   930   0001D0  6E24               	movwf	motor_action@l^0,c
   931   0001D2  0E01               	movlw	high main@motorL
   932   0001D4  6E25               	movwf	(motor_action@l+1)^0,c
   933   0001D6  0E9D               	movlw	low main@motorR
   934   0001D8  6E26               	movwf	motor_action@r^0,c
   935   0001DA  0E01               	movlw	high main@motorR
   936   0001DC  6E27               	movwf	(motor_action@r+1)^0,c
   937   0001DE  EC06  F003         	call	_motor_action	;wreg free
   938   0001E2                     
   939                           ;../main.c: 119:         _delay((unsigned long)((2000)*(64000000/4000.0)));
   940   0001E2  0EA3               	movlw	163
   941   0001E4  6E39               	movwf	(??_main+1)^0,c
   942   0001E6  0E57               	movlw	87
   943   0001E8  6E38               	movwf	??_main^0,c
   944   0001EA  0E02               	movlw	2
   945   0001EC                     u1677:
   946   0001EC  2EE8               	decfsz	wreg,f,c
   947   0001EE  D7FE               	bra	u1677
   948   0001F0  2E38               	decfsz	??_main^0,f,c
   949   0001F2  D7FC               	bra	u1677
   950   0001F4  2E39               	decfsz	(??_main+1)^0,f,c
   951   0001F6  D7FA               	bra	u1677
   952   0001F8  D000               	nop2	
   953   0001FA                     
   954                           ;../main.c: 120:         motor_action(5,&motorL,&motorR);
   955   0001FA  0E00               	movlw	0
   956   0001FC  6E23               	movwf	(motor_action@color+1)^0,c
   957   0001FE  0E05               	movlw	5
   958   000200  6E22               	movwf	motor_action@color^0,c
   959   000202  0E94               	movlw	low main@motorL
   960   000204  6E24               	movwf	motor_action@l^0,c
   961   000206  0E01               	movlw	high main@motorL
   962   000208  6E25               	movwf	(motor_action@l+1)^0,c
   963   00020A  0E9D               	movlw	low main@motorR
   964   00020C  6E26               	movwf	motor_action@r^0,c
   965   00020E  0E01               	movlw	high main@motorR
   966   000210  6E27               	movwf	(motor_action@r+1)^0,c
   967   000212  EC06  F003         	call	_motor_action	;wreg free
   968                           
   969                           ;../main.c: 121:         _delay((unsigned long)((2000)*(64000000/4000.0)));
   970   000216  0EA3               	movlw	163
   971   000218  6E39               	movwf	(??_main+1)^0,c
   972   00021A  0E57               	movlw	87
   973   00021C  6E38               	movwf	??_main^0,c
   974   00021E  0E02               	movlw	2
   975   000220                     u1687:
   976   000220  2EE8               	decfsz	wreg,f,c
   977   000222  D7FE               	bra	u1687
   978   000224  2E38               	decfsz	??_main^0,f,c
   979   000226  D7FC               	bra	u1687
   980   000228  2E39               	decfsz	(??_main+1)^0,f,c
   981   00022A  D7FA               	bra	u1687
   982   00022C  D000               	nop2	
   983   00022E                     
   984                           ;../main.c: 122:         motor_action(6,&motorL,&motorR);
   985   00022E  0E00               	movlw	0
   986   000230  6E23               	movwf	(motor_action@color+1)^0,c
   987   000232  0E06               	movlw	6
   988   000234  6E22               	movwf	motor_action@color^0,c
   989   000236  0E94               	movlw	low main@motorL
   990   000238  6E24               	movwf	motor_action@l^0,c
   991   00023A  0E01               	movlw	high main@motorL
   992   00023C  6E25               	movwf	(motor_action@l+1)^0,c
   993   00023E  0E9D               	movlw	low main@motorR
   994   000240  6E26               	movwf	motor_action@r^0,c
   995   000242  0E01               	movlw	high main@motorR
   996   000244  6E27               	movwf	(motor_action@r+1)^0,c
   997   000246  EC06  F003         	call	_motor_action	;wreg free
   998   00024A                     
   999                           ;../main.c: 123:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1000   00024A  0EA3               	movlw	163
  1001   00024C  6E39               	movwf	(??_main+1)^0,c
  1002   00024E  0E57               	movlw	87
  1003   000250  6E38               	movwf	??_main^0,c
  1004   000252  0E02               	movlw	2
  1005   000254                     u1697:
  1006   000254  2EE8               	decfsz	wreg,f,c
  1007   000256  D7FE               	bra	u1697
  1008   000258  2E38               	decfsz	??_main^0,f,c
  1009   00025A  D7FC               	bra	u1697
  1010   00025C  2E39               	decfsz	(??_main+1)^0,f,c
  1011   00025E  D7FA               	bra	u1697
  1012   000260  D000               	nop2	
  1013                           
  1014                           ;../main.c: 124:         motor_action(7,&motorL,&motorR);
  1015   000262  0E00               	movlw	0
  1016   000264  6E23               	movwf	(motor_action@color+1)^0,c
  1017   000266  0E07               	movlw	7
  1018   000268  6E22               	movwf	motor_action@color^0,c
  1019   00026A  0E94               	movlw	low main@motorL
  1020   00026C  6E24               	movwf	motor_action@l^0,c
  1021   00026E  0E01               	movlw	high main@motorL
  1022   000270  6E25               	movwf	(motor_action@l+1)^0,c
  1023   000272  0E9D               	movlw	low main@motorR
  1024   000274  6E26               	movwf	motor_action@r^0,c
  1025   000276  0E01               	movlw	high main@motorR
  1026   000278  6E27               	movwf	(motor_action@r+1)^0,c
  1027   00027A  EC06  F003         	call	_motor_action	;wreg free
  1028   00027E                     
  1029                           ;../main.c: 125:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1030   00027E  0EA3               	movlw	163
  1031   000280  6E39               	movwf	(??_main+1)^0,c
  1032   000282  0E57               	movlw	87
  1033   000284  6E38               	movwf	??_main^0,c
  1034   000286  0E02               	movlw	2
  1035   000288                     u1707:
  1036   000288  2EE8               	decfsz	wreg,f,c
  1037   00028A  D7FE               	bra	u1707
  1038   00028C  2E38               	decfsz	??_main^0,f,c
  1039   00028E  D7FC               	bra	u1707
  1040   000290  2E39               	decfsz	(??_main+1)^0,f,c
  1041   000292  D7FA               	bra	u1707
  1042   000294  D000               	nop2	
  1043   000296                     
  1044                           ;../main.c: 126:         stop(&motorL,&motorR);
  1045   000296  0E94               	movlw	low main@motorL
  1046   000298  6E1A               	movwf	stop@mL^0,c
  1047   00029A  0E01               	movlw	high main@motorL
  1048   00029C  6E1B               	movwf	(stop@mL+1)^0,c
  1049   00029E  0E9D               	movlw	low main@motorR
  1050   0002A0  6E1C               	movwf	stop@mR^0,c
  1051   0002A2  0E01               	movlw	high main@motorR
  1052   0002A4  6E1D               	movwf	(stop@mR+1)^0,c
  1053   0002A6  EC6C  F00D         	call	_stop	;wreg free
  1054                           
  1055                           ;../main.c: 127:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1056   0002AA  0EA3               	movlw	163
  1057   0002AC  6E39               	movwf	(??_main+1)^0,c
  1058   0002AE  0E57               	movlw	87
  1059   0002B0  6E38               	movwf	??_main^0,c
  1060   0002B2  0E02               	movlw	2
  1061   0002B4                     u1717:
  1062   0002B4  2EE8               	decfsz	wreg,f,c
  1063   0002B6  D7FE               	bra	u1717
  1064   0002B8  2E38               	decfsz	??_main^0,f,c
  1065   0002BA  D7FC               	bra	u1717
  1066   0002BC  2E39               	decfsz	(??_main+1)^0,f,c
  1067   0002BE  D7FA               	bra	u1717
  1068   0002C0  D000               	nop2	
  1069                           
  1070                           ;../main.c: 128:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1071   0002C2  0EA3               	movlw	163
  1072   0002C4  6E39               	movwf	(??_main+1)^0,c
  1073   0002C6  0E57               	movlw	87
  1074   0002C8  6E38               	movwf	??_main^0,c
  1075   0002CA  0E02               	movlw	2
  1076   0002CC                     u1727:
  1077   0002CC  2EE8               	decfsz	wreg,f,c
  1078   0002CE  D7FE               	bra	u1727
  1079   0002D0  2E38               	decfsz	??_main^0,f,c
  1080   0002D2  D7FC               	bra	u1727
  1081   0002D4  2E39               	decfsz	(??_main+1)^0,f,c
  1082   0002D6  D7FA               	bra	u1727
  1083   0002D8  D000               	nop2	
  1084                           
  1085                           ;../main.c: 129:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1086   0002DA  0EA3               	movlw	163
  1087   0002DC  6E39               	movwf	(??_main+1)^0,c
  1088   0002DE  0E57               	movlw	87
  1089   0002E0  6E38               	movwf	??_main^0,c
  1090   0002E2  0E02               	movlw	2
  1091   0002E4                     u1737:
  1092   0002E4  2EE8               	decfsz	wreg,f,c
  1093   0002E6  D7FE               	bra	u1737
  1094   0002E8  2E38               	decfsz	??_main^0,f,c
  1095   0002EA  D7FC               	bra	u1737
  1096   0002EC  2E39               	decfsz	(??_main+1)^0,f,c
  1097   0002EE  D7FA               	bra	u1737
  1098   0002F0  D000               	nop2	
  1099                           
  1100                           ;../main.c: 130:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1101   0002F2  0EA3               	movlw	163
  1102   0002F4  6E39               	movwf	(??_main+1)^0,c
  1103   0002F6  0E57               	movlw	87
  1104   0002F8  6E38               	movwf	??_main^0,c
  1105   0002FA  0E02               	movlw	2
  1106   0002FC                     u1747:
  1107   0002FC  2EE8               	decfsz	wreg,f,c
  1108   0002FE  D7FE               	bra	u1747
  1109   000300  2E38               	decfsz	??_main^0,f,c
  1110   000302  D7FC               	bra	u1747
  1111   000304  2E39               	decfsz	(??_main+1)^0,f,c
  1112   000306  D7FA               	bra	u1747
  1113   000308  D000               	nop2	
  1114                           
  1115                           ;../main.c: 131:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1116   00030A  0EA3               	movlw	163
  1117   00030C  6E39               	movwf	(??_main+1)^0,c
  1118   00030E  0E57               	movlw	87
  1119   000310  6E38               	movwf	??_main^0,c
  1120   000312  0E02               	movlw	2
  1121   000314                     u1757:
  1122   000314  2EE8               	decfsz	wreg,f,c
  1123   000316  D7FE               	bra	u1757
  1124   000318  2E38               	decfsz	??_main^0,f,c
  1125   00031A  D7FC               	bra	u1757
  1126   00031C  2E39               	decfsz	(??_main+1)^0,f,c
  1127   00031E  D7FA               	bra	u1757
  1128   000320  D000               	nop2	
  1129                           
  1130                           ;../main.c: 136:         while (color_name != 8){
  1131   000322  EF54  F002         	goto	l3158
  1132   000326                     l3112:
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;../main.c: 137:             time = 0;
  1136   000326  0E00               	movlw	0
  1137   000328  6FE3               	movwf	(_time+1)& (0+255),b
  1138   00032A  0E00               	movlw	0
  1139   00032C  6FE2               	movwf	_time& (0+255),b
  1140   00032E                     
  1141                           ; BSR set to: 1
  1142                           ;../main.c: 138:             motor_action(0,&motorL,&motorR);
  1143   00032E  0E00               	movlw	0
  1144   000330  6E23               	movwf	(motor_action@color+1)^0,c
  1145   000332  0E00               	movlw	0
  1146   000334  6E22               	movwf	motor_action@color^0,c
  1147   000336  0E94               	movlw	low main@motorL
  1148   000338  6E24               	movwf	motor_action@l^0,c
  1149   00033A  0E01               	movlw	high main@motorL
  1150   00033C  6E25               	movwf	(motor_action@l+1)^0,c
  1151   00033E  0E9D               	movlw	low main@motorR
  1152   000340  6E26               	movwf	motor_action@r^0,c
  1153   000342  0E01               	movlw	high main@motorR
  1154   000344  6E27               	movwf	(motor_action@r+1)^0,c
  1155   000346  EC06  F003         	call	_motor_action	;wreg free
  1156   00034A                     
  1157                           ;../main.c: 139:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1158   00034A  0E29               	movlw	41
  1159   00034C  6E39               	movwf	(??_main+1)^0,c
  1160   00034E  0E96               	movlw	150
  1161   000350  6E38               	movwf	??_main^0,c
  1162   000352  0E7F               	movlw	127
  1163   000354                     u1767:
  1164   000354  2EE8               	decfsz	wreg,f,c
  1165   000356  D7FE               	bra	u1767
  1166   000358  2E38               	decfsz	??_main^0,f,c
  1167   00035A  D7FC               	bra	u1767
  1168   00035C  2E39               	decfsz	(??_main+1)^0,f,c
  1169   00035E  D7FA               	bra	u1767
  1170   000360  F000               	nop	
  1171   000362                     
  1172                           ;../main.c: 140:             color_read(&RGB_recorded);
  1173   000362  0E8C               	movlw	low main@RGB_recorded
  1174   000364  6E0C               	movwf	color_read@rgb^0,c
  1175   000366  0E01               	movlw	high main@RGB_recorded
  1176   000368  6E0D               	movwf	(color_read@rgb+1)^0,c
  1177   00036A  EC90  F00A         	call	_color_read	;wreg free
  1178   00036E                     
  1179                           ;../main.c: 141:             if (RGB_recorded.L<upperbound_calibrated && RGB_recorded.L>
      +                          lowerbound_calibrated){color_flag=1;}
  1180   00036E  0101               	movlb	1	; () banked
  1181   000370  517E               	movf	main@upperbound_calibrated& (0+255),w,b
  1182   000372  5D8C               	subwf	main@RGB_recorded& (0+255),w,b
  1183   000374  517F               	movf	(main@upperbound_calibrated+1)& (0+255),w,b
  1184   000376  598D               	subwfb	(main@RGB_recorded+1)& (0+255),w,b
  1185   000378  B0D8               	btfsc	status,0,c
  1186   00037A  EFC1  F001         	goto	u1511
  1187   00037E  EFC3  F001         	goto	u1510
  1188   000382                     u1511:
  1189   000382  EFD2  F001         	goto	l3126
  1190   000386                     u1510:
  1191   000386                     
  1192                           ; BSR set to: 1
  1193   000386  518C               	movf	main@RGB_recorded& (0+255),w,b
  1194   000388  5D7C               	subwf	main@lowerbound_calibrated& (0+255),w,b
  1195   00038A  518D               	movf	(main@RGB_recorded+1)& (0+255),w,b
  1196   00038C  597D               	subwfb	(main@lowerbound_calibrated+1)& (0+255),w,b
  1197   00038E  B0D8               	btfsc	status,0,c
  1198   000390  EFCC  F001         	goto	u1521
  1199   000394  EFCE  F001         	goto	u1520
  1200   000398                     u1521:
  1201   000398  EFD2  F001         	goto	l3126
  1202   00039C                     u1520:
  1203   00039C                     
  1204                           ; BSR set to: 1
  1205   00039C  0E00               	movlw	0
  1206   00039E  6F81               	movwf	(main@color_flag+1)& (0+255),b
  1207   0003A0  0E01               	movlw	1
  1208   0003A2  6F80               	movwf	main@color_flag& (0+255),b
  1209   0003A4                     l3126:
  1210                           
  1211                           ; BSR set to: 1
  1212                           ;../main.c: 142:             if (color_flag){
  1213   0003A4  5180               	movf	main@color_flag& (0+255),w,b
  1214   0003A6  1181               	iorwf	(main@color_flag+1)& (0+255),w,b
  1215   0003A8  B4D8               	btfsc	status,2,c
  1216   0003AA  EFD9  F001         	goto	u1531
  1217   0003AE  EFDB  F001         	goto	u1530
  1218   0003B2                     u1531:
  1219   0003B2  EF48  F002         	goto	l3156
  1220   0003B6                     u1530:
  1221   0003B6                     
  1222                           ; BSR set to: 1
  1223                           ;../main.c: 143:                 LATHbits.LATH0 = 1;
  1224   0003B6  8080               	bsf	128,0,c	;volatile
  1225                           
  1226                           ;../main.c: 144:                 LATFbits.LATF0 = 1;
  1227   0003B8  807E               	bsf	126,0,c	;volatile
  1228   0003BA                     
  1229                           ; BSR set to: 1
  1230                           ;../main.c: 145:                 stop(&motorL,&motorR);
  1231   0003BA  0E94               	movlw	low main@motorL
  1232   0003BC  6E1A               	movwf	stop@mL^0,c
  1233   0003BE  0E01               	movlw	high main@motorL
  1234   0003C0  6E1B               	movwf	(stop@mL+1)^0,c
  1235   0003C2  0E9D               	movlw	low main@motorR
  1236   0003C4  6E1C               	movwf	stop@mR^0,c
  1237   0003C6  0E01               	movlw	high main@motorR
  1238   0003C8  6E1D               	movwf	(stop@mR+1)^0,c
  1239   0003CA  EC6C  F00D         	call	_stop	;wreg free
  1240   0003CE                     
  1241                           ;../main.c: 146:                 color_read(&RGB_recorded);
  1242   0003CE  0E8C               	movlw	low main@RGB_recorded
  1243   0003D0  6E0C               	movwf	color_read@rgb^0,c
  1244   0003D2  0E01               	movlw	high main@RGB_recorded
  1245   0003D4  6E0D               	movwf	(color_read@rgb+1)^0,c
  1246   0003D6  EC90  F00A         	call	_color_read	;wreg free
  1247   0003DA                     
  1248                           ;../main.c: 147:                 if (LATDbits.LATD7)
  1249   0003DA  AE7C               	btfss	124,7,c	;volatile
  1250   0003DC  EFF2  F001         	goto	u1541
  1251   0003E0  EFF4  F001         	goto	u1540
  1252   0003E4                     u1541:
  1253   0003E4  EF04  F002         	goto	l3138
  1254   0003E8                     u1540:
  1255   0003E8                     
  1256                           ;../main.c: 148:                 {color_name = color_processor_easy(&RGB_recorded,color_
      +                          calibrated);}
  1257   0003E8  0E8C               	movlw	low main@RGB_recorded
  1258   0003EA  6E01               	movwf	color_processor_easy@rgb^0,c
  1259   0003EC  0E01               	movlw	high main@RGB_recorded
  1260   0003EE  6E02               	movwf	(color_processor_easy@rgb+1)^0,c
  1261   0003F0  0E00               	movlw	low main@color_calibrated
  1262   0003F2  6E03               	movwf	color_processor_easy@calibrated^0,c
  1263   0003F4  0E01               	movlw	high main@color_calibrated
  1264   0003F6  6E04               	movwf	(color_processor_easy@calibrated+1)^0,c
  1265   0003F8  EC1A  F009         	call	_color_processor_easy	;wreg free
  1266   0003FC  C001  F188         	movff	?_color_processor_easy,main@color_name
  1267   000400  C002  F189         	movff	?_color_processor_easy+1,main@color_name+1
  1268   000404  EF12  F002         	goto	l3140
  1269   000408                     l3138:
  1270                           
  1271                           ;../main.c: 150:                 {color_name = color_processor_hard(&RGB_recorded,color_
      +                          calibrated);}
  1272   000408  0E8C               	movlw	low main@RGB_recorded
  1273   00040A  6E34               	movwf	color_processor_hard@rgb^0,c
  1274   00040C  0E01               	movlw	high main@RGB_recorded
  1275   00040E  6E35               	movwf	(color_processor_hard@rgb+1)^0,c
  1276   000410  0E00               	movlw	low main@color_calibrated
  1277   000412  6E36               	movwf	color_processor_hard@calibrated^0,c
  1278   000414  0E01               	movlw	high main@color_calibrated
  1279   000416  6E37               	movwf	(color_processor_hard@calibrated+1)^0,c
  1280   000418  EC64  F00F         	call	_color_processor_hard	;wreg free
  1281   00041C  C034  F188         	movff	?_color_processor_hard,main@color_name
  1282   000420  C035  F189         	movff	?_color_processor_hard+1,main@color_name+1
  1283   000424                     l3140:
  1284                           
  1285                           ;../main.c: 151:                 color_path[j] = color_name;
  1286   000424  90D8               	bcf	status,0,c
  1287   000426  0101               	movlb	1	; () banked
  1288   000428  3584               	rlcf	main@j& (0+255),w,b
  1289   00042A  6ED9               	movwf	fsr2l,c
  1290   00042C  3585               	rlcf	(main@j+1)& (0+255),w,b
  1291   00042E  6EDA               	movwf	fsr2h,c
  1292   000430  0E40               	movlw	low main@color_path
  1293   000432  26D9               	addwf	fsr2l,f,c
  1294   000434  0E01               	movlw	high main@color_path
  1295   000436  22DA               	addwfc	fsr2h,f,c
  1296   000438  C188  FFDE         	movff	main@color_name,postinc2
  1297   00043C  C189  FFDD         	movff	main@color_name+1,postdec2
  1298   000440                     
  1299                           ; BSR set to: 1
  1300                           ;../main.c: 152:                 time_path[j] = time;
  1301   000440  90D8               	bcf	status,0,c
  1302   000442  3584               	rlcf	main@j& (0+255),w,b
  1303   000444  6ED9               	movwf	fsr2l,c
  1304   000446  3585               	rlcf	(main@j+1)& (0+255),w,b
  1305   000448  6EDA               	movwf	fsr2h,c
  1306   00044A  0E5E               	movlw	low main@time_path
  1307   00044C  26D9               	addwf	fsr2l,f,c
  1308   00044E  0E01               	movlw	high main@time_path
  1309   000450  22DA               	addwfc	fsr2h,f,c
  1310   000452  C1E2  FFDE         	movff	_time,postinc2
  1311   000456  C1E3  FFDD         	movff	_time+1,postdec2
  1312   00045A                     
  1313                           ; BSR set to: 1
  1314                           ;../main.c: 153:                 motor_action(color_name,&motorL,&motorR);
  1315   00045A  C188  F022         	movff	main@color_name,motor_action@color
  1316   00045E  C189  F023         	movff	main@color_name+1,motor_action@color+1
  1317   000462  0E94               	movlw	low main@motorL
  1318   000464  6E24               	movwf	motor_action@l^0,c
  1319   000466  0E01               	movlw	high main@motorL
  1320   000468  6E25               	movwf	(motor_action@l+1)^0,c
  1321   00046A  0E9D               	movlw	low main@motorR
  1322   00046C  6E26               	movwf	motor_action@r^0,c
  1323   00046E  0E01               	movlw	high main@motorR
  1324   000470  6E27               	movwf	(motor_action@r+1)^0,c
  1325   000472  EC06  F003         	call	_motor_action	;wreg free
  1326   000476                     
  1327                           ;../main.c: 155:                 j++;
  1328   000476  0101               	movlb	1	; () banked
  1329   000478  4B84               	infsnz	main@j& (0+255),f,b
  1330   00047A  2B85               	incf	(main@j+1)& (0+255),f,b
  1331   00047C                     
  1332                           ; BSR set to: 1
  1333                           ;../main.c: 156:                 time = 0;
  1334   00047C  0E00               	movlw	0
  1335   00047E  6FE3               	movwf	(_time+1)& (0+255),b
  1336   000480  0E00               	movlw	0
  1337   000482  6FE2               	movwf	_time& (0+255),b
  1338   000484                     
  1339                           ; BSR set to: 1
  1340                           ;../main.c: 157:                 color_flag = 0;
  1341   000484  0E00               	movlw	0
  1342   000486  6F81               	movwf	(main@color_flag+1)& (0+255),b
  1343   000488  0E00               	movlw	0
  1344   00048A  6F80               	movwf	main@color_flag& (0+255),b
  1345   00048C                     
  1346                           ; BSR set to: 1
  1347                           ;../main.c: 158:                 LATHbits.LATH0 = 0;
  1348   00048C  9080               	bcf	128,0,c	;volatile
  1349   00048E                     
  1350                           ; BSR set to: 1
  1351                           ;../main.c: 159:                 LATFbits.LATF0 = 0;
  1352   00048E  907E               	bcf	126,0,c	;volatile
  1353   000490                     l3156:
  1354                           
  1355                           ; BSR set to: 1
  1356                           ;../main.c: 161:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1357   000490  0E11               	movlw	17
  1358   000492  6E39               	movwf	(??_main+1)^0,c
  1359   000494  0E3C               	movlw	60
  1360   000496  6E38               	movwf	??_main^0,c
  1361   000498  0ECB               	movlw	203
  1362   00049A                     u1777:
  1363   00049A  2EE8               	decfsz	wreg,f,c
  1364   00049C  D7FE               	bra	u1777
  1365   00049E  2E38               	decfsz	??_main^0,f,c
  1366   0004A0  D7FC               	bra	u1777
  1367   0004A2  2E39               	decfsz	(??_main+1)^0,f,c
  1368   0004A4  D7FA               	bra	u1777
  1369   0004A6  F000               	nop	
  1370   0004A8                     l3158:
  1371                           
  1372                           ;../main.c: 136:         while (color_name != 8){
  1373   0004A8  0E08               	movlw	8
  1374   0004AA  0101               	movlb	1	; () banked
  1375   0004AC  1988               	xorwf	main@color_name& (0+255),w,b
  1376   0004AE  1189               	iorwf	(main@color_name+1)& (0+255),w,b
  1377   0004B0  A4D8               	btfss	status,2,c
  1378   0004B2  EF5D  F002         	goto	u1551
  1379   0004B6  EF5F  F002         	goto	u1550
  1380   0004BA                     u1551:
  1381   0004BA  EF93  F001         	goto	l3112
  1382   0004BE                     u1550:
  1383   0004BE                     
  1384                           ; BSR set to: 1
  1385                           ;../main.c: 165:         spin_180(&motorL,&motorR);
  1386   0004BE  0E94               	movlw	low main@motorL
  1387   0004C0  6E1A               	movwf	spin_180@mL^0,c
  1388   0004C2  0E01               	movlw	high main@motorL
  1389   0004C4  6E1B               	movwf	(spin_180@mL+1)^0,c
  1390   0004C6  0E9D               	movlw	low main@motorR
  1391   0004C8  6E1C               	movwf	spin_180@mR^0,c
  1392   0004CA  0E01               	movlw	high main@motorR
  1393   0004CC  6E1D               	movwf	(spin_180@mR+1)^0,c
  1394   0004CE  EC87  F00B         	call	_spin_180	;wreg free
  1395   0004D2                     
  1396                           ;../main.c: 166:         for (int m=0;m>12;m++){
  1397   0004D2  0E00               	movlw	0
  1398   0004D4  0101               	movlb	1	; () banked
  1399   0004D6  6F87               	movwf	(main@m+1)& (0+255),b
  1400   0004D8  0E00               	movlw	0
  1401   0004DA  6F86               	movwf	main@m& (0+255),b
  1402   0004DC                     l3164:
  1403                           
  1404                           ; BSR set to: 1
  1405   0004DC  BF87               	btfsc	(main@m+1)& (0+255),7,b
  1406   0004DE  EF7C  F002         	goto	u1560
  1407   0004E2  5187               	movf	(main@m+1)& (0+255),w,b
  1408   0004E4  E107               	bnz	u1561
  1409   0004E6  0E0D               	movlw	13
  1410   0004E8  5D86               	subwf	main@m& (0+255),w,b
  1411   0004EA  B0D8               	btfsc	status,0,c
  1412   0004EC  EF7A  F002         	goto	u1561
  1413   0004F0  EF7C  F002         	goto	u1560
  1414   0004F4                     u1561:
  1415   0004F4  EF7E  F002         	goto	l3168
  1416   0004F8                     u1560:
  1417   0004F8  EF95  F002         	goto	l3174
  1418   0004FC                     l3168:
  1419                           
  1420                           ; BSR set to: 1
  1421                           ;../main.c: 167:             LATHbits.LATH3=!LATHbits.LATH3;
  1422   0004FC  A680               	btfss	128,3,c	;volatile
  1423   0004FE  EF83  F002         	goto	u1571
  1424   000502  EF87  F002         	goto	u1570
  1425   000506                     u1571:
  1426   000506  6A38               	clrf	??_main^0,c
  1427   000508  2A38               	incf	??_main^0,f,c
  1428   00050A  EF88  F002         	goto	u1588
  1429   00050E                     u1570:
  1430   00050E  6A38               	clrf	??_main^0,c
  1431   000510                     u1588:
  1432   000510  4638               	rlncf	??_main^0,f,c
  1433   000512  4638               	rlncf	??_main^0,f,c
  1434   000514  4638               	rlncf	??_main^0,f,c
  1435   000516  5080               	movf	128,w,c	;volatile
  1436   000518  1838               	xorwf	??_main^0,w,c
  1437   00051A  0BF7               	andlw	-9
  1438   00051C  1838               	xorwf	??_main^0,w,c
  1439   00051E  6E80               	movwf	128,c	;volatile
  1440   000520                     
  1441                           ;../main.c: 168:         }
  1442   000520  0101               	movlb	1	; () banked
  1443   000522  4B86               	infsnz	main@m& (0+255),f,b
  1444   000524  2B87               	incf	(main@m+1)& (0+255),f,b
  1445   000526  EF6E  F002         	goto	l3164
  1446   00052A                     l3174:
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;../main.c: 169:         for (int k=15;k>0;k--){
  1450   00052A  0E00               	movlw	0
  1451   00052C  6F8B               	movwf	(main@k+1)& (0+255),b
  1452   00052E  0E0F               	movlw	15
  1453   000530  6F8A               	movwf	main@k& (0+255),b
  1454   000532                     l3176:
  1455                           
  1456                           ; BSR set to: 1
  1457   000532  BF8B               	btfsc	(main@k+1)& (0+255),7,b
  1458   000534  EFA6  F002         	goto	u1590
  1459   000538  518B               	movf	(main@k+1)& (0+255),w,b
  1460   00053A  E106               	bnz	u1591
  1461   00053C  058A               	decf	main@k& (0+255),w,b
  1462   00053E  B0D8               	btfsc	status,0,c
  1463   000540  EFA4  F002         	goto	u1591
  1464   000544  EFA6  F002         	goto	u1590
  1465   000548                     u1591:
  1466   000548  EFA8  F002         	goto	l222
  1467   00054C                     u1590:
  1468   00054C  EF73  F000         	goto	l3086
  1469   000550                     l222:
  1470                           
  1471                           ; BSR set to: 1
  1472                           ;../main.c: 170:             INTCONbits.GIE = 0;
  1473   000550  9EF2               	bcf	242,7,c	;volatile
  1474   000552                     
  1475                           ; BSR set to: 1
  1476                           ;../main.c: 171:             time_return = 0;
  1477   000552  0E00               	movlw	0
  1478   000554  6F83               	movwf	(main@time_return+1)& (0+255),b
  1479   000556  0E00               	movlw	0
  1480   000558  6F82               	movwf	main@time_return& (0+255),b
  1481   00055A                     
  1482                           ; BSR set to: 1
  1483                           ;../main.c: 172:             motor_action(color_path[k],&motorL,&motorR);
  1484   00055A  90D8               	bcf	status,0,c
  1485   00055C  358A               	rlcf	main@k& (0+255),w,b
  1486   00055E  6ED9               	movwf	fsr2l,c
  1487   000560  358B               	rlcf	(main@k+1)& (0+255),w,b
  1488   000562  6EDA               	movwf	fsr2h,c
  1489   000564  0E40               	movlw	low main@color_path
  1490   000566  26D9               	addwf	fsr2l,f,c
  1491   000568  0E01               	movlw	high main@color_path
  1492   00056A  22DA               	addwfc	fsr2h,f,c
  1493   00056C  CFDE F022          	movff	postinc2,motor_action@color
  1494   000570  CFDD F023          	movff	postdec2,motor_action@color+1
  1495   000574  0E94               	movlw	low main@motorL
  1496   000576  6E24               	movwf	motor_action@l^0,c
  1497   000578  0E01               	movlw	high main@motorL
  1498   00057A  6E25               	movwf	(motor_action@l+1)^0,c
  1499   00057C  0E9D               	movlw	low main@motorR
  1500   00057E  6E26               	movwf	motor_action@r^0,c
  1501   000580  0E01               	movlw	high main@motorR
  1502   000582  6E27               	movwf	(motor_action@r+1)^0,c
  1503   000584  EC06  F003         	call	_motor_action	;wreg free
  1504   000588                     
  1505                           ;../main.c: 173:             forward(&motorL,&motorR);
  1506   000588  0E94               	movlw	low main@motorL
  1507   00058A  6E1A               	movwf	forward@mL^0,c
  1508   00058C  0E01               	movlw	high main@motorL
  1509   00058E  6E1B               	movwf	(forward@mL+1)^0,c
  1510   000590  0E9D               	movlw	low main@motorR
  1511   000592  6E1C               	movwf	forward@mR^0,c
  1512   000594  0E01               	movlw	high main@motorR
  1513   000596  6E1D               	movwf	(forward@mR+1)^0,c
  1514   000598  ECCB  F00C         	call	_forward	;wreg free
  1515                           
  1516                           ;../main.c: 174:             while (time_return < time_path[k]) {
  1517   00059C  EFDF  F002         	goto	l3190
  1518   0005A0                     l3186:
  1519                           
  1520                           ; BSR set to: 1
  1521                           ;../main.c: 175:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1522   0005A0  0E05               	movlw	5
  1523   0005A2  6E39               	movwf	(??_main+1)^0,c
  1524   0005A4  0E0F               	movlw	15
  1525   0005A6  6E38               	movwf	??_main^0,c
  1526   0005A8  0EF1               	movlw	241
  1527   0005AA                     u1787:
  1528   0005AA  2EE8               	decfsz	wreg,f,c
  1529   0005AC  D7FE               	bra	u1787
  1530   0005AE  2E38               	decfsz	??_main^0,f,c
  1531   0005B0  D7FC               	bra	u1787
  1532   0005B2  2E39               	decfsz	(??_main+1)^0,f,c
  1533   0005B4  D7FA               	bra	u1787
  1534   0005B6  F000               	nop	
  1535   0005B8                     
  1536                           ;../main.c: 176:                 time_return++;
  1537   0005B8  0101               	movlb	1	; () banked
  1538   0005BA  4B82               	infsnz	main@time_return& (0+255),f,b
  1539   0005BC  2B83               	incf	(main@time_return+1)& (0+255),f,b
  1540   0005BE                     l3190:
  1541                           
  1542                           ;../main.c: 174:             while (time_return < time_path[k]) {
  1543   0005BE  90D8               	bcf	status,0,c
  1544   0005C0  0101               	movlb	1	; () banked
  1545   0005C2  358A               	rlcf	main@k& (0+255),w,b
  1546   0005C4  6ED9               	movwf	fsr2l,c
  1547   0005C6  358B               	rlcf	(main@k+1)& (0+255),w,b
  1548   0005C8  6EDA               	movwf	fsr2h,c
  1549   0005CA  0E5E               	movlw	low main@time_path
  1550   0005CC  26D9               	addwf	fsr2l,f,c
  1551   0005CE  0E01               	movlw	high main@time_path
  1552   0005D0  22DA               	addwfc	fsr2h,f,c
  1553   0005D2  50DE               	movf	postinc2,w,c
  1554   0005D4  5D82               	subwf	main@time_return& (0+255),w,b
  1555   0005D6  50DE               	movf	postinc2,w,c
  1556   0005D8  5983               	subwfb	(main@time_return+1)& (0+255),w,b
  1557   0005DA  A0D8               	btfss	status,0,c
  1558   0005DC  EFF2  F002         	goto	u1601
  1559   0005E0  EFF4  F002         	goto	u1600
  1560   0005E4                     u1601:
  1561   0005E4  EFD0  F002         	goto	l3186
  1562   0005E8                     u1600:
  1563   0005E8                     
  1564                           ; BSR set to: 1
  1565                           ;../main.c: 178:             stop(&motorL,&motorR);
  1566   0005E8  0E94               	movlw	low main@motorL
  1567   0005EA  6E1A               	movwf	stop@mL^0,c
  1568   0005EC  0E01               	movlw	high main@motorL
  1569   0005EE  6E1B               	movwf	(stop@mL+1)^0,c
  1570   0005F0  0E9D               	movlw	low main@motorR
  1571   0005F2  6E1C               	movwf	stop@mR^0,c
  1572   0005F4  0E01               	movlw	high main@motorR
  1573   0005F6  6E1D               	movwf	(stop@mR+1)^0,c
  1574   0005F8  EC6C  F00D         	call	_stop	;wreg free
  1575   0005FC                     
  1576                           ;../main.c: 179:         }
  1577   0005FC  0101               	movlb	1	; () banked
  1578   0005FE  078A               	decf	main@k& (0+255),f,b
  1579   000600  A0D8               	btfss	status,0,c
  1580   000602  078B               	decf	(main@k+1)& (0+255),f,b
  1581   000604  EF99  F002         	goto	l3176
  1582   000608  EF1F  F000         	goto	start
  1583   00060C                     __end_of_main:
  1584                           	callstack 0
  1585                           
  1586 ;; *************** function _spin_180 *****************
  1587 ;; Defined at:
  1588 ;;		line 167 in file "../dc_motor.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  1591 ;;		 -> main@motorL(9), 
  1592 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  1593 ;;		 -> main@motorR(9), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  i               2   31[COMRAM] int 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;Total ram usage:        8 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 3
  1612 ;; This function calls:
  1613 ;;		_setMotorPWM
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;;		_motor_action_return
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text1
  1621   00170E                     __ptext1:
  1622                           	callstack 0
  1623   00170E                     _spin_180:
  1624                           	callstack 27
  1625   00170E                     
  1626                           ;../dc_motor.c: 167: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 168: {;../dc_motor.c: 169:     mL->direction = 1;
  1627   00170E  EE20 F001          	lfsr	2,1
  1628   001712  501A               	movf	spin_180@mL^0,w,c
  1629   001714  26D9               	addwf	fsr2l,f,c
  1630   001716  501B               	movf	(spin_180@mL+1)^0,w,c
  1631   001718  22DA               	addwfc	fsr2h,f,c
  1632   00171A  0E01               	movlw	1
  1633   00171C  6EDF               	movwf	indf2,c
  1634                           
  1635                           ;../dc_motor.c: 170:     mR->direction = 0;
  1636   00171E  EE20 F001          	lfsr	2,1
  1637   001722  501C               	movf	spin_180@mR^0,w,c
  1638   001724  26D9               	addwf	fsr2l,f,c
  1639   001726  501D               	movf	(spin_180@mR+1)^0,w,c
  1640   001728  22DA               	addwfc	fsr2h,f,c
  1641   00172A  0E00               	movlw	0
  1642   00172C  6EDF               	movwf	indf2,c
  1643   00172E                     
  1644                           ;../dc_motor.c: 171:     for (int i = 0;i<50;i = i + 2)
  1645   00172E  0E00               	movlw	0
  1646   001730  6E21               	movwf	(spin_180@i+1)^0,c
  1647   001732  0E00               	movlw	0
  1648   001734  6E20               	movwf	spin_180@i^0,c
  1649   001736                     l3026:
  1650                           
  1651                           ;../dc_motor.c: 172:     {;../dc_motor.c: 173:         mL->power = i;
  1652   001736  C01A  FFD9         	movff	spin_180@mL,fsr2l
  1653   00173A  C01B  FFDA         	movff	spin_180@mL+1,fsr2h
  1654   00173E  C020  FFDF         	movff	spin_180@i,indf2
  1655   001742                     
  1656                           ;../dc_motor.c: 174:         mR->power = 50 + i;
  1657   001742  5020               	movf	spin_180@i^0,w,c
  1658   001744  0F32               	addlw	50
  1659   001746  C01C  FFD9         	movff	spin_180@mR,fsr2l
  1660   00174A  C01D  FFDA         	movff	spin_180@mR+1,fsr2h
  1661   00174E  6EDF               	movwf	indf2,c
  1662   001750                     
  1663                           ;../dc_motor.c: 175:         setMotorPWM(mL);
  1664   001750  C01A  F00F         	movff	spin_180@mL,setMotorPWM@m
  1665   001754  C01B  F010         	movff	spin_180@mL+1,setMotorPWM@m+1
  1666   001758  EC56  F007         	call	_setMotorPWM	;wreg free
  1667   00175C                     
  1668                           ;../dc_motor.c: 176:         setMotorPWM(mR);
  1669   00175C  C01C  F00F         	movff	spin_180@mR,setMotorPWM@m
  1670   001760  C01D  F010         	movff	spin_180@mR+1,setMotorPWM@m+1
  1671   001764  EC56  F007         	call	_setMotorPWM	;wreg free
  1672   001768                     
  1673                           ;../dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  1674   001768  0E35               	movlw	53
  1675   00176A                     u1797:
  1676   00176A  2EE8               	decfsz	wreg,f,c
  1677   00176C  D7FE               	bra	u1797
  1678   00176E  F000               	nop	
  1679   001770                     
  1680                           ;../dc_motor.c: 178:     }
  1681   001770  0E02               	movlw	2
  1682   001772  2420               	addwf	spin_180@i^0,w,c
  1683   001774  6E20               	movwf	spin_180@i^0,c
  1684   001776  0E00               	movlw	0
  1685   001778  2021               	addwfc	(spin_180@i+1)^0,w,c
  1686   00177A  6E21               	movwf	(spin_180@i+1)^0,c
  1687   00177C  BE21               	btfsc	(spin_180@i+1)^0,7,c
  1688   00177E  EFCA  F00B         	goto	u1451
  1689   001782  5021               	movf	(spin_180@i+1)^0,w,c
  1690   001784  E109               	bnz	u1450
  1691   001786  0E32               	movlw	50
  1692   001788  5C20               	subwf	spin_180@i^0,w,c
  1693   00178A  A0D8               	btfss	status,0,c
  1694   00178C  EFCA  F00B         	goto	u1451
  1695   001790  EFCC  F00B         	goto	u1450
  1696   001794                     u1451:
  1697   001794  EF9B  F00B         	goto	l3026
  1698   001798                     u1450:
  1699   001798                     
  1700                           ;../dc_motor.c: 179:     _delay((unsigned long)((290)*(64000000/4000.0)));
  1701   001798  0E18               	movlw	24
  1702   00179A  6E1F               	movwf	(??_spin_180+1)^0,c
  1703   00179C  0E8A               	movlw	138
  1704   00179E  6E1E               	movwf	??_spin_180^0,c
  1705   0017A0  0EE8               	movlw	232
  1706   0017A2                     u1807:
  1707   0017A2  2EE8               	decfsz	wreg,f,c
  1708   0017A4  D7FE               	bra	u1807
  1709   0017A6  2E1E               	decfsz	??_spin_180^0,f,c
  1710   0017A8  D7FC               	bra	u1807
  1711   0017AA  2E1F               	decfsz	(??_spin_180+1)^0,f,c
  1712   0017AC  D7FA               	bra	u1807
  1713   0017AE  0012               	return		;funcret
  1714   0017B0                     __end_of_spin_180:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _motor_action *****************
  1718 ;; Defined at:
  1719 ;;		line 213 in file "../dc_motor.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  color           2   33[COMRAM] unsigned int 
  1722 ;;  l               2   35[COMRAM] PTR struct DC_motor
  1723 ;;		 -> main@motorL(9), 
  1724 ;;  r               2   37[COMRAM] PTR struct DC_motor
  1725 ;;		 -> main@motorR(9), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 4
  1744 ;; This function calls:
  1745 ;;		_forward
  1746 ;;		_left_135
  1747 ;;		_left_90
  1748 ;;		_reverse_fromcard
  1749 ;;		_reverse_onesquare
  1750 ;;		_right_135
  1751 ;;		_right_90
  1752 ;;		_stop
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text2
  1759   00060C                     __ptext2:
  1760                           	callstack 0
  1761   00060C                     _motor_action:
  1762                           	callstack 26
  1763   00060C                     
  1764                           ;../dc_motor.c: 213: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 214: {;../dc_motor.c: 215:     switch (color){
  1765   00060C  EF0E  F005         	goto	l3012
  1766   000610                     l2932:
  1767                           
  1768                           ;../dc_motor.c: 217:             reverse_fromcard(l,r);
  1769   000610  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  1770   000614  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  1771   000618  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  1772   00061C  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  1773   000620  EC1C  F00D         	call	_reverse_fromcard	;wreg free
  1774                           
  1775                           ;../dc_motor.c: 218:             stop(l,r);
  1776   000624  C024  F01A         	movff	motor_action@l,stop@mL
  1777   000628  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1778   00062C  C026  F01C         	movff	motor_action@r,stop@mR
  1779   000630  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1780   000634  EC6C  F00D         	call	_stop	;wreg free
  1781   000638                     l2934:
  1782                           
  1783                           ;../dc_motor.c: 219:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1784   000638  0E29               	movlw	41
  1785   00063A  6E29               	movwf	(??_motor_action+1)^0,c
  1786   00063C  0E96               	movlw	150
  1787   00063E  6E28               	movwf	??_motor_action^0,c
  1788   000640  0E7F               	movlw	127
  1789   000642                     u1817:
  1790   000642  2EE8               	decfsz	wreg,f,c
  1791   000644  D7FE               	bra	u1817
  1792   000646  2E28               	decfsz	??_motor_action^0,f,c
  1793   000648  D7FC               	bra	u1817
  1794   00064A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  1795   00064C  D7FA               	bra	u1817
  1796   00064E  F000               	nop	
  1797   000650                     
  1798                           ;../dc_motor.c: 220:             right_90(l,r);
  1799   000650  C024  F01A         	movff	motor_action@l,right_90@mL
  1800   000654  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  1801   000658  C026  F01C         	movff	motor_action@r,right_90@mR
  1802   00065C  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  1803   000660  ECE3  F00A         	call	_right_90	;wreg free
  1804   000664                     
  1805                           ;../dc_motor.c: 221:             stop(l,r);
  1806   000664  C024  F01A         	movff	motor_action@l,stop@mL
  1807   000668  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1808   00066C  C026  F01C         	movff	motor_action@r,stop@mR
  1809   000670  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1810   000674  EC6C  F00D         	call	_stop	;wreg free
  1811   000678                     
  1812                           ;../dc_motor.c: 222:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1813   000678  0E29               	movlw	41
  1814   00067A  6E29               	movwf	(??_motor_action+1)^0,c
  1815   00067C  0E96               	movlw	150
  1816   00067E  6E28               	movwf	??_motor_action^0,c
  1817   000680  0E7F               	movlw	127
  1818   000682                     u1827:
  1819   000682  2EE8               	decfsz	wreg,f,c
  1820   000684  D7FE               	bra	u1827
  1821   000686  2E28               	decfsz	??_motor_action^0,f,c
  1822   000688  D7FC               	bra	u1827
  1823   00068A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  1824   00068C  D7FA               	bra	u1827
  1825   00068E  F000               	nop	
  1826                           
  1827                           ;../dc_motor.c: 223:             right_90(l,r);
  1828   000690  C024  F01A         	movff	motor_action@l,right_90@mL
  1829   000694  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  1830   000698  C026  F01C         	movff	motor_action@r,right_90@mR
  1831   00069C  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  1832   0006A0  ECE3  F00A         	call	_right_90	;wreg free
  1833                           
  1834                           ;../dc_motor.c: 224:             stop(l,r);
  1835   0006A4  C024  F01A         	movff	motor_action@l,stop@mL
  1836   0006A8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1837   0006AC  C026  F01C         	movff	motor_action@r,stop@mR
  1838   0006B0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1839   0006B4  EC6C  F00D         	call	_stop	;wreg free
  1840                           
  1841                           ;../dc_motor.c: 225:             break;
  1842   0006B8  EF40  F005         	goto	l341
  1843   0006BC                     l2942:
  1844                           
  1845                           ;../dc_motor.c: 227:             reverse_fromcard(l,r);
  1846   0006BC  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  1847   0006C0  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  1848   0006C4  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  1849   0006C8  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  1850   0006CC  EC1C  F00D         	call	_reverse_fromcard	;wreg free
  1851                           
  1852                           ;../dc_motor.c: 228:             stop(l,r);
  1853   0006D0  C024  F01A         	movff	motor_action@l,stop@mL
  1854   0006D4  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1855   0006D8  C026  F01C         	movff	motor_action@r,stop@mR
  1856   0006DC  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1857   0006E0  EC6C  F00D         	call	_stop	;wreg free
  1858   0006E4                     l2944:
  1859                           
  1860                           ;../dc_motor.c: 229:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1861   0006E4  0E29               	movlw	41
  1862   0006E6  6E29               	movwf	(??_motor_action+1)^0,c
  1863   0006E8  0E96               	movlw	150
  1864   0006EA  6E28               	movwf	??_motor_action^0,c
  1865   0006EC  0E7F               	movlw	127
  1866   0006EE                     u1837:
  1867   0006EE  2EE8               	decfsz	wreg,f,c
  1868   0006F0  D7FE               	bra	u1837
  1869   0006F2  2E28               	decfsz	??_motor_action^0,f,c
  1870   0006F4  D7FC               	bra	u1837
  1871   0006F6  2E29               	decfsz	(??_motor_action+1)^0,f,c
  1872   0006F8  D7FA               	bra	u1837
  1873   0006FA  F000               	nop	
  1874   0006FC                     
  1875                           ;../dc_motor.c: 230:             left_90(l,r);
  1876   0006FC  C024  F01A         	movff	motor_action@l,left_90@mL
  1877   000700  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  1878   000704  C026  F01C         	movff	motor_action@r,left_90@mR
  1879   000708  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  1880   00070C  EC35  F00B         	call	_left_90	;wreg free
  1881   000710                     l2948:
  1882                           
  1883                           ;../dc_motor.c: 231:             stop(l,r);
  1884   000710  C024  F01A         	movff	motor_action@l,stop@mL
  1885   000714  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1886   000718  C026  F01C         	movff	motor_action@r,stop@mR
  1887   00071C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1888   000720  EC6C  F00D         	call	_stop	;wreg free
  1889                           
  1890                           ;../dc_motor.c: 232:             break;
  1891   000724  EF40  F005         	goto	l341
  1892   000728                     l2950:
  1893                           
  1894                           ;../dc_motor.c: 234:             reverse_fromcard(l,r);
  1895   000728  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  1896   00072C  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  1897   000730  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  1898   000734  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  1899   000738  EC1C  F00D         	call	_reverse_fromcard	;wreg free
  1900                           
  1901                           ;../dc_motor.c: 235:             stop(l,r);
  1902   00073C  C024  F01A         	movff	motor_action@l,stop@mL
  1903   000740  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1904   000744  C026  F01C         	movff	motor_action@r,stop@mR
  1905   000748  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1906   00074C  EC6C  F00D         	call	_stop	;wreg free
  1907   000750                     
  1908                           ;../dc_motor.c: 236:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1909   000750  0E29               	movlw	41
  1910   000752  6E29               	movwf	(??_motor_action+1)^0,c
  1911   000754  0E96               	movlw	150
  1912   000756  6E28               	movwf	??_motor_action^0,c
  1913   000758  0E7F               	movlw	127
  1914   00075A                     u1847:
  1915   00075A  2EE8               	decfsz	wreg,f,c
  1916   00075C  D7FE               	bra	u1847
  1917   00075E  2E28               	decfsz	??_motor_action^0,f,c
  1918   000760  D7FC               	bra	u1847
  1919   000762  2E29               	decfsz	(??_motor_action+1)^0,f,c
  1920   000764  D7FA               	bra	u1847
  1921   000766  F000               	nop	
  1922   000768                     
  1923                           ;../dc_motor.c: 237:             left_90(l,r);
  1924   000768  C024  F01A         	movff	motor_action@l,left_90@mL
  1925   00076C  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  1926   000770  C026  F01C         	movff	motor_action@r,left_90@mR
  1927   000774  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  1928   000778  EC35  F00B         	call	_left_90	;wreg free
  1929   00077C                     
  1930                           ;../dc_motor.c: 238:             stop(l,r);
  1931   00077C  C024  F01A         	movff	motor_action@l,stop@mL
  1932   000780  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1933   000784  C026  F01C         	movff	motor_action@r,stop@mR
  1934   000788  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1935   00078C  EC6C  F00D         	call	_stop	;wreg free
  1936   000790                     
  1937                           ;../dc_motor.c: 239:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1938   000790  0E29               	movlw	41
  1939   000792  6E29               	movwf	(??_motor_action+1)^0,c
  1940   000794  0E96               	movlw	150
  1941   000796  6E28               	movwf	??_motor_action^0,c
  1942   000798  0E7F               	movlw	127
  1943   00079A                     u1857:
  1944   00079A  2EE8               	decfsz	wreg,f,c
  1945   00079C  D7FE               	bra	u1857
  1946   00079E  2E28               	decfsz	??_motor_action^0,f,c
  1947   0007A0  D7FC               	bra	u1857
  1948   0007A2  2E29               	decfsz	(??_motor_action+1)^0,f,c
  1949   0007A4  D7FA               	bra	u1857
  1950   0007A6  F000               	nop	
  1951                           
  1952                           ;../dc_motor.c: 240:             left_90(l,r);
  1953   0007A8  C024  F01A         	movff	motor_action@l,left_90@mL
  1954   0007AC  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  1955   0007B0  C026  F01C         	movff	motor_action@r,left_90@mR
  1956   0007B4  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  1957   0007B8  EC35  F00B         	call	_left_90	;wreg free
  1958                           
  1959                           ;../dc_motor.c: 241:             stop(l,r);
  1960   0007BC  C024  F01A         	movff	motor_action@l,stop@mL
  1961   0007C0  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1962   0007C4  C026  F01C         	movff	motor_action@r,stop@mR
  1963   0007C8  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1964   0007CC  EC6C  F00D         	call	_stop	;wreg free
  1965                           
  1966                           ;../dc_motor.c: 242:             break;
  1967   0007D0  EF40  F005         	goto	l341
  1968   0007D4                     l2960:
  1969                           
  1970                           ;../dc_motor.c: 244:             reverse_onesquare(l,r);
  1971   0007D4  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  1972   0007D8  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  1973   0007DC  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  1974   0007E0  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  1975   0007E4  EC29  F00C         	call	_reverse_onesquare	;wreg free
  1976                           
  1977                           ;../dc_motor.c: 245:             stop(l,r);
  1978   0007E8  C024  F01A         	movff	motor_action@l,stop@mL
  1979   0007EC  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1980   0007F0  C026  F01C         	movff	motor_action@r,stop@mR
  1981   0007F4  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1982   0007F8  EC6C  F00D         	call	_stop	;wreg free
  1983   0007FC  EF1C  F003         	goto	l2934
  1984   000800                     l2970:
  1985                           
  1986                           ;../dc_motor.c: 254:             reverse_onesquare(l,r);
  1987   000800  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  1988   000804  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  1989   000808  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  1990   00080C  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  1991   000810  EC29  F00C         	call	_reverse_onesquare	;wreg free
  1992                           
  1993                           ;../dc_motor.c: 255:             stop(l,r);
  1994   000814  C024  F01A         	movff	motor_action@l,stop@mL
  1995   000818  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  1996   00081C  C026  F01C         	movff	motor_action@r,stop@mR
  1997   000820  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  1998   000824  EC6C  F00D         	call	_stop	;wreg free
  1999   000828  EF72  F003         	goto	l2944
  2000   00082C                     l2978:
  2001                           
  2002                           ;../dc_motor.c: 261:             reverse_fromcard(l,r);
  2003   00082C  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2004   000830  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2005   000834  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2006   000838  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2007   00083C  EC1C  F00D         	call	_reverse_fromcard	;wreg free
  2008                           
  2009                           ;../dc_motor.c: 262:             stop(l,r);
  2010   000840  C024  F01A         	movff	motor_action@l,stop@mL
  2011   000844  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2012   000848  C026  F01C         	movff	motor_action@r,stop@mR
  2013   00084C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2014   000850  EC6C  F00D         	call	_stop	;wreg free
  2015   000854                     
  2016                           ;../dc_motor.c: 263:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2017   000854  0E29               	movlw	41
  2018   000856  6E29               	movwf	(??_motor_action+1)^0,c
  2019   000858  0E96               	movlw	150
  2020   00085A  6E28               	movwf	??_motor_action^0,c
  2021   00085C  0E7F               	movlw	127
  2022   00085E                     u1867:
  2023   00085E  2EE8               	decfsz	wreg,f,c
  2024   000860  D7FE               	bra	u1867
  2025   000862  2E28               	decfsz	??_motor_action^0,f,c
  2026   000864  D7FC               	bra	u1867
  2027   000866  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2028   000868  D7FA               	bra	u1867
  2029   00086A  F000               	nop	
  2030   00086C                     
  2031                           ;../dc_motor.c: 264:             right_135(l,r);
  2032   00086C  C024  F01A         	movff	motor_action@l,right_135@mL
  2033   000870  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  2034   000874  C026  F01C         	movff	motor_action@r,right_135@mR
  2035   000878  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  2036   00087C  ECD8  F00B         	call	_right_135	;wreg free
  2037   000880                     
  2038                           ;../dc_motor.c: 265:             stop(l,r);
  2039   000880  C024  F01A         	movff	motor_action@l,stop@mL
  2040   000884  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2041   000888  C026  F01C         	movff	motor_action@r,stop@mR
  2042   00088C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2043   000890  EC6C  F00D         	call	_stop	;wreg free
  2044   000894                     
  2045                           ;../dc_motor.c: 266:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2046   000894  0E29               	movlw	41
  2047   000896  6E29               	movwf	(??_motor_action+1)^0,c
  2048   000898  0E96               	movlw	150
  2049   00089A  6E28               	movwf	??_motor_action^0,c
  2050   00089C  0E7F               	movlw	127
  2051   00089E                     u1877:
  2052   00089E  2EE8               	decfsz	wreg,f,c
  2053   0008A0  D7FE               	bra	u1877
  2054   0008A2  2E28               	decfsz	??_motor_action^0,f,c
  2055   0008A4  D7FC               	bra	u1877
  2056   0008A6  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2057   0008A8  D7FA               	bra	u1877
  2058   0008AA  F000               	nop	
  2059                           
  2060                           ;../dc_motor.c: 267:             right_135(l,r);
  2061   0008AC  C024  F01A         	movff	motor_action@l,right_135@mL
  2062   0008B0  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  2063   0008B4  C026  F01C         	movff	motor_action@r,right_135@mR
  2064   0008B8  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  2065   0008BC  ECD8  F00B         	call	_right_135	;wreg free
  2066                           
  2067                           ;../dc_motor.c: 268:             stop(l,r);
  2068   0008C0  C024  F01A         	movff	motor_action@l,stop@mL
  2069   0008C4  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2070   0008C8  C026  F01C         	movff	motor_action@r,stop@mR
  2071   0008CC  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2072   0008D0  EC6C  F00D         	call	_stop	;wreg free
  2073                           
  2074                           ;../dc_motor.c: 269:             break;
  2075   0008D4  EF40  F005         	goto	l341
  2076   0008D8                     l2988:
  2077                           
  2078                           ;../dc_motor.c: 271:             reverse_fromcard(l,r);
  2079   0008D8  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2080   0008DC  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2081   0008E0  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2082   0008E4  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2083   0008E8  EC1C  F00D         	call	_reverse_fromcard	;wreg free
  2084                           
  2085                           ;../dc_motor.c: 272:             stop(l,r);
  2086   0008EC  C024  F01A         	movff	motor_action@l,stop@mL
  2087   0008F0  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2088   0008F4  C026  F01C         	movff	motor_action@r,stop@mR
  2089   0008F8  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2090   0008FC  EC6C  F00D         	call	_stop	;wreg free
  2091   000900                     
  2092                           ;../dc_motor.c: 273:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2093   000900  0E29               	movlw	41
  2094   000902  6E29               	movwf	(??_motor_action+1)^0,c
  2095   000904  0E96               	movlw	150
  2096   000906  6E28               	movwf	??_motor_action^0,c
  2097   000908  0E7F               	movlw	127
  2098   00090A                     u1887:
  2099   00090A  2EE8               	decfsz	wreg,f,c
  2100   00090C  D7FE               	bra	u1887
  2101   00090E  2E28               	decfsz	??_motor_action^0,f,c
  2102   000910  D7FC               	bra	u1887
  2103   000912  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2104   000914  D7FA               	bra	u1887
  2105   000916  F000               	nop	
  2106   000918                     
  2107                           ;../dc_motor.c: 274:             left_135(l,r);
  2108   000918  C024  F01A         	movff	motor_action@l,left_135@mL
  2109   00091C  C025  F01B         	movff	motor_action@l+1,left_135@mL+1
  2110   000920  C026  F01C         	movff	motor_action@r,left_135@mR
  2111   000924  C027  F01D         	movff	motor_action@r+1,left_135@mR+1
  2112   000928  EC7A  F00C         	call	_left_135	;wreg free
  2113   00092C  EF88  F003         	goto	l2948
  2114   000930                     l2996:
  2115                           
  2116                           ;../dc_motor.c: 278:             reverse_fromcard(l,r);
  2117   000930  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2118   000934  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2119   000938  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2120   00093C  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2121   000940  EC1C  F00D         	call	_reverse_fromcard	;wreg free
  2122                           
  2123                           ;../dc_motor.c: 279:             stop(l,r);
  2124   000944  C024  F01A         	movff	motor_action@l,stop@mL
  2125   000948  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2126   00094C  C026  F01C         	movff	motor_action@r,stop@mR
  2127   000950  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2128   000954  EC6C  F00D         	call	_stop	;wreg free
  2129   000958                     
  2130                           ;../dc_motor.c: 280:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2131   000958  0E29               	movlw	41
  2132   00095A  6E29               	movwf	(??_motor_action+1)^0,c
  2133   00095C  0E96               	movlw	150
  2134   00095E  6E28               	movwf	??_motor_action^0,c
  2135   000960  0E7F               	movlw	127
  2136   000962                     u1897:
  2137   000962  2EE8               	decfsz	wreg,f,c
  2138   000964  D7FE               	bra	u1897
  2139   000966  2E28               	decfsz	??_motor_action^0,f,c
  2140   000968  D7FC               	bra	u1897
  2141   00096A  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2142   00096C  D7FA               	bra	u1897
  2143   00096E  F000               	nop	
  2144   000970                     
  2145                           ;../dc_motor.c: 281:             left_90(l,r);
  2146   000970  C024  F01A         	movff	motor_action@l,left_90@mL
  2147   000974  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2148   000978  C026  F01C         	movff	motor_action@r,left_90@mR
  2149   00097C  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2150   000980  EC35  F00B         	call	_left_90	;wreg free
  2151   000984                     
  2152                           ;../dc_motor.c: 282:             stop(l,r);
  2153   000984  C024  F01A         	movff	motor_action@l,stop@mL
  2154   000988  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2155   00098C  C026  F01C         	movff	motor_action@r,stop@mR
  2156   000990  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2157   000994  EC6C  F00D         	call	_stop	;wreg free
  2158   000998                     
  2159                           ;../dc_motor.c: 283:             _delay((unsigned long)((800)*(64000000/4000.0)));
  2160   000998  0E41               	movlw	65
  2161   00099A  6E29               	movwf	(??_motor_action+1)^0,c
  2162   00099C  0EF0               	movlw	240
  2163   00099E  6E28               	movwf	??_motor_action^0,c
  2164   0009A0  0E33               	movlw	51
  2165   0009A2                     u1907:
  2166   0009A2  2EE8               	decfsz	wreg,f,c
  2167   0009A4  D7FE               	bra	u1907
  2168   0009A6  2E28               	decfsz	??_motor_action^0,f,c
  2169   0009A8  D7FC               	bra	u1907
  2170   0009AA  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2171   0009AC  D7FA               	bra	u1907
  2172   0009AE  F000               	nop	
  2173                           
  2174                           ;../dc_motor.c: 284:             left_90(l,r);
  2175   0009B0  C024  F01A         	movff	motor_action@l,left_90@mL
  2176   0009B4  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2177   0009B8  C026  F01C         	movff	motor_action@r,left_90@mR
  2178   0009BC  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2179   0009C0  EC35  F00B         	call	_left_90	;wreg free
  2180                           
  2181                           ;../dc_motor.c: 285:             stop(l,r);
  2182   0009C4  C024  F01A         	movff	motor_action@l,stop@mL
  2183   0009C8  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2184   0009CC  C026  F01C         	movff	motor_action@r,stop@mR
  2185   0009D0  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2186   0009D4  EC6C  F00D         	call	_stop	;wreg free
  2187   0009D8                     l339:
  2188                           
  2189                           ;../dc_motor.c: 287:             stop(l,r);
  2190   0009D8  C024  F01A         	movff	motor_action@l,stop@mL
  2191   0009DC  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2192   0009E0  C026  F01C         	movff	motor_action@r,stop@mR
  2193   0009E4  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2194   0009E8  EC6C  F00D         	call	_stop	;wreg free
  2195                           
  2196                           ;../dc_motor.c: 288:             forward(l,r);
  2197   0009EC  C024  F01A         	movff	motor_action@l,forward@mL
  2198   0009F0  C025  F01B         	movff	motor_action@l+1,forward@mL+1
  2199   0009F4  C026  F01C         	movff	motor_action@r,forward@mR
  2200   0009F8  C027  F01D         	movff	motor_action@r+1,forward@mR+1
  2201   0009FC  ECCB  F00C         	call	_forward	;wreg free
  2202   000A00                     
  2203                           ;../dc_motor.c: 289:             _delay((unsigned long)((400)*(64000000/4000.0)));
  2204   000A00  0E21               	movlw	33
  2205   000A02  6E29               	movwf	(??_motor_action+1)^0,c
  2206   000A04  0E78               	movlw	120
  2207   000A06  6E28               	movwf	??_motor_action^0,c
  2208   000A08  0E98               	movlw	152
  2209   000A0A                     u1917:
  2210   000A0A  2EE8               	decfsz	wreg,f,c
  2211   000A0C  D7FE               	bra	u1917
  2212   000A0E  2E28               	decfsz	??_motor_action^0,f,c
  2213   000A10  D7FC               	bra	u1917
  2214   000A12  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2215   000A14  D7FA               	bra	u1917
  2216   000A16  D000               	nop2	
  2217   000A18  EF88  F003         	goto	l2948
  2218   000A1C                     l3012:
  2219   000A1C  C022  F028         	movff	motor_action@color,??_motor_action
  2220   000A20  C023  F029         	movff	motor_action@color+1,??_motor_action+1
  2221                           
  2222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2223                           ; Switch size 1, requested type "simple"
  2224                           ; Number of cases is 1, Range of values is 0 to 0
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte            4     3 (average)
  2228                           ;	Chosen strategy is simple_byte
  2229   000A24  5029               	movf	(??_motor_action+1)^0,w,c
  2230   000A26  0A00               	xorlw	0	; case 0
  2231   000A28  B4D8               	btfsc	status,2,c
  2232   000A2A  EF19  F005         	goto	l3310
  2233   000A2E  EF40  F005         	goto	l341
  2234   000A32                     l3310:
  2235                           
  2236                           ; Switch size 1, requested type "simple"
  2237                           ; Number of cases is 9, Range of values is 0 to 8
  2238                           ; switch strategies available:
  2239                           ; Name         Instructions Cycles
  2240                           ; simple_byte           28    15 (average)
  2241                           ;	Chosen strategy is simple_byte
  2242   000A32  5028               	movf	??_motor_action^0,w,c
  2243   000A34  0A00               	xorlw	0	; case 0
  2244   000A36  B4D8               	btfsc	status,2,c
  2245   000A38  EFEC  F004         	goto	l339
  2246   000A3C  0A01               	xorlw	1	; case 1
  2247   000A3E  B4D8               	btfsc	status,2,c
  2248   000A40  EF08  F003         	goto	l2932
  2249   000A44  0A03               	xorlw	3	; case 2
  2250   000A46  B4D8               	btfsc	status,2,c
  2251   000A48  EF5E  F003         	goto	l2942
  2252   000A4C  0A01               	xorlw	1	; case 3
  2253   000A4E  B4D8               	btfsc	status,2,c
  2254   000A50  EF94  F003         	goto	l2950
  2255   000A54  0A07               	xorlw	7	; case 4
  2256   000A56  B4D8               	btfsc	status,2,c
  2257   000A58  EFEA  F003         	goto	l2960
  2258   000A5C  0A01               	xorlw	1	; case 5
  2259   000A5E  B4D8               	btfsc	status,2,c
  2260   000A60  EF00  F004         	goto	l2970
  2261   000A64  0A03               	xorlw	3	; case 6
  2262   000A66  B4D8               	btfsc	status,2,c
  2263   000A68  EF16  F004         	goto	l2978
  2264   000A6C  0A01               	xorlw	1	; case 7
  2265   000A6E  B4D8               	btfsc	status,2,c
  2266   000A70  EF6C  F004         	goto	l2988
  2267   000A74  0A0F               	xorlw	15	; case 8
  2268   000A76  B4D8               	btfsc	status,2,c
  2269   000A78  EF98  F004         	goto	l2996
  2270   000A7C  EF40  F005         	goto	l341
  2271   000A80                     l341:
  2272   000A80  0012               	return		;funcret
  2273   000A82                     __end_of_motor_action:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function _stop *****************
  2277 ;; Defined at:
  2278 ;;		line 61 in file "../dc_motor.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2281 ;;		 -> main@motorL(9), 
  2282 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2283 ;;		 -> main@motorR(9), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  i               2   30[COMRAM] int 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;Total ram usage:        7 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 3
  2302 ;; This function calls:
  2303 ;;		_setMotorPWM
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;;		_motor_action
  2307 ;;		_motor_action_return
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text3
  2312   001AD8                     __ptext3:
  2313                           	callstack 0
  2314   001AD8                     _stop:
  2315                           	callstack 27
  2316   001AD8                     
  2317                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  2318   001AD8  EE20 F001          	lfsr	2,1
  2319   001ADC  501A               	movf	stop@mL^0,w,c
  2320   001ADE  26D9               	addwf	fsr2l,f,c
  2321   001AE0  501B               	movf	(stop@mL+1)^0,w,c
  2322   001AE2  22DA               	addwfc	fsr2h,f,c
  2323   001AE4  0E00               	movlw	0
  2324   001AE6  6EDF               	movwf	indf2,c
  2325                           
  2326                           ;../dc_motor.c: 64:     mR->direction = 0;
  2327   001AE8  EE20 F001          	lfsr	2,1
  2328   001AEC  501C               	movf	stop@mR^0,w,c
  2329   001AEE  26D9               	addwf	fsr2l,f,c
  2330   001AF0  501D               	movf	(stop@mR+1)^0,w,c
  2331   001AF2  22DA               	addwfc	fsr2h,f,c
  2332   001AF4  0E00               	movlw	0
  2333   001AF6  6EDF               	movwf	indf2,c
  2334   001AF8                     
  2335                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  2336   001AF8  0E00               	movlw	0
  2337   001AFA  6E20               	movwf	(stop@i+1)^0,c
  2338   001AFC  0E05               	movlw	5
  2339   001AFE  6E1F               	movwf	stop@i^0,c
  2340   001B00                     l2378:
  2341                           
  2342                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  2343   001B00  C01A  FFD9         	movff	stop@mL,fsr2l
  2344   001B04  C01B  FFDA         	movff	stop@mL+1,fsr2h
  2345   001B08  C01F  FFDF         	movff	stop@i,indf2
  2346                           
  2347                           ;../dc_motor.c: 68:         mR->power = i;
  2348   001B0C  C01C  FFD9         	movff	stop@mR,fsr2l
  2349   001B10  C01D  FFDA         	movff	stop@mR+1,fsr2h
  2350   001B14  C01F  FFDF         	movff	stop@i,indf2
  2351   001B18                     
  2352                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  2353   001B18  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  2354   001B1C  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  2355   001B20  EC56  F007         	call	_setMotorPWM	;wreg free
  2356   001B24                     
  2357                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  2358   001B24  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  2359   001B28  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  2360   001B2C  EC56  F007         	call	_setMotorPWM	;wreg free
  2361   001B30                     
  2362                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2363   001B30  0ED0               	movlw	208
  2364   001B32  6E1E               	movwf	??_stop^0,c
  2365   001B34  0ECA               	movlw	202
  2366   001B36                     u1927:
  2367   001B36  2EE8               	decfsz	wreg,f,c
  2368   001B38  D7FE               	bra	u1927
  2369   001B3A  2E1E               	decfsz	??_stop^0,f,c
  2370   001B3C  D7FC               	bra	u1927
  2371   001B3E                     
  2372                           ;../dc_motor.c: 72:     }
  2373   001B3E  0EFF               	movlw	255
  2374   001B40  241F               	addwf	stop@i^0,w,c
  2375   001B42  6E1F               	movwf	stop@i^0,c
  2376   001B44  0EFF               	movlw	255
  2377   001B46  2020               	addwfc	(stop@i+1)^0,w,c
  2378   001B48  6E20               	movwf	(stop@i+1)^0,c
  2379   001B4A  BE20               	btfsc	(stop@i+1)^0,7,c
  2380   001B4C  EFB2  F00D         	goto	u980
  2381   001B50  5020               	movf	(stop@i+1)^0,w,c
  2382   001B52  E106               	bnz	u981
  2383   001B54  041F               	decf	stop@i^0,w,c
  2384   001B56  B0D8               	btfsc	status,0,c
  2385   001B58  EFB0  F00D         	goto	u981
  2386   001B5C  EFB2  F00D         	goto	u980
  2387   001B60                     u981:
  2388   001B60  EF80  F00D         	goto	l2378
  2389   001B64                     u980:
  2390   001B64  0012               	return		;funcret
  2391   001B66                     __end_of_stop:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function _right_90 *****************
  2395 ;; Defined at:
  2396 ;;		line 137 in file "../dc_motor.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2399 ;;		 -> main@motorL(9), 
  2400 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2401 ;;		 -> main@motorR(9), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  i               2   31[COMRAM] int 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;Total ram usage:        8 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 3
  2420 ;; This function calls:
  2421 ;;		_setMotorPWM
  2422 ;; This function is called by:
  2423 ;;		_motor_action
  2424 ;;		_motor_action_return
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text4
  2429   0015C6                     __ptext4:
  2430                           	callstack 0
  2431   0015C6                     _right_90:
  2432                           	callstack 26
  2433   0015C6                     
  2434                           ;../dc_motor.c: 137: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 138: {;../dc_motor.c: 139:     mL->direction = 1;
  2435   0015C6  EE20 F001          	lfsr	2,1
  2436   0015CA  501A               	movf	right_90@mL^0,w,c
  2437   0015CC  26D9               	addwf	fsr2l,f,c
  2438   0015CE  501B               	movf	(right_90@mL+1)^0,w,c
  2439   0015D0  22DA               	addwfc	fsr2h,f,c
  2440   0015D2  0E01               	movlw	1
  2441   0015D4  6EDF               	movwf	indf2,c
  2442                           
  2443                           ;../dc_motor.c: 140:     mR->direction = 0;
  2444   0015D6  EE20 F001          	lfsr	2,1
  2445   0015DA  501C               	movf	right_90@mR^0,w,c
  2446   0015DC  26D9               	addwf	fsr2l,f,c
  2447   0015DE  501D               	movf	(right_90@mR+1)^0,w,c
  2448   0015E0  22DA               	addwfc	fsr2h,f,c
  2449   0015E2  0E00               	movlw	0
  2450   0015E4  6EDF               	movwf	indf2,c
  2451   0015E6                     
  2452                           ;../dc_motor.c: 141:     for (int i = 0;i<251;i = i + 2)
  2453   0015E6  0E00               	movlw	0
  2454   0015E8  6E21               	movwf	(right_90@i+1)^0,c
  2455   0015EA  0E00               	movlw	0
  2456   0015EC  6E20               	movwf	right_90@i^0,c
  2457   0015EE                     l2464:
  2458                           
  2459                           ;../dc_motor.c: 142:     {;../dc_motor.c: 143:         mL->power = i;
  2460   0015EE  C01A  FFD9         	movff	right_90@mL,fsr2l
  2461   0015F2  C01B  FFDA         	movff	right_90@mL+1,fsr2h
  2462   0015F6  C020  FFDF         	movff	right_90@i,indf2
  2463   0015FA                     
  2464                           ;../dc_motor.c: 144:         mR->power = 50 + i;
  2465   0015FA  5020               	movf	right_90@i^0,w,c
  2466   0015FC  0F32               	addlw	50
  2467   0015FE  C01C  FFD9         	movff	right_90@mR,fsr2l
  2468   001602  C01D  FFDA         	movff	right_90@mR+1,fsr2h
  2469   001606  6EDF               	movwf	indf2,c
  2470   001608                     
  2471                           ;../dc_motor.c: 145:         setMotorPWM(mL);
  2472   001608  C01A  F00F         	movff	right_90@mL,setMotorPWM@m
  2473   00160C  C01B  F010         	movff	right_90@mL+1,setMotorPWM@m+1
  2474   001610  EC56  F007         	call	_setMotorPWM	;wreg free
  2475   001614                     
  2476                           ;../dc_motor.c: 146:         setMotorPWM(mR);
  2477   001614  C01C  F00F         	movff	right_90@mR,setMotorPWM@m
  2478   001618  C01D  F010         	movff	right_90@mR+1,setMotorPWM@m+1
  2479   00161C  EC56  F007         	call	_setMotorPWM	;wreg free
  2480   001620                     
  2481                           ;../dc_motor.c: 147:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  2482   001620  0E35               	movlw	53
  2483   001622                     u1937:
  2484   001622  2EE8               	decfsz	wreg,f,c
  2485   001624  D7FE               	bra	u1937
  2486   001626  F000               	nop	
  2487   001628                     
  2488                           ;../dc_motor.c: 148:     }
  2489   001628  0E02               	movlw	2
  2490   00162A  2420               	addwf	right_90@i^0,w,c
  2491   00162C  6E20               	movwf	right_90@i^0,c
  2492   00162E  0E00               	movlw	0
  2493   001630  2021               	addwfc	(right_90@i+1)^0,w,c
  2494   001632  6E21               	movwf	(right_90@i+1)^0,c
  2495   001634  BE21               	btfsc	(right_90@i+1)^0,7,c
  2496   001636  EF26  F00B         	goto	u1021
  2497   00163A  5021               	movf	(right_90@i+1)^0,w,c
  2498   00163C  E109               	bnz	u1020
  2499   00163E  0EFB               	movlw	251
  2500   001640  5C20               	subwf	right_90@i^0,w,c
  2501   001642  A0D8               	btfss	status,0,c
  2502   001644  EF26  F00B         	goto	u1021
  2503   001648  EF28  F00B         	goto	u1020
  2504   00164C                     u1021:
  2505   00164C  EFF7  F00A         	goto	l2464
  2506   001650                     u1020:
  2507   001650                     
  2508                           ;../dc_motor.c: 149:     _delay((unsigned long)((165)*(64000000/4000.0)));
  2509   001650  0E0E               	movlw	14
  2510   001652  6E1F               	movwf	(??_right_90+1)^0,c
  2511   001654  0E65               	movlw	101
  2512   001656  6E1E               	movwf	??_right_90^0,c
  2513   001658  0E87               	movlw	135
  2514   00165A                     u1947:
  2515   00165A  2EE8               	decfsz	wreg,f,c
  2516   00165C  D7FE               	bra	u1947
  2517   00165E  2E1E               	decfsz	??_right_90^0,f,c
  2518   001660  D7FC               	bra	u1947
  2519   001662  2E1F               	decfsz	(??_right_90+1)^0,f,c
  2520   001664  D7FA               	bra	u1947
  2521   001666  F000               	nop	
  2522   001668  0012               	return		;funcret
  2523   00166A                     __end_of_right_90:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _right_135 *****************
  2527 ;; Defined at:
  2528 ;;		line 182 in file "../dc_motor.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2531 ;;		 -> main@motorL(9), 
  2532 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2533 ;;		 -> main@motorR(9), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  i               2   31[COMRAM] int 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;Total ram usage:        8 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 3
  2552 ;; This function calls:
  2553 ;;		_setMotorPWM
  2554 ;; This function is called by:
  2555 ;;		_motor_action
  2556 ;;		_motor_action_return
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text5
  2561   0017B0                     __ptext5:
  2562                           	callstack 0
  2563   0017B0                     _right_135:
  2564                           	callstack 26
  2565   0017B0                     
  2566                           ;../dc_motor.c: 182: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 183: {;../dc_motor.c: 184:     mL->direction = 1;
  2567   0017B0  EE20 F001          	lfsr	2,1
  2568   0017B4  501A               	movf	right_135@mL^0,w,c
  2569   0017B6  26D9               	addwf	fsr2l,f,c
  2570   0017B8  501B               	movf	(right_135@mL+1)^0,w,c
  2571   0017BA  22DA               	addwfc	fsr2h,f,c
  2572   0017BC  0E01               	movlw	1
  2573   0017BE  6EDF               	movwf	indf2,c
  2574                           
  2575                           ;../dc_motor.c: 185:     mR->direction = 0;
  2576   0017C0  EE20 F001          	lfsr	2,1
  2577   0017C4  501C               	movf	right_135@mR^0,w,c
  2578   0017C6  26D9               	addwf	fsr2l,f,c
  2579   0017C8  501D               	movf	(right_135@mR+1)^0,w,c
  2580   0017CA  22DA               	addwfc	fsr2h,f,c
  2581   0017CC  0E00               	movlw	0
  2582   0017CE  6EDF               	movwf	indf2,c
  2583   0017D0                     
  2584                           ;../dc_motor.c: 186:     for (int i = 0;i<300;i = i + 2)
  2585   0017D0  0E00               	movlw	0
  2586   0017D2  6E21               	movwf	(right_135@i+1)^0,c
  2587   0017D4  0E00               	movlw	0
  2588   0017D6  6E20               	movwf	right_135@i^0,c
  2589   0017D8                     l2512:
  2590                           
  2591                           ;../dc_motor.c: 187:     {;../dc_motor.c: 188:         mL->power = i;
  2592   0017D8  C01A  FFD9         	movff	right_135@mL,fsr2l
  2593   0017DC  C01B  FFDA         	movff	right_135@mL+1,fsr2h
  2594   0017E0  C020  FFDF         	movff	right_135@i,indf2
  2595   0017E4                     
  2596                           ;../dc_motor.c: 189:         mR->power = 50 + i;
  2597   0017E4  5020               	movf	right_135@i^0,w,c
  2598   0017E6  0F32               	addlw	50
  2599   0017E8  C01C  FFD9         	movff	right_135@mR,fsr2l
  2600   0017EC  C01D  FFDA         	movff	right_135@mR+1,fsr2h
  2601   0017F0  6EDF               	movwf	indf2,c
  2602   0017F2                     
  2603                           ;../dc_motor.c: 190:         setMotorPWM(mL);
  2604   0017F2  C01A  F00F         	movff	right_135@mL,setMotorPWM@m
  2605   0017F6  C01B  F010         	movff	right_135@mL+1,setMotorPWM@m+1
  2606   0017FA  EC56  F007         	call	_setMotorPWM	;wreg free
  2607   0017FE                     
  2608                           ;../dc_motor.c: 191:         setMotorPWM(mR);
  2609   0017FE  C01C  F00F         	movff	right_135@mR,setMotorPWM@m
  2610   001802  C01D  F010         	movff	right_135@mR+1,setMotorPWM@m+1
  2611   001806  EC56  F007         	call	_setMotorPWM	;wreg free
  2612   00180A                     
  2613                           ;../dc_motor.c: 192:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  2614   00180A  0E35               	movlw	53
  2615   00180C                     u1957:
  2616   00180C  2EE8               	decfsz	wreg,f,c
  2617   00180E  D7FE               	bra	u1957
  2618   001810  F000               	nop	
  2619   001812                     
  2620                           ;../dc_motor.c: 193:     }
  2621   001812  0E02               	movlw	2
  2622   001814  2420               	addwf	right_135@i^0,w,c
  2623   001816  6E20               	movwf	right_135@i^0,c
  2624   001818  0E00               	movlw	0
  2625   00181A  2021               	addwfc	(right_135@i+1)^0,w,c
  2626   00181C  6E21               	movwf	(right_135@i+1)^0,c
  2627   00181E  BE21               	btfsc	(right_135@i+1)^0,7,c
  2628   001820  EF1B  F00C         	goto	u1041
  2629   001824  0E2C               	movlw	44
  2630   001826  5C20               	subwf	right_135@i^0,w,c
  2631   001828  0E01               	movlw	1
  2632   00182A  5821               	subwfb	(right_135@i+1)^0,w,c
  2633   00182C  A0D8               	btfss	status,0,c
  2634   00182E  EF1B  F00C         	goto	u1041
  2635   001832  EF1D  F00C         	goto	u1040
  2636   001836                     u1041:
  2637   001836  EFEC  F00B         	goto	l2512
  2638   00183A                     u1040:
  2639   00183A                     
  2640                           ;../dc_motor.c: 194:     _delay((unsigned long)((230)*(64000000/4000.0)));
  2641   00183A  0E13               	movlw	19
  2642   00183C  6E1F               	movwf	(??_right_135+1)^0,c
  2643   00183E  0EAC               	movlw	172
  2644   001840  6E1E               	movwf	??_right_135^0,c
  2645   001842  0E2A               	movlw	42
  2646   001844                     u1967:
  2647   001844  2EE8               	decfsz	wreg,f,c
  2648   001846  D7FE               	bra	u1967
  2649   001848  2E1E               	decfsz	??_right_135^0,f,c
  2650   00184A  D7FC               	bra	u1967
  2651   00184C  2E1F               	decfsz	(??_right_135+1)^0,f,c
  2652   00184E  D7FA               	bra	u1967
  2653   001850  0012               	return		;funcret
  2654   001852                     __end_of_right_135:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _reverse_onesquare *****************
  2658 ;; Defined at:
  2659 ;;		line 122 in file "../dc_motor.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2662 ;;		 -> main@motorL(9), 
  2663 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2664 ;;		 -> main@motorR(9), 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  i               2   31[COMRAM] int 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;Total ram usage:        8 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 3
  2683 ;; This function calls:
  2684 ;;		_setMotorPWM
  2685 ;; This function is called by:
  2686 ;;		_motor_action
  2687 ;;		_motor_action_return
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text6
  2692   001852                     __ptext6:
  2693                           	callstack 0
  2694   001852                     _reverse_onesquare:
  2695                           	callstack 26
  2696   001852                     
  2697                           ;../dc_motor.c: 122: void reverse_onesquare (struct DC_motor *mL, struct DC_motor *mR);.
      +                          ./dc_motor.c: 123: {;../dc_motor.c: 124:     mL->direction = 0;
  2698   001852  EE20 F001          	lfsr	2,1
  2699   001856  501A               	movf	reverse_onesquare@mL^0,w,c
  2700   001858  26D9               	addwf	fsr2l,f,c
  2701   00185A  501B               	movf	(reverse_onesquare@mL+1)^0,w,c
  2702   00185C  22DA               	addwfc	fsr2h,f,c
  2703   00185E  0E00               	movlw	0
  2704   001860  6EDF               	movwf	indf2,c
  2705                           
  2706                           ;../dc_motor.c: 125:     mR->direction = 0;
  2707   001862  EE20 F001          	lfsr	2,1
  2708   001866  501C               	movf	reverse_onesquare@mR^0,w,c
  2709   001868  26D9               	addwf	fsr2l,f,c
  2710   00186A  501D               	movf	(reverse_onesquare@mR+1)^0,w,c
  2711   00186C  22DA               	addwfc	fsr2h,f,c
  2712   00186E  0E00               	movlw	0
  2713   001870  6EDF               	movwf	indf2,c
  2714   001872                     
  2715                           ;../dc_motor.c: 126:     for (int i=0;i<9;i=i + 2)
  2716   001872  0E00               	movlw	0
  2717   001874  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  2718   001876  0E00               	movlw	0
  2719   001878  6E20               	movwf	reverse_onesquare@i^0,c
  2720   00187A                     l2442:
  2721                           
  2722                           ;../dc_motor.c: 127:     {;../dc_motor.c: 128:         mL->power = i;
  2723   00187A  C01A  FFD9         	movff	reverse_onesquare@mL,fsr2l
  2724   00187E  C01B  FFDA         	movff	reverse_onesquare@mL+1,fsr2h
  2725   001882  C020  FFDF         	movff	reverse_onesquare@i,indf2
  2726                           
  2727                           ;../dc_motor.c: 129:         mR->power = i;
  2728   001886  C01C  FFD9         	movff	reverse_onesquare@mR,fsr2l
  2729   00188A  C01D  FFDA         	movff	reverse_onesquare@mR+1,fsr2h
  2730   00188E  C020  FFDF         	movff	reverse_onesquare@i,indf2
  2731   001892                     
  2732                           ;../dc_motor.c: 130:         setMotorPWM(mL);
  2733   001892  C01A  F00F         	movff	reverse_onesquare@mL,setMotorPWM@m
  2734   001896  C01B  F010         	movff	reverse_onesquare@mL+1,setMotorPWM@m+1
  2735   00189A  EC56  F007         	call	_setMotorPWM	;wreg free
  2736   00189E                     
  2737                           ;../dc_motor.c: 131:         setMotorPWM(mR);
  2738   00189E  C01C  F00F         	movff	reverse_onesquare@mR,setMotorPWM@m
  2739   0018A2  C01D  F010         	movff	reverse_onesquare@mR+1,setMotorPWM@m+1
  2740   0018A6  EC56  F007         	call	_setMotorPWM	;wreg free
  2741   0018AA                     
  2742                           ;../dc_motor.c: 132:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  2743   0018AA  0E35               	movlw	53
  2744   0018AC                     u1977:
  2745   0018AC  2EE8               	decfsz	wreg,f,c
  2746   0018AE  D7FE               	bra	u1977
  2747   0018B0  F000               	nop	
  2748   0018B2                     
  2749                           ;../dc_motor.c: 133:     }
  2750   0018B2  0E02               	movlw	2
  2751   0018B4  2420               	addwf	reverse_onesquare@i^0,w,c
  2752   0018B6  6E20               	movwf	reverse_onesquare@i^0,c
  2753   0018B8  0E00               	movlw	0
  2754   0018BA  2021               	addwfc	(reverse_onesquare@i+1)^0,w,c
  2755   0018BC  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  2756   0018BE  BE21               	btfsc	(reverse_onesquare@i+1)^0,7,c
  2757   0018C0  EF6B  F00C         	goto	u1011
  2758   0018C4  5021               	movf	(reverse_onesquare@i+1)^0,w,c
  2759   0018C6  E109               	bnz	u1010
  2760   0018C8  0E09               	movlw	9
  2761   0018CA  5C20               	subwf	reverse_onesquare@i^0,w,c
  2762   0018CC  A0D8               	btfss	status,0,c
  2763   0018CE  EF6B  F00C         	goto	u1011
  2764   0018D2  EF6D  F00C         	goto	u1010
  2765   0018D6                     u1011:
  2766   0018D6  EF3D  F00C         	goto	l2442
  2767   0018DA                     u1010:
  2768   0018DA                     
  2769                           ;../dc_motor.c: 134:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  2770   0018DA  0E5A               	movlw	90
  2771   0018DC  6E1F               	movwf	(??_reverse_onesquare+1)^0,c
  2772   0018DE  0E49               	movlw	73
  2773   0018E0  6E1E               	movwf	??_reverse_onesquare^0,c
  2774   0018E2  0EE7               	movlw	231
  2775   0018E4                     u1987:
  2776   0018E4  2EE8               	decfsz	wreg,f,c
  2777   0018E6  D7FE               	bra	u1987
  2778   0018E8  2E1E               	decfsz	??_reverse_onesquare^0,f,c
  2779   0018EA  D7FC               	bra	u1987
  2780   0018EC  2E1F               	decfsz	(??_reverse_onesquare+1)^0,f,c
  2781   0018EE  D7FA               	bra	u1987
  2782   0018F0  F000               	nop	
  2783   0018F2  0012               	return		;funcret
  2784   0018F4                     __end_of_reverse_onesquare:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _reverse_fromcard *****************
  2788 ;; Defined at:
  2789 ;;		line 107 in file "../dc_motor.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2792 ;;		 -> main@motorL(9), 
  2793 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2794 ;;		 -> main@motorR(9), 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  i               2   31[COMRAM] int 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;Total ram usage:        8 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 3
  2813 ;; This function calls:
  2814 ;;		_setMotorPWM
  2815 ;; This function is called by:
  2816 ;;		_motor_action
  2817 ;;		_motor_action_return
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text7
  2822   001A38                     __ptext7:
  2823                           	callstack 0
  2824   001A38                     _reverse_fromcard:
  2825                           	callstack 26
  2826   001A38                     
  2827                           ;../dc_motor.c: 107: void reverse_fromcard (struct DC_motor *mL, struct DC_motor *mR);..
      +                          /dc_motor.c: 108: {;../dc_motor.c: 109:     mL->direction = 0;
  2828   001A38  EE20 F001          	lfsr	2,1
  2829   001A3C  501A               	movf	reverse_fromcard@mL^0,w,c
  2830   001A3E  26D9               	addwf	fsr2l,f,c
  2831   001A40  501B               	movf	(reverse_fromcard@mL+1)^0,w,c
  2832   001A42  22DA               	addwfc	fsr2h,f,c
  2833   001A44  0E00               	movlw	0
  2834   001A46  6EDF               	movwf	indf2,c
  2835                           
  2836                           ;../dc_motor.c: 110:     mR->direction = 0;
  2837   001A48  EE20 F001          	lfsr	2,1
  2838   001A4C  501C               	movf	reverse_fromcard@mR^0,w,c
  2839   001A4E  26D9               	addwf	fsr2l,f,c
  2840   001A50  501D               	movf	(reverse_fromcard@mR+1)^0,w,c
  2841   001A52  22DA               	addwfc	fsr2h,f,c
  2842   001A54  0E00               	movlw	0
  2843   001A56  6EDF               	movwf	indf2,c
  2844   001A58                     
  2845                           ;../dc_motor.c: 111:     for (int i = 0;i < 9;i = i + 2)
  2846   001A58  0E00               	movlw	0
  2847   001A5A  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  2848   001A5C  0E00               	movlw	0
  2849   001A5E  6E20               	movwf	reverse_fromcard@i^0,c
  2850   001A60                     l2420:
  2851                           
  2852                           ;../dc_motor.c: 112:     {;../dc_motor.c: 113:         mL->power = i;
  2853   001A60  C01A  FFD9         	movff	reverse_fromcard@mL,fsr2l
  2854   001A64  C01B  FFDA         	movff	reverse_fromcard@mL+1,fsr2h
  2855   001A68  C020  FFDF         	movff	reverse_fromcard@i,indf2
  2856                           
  2857                           ;../dc_motor.c: 114:         mR->power = i;
  2858   001A6C  C01C  FFD9         	movff	reverse_fromcard@mR,fsr2l
  2859   001A70  C01D  FFDA         	movff	reverse_fromcard@mR+1,fsr2h
  2860   001A74  C020  FFDF         	movff	reverse_fromcard@i,indf2
  2861   001A78                     
  2862                           ;../dc_motor.c: 115:         setMotorPWM(mL);
  2863   001A78  C01A  F00F         	movff	reverse_fromcard@mL,setMotorPWM@m
  2864   001A7C  C01B  F010         	movff	reverse_fromcard@mL+1,setMotorPWM@m+1
  2865   001A80  EC56  F007         	call	_setMotorPWM	;wreg free
  2866   001A84                     
  2867                           ;../dc_motor.c: 116:         setMotorPWM(mR);
  2868   001A84  C01C  F00F         	movff	reverse_fromcard@mR,setMotorPWM@m
  2869   001A88  C01D  F010         	movff	reverse_fromcard@mR+1,setMotorPWM@m+1
  2870   001A8C  EC56  F007         	call	_setMotorPWM	;wreg free
  2871   001A90                     
  2872                           ;../dc_motor.c: 117:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  2873   001A90  0E35               	movlw	53
  2874   001A92                     u1997:
  2875   001A92  2EE8               	decfsz	wreg,f,c
  2876   001A94  D7FE               	bra	u1997
  2877   001A96  F000               	nop	
  2878   001A98                     
  2879                           ;../dc_motor.c: 118:     }
  2880   001A98  0E02               	movlw	2
  2881   001A9A  2420               	addwf	reverse_fromcard@i^0,w,c
  2882   001A9C  6E20               	movwf	reverse_fromcard@i^0,c
  2883   001A9E  0E00               	movlw	0
  2884   001AA0  2021               	addwfc	(reverse_fromcard@i+1)^0,w,c
  2885   001AA2  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  2886   001AA4  BE21               	btfsc	(reverse_fromcard@i+1)^0,7,c
  2887   001AA6  EF5E  F00D         	goto	u1001
  2888   001AAA  5021               	movf	(reverse_fromcard@i+1)^0,w,c
  2889   001AAC  E109               	bnz	u1000
  2890   001AAE  0E09               	movlw	9
  2891   001AB0  5C20               	subwf	reverse_fromcard@i^0,w,c
  2892   001AB2  A0D8               	btfss	status,0,c
  2893   001AB4  EF5E  F00D         	goto	u1001
  2894   001AB8  EF60  F00D         	goto	u1000
  2895   001ABC                     u1001:
  2896   001ABC  EF30  F00D         	goto	l2420
  2897   001AC0                     u1000:
  2898   001AC0                     
  2899                           ;../dc_motor.c: 119:     _delay((unsigned long)((300)*(64000000/4000.0)));
  2900   001AC0  0E19               	movlw	25
  2901   001AC2  6E1F               	movwf	(??_reverse_fromcard+1)^0,c
  2902   001AC4  0E5A               	movlw	90
  2903   001AC6  6E1E               	movwf	??_reverse_fromcard^0,c
  2904   001AC8  0EB2               	movlw	178
  2905   001ACA                     u2007:
  2906   001ACA  2EE8               	decfsz	wreg,f,c
  2907   001ACC  D7FE               	bra	u2007
  2908   001ACE  2E1E               	decfsz	??_reverse_fromcard^0,f,c
  2909   001AD0  D7FC               	bra	u2007
  2910   001AD2  2E1F               	decfsz	(??_reverse_fromcard+1)^0,f,c
  2911   001AD4  D7FA               	bra	u2007
  2912   001AD6  0012               	return		;funcret
  2913   001AD8                     __end_of_reverse_fromcard:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _left_90 *****************
  2917 ;; Defined at:
  2918 ;;		line 152 in file "../dc_motor.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2921 ;;		 -> main@motorL(9), 
  2922 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2923 ;;		 -> main@motorR(9), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  i               2   31[COMRAM] int 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        8 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 3
  2942 ;; This function calls:
  2943 ;;		_setMotorPWM
  2944 ;; This function is called by:
  2945 ;;		_motor_action
  2946 ;;		_motor_action_return
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text8
  2951   00166A                     __ptext8:
  2952                           	callstack 0
  2953   00166A                     _left_90:
  2954                           	callstack 26
  2955   00166A                     
  2956                           ;../dc_motor.c: 152: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 153: {;../dc_motor.c: 154:     mL->direction = 0;
  2957   00166A  EE20 F001          	lfsr	2,1
  2958   00166E  501A               	movf	left_90@mL^0,w,c
  2959   001670  26D9               	addwf	fsr2l,f,c
  2960   001672  501B               	movf	(left_90@mL+1)^0,w,c
  2961   001674  22DA               	addwfc	fsr2h,f,c
  2962   001676  0E00               	movlw	0
  2963   001678  6EDF               	movwf	indf2,c
  2964                           
  2965                           ;../dc_motor.c: 155:     mR->direction = 1;
  2966   00167A  EE20 F001          	lfsr	2,1
  2967   00167E  501C               	movf	left_90@mR^0,w,c
  2968   001680  26D9               	addwf	fsr2l,f,c
  2969   001682  501D               	movf	(left_90@mR+1)^0,w,c
  2970   001684  22DA               	addwfc	fsr2h,f,c
  2971   001686  0E01               	movlw	1
  2972   001688  6EDF               	movwf	indf2,c
  2973   00168A                     
  2974                           ;../dc_motor.c: 156:     for (int i = 0;i<301;i = i + 2)
  2975   00168A  0E00               	movlw	0
  2976   00168C  6E21               	movwf	(left_90@i+1)^0,c
  2977   00168E  0E00               	movlw	0
  2978   001690  6E20               	movwf	left_90@i^0,c
  2979   001692                     l2488:
  2980                           
  2981                           ;../dc_motor.c: 157:     {;../dc_motor.c: 158:         mL->power = 50 + i;
  2982   001692  5020               	movf	left_90@i^0,w,c
  2983   001694  0F32               	addlw	50
  2984   001696  C01A  FFD9         	movff	left_90@mL,fsr2l
  2985   00169A  C01B  FFDA         	movff	left_90@mL+1,fsr2h
  2986   00169E  6EDF               	movwf	indf2,c
  2987   0016A0                     
  2988                           ;../dc_motor.c: 159:         mR->power = i;
  2989   0016A0  C01C  FFD9         	movff	left_90@mR,fsr2l
  2990   0016A4  C01D  FFDA         	movff	left_90@mR+1,fsr2h
  2991   0016A8  C020  FFDF         	movff	left_90@i,indf2
  2992   0016AC                     
  2993                           ;../dc_motor.c: 160:         setMotorPWM(mL);
  2994   0016AC  C01A  F00F         	movff	left_90@mL,setMotorPWM@m
  2995   0016B0  C01B  F010         	movff	left_90@mL+1,setMotorPWM@m+1
  2996   0016B4  EC56  F007         	call	_setMotorPWM	;wreg free
  2997   0016B8                     
  2998                           ;../dc_motor.c: 161:         setMotorPWM(mR);
  2999   0016B8  C01C  F00F         	movff	left_90@mR,setMotorPWM@m
  3000   0016BC  C01D  F010         	movff	left_90@mR+1,setMotorPWM@m+1
  3001   0016C0  EC56  F007         	call	_setMotorPWM	;wreg free
  3002   0016C4                     
  3003                           ;../dc_motor.c: 162:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3004   0016C4  0E35               	movlw	53
  3005   0016C6                     u2017:
  3006   0016C6  2EE8               	decfsz	wreg,f,c
  3007   0016C8  D7FE               	bra	u2017
  3008   0016CA  F000               	nop	
  3009   0016CC                     
  3010                           ;../dc_motor.c: 163:     }
  3011   0016CC  0E02               	movlw	2
  3012   0016CE  2420               	addwf	left_90@i^0,w,c
  3013   0016D0  6E20               	movwf	left_90@i^0,c
  3014   0016D2  0E00               	movlw	0
  3015   0016D4  2021               	addwfc	(left_90@i+1)^0,w,c
  3016   0016D6  6E21               	movwf	(left_90@i+1)^0,c
  3017   0016D8  BE21               	btfsc	(left_90@i+1)^0,7,c
  3018   0016DA  EF78  F00B         	goto	u1031
  3019   0016DE  0E2D               	movlw	45
  3020   0016E0  5C20               	subwf	left_90@i^0,w,c
  3021   0016E2  0E01               	movlw	1
  3022   0016E4  5821               	subwfb	(left_90@i+1)^0,w,c
  3023   0016E6  A0D8               	btfss	status,0,c
  3024   0016E8  EF78  F00B         	goto	u1031
  3025   0016EC  EF7A  F00B         	goto	u1030
  3026   0016F0                     u1031:
  3027   0016F0  EF49  F00B         	goto	l2488
  3028   0016F4                     u1030:
  3029   0016F4                     
  3030                           ;../dc_motor.c: 164:     _delay((unsigned long)((195)*(64000000/4000.0)));
  3031   0016F4  0E10               	movlw	16
  3032   0016F6  6E1F               	movwf	(??_left_90+1)^0,c
  3033   0016F8  0ED4               	movlw	212
  3034   0016FA  6E1E               	movwf	??_left_90^0,c
  3035   0016FC  0EE6               	movlw	230
  3036   0016FE                     u2027:
  3037   0016FE  2EE8               	decfsz	wreg,f,c
  3038   001700  D7FE               	bra	u2027
  3039   001702  2E1E               	decfsz	??_left_90^0,f,c
  3040   001704  D7FC               	bra	u2027
  3041   001706  2E1F               	decfsz	(??_left_90+1)^0,f,c
  3042   001708  D7FA               	bra	u2027
  3043   00170A  D000               	nop2	
  3044   00170C  0012               	return		;funcret
  3045   00170E                     __end_of_left_90:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _left_135 *****************
  3049 ;; Defined at:
  3050 ;;		line 198 in file "../dc_motor.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3053 ;;		 -> main@motorL(9), 
  3054 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3055 ;;		 -> main@motorR(9), 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  i               2   31[COMRAM] int 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;Total ram usage:        8 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 3
  3074 ;; This function calls:
  3075 ;;		_setMotorPWM
  3076 ;; This function is called by:
  3077 ;;		_motor_action
  3078 ;;		_motor_action_return
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text9
  3083   0018F4                     __ptext9:
  3084                           	callstack 0
  3085   0018F4                     _left_135:
  3086                           	callstack 26
  3087   0018F4                     
  3088                           ;../dc_motor.c: 198: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 199: {;../dc_motor.c: 200:     mL->direction = 0;
  3089   0018F4  EE20 F001          	lfsr	2,1
  3090   0018F8  501A               	movf	left_135@mL^0,w,c
  3091   0018FA  26D9               	addwf	fsr2l,f,c
  3092   0018FC  501B               	movf	(left_135@mL+1)^0,w,c
  3093   0018FE  22DA               	addwfc	fsr2h,f,c
  3094   001900  0E00               	movlw	0
  3095   001902  6EDF               	movwf	indf2,c
  3096                           
  3097                           ;../dc_motor.c: 201:     mR->direction = 1;
  3098   001904  EE20 F001          	lfsr	2,1
  3099   001908  501C               	movf	left_135@mR^0,w,c
  3100   00190A  26D9               	addwf	fsr2l,f,c
  3101   00190C  501D               	movf	(left_135@mR+1)^0,w,c
  3102   00190E  22DA               	addwfc	fsr2h,f,c
  3103   001910  0E01               	movlw	1
  3104   001912  6EDF               	movwf	indf2,c
  3105   001914                     
  3106                           ;../dc_motor.c: 202:     for (int i = 0;i<300;i = i + 2)
  3107   001914  0E00               	movlw	0
  3108   001916  6E21               	movwf	(left_135@i+1)^0,c
  3109   001918  0E00               	movlw	0
  3110   00191A  6E20               	movwf	left_135@i^0,c
  3111   00191C                     l2536:
  3112                           
  3113                           ;../dc_motor.c: 203:     {;../dc_motor.c: 204:         mL->power = 50 + i;
  3114   00191C  5020               	movf	left_135@i^0,w,c
  3115   00191E  0F32               	addlw	50
  3116   001920  C01A  FFD9         	movff	left_135@mL,fsr2l
  3117   001924  C01B  FFDA         	movff	left_135@mL+1,fsr2h
  3118   001928  6EDF               	movwf	indf2,c
  3119   00192A                     
  3120                           ;../dc_motor.c: 205:         mR->power = i;
  3121   00192A  C01C  FFD9         	movff	left_135@mR,fsr2l
  3122   00192E  C01D  FFDA         	movff	left_135@mR+1,fsr2h
  3123   001932  C020  FFDF         	movff	left_135@i,indf2
  3124   001936                     
  3125                           ;../dc_motor.c: 206:         setMotorPWM(mL);
  3126   001936  C01A  F00F         	movff	left_135@mL,setMotorPWM@m
  3127   00193A  C01B  F010         	movff	left_135@mL+1,setMotorPWM@m+1
  3128   00193E  EC56  F007         	call	_setMotorPWM	;wreg free
  3129   001942                     
  3130                           ;../dc_motor.c: 207:         setMotorPWM(mR);
  3131   001942  C01C  F00F         	movff	left_135@mR,setMotorPWM@m
  3132   001946  C01D  F010         	movff	left_135@mR+1,setMotorPWM@m+1
  3133   00194A  EC56  F007         	call	_setMotorPWM	;wreg free
  3134   00194E                     
  3135                           ;../dc_motor.c: 208:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3136   00194E  0E35               	movlw	53
  3137   001950                     u2037:
  3138   001950  2EE8               	decfsz	wreg,f,c
  3139   001952  D7FE               	bra	u2037
  3140   001954  F000               	nop	
  3141   001956                     
  3142                           ;../dc_motor.c: 209:     }
  3143   001956  0E02               	movlw	2
  3144   001958  2420               	addwf	left_135@i^0,w,c
  3145   00195A  6E20               	movwf	left_135@i^0,c
  3146   00195C  0E00               	movlw	0
  3147   00195E  2021               	addwfc	(left_135@i+1)^0,w,c
  3148   001960  6E21               	movwf	(left_135@i+1)^0,c
  3149   001962  BE21               	btfsc	(left_135@i+1)^0,7,c
  3150   001964  EFBD  F00C         	goto	u1051
  3151   001968  0E2C               	movlw	44
  3152   00196A  5C20               	subwf	left_135@i^0,w,c
  3153   00196C  0E01               	movlw	1
  3154   00196E  5821               	subwfb	(left_135@i+1)^0,w,c
  3155   001970  A0D8               	btfss	status,0,c
  3156   001972  EFBD  F00C         	goto	u1051
  3157   001976  EFBF  F00C         	goto	u1050
  3158   00197A                     u1051:
  3159   00197A  EF8E  F00C         	goto	l2536
  3160   00197E                     u1050:
  3161   00197E                     
  3162                           ;../dc_motor.c: 210:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3163   00197E  0E18               	movlw	24
  3164   001980  6E1F               	movwf	(??_left_135+1)^0,c
  3165   001982  0E8A               	movlw	138
  3166   001984  6E1E               	movwf	??_left_135^0,c
  3167   001986  0EE8               	movlw	232
  3168   001988                     u2047:
  3169   001988  2EE8               	decfsz	wreg,f,c
  3170   00198A  D7FE               	bra	u2047
  3171   00198C  2E1E               	decfsz	??_left_135^0,f,c
  3172   00198E  D7FC               	bra	u2047
  3173   001990  2E1F               	decfsz	(??_left_135+1)^0,f,c
  3174   001992  D7FA               	bra	u2047
  3175   001994  0012               	return		;funcret
  3176   001996                     __end_of_left_135:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _forward *****************
  3180 ;; Defined at:
  3181 ;;		line 77 in file "../dc_motor.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3184 ;;		 -> main@motorL(9), 
  3185 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3186 ;;		 -> main@motorR(9), 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  i               2   31[COMRAM] int 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;Total ram usage:        8 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 3
  3205 ;; This function calls:
  3206 ;;		_setMotorPWM
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;;		_motor_action
  3210 ;;		_motor_action_return
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text10
  3215   001996                     __ptext10:
  3216                           	callstack 0
  3217   001996                     _forward:
  3218                           	callstack 26
  3219   001996                     
  3220                           ;../dc_motor.c: 77: void forward(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c
      +                          : 78: {;../dc_motor.c: 79:     mL->direction = 1;
  3221   001996  EE20 F001          	lfsr	2,1
  3222   00199A  501A               	movf	forward@mL^0,w,c
  3223   00199C  26D9               	addwf	fsr2l,f,c
  3224   00199E  501B               	movf	(forward@mL+1)^0,w,c
  3225   0019A0  22DA               	addwfc	fsr2h,f,c
  3226   0019A2  0E01               	movlw	1
  3227   0019A4  6EDF               	movwf	indf2,c
  3228                           
  3229                           ;../dc_motor.c: 80:     mR->direction = 1;
  3230   0019A6  EE20 F001          	lfsr	2,1
  3231   0019AA  501C               	movf	forward@mR^0,w,c
  3232   0019AC  26D9               	addwf	fsr2l,f,c
  3233   0019AE  501D               	movf	(forward@mR+1)^0,w,c
  3234   0019B0  22DA               	addwfc	fsr2h,f,c
  3235   0019B2  0E01               	movlw	1
  3236   0019B4  6EDF               	movwf	indf2,c
  3237   0019B6                     
  3238                           ;../dc_motor.c: 81:     for (int i = 0;i < 101;i = i + 2)
  3239   0019B6  0E00               	movlw	0
  3240   0019B8  6E21               	movwf	(forward@i+1)^0,c
  3241   0019BA  0E00               	movlw	0
  3242   0019BC  6E20               	movwf	forward@i^0,c
  3243   0019BE                     l2398:
  3244                           
  3245                           ;../dc_motor.c: 82:     {;../dc_motor.c: 83:         mL->power = i;
  3246   0019BE  C01A  FFD9         	movff	forward@mL,fsr2l
  3247   0019C2  C01B  FFDA         	movff	forward@mL+1,fsr2h
  3248   0019C6  C020  FFDF         	movff	forward@i,indf2
  3249                           
  3250                           ;../dc_motor.c: 84:         mR->power = i;
  3251   0019CA  C01C  FFD9         	movff	forward@mR,fsr2l
  3252   0019CE  C01D  FFDA         	movff	forward@mR+1,fsr2h
  3253   0019D2  C020  FFDF         	movff	forward@i,indf2
  3254   0019D6                     
  3255                           ;../dc_motor.c: 85:         setMotorPWM(mL);
  3256   0019D6  C01A  F00F         	movff	forward@mL,setMotorPWM@m
  3257   0019DA  C01B  F010         	movff	forward@mL+1,setMotorPWM@m+1
  3258   0019DE  EC56  F007         	call	_setMotorPWM	;wreg free
  3259   0019E2                     
  3260                           ;../dc_motor.c: 86:         setMotorPWM(mR);
  3261   0019E2  C01C  F00F         	movff	forward@mR,setMotorPWM@m
  3262   0019E6  C01D  F010         	movff	forward@mR+1,setMotorPWM@m+1
  3263   0019EA  EC56  F007         	call	_setMotorPWM	;wreg free
  3264   0019EE                     
  3265                           ;../dc_motor.c: 87:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3266   0019EE  0E35               	movlw	53
  3267   0019F0                     u2057:
  3268   0019F0  2EE8               	decfsz	wreg,f,c
  3269   0019F2  D7FE               	bra	u2057
  3270   0019F4  F000               	nop	
  3271   0019F6                     
  3272                           ;../dc_motor.c: 88:     }
  3273   0019F6  0E02               	movlw	2
  3274   0019F8  2420               	addwf	forward@i^0,w,c
  3275   0019FA  6E20               	movwf	forward@i^0,c
  3276   0019FC  0E00               	movlw	0
  3277   0019FE  2021               	addwfc	(forward@i+1)^0,w,c
  3278   001A00  6E21               	movwf	(forward@i+1)^0,c
  3279   001A02  BE21               	btfsc	(forward@i+1)^0,7,c
  3280   001A04  EF0D  F00D         	goto	u991
  3281   001A08  5021               	movf	(forward@i+1)^0,w,c
  3282   001A0A  E109               	bnz	u990
  3283   001A0C  0E65               	movlw	101
  3284   001A0E  5C20               	subwf	forward@i^0,w,c
  3285   001A10  A0D8               	btfss	status,0,c
  3286   001A12  EF0D  F00D         	goto	u991
  3287   001A16  EF0F  F00D         	goto	u990
  3288   001A1A                     u991:
  3289   001A1A  EFDF  F00C         	goto	l2398
  3290   001A1E                     u990:
  3291   001A1E                     
  3292                           ;../dc_motor.c: 89:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3293   001A1E  0E09               	movlw	9
  3294   001A20  6E1F               	movwf	(??_forward+1)^0,c
  3295   001A22  0E1E               	movlw	30
  3296   001A24  6E1E               	movwf	??_forward^0,c
  3297   001A26  0EE4               	movlw	228
  3298   001A28                     u2067:
  3299   001A28  2EE8               	decfsz	wreg,f,c
  3300   001A2A  D7FE               	bra	u2067
  3301   001A2C  2E1E               	decfsz	??_forward^0,f,c
  3302   001A2E  D7FC               	bra	u2067
  3303   001A30  2E1F               	decfsz	(??_forward+1)^0,f,c
  3304   001A32  D7FA               	bra	u2067
  3305   001A34  D000               	nop2	
  3306   001A36  0012               	return		;funcret
  3307   001A38                     __end_of_forward:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function _setMotorPWM *****************
  3311 ;; Defined at:
  3312 ;;		line 38 in file "../dc_motor.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  m               2   14[COMRAM] PTR struct DC_motor
  3315 ;;		 -> main@motorR(9), main@motorL(9), 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  PWMduty         2   23[COMRAM] int 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3330 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3331 ;;Total ram usage:       11 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 2
  3334 ;; This function calls:
  3335 ;;		___awdiv
  3336 ;;		___wmul
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;;		_stop
  3340 ;;		_forward
  3341 ;;		_reverse_fromcard
  3342 ;;		_reverse_onesquare
  3343 ;;		_right_90
  3344 ;;		_left_90
  3345 ;;		_spin_180
  3346 ;;		_right_135
  3347 ;;		_left_135
  3348 ;;		_opposite_forward
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text11
  3353   000EAC                     __ptext11:
  3354                           	callstack 0
  3355   000EAC                     _setMotorPWM:
  3356                           	callstack 27
  3357   000EAC                     
  3358                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  3359   000EAC  EE20 F001          	lfsr	2,1
  3360   000EB0  500F               	movf	setMotorPWM@m^0,w,c
  3361   000EB2  26D9               	addwf	fsr2l,f,c
  3362   000EB4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3363   000EB6  22DA               	addwfc	fsr2h,f,c
  3364   000EB8  50DF               	movf	indf2,w,c
  3365   000EBA  B4D8               	btfsc	status,2,c
  3366   000EBC  EF62  F007         	goto	u941
  3367   000EC0  EF64  F007         	goto	u940
  3368   000EC4                     u941:
  3369   000EC4  EF95  F007         	goto	l2322
  3370   000EC8                     u940:
  3371   000EC8                     
  3372                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3373   000EC8  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3374   000ECC  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3375   000ED0  50DF               	movf	indf2,w,c
  3376   000ED2  6E11               	movwf	??_setMotorPWM^0,c
  3377   000ED4  5011               	movf	??_setMotorPWM^0,w,c
  3378   000ED6  6E01               	movwf	___wmul@multiplier^0,c
  3379   000ED8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3380   000EDA  EE20 F007          	lfsr	2,7
  3381   000EDE  500F               	movf	setMotorPWM@m^0,w,c
  3382   000EE0  26D9               	addwf	fsr2l,f,c
  3383   000EE2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3384   000EE4  22DA               	addwfc	fsr2h,f,c
  3385   000EE6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3386   000EEA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3387   000EEE  EC02  F00F         	call	___wmul	;wreg free
  3388   000EF2  C001  F007         	movff	?___wmul,___awdiv@dividend
  3389   000EF6  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  3390   000EFA  0E00               	movlw	0
  3391   000EFC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3392   000EFE  0E64               	movlw	100
  3393   000F00  6E09               	movwf	___awdiv@divisor^0,c
  3394   000F02  EC2E  F00A         	call	___awdiv	;wreg free
  3395   000F06  EE20 F007          	lfsr	2,7
  3396   000F0A  500F               	movf	setMotorPWM@m^0,w,c
  3397   000F0C  26D9               	addwf	fsr2l,f,c
  3398   000F0E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3399   000F10  22DA               	addwfc	fsr2h,f,c
  3400   000F12  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  3401   000F16  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  3402   000F1A  5007               	movf	?___awdiv^0,w,c
  3403   000F1C  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  3404   000F1E  6E18               	movwf	setMotorPWM@PWMduty^0,c
  3405   000F20  5008               	movf	(?___awdiv+1)^0,w,c
  3406   000F22  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  3407   000F24  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3408                           
  3409                           ;../dc_motor.c: 45:  }
  3410   000F26  EFB8  F007         	goto	l2324
  3411   000F2A                     l2322:
  3412                           
  3413                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3414   000F2A  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3415   000F2E  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3416   000F32  50DF               	movf	indf2,w,c
  3417   000F34  6E11               	movwf	??_setMotorPWM^0,c
  3418   000F36  5011               	movf	??_setMotorPWM^0,w,c
  3419   000F38  6E01               	movwf	___wmul@multiplier^0,c
  3420   000F3A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3421   000F3C  EE20 F007          	lfsr	2,7
  3422   000F40  500F               	movf	setMotorPWM@m^0,w,c
  3423   000F42  26D9               	addwf	fsr2l,f,c
  3424   000F44  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3425   000F46  22DA               	addwfc	fsr2h,f,c
  3426   000F48  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3427   000F4C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3428   000F50  EC02  F00F         	call	___wmul	;wreg free
  3429   000F54  C001  F007         	movff	?___wmul,___awdiv@dividend
  3430   000F58  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  3431   000F5C  0E00               	movlw	0
  3432   000F5E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3433   000F60  0E64               	movlw	100
  3434   000F62  6E09               	movwf	___awdiv@divisor^0,c
  3435   000F64  EC2E  F00A         	call	___awdiv	;wreg free
  3436   000F68  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  3437   000F6C  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  3438   000F70                     l2324:
  3439                           
  3440                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  3441   000F70  EE20 F002          	lfsr	2,2
  3442   000F74  500F               	movf	setMotorPWM@m^0,w,c
  3443   000F76  26D9               	addwf	fsr2l,f,c
  3444   000F78  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3445   000F7A  22DA               	addwfc	fsr2h,f,c
  3446   000F7C  CFDE F011          	movff	postinc2,??_setMotorPWM
  3447   000F80  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3448   000F84  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3449   000F88  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3450   000F8C  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3451   000F90                     
  3452                           ;../dc_motor.c: 53:  if (m->direction){
  3453   000F90  EE20 F001          	lfsr	2,1
  3454   000F94  500F               	movf	setMotorPWM@m^0,w,c
  3455   000F96  26D9               	addwf	fsr2l,f,c
  3456   000F98  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3457   000F9A  22DA               	addwfc	fsr2h,f,c
  3458   000F9C  50DF               	movf	indf2,w,c
  3459   000F9E  B4D8               	btfsc	status,2,c
  3460   000FA0  EFD4  F007         	goto	u951
  3461   000FA4  EFD6  F007         	goto	u950
  3462   000FA8                     u951:
  3463   000FA8  EF0B  F008         	goto	l2330
  3464   000FAC                     u950:
  3465   000FAC                     
  3466                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  3467   000FAC  EE20 F004          	lfsr	2,4
  3468   000FB0  500F               	movf	setMotorPWM@m^0,w,c
  3469   000FB2  26D9               	addwf	fsr2l,f,c
  3470   000FB4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3471   000FB6  22DA               	addwfc	fsr2h,f,c
  3472   000FB8  CFDE F011          	movff	postinc2,??_setMotorPWM
  3473   000FBC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3474   000FC0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3475   000FC4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3476   000FC8  EE10 F004          	lfsr	1,4
  3477   000FCC  500F               	movf	setMotorPWM@m^0,w,c
  3478   000FCE  26E1               	addwf	fsr1l,f,c
  3479   000FD0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3480   000FD2  22E2               	addwfc	fsr1h,f,c
  3481   000FD4  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  3482   000FD8  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  3483   000FDC  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3484   000FE0  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3485   000FE4  50E7               	movf	indf1,w,c
  3486   000FE6  6E15               	movwf	(??_setMotorPWM+4)^0,c
  3487   000FE8  EE10 F006          	lfsr	1,6
  3488   000FEC  500F               	movf	setMotorPWM@m^0,w,c
  3489   000FEE  26E1               	addwf	fsr1l,f,c
  3490   000FF0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3491   000FF2  22E2               	addwfc	fsr1h,f,c
  3492   000FF4  50E7               	movf	indf1,w,c
  3493   000FF6  6E16               	movwf	(??_setMotorPWM+5)^0,c
  3494   000FF8  0E01               	movlw	1
  3495   000FFA  6E17               	movwf	(??_setMotorPWM+6)^0,c
  3496   000FFC  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  3497   000FFE  EF03  F008         	goto	u964
  3498   001002                     u965:
  3499   001002  90D8               	bcf	status,0,c
  3500   001004  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  3501   001006                     u964:
  3502   001006  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  3503   001008  EF01  F008         	goto	u965
  3504   00100C  5017               	movf	(??_setMotorPWM+6)^0,w,c
  3505   00100E  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  3506   001010  6EDF               	movwf	indf2,c
  3507                           
  3508                           ;../dc_motor.c: 55:  } else {
  3509   001012  EF3F  F008         	goto	l276
  3510   001016                     l2330:
  3511                           
  3512                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  3513   001016  EE20 F004          	lfsr	2,4
  3514   00101A  500F               	movf	setMotorPWM@m^0,w,c
  3515   00101C  26D9               	addwf	fsr2l,f,c
  3516   00101E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3517   001020  22DA               	addwfc	fsr2h,f,c
  3518   001022  CFDE F011          	movff	postinc2,??_setMotorPWM
  3519   001026  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3520   00102A  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3521   00102E  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3522   001032  EE10 F004          	lfsr	1,4
  3523   001036  500F               	movf	setMotorPWM@m^0,w,c
  3524   001038  26E1               	addwf	fsr1l,f,c
  3525   00103A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3526   00103C  22E2               	addwfc	fsr1h,f,c
  3527   00103E  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  3528   001042  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  3529   001046  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3530   00104A  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3531   00104E  50E7               	movf	indf1,w,c
  3532   001050  6E15               	movwf	(??_setMotorPWM+4)^0,c
  3533   001052  EE10 F006          	lfsr	1,6
  3534   001056  500F               	movf	setMotorPWM@m^0,w,c
  3535   001058  26E1               	addwf	fsr1l,f,c
  3536   00105A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3537   00105C  22E2               	addwfc	fsr1h,f,c
  3538   00105E  50E7               	movf	indf1,w,c
  3539   001060  6E16               	movwf	(??_setMotorPWM+5)^0,c
  3540   001062  0E01               	movlw	1
  3541   001064  6E17               	movwf	(??_setMotorPWM+6)^0,c
  3542   001066  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  3543   001068  EF38  F008         	goto	u974
  3544   00106C                     u975:
  3545   00106C  90D8               	bcf	status,0,c
  3546   00106E  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  3547   001070                     u974:
  3548   001070  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  3549   001072  EF36  F008         	goto	u975
  3550   001076  5017               	movf	(??_setMotorPWM+6)^0,w,c
  3551   001078  0AFF               	xorlw	255
  3552   00107A  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  3553   00107C  6EDF               	movwf	indf2,c
  3554   00107E                     l276:
  3555   00107E  0012               	return		;funcret
  3556   001080                     __end_of_setMotorPWM:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function ___wmul *****************
  3560 ;; Defined at:
  3561 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  multiplier      2    0[COMRAM] unsigned int 
  3564 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  product         2    4[COMRAM] unsigned int 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  2    0[COMRAM] unsigned int 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0, prodl, prodh
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;Total ram usage:        6 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 1
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_setMotorPWM
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text12
  3591   001E04                     __ptext12:
  3592                           	callstack 0
  3593   001E04                     ___wmul:
  3594                           	callstack 27
  3595   001E04  5001               	movf	___wmul@multiplier^0,w,c
  3596   001E06  0203               	mulwf	___wmul@multiplicand^0,c
  3597   001E08  CFF3 F005          	movff	prodl,___wmul@product
  3598   001E0C  CFF4 F006          	movff	prodh,___wmul@product+1
  3599   001E10  5001               	movf	___wmul@multiplier^0,w,c
  3600   001E12  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3601   001E14  50F3               	movf	243,w,c
  3602   001E16  2606               	addwf	(___wmul@product+1)^0,f,c
  3603   001E18  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3604   001E1A  0203               	mulwf	___wmul@multiplicand^0,c
  3605   001E1C  50F3               	movf	243,w,c
  3606   001E1E  2606               	addwf	(___wmul@product+1)^0,f,c
  3607   001E20  C005  F001         	movff	___wmul@product,?___wmul
  3608   001E24  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3609   001E28  0012               	return		;funcret
  3610   001E2A                     __end_of___wmul:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function ___awdiv *****************
  3614 ;; Defined at:
  3615 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  dividend        2    6[COMRAM] int 
  3618 ;;  divisor         2    8[COMRAM] int 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  quotient        2   12[COMRAM] int 
  3621 ;;  sign            1   11[COMRAM] unsigned char 
  3622 ;;  counter         1   10[COMRAM] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  2    6[COMRAM] int 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;Total ram usage:        8 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_setMotorPWM
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text13
  3647   00145C                     __ptext13:
  3648                           	callstack 0
  3649   00145C                     ___awdiv:
  3650                           	callstack 27
  3651   00145C  0E00               	movlw	0
  3652   00145E  6E0C               	movwf	___awdiv@sign^0,c
  3653   001460  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3654   001462  EF37  F00A         	goto	u860
  3655   001466  EF35  F00A         	goto	u861
  3656   00146A                     u861:
  3657   00146A  EF3D  F00A         	goto	l2252
  3658   00146E                     u860:
  3659   00146E  6C09               	negf	___awdiv@divisor^0,c
  3660   001470  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  3661   001472  B0D8               	btfsc	status,0,c
  3662   001474  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  3663   001476  0E01               	movlw	1
  3664   001478  6E0C               	movwf	___awdiv@sign^0,c
  3665   00147A                     l2252:
  3666   00147A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  3667   00147C  EF44  F00A         	goto	u870
  3668   001480  EF42  F00A         	goto	u871
  3669   001484                     u871:
  3670   001484  EF4A  F00A         	goto	l2258
  3671   001488                     u870:
  3672   001488  6C07               	negf	___awdiv@dividend^0,c
  3673   00148A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  3674   00148C  B0D8               	btfsc	status,0,c
  3675   00148E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  3676   001490  0E01               	movlw	1
  3677   001492  1A0C               	xorwf	___awdiv@sign^0,f,c
  3678   001494                     l2258:
  3679   001494  0E00               	movlw	0
  3680   001496  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  3681   001498  0E00               	movlw	0
  3682   00149A  6E0D               	movwf	___awdiv@quotient^0,c
  3683   00149C  5009               	movf	___awdiv@divisor^0,w,c
  3684   00149E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3685   0014A0  B4D8               	btfsc	status,2,c
  3686   0014A2  EF55  F00A         	goto	u881
  3687   0014A6  EF57  F00A         	goto	u880
  3688   0014AA                     u881:
  3689   0014AA  EF7F  F00A         	goto	l2280
  3690   0014AE                     u880:
  3691   0014AE  0E01               	movlw	1
  3692   0014B0  6E0B               	movwf	___awdiv@counter^0,c
  3693   0014B2  EF5F  F00A         	goto	l2266
  3694   0014B6                     l2264:
  3695   0014B6  90D8               	bcf	status,0,c
  3696   0014B8  3609               	rlcf	___awdiv@divisor^0,f,c
  3697   0014BA  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3698   0014BC  2A0B               	incf	___awdiv@counter^0,f,c
  3699   0014BE                     l2266:
  3700   0014BE  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3701   0014C0  EF64  F00A         	goto	u891
  3702   0014C4  EF66  F00A         	goto	u890
  3703   0014C8                     u891:
  3704   0014C8  EF5B  F00A         	goto	l2264
  3705   0014CC                     u890:
  3706   0014CC                     l2268:
  3707   0014CC  90D8               	bcf	status,0,c
  3708   0014CE  360D               	rlcf	___awdiv@quotient^0,f,c
  3709   0014D0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3710   0014D2  5009               	movf	___awdiv@divisor^0,w,c
  3711   0014D4  5C07               	subwf	___awdiv@dividend^0,w,c
  3712   0014D6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3713   0014D8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3714   0014DA  A0D8               	btfss	status,0,c
  3715   0014DC  EF72  F00A         	goto	u901
  3716   0014E0  EF74  F00A         	goto	u900
  3717   0014E4                     u901:
  3718   0014E4  EF79  F00A         	goto	l2276
  3719   0014E8                     u900:
  3720   0014E8  5009               	movf	___awdiv@divisor^0,w,c
  3721   0014EA  5E07               	subwf	___awdiv@dividend^0,f,c
  3722   0014EC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3723   0014EE  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3724   0014F0  800D               	bsf	___awdiv@quotient^0,0,c
  3725   0014F2                     l2276:
  3726   0014F2  90D8               	bcf	status,0,c
  3727   0014F4  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3728   0014F6  3209               	rrcf	___awdiv@divisor^0,f,c
  3729   0014F8  2E0B               	decfsz	___awdiv@counter^0,f,c
  3730   0014FA  EF66  F00A         	goto	l2268
  3731   0014FE                     l2280:
  3732   0014FE  500C               	movf	___awdiv@sign^0,w,c
  3733   001500  B4D8               	btfsc	status,2,c
  3734   001502  EF85  F00A         	goto	u911
  3735   001506  EF87  F00A         	goto	u910
  3736   00150A                     u911:
  3737   00150A  EF8B  F00A         	goto	l2284
  3738   00150E                     u910:
  3739   00150E  6C0D               	negf	___awdiv@quotient^0,c
  3740   001510  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3741   001512  B0D8               	btfsc	status,0,c
  3742   001514  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3743   001516                     l2284:
  3744   001516  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3745   00151A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3746   00151E  0012               	return		;funcret
  3747   001520                     __end_of___awdiv:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _initUSART4 *****************
  3751 ;; Defined at:
  3752 ;;		line 5 in file "../serial.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;Total ram usage:        0 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text14
  3781   001E6A                     __ptext14:
  3782                           	callstack 0
  3783   001E6A                     _initUSART4:
  3784                           	callstack 29
  3785   001E6A                     
  3786                           ;../serial.c: 9:     RC0PPS = 0x12;
  3787   001E6A  0E12               	movlw	18
  3788   001E6C  010E               	movlb	14	; () banked
  3789   001E6E  6F62               	movwf	98,b	;volatile
  3790                           
  3791                           ;../serial.c: 10:     RX4PPS = 0x11;
  3792   001E70  0E11               	movlw	17
  3793   001E72  6F15               	movwf	21,b	;volatile
  3794   001E74                     
  3795                           ; BSR set to: 14
  3796                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3797   001E74  97E9               	bcf	233,3,b	;volatile
  3798   001E76                     
  3799                           ; BSR set to: 14
  3800                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  3801   001E76  95E8               	bcf	232,2,b	;volatile
  3802                           
  3803                           ;../serial.c: 14:     SP4BRGL = 103;
  3804   001E78  0E67               	movlw	103
  3805   001E7A  6FE5               	movwf	229,b	;volatile
  3806                           
  3807                           ;../serial.c: 15:     SP4BRGH = 0;
  3808   001E7C  0E00               	movlw	0
  3809   001E7E  6FE6               	movwf	230,b	;volatile
  3810   001E80                     
  3811                           ; BSR set to: 14
  3812                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  3813   001E80  89E7               	bsf	231,4,b	;volatile
  3814   001E82                     
  3815                           ; BSR set to: 14
  3816                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  3817   001E82  8BE8               	bsf	232,5,b	;volatile
  3818   001E84                     
  3819                           ; BSR set to: 14
  3820                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  3821   001E84  8FE7               	bsf	231,7,b	;volatile
  3822   001E86                     
  3823                           ; BSR set to: 14
  3824   001E86  0012               	return		;funcret
  3825   001E88                     __end_of_initUSART4:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _initDCmotorsPWM *****************
  3829 ;; Defined at:
  3830 ;;		line 5 in file "../dc_motor.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  PWMperiod       2    0[COMRAM] int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text15
  3859   001D00                     __ptext15:
  3860                           	callstack 0
  3861   001D00                     _initDCmotorsPWM:
  3862                           	callstack 29
  3863   001D00                     
  3864                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  3865   001D00  9485               	bcf	133,2,c	;volatile
  3866                           
  3867                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  3868   001D02  9885               	bcf	133,4,c	;volatile
  3869                           
  3870                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  3871   001D04  9E83               	bcf	131,7,c	;volatile
  3872                           
  3873                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  3874   001D06  9C87               	bcf	135,6,c	;volatile
  3875                           
  3876                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  3877   001D08  947D               	bcf	125,2,c	;volatile
  3878                           
  3879                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  3880   001D0A  987D               	bcf	125,4,c	;volatile
  3881                           
  3882                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  3883   001D0C  9E7B               	bcf	123,7,c	;volatile
  3884                           
  3885                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  3886   001D0E  9C7F               	bcf	127,6,c	;volatile
  3887   001D10                     
  3888                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  3889   001D10  50BD               	movf	189,w,c	;volatile
  3890   001D12  0B8F               	andlw	-113
  3891   001D14  0930               	iorlw	48
  3892   001D16  6EBD               	movwf	189,c	;volatile
  3893                           
  3894                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  3895   001D18  0EE0               	movlw	-32
  3896   001D1A  16BE               	andwf	190,f,c	;volatile
  3897                           
  3898                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  3899   001D1C  50BF               	movf	191,w,c	;volatile
  3900   001D1E  0BF0               	andlw	-16
  3901   001D20  0901               	iorlw	1
  3902   001D22  6EBF               	movwf	191,c	;volatile
  3903   001D24                     
  3904                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  3905   001D24  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3906   001D28                     
  3907                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  3908   001D28  8EBD               	bsf	189,7,c	;volatile
  3909                           
  3910                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  3911   001D2A  0E0A               	movlw	10
  3912   001D2C  010E               	movlb	14	; () banked
  3913   001D2E  6F74               	movwf	116,b	;volatile
  3914                           
  3915                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  3916   001D30  0E0B               	movlw	11
  3917   001D32  6F69               	movwf	105,b	;volatile
  3918                           
  3919                           ;../dc_motor.c: 29:     PWM6DCH=0;
  3920   001D34  0E00               	movlw	0
  3921   001D36  6EA3               	movwf	163,c	;volatile
  3922                           
  3923                           ;../dc_motor.c: 30:     PWM7DCH=0;
  3924   001D38  0E00               	movlw	0
  3925   001D3A  6EA0               	movwf	160,c	;volatile
  3926   001D3C                     
  3927                           ; BSR set to: 14
  3928                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  3929   001D3C  8EA4               	bsf	164,7,c	;volatile
  3930   001D3E                     
  3931                           ; BSR set to: 14
  3932                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  3933   001D3E  8EA1               	bsf	161,7,c	;volatile
  3934   001D40                     
  3935                           ; BSR set to: 14
  3936   001D40  0012               	return		;funcret
  3937   001D42                     __end_of_initDCmotorsPWM:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _color_read *****************
  3941 ;; Defined at:
  3942 ;;		line 111 in file "../color.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  rgb             2   11[COMRAM] PTR struct RGB_val
  3945 ;;		 -> main@RGB_recorded(8), 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;Total ram usage:        4 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 4
  3964 ;; This function calls:
  3965 ;;		_color_read_Blue
  3966 ;;		_color_read_Green
  3967 ;;		_color_read_Luminosity
  3968 ;;		_color_read_Red
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text16
  3975   001520                     __ptext16:
  3976                           	callstack 0
  3977   001520                     _color_read:
  3978                           	callstack 26
  3979   001520                     
  3980                           ;../color.c: 111: void color_read(struct RGB_val *rgb);../color.c: 112: {;../color.c: 11
      +                          3:     rgb->L = color_read_Luminosity();
  3981   001520  EC08  F00E         	call	_color_read_Luminosity	;wreg free
  3982   001524  C00C  FFD9         	movff	color_read@rgb,fsr2l
  3983   001528  C00D  FFDA         	movff	color_read@rgb+1,fsr2h
  3984   00152C  C005  FFDE         	movff	?_color_read_Luminosity,postinc2
  3985   001530  C006  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  3986   001534                     
  3987                           ;../color.c: 114:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3988   001534  0E09               	movlw	9
  3989   001536  6E0F               	movwf	(??_color_read+1)^0,c
  3990   001538  0E1E               	movlw	30
  3991   00153A  6E0E               	movwf	??_color_read^0,c
  3992   00153C  0EE4               	movlw	228
  3993   00153E                     u2077:
  3994   00153E  2EE8               	decfsz	wreg,f,c
  3995   001540  D7FE               	bra	u2077
  3996   001542  2E0E               	decfsz	??_color_read^0,f,c
  3997   001544  D7FC               	bra	u2077
  3998   001546  2E0F               	decfsz	(??_color_read+1)^0,f,c
  3999   001548  D7FA               	bra	u2077
  4000   00154A  D000               	nop2	
  4001   00154C                     
  4002                           ;../color.c: 115:     rgb->R = color_read_Red();
  4003   00154C  ECE0  F00D         	call	_color_read_Red	;wreg free
  4004   001550  EE20 F002          	lfsr	2,2
  4005   001554  500C               	movf	color_read@rgb^0,w,c
  4006   001556  26D9               	addwf	fsr2l,f,c
  4007   001558  500D               	movf	(color_read@rgb+1)^0,w,c
  4008   00155A  22DA               	addwfc	fsr2h,f,c
  4009   00155C  C005  FFDE         	movff	?_color_read_Red,postinc2
  4010   001560  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4011                           
  4012                           ;../color.c: 116:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4013   001564  0E09               	movlw	9
  4014   001566  6E0F               	movwf	(??_color_read+1)^0,c
  4015   001568  0E1E               	movlw	30
  4016   00156A  6E0E               	movwf	??_color_read^0,c
  4017   00156C  0EE4               	movlw	228
  4018   00156E                     u2087:
  4019   00156E  2EE8               	decfsz	wreg,f,c
  4020   001570  D7FE               	bra	u2087
  4021   001572  2E0E               	decfsz	??_color_read^0,f,c
  4022   001574  D7FC               	bra	u2087
  4023   001576  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4024   001578  D7FA               	bra	u2087
  4025   00157A  D000               	nop2	
  4026   00157C                     
  4027                           ;../color.c: 117:     rgb->G = color_read_Green();
  4028   00157C  EC30  F00E         	call	_color_read_Green	;wreg free
  4029   001580  EE20 F004          	lfsr	2,4
  4030   001584  500C               	movf	color_read@rgb^0,w,c
  4031   001586  26D9               	addwf	fsr2l,f,c
  4032   001588  500D               	movf	(color_read@rgb+1)^0,w,c
  4033   00158A  22DA               	addwfc	fsr2h,f,c
  4034   00158C  C005  FFDE         	movff	?_color_read_Green,postinc2
  4035   001590  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4036   001594                     
  4037                           ;../color.c: 118:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4038   001594  0E09               	movlw	9
  4039   001596  6E0F               	movwf	(??_color_read+1)^0,c
  4040   001598  0E1E               	movlw	30
  4041   00159A  6E0E               	movwf	??_color_read^0,c
  4042   00159C  0EE4               	movlw	228
  4043   00159E                     u2097:
  4044   00159E  2EE8               	decfsz	wreg,f,c
  4045   0015A0  D7FE               	bra	u2097
  4046   0015A2  2E0E               	decfsz	??_color_read^0,f,c
  4047   0015A4  D7FC               	bra	u2097
  4048   0015A6  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4049   0015A8  D7FA               	bra	u2097
  4050   0015AA  D000               	nop2	
  4051                           
  4052                           ;../color.c: 119:     rgb->B = color_read_Blue();
  4053   0015AC  EC58  F00E         	call	_color_read_Blue	;wreg free
  4054   0015B0  EE20 F006          	lfsr	2,6
  4055   0015B4  500C               	movf	color_read@rgb^0,w,c
  4056   0015B6  26D9               	addwf	fsr2l,f,c
  4057   0015B8  500D               	movf	(color_read@rgb+1)^0,w,c
  4058   0015BA  22DA               	addwfc	fsr2h,f,c
  4059   0015BC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4060   0015C0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4061   0015C4  0012               	return		;funcret
  4062   0015C6                     __end_of_color_read:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _color_read_Red *****************
  4066 ;; Defined at:
  4067 ;;		line 69 in file "../color.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  tmp             2    9[COMRAM] unsigned int 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  2    4[COMRAM] unsigned int 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;Total ram usage:        7 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 3
  4088 ;; This function calls:
  4089 ;;		_I2C_2_Master_Read
  4090 ;;		_I2C_2_Master_RepStart
  4091 ;;		_I2C_2_Master_Start
  4092 ;;		_I2C_2_Master_Stop
  4093 ;;		_I2C_2_Master_Write
  4094 ;; This function is called by:
  4095 ;;		_color_read
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text17
  4100   001BC0                     __ptext17:
  4101                           	callstack 0
  4102   001BC0                     _color_read_Red:
  4103                           	callstack 26
  4104   001BC0                     
  4105                           ;../color.c: 71:  unsigned int tmp;;../color.c: 72:  I2C_2_Master_Start();
  4106   001BC0  EC5F  F00F         	call	_I2C_2_Master_Start	;wreg free
  4107                           
  4108                           ;../color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  4109   001BC4  0E52               	movlw	82
  4110   001BC6  EC4F  F00F         	call	_I2C_2_Master_Write
  4111                           
  4112                           ;../color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  4113   001BCA  0EB6               	movlw	182
  4114   001BCC  EC4F  F00F         	call	_I2C_2_Master_Write
  4115                           
  4116                           ;../color.c: 75:  I2C_2_Master_RepStart();
  4117   001BD0  EC55  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  4118                           
  4119                           ;../color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  4120   001BD4  0E53               	movlw	83
  4121   001BD6  EC4F  F00F         	call	_I2C_2_Master_Write
  4122                           
  4123                           ;../color.c: 77:  tmp=I2C_2_Master_Read(1);
  4124   001BDA  0E01               	movlw	1
  4125   001BDC  ECA1  F00E         	call	_I2C_2_Master_Read
  4126   001BE0  6E07               	movwf	??_color_read_Red^0,c
  4127   001BE2  5007               	movf	??_color_read_Red^0,w,c
  4128   001BE4  6E0A               	movwf	color_read_Red@tmp^0,c
  4129   001BE6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4130                           
  4131                           ;../color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4132   001BE8  0E00               	movlw	0
  4133   001BEA  ECA1  F00E         	call	_I2C_2_Master_Read
  4134   001BEE  6E07               	movwf	??_color_read_Red^0,c
  4135   001BF0  5007               	movf	??_color_read_Red^0,w,c
  4136   001BF2  6E09               	movwf	(??_color_read_Red+2)^0,c
  4137   001BF4  6A08               	clrf	(??_color_read_Red+1)^0,c
  4138   001BF6  500A               	movf	color_read_Red@tmp^0,w,c
  4139   001BF8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4140   001BFA  6E0A               	movwf	color_read_Red@tmp^0,c
  4141   001BFC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4142   001BFE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4143   001C00  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4144                           
  4145                           ;../color.c: 79:  I2C_2_Master_Stop();
  4146   001C02  EC5A  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4147   001C06                     
  4148                           ;../color.c: 80:  return tmp;
  4149   001C06  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4150   001C0A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4151   001C0E  0012               	return		;funcret
  4152   001C10                     __end_of_color_read_Red:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _color_read_Luminosity *****************
  4156 ;; Defined at:
  4157 ;;		line 55 in file "../color.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  tmp             2    9[COMRAM] unsigned int 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  2    4[COMRAM] unsigned int 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;Total ram usage:        7 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 3
  4178 ;; This function calls:
  4179 ;;		_I2C_2_Master_Read
  4180 ;;		_I2C_2_Master_RepStart
  4181 ;;		_I2C_2_Master_Start
  4182 ;;		_I2C_2_Master_Stop
  4183 ;;		_I2C_2_Master_Write
  4184 ;; This function is called by:
  4185 ;;		_color_read
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text18
  4190   001C10                     __ptext18:
  4191                           	callstack 0
  4192   001C10                     _color_read_Luminosity:
  4193                           	callstack 26
  4194   001C10                     
  4195                           ;../color.c: 57:  unsigned int tmp;;../color.c: 58:  I2C_2_Master_Start();
  4196   001C10  EC5F  F00F         	call	_I2C_2_Master_Start	;wreg free
  4197                           
  4198                           ;../color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  4199   001C14  0E52               	movlw	82
  4200   001C16  EC4F  F00F         	call	_I2C_2_Master_Write
  4201                           
  4202                           ;../color.c: 60:  I2C_2_Master_Write(0xA0 | 0x14);
  4203   001C1A  0EB4               	movlw	180
  4204   001C1C  EC4F  F00F         	call	_I2C_2_Master_Write
  4205                           
  4206                           ;../color.c: 61:  I2C_2_Master_RepStart();
  4207   001C20  EC55  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  4208                           
  4209                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  4210   001C24  0E53               	movlw	83
  4211   001C26  EC4F  F00F         	call	_I2C_2_Master_Write
  4212                           
  4213                           ;../color.c: 63:  tmp=I2C_2_Master_Read(1);
  4214   001C2A  0E01               	movlw	1
  4215   001C2C  ECA1  F00E         	call	_I2C_2_Master_Read
  4216   001C30  6E07               	movwf	??_color_read_Luminosity^0,c
  4217   001C32  5007               	movf	??_color_read_Luminosity^0,w,c
  4218   001C34  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  4219   001C36  6A0B               	clrf	(color_read_Luminosity@tmp+1)^0,c
  4220                           
  4221                           ;../color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4222   001C38  0E00               	movlw	0
  4223   001C3A  ECA1  F00E         	call	_I2C_2_Master_Read
  4224   001C3E  6E07               	movwf	??_color_read_Luminosity^0,c
  4225   001C40  5007               	movf	??_color_read_Luminosity^0,w,c
  4226   001C42  6E09               	movwf	(??_color_read_Luminosity+2)^0,c
  4227   001C44  6A08               	clrf	(??_color_read_Luminosity+1)^0,c
  4228   001C46  500A               	movf	color_read_Luminosity@tmp^0,w,c
  4229   001C48  1008               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  4230   001C4A  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  4231   001C4C  500B               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  4232   001C4E  1009               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  4233   001C50  6E0B               	movwf	(color_read_Luminosity@tmp+1)^0,c
  4234                           
  4235                           ;../color.c: 65:  I2C_2_Master_Stop();
  4236   001C52  EC5A  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4237   001C56                     
  4238                           ;../color.c: 66:  return tmp;
  4239   001C56  C00A  F005         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  4240   001C5A  C00B  F006         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  4241   001C5E  0012               	return		;funcret
  4242   001C60                     __end_of_color_read_Luminosity:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _color_read_Green *****************
  4246 ;; Defined at:
  4247 ;;		line 83 in file "../color.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  tmp             2    9[COMRAM] unsigned int 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  2    4[COMRAM] unsigned int 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;Total ram usage:        7 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; Hardware stack levels required when called: 3
  4268 ;; This function calls:
  4269 ;;		_I2C_2_Master_Read
  4270 ;;		_I2C_2_Master_RepStart
  4271 ;;		_I2C_2_Master_Start
  4272 ;;		_I2C_2_Master_Stop
  4273 ;;		_I2C_2_Master_Write
  4274 ;; This function is called by:
  4275 ;;		_color_read
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text19
  4280   001C60                     __ptext19:
  4281                           	callstack 0
  4282   001C60                     _color_read_Green:
  4283                           	callstack 26
  4284   001C60                     
  4285                           ;../color.c: 85:  unsigned int tmp;;../color.c: 86:  I2C_2_Master_Start();
  4286   001C60  EC5F  F00F         	call	_I2C_2_Master_Start	;wreg free
  4287                           
  4288                           ;../color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  4289   001C64  0E52               	movlw	82
  4290   001C66  EC4F  F00F         	call	_I2C_2_Master_Write
  4291                           
  4292                           ;../color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  4293   001C6A  0EB8               	movlw	184
  4294   001C6C  EC4F  F00F         	call	_I2C_2_Master_Write
  4295                           
  4296                           ;../color.c: 89:  I2C_2_Master_RepStart();
  4297   001C70  EC55  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  4298                           
  4299                           ;../color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  4300   001C74  0E53               	movlw	83
  4301   001C76  EC4F  F00F         	call	_I2C_2_Master_Write
  4302                           
  4303                           ;../color.c: 91:  tmp=I2C_2_Master_Read(1);
  4304   001C7A  0E01               	movlw	1
  4305   001C7C  ECA1  F00E         	call	_I2C_2_Master_Read
  4306   001C80  6E07               	movwf	??_color_read_Green^0,c
  4307   001C82  5007               	movf	??_color_read_Green^0,w,c
  4308   001C84  6E0A               	movwf	color_read_Green@tmp^0,c
  4309   001C86  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4310                           
  4311                           ;../color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4312   001C88  0E00               	movlw	0
  4313   001C8A  ECA1  F00E         	call	_I2C_2_Master_Read
  4314   001C8E  6E07               	movwf	??_color_read_Green^0,c
  4315   001C90  5007               	movf	??_color_read_Green^0,w,c
  4316   001C92  6E09               	movwf	(??_color_read_Green+2)^0,c
  4317   001C94  6A08               	clrf	(??_color_read_Green+1)^0,c
  4318   001C96  500A               	movf	color_read_Green@tmp^0,w,c
  4319   001C98  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4320   001C9A  6E0A               	movwf	color_read_Green@tmp^0,c
  4321   001C9C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4322   001C9E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4323   001CA0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4324                           
  4325                           ;../color.c: 93:  I2C_2_Master_Stop();
  4326   001CA2  EC5A  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4327   001CA6                     
  4328                           ;../color.c: 94:  return tmp;
  4329   001CA6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4330   001CAA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4331   001CAE  0012               	return		;funcret
  4332   001CB0                     __end_of_color_read_Green:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function _color_read_Blue *****************
  4336 ;; Defined at:
  4337 ;;		line 97 in file "../color.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  tmp             2    9[COMRAM] unsigned int 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    4[COMRAM] unsigned int 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4353 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;Total ram usage:        7 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 3
  4358 ;; This function calls:
  4359 ;;		_I2C_2_Master_Read
  4360 ;;		_I2C_2_Master_RepStart
  4361 ;;		_I2C_2_Master_Start
  4362 ;;		_I2C_2_Master_Stop
  4363 ;;		_I2C_2_Master_Write
  4364 ;; This function is called by:
  4365 ;;		_color_read
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text20
  4370   001CB0                     __ptext20:
  4371                           	callstack 0
  4372   001CB0                     _color_read_Blue:
  4373                           	callstack 26
  4374   001CB0                     
  4375                           ;../color.c: 99:  unsigned int tmp;;../color.c: 100:  I2C_2_Master_Start();
  4376   001CB0  EC5F  F00F         	call	_I2C_2_Master_Start	;wreg free
  4377                           
  4378                           ;../color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  4379   001CB4  0E52               	movlw	82
  4380   001CB6  EC4F  F00F         	call	_I2C_2_Master_Write
  4381                           
  4382                           ;../color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  4383   001CBA  0EBA               	movlw	186
  4384   001CBC  EC4F  F00F         	call	_I2C_2_Master_Write
  4385                           
  4386                           ;../color.c: 103:  I2C_2_Master_RepStart();
  4387   001CC0  EC55  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  4388                           
  4389                           ;../color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  4390   001CC4  0E53               	movlw	83
  4391   001CC6  EC4F  F00F         	call	_I2C_2_Master_Write
  4392                           
  4393                           ;../color.c: 105:  tmp=I2C_2_Master_Read(1);
  4394   001CCA  0E01               	movlw	1
  4395   001CCC  ECA1  F00E         	call	_I2C_2_Master_Read
  4396   001CD0  6E07               	movwf	??_color_read_Blue^0,c
  4397   001CD2  5007               	movf	??_color_read_Blue^0,w,c
  4398   001CD4  6E0A               	movwf	color_read_Blue@tmp^0,c
  4399   001CD6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4400                           
  4401                           ;../color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4402   001CD8  0E00               	movlw	0
  4403   001CDA  ECA1  F00E         	call	_I2C_2_Master_Read
  4404   001CDE  6E07               	movwf	??_color_read_Blue^0,c
  4405   001CE0  5007               	movf	??_color_read_Blue^0,w,c
  4406   001CE2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4407   001CE4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4408   001CE6  500A               	movf	color_read_Blue@tmp^0,w,c
  4409   001CE8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4410   001CEA  6E0A               	movwf	color_read_Blue@tmp^0,c
  4411   001CEC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4412   001CEE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4413   001CF0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4414                           
  4415                           ;../color.c: 107:  I2C_2_Master_Stop();
  4416   001CF2  EC5A  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4417   001CF6                     
  4418                           ;../color.c: 108:  return tmp;
  4419   001CF6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4420   001CFA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4421   001CFE  0012               	return		;funcret
  4422   001D00                     __end_of_color_read_Blue:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function _I2C_2_Master_RepStart *****************
  4426 ;; Defined at:
  4427 ;;		line 33 in file "../i2c.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;Total ram usage:        0 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 2
  4448 ;; This function calls:
  4449 ;;		_I2C_2_Master_Idle
  4450 ;; This function is called by:
  4451 ;;		_color_read_Luminosity
  4452 ;;		_color_read_Red
  4453 ;;		_color_read_Green
  4454 ;;		_color_read_Blue
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text21
  4459   001EAA                     __ptext21:
  4460                           	callstack 0
  4461   001EAA                     _I2C_2_Master_RepStart:
  4462                           	callstack 26
  4463   001EAA                     
  4464                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  4465   001EAA  ECEE  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4466   001EAE                     
  4467                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4468   001EAE  010E               	movlb	14	; () banked
  4469   001EB0  83DA               	bsf	218,1,b	;volatile
  4470   001EB2                     
  4471                           ; BSR set to: 14
  4472   001EB2  0012               	return		;funcret
  4473   001EB4                     __end_of_I2C_2_Master_RepStart:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _I2C_2_Master_Read *****************
  4477 ;; Defined at:
  4478 ;;		line 51 in file "../i2c.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  ack             1    wreg     unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  ack             1    2[COMRAM] unsigned char 
  4483 ;;  tmp             1    3[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      unsigned char 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;Total ram usage:        3 bytes
  4498 ;; Hardware stack levels used: 1
  4499 ;; Hardware stack levels required when called: 2
  4500 ;; This function calls:
  4501 ;;		_I2C_2_Master_Idle
  4502 ;; This function is called by:
  4503 ;;		_color_read_Luminosity
  4504 ;;		_color_read_Red
  4505 ;;		_color_read_Green
  4506 ;;		_color_read_Blue
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text22
  4511   001D42                     __ptext22:
  4512                           	callstack 0
  4513   001D42                     _I2C_2_Master_Read:
  4514                           	callstack 26
  4515                           
  4516                           ; BSR set to: 14
  4517                           ;incstack = 0
  4518                           ;I2C_2_Master_Read@ack stored from wreg
  4519   001D42  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4520   001D44                     
  4521                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  4522   001D44  ECEE  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4523   001D48                     
  4524                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4525   001D48  010E               	movlb	14	; () banked
  4526   001D4A  87DA               	bsf	218,3,b	;volatile
  4527                           
  4528                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  4529   001D4C  ECEE  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4530   001D50                     
  4531                           ;../i2c.c: 57:   tmp = SSP2BUF;
  4532   001D50  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4533                           
  4534                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  4535   001D54  ECEE  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4536   001D58                     
  4537                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4538   001D58  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4539   001D5A  B4D8               	btfsc	status,2,c
  4540   001D5C  EFB2  F00E         	goto	u921
  4541   001D60  EFB6  F00E         	goto	u920
  4542   001D64                     u921:
  4543   001D64  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4544   001D66  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4545   001D68  EFB7  F00E         	goto	u938
  4546   001D6C                     u920:
  4547   001D6C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4548   001D6E                     u938:
  4549   001D6E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4550   001D70  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4551   001D72  010E               	movlb	14	; () banked
  4552   001D74  51DA               	movf	218,w,b	;volatile
  4553   001D76  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4554   001D78  0BDF               	andlw	-33
  4555   001D7A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4556   001D7C  6FDA               	movwf	218,b	;volatile
  4557   001D7E                     
  4558                           ; BSR set to: 14
  4559                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4560   001D7E  89DA               	bsf	218,4,b	;volatile
  4561   001D80                     
  4562                           ; BSR set to: 14
  4563                           ;../i2c.c: 61:   return tmp;
  4564   001D80  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4565   001D82                     
  4566                           ; BSR set to: 14
  4567   001D82  0012               	return		;funcret
  4568   001D84                     __end_of_I2C_2_Master_Read:
  4569                           	callstack 0
  4570                           
  4571 ;; *************** function _color_processor_hard *****************
  4572 ;; Defined at:
  4573 ;;		line 152 in file "../color.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  rgb             2   51[COMRAM] PTR struct RGB_val
  4576 ;;		 -> main@RGB_recorded(8), 
  4577 ;;  calibrated      2   53[COMRAM] PTR unsigned int 
  4578 ;;		 -> main@color_calibrated(64), 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  cb              2    0        unsigned int 
  4581 ;;  cg              2    0        unsigned int 
  4582 ;;  cr              2    0        unsigned int 
  4583 ;;  condition_b     1    0        _Bool 
  4584 ;;  condition_g     1    0        _Bool 
  4585 ;;  condition_r     1    0        _Bool 
  4586 ;;  i               2    0        int 
  4587 ;;  b               2    0        unsigned int 
  4588 ;;  g               2    0        unsigned int 
  4589 ;;  r               2    0        unsigned int 
  4590 ;;  maxl            2    0        unsigned int 
  4591 ;;  l               2    0        unsigned int 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  2   51[COMRAM] unsigned int 
  4594 ;; Registers used:
  4595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;Total ram usage:        4 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; Hardware stack levels required when called: 2
  4608 ;; This function calls:
  4609 ;;		___flge
  4610 ;;		___flmul
  4611 ;;		___xxtofl
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text23
  4618   001EC8                     __ptext23:
  4619                           	callstack 0
  4620   001EC8                     _color_processor_hard:
  4621                           	callstack 28
  4622   001EC8  0012               	return		;funcret
  4623   001ECA                     __end_of_color_processor_hard:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function ___xxtofl *****************
  4627 ;; Defined at:
  4628 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  sign            1    wreg     unsigned char 
  4631 ;;  val             4    0[COMRAM] long 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  sign            1    8[COMRAM] unsigned char 
  4634 ;;  arg             4   10[COMRAM] unsigned long 
  4635 ;;  exp             1    9[COMRAM] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  4    0[COMRAM] unsigned char 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;Total ram usage:       14 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 1
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_color_processor_hard
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text24
  4660   001080                     __ptext24:
  4661                           	callstack 0
  4662   001080                     ___xxtofl:
  4663                           	callstack 28
  4664                           
  4665                           ;incstack = 0
  4666                           ;___xxtofl@sign stored from wreg
  4667   001080  6E09               	movwf	___xxtofl@sign^0,c
  4668   001082  5009               	movf	___xxtofl@sign^0,w,c
  4669   001084  B4D8               	btfsc	status,2,c
  4670   001086  EF47  F008         	goto	u1301
  4671   00108A  EF49  F008         	goto	u1300
  4672   00108E                     u1301:
  4673   00108E  EF6B  F008         	goto	l1116
  4674   001092                     u1300:
  4675   001092  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4676   001094  EF50  F008         	goto	u1310
  4677   001098  EF4E  F008         	goto	u1311
  4678   00109C                     u1311:
  4679   00109C  EF6B  F008         	goto	l1116
  4680   0010A0                     u1310:
  4681   0010A0  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4682   0010A4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4683   0010A8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4684   0010AC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4685   0010B0  1E05               	comf	??___xxtofl^0,f,c
  4686   0010B2  1E06               	comf	(??___xxtofl+1)^0,f,c
  4687   0010B4  1E07               	comf	(??___xxtofl+2)^0,f,c
  4688   0010B6  1E08               	comf	(??___xxtofl+3)^0,f,c
  4689   0010B8  2A05               	incf	??___xxtofl^0,f,c
  4690   0010BA  0E00               	movlw	0
  4691   0010BC  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4692   0010BE  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4693   0010C0  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4694   0010C2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4695   0010C6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4696   0010CA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4697   0010CE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4698   0010D2  EF73  F008         	goto	l2710
  4699   0010D6                     l1116:
  4700   0010D6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4701   0010DA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4702   0010DE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4703   0010E2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4704   0010E6                     l2710:
  4705   0010E6  5001               	movf	___xxtofl@val^0,w,c
  4706   0010E8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4707   0010EA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4708   0010EC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4709   0010EE  A4D8               	btfss	status,2,c
  4710   0010F0  EF7C  F008         	goto	u1321
  4711   0010F4  EF7E  F008         	goto	u1320
  4712   0010F8                     u1321:
  4713   0010F8  EF88  F008         	goto	l2716
  4714   0010FC                     u1320:
  4715   0010FC  0E00               	movlw	0
  4716   0010FE  6E01               	movwf	?___xxtofl^0,c
  4717   001100  0E00               	movlw	0
  4718   001102  6E02               	movwf	(?___xxtofl+1)^0,c
  4719   001104  0E00               	movlw	0
  4720   001106  6E03               	movwf	(?___xxtofl+2)^0,c
  4721   001108  0E00               	movlw	0
  4722   00110A  6E04               	movwf	(?___xxtofl+3)^0,c
  4723   00110C  EF19  F009         	goto	l1119
  4724   001110                     l2716:
  4725   001110  0E96               	movlw	150
  4726   001112  6E0A               	movwf	___xxtofl@exp^0,c
  4727   001114  EF92  F008         	goto	l2720
  4728   001118                     l2718:
  4729   001118  2A0A               	incf	___xxtofl@exp^0,f,c
  4730   00111A  90D8               	bcf	status,0,c
  4731   00111C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4732   00111E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4733   001120  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4734   001122  320B               	rrcf	___xxtofl@arg^0,f,c
  4735   001124                     l2720:
  4736   001124  0E00               	movlw	0
  4737   001126  140B               	andwf	___xxtofl@arg^0,w,c
  4738   001128  6E05               	movwf	??___xxtofl^0,c
  4739   00112A  0E00               	movlw	0
  4740   00112C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4741   00112E  6E06               	movwf	(??___xxtofl+1)^0,c
  4742   001130  0E00               	movlw	0
  4743   001132  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4744   001134  6E07               	movwf	(??___xxtofl+2)^0,c
  4745   001136  0EFE               	movlw	254
  4746   001138  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4747   00113A  6E08               	movwf	(??___xxtofl+3)^0,c
  4748   00113C  5005               	movf	??___xxtofl^0,w,c
  4749   00113E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4750   001140  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4751   001142  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4752   001144  A4D8               	btfss	status,2,c
  4753   001146  EFA7  F008         	goto	u1331
  4754   00114A  EFA9  F008         	goto	u1330
  4755   00114E                     u1331:
  4756   00114E  EF8C  F008         	goto	l2718
  4757   001152                     u1330:
  4758   001152  EFB7  F008         	goto	l1123
  4759   001156                     l2722:
  4760   001156  2A0A               	incf	___xxtofl@exp^0,f,c
  4761   001158  0E01               	movlw	1
  4762   00115A  260B               	addwf	___xxtofl@arg^0,f,c
  4763   00115C  0E00               	movlw	0
  4764   00115E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4765   001160  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4766   001162  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4767   001164  90D8               	bcf	status,0,c
  4768   001166  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4769   001168  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4770   00116A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4771   00116C  320B               	rrcf	___xxtofl@arg^0,f,c
  4772   00116E                     l1123:
  4773   00116E  0E00               	movlw	0
  4774   001170  140B               	andwf	___xxtofl@arg^0,w,c
  4775   001172  6E05               	movwf	??___xxtofl^0,c
  4776   001174  0E00               	movlw	0
  4777   001176  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4778   001178  6E06               	movwf	(??___xxtofl+1)^0,c
  4779   00117A  0E00               	movlw	0
  4780   00117C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4781   00117E  6E07               	movwf	(??___xxtofl+2)^0,c
  4782   001180  0EFF               	movlw	255
  4783   001182  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4784   001184  6E08               	movwf	(??___xxtofl+3)^0,c
  4785   001186  5005               	movf	??___xxtofl^0,w,c
  4786   001188  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4787   00118A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4788   00118C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4789   00118E  A4D8               	btfss	status,2,c
  4790   001190  EFCC  F008         	goto	u1341
  4791   001194  EFCE  F008         	goto	u1340
  4792   001198                     u1341:
  4793   001198  EFAB  F008         	goto	l2722
  4794   00119C                     u1340:
  4795   00119C  EFD6  F008         	goto	l2730
  4796   0011A0                     l2728:
  4797   0011A0  060A               	decf	___xxtofl@exp^0,f,c
  4798   0011A2  90D8               	bcf	status,0,c
  4799   0011A4  360B               	rlcf	___xxtofl@arg^0,f,c
  4800   0011A6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4801   0011A8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4802   0011AA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4803   0011AC                     l2730:
  4804   0011AC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4805   0011AE  EFDB  F008         	goto	u1351
  4806   0011B2  EFDD  F008         	goto	u1350
  4807   0011B6                     u1351:
  4808   0011B6  EFE5  F008         	goto	l1130
  4809   0011BA                     u1350:
  4810   0011BA  0E02               	movlw	2
  4811   0011BC  600A               	cpfslt	___xxtofl@exp^0,c
  4812   0011BE  EFE3  F008         	goto	u1361
  4813   0011C2  EFE5  F008         	goto	u1360
  4814   0011C6                     u1361:
  4815   0011C6  EFD0  F008         	goto	l2728
  4816   0011CA                     u1360:
  4817   0011CA                     l1130:
  4818   0011CA  B00A               	btfsc	___xxtofl@exp^0,0,c
  4819   0011CC  EFEA  F008         	goto	u1371
  4820   0011D0  EFEC  F008         	goto	u1370
  4821   0011D4                     u1371:
  4822   0011D4  EFED  F008         	goto	l2736
  4823   0011D8                     u1370:
  4824   0011D8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4825   0011DA                     l2736:
  4826   0011DA  90D8               	bcf	status,0,c
  4827   0011DC  320A               	rrcf	___xxtofl@exp^0,f,c
  4828   0011DE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4829   0011E2  6A06               	clrf	(??___xxtofl+1)^0,c
  4830   0011E4  6A07               	clrf	(??___xxtofl+2)^0,c
  4831   0011E6  6A08               	clrf	(??___xxtofl+3)^0,c
  4832   0011E8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4833   0011EC  6A07               	clrf	(??___xxtofl+2)^0,c
  4834   0011EE  6A06               	clrf	(??___xxtofl+1)^0,c
  4835   0011F0  6A05               	clrf	??___xxtofl^0,c
  4836   0011F2  5005               	movf	??___xxtofl^0,w,c
  4837   0011F4  120B               	iorwf	___xxtofl@arg^0,f,c
  4838   0011F6  5006               	movf	(??___xxtofl+1)^0,w,c
  4839   0011F8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4840   0011FA  5007               	movf	(??___xxtofl+2)^0,w,c
  4841   0011FC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4842   0011FE  5008               	movf	(??___xxtofl+3)^0,w,c
  4843   001200  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4844   001202  5009               	movf	___xxtofl@sign^0,w,c
  4845   001204  B4D8               	btfsc	status,2,c
  4846   001206  EF07  F009         	goto	u1381
  4847   00120A  EF09  F009         	goto	u1380
  4848   00120E                     u1381:
  4849   00120E  EF11  F009         	goto	l2746
  4850   001212                     u1380:
  4851   001212  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4852   001214  EF10  F009         	goto	u1390
  4853   001218  EF0E  F009         	goto	u1391
  4854   00121C                     u1391:
  4855   00121C  EF11  F009         	goto	l2746
  4856   001220                     u1390:
  4857   001220  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4858   001222                     l2746:
  4859   001222  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4860   001226  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4861   00122A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4862   00122E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4863   001232                     l1119:
  4864   001232  0012               	return		;funcret
  4865   001234                     __end_of___xxtofl:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function ___flmul *****************
  4869 ;; Defined at:
  4870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  b               4   14[COMRAM] unsigned char 
  4873 ;;  a               4   18[COMRAM] unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  prod            4   33[COMRAM] struct .
  4876 ;;  grs             4   27[COMRAM] unsigned long 
  4877 ;;  temp            2   37[COMRAM] struct .
  4878 ;;  bexp            1   32[COMRAM] unsigned char 
  4879 ;;  aexp            1   31[COMRAM] unsigned char 
  4880 ;;  sign            1   26[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  4   14[COMRAM] unsigned char 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0, prodl, prodh
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4890 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;Total ram usage:       25 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_color_processor_hard
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text25
  4905   000A82                     __ptext25:
  4906                           	callstack 0
  4907   000A82                     ___flmul:
  4908                           	callstack 28
  4909   000A82  5012               	movf	(___flmul@b+3)^0,w,c
  4910   000A84  0B80               	andlw	128
  4911   000A86  6E1B               	movwf	___flmul@sign^0,c
  4912   000A88  5012               	movf	(___flmul@b+3)^0,w,c
  4913   000A8A  2412               	addwf	(___flmul@b+3)^0,w,c
  4914   000A8C  6E21               	movwf	___flmul@bexp^0,c
  4915   000A8E  AE11               	btfss	(___flmul@b+2)^0,7,c
  4916   000A90  EF4C  F005         	goto	u1061
  4917   000A94  EF4E  F005         	goto	u1060
  4918   000A98                     u1061:
  4919   000A98  EF4F  F005         	goto	l2558
  4920   000A9C                     u1060:
  4921   000A9C  8021               	bsf	___flmul@bexp^0,0,c
  4922   000A9E                     l2558:
  4923   000A9E  5021               	movf	___flmul@bexp^0,w,c
  4924   000AA0  B4D8               	btfsc	status,2,c
  4925   000AA2  EF55  F005         	goto	u1071
  4926   000AA6  EF57  F005         	goto	u1070
  4927   000AAA                     u1071:
  4928   000AAA  EF6A  F005         	goto	l2566
  4929   000AAE                     u1070:
  4930   000AAE  2821               	incf	___flmul@bexp^0,w,c
  4931   000AB0  A4D8               	btfss	status,2,c
  4932   000AB2  EF5D  F005         	goto	u1081
  4933   000AB6  EF5F  F005         	goto	u1080
  4934   000ABA                     u1081:
  4935   000ABA  EF67  F005         	goto	l2564
  4936   000ABE                     u1080:
  4937   000ABE  0E00               	movlw	0
  4938   000AC0  6E0F               	movwf	___flmul@b^0,c
  4939   000AC2  0E00               	movlw	0
  4940   000AC4  6E10               	movwf	(___flmul@b+1)^0,c
  4941   000AC6  0E00               	movlw	0
  4942   000AC8  6E11               	movwf	(___flmul@b+2)^0,c
  4943   000ACA  0E00               	movlw	0
  4944   000ACC  6E12               	movwf	(___flmul@b+3)^0,c
  4945   000ACE                     l2564:
  4946   000ACE  8E11               	bsf	(___flmul@b+2)^0,7,c
  4947   000AD0  EF72  F005         	goto	l2568
  4948   000AD4                     l2566:
  4949   000AD4  0E00               	movlw	0
  4950   000AD6  6E0F               	movwf	___flmul@b^0,c
  4951   000AD8  0E00               	movlw	0
  4952   000ADA  6E10               	movwf	(___flmul@b+1)^0,c
  4953   000ADC  0E00               	movlw	0
  4954   000ADE  6E11               	movwf	(___flmul@b+2)^0,c
  4955   000AE0  0E00               	movlw	0
  4956   000AE2  6E12               	movwf	(___flmul@b+3)^0,c
  4957   000AE4                     l2568:
  4958   000AE4  5016               	movf	(___flmul@a+3)^0,w,c
  4959   000AE6  0B80               	andlw	128
  4960   000AE8  1A1B               	xorwf	___flmul@sign^0,f,c
  4961   000AEA  5016               	movf	(___flmul@a+3)^0,w,c
  4962   000AEC  2416               	addwf	(___flmul@a+3)^0,w,c
  4963   000AEE  6E20               	movwf	___flmul@aexp^0,c
  4964   000AF0  AE15               	btfss	(___flmul@a+2)^0,7,c
  4965   000AF2  EF7D  F005         	goto	u1091
  4966   000AF6  EF7F  F005         	goto	u1090
  4967   000AFA                     u1091:
  4968   000AFA  EF80  F005         	goto	l2576
  4969   000AFE                     u1090:
  4970   000AFE  8020               	bsf	___flmul@aexp^0,0,c
  4971   000B00                     l2576:
  4972   000B00  5020               	movf	___flmul@aexp^0,w,c
  4973   000B02  B4D8               	btfsc	status,2,c
  4974   000B04  EF86  F005         	goto	u1101
  4975   000B08  EF88  F005         	goto	u1100
  4976   000B0C                     u1101:
  4977   000B0C  EF9B  F005         	goto	l2584
  4978   000B10                     u1100:
  4979   000B10  2820               	incf	___flmul@aexp^0,w,c
  4980   000B12  A4D8               	btfss	status,2,c
  4981   000B14  EF8E  F005         	goto	u1111
  4982   000B18  EF90  F005         	goto	u1110
  4983   000B1C                     u1111:
  4984   000B1C  EF98  F005         	goto	l2582
  4985   000B20                     u1110:
  4986   000B20  0E00               	movlw	0
  4987   000B22  6E13               	movwf	___flmul@a^0,c
  4988   000B24  0E00               	movlw	0
  4989   000B26  6E14               	movwf	(___flmul@a+1)^0,c
  4990   000B28  0E00               	movlw	0
  4991   000B2A  6E15               	movwf	(___flmul@a+2)^0,c
  4992   000B2C  0E00               	movlw	0
  4993   000B2E  6E16               	movwf	(___flmul@a+3)^0,c
  4994   000B30                     l2582:
  4995   000B30  8E15               	bsf	(___flmul@a+2)^0,7,c
  4996   000B32  EFA3  F005         	goto	l1075
  4997   000B36                     l2584:
  4998   000B36  0E00               	movlw	0
  4999   000B38  6E13               	movwf	___flmul@a^0,c
  5000   000B3A  0E00               	movlw	0
  5001   000B3C  6E14               	movwf	(___flmul@a+1)^0,c
  5002   000B3E  0E00               	movlw	0
  5003   000B40  6E15               	movwf	(___flmul@a+2)^0,c
  5004   000B42  0E00               	movlw	0
  5005   000B44  6E16               	movwf	(___flmul@a+3)^0,c
  5006   000B46                     l1075:
  5007   000B46  5020               	movf	___flmul@aexp^0,w,c
  5008   000B48  B4D8               	btfsc	status,2,c
  5009   000B4A  EFA9  F005         	goto	u1121
  5010   000B4E  EFAB  F005         	goto	u1120
  5011   000B52                     u1121:
  5012   000B52  EFB3  F005         	goto	l2588
  5013   000B56                     u1120:
  5014   000B56  5021               	movf	___flmul@bexp^0,w,c
  5015   000B58  A4D8               	btfss	status,2,c
  5016   000B5A  EFB1  F005         	goto	u1131
  5017   000B5E  EFB3  F005         	goto	u1130
  5018   000B62                     u1131:
  5019   000B62  EFBD  F005         	goto	l2592
  5020   000B66                     u1130:
  5021   000B66                     l2588:
  5022   000B66  0E00               	movlw	0
  5023   000B68  6E0F               	movwf	?___flmul^0,c
  5024   000B6A  0E00               	movlw	0
  5025   000B6C  6E10               	movwf	(?___flmul+1)^0,c
  5026   000B6E  0E00               	movlw	0
  5027   000B70  6E11               	movwf	(?___flmul+2)^0,c
  5028   000B72  0E00               	movlw	0
  5029   000B74  6E12               	movwf	(?___flmul+3)^0,c
  5030   000B76  EF55  F007         	goto	l1079
  5031   000B7A                     l2592:
  5032   000B7A  5015               	movf	(___flmul@a+2)^0,w,c
  5033   000B7C  020F               	mulwf	___flmul@b^0,c
  5034   000B7E  CFF3 F026          	movff	prodl,___flmul@temp
  5035   000B82  CFF4 F027          	movff	prodh,___flmul@temp+1
  5036   000B86  5026               	movf	___flmul@temp^0,w,c
  5037   000B88  6E1C               	movwf	___flmul@grs^0,c
  5038   000B8A  6A1D               	clrf	(___flmul@grs+1)^0,c
  5039   000B8C  6A1E               	clrf	(___flmul@grs+2)^0,c
  5040   000B8E  6A1F               	clrf	(___flmul@grs+3)^0,c
  5041   000B90  5027               	movf	(___flmul@temp+1)^0,w,c
  5042   000B92  6E22               	movwf	___flmul@prod^0,c
  5043   000B94  6A23               	clrf	(___flmul@prod+1)^0,c
  5044   000B96  6A24               	clrf	(___flmul@prod+2)^0,c
  5045   000B98  6A25               	clrf	(___flmul@prod+3)^0,c
  5046   000B9A  5014               	movf	(___flmul@a+1)^0,w,c
  5047   000B9C  0210               	mulwf	(___flmul@b+1)^0,c
  5048   000B9E  CFF3 F026          	movff	prodl,___flmul@temp
  5049   000BA2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5050   000BA6  5026               	movf	___flmul@temp^0,w,c
  5051   000BA8  261C               	addwf	___flmul@grs^0,f,c
  5052   000BAA  0E00               	movlw	0
  5053   000BAC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5054   000BAE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5055   000BB0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5056   000BB2  5027               	movf	(___flmul@temp+1)^0,w,c
  5057   000BB4  2622               	addwf	___flmul@prod^0,f,c
  5058   000BB6  0E00               	movlw	0
  5059   000BB8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5060   000BBA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5061   000BBC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5062   000BBE  5013               	movf	___flmul@a^0,w,c
  5063   000BC0  0211               	mulwf	(___flmul@b+2)^0,c
  5064   000BC2  CFF3 F026          	movff	prodl,___flmul@temp
  5065   000BC6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5066   000BCA  5026               	movf	___flmul@temp^0,w,c
  5067   000BCC  261C               	addwf	___flmul@grs^0,f,c
  5068   000BCE  0E00               	movlw	0
  5069   000BD0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5070   000BD2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5071   000BD4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5072   000BD6  5027               	movf	(___flmul@temp+1)^0,w,c
  5073   000BD8  2622               	addwf	___flmul@prod^0,f,c
  5074   000BDA  0E00               	movlw	0
  5075   000BDC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5076   000BDE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5077   000BE0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5078   000BE2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5079   000BE6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5080   000BEA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5081   000BEE  6A1C               	clrf	___flmul@grs^0,c
  5082   000BF0  5013               	movf	___flmul@a^0,w,c
  5083   000BF2  0210               	mulwf	(___flmul@b+1)^0,c
  5084   000BF4  CFF3 F026          	movff	prodl,___flmul@temp
  5085   000BF8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5086   000BFC  5026               	movf	___flmul@temp^0,w,c
  5087   000BFE  261C               	addwf	___flmul@grs^0,f,c
  5088   000C00  5027               	movf	(___flmul@temp+1)^0,w,c
  5089   000C02  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5090   000C04  0E00               	movlw	0
  5091   000C06  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5092   000C08  0E00               	movlw	0
  5093   000C0A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5094   000C0C  5014               	movf	(___flmul@a+1)^0,w,c
  5095   000C0E  020F               	mulwf	___flmul@b^0,c
  5096   000C10  CFF3 F026          	movff	prodl,___flmul@temp
  5097   000C14  CFF4 F027          	movff	prodh,___flmul@temp+1
  5098   000C18  5026               	movf	___flmul@temp^0,w,c
  5099   000C1A  261C               	addwf	___flmul@grs^0,f,c
  5100   000C1C  5027               	movf	(___flmul@temp+1)^0,w,c
  5101   000C1E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5102   000C20  0E00               	movlw	0
  5103   000C22  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5104   000C24  0E00               	movlw	0
  5105   000C26  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5106   000C28  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5107   000C2C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5108   000C30  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5109   000C34  6A1C               	clrf	___flmul@grs^0,c
  5110   000C36  5013               	movf	___flmul@a^0,w,c
  5111   000C38  020F               	mulwf	___flmul@b^0,c
  5112   000C3A  CFF3 F026          	movff	prodl,___flmul@temp
  5113   000C3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5114   000C42  5026               	movf	___flmul@temp^0,w,c
  5115   000C44  261C               	addwf	___flmul@grs^0,f,c
  5116   000C46  5027               	movf	(___flmul@temp+1)^0,w,c
  5117   000C48  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5118   000C4A  0E00               	movlw	0
  5119   000C4C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5120   000C4E  0E00               	movlw	0
  5121   000C50  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5122   000C52  5015               	movf	(___flmul@a+2)^0,w,c
  5123   000C54  0210               	mulwf	(___flmul@b+1)^0,c
  5124   000C56  CFF3 F026          	movff	prodl,___flmul@temp
  5125   000C5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5126   000C5E  5026               	movf	___flmul@temp^0,w,c
  5127   000C60  2622               	addwf	___flmul@prod^0,f,c
  5128   000C62  5027               	movf	(___flmul@temp+1)^0,w,c
  5129   000C64  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5130   000C66  0E00               	movlw	0
  5131   000C68  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5132   000C6A  0E00               	movlw	0
  5133   000C6C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5134   000C6E  5014               	movf	(___flmul@a+1)^0,w,c
  5135   000C70  0211               	mulwf	(___flmul@b+2)^0,c
  5136   000C72  CFF3 F026          	movff	prodl,___flmul@temp
  5137   000C76  CFF4 F027          	movff	prodh,___flmul@temp+1
  5138   000C7A  5026               	movf	___flmul@temp^0,w,c
  5139   000C7C  2622               	addwf	___flmul@prod^0,f,c
  5140   000C7E  5027               	movf	(___flmul@temp+1)^0,w,c
  5141   000C80  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5142   000C82  0E00               	movlw	0
  5143   000C84  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5144   000C86  0E00               	movlw	0
  5145   000C88  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5146   000C8A  5015               	movf	(___flmul@a+2)^0,w,c
  5147   000C8C  0211               	mulwf	(___flmul@b+2)^0,c
  5148   000C8E  CFF3 F026          	movff	prodl,___flmul@temp
  5149   000C92  CFF4 F027          	movff	prodh,___flmul@temp+1
  5150   000C96  5026               	movf	___flmul@temp^0,w,c
  5151   000C98  6E17               	movwf	??___flmul^0,c
  5152   000C9A  5027               	movf	(___flmul@temp+1)^0,w,c
  5153   000C9C  6E18               	movwf	(??___flmul+1)^0,c
  5154   000C9E  6A19               	clrf	(??___flmul+2)^0,c
  5155   000CA0  6A1A               	clrf	(??___flmul+3)^0,c
  5156   000CA2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5157   000CA6  C018  F019         	movff	??___flmul+1,??___flmul+2
  5158   000CAA  C017  F018         	movff	??___flmul,??___flmul+1
  5159   000CAE  6A17               	clrf	??___flmul^0,c
  5160   000CB0  5017               	movf	??___flmul^0,w,c
  5161   000CB2  2622               	addwf	___flmul@prod^0,f,c
  5162   000CB4  5018               	movf	(??___flmul+1)^0,w,c
  5163   000CB6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5164   000CB8  5019               	movf	(??___flmul+2)^0,w,c
  5165   000CBA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5166   000CBC  501A               	movf	(??___flmul+3)^0,w,c
  5167   000CBE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5168   000CC0  C01C  F017         	movff	___flmul@grs,??___flmul
  5169   000CC4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5170   000CC8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5171   000CCC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5172   000CD0  0E19               	movlw	25
  5173   000CD2  EF70  F006         	goto	u1140
  5174   000CD6                     u1145:
  5175   000CD6  90D8               	bcf	status,0,c
  5176   000CD8  321A               	rrcf	(??___flmul+3)^0,f,c
  5177   000CDA  3219               	rrcf	(??___flmul+2)^0,f,c
  5178   000CDC  3218               	rrcf	(??___flmul+1)^0,f,c
  5179   000CDE  3217               	rrcf	??___flmul^0,f,c
  5180   000CE0                     u1140:
  5181   000CE0  2EE8               	decfsz	wreg,f,c
  5182   000CE2  EF6B  F006         	goto	u1145
  5183   000CE6  5017               	movf	??___flmul^0,w,c
  5184   000CE8  2622               	addwf	___flmul@prod^0,f,c
  5185   000CEA  5018               	movf	(??___flmul+1)^0,w,c
  5186   000CEC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5187   000CEE  5019               	movf	(??___flmul+2)^0,w,c
  5188   000CF0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5189   000CF2  501A               	movf	(??___flmul+3)^0,w,c
  5190   000CF4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5191   000CF6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5192   000CFA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5193   000CFE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5194   000D02  6A1C               	clrf	___flmul@grs^0,c
  5195   000D04  5020               	movf	___flmul@aexp^0,w,c
  5196   000D06  C021  F017         	movff	___flmul@bexp,??___flmul
  5197   000D0A  6A18               	clrf	(??___flmul+1)^0,c
  5198   000D0C  2617               	addwf	??___flmul^0,f,c
  5199   000D0E  0E00               	movlw	0
  5200   000D10  2218               	addwfc	(??___flmul+1)^0,f,c
  5201   000D12  0E82               	movlw	130
  5202   000D14  2417               	addwf	??___flmul^0,w,c
  5203   000D16  6E26               	movwf	___flmul@temp^0,c
  5204   000D18  0EFF               	movlw	255
  5205   000D1A  2018               	addwfc	(??___flmul+1)^0,w,c
  5206   000D1C  6E27               	movwf	(___flmul@temp+1)^0,c
  5207   000D1E  EFA6  F006         	goto	l2640
  5208   000D22                     l2634:
  5209   000D22  90D8               	bcf	status,0,c
  5210   000D24  3622               	rlcf	___flmul@prod^0,f,c
  5211   000D26  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5212   000D28  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5213   000D2A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5214   000D2C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5215   000D2E  EF9B  F006         	goto	u1151
  5216   000D32  EF9D  F006         	goto	u1150
  5217   000D36                     u1151:
  5218   000D36  EF9E  F006         	goto	l1082
  5219   000D3A                     u1150:
  5220   000D3A  8022               	bsf	___flmul@prod^0,0,c
  5221   000D3C                     l1082:
  5222   000D3C  90D8               	bcf	status,0,c
  5223   000D3E  361C               	rlcf	___flmul@grs^0,f,c
  5224   000D40  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5225   000D42  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5226   000D44  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5227   000D46  0626               	decf	___flmul@temp^0,f,c
  5228   000D48  A0D8               	btfss	status,0,c
  5229   000D4A  0627               	decf	(___flmul@temp+1)^0,f,c
  5230   000D4C                     l2640:
  5231   000D4C  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5232   000D4E  EFAB  F006         	goto	u1161
  5233   000D52  EFAD  F006         	goto	u1160
  5234   000D56                     u1161:
  5235   000D56  EF91  F006         	goto	l2634
  5236   000D5A                     u1160:
  5237   000D5A  0E00               	movlw	0
  5238   000D5C  6E20               	movwf	___flmul@aexp^0,c
  5239   000D5E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5240   000D60  EFB4  F006         	goto	u1171
  5241   000D64  EFB6  F006         	goto	u1170
  5242   000D68                     u1171:
  5243   000D68  EFDA  F006         	goto	l1084
  5244   000D6C                     u1170:
  5245   000D6C  0EFF               	movlw	255
  5246   000D6E  141C               	andwf	___flmul@grs^0,w,c
  5247   000D70  6E17               	movwf	??___flmul^0,c
  5248   000D72  0EFF               	movlw	255
  5249   000D74  141D               	andwf	(___flmul@grs+1)^0,w,c
  5250   000D76  6E18               	movwf	(??___flmul+1)^0,c
  5251   000D78  0EFF               	movlw	255
  5252   000D7A  141E               	andwf	(___flmul@grs+2)^0,w,c
  5253   000D7C  6E19               	movwf	(??___flmul+2)^0,c
  5254   000D7E  0E7F               	movlw	127
  5255   000D80  141F               	andwf	(___flmul@grs+3)^0,w,c
  5256   000D82  6E1A               	movwf	(??___flmul+3)^0,c
  5257   000D84  5017               	movf	??___flmul^0,w,c
  5258   000D86  1018               	iorwf	(??___flmul+1)^0,w,c
  5259   000D88  1019               	iorwf	(??___flmul+2)^0,w,c
  5260   000D8A  101A               	iorwf	(??___flmul+3)^0,w,c
  5261   000D8C  B4D8               	btfsc	status,2,c
  5262   000D8E  EFCB  F006         	goto	u1181
  5263   000D92  EFCD  F006         	goto	u1180
  5264   000D96                     u1181:
  5265   000D96  EFD1  F006         	goto	l1085
  5266   000D9A                     u1180:
  5267   000D9A                     l2648:
  5268   000D9A  0E01               	movlw	1
  5269   000D9C  6E20               	movwf	___flmul@aexp^0,c
  5270   000D9E  EFDA  F006         	goto	l1084
  5271   000DA2                     l1085:
  5272   000DA2  A022               	btfss	___flmul@prod^0,0,c
  5273   000DA4  EFD6  F006         	goto	u1191
  5274   000DA8  EFD8  F006         	goto	u1190
  5275   000DAC                     u1191:
  5276   000DAC  EFDA  F006         	goto	l1084
  5277   000DB0                     u1190:
  5278   000DB0  EFCD  F006         	goto	l2648
  5279   000DB4                     l1084:
  5280   000DB4  5020               	movf	___flmul@aexp^0,w,c
  5281   000DB6  B4D8               	btfsc	status,2,c
  5282   000DB8  EFE0  F006         	goto	u1201
  5283   000DBC  EFE2  F006         	goto	u1200
  5284   000DC0                     u1201:
  5285   000DC0  EF06  F007         	goto	l2660
  5286   000DC4                     u1200:
  5287   000DC4  0E01               	movlw	1
  5288   000DC6  2622               	addwf	___flmul@prod^0,f,c
  5289   000DC8  0E00               	movlw	0
  5290   000DCA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5291   000DCC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5292   000DCE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5293   000DD0  A025               	btfss	(___flmul@prod+3)^0,0,c
  5294   000DD2  EFED  F006         	goto	u1211
  5295   000DD6  EFEF  F006         	goto	u1210
  5296   000DDA                     u1211:
  5297   000DDA  EF06  F007         	goto	l2660
  5298   000DDE                     u1210:
  5299   000DDE  C022  F017         	movff	___flmul@prod,??___flmul
  5300   000DE2  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5301   000DE6  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5302   000DEA  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5303   000DEE  341A               	rlcf	(??___flmul+3)^0,w,c
  5304   000DF0  321A               	rrcf	(??___flmul+3)^0,f,c
  5305   000DF2  3219               	rrcf	(??___flmul+2)^0,f,c
  5306   000DF4  3218               	rrcf	(??___flmul+1)^0,f,c
  5307   000DF6  3217               	rrcf	??___flmul^0,f,c
  5308   000DF8  C017  F022         	movff	??___flmul,___flmul@prod
  5309   000DFC  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5310   000E00  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5311   000E04  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5312   000E08  4A26               	infsnz	___flmul@temp^0,f,c
  5313   000E0A  2A27               	incf	(___flmul@temp+1)^0,f,c
  5314   000E0C                     l2660:
  5315   000E0C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5316   000E0E  EF11  F007         	goto	u1221
  5317   000E12  5027               	movf	(___flmul@temp+1)^0,w,c
  5318   000E14  E108               	bnz	u1220
  5319   000E16  2826               	incf	___flmul@temp^0,w,c
  5320   000E18  A0D8               	btfss	status,0,c
  5321   000E1A  EF11  F007         	goto	u1221
  5322   000E1E  EF13  F007         	goto	u1220
  5323   000E22                     u1221:
  5324   000E22  EF1D  F007         	goto	l2664
  5325   000E26                     u1220:
  5326   000E26  0E00               	movlw	0
  5327   000E28  6E22               	movwf	___flmul@prod^0,c
  5328   000E2A  0E00               	movlw	0
  5329   000E2C  6E23               	movwf	(___flmul@prod+1)^0,c
  5330   000E2E  0E80               	movlw	128
  5331   000E30  6E24               	movwf	(___flmul@prod+2)^0,c
  5332   000E32  0E7F               	movlw	127
  5333   000E34  6E25               	movwf	(___flmul@prod+3)^0,c
  5334   000E36  EF4B  F007         	goto	l2676
  5335   000E3A                     l2664:
  5336   000E3A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5337   000E3C  EF2A  F007         	goto	u1230
  5338   000E40  5027               	movf	(___flmul@temp+1)^0,w,c
  5339   000E42  E106               	bnz	u1231
  5340   000E44  0426               	decf	___flmul@temp^0,w,c
  5341   000E46  B0D8               	btfsc	status,0,c
  5342   000E48  EF28  F007         	goto	u1231
  5343   000E4C  EF2A  F007         	goto	u1230
  5344   000E50                     u1231:
  5345   000E50  EF36  F007         	goto	l1092
  5346   000E54                     u1230:
  5347   000E54  0E00               	movlw	0
  5348   000E56  6E22               	movwf	___flmul@prod^0,c
  5349   000E58  0E00               	movlw	0
  5350   000E5A  6E23               	movwf	(___flmul@prod+1)^0,c
  5351   000E5C  0E00               	movlw	0
  5352   000E5E  6E24               	movwf	(___flmul@prod+2)^0,c
  5353   000E60  0E00               	movlw	0
  5354   000E62  6E25               	movwf	(___flmul@prod+3)^0,c
  5355   000E64  0E00               	movlw	0
  5356   000E66  6E1B               	movwf	___flmul@sign^0,c
  5357   000E68  EF4B  F007         	goto	l2676
  5358   000E6C                     l1092:
  5359   000E6C  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5360   000E70  0EFF               	movlw	255
  5361   000E72  1622               	andwf	___flmul@prod^0,f,c
  5362   000E74  0EFF               	movlw	255
  5363   000E76  1623               	andwf	(___flmul@prod+1)^0,f,c
  5364   000E78  0E7F               	movlw	127
  5365   000E7A  1624               	andwf	(___flmul@prod+2)^0,f,c
  5366   000E7C  0E00               	movlw	0
  5367   000E7E  1625               	andwf	(___flmul@prod+3)^0,f,c
  5368   000E80  A021               	btfss	___flmul@bexp^0,0,c
  5369   000E82  EF45  F007         	goto	u1241
  5370   000E86  EF47  F007         	goto	u1240
  5371   000E8A                     u1241:
  5372   000E8A  EF48  F007         	goto	l2674
  5373   000E8E                     u1240:
  5374   000E8E  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5375   000E90                     l2674:
  5376   000E90  90D8               	bcf	status,0,c
  5377   000E92  3021               	rrcf	___flmul@bexp^0,w,c
  5378   000E94  6E25               	movwf	(___flmul@prod+3)^0,c
  5379   000E96                     l2676:
  5380   000E96  501B               	movf	___flmul@sign^0,w,c
  5381   000E98  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5382   000E9A  C022  F00F         	movff	___flmul@prod,?___flmul
  5383   000E9E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5384   000EA2  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5385   000EA6  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5386   000EAA                     l1079:
  5387   000EAA  0012               	return		;funcret
  5388   000EAC                     __end_of___flmul:
  5389                           	callstack 0
  5390                           
  5391 ;; *************** function ___flge *****************
  5392 ;; Defined at:
  5393 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  ff1             4   39[COMRAM] unsigned char 
  5396 ;;  ff2             4   43[COMRAM] unsigned char 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;		None               void
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;Total ram usage:       12 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 1
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_color_processor_hard
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text26
  5423   001358                     __ptext26:
  5424                           	callstack 0
  5425   001358                     ___flge:
  5426                           	callstack 28
  5427   001358  0E00               	movlw	0
  5428   00135A  1428               	andwf	___flge@ff1^0,w,c
  5429   00135C  6E30               	movwf	??___flge^0,c
  5430   00135E  0E00               	movlw	0
  5431   001360  1429               	andwf	(___flge@ff1+1)^0,w,c
  5432   001362  6E31               	movwf	(??___flge+1)^0,c
  5433   001364  0E80               	movlw	128
  5434   001366  142A               	andwf	(___flge@ff1+2)^0,w,c
  5435   001368  6E32               	movwf	(??___flge+2)^0,c
  5436   00136A  0E7F               	movlw	127
  5437   00136C  142B               	andwf	(___flge@ff1+3)^0,w,c
  5438   00136E  6E33               	movwf	(??___flge+3)^0,c
  5439   001370  5030               	movf	??___flge^0,w,c
  5440   001372  1031               	iorwf	(??___flge+1)^0,w,c
  5441   001374  1032               	iorwf	(??___flge+2)^0,w,c
  5442   001376  1033               	iorwf	(??___flge+3)^0,w,c
  5443   001378  A4D8               	btfss	status,2,c
  5444   00137A  EFC1  F009         	goto	u1251
  5445   00137E  EFC3  F009         	goto	u1250
  5446   001382                     u1251:
  5447   001382  EFCB  F009         	goto	l2686
  5448   001386                     u1250:
  5449   001386  0E00               	movlw	0
  5450   001388  6E28               	movwf	___flge@ff1^0,c
  5451   00138A  0E00               	movlw	0
  5452   00138C  6E29               	movwf	(___flge@ff1+1)^0,c
  5453   00138E  0E00               	movlw	0
  5454   001390  6E2A               	movwf	(___flge@ff1+2)^0,c
  5455   001392  0E00               	movlw	0
  5456   001394  6E2B               	movwf	(___flge@ff1+3)^0,c
  5457   001396                     l2686:
  5458   001396  0E00               	movlw	0
  5459   001398  142C               	andwf	___flge@ff2^0,w,c
  5460   00139A  6E30               	movwf	??___flge^0,c
  5461   00139C  0E00               	movlw	0
  5462   00139E  142D               	andwf	(___flge@ff2+1)^0,w,c
  5463   0013A0  6E31               	movwf	(??___flge+1)^0,c
  5464   0013A2  0E80               	movlw	128
  5465   0013A4  142E               	andwf	(___flge@ff2+2)^0,w,c
  5466   0013A6  6E32               	movwf	(??___flge+2)^0,c
  5467   0013A8  0E7F               	movlw	127
  5468   0013AA  142F               	andwf	(___flge@ff2+3)^0,w,c
  5469   0013AC  6E33               	movwf	(??___flge+3)^0,c
  5470   0013AE  5030               	movf	??___flge^0,w,c
  5471   0013B0  1031               	iorwf	(??___flge+1)^0,w,c
  5472   0013B2  1032               	iorwf	(??___flge+2)^0,w,c
  5473   0013B4  1033               	iorwf	(??___flge+3)^0,w,c
  5474   0013B6  A4D8               	btfss	status,2,c
  5475   0013B8  EFE0  F009         	goto	u1261
  5476   0013BC  EFE2  F009         	goto	u1260
  5477   0013C0                     u1261:
  5478   0013C0  EFEA  F009         	goto	l2690
  5479   0013C4                     u1260:
  5480   0013C4  0E00               	movlw	0
  5481   0013C6  6E2C               	movwf	___flge@ff2^0,c
  5482   0013C8  0E00               	movlw	0
  5483   0013CA  6E2D               	movwf	(___flge@ff2+1)^0,c
  5484   0013CC  0E00               	movlw	0
  5485   0013CE  6E2E               	movwf	(___flge@ff2+2)^0,c
  5486   0013D0  0E00               	movlw	0
  5487   0013D2  6E2F               	movwf	(___flge@ff2+3)^0,c
  5488   0013D4                     l2690:
  5489   0013D4  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5490   0013D6  EFEF  F009         	goto	u1271
  5491   0013DA  EFF1  F009         	goto	u1270
  5492   0013DE                     u1271:
  5493   0013DE  EFFA  F009         	goto	l2694
  5494   0013E2                     u1270:
  5495   0013E2  6C28               	negf	___flge@ff1^0,c
  5496   0013E4  1E29               	comf	(___flge@ff1+1)^0,f,c
  5497   0013E6  B0D8               	btfsc	status,0,c
  5498   0013E8  2A29               	incf	(___flge@ff1+1)^0,f,c
  5499   0013EA  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5500   0013EC  B0D8               	btfsc	status,0,c
  5501   0013EE  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5502   0013F0  0E80               	movlw	128
  5503   0013F2  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5504   0013F4                     l2694:
  5505   0013F4  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5506   0013F6  EFFF  F009         	goto	u1281
  5507   0013FA  EF01  F00A         	goto	u1280
  5508   0013FE                     u1281:
  5509   0013FE  EF0A  F00A         	goto	l726
  5510   001402                     u1280:
  5511   001402  6C2C               	negf	___flge@ff2^0,c
  5512   001404  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5513   001406  B0D8               	btfsc	status,0,c
  5514   001408  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5515   00140A  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5516   00140C  B0D8               	btfsc	status,0,c
  5517   00140E  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5518   001410  0E80               	movlw	128
  5519   001412  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5520   001414                     l726:
  5521   001414  0E00               	movlw	0
  5522   001416  1A28               	xorwf	___flge@ff1^0,f,c
  5523   001418  0E00               	movlw	0
  5524   00141A  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5525   00141C  0E00               	movlw	0
  5526   00141E  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5527   001420  0E80               	movlw	128
  5528   001422  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5529   001424  0E00               	movlw	0
  5530   001426  1A2C               	xorwf	___flge@ff2^0,f,c
  5531   001428  0E00               	movlw	0
  5532   00142A  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5533   00142C  0E00               	movlw	0
  5534   00142E  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5535   001430  0E80               	movlw	128
  5536   001432  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5537   001434  502C               	movf	___flge@ff2^0,w,c
  5538   001436  5C28               	subwf	___flge@ff1^0,w,c
  5539   001438  502D               	movf	(___flge@ff2+1)^0,w,c
  5540   00143A  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5541   00143C  502E               	movf	(___flge@ff2+2)^0,w,c
  5542   00143E  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5543   001440  502F               	movf	(___flge@ff2+3)^0,w,c
  5544   001442  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5545   001444  B0D8               	btfsc	status,0,c
  5546   001446  EF27  F00A         	goto	u1291
  5547   00144A  EF29  F00A         	goto	u1290
  5548   00144E                     u1291:
  5549   00144E  EF2C  F00A         	goto	l2700
  5550   001452                     u1290:
  5551   001452  90D8               	bcf	status,0,c
  5552   001454  EF2D  F00A         	goto	l731
  5553   001458                     l2700:
  5554   001458  80D8               	bsf	status,0,c
  5555   00145A                     l731:
  5556   00145A  0012               	return		;funcret
  5557   00145C                     __end_of___flge:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _color_processor_easy *****************
  5561 ;; Defined at:
  5562 ;;		line 134 in file "../color.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  5565 ;;		 -> main@RGB_recorded(8), 
  5566 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  5567 ;;		 -> main@color_calibrated(64), 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  b               2   14[COMRAM] unsigned int 
  5570 ;;  g               2   12[COMRAM] unsigned int 
  5571 ;;  r               2   10[COMRAM] unsigned int 
  5572 ;;  l               2    8[COMRAM] unsigned int 
  5573 ;;  color           2    0        unsigned int 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  2    0[COMRAM] unsigned int 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;Total ram usage:       16 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_main
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text27
  5598   001234                     __ptext27:
  5599                           	callstack 0
  5600   001234                     _color_processor_easy:
  5601                           	callstack 29
  5602   001234                     
  5603                           ;../color.c: 134: unsigned int color_processor_easy(struct RGB_val *rgb, unsigned int ca
      +                          librated[]);../color.c: 135: {;../color.c: 136:     unsigned int l = rgb->L;
  5604   001234  C001  FFD9         	movff	color_processor_easy@rgb,fsr2l
  5605   001238  C002  FFDA         	movff	color_processor_easy@rgb+1,fsr2h
  5606   00123C  CFDE F009          	movff	postinc2,color_processor_easy@l
  5607   001240  CFDD F00A          	movff	postdec2,color_processor_easy@l+1
  5608   001244                     
  5609                           ;../color.c: 137:     unsigned int r = rgb->R;
  5610   001244  EE20 F002          	lfsr	2,2
  5611   001248  5001               	movf	color_processor_easy@rgb^0,w,c
  5612   00124A  26D9               	addwf	fsr2l,f,c
  5613   00124C  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  5614   00124E  22DA               	addwfc	fsr2h,f,c
  5615   001250  CFDE F00B          	movff	postinc2,color_processor_easy@r
  5616   001254  CFDD F00C          	movff	postdec2,color_processor_easy@r+1
  5617   001258                     
  5618                           ;../color.c: 138:     unsigned int g = rgb->G;
  5619   001258  EE20 F004          	lfsr	2,4
  5620   00125C  5001               	movf	color_processor_easy@rgb^0,w,c
  5621   00125E  26D9               	addwf	fsr2l,f,c
  5622   001260  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  5623   001262  22DA               	addwfc	fsr2h,f,c
  5624   001264  CFDE F00D          	movff	postinc2,color_processor_easy@g
  5625   001268  CFDD F00E          	movff	postdec2,color_processor_easy@g+1
  5626   00126C                     
  5627                           ;../color.c: 139:     unsigned int b = rgb->B;
  5628   00126C  EE20 F006          	lfsr	2,6
  5629   001270  5001               	movf	color_processor_easy@rgb^0,w,c
  5630   001272  26D9               	addwf	fsr2l,f,c
  5631   001274  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  5632   001276  22DA               	addwfc	fsr2h,f,c
  5633   001278  CFDE F00F          	movff	postinc2,color_processor_easy@b
  5634   00127C  CFDD F010          	movff	postdec2,color_processor_easy@b+1
  5635   001280                     
  5636                           ;../color.c: 140:     unsigned int color;;../color.c: 141:     if (l<calibrated[28]+100 
      +                          && l>calibrated[28]-100){
  5637   001280  EE20 F038          	lfsr	2,56
  5638   001284  5003               	movf	color_processor_easy@calibrated^0,w,c
  5639   001286  26D9               	addwf	fsr2l,f,c
  5640   001288  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  5641   00128A  22DA               	addwfc	fsr2h,f,c
  5642   00128C  CFDE F005          	movff	postinc2,??_color_processor_easy
  5643   001290  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  5644   001294  0E64               	movlw	100
  5645   001296  2605               	addwf	??_color_processor_easy^0,f,c
  5646   001298  0E00               	movlw	0
  5647   00129A  2206               	addwfc	(??_color_processor_easy+1)^0,f,c
  5648   00129C  5005               	movf	??_color_processor_easy^0,w,c
  5649   00129E  5C09               	subwf	color_processor_easy@l^0,w,c
  5650   0012A0  5006               	movf	(??_color_processor_easy+1)^0,w,c
  5651   0012A2  580A               	subwfb	(color_processor_easy@l+1)^0,w,c
  5652   0012A4  B0D8               	btfsc	status,0,c
  5653   0012A6  EF57  F009         	goto	u1401
  5654   0012AA  EF59  F009         	goto	u1400
  5655   0012AE                     u1401:
  5656   0012AE  EF7A  F009         	goto	l2822
  5657   0012B2                     u1400:
  5658   0012B2  EE20 F038          	lfsr	2,56
  5659   0012B6  5003               	movf	color_processor_easy@calibrated^0,w,c
  5660   0012B8  26D9               	addwf	fsr2l,f,c
  5661   0012BA  5004               	movf	(color_processor_easy@calibrated+1)^0,w,c
  5662   0012BC  22DA               	addwfc	fsr2h,f,c
  5663   0012BE  CFDE F005          	movff	postinc2,??_color_processor_easy
  5664   0012C2  CFDD F006          	movff	postdec2,??_color_processor_easy+1
  5665   0012C6  0E9C               	movlw	156
  5666   0012C8  2405               	addwf	??_color_processor_easy^0,w,c
  5667   0012CA  6E07               	movwf	(??_color_processor_easy+2)^0,c
  5668   0012CC  0EFF               	movlw	255
  5669   0012CE  2006               	addwfc	(??_color_processor_easy+1)^0,w,c
  5670   0012D0  6E08               	movwf	(??_color_processor_easy+3)^0,c
  5671   0012D2  5009               	movf	color_processor_easy@l^0,w,c
  5672   0012D4  5C07               	subwf	(??_color_processor_easy+2)^0,w,c
  5673   0012D6  500A               	movf	(color_processor_easy@l+1)^0,w,c
  5674   0012D8  5808               	subwfb	(??_color_processor_easy+3)^0,w,c
  5675   0012DA  B0D8               	btfsc	status,0,c
  5676   0012DC  EF72  F009         	goto	u1411
  5677   0012E0  EF74  F009         	goto	u1410
  5678   0012E4                     u1411:
  5679   0012E4  EF7A  F009         	goto	l2822
  5680   0012E8                     u1410:
  5681   0012E8                     
  5682                           ;../color.c: 142:         return 8;
  5683   0012E8  0E00               	movlw	0
  5684   0012EA  6E02               	movwf	(?_color_processor_easy+1)^0,c
  5685   0012EC  0E08               	movlw	8
  5686   0012EE  6E01               	movwf	?_color_processor_easy^0,c
  5687   0012F0  EFAB  F009         	goto	l67
  5688   0012F4                     l2822:
  5689                           
  5690                           ;../color.c: 144:     if (r>g && r>b){
  5691   0012F4  500B               	movf	color_processor_easy@r^0,w,c
  5692   0012F6  5C0D               	subwf	color_processor_easy@g^0,w,c
  5693   0012F8  500C               	movf	(color_processor_easy@r+1)^0,w,c
  5694   0012FA  580E               	subwfb	(color_processor_easy@g+1)^0,w,c
  5695   0012FC  B0D8               	btfsc	status,0,c
  5696   0012FE  EF83  F009         	goto	u1421
  5697   001302  EF85  F009         	goto	u1420
  5698   001306                     u1421:
  5699   001306  EFA7  F009         	goto	l2838
  5700   00130A                     u1420:
  5701   00130A  500B               	movf	color_processor_easy@r^0,w,c
  5702   00130C  5C0F               	subwf	color_processor_easy@b^0,w,c
  5703   00130E  500C               	movf	(color_processor_easy@r+1)^0,w,c
  5704   001310  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  5705   001312  B0D8               	btfsc	status,0,c
  5706   001314  EF8E  F009         	goto	u1431
  5707   001318  EF90  F009         	goto	u1430
  5708   00131C                     u1431:
  5709   00131C  EFA7  F009         	goto	l2838
  5710   001320                     u1430:
  5711   001320                     
  5712                           ;../color.c: 145:         if (g>b){return 2;}
  5713   001320  500D               	movf	color_processor_easy@g^0,w,c
  5714   001322  5C0F               	subwf	color_processor_easy@b^0,w,c
  5715   001324  500E               	movf	(color_processor_easy@g+1)^0,w,c
  5716   001326  5810               	subwfb	(color_processor_easy@b+1)^0,w,c
  5717   001328  B0D8               	btfsc	status,0,c
  5718   00132A  EF99  F009         	goto	u1441
  5719   00132E  EF9B  F009         	goto	u1440
  5720   001332                     u1441:
  5721   001332  EFA1  F009         	goto	l2834
  5722   001336                     u1440:
  5723   001336  0E00               	movlw	0
  5724   001338  6E02               	movwf	(?_color_processor_easy+1)^0,c
  5725   00133A  0E02               	movlw	2
  5726   00133C  6E01               	movwf	?_color_processor_easy^0,c
  5727   00133E  EFAB  F009         	goto	l67
  5728   001342                     l2834:
  5729   001342  0E00               	movlw	0
  5730   001344  6E02               	movwf	(?_color_processor_easy+1)^0,c
  5731   001346  0E01               	movlw	1
  5732   001348  6E01               	movwf	?_color_processor_easy^0,c
  5733   00134A  EFAB  F009         	goto	l67
  5734   00134E                     l2838:
  5735   00134E  0E00               	movlw	0
  5736   001350  6E02               	movwf	(?_color_processor_easy+1)^0,c
  5737   001352  0E03               	movlw	3
  5738   001354  6E01               	movwf	?_color_processor_easy^0,c
  5739   001356                     l67:
  5740   001356  0012               	return		;funcret
  5741   001358                     __end_of_color_processor_easy:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _color_click_init *****************
  5745 ;; Defined at:
  5746 ;;		line 6 in file "../color.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;Total ram usage:        1 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 4
  5767 ;; This function calls:
  5768 ;;		_I2C_2_Master_Init
  5769 ;;		_color_writetoaddr
  5770 ;; This function is called by:
  5771 ;;		_main
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text28
  5776   001B66                     __ptext28:
  5777                           	callstack 0
  5778   001B66                     _color_click_init:
  5779                           	callstack 26
  5780   001B66                     
  5781                           ;../color.c: 9:     I2C_2_Master_Init();
  5782   001B66  ECD9  F00E         	call	_I2C_2_Master_Init	;wreg free
  5783   001B6A                     
  5784                           ;../color.c: 12:   color_writetoaddr(0x00, 0x01);
  5785   001B6A  0E01               	movlw	1
  5786   001B6C  6E03               	movwf	color_writetoaddr@value^0,c
  5787   001B6E  0E00               	movlw	0
  5788   001B70  EC15  F00F         	call	_color_writetoaddr
  5789   001B74                     
  5790                           ;../color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5791   001B74  0E3F               	movlw	63
  5792   001B76  6E05               	movwf	??_color_click_init^0,c
  5793   001B78  0E55               	movlw	85
  5794   001B7A                     u2107:
  5795   001B7A  2EE8               	decfsz	wreg,f,c
  5796   001B7C  D7FE               	bra	u2107
  5797   001B7E  2E05               	decfsz	??_color_click_init^0,f,c
  5798   001B80  D7FC               	bra	u2107
  5799   001B82  F000               	nop	
  5800   001B84                     
  5801                           ;../color.c: 16:  color_writetoaddr(0x00, 0x03);
  5802   001B84  0E03               	movlw	3
  5803   001B86  6E03               	movwf	color_writetoaddr@value^0,c
  5804   001B88  0E00               	movlw	0
  5805   001B8A  EC15  F00F         	call	_color_writetoaddr
  5806   001B8E                     
  5807                           ;../color.c: 19:  color_writetoaddr(0x01, 0xD5);
  5808   001B8E  0ED5               	movlw	213
  5809   001B90  6E03               	movwf	color_writetoaddr@value^0,c
  5810   001B92  0E01               	movlw	1
  5811   001B94  EC15  F00F         	call	_color_writetoaddr
  5812   001B98                     
  5813                           ;../color.c: 22:     TRISHbits.TRISH1 = 0;
  5814   001B98  9288               	bcf	136,1,c	;volatile
  5815   001B9A                     
  5816                           ;../color.c: 23:     TRISDbits.TRISD3 = 0;
  5817   001B9A  9684               	bcf	132,3,c	;volatile
  5818   001B9C                     
  5819                           ;../color.c: 24:     TRISDbits.TRISD4 = 0;
  5820   001B9C  9884               	bcf	132,4,c	;volatile
  5821   001B9E                     
  5822                           ;../color.c: 25:     TRISHbits.TRISH0 = 0;
  5823   001B9E  9088               	bcf	136,0,c	;volatile
  5824   001BA0                     
  5825                           ;../color.c: 26:     TRISFbits.TRISF0 = 0;
  5826   001BA0  9086               	bcf	134,0,c	;volatile
  5827   001BA2                     
  5828                           ;../color.c: 28:     LATHbits.LATH1 = 1;
  5829   001BA2  8280               	bsf	128,1,c	;volatile
  5830   001BA4                     
  5831                           ;../color.c: 29:     LATDbits.LATD3 = 1;
  5832   001BA4  867C               	bsf	124,3,c	;volatile
  5833   001BA6                     
  5834                           ;../color.c: 30:     LATDbits.LATD4 = 0;
  5835   001BA6  987C               	bcf	124,4,c	;volatile
  5836   001BA8                     
  5837                           ;../color.c: 31:     LATHbits.LATH0 = 0;
  5838   001BA8  9080               	bcf	128,0,c	;volatile
  5839   001BAA                     
  5840                           ;../color.c: 32:     LATFbits.LATF0 = 0;
  5841   001BAA  907E               	bcf	126,0,c	;volatile
  5842   001BAC                     
  5843                           ;../color.c: 35:     LATDbits.LATD7=0;
  5844   001BAC  9E7C               	bcf	124,7,c	;volatile
  5845   001BAE                     
  5846                           ;../color.c: 36:     LATHbits.LATH3=0;
  5847   001BAE  9680               	bcf	128,3,c	;volatile
  5848   001BB0                     
  5849                           ;../color.c: 37:     TRISDbits.TRISD7=0;
  5850   001BB0  9E84               	bcf	132,7,c	;volatile
  5851   001BB2                     
  5852                           ;../color.c: 38:     TRISHbits.TRISH3=0;
  5853   001BB2  9688               	bcf	136,3,c	;volatile
  5854   001BB4                     
  5855                           ;../color.c: 40:     TRISFbits.TRISF2=1;
  5856   001BB4  8486               	bsf	134,2,c	;volatile
  5857   001BB6                     
  5858                           ;../color.c: 41:     ANSELFbits.ANSELF2=0;
  5859   001BB6  010E               	movlb	14	; () banked
  5860   001BB8  95B4               	bcf	180,2,b	;volatile
  5861   001BBA                     
  5862                           ; BSR set to: 14
  5863                           ;../color.c: 42:     TRISFbits.TRISF3=1;
  5864   001BBA  8686               	bsf	134,3,c	;volatile
  5865   001BBC                     
  5866                           ; BSR set to: 14
  5867                           ;../color.c: 43:     ANSELFbits.ANSELF3=0;
  5868   001BBC  97B4               	bcf	180,3,b	;volatile
  5869   001BBE                     
  5870                           ; BSR set to: 14
  5871   001BBE  0012               	return		;funcret
  5872   001BC0                     __end_of_color_click_init:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function _color_writetoaddr *****************
  5876 ;; Defined at:
  5877 ;;		line 46 in file "../color.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  address         1    wreg     unsigned char 
  5880 ;;  value           1    2[COMRAM] unsigned char 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  address         1    3[COMRAM] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;Total ram usage:        2 bytes
  5897 ;; Hardware stack levels used: 1
  5898 ;; Hardware stack levels required when called: 3
  5899 ;; This function calls:
  5900 ;;		_I2C_2_Master_Start
  5901 ;;		_I2C_2_Master_Stop
  5902 ;;		_I2C_2_Master_Write
  5903 ;; This function is called by:
  5904 ;;		_color_click_init
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text29
  5909   001E2A                     __ptext29:
  5910                           	callstack 0
  5911   001E2A                     _color_writetoaddr:
  5912                           	callstack 26
  5913                           
  5914                           ; BSR set to: 14
  5915                           ;incstack = 0
  5916                           ;color_writetoaddr@address stored from wreg
  5917   001E2A  6E04               	movwf	color_writetoaddr@address^0,c
  5918   001E2C                     
  5919                           ;../color.c: 46: void color_writetoaddr(char address, char value);../color.c: 47: {;../c
      +                          olor.c: 48:     I2C_2_Master_Start();
  5920   001E2C  EC5F  F00F         	call	_I2C_2_Master_Start	;wreg free
  5921                           
  5922                           ;../color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  5923   001E30  0E52               	movlw	82
  5924   001E32  EC4F  F00F         	call	_I2C_2_Master_Write
  5925                           
  5926                           ;../color.c: 50:     I2C_2_Master_Write(0x80 | address);
  5927   001E36  5004               	movf	color_writetoaddr@address^0,w,c
  5928   001E38  0980               	iorlw	128
  5929   001E3A  EC4F  F00F         	call	_I2C_2_Master_Write
  5930                           
  5931                           ;../color.c: 51:     I2C_2_Master_Write(value);
  5932   001E3E  5003               	movf	color_writetoaddr@value^0,w,c
  5933   001E40  EC4F  F00F         	call	_I2C_2_Master_Write
  5934                           
  5935                           ;../color.c: 52:     I2C_2_Master_Stop();
  5936   001E44  EC5A  F00F         	call	_I2C_2_Master_Stop	;wreg free
  5937   001E48  0012               	return		;funcret
  5938   001E4A                     __end_of_color_writetoaddr:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function _I2C_2_Master_Write *****************
  5942 ;; Defined at:
  5943 ;;		line 45 in file "../i2c.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  data_byte       1    wreg     unsigned char 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  data_byte       1    1[COMRAM] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;Total ram usage:        1 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 2
  5964 ;; This function calls:
  5965 ;;		_I2C_2_Master_Idle
  5966 ;; This function is called by:
  5967 ;;		_color_writetoaddr
  5968 ;;		_color_read_Luminosity
  5969 ;;		_color_read_Red
  5970 ;;		_color_read_Green
  5971 ;;		_color_read_Blue
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text30
  5976   001E9E                     __ptext30:
  5977                           	callstack 0
  5978   001E9E                     _I2C_2_Master_Write:
  5979                           	callstack 26
  5980                           
  5981                           ;incstack = 0
  5982                           ;I2C_2_Master_Write@data_byte stored from wreg
  5983   001E9E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5984   001EA0                     
  5985                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  5986   001EA0  ECEE  F00E         	call	_I2C_2_Master_Idle	;wreg free
  5987   001EA4                     
  5988                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  5989   001EA4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5990   001EA8  0012               	return		;funcret
  5991   001EAA                     __end_of_I2C_2_Master_Write:
  5992                           	callstack 0
  5993                           
  5994 ;; *************** function _I2C_2_Master_Stop *****************
  5995 ;; Defined at:
  5996 ;;		line 39 in file "../i2c.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 2
  6017 ;; This function calls:
  6018 ;;		_I2C_2_Master_Idle
  6019 ;; This function is called by:
  6020 ;;		_color_writetoaddr
  6021 ;;		_color_read_Luminosity
  6022 ;;		_color_read_Red
  6023 ;;		_color_read_Green
  6024 ;;		_color_read_Blue
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text31
  6029   001EB4                     __ptext31:
  6030                           	callstack 0
  6031   001EB4                     _I2C_2_Master_Stop:
  6032                           	callstack 26
  6033   001EB4                     
  6034                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  6035   001EB4  ECEE  F00E         	call	_I2C_2_Master_Idle	;wreg free
  6036   001EB8                     
  6037                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6038   001EB8  010E               	movlb	14	; () banked
  6039   001EBA  85DA               	bsf	218,2,b	;volatile
  6040   001EBC                     
  6041                           ; BSR set to: 14
  6042   001EBC  0012               	return		;funcret
  6043   001EBE                     __end_of_I2C_2_Master_Stop:
  6044                           	callstack 0
  6045                           
  6046 ;; *************** function _I2C_2_Master_Start *****************
  6047 ;; Defined at:
  6048 ;;		line 27 in file "../i2c.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      void 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;Total ram usage:        0 bytes
  6067 ;; Hardware stack levels used: 1
  6068 ;; Hardware stack levels required when called: 2
  6069 ;; This function calls:
  6070 ;;		_I2C_2_Master_Idle
  6071 ;; This function is called by:
  6072 ;;		_color_writetoaddr
  6073 ;;		_color_read_Luminosity
  6074 ;;		_color_read_Red
  6075 ;;		_color_read_Green
  6076 ;;		_color_read_Blue
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text32
  6081   001EBE                     __ptext32:
  6082                           	callstack 0
  6083   001EBE                     _I2C_2_Master_Start:
  6084                           	callstack 26
  6085   001EBE                     
  6086                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  6087   001EBE  ECEE  F00E         	call	_I2C_2_Master_Idle	;wreg free
  6088   001EC2                     
  6089                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6090   001EC2  010E               	movlb	14	; () banked
  6091   001EC4  81DA               	bsf	218,0,b	;volatile
  6092   001EC6                     
  6093                           ; BSR set to: 14
  6094   001EC6  0012               	return		;funcret
  6095   001EC8                     __end_of_I2C_2_Master_Start:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _I2C_2_Master_Idle *****************
  6099 ;; Defined at:
  6100 ;;		line 22 in file "../i2c.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;Total ram usage:        1 bytes
  6119 ;; Hardware stack levels used: 1
  6120 ;; Hardware stack levels required when called: 1
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_I2C_2_Master_Start
  6125 ;;		_I2C_2_Master_RepStart
  6126 ;;		_I2C_2_Master_Stop
  6127 ;;		_I2C_2_Master_Write
  6128 ;;		_I2C_2_Master_Read
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text33
  6133   001DDC                     __ptext33:
  6134                           	callstack 0
  6135   001DDC                     _I2C_2_Master_Idle:
  6136                           	callstack 26
  6137   001DDC                     l114:
  6138   001DDC  010E               	movlb	14	; () banked
  6139   001DDE  B5D8               	btfsc	216,2,b	;volatile
  6140   001DE0  EFF4  F00E         	goto	u841
  6141   001DE4  EFF6  F00E         	goto	u840
  6142   001DE8                     u841:
  6143   001DE8  EFEE  F00E         	goto	l114
  6144   001DEC                     u840:
  6145   001DEC                     
  6146                           ; BSR set to: 14
  6147   001DEC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6148   001DF0  0E1F               	movlw	31
  6149   001DF2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6150   001DF4  A4D8               	btfss	status,2,c
  6151   001DF6  EFFF  F00E         	goto	u851
  6152   001DFA  EF01  F00F         	goto	u850
  6153   001DFE                     u851:
  6154   001DFE  EFEE  F00E         	goto	l114
  6155   001E02                     u850:
  6156   001E02                     
  6157                           ; BSR set to: 14
  6158   001E02  0012               	return		;funcret
  6159   001E04                     __end_of_I2C_2_Master_Idle:
  6160                           	callstack 0
  6161                           
  6162 ;; *************** function _I2C_2_Master_Init *****************
  6163 ;; Defined at:
  6164 ;;		line 4 in file "../i2c.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 1
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_color_click_init
  6189 ;;		_main
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text34
  6194   001DB2                     __ptext34:
  6195                           	callstack 0
  6196   001DB2                     _I2C_2_Master_Init:
  6197                           	callstack 28
  6198   001DB2                     
  6199                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6200   001DB2  010E               	movlb	14	; () banked
  6201   001DB4  51D9               	movf	217,w,b	;volatile
  6202   001DB6  0BF0               	andlw	-16
  6203   001DB8  0908               	iorlw	8
  6204   001DBA  6FD9               	movwf	217,b	;volatile
  6205   001DBC                     
  6206                           ; BSR set to: 14
  6207                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6208   001DBC  8BD9               	bsf	217,5,b	;volatile
  6209                           
  6210                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6211   001DBE  0E9F               	movlw	159
  6212   001DC0  6FD6               	movwf	214,b	;volatile
  6213   001DC2                     
  6214                           ; BSR set to: 14
  6215                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6216   001DC2  8A84               	bsf	132,5,c	;volatile
  6217   001DC4                     
  6218                           ; BSR set to: 14
  6219                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6220   001DC4  8C84               	bsf	132,6,c	;volatile
  6221   001DC6                     
  6222                           ; BSR set to: 14
  6223                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6224   001DC6  9BA7               	bcf	167,5,b	;volatile
  6225   001DC8                     
  6226                           ; BSR set to: 14
  6227                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6228   001DC8  9DA7               	bcf	167,6,b	;volatile
  6229                           
  6230                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  6231   001DCA  0E1D               	movlw	29
  6232   001DCC  6F1D               	movwf	29,b	;volatile
  6233                           
  6234                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  6235   001DCE  0E1E               	movlw	30
  6236   001DD0  6F1C               	movwf	28,b	;volatile
  6237                           
  6238                           ;../i2c.c: 18:   RD5PPS=0x1C;
  6239   001DD2  0E1C               	movlw	28
  6240   001DD4  6F6F               	movwf	111,b	;volatile
  6241                           
  6242                           ;../i2c.c: 19:   RD6PPS=0x1B;
  6243   001DD6  0E1B               	movlw	27
  6244   001DD8  6F70               	movwf	112,b	;volatile
  6245   001DDA                     
  6246                           ; BSR set to: 14
  6247   001DDA  0012               	return		;funcret
  6248   001DDC                     __end_of_I2C_2_Master_Init:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function _Timer0_init *****************
  6252 ;; Defined at:
  6253 ;;		line 62 in file "../rc_servo.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 1
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text35
  6282   001E4A                     __ptext35:
  6283                           	callstack 0
  6284   001E4A                     _Timer0_init:
  6285                           	callstack 29
  6286   001E4A                     
  6287                           ;../rc_servo.c: 64:     T0CON1bits.T0CS=0b010;
  6288   001E4A  50D6               	movf	214,w,c	;volatile
  6289   001E4C  0B1F               	andlw	-225
  6290   001E4E  0940               	iorlw	64
  6291   001E50  6ED6               	movwf	214,c	;volatile
  6292   001E52                     
  6293                           ;../rc_servo.c: 65:     T0CON1bits.T0ASYNC=1;
  6294   001E52  88D6               	bsf	214,4,c	;volatile
  6295                           
  6296                           ;../rc_servo.c: 66:     T0CON1bits.T0CKPS=0b0111;
  6297   001E54  50D6               	movf	214,w,c	;volatile
  6298   001E56  0BF0               	andlw	-16
  6299   001E58  0907               	iorlw	7
  6300   001E5A  6ED6               	movwf	214,c	;volatile
  6301   001E5C                     
  6302                           ;../rc_servo.c: 68:     T0CON0bits.T016BIT=1;
  6303   001E5C  88D5               	bsf	213,4,c	;volatile
  6304                           
  6305                           ;../rc_servo.c: 71:     TMR0H=(65535-2500)>>8;
  6306   001E5E  0EF6               	movlw	246
  6307   001E60  6ED4               	movwf	212,c	;volatile
  6308                           
  6309                           ;../rc_servo.c: 72:     TMR0L=(unsigned char)(65535-2500);
  6310   001E62  0E3B               	movlw	59
  6311   001E64  6ED3               	movwf	211,c	;volatile
  6312   001E66                     
  6313                           ;../rc_servo.c: 73:     T0CON0bits.T0EN=1;
  6314   001E66  8ED5               	bsf	213,7,c	;volatile
  6315   001E68  0012               	return		;funcret
  6316   001E6A                     __end_of_Timer0_init:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function _Interrupts_init *****************
  6320 ;; Defined at:
  6321 ;;		line 8 in file "../rc_servo.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		None
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 1
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text36
  6350   001E88                     __ptext36:
  6351                           	callstack 0
  6352   001E88                     _Interrupts_init:
  6353                           	callstack 29
  6354   001E88                     
  6355                           ;../rc_servo.c: 12:     INTCONbits.IPEN = 1;
  6356   001E88  8AF2               	bsf	242,5,c	;volatile
  6357                           
  6358                           ;../rc_servo.c: 13:     INTCONbits.PEIE = 1;
  6359   001E8A  8CF2               	bsf	242,6,c	;volatile
  6360                           
  6361                           ;../rc_servo.c: 16:     PIE0bits.TMR0IE = 1;
  6362   001E8C  010E               	movlb	14	; () banked
  6363   001E8E  8B29               	bsf	41,5,b	;volatile
  6364                           
  6365                           ;../rc_servo.c: 17:     IPR0bits.TMR0IP = 1;
  6366   001E90  8B1F               	bsf	31,5,b	;volatile
  6367                           
  6368                           ;../rc_servo.c: 18:     PIR0bits.TMR0IF = 0;
  6369   001E92  9B33               	bcf	51,5,b	;volatile
  6370                           
  6371                           ;../rc_servo.c: 20:     PIE2bits.C1IE=1;
  6372   001E94  812B               	bsf	43,0,b	;volatile
  6373                           
  6374                           ;../rc_servo.c: 21:     IPR2bits.C1IP=0;
  6375   001E96  9121               	bcf	33,0,b	;volatile
  6376                           
  6377                           ;../rc_servo.c: 22:     PIR2bits.C1IF=0;
  6378   001E98  9135               	bcf	53,0,b	;volatile
  6379                           
  6380                           ;../rc_servo.c: 24:     INTCONbits.GIE = 1;
  6381   001E9A  8EF2               	bsf	242,7,c	;volatile
  6382   001E9C                     
  6383                           ; BSR set to: 14
  6384   001E9C  0012               	return		;funcret
  6385   001E9E                     __end_of_Interrupts_init:
  6386                           	callstack 0
  6387                           
  6388 ;; *************** function _HighISR *****************
  6389 ;; Defined at:
  6390 ;;		line 31 in file "../rc_servo.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		Interrupt level 2
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	intcode
  6418   000008                     __pintcode:
  6419                           	callstack 0
  6420   000008                     _HighISR:
  6421                           	callstack 26
  6422                           
  6423                           ; BSR set to: 14
  6424                           ;incstack = 0
  6425   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6426   00000A                     
  6427                           ;../rc_servo.c: 33:     if(PIR0bits.TMR0IF||!PORTFbits.RF2){
  6428   00000A  010E               	movlb	14	; () banked
  6429   00000C  BB33               	btfsc	51,5,b	;volatile
  6430   00000E  EF0B  F000         	goto	i2u162_41
  6431   000012  EF0D  F000         	goto	i2u162_40
  6432   000016                     i2u162_41:
  6433   000016  EF14  F000         	goto	i2l3282
  6434   00001A                     i2u162_40:
  6435   00001A                     
  6436                           ; BSR set to: 14
  6437   00001A  B48E               	btfsc	142,2,c	;volatile
  6438   00001C  EF12  F000         	goto	i2u163_41
  6439   000020  EF14  F000         	goto	i2u163_40
  6440   000024                     i2u163_41:
  6441   000024  EF1D  F000         	goto	i2l396
  6442   000028                     i2u163_40:
  6443   000028                     i2l3282:
  6444                           
  6445                           ; BSR set to: 14
  6446                           ;../rc_servo.c: 36:         time++;
  6447   000028  0101               	movlb	1	; () banked
  6448   00002A  4BE2               	infsnz	_time& (0+255),f,b
  6449   00002C  2BE3               	incf	(_time+1)& (0+255),f,b
  6450   00002E                     
  6451                           ; BSR set to: 1
  6452                           ;../rc_servo.c: 39:         TMR0L = 0b11011011;
  6453   00002E  0EDB               	movlw	219
  6454   000030  6ED3               	movwf	211,c	;volatile
  6455   000032                     
  6456                           ; BSR set to: 1
  6457                           ;../rc_servo.c: 40:         TMR0H = 0b00001011;
  6458   000032  0E0B               	movlw	11
  6459   000034  6ED4               	movwf	212,c	;volatile
  6460   000036                     
  6461                           ; BSR set to: 1
  6462                           ;../rc_servo.c: 42:         PIR0bits.TMR0IF=0;
  6463   000036  010E               	movlb	14	; () banked
  6464   000038  9B33               	bcf	51,5,b	;volatile
  6465   00003A                     i2l396:
  6466                           
  6467                           ; BSR set to: 14
  6468   00003A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6469   00003C  0011               	retfie		f
  6470   00003E                     __end_of_HighISR:
  6471                           	callstack 0
  6472   000000                     
  6473                           	psect	rparam
  6474   000000                     
  6475                           	psect	temp
  6476   000056                     btemp:
  6477                           	callstack 0
  6478   000056                     	ds	1
  6479   000000                     int$flags	set	btemp
  6480   000000                     wtemp8	set	btemp+1
  6481   000000                     ttemp5	set	btemp+1
  6482   000000                     ttemp6	set	btemp+4
  6483   000000                     ttemp7	set	btemp+8
  6484                           
  6485                           	psect	idloc
  6486                           
  6487                           ;Config register IDLOC0 @ 0x200000
  6488                           ;	unspecified, using default values
  6489   200000                     	org	2097152
  6490   200000  0FFF               	dw	4095
  6491                           
  6492                           ;Config register IDLOC1 @ 0x200002
  6493                           ;	unspecified, using default values
  6494   200002                     	org	2097154
  6495   200002  0FFF               	dw	4095
  6496                           
  6497                           ;Config register IDLOC2 @ 0x200004
  6498                           ;	unspecified, using default values
  6499   200004                     	org	2097156
  6500   200004  0FFF               	dw	4095
  6501                           
  6502                           ;Config register IDLOC3 @ 0x200006
  6503                           ;	unspecified, using default values
  6504   200006                     	org	2097158
  6505   200006  0FFF               	dw	4095
  6506                           
  6507                           ;Config register IDLOC4 @ 0x200008
  6508                           ;	unspecified, using default values
  6509   200008                     	org	2097160
  6510   200008  0FFF               	dw	4095
  6511                           
  6512                           ;Config register IDLOC5 @ 0x20000A
  6513                           ;	unspecified, using default values
  6514   20000A                     	org	2097162
  6515   20000A  0FFF               	dw	4095
  6516                           
  6517                           ;Config register IDLOC6 @ 0x20000C
  6518                           ;	unspecified, using default values
  6519   20000C                     	org	2097164
  6520   20000C  0FFF               	dw	4095
  6521                           
  6522                           ;Config register IDLOC7 @ 0x20000E
  6523                           ;	unspecified, using default values
  6524   20000E                     	org	2097166
  6525   20000E  0FFF               	dw	4095
  6526                           
  6527                           	psect	config
  6528                           
  6529                           ;Config register CONFIG1L @ 0x300000
  6530                           ;	External Oscillator mode Selection bits
  6531                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6532                           ;	Power-up default value for COSC bits
  6533                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6534   300000                     	org	3145728
  6535   300000  AA                 	db	170
  6536                           
  6537                           ;Config register CONFIG1H @ 0x300001
  6538                           ;	unspecified, using default values
  6539                           ;	Clock Out Enable bit
  6540                           ;	CLKOUTEN = 0x1, unprogrammed default
  6541                           ;	Clock Switch Enable bit
  6542                           ;	CSWEN = 0x1, unprogrammed default
  6543                           ;	Fail-Safe Clock Monitor Enable bit
  6544                           ;	FCMEN = 0x1, unprogrammed default
  6545   300001                     	org	3145729
  6546   300001  FF                 	db	255
  6547                           
  6548                           ;Config register CONFIG2L @ 0x300002
  6549                           ;	unspecified, using default values
  6550                           ;	Master Clear Enable bit
  6551                           ;	MCLRE = 0x1, unprogrammed default
  6552                           ;	Power-up Timer Enable bit
  6553                           ;	PWRTE = 0x1, unprogrammed default
  6554                           ;	Low-power BOR enable bit
  6555                           ;	LPBOREN = 0x1, unprogrammed default
  6556                           ;	Brown-out Reset Enable bits
  6557                           ;	BOREN = 0x3, unprogrammed default
  6558   300002                     	org	3145730
  6559   300002  FF                 	db	255
  6560                           
  6561                           ;Config register CONFIG2H @ 0x300003
  6562                           ;	unspecified, using default values
  6563                           ;	Brown Out Reset Voltage selection bits
  6564                           ;	BORV = 0x3, unprogrammed default
  6565                           ;	ZCD Disable bit
  6566                           ;	ZCD = 0x1, unprogrammed default
  6567                           ;	PPSLOCK bit One-Way Set Enable bit
  6568                           ;	PPS1WAY = 0x1, unprogrammed default
  6569                           ;	Stack Full/Underflow Reset Enable bit
  6570                           ;	STVREN = 0x1, unprogrammed default
  6571                           ;	Debugger Enable bit
  6572                           ;	DEBUG = 0x1, unprogrammed default
  6573                           ;	Extended Instruction Set Enable bit
  6574                           ;	XINST = 0x1, unprogrammed default
  6575   300003                     	org	3145731
  6576   300003  FF                 	db	255
  6577                           
  6578                           ;Config register CONFIG3L @ 0x300004
  6579                           ;	WDT Period Select bits
  6580                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6581                           ;	WDT operating mode
  6582                           ;	WDTE = OFF, WDT Disabled
  6583   300004                     	org	3145732
  6584   300004  9F                 	db	159
  6585                           
  6586                           ;Config register CONFIG3H @ 0x300005
  6587                           ;	unspecified, using default values
  6588                           ;	WDT Window Select bits
  6589                           ;	WDTCWS = 0x7, unprogrammed default
  6590                           ;	WDT input clock selector
  6591                           ;	WDTCCS = 0x7, unprogrammed default
  6592   300005                     	org	3145733
  6593   300005  FF                 	db	255
  6594                           
  6595                           ;Config register CONFIG4L @ 0x300006
  6596                           ;	unspecified, using default values
  6597                           ;	Write Protection Block 0
  6598                           ;	WRT0 = 0x1, unprogrammed default
  6599                           ;	Write Protection Block 1
  6600                           ;	WRT1 = 0x1, unprogrammed default
  6601                           ;	Write Protection Block 2
  6602                           ;	WRT2 = 0x1, unprogrammed default
  6603                           ;	Write Protection Block 3
  6604                           ;	WRT3 = 0x1, unprogrammed default
  6605                           ;	Write Protection Block 3
  6606                           ;	WRT4 = 0x1, unprogrammed default
  6607                           ;	Write Protection Block 3
  6608                           ;	WRT5 = 0x1, unprogrammed default
  6609                           ;	Write Protection Block 3
  6610                           ;	WRT6 = 0x1, unprogrammed default
  6611                           ;	Write Protection Block 3
  6612                           ;	WRT7 = 0x1, unprogrammed default
  6613   300006                     	org	3145734
  6614   300006  FF                 	db	255
  6615                           
  6616                           ;Config register CONFIG4H @ 0x300007
  6617                           ;	unspecified, using default values
  6618                           ;	Configuration Register Write Protection bit
  6619                           ;	WRTC = 0x1, unprogrammed default
  6620                           ;	Boot Block Write Protection bit
  6621                           ;	WRTB = 0x1, unprogrammed default
  6622                           ;	Data EEPROM Write Protection bit
  6623                           ;	WRTD = 0x1, unprogrammed default
  6624                           ;	Scanner Enable bit
  6625                           ;	SCANE = 0x1, unprogrammed default
  6626                           ;	Low Voltage Programming Enable bit
  6627                           ;	LVP = 0x1, unprogrammed default
  6628   300007                     	org	3145735
  6629   300007  FF                 	db	255
  6630                           
  6631                           ;Config register CONFIG5L @ 0x300008
  6632                           ;	unspecified, using default values
  6633                           ;	UserNVM Program Memory Code Protection bit
  6634                           ;	CP = 0x1, unprogrammed default
  6635                           ;	DataNVM Memory Code Protection bit
  6636                           ;	CPD = 0x1, unprogrammed default
  6637   300008                     	org	3145736
  6638   300008  FF                 	db	255
  6639                           
  6640                           ;Config register CONFIG5H @ 0x300009
  6641                           ;	unspecified, using default values
  6642   300009                     	org	3145737
  6643   300009  FF                 	db	255
  6644                           
  6645                           ;Config register CONFIG6L @ 0x30000A
  6646                           ;	unspecified, using default values
  6647                           ;	Table Read Protection Block 0
  6648                           ;	EBTR0 = 0x1, unprogrammed default
  6649                           ;	Table Read Protection Block 1
  6650                           ;	EBTR1 = 0x1, unprogrammed default
  6651                           ;	Table Read Protection Block 2
  6652                           ;	EBTR2 = 0x1, unprogrammed default
  6653                           ;	Table Read Protection Block 3
  6654                           ;	EBTR3 = 0x1, unprogrammed default
  6655                           ;	Table Read Protection Block 4
  6656                           ;	EBTR4 = 0x1, unprogrammed default
  6657                           ;	Table Read Protection Block 5
  6658                           ;	EBTR5 = 0x1, unprogrammed default
  6659                           ;	Table Read Protection Block 6
  6660                           ;	EBTR6 = 0x1, unprogrammed default
  6661                           ;	Table Read Protection Block 7
  6662                           ;	EBTR7 = 0x1, unprogrammed default
  6663   30000A                     	org	3145738
  6664   30000A  FF                 	db	255
  6665                           
  6666                           ;Config register CONFIG6H @ 0x30000B
  6667                           ;	unspecified, using default values
  6668                           ;	Boot Block Table Read Protection bit
  6669                           ;	EBTRB = 0x1, unprogrammed default
  6670   30000B                     	org	3145739
  6671   30000B  FF                 	db	255
  6672                           tosu	equ	0xFFF
  6673                           tosh	equ	0xFFE
  6674                           tosl	equ	0xFFD
  6675                           stkptr	equ	0xFFC
  6676                           pclatu	equ	0xFFB
  6677                           pclath	equ	0xFFA
  6678                           pcl	equ	0xFF9
  6679                           tblptru	equ	0xFF8
  6680                           tblptrh	equ	0xFF7
  6681                           tblptrl	equ	0xFF6
  6682                           tablat	equ	0xFF5
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           indf0	equ	0xFEF
  6686                           postinc0	equ	0xFEE
  6687                           postdec0	equ	0xFED
  6688                           preinc0	equ	0xFEC
  6689                           plusw0	equ	0xFEB
  6690                           fsr0h	equ	0xFEA
  6691                           fsr0l	equ	0xFE9
  6692                           wreg	equ	0xFE8
  6693                           indf1	equ	0xFE7
  6694                           postinc1	equ	0xFE6
  6695                           postdec1	equ	0xFE5
  6696                           preinc1	equ	0xFE4
  6697                           plusw1	equ	0xFE3
  6698                           fsr1h	equ	0xFE2
  6699                           fsr1l	equ	0xFE1
  6700                           bsr	equ	0xFE0
  6701                           indf2	equ	0xFDF
  6702                           postinc2	equ	0xFDE
  6703                           postdec2	equ	0xFDD
  6704                           preinc2	equ	0xFDC
  6705                           plusw2	equ	0xFDB
  6706                           fsr2h	equ	0xFDA
  6707                           fsr2l	equ	0xFD9
  6708                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      85
    BANK0           160      0      60
    BANK1           256    166     228
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse_onesquare@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_onesquare@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse_fromcard@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_fromcard@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    opposite_forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    opposite_forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    opposite_forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S599DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S599DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK1[64]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_processor_easy@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK1[64]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_color_processor_hard
    _spin_180->_setMotorPWM
    _motor_action->_forward
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse_fromcard
    _motor_action->_reverse_onesquare
    _motor_action->_right_135
    _motor_action->_right_90
    _stop->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse_onesquare->_setMotorPWM
    _reverse_fromcard->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_processor_hard->___flge
    ___flmul->___xxtofl
    ___flge->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               185   185      0   67906
                                             55 COMRAM     2     2      0
                                              0 BANK1    166   166      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                        _setMotorPWM
                           _spin_180
                               _stop
 ---------------------------------------------------------------------------------
 (1) _spin_180                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   41386
                                             33 COMRAM     8     2      6
                            _forward
                           _left_135
                            _left_90
                   _reverse_fromcard
                  _reverse_onesquare
                          _right_135
                           _right_90
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    9635
                                             25 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    4163
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    3707
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_onesquare                                    8     4      4    3555
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_fromcard                                     8     4      4    4467
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    4315
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              8     4      4    3859
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2855
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     692
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                28    24      4    3471
                                             51 COMRAM     4     0      4
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                18    14      4     486
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _forward
     _left_135
       _setMotorPWM
     _left_90
       _setMotorPWM
     _reverse_fromcard
       _setMotorPWM
     _reverse_onesquare
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _stop
       _setMotorPWM
   _setMotorPWM
   _spin_180
     _setMotorPWM
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A6      E4       7       89.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      55       1       90.4%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhlhhh     1B      0       0      33        0.0%
BITBIGSFRhhll       17      0       0      35        0.0%
BITBIGSFRhhlhl      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRllllll      7      0       0      52        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     175      59        0.0%
DATA                 0      0     175       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 13 12:44:56 2022

                _color_read_Red 1BC0                 _color_read_Blue 1CB0                              l51 1C5E  
                            l60 1CFE                              l45 1BBE                              l54 1C0E  
                            l63 15C4                              l48 1E48                              l57 1CAE  
                            l67 1356                              l84 1EC8                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Green 1C60               ??_Interrupts_init 0001  
                           l111 1DDA                             l120 1EC6                             l114 1DDC  
                           l210 0114                             l123 1EB2                             l211 0128  
                           l132 1D82                             l117 1E02                             l301 18F2  
                           l126 1EBC                             l222 0550                             l311 170C  
                           l129 1EA8                             l321 1850                             l306 1668  
                           l316 17AE                             l341 0A80                             l326 1994  
                           l440 1E86                             l281 1B64                             l339 09D8  
                           l276 107E                             l269 1D40                             l461 1E28  
                           l286 1A36                             l296 1AD6                             l731 145A  
                           l388 1E9C                             l726 1414                             l399 1E68  
                           l692 151E               motor_action@color 0022                             u900 14E8  
                           u901 14E4                             u910 150E                             u911 150A  
                           u840 1DEC                             u920 1D6C                             u841 1DE8  
                           u921 1D64                             u850 1E02                             u851 1DFE  
                           u860 146E                             u940 0EC8                             u861 146A  
                           u941 0EC4                             u870 1488                             u950 0FAC  
                           u871 1484                             u951 0FA8                             u880 14AE  
                           u881 14AA                             u938 1D6E                             u890 14CC  
                           u891 14C8                             u964 1006                             u980 1B64  
                           u965 1002                             u981 1B60                             u974 1070  
                           u990 1A1E                             u975 106C                             u991 1A1A  
                           wreg 000FE8                    ___flmul@aexp 0020                    ___flmul@bexp 0021  
                  ___flmul@sign 001B                    ___flmul@temp 0026                    ___flmul@prod 0022  
                          l1130 11CA                            l1123 116E                            l1116 10D6  
                          l1119 1232                            l3000 0970                            l1082 0D3C  
                          l3002 0984                            l1075 0B46                            l1092 0E6C  
                          l1084 0DB4                            l2300 1EAA                            l3004 0998  
                          l3012 0A1C                            l3020 172E                            l3100 01E2  
                          l1085 0DA2                            l2310 1D58                            l2302 1EAE  
                          l3006 0A00                            l3030 1750                            l3110 0296  
                          l3102 01FA                            l1079 0EAA                            l2312 1D7E  
                          l2304 1D44                            l2240 1E20                            l2320 0EC8  
                          l2400 19D6                            l3040 1798                            l3032 175C  
                          l3120 036E                            l3112 0326                            l3104 022E  
                          l2234 1DDC                            l2314 1D80                            l2306 1D48  
                          l2250 1476                            l2330 1016                            l2322 0F2A  
                          l2410 1A1E                            l2402 19E2                            l3034 1768  
                          l3026 1736                            l3018 170E                            l3130 03BA  
                          l3122 0386                            l3114 032E                            l3106 024A  
                          l3050 005A                            l3042 0042                            l2340 1DC6  
                          l2332 1DB2                            l2236 1DEC                            l2308 1D50  
                          l2260 149C                            l2252 147A                            l2244 145C  
                          l2324 0F70                            l2404 19EE                            l2500 16D8  
                          l2420 1A60                            l2412 1A38                            l3036 1770  
                          l3028 1742                            l3140 0424                            l3132 03CE  
                          l3124 039C                            l3116 034A                            l3108 027E  
                          l3060 006C                            l3052 005E                            l3044 0046  
                          l2342 1DC8                            l2334 1DBC                            l2270 14D2  
                          l2262 14AE                            l2254 1488                            l2246 1460  
                          l2238 1E04                            l2326 0F90                            l2318 0EAC  
                          l2406 19F6                            l2502 16F4                            l2430 1AA4  
                          l2422 1A78                            l2414 1A58                            l3310 0A32  
                          l3038 177C                            l3150 0484                            l3142 0440  
                          l3134 03DA                            l3126 03A4                            l3118 0362  
                          l3070 008C                            l3062 0074                            l3054 0062  
                          l3046 0052                            l2336 1DC2                            l2344 1E2C  
                          l2600 0BB2                            l2360 1CA6                            l2352 1BC0  
                          l2272 14E8                            l2264 14B6                            l2280 14FE  
                          l2256 1490                            l2248 146E                            l2328 0FAC  
                          l2408 1A02                            l2432 1AC0                            l2424 1A84  
                          l2520 180A                            l2512 17D8                            l2504 17B0  
                          l3160 04BE                            l3152 048C                            l3144 045A  
                          l3136 03E8                            l3128 03B6                            l3080 00C4  
                          l3072 00A0                            l3064 007C                            l3056 0062  
                          l3048 0056                            l2338 1DC4                            l2290 1EC2  
                          l2610 0BFC                            l2602 0BCA                            l2346 1C10  
                          l2354 1C06                            l2282 150E                            l2274 14F0  
                          l2266 14BE                            l2258 1494                            l2530 1914  
                          l2426 1A90                            l2450 18B2                            l2442 187A  
                          l2434 1852                            l2522 1812                            l2514 17E4  
                          l2506 17D0                            l2370 1AD8                            l3170 0520  
                          l3162 04D2                            l3154 048E                            l3146 0476  
                          l3138 0408                            l3090 012A                            l3082 00CE  
                          l3074 00A4                            l3066 0080                            l3058 0068  
                          l2292 1EA0                            l2700 1458                            l2620 0C52  
                          l2612 0C0C                            l2604 0BD6                            l2364 1CB0  
                          l2348 1C56                            l2284 1516                            l2276 14F2  
                          l2268 14CC                            l2540 1936                            l2428 1A98  
                          l2452 18BE                            l2444 1892                            l2436 1872  
                          l2524 181E                            l2516 17F2                            l2380 1B18  
                          l2372 1AF8                            l3180 0552                            l3164 04DC  
                          l3148 047C                            l3156 0490                            l3092 0146  
                          l3084 00DA                            l3076 00AC                            l3068 0088  
                          l2294 1EA4                            l2630 0CF6                            l2622 0C6E  
                          l2614 0C18                            l2606 0BE2                            l2710 10E6  
                          l2366 1CF6                            l2358 1C60                            l2278 14F8  
                          l2390 1996                            l2550 197E                            l2542 1942  
                          l2454 18DA                            l2446 189E                            l2526 183A  
                          l2518 17FE                            l2470 1614                            l2382 1B24  
                          l3190 05BE                            l3182 055A                            l3174 052A  
                          l3158 04A8                            l3094 015E                            l3086 00E6  
                          l3078 00B8                            l2288 1EBE                            l2296 1EB4  
                          l2640 0D4C                            l2632 0D04                            l2624 0C7A  
                          l2616 0C28                            l2608 0BF0                            l2560 0AAE  
                          l2552 0A82                            l2720 1124                            l2712 10FC  
                          l2704 1082                            l2800 154C                            l2392 19B6  
                          l2544 194E                            l2536 191C                            l2528 18F4  
                          l2480 166A                            l2448 18AA                            l2472 1620  
                          l2464 15EE                            l2456 15C6                            l2384 1B30  
                          l3192 05E8                            l3184 0588                            l3176 0532  
                          l3168 04FC                            l3096 0192                            l3088 0122  
                          l2298 1EB8                            l2810 1258                            l2642 0D5A  
                          l2634 0D22                            l2626 0C96                            l2618 0C42  
                          l2570 0AEA                            l2562 0ABE                            l2554 0A8E  
                          l2730 11AC                            l2722 1156                            l2706 1092  
                          l2802 157C                            l2546 1956                            l2538 192A  
                          l2490 16A0                            l2482 168A                            l2474 1628  
                          l2466 15FA                            l2458 15E6                            l2386 1B3E  
                          l2378 1B00                            l3194 05FC                            l3186 05A0  
                          l3098 01AE                            l2812 126C                            l2652 0DC4  
                          l2660 0E0C                            l2644 0D5E                            l2636 0D2C  
                          l2628 0CC0                            l2580 0B20                            l2572 0AF0  
                          l2564 0ACE                            l2556 0A9C                            l2740 1202  
                          l2732 11BA                            l2724 1158                            l2716 1110  
                          l2708 10A0                            l2804 1594                            l2900 1D24  
                          l2548 1962                            l2492 16AC                            l2476 1634  
                          l2468 1608                            l2388 1B4A                            l3188 05B8  
                          l2910 1E4A                            l2750 1B66                            l2822 12F4  
                          l2814 1280                            l2806 1234                            l2670 0E80  
                          l2662 0E26                            l2654 0DD0                            l2646 0D6C  
                          l2638 0D3A                            l2582 0B30                            l2574 0AFE  
                          l2566 0AD4                            l2558 0A9E                            l2742 1212  
                          l2734 11D8                            l2726 1164                            l2718 1118  
                          l2902 1D28                            l2398 19BE                            l2494 16B8  
                          l2478 1650                            l2912 1E52                            l2760 1B98  
                          l2752 1B6A                            l2824 130A                            l2816 12B2  
                          l2808 1244                            l2672 0E8E                            l2664 0E3A  
                          l2656 0DDE                            l2648 0D9A                            l2592 0B7A  
                          l2584 0B36                            l2576 0B00                            l2568 0AE4  
                          l2744 1220                            l2736 11DA                            l2728 11A0  
                          l2904 1D3C                            l2920 1E74                            l2496 16C4  
                          l2488 1692                            l2914 1E5C                            l2770 1BA2  
                          l2762 1B9A                            l2754 1B74                            l2834 1342  
                          l2826 1320                            l2818 12E8                            l2690 13D4  
                          l2682 1358                            l2674 0E90                            l2666 0E54  
                          l2658 0E08                            l2594 0B86                            l2586 0B56  
                          l2578 0B10                            l2746 1222                            l2738 11DE  
                          l2850 1EC8                            l2842 1EC8                            l2906 1D3E  
                          l2922 1E76                            l2498 16CC                            l2930 060C  
                          l2908 1E88                            l2916 1E66                            l2780 1BAC  
                          l2772 1BA4                            l2764 1B9C                            l2756 1B84  
                          l2828 1336                            l2692 13E2                            l2684 1386  
                          l2668 0E70                            l2676 0E96                            l2596 0B90  
                          l2588 0B66                            l2852 1EC8                            l2844 1EC8  
                          l2924 1E80                            l2940 0678                            l2932 0610  
                          l2790 1BB6                            l2782 1BAE                            l2774 1BA6  
                          l2766 1B9E                            l2758 1B8E                            l2838 134E  
                          l2694 13F4                            l2686 1396                            l2678 0E9A  
                          l2598 0BA6                            l2854 1EC8                            l2846 1EC8  
                          l2926 1E82                            l2918 1E6A                            l2950 0728  
                          l2942 06BC                            l2934 0638                            l2792 1BBA  
                          l2784 1BB0                            l2776 1BA8                            l2768 1BA0  
                          l2696 1402                            l2688 13C4                            l2848 1EC8  
                          l2928 1E84                            l2960 07D4                            l2952 0750  
                          l2944 06E4                            l2936 0650                            l2794 1BBC  
                          l2786 1BB2                            l2778 1BAA                            l2698 1452  
                          l2970 0800                            l2954 0768                            l2946 06FC  
                          l2938 0664                            l2788 1BB4                            l2796 1520  
                          l2980 0854                            l2956 077C                            l2948 0710  
                          l2798 1534                            l2990 0900                            l2982 086C  
                          l2958 0790                            l2896 1D00                            l2992 0918  
                          l2984 0880                            l2898 1D10                            l2986 0894  
                          l2978 082C                            l2996 0930                            l2988 08D8  
                          l2998 0958                            u1000 1AC0                            u1001 1ABC  
                          u1010 18DA                            u1011 18D6                            u1100 0B10  
                          u1020 1650                            u1101 0B0C                            u1021 164C  
                          u1110 0B20                            u1030 16F4                            u1111 0B1C  
                          u1031 16F0                            u1200 0DC4                            u1120 0B56  
                          u1040 183A                            u1201 0DC0                            u1121 0B52  
                          u1041 1836                            u1210 0DDE                            u1130 0B66  
                          u1050 197E                            u1211 0DDA                            u1131 0B62  
                          u1051 197A                            u1220 0E26                            u1140 0CE0  
                          u1060 0A9C                            u1300 1092                            u1221 0E22  
                          u1061 0A98                            u1301 108E                            u1230 0E54  
                          u1150 0D3A                            u1070 0AAE                            u1310 10A0  
                          u1231 0E50                            u1151 0D36                            u1071 0AAA  
                          u1311 109C                            u2007 1ACA                            u1400 12B2  
                          u1240 0E8E                            u1160 0D5A                            u1080 0ABE  
                          u1320 10FC                            u1401 12AE                            u1241 0E8A  
                          u1161 0D56                            u1145 0CD6                            u1081 0ABA  
                          u1321 10F8                            u2017 16C6                            u1410 12E8  
                          u1250 1386                            u1170 0D6C                            u1090 0AFE  
                          u1330 1152                            u2107 1B7A                            u1411 12E4  
                          u1251 1382                            u1171 0D68                            u1091 0AFA  
                          u1331 114E                            u2027 16FE                            u1420 130A  
                          u1260 13C4                            u1180 0D9A                            u1340 119C  
                          u1500 0122                            u1421 1306                            u1261 13C0  
                          u1181 0D96                            u1341 1198                            u2037 1950  
                          u1501 011E                            u1430 1320                            u1270 13E2  
                          u1190 0DB0                            u1350 11BA                            u1510 0386  
                          u1431 131C                            u1271 13DE                            u1191 0DAC  
                          u1351 11B6                            u2047 1988                            u1511 0382  
                          u1440 1336                            u1280 1402                            u1360 11CA  
                          u1600 05E8                            u1520 039C                    _BAUD4CONbits 000EE9  
                          u1441 1332                            u1281 13FE                            u1361 11C6  
                          u2057 19F0                            u1601 05E4                            u1521 0398  
                          _LATE 000F7D                            u1290 1452                            u1370 11D8  
                          u1450 1798                            u1530 03B6                            u1291 144E  
                          u1371 11D4                            u2067 1A28                            u1451 1794  
                          u1531 03B2                            _LATG 000F7F                            u1380 1212  
                          u1540 03E8                            u1381 120E                            u2077 153E  
                          u1541 03E4                            u1461 00D4                            u1390 1220  
                          u1550 04BE                            u1391 121C                            u2087 156E  
                          u1551 04BA                            u1471 00E0                            u1560 04F8  
                          u1480 0102                            u2097 159E                            u1561 04F4  
                          u1481 00FA                            u1570 050E                            u1490 0114  
                          _T2PR 000FBC                            u1571 0506                            u1707 0288  
                          u1491 0110                            u1717 02B4                            u1590 054C  
                          u1807 17A2                            u1591 0548                            u1727 02CC  
                          u1647 0150                            u1488 0104                            u1817 0642  
                          u1737 02E4                            u1657 0184                            u1907 09A2  
                          u1827 0682                            u1747 02FC                            u1667 01B8  
                          u1588 0510                            u1917 0A0A                            u1837 06EE  
                          u1757 0314                            u1677 01EC                            u1927 1B36  
                          u1847 075A                            u1767 0354                            u1687 0220  
                          u1937 1622                            u1857 079A                            u1777 049A  
                          u1697 0254                            u1947 165A                            u1867 085E  
                          u1787 05AA                            u1957 180C                            u1877 089E  
                          u1797 176A                            u1967 1844                            u1887 090A  
                          u1977 18AC                            u1897 0962                            u1987 18E4  
                          u1997 1A92                            _main 0042                            _time 01E2  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 0056                            _stop 1AD8                            prodh 000FF4  
                          prodl 000FF3                            start 003E          __end_of_color_read_Red 1C10  
               __end_of_HighISR 003E                    ___param_bank 000000                           ?_main 0001  
               __end_of___awdiv 1520         ??_color_read_Luminosity 0007                 __end_of___flmul 0EAC  
                         ?_stop 001A                 ___awdiv@divisor 0009                           i2l396 003A  
               ___awdiv@counter 000B                           _TMR0H 000FD4                           _TMR0L 000FD3  
    __end_of_I2C_2_Master_Start 1EC8      __end_of_I2C_2_Master_Write 1EAA                 __end_of_left_90 170E  
color_processor_easy@calibrated 0003                 __end_of_forward 1A38                           main@j 0184  
                         main@k 018A                           main@m 0186                           ttemp5 0057  
                         ttemp6 005A                           ttemp7 005E                           stop@i 001F  
                         status 000FD8                           wtemp8 0057         __end_of_color_read_Blue 1D00  
         _I2C_2_Master_RepStart 1EAA                 ?_color_read_Red 0005                 __initialization 1D84  
color_processor_hard@calibrated 0036                    __end_of_main 060C                    __end_of_stop 1B66  
                        ??_main 0038                          ??_stop 001E                   __activetblptr 000003  
                  ?_setMotorPWM 000F                ___awdiv@dividend 0007                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l3280 001A  
                        i2l3282 0028                          i2l3284 002E                          i2l3286 0032  
                        i2l3278 000A                          i2l3288 0036                       ??_HighISR 0001  
      __end_of_color_click_init 1BC0                          _RX4PPS 000E15                          _TX4REG 000EE4  
              __end_of___xxtofl 1234                   ??_Timer0_init 0001                __end_of_left_135 1996  
                        ___flge 1358                          ___wmul 1E04                       ??___awdiv 000B  
                     ??___flmul 0017                          clear_0 1D8A                          clear_1 1D96  
                        clear_2 1DA2                ___awdiv@quotient 000D                          isa$std 000001  
                     ??_left_90 001E                __end_of_right_90 166A                   main@time_path 015E  
                     ??_forward 001E                __end_of_spin_180 17B0                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003             reverse_onesquare@mL 001A  
           reverse_onesquare@mR 001C                      ___flge@ff1 0028                      ___flge@ff2 002C  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    __accesstop 0060         __end_of__initialization 1DA8        __end_of_color_read_Green 1CB0  
        ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001                ?_color_read_Blue 0005  
               _Interrupts_init 1E88                  __pcstackCOMRAM 0001                   color_read@rgb 000C  
           __end_of_Timer0_init 1E6A                      __pbssBANK0 0060                      __pbssBANK1 01A6  
             _color_writetoaddr 1E2A                    _T2CLKCONbits 000FBF                         ?___flge 0028  
            ?_color_writetoaddr 0003                         ?___wmul 0001                  main@color_flag 0180  
                main@color_name 0188                  main@color_path 0140                     right_135@mL 001A  
                   right_135@mR 001C             ??_color_writetoaddr 0004                _reverse_fromcard 1A38  
                     ?___xxtofl 0001   __end_of_color_read_Luminosity 1C60                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                       ?_left_135 001A  
                    _color_read 1520         __end_of_Interrupts_init 1E9E          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 1E4A  
      color_read_Luminosity@tmp 000A              _I2C_2_Master_Start 1EBE                      _initUSART4 1E6A  
            _I2C_2_Master_Write 1E9E                       ?_right_90 001A                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 1E4A  
                     ?_spin_180 001A                         ___awdiv 145C                         ___flmul 0A82  
           ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001                      _off_period 004E  
                       __pcinit 1D84                         __ramtop 0E00                         __ptext0 0042  
                       __ptext1 170E                         __ptext2 060C                         __ptext3 1AD8  
                       __ptext4 15C6                         __ptext5 17B0                         __ptext6 1852  
                       __ptext7 1A38                         __ptext8 166A                         __ptext9 18F4  
                       _left_90 166A                       _T2CONbits 000FBD                         _forward 1996  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE       main@lowerbound_calibrated 017C  
                 ?_motor_action 0022                   _RxBufWriteCnt 0055            ??_I2C_2_Master_Start 0002  
                    ??_left_135 001E            ??_I2C_2_Master_Write 0002            end_of_initialization 1DA8  
             __end_of_right_135 1852              setMotorPWM@PWMduty 0018               ?_color_click_init 0001  
  __end_of_color_processor_easy 1358    __end_of_color_processor_hard 1ECA                      ??_right_90 001E  
            ??_color_click_init 0005                      ??_spin_180 001E                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      main@F14643 01C4                      main@F14651 01A6  
               _initDCmotorsPWM 1D00                       _PORTFbits 000F8E                  ??_motor_action 0028  
                 ___xxtofl@sign 0009                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88              reverse_fromcard@mL 001A              reverse_fromcard@mR 001C  
                   ?_color_read 000C        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
              ?_Interrupts_init 0001                     ___flmul@grs 001C                      left_135@mL 001A  
                    left_135@mR 001C                    _EUSART4RXbuf 003A                    _EUSART4TXbuf 0060  
             ?_color_read_Green 0005                     ?_initUSART4 0001                      main@motorL 0194  
                    main@motorR 019D              ??_color_read_Green 0007                  __end_of___flge 145C  
                __end_of___wmul 1E2A             start_initialization 1D84                   _TxBufWriteCnt 0053  
      __end_of_reverse_fromcard 1AD8             color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 1D42  
                      ??___flge 0030                        ??___wmul 0005              reverse_onesquare@i 0020  
                     ___flmul@a 0013                       ___flmul@b 000F                     __pbssCOMRAM 003A  
          _color_processor_easy 1234            _color_processor_hard 1EC8                   __pcstackBANK1 0100  
                      ?_HighISR 0001         color_processor_easy@rgb 0001         color_processor_hard@rgb 0034  
         color_processor_easy@b 000F           color_processor_easy@g 000D           color_processor_easy@l 0009  
         color_processor_easy@r 000B            __end_of_motor_action 0A82                    ?_Timer0_init 0001  
                     __pintcode 0008                        ?___awdiv 0007                        ?___flmul 000F  
                    right_135@i 0020                      right_90@mL 001A                      right_90@mR 001C  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_left_90 001A  
                      ?_forward 001A               _I2C_2_Master_Idle 1DDC           ?_color_processor_easy 0001  
         ?_color_processor_hard 0034                main@RGB_recorded 018C               _I2C_2_Master_Init 1DB2  
             _I2C_2_Master_Read 1D42               _I2C_2_Master_Stop 1EB4                    _RxBufReadCnt 0054  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011           _color_read_Luminosity 1C10              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                  ___wmul@product 0005             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                       _on_period 0050                        _LATGbits 000F7F  
                      _LATHbits 000F80                       _right_135 17B0                        _IPR0bits 000E1F  
                      _IPR2bits 000E21                        _PIE0bits 000E29                        _PIE2bits 000E2B  
                    spin_180@mL 001A                      spin_180@mR 001C                        i2u162_40 001A  
                      i2u162_41 0016                        i2u163_40 0028                        i2u163_41 0024  
                      _PIR0bits 000E33                        _PIR2bits 000E35                        _PIR4bits 000E37  
              ?_initDCmotorsPWM 0001                        _SSP2CON2 000EDA                        _SSP2STAT 000ED8  
             _reverse_onesquare 1852       __end_of_I2C_2_Master_Idle 1E04              ?_reverse_onesquare 001A  
     __end_of_I2C_2_Master_Init 1DDC       __end_of_I2C_2_Master_Read 1D84               ___wmul@multiplier 0001  
             reverse_fromcard@i 0020       __end_of_I2C_2_Master_Stop 1EBE                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002                       left_135@i 0020                       left_90@mL 001A  
                     left_90@mR 001C            main@color_calibrated 0100               ??_color_read_Blue 0007  
                  _TxBufReadCnt 0052             ??_reverse_onesquare 001E       main@upperbound_calibrated 017E  
                  ??_color_read 000E   __end_of_I2C_2_Master_RepStart 1EB4              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 1080                      ?_right_135 001A                    ??_initUSART4 0001  
                      __Hrparam 0000                        __Lrparam 0000       __end_of_reverse_onesquare 18F4  
                     forward@mL 001A                       forward@mR 001C              __end_of_color_read 15C6  
                    _ANSELDbits 000EA7          ??_color_processor_easy 0005          ??_color_processor_hard 0038  
                    _ANSELFbits 000EB4                        ___xxtofl 1080                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6          ?_color_read_Luminosity 0005              __end_of_initUSART4 1E88  
                      __ptext10 1996                        __ptext11 0EAC                        __ptext20 1CB0  
                      __ptext12 1E04                        __ptext21 1EAA                        __ptext13 145C  
                      __ptext30 1E9E                        __ptext22 1D42                        __ptext14 1E6A  
                      __ptext31 1EB4                        __ptext23 1EC8                        __ptext15 1D00  
                      __ptext32 1EBE                        __ptext24 1080                        __ptext16 1520  
                      __ptext33 1DDC                        __ptext25 0A82                        __ptext17 1BC0  
                      __ptext34 1DB2                        __ptext26 1358                        __ptext18 1C10  
                      __ptext35 1E4A                        __ptext27 1234                        __ptext19 1C60  
                      __ptext36 1E88                        __ptext28 1B66                        __ptext29 1E2A  
                     right_90@i 0020                        _left_135 18F4                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA                        _right_90 15C6               ?_reverse_fromcard 001A  
                     spin_180@i 0020                        _spin_180 170E                        isa$xinst 000000  
            ??_reverse_fromcard 001E                      _RC4STAbits 000EE7                        int$flags 0056  
                 motor_action@l 0024                   motor_action@r 0026                        left_90@i 0020  
               main@time_return 0182                      _INTCONbits 000FF2                    _motor_action 060C  
                      forward@i 0020                     _setMotorPWM 0EAC                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                     ??_right_135 001E  
              _color_click_init 1B66                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                    _TX4STAbits 000EE8  
