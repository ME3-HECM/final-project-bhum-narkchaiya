

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 01:42:18 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.35
    54                           ; Generated 05/05/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _TX4REG	set	3812
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _LATGbits	set	3967
    92   000000                     _LATEbits	set	3965
    93   000000                     _TRISGbits	set	3975
    94   000000                     _TRISEbits	set	3973
    95   000000                     _LATFbits	set	3966
    96   000000                     _TRISFbits	set	3974
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _ANSELFbits	set	3764
   103   000000                     _LATDbits	set	3964
   104   000000                     _LATHbits	set	3968
   105   000000                     _TRISDbits	set	3972
   106   000000                     _TRISHbits	set	3976
   107   000000                     _PORTFbits	set	3982
   108   000000                     _TRISCbits	set	3971
   109   000000                     _SSP2BUF	set	3797
   110   000000                     _SSP2ADD	set	3798
   111   000000                     _SSP2CON1bits	set	3801
   112   000000                     _RC4REG	set	3811
   113   000000                     _SP4BRGL	set	3813
   114   000000                     _TX4STAbits	set	3816
   115   000000                     _BAUD4CONbits	set	3817
   116   000000                     _LATCbits	set	3963
   117   000000                     _SSP2CON2	set	3802
   118   000000                     _SSP2STAT	set	3800
   119   000000                     _PIE0bits	set	3625
   120   000000                     _RC7PPS	set	3689
   121   000000                     _RD5PPS	set	3695
   122   000000                     _RE2PPS	set	3700
   123   000000                     _RD6PPS	set	3696
   124   000000                     _PWM7DCH	set	4000
   125   000000                     _PWM6DCH	set	4003
   126   000000                     _T2PR	set	4028
   127   000000                     _T2CONbits	set	4029
   128   000000                     _TMR0L	set	4051
   129   000000                     _TMR0H	set	4052
   130   000000                     _T0CON0bits	set	4053
   131   000000                     _T0CON1bits	set	4054
   132   000000                     _INTCONbits	set	4082
   133   000000                     _T2CLKCONbits	set	4031
   134   000000                     _T2HLTbits	set	4030
   135   000000                     _PWM6CONbits	set	4004
   136   000000                     _PWM7CONbits	set	4001
   137   000000                     _PIR0bits	set	3635
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140                           
   141                           	psect	smallconst
   142   000E00                     __psmallconst:
   143                           	callstack 0
   144   000E00  00                 	db	0
   145   000E01                     STR_1:
   146   000E01  25                 	db	37
   147   000E02  64                 	db	100	;'d'
   148   000E03  20                 	db	32
   149   000E04  25                 	db	37
   150   000E05  64                 	db	100	;'d'
   151   000E06  20                 	db	32
   152   000E07  25                 	db	37
   153   000E08  64                 	db	100	;'d'
   154   000E09  20                 	db	32
   155   000E0A  25                 	db	37
   156   000E0B  64                 	db	100	;'d'
   157   000E0C  20                 	db	32
   158   000E0D  0D                 	db	13
   159   000E0E  0A                 	db	10
   160   000E0F  00                 	db	0
   161   000E10  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   001CDE                     __pcinit:
   167                           	callstack 0
   168   001CDE                     start_initialization:
   169                           	callstack 0
   170   001CDE                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to BANK1 (80 bytes)
   174   001CDE  EE01  F000         	lfsr	0,__pbssBANK1
   175   001CE2  0E50               	movlw	80
   176   001CE4                     clear_0:
   177   001CE4  6AEE               	clrf	postinc0,c
   178   001CE6  06E8               	decf	wreg,f,c
   179   001CE8  E1FD               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK0 (43 bytes)
   182   001CEA  EE00  F0C5         	lfsr	0,__pbssBANK0
   183   001CEE  0E2B               	movlw	43
   184   001CF0                     clear_1:
   185   001CF0  6AEE               	clrf	postinc0,c
   186   001CF2  06E8               	decf	wreg,f,c
   187   001CF4  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to COMRAM (2 bytes)
   190   001CF6  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   191   001CF8  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   192   001CFA                     end_of_initialization:
   193                           	callstack 0
   194   001CFA                     __end_of__initialization:
   195                           	callstack 0
   196   001CFA  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197   001CFC  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198   001CFE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   199   001D00  6EF8               	movwf	tblptru,c
   200   001D02  0E0E               	movlw	high __Lsmallconst
   201   001D04  6EF7               	movwf	tblptrh,c
   202   001D06  0100               	movlb	0
   203   001D08  EF47  F008         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMRAM
   206   00005B                     __pbssCOMRAM:
   207                           	callstack 0
   208   00005B                     _RxBufReadCnt:
   209                           	callstack 0
   210   00005B                     	ds	1
   211   00005C                     _RxBufWriteCnt:
   212                           	callstack 0
   213   00005C                     	ds	1
   214                           
   215                           	psect	bssBANK0
   216   0000C5                     __pbssBANK0:
   217                           	callstack 0
   218   0000C5                     _width:
   219                           	callstack 0
   220   0000C5                     	ds	2
   221   0000C7                     _prec:
   222                           	callstack 0
   223   0000C7                     	ds	2
   224   0000C9                     _off_period:
   225                           	callstack 0
   226   0000C9                     	ds	2
   227   0000CB                     _on_period:
   228                           	callstack 0
   229   0000CB                     	ds	2
   230   0000CD                     _flags:
   231                           	callstack 0
   232   0000CD                     	ds	1
   233   0000CE                     _TxBufReadCnt:
   234                           	callstack 0
   235   0000CE                     	ds	1
   236   0000CF                     _TxBufWriteCnt:
   237                           	callstack 0
   238   0000CF                     	ds	1
   239   0000D0                     _dbuf:
   240                           	callstack 0
   241   0000D0                     	ds	32
   242                           
   243                           	psect	bssBANK1
   244   000100                     __pbssBANK1:
   245                           	callstack 0
   246   000100                     _EUSART4TXbuf:
   247                           	callstack 0
   248   000100                     	ds	60
   249   00013C                     _EUSART4RXbuf:
   250                           	callstack 0
   251   00013C                     	ds	20
   252                           
   253                           	psect	cstackBANK0
   254   000060                     __pcstackBANK0:
   255                           	callstack 0
   256   000060                     ?_sprintf:
   257                           	callstack 0
   258   000060                     sprintf@s:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x0
   262   000060                     	ds	2
   263   000062                     sprintf@fmt:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x2
   267   000062                     	ds	10
   268   00006C                     sprintf@ap:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0xC
   272   00006C                     	ds	2
   273   00006E                     sprintf@f:
   274                           	callstack 0
   275                           
   276                           ; 11 bytes @ 0xE
   277   00006E                     	ds	11
   278   000079                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x19
   281   000079                     	ds	2
   282   00007B                     main@readout:
   283                           	callstack 0
   284                           
   285                           ; 50 bytes @ 0x1B
   286   00007B                     	ds	50
   287   0000AD                     main@color_flag:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x4D
   291   0000AD                     	ds	2
   292   0000AF                     main@color_name:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x4F
   296   0000AF                     	ds	2
   297   0000B1                     main@home:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x51
   301   0000B1                     	ds	2
   302   0000B3                     main@j:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x53
   306   0000B3                     	ds	2
   307   0000B5                     main@RGB_recorded:
   308                           	callstack 0
   309                           
   310                           ; 8 bytes @ 0x55
   311   0000B5                     	ds	8
   312   0000BD                     main@RGB_calibrated:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0x5D
   316   0000BD                     	ds	8
   317                           
   318                           	psect	cstackCOMRAM
   319   000001                     __pcstackCOMRAM:
   320                           	callstack 0
   321   000001                     write16bitTMR0val@tmp:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x0
   325   000001                     	ds	2
   326   000003                     ??_I2C_2_Master_Idle:
   327   000003                     ?_color_processor_easy:
   328                           	callstack 0
   329   000003                     ?___aodiv:
   330                           	callstack 0
   331   000003                     ?___aomod:
   332                           	callstack 0
   333   000003                     sendCharSerial4@charToSend:
   334                           	callstack 0
   335   000003                     color_processor_easy@rgb:
   336                           	callstack 0
   337   000003                     initDCmotorsPWM@PWMperiod:
   338                           	callstack 0
   339   000003                     fputc@c:
   340                           	callstack 0
   341   000003                     ___aodiv@dividend:
   342                           	callstack 0
   343   000003                     ___aomod@dividend:
   344                           	callstack 0
   345                           
   346                           ; 8 bytes @ 0x2
   347   000003                     	ds	1
   348   000004                     ??_I2C_2_Master_Read:
   349   000004                     I2C_2_Master_Write@data_byte:
   350                           	callstack 0
   351   000004                     sendStringSerial4@string:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x3
   355   000004                     	ds	1
   356   000005                     color_writetoaddr@value:
   357                           	callstack 0
   358   000005                     I2C_2_Master_Read@ack:
   359                           	callstack 0
   360   000005                     color_processor_easy@color:
   361                           	callstack 0
   362   000005                     fputc@fp:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x4
   366   000005                     	ds	1
   367   000006                     color_writetoaddr@address:
   368                           	callstack 0
   369   000006                     I2C_2_Master_Read@tmp:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x5
   373   000006                     	ds	1
   374   000007                     ??_fputc:
   375   000007                     ??_color_click_init:
   376   000007                     ?_color_read_Luminosity:
   377                           	callstack 0
   378   000007                     ?_color_read_Red:
   379                           	callstack 0
   380   000007                     ?_color_read_Green:
   381                           	callstack 0
   382   000007                     ?_color_read_Blue:
   383                           	callstack 0
   384   000007                     color_processor_easy@c:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x6
   388   000007                     	ds	2
   389   000009                     ??_color_read_Luminosity:
   390   000009                     ??_color_read_Red:
   391   000009                     ??_color_read_Green:
   392   000009                     ??_color_read_Blue:
   393   000009                     color_processor_easy@a:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x8
   397   000009                     	ds	2
   398   00000B                     color_processor_easy@b:
   399                           	callstack 0
   400   00000B                     ___aodiv@divisor:
   401                           	callstack 0
   402   00000B                     ___aomod@divisor:
   403                           	callstack 0
   404                           
   405                           ; 8 bytes @ 0xA
   406   00000B                     	ds	1
   407   00000C                     color_read_Luminosity@tmp:
   408                           	callstack 0
   409   00000C                     color_read_Red@tmp:
   410                           	callstack 0
   411   00000C                     color_read_Green@tmp:
   412                           	callstack 0
   413   00000C                     color_read_Blue@tmp:
   414                           	callstack 0
   415   00000C                     fputs@s:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xB
   419   00000C                     	ds	2
   420   00000E                     color_read@rgb:
   421                           	callstack 0
   422   00000E                     fputs@fp:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xD
   426   00000E                     	ds	2
   427   000010                     ??_color_read:
   428   000010                     fputs@c:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0xF
   432   000010                     	ds	1
   433   000011                     fputs@i:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x10
   437   000011                     	ds	2
   438   000013                     ___aodiv@counter:
   439                           	callstack 0
   440   000013                     ___aomod@counter:
   441                           	callstack 0
   442   000013                     pad@fp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x12
   446   000013                     	ds	1
   447   000014                     ___aodiv@sign:
   448                           	callstack 0
   449   000014                     ___aomod@sign:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x13
   453   000014                     	ds	1
   454   000015                     ?_abs:
   455                           	callstack 0
   456   000015                     pad@buf:
   457                           	callstack 0
   458   000015                     abs@a:
   459                           	callstack 0
   460   000015                     ___aodiv@quotient:
   461                           	callstack 0
   462                           
   463                           ; 8 bytes @ 0x14
   464   000015                     	ds	2
   465   000017                     ??_abs:
   466   000017                     pad@p:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x16
   470   000017                     	ds	2
   471   000019                     ??_pad:
   472                           
   473                           ; 1 bytes @ 0x18
   474   000019                     	ds	1
   475   00001A                     pad@i:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x19
   479   00001A                     	ds	2
   480   00001C                     pad@w:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x1B
   484   00001C                     	ds	2
   485   00001E                     dtoa@fp:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x1D
   489   00001E                     	ds	2
   490   000020                     dtoa@d:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x1F
   494   000020                     	ds	8
   495   000028                     ??_dtoa:
   496                           
   497                           ; 1 bytes @ 0x27
   498   000028                     	ds	8
   499   000030                     _dtoa$2118:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x2F
   503   000030                     	ds	2
   504   000032                     dtoa@p:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x31
   508   000032                     	ds	2
   509   000034                     dtoa@w:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x33
   513   000034                     	ds	2
   514   000036                     dtoa@n:
   515                           	callstack 0
   516                           
   517                           ; 8 bytes @ 0x35
   518   000036                     	ds	8
   519   00003E                     dtoa@i:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x3D
   523   00003E                     	ds	2
   524   000040                     dtoa@s:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x3F
   528   000040                     	ds	1
   529   000041                     vfpfcnvrt@fp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x40
   533   000041                     	ds	2
   534   000043                     vfpfcnvrt@fmt:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x42
   538   000043                     	ds	2
   539   000045                     vfpfcnvrt@ap:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x44
   543   000045                     	ds	2
   544   000047                     ??_vfpfcnvrt:
   545                           
   546                           ; 1 bytes @ 0x46
   547   000047                     	ds	2
   548   000049                     vfpfcnvrt@convarg:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x48
   552   000049                     	ds	8
   553   000051                     vfpfcnvrt@cp:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x50
   557   000051                     	ds	2
   558   000053                     ?_vfprintf:
   559                           	callstack 0
   560   000053                     vfprintf@fp:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x52
   564   000053                     	ds	2
   565   000055                     vfprintf@fmt:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x54
   569   000055                     	ds	2
   570   000057                     vfprintf@ap:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x56
   574   000057                     	ds	2
   575   000059                     vfprintf@cfmt:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x58
   579   000059                     	ds	2
   580   00005B                     
   581                           ; 1 bytes @ 0x5A
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 20 in file "../main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  j               2   83[BANK0 ] int 
   592 ;;  i_storage       2    0        int 
   593 ;;  readout        50   27[BANK0 ] unsigned char [50]
   594 ;;  color_calibr   48    0        unsigned int [24]
   595 ;;  time_storage   30    0        unsigned int [15]
   596 ;;  color_storag   30    0        unsigned int [15]
   597 ;;  RGB_calibrat    8   93[BANK0 ] struct RGB_val
   598 ;;  RGB_recorded    8   85[BANK0 ] struct RGB_val
   599 ;;  home            2   81[BANK0 ] unsigned int 
   600 ;;  color_name      2   79[BANK0 ] unsigned int 
   601 ;;  color_flag      2   77[BANK0 ] unsigned int 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   612 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   614 ;;      Totals:         0      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   615 ;;Total ram usage:       76 bytes
   616 ;; Hardware stack levels required when called: 10
   617 ;; This function calls:
   618 ;;		_I2C_2_Master_Init
   619 ;;		_Interrupts_init
   620 ;;		_Timer0_init
   621 ;;		_color_click_init
   622 ;;		_color_processor_easy
   623 ;;		_color_read
   624 ;;		_initDCmotorsPWM
   625 ;;		_initUSART4
   626 ;;		_sendStringSerial4
   627 ;;		_sprintf
   628 ;; This function is called by:
   629 ;;		Startup code after reset
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text0
   634   00108E                     __ptext0:
   635                           	callstack 0
   636   00108E                     _main:
   637                           	callstack 21
   638   00108E                     
   639                           ;../main.c: 22:     color_click_init();
   640   00108E  ECB4  F00C         	call	_color_click_init	;wreg free
   641   001092                     
   642                           ;../main.c: 23:     initDCmotorsPWM(20);
   643   001092  0E00               	movlw	0
   644   001094  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   645   001096  0E14               	movlw	20
   646   001098  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
   647   00109A  ECD1  F00D         	call	_initDCmotorsPWM	;wreg free
   648   00109E                     
   649                           ;../main.c: 24:     Interrupts_init();
   650   00109E  ECF0  F00E         	call	_Interrupts_init	;wreg free
   651   0010A2                     
   652                           ;../main.c: 25:     Timer0_init();
   653   0010A2  ECBF  F00E         	call	_Timer0_init	;wreg free
   654   0010A6                     
   655                           ;../main.c: 26:     I2C_2_Master_Init();
   656   0010A6  EC86  F00E         	call	_I2C_2_Master_Init	;wreg free
   657   0010AA                     
   658                           ;../main.c: 27:     initUSART4();
   659   0010AA  ECCF  F00E         	call	_initUSART4	;wreg free
   660   0010AE                     
   661                           ;../main.c: 30:     unsigned int color_flag;;../main.c: 31:     unsigned int color_name;
      +                          ;../main.c: 32:     unsigned int color_storage[15];;../main.c: 33:     unsigned int time
      +                          _storage[15];;../main.c: 34:     unsigned int home = 0;
   662   0010AE  0E00               	movlw	0
   663   0010B0  0100               	movlb	0	; () banked
   664   0010B2  6FB2               	movwf	(main@home+1)& (0+255),b
   665   0010B4  0E00               	movlw	0
   666   0010B6  6FB1               	movwf	main@home& (0+255),b
   667   0010B8                     
   668                           ; BSR set to: 0
   669                           ;../main.c: 35:     struct RGB_val RGB_calibrated;;../main.c: 36:     struct RGB_val RGB
      +                          _recorded;;../main.c: 39:     unsigned int color_calibrated[24];;../main.c: 42:     colo
      +                          r_read(&RGB_calibrated);
   670   0010B8  0EBD               	movlw	low main@RGB_calibrated
   671   0010BA  6E0E               	movwf	color_read@rgb^0,c
   672   0010BC  0E00               	movlw	high main@RGB_calibrated
   673   0010BE  6E0F               	movwf	(color_read@rgb+1)^0,c
   674   0010C0  EC24  F00C         	call	_color_read	;wreg free
   675   0010C4                     
   676                           ;../main.c: 43:     char readout[50];;../main.c: 44:     sprintf(readout,"%d %d %d %d \r
      +                          \n", RGB_calibrated.L,RGB_calibrated.R,RGB_calibrated.G,RGB_calibrated.B);
   677   0010C4  0E7B               	movlw	low main@readout
   678   0010C6  0100               	movlb	0	; () banked
   679   0010C8  6F60               	movwf	sprintf@s& (0+255),b
   680   0010CA  0E00               	movlw	high main@readout
   681   0010CC  6F61               	movwf	(sprintf@s+1)& (0+255),b
   682   0010CE  0E01               	movlw	low STR_1
   683   0010D0  6F62               	movwf	sprintf@fmt& (0+255),b
   684   0010D2  0E0E               	movlw	high STR_1
   685   0010D4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   686   0010D6  C0BD  F064         	movff	main@RGB_calibrated,?_sprintf+4
   687   0010DA  C0BE  F065         	movff	main@RGB_calibrated+1,?_sprintf+5
   688   0010DE  C0BF  F066         	movff	main@RGB_calibrated+2,?_sprintf+6
   689   0010E2  C0C0  F067         	movff	main@RGB_calibrated+3,?_sprintf+7
   690   0010E6  C0C1  F068         	movff	main@RGB_calibrated+4,?_sprintf+8
   691   0010EA  C0C2  F069         	movff	main@RGB_calibrated+5,?_sprintf+9
   692   0010EE  C0C3  F06A         	movff	main@RGB_calibrated+6,?_sprintf+10
   693   0010F2  C0C4  F06B         	movff	main@RGB_calibrated+7,?_sprintf+11
   694   0010F6  ECE1  F00C         	call	_sprintf	;wreg free
   695   0010FA                     
   696                           ;../main.c: 45:     sendStringSerial4(readout);
   697   0010FA  0E7B               	movlw	low main@readout
   698   0010FC  6E04               	movwf	sendStringSerial4@string^0,c
   699   0010FE  0E00               	movlw	high main@readout
   700   001100  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   701   001102  EC57  F00E         	call	_sendStringSerial4	;wreg free
   702   001106                     l2204:
   703   001106  0E01               	movlw	1
   704   001108  A68E               	btfss	142,3,c	;volatile
   705   00110A  0E00               	movlw	0
   706   00110C  A48E               	btfss	142,2,c	;volatile
   707   00110E  0E00               	movlw	0
   708   001110  B0E8               	btfsc	wreg,0,c
   709   001112  EF8D  F008         	goto	u1321
   710   001116  EF92  F008         	goto	u1320
   711   00111A                     u1321:
   712   00111A  0100               	movlb	0	; () banked
   713   00111C  6B79               	clrf	??_main& (0+255),b
   714   00111E  2B79               	incf	??_main& (0+255),f,b
   715   001120  EF94  F008         	goto	u1328
   716   001124                     u1320:
   717   001124  0100               	movlb	0	; () banked
   718   001126  6B79               	clrf	??_main& (0+255),b
   719   001128                     u1328:
   720   001128  5179               	movf	??_main& (0+255),w,b
   721   00112A  A4D8               	btfss	status,2,c
   722   00112C  EF9A  F008         	goto	u1331
   723   001130  EF9C  F008         	goto	u1330
   724   001134                     u1331:
   725   001134  EF83  F008         	goto	l2204
   726   001138                     u1330:
   727   001138                     
   728                           ; BSR set to: 0
   729                           ;../main.c: 57:         if (!PORTFbits.RF2){LATDbits.LATD7 = !LATDbits.LATD7;}
   730   001138  B48E               	btfsc	142,2,c	;volatile
   731   00113A  EFA1  F008         	goto	u1341
   732   00113E  EFA3  F008         	goto	u1340
   733   001142                     u1341:
   734   001142  EFB7  F008         	goto	l166
   735   001146                     u1340:
   736   001146                     
   737                           ; BSR set to: 0
   738   001146  AE7C               	btfss	124,7,c	;volatile
   739   001148  EFA8  F008         	goto	u1351
   740   00114C  EFAC  F008         	goto	u1350
   741   001150                     u1351:
   742   001150  6B79               	clrf	??_main& (0+255),b
   743   001152  2B79               	incf	??_main& (0+255),f,b
   744   001154  EFAE  F008         	goto	u1368
   745   001158                     u1350:
   746   001158  0100               	movlb	0	; () banked
   747   00115A  6B79               	clrf	??_main& (0+255),b
   748   00115C                     u1368:
   749   00115C  3379               	rrcf	??_main& (0+255),f,b
   750   00115E  3379               	rrcf	??_main& (0+255),f,b
   751   001160  507C               	movf	124,w,c	;volatile
   752   001162  1979               	xorwf	??_main& (0+255),w,b
   753   001164  0B7F               	andlw	-129
   754   001166  1979               	xorwf	??_main& (0+255),w,b
   755   001168  6E7C               	movwf	124,c	;volatile
   756   00116A  EF21  F009         	goto	l2222
   757   00116E                     l166:
   758                           
   759                           ; BSR set to: 0
   760   00116E  B68E               	btfsc	142,3,c	;volatile
   761   001170  EFBC  F008         	goto	u1371
   762   001174  EFBE  F008         	goto	u1370
   763   001178                     u1371:
   764   001178  EF21  F009         	goto	l2222
   765   00117C                     u1370:
   766   00117C                     
   767                           ; BSR set to: 0
   768   00117C  A680               	btfss	128,3,c	;volatile
   769   00117E  EFC3  F008         	goto	u1381
   770   001182  EFC7  F008         	goto	u1380
   771   001186                     u1381:
   772   001186  6B79               	clrf	??_main& (0+255),b
   773   001188  2B79               	incf	??_main& (0+255),f,b
   774   00118A  EFC9  F008         	goto	u1398
   775   00118E                     u1380:
   776   00118E  0100               	movlb	0	; () banked
   777   001190  6B79               	clrf	??_main& (0+255),b
   778   001192                     u1398:
   779   001192  4779               	rlncf	??_main& (0+255),f,b
   780   001194  4779               	rlncf	??_main& (0+255),f,b
   781   001196  4779               	rlncf	??_main& (0+255),f,b
   782   001198  5080               	movf	128,w,c	;volatile
   783   00119A  1979               	xorwf	??_main& (0+255),w,b
   784   00119C  0BF7               	andlw	-9
   785   00119E  1979               	xorwf	??_main& (0+255),w,b
   786   0011A0  6E80               	movwf	128,c	;volatile
   787   0011A2  EF21  F009         	goto	l2222
   788   0011A6                     l170:
   789                           
   790                           ; BSR set to: 0
   791                           ;../main.c: 63:             if (LATDbits.LATD7){
   792   0011A6  AE7C               	btfss	124,7,c	;volatile
   793   0011A8  EFD8  F008         	goto	u1401
   794   0011AC  EFDA  F008         	goto	u1400
   795   0011B0                     u1401:
   796   0011B0  EF08  F009         	goto	l171
   797   0011B4                     u1400:
   798   0011B4                     
   799                           ; BSR set to: 0
   800                           ;../main.c: 64:                 if (color_flag){
   801   0011B4  51AD               	movf	main@color_flag& (0+255),w,b
   802   0011B6  11AE               	iorwf	(main@color_flag+1)& (0+255),w,b
   803   0011B8  B4D8               	btfsc	status,2,c
   804   0011BA  EFE1  F008         	goto	u1411
   805   0011BE  EFE3  F008         	goto	u1410
   806   0011C2                     u1411:
   807   0011C2  EF15  F009         	goto	l2220
   808   0011C6                     u1410:
   809   0011C6                     
   810                           ; BSR set to: 0
   811                           ;../main.c: 65:                     color_read(&RGB_recorded);
   812   0011C6  0EB5               	movlw	low main@RGB_recorded
   813   0011C8  6E0E               	movwf	color_read@rgb^0,c
   814   0011CA  0E00               	movlw	high main@RGB_recorded
   815   0011CC  6E0F               	movwf	(color_read@rgb+1)^0,c
   816   0011CE  EC24  F00C         	call	_color_read	;wreg free
   817                           
   818                           ;../main.c: 66:                     color_name = color_processor_easy(&RGB_recorded);
   819   0011D2  0EB5               	movlw	low main@RGB_recorded
   820   0011D4  6E03               	movwf	color_processor_easy@rgb^0,c
   821   0011D6  0E00               	movlw	high main@RGB_recorded
   822   0011D8  6E04               	movwf	(color_processor_easy@rgb+1)^0,c
   823   0011DA  ECC5  F00B         	call	_color_processor_easy	;wreg free
   824   0011DE  C003  F0AF         	movff	?_color_processor_easy,main@color_name
   825   0011E2  C004  F0B0         	movff	?_color_processor_easy+1,main@color_name+1
   826   0011E6                     
   827                           ;../main.c: 72:                     if (color_name != 8) {
   828   0011E6  0E08               	movlw	8
   829   0011E8  0100               	movlb	0	; () banked
   830   0011EA  19AF               	xorwf	main@color_name& (0+255),w,b
   831   0011EC  11B0               	iorwf	(main@color_name+1)& (0+255),w,b
   832   0011EE  B4D8               	btfsc	status,2,c
   833   0011F0  EFFC  F008         	goto	u1421
   834   0011F4  EFFE  F008         	goto	u1420
   835   0011F8                     u1421:
   836   0011F8  EF15  F009         	goto	l2220
   837   0011FC                     u1420:
   838   0011FC                     
   839                           ; BSR set to: 0
   840                           ;../main.c: 73:                         color_flag = 0;
   841   0011FC  0E00               	movlw	0
   842   0011FE  6FAE               	movwf	(main@color_flag+1)& (0+255),b
   843   001200  0E00               	movlw	0
   844   001202  6FAD               	movwf	main@color_flag& (0+255),b
   845                           
   846                           ;../main.c: 74:                         home = 1;
   847   001204  0E00               	movlw	0
   848   001206  6FB2               	movwf	(main@home+1)& (0+255),b
   849   001208  0E01               	movlw	1
   850   00120A  6FB1               	movwf	main@home& (0+255),b
   851   00120C  EF15  F009         	goto	l2220
   852   001210                     l171:
   853                           
   854                           ; BSR set to: 0
   855   001210  A680               	btfss	128,3,c	;volatile
   856   001212  EF0D  F009         	goto	u1431
   857   001216  EF0F  F009         	goto	u1430
   858   00121A                     u1431:
   859   00121A  EF15  F009         	goto	l2220
   860   00121E                     u1430:
   861   00121E                     
   862                           ; BSR set to: 0
   863                           ;../main.c: 80:                 color_read(&RGB_recorded);
   864   00121E  0EB5               	movlw	low main@RGB_recorded
   865   001220  6E0E               	movwf	color_read@rgb^0,c
   866   001222  0E00               	movlw	high main@RGB_recorded
   867   001224  6E0F               	movwf	(color_read@rgb+1)^0,c
   868   001226  EC24  F00C         	call	_color_read	;wreg free
   869   00122A                     l2220:
   870                           
   871                           ;../main.c: 82:             _delay((unsigned long)((200)*(64000000/4000.0)));
   872   00122A  0E11               	movlw	17
   873   00122C  0100               	movlb	0	; () banked
   874   00122E  6F7A               	movwf	(??_main+1)& (0+255),b
   875   001230  0E3C               	movlw	60
   876   001232  6F79               	movwf	??_main& (0+255),b
   877   001234  0ECB               	movlw	203
   878   001236                     u1467:
   879   001236  2EE8               	decfsz	wreg,f,c
   880   001238  D7FE               	bra	u1467
   881   00123A  2F79               	decfsz	??_main& (0+255),f,b
   882   00123C  D7FC               	bra	u1467
   883   00123E  2F7A               	decfsz	(??_main+1)& (0+255),f,b
   884   001240  D7FA               	bra	u1467
   885   001242                     l2222:
   886                           
   887                           ;../main.c: 62:         while (!home) {
   888   001242  0100               	movlb	0	; () banked
   889   001244  51B1               	movf	main@home& (0+255),w,b
   890   001246  11B2               	iorwf	(main@home+1)& (0+255),w,b
   891   001248  B4D8               	btfsc	status,2,c
   892   00124A  EF29  F009         	goto	u1441
   893   00124E  EF2B  F009         	goto	u1440
   894   001252                     u1441:
   895   001252  EFD3  F008         	goto	l170
   896   001256                     u1440:
   897   001256                     
   898                           ; BSR set to: 0
   899                           ;../main.c: 85:         int j;;../main.c: 86:         for (j=0;j<15;j++){
   900   001256  0E00               	movlw	0
   901   001258  6FB4               	movwf	(main@j+1)& (0+255),b
   902   00125A  0E00               	movlw	0
   903   00125C  6FB3               	movwf	main@j& (0+255),b
   904   00125E                     l2230:
   905                           
   906                           ; BSR set to: 0
   907                           ;../main.c: 88:         }
   908   00125E  4BB3               	infsnz	main@j& (0+255),f,b
   909   001260  2BB4               	incf	(main@j+1)& (0+255),f,b
   910   001262                     
   911                           ; BSR set to: 0
   912   001262  BFB4               	btfsc	(main@j+1)& (0+255),7,b
   913   001264  EF3D  F009         	goto	u1451
   914   001268  51B4               	movf	(main@j+1)& (0+255),w,b
   915   00126A  E109               	bnz	u1450
   916   00126C  0E0F               	movlw	15
   917   00126E  5DB3               	subwf	main@j& (0+255),w,b
   918   001270  A0D8               	btfss	status,0,c
   919   001272  EF3D  F009         	goto	u1451
   920   001276  EF3F  F009         	goto	u1450
   921   00127A                     u1451:
   922   00127A  EF2F  F009         	goto	l2230
   923   00127E                     u1450:
   924   00127E  EF83  F008         	goto	l2204
   925   001282  EF2A  F000         	goto	start
   926   001286                     __end_of_main:
   927                           	callstack 0
   928                           
   929 ;; *************** function _sprintf *****************
   930 ;; Defined at:
   931 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  s               2    0[BANK0 ] PTR unsigned char 
   934 ;;		 -> main@readout(50), 
   935 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   936 ;;		 -> STR_1(15), 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  f              11   14[BANK0 ] struct _IO_FILE
   939 ;;  ap              2   12[BANK0 ] PTR void [1]
   940 ;;		 -> ?_sprintf(2), 
   941 ;;  ret             2    0        int 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2    0[BANK0 ] int 
   944 ;; Registers used:
   945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   951 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;Total ram usage:       25 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 9
   958 ;; This function calls:
   959 ;;		_vfprintf
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text1
   966   0019C2                     __ptext1:
   967                           	callstack 0
   968   0019C2                     _sprintf:
   969                           	callstack 21
   970   0019C2  0E64               	movlw	low (?_sprintf+4)
   971   0019C4  0100               	movlb	0	; () banked
   972   0019C6  6F6C               	movwf	sprintf@ap& (0+255),b
   973   0019C8  0E00               	movlw	high (?_sprintf+4)
   974   0019CA  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
   975   0019CC  C060  F06E         	movff	sprintf@s,sprintf@f
   976   0019D0  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
   977   0019D4                     
   978                           ; BSR set to: 0
   979   0019D4  0E00               	movlw	0
   980   0019D6  6F72               	movwf	(sprintf@f+4)& (0+255),b
   981   0019D8  0E00               	movlw	0
   982   0019DA  6F71               	movwf	(sprintf@f+3)& (0+255),b
   983   0019DC                     
   984                           ; BSR set to: 0
   985   0019DC  0E00               	movlw	0
   986   0019DE  6F78               	movwf	(sprintf@f+10)& (0+255),b
   987   0019E0  0E00               	movlw	0
   988   0019E2  6F77               	movwf	(sprintf@f+9)& (0+255),b
   989   0019E4                     
   990                           ; BSR set to: 0
   991   0019E4  0E6E               	movlw	low sprintf@f
   992   0019E6  6E53               	movwf	vfprintf@fp^0,c
   993   0019E8  0E00               	movlw	high sprintf@f
   994   0019EA  6E54               	movwf	(vfprintf@fp+1)^0,c
   995   0019EC  C062  F055         	movff	sprintf@fmt,vfprintf@fmt
   996   0019F0  C063  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
   997   0019F4  0E6C               	movlw	low sprintf@ap
   998   0019F6  6E57               	movwf	vfprintf@ap^0,c
   999   0019F8  0E00               	movlw	high sprintf@ap
  1000   0019FA  6E58               	movwf	(vfprintf@ap+1)^0,c
  1001   0019FC  ECAA  F00D         	call	_vfprintf	;wreg free
  1002   001A00  0100               	movlb	0	; () banked
  1003   001A02  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1004   001A04  2560               	addwf	sprintf@s& (0+255),w,b
  1005   001A06  6ED9               	movwf	fsr2l,c
  1006   001A08  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1007   001A0A  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1008   001A0C  6EDA               	movwf	fsr2h,c
  1009   001A0E  0E00               	movlw	0
  1010   001A10  6EDF               	movwf	indf2,c
  1011   001A12                     
  1012                           ; BSR set to: 0
  1013   001A12  0012               	return		;funcret
  1014   001A14                     __end_of_sprintf:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _vfprintf *****************
  1018 ;; Defined at:
  1019 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1022 ;;		 -> sprintf@f(11), 
  1023 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1024 ;;		 -> STR_1(15), 
  1025 ;;  ap              2   86[COMRAM] PTR PTR void 
  1026 ;;		 -> sprintf@ap(2), 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1029 ;;		 -> STR_1(15), 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2   82[COMRAM] int 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1039 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1043 ;;Total ram usage:        8 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 8
  1046 ;; This function calls:
  1047 ;;		_vfpfcnvrt
  1048 ;; This function is called by:
  1049 ;;		_sprintf
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text2
  1054   001B54                     __ptext2:
  1055                           	callstack 0
  1056   001B54                     _vfprintf:
  1057                           	callstack 21
  1058   001B54                     
  1059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1060   001B54  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1061   001B58  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1062                           
  1063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1064   001B5C  EFBE  F00D         	goto	l1970
  1065   001B60                     l1968:
  1066                           
  1067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1068   001B60  C053  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1069   001B64  C054  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1070   001B68  0E59               	movlw	low vfprintf@cfmt
  1071   001B6A  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1072   001B6C  0E00               	movlw	high vfprintf@cfmt
  1073   001B6E  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1074   001B70  C057  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1075   001B74  C058  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1076   001B78  ECB9  F00A         	call	_vfpfcnvrt	;wreg free
  1077   001B7C                     l1970:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1080   001B7C  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1081   001B80  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1082   001B84                     	if	0	;tblptru may be non-zero
  1083   001B84                     	endif
  1084   001B84                     	if	0	;tblptru may be non-zero
  1085   001B84                     	endif
  1086   001B84  0008               	tblrd		*
  1087   001B86  50F5               	movf	tablat,w,c
  1088   001B88  0900               	iorlw	0
  1089   001B8A  A4D8               	btfss	status,2,c
  1090   001B8C  EFCA  F00D         	goto	u1101
  1091   001B90  EFCC  F00D         	goto	u1100
  1092   001B94                     u1101:
  1093   001B94  EFB0  F00D         	goto	l1968
  1094   001B98                     u1100:
  1095   001B98                     
  1096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1097   001B98  0E00               	movlw	0
  1098   001B9A  6E54               	movwf	(?_vfprintf+1)^0,c
  1099   001B9C  0E00               	movlw	0
  1100   001B9E  6E53               	movwf	?_vfprintf^0,c
  1101   001BA0  0012               	return		;funcret
  1102   001BA2                     __end_of_vfprintf:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _vfpfcnvrt *****************
  1106 ;; Defined at:
  1107 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1110 ;;		 -> sprintf@f(11), 
  1111 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1112 ;;		 -> vfprintf@cfmt(2), 
  1113 ;;  ap              2   68[COMRAM] PTR PTR void 
  1114 ;;		 -> sprintf@ap(2), 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  convarg         8   72[COMRAM] struct .
  1117 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1118 ;;		 -> STR_1(15), 
  1119 ;;  i               2    0        int 
  1120 ;;  done            2    0        int 
  1121 ;;  c               1    0        unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;Total ram usage:       18 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 7
  1138 ;; This function calls:
  1139 ;;		_dtoa
  1140 ;;		_fputc
  1141 ;; This function is called by:
  1142 ;;		_vfprintf
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text3
  1147   001572                     __ptext3:
  1148                           	callstack 0
  1149   001572                     _vfpfcnvrt:
  1150                           	callstack 21
  1151   001572                     
  1152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1153   001572  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1154   001576  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1155   00157A  CFDE FFF6          	movff	postinc2,tblptrl
  1156   00157E  CFDD FFF7          	movff	postdec2,tblptrh
  1157   001582                     	if	0	;tblptru may be non-zero
  1158   001582                     	endif
  1159   001582                     	if	0	;tblptru may be non-zero
  1160   001582                     	endif
  1161   001582  0008               	tblrd		*
  1162   001584  50F5               	movf	tablat,w,c
  1163   001586  0A25               	xorlw	37
  1164   001588  A4D8               	btfss	status,2,c
  1165   00158A  EFC9  F00A         	goto	u1061
  1166   00158E  EFCB  F00A         	goto	u1060
  1167   001592                     u1061:
  1168   001592  EF4B  F00B         	goto	l1918
  1169   001596                     u1060:
  1170   001596                     
  1171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1172   001596  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1173   00159A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1174   00159E  2ADE               	incf	postinc2,f,c
  1175   0015A0  0E00               	movlw	0
  1176   0015A2  22DD               	addwfc	postdec2,f,c
  1177   0015A4                     
  1178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1179   0015A4  0E00               	movlw	0
  1180   0015A6  0100               	movlb	0	; () banked
  1181   0015A8  6FC6               	movwf	(_width+1)& (0+255),b
  1182   0015AA  0E00               	movlw	0
  1183   0015AC  6FC5               	movwf	_width& (0+255),b
  1184   0015AE  C0C5  F0CD         	movff	_width,_flags
  1185   0015B2                     
  1186                           ; BSR set to: 0
  1187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1188   0015B2  69C7               	setf	_prec& (0+255),b
  1189   0015B4  69C8               	setf	(_prec+1)& (0+255),b
  1190   0015B6                     
  1191                           ; BSR set to: 0
  1192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1193   0015B6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1194   0015BA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1195   0015BE  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1196   0015C2  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1197   0015C6                     
  1198                           ; BSR set to: 0
  1199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1200   0015C6  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1201   0015CA  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1202   0015CE                     	if	0	;tblptru may be non-zero
  1203   0015CE                     	endif
  1204   0015CE                     	if	0	;tblptru may be non-zero
  1205   0015CE                     	endif
  1206   0015CE  0008               	tblrd		*
  1207   0015D0  50F5               	movf	tablat,w,c
  1208   0015D2  0A64               	xorlw	100
  1209   0015D4  B4D8               	btfsc	status,2,c
  1210   0015D6  EFEF  F00A         	goto	u1071
  1211   0015DA  EFF1  F00A         	goto	u1070
  1212   0015DE                     u1071:
  1213   0015DE  EFFF  F00A         	goto	l1908
  1214   0015E2                     u1070:
  1215   0015E2                     
  1216                           ; BSR set to: 0
  1217   0015E2  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1218   0015E6  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1219   0015EA                     	if	0	;tblptru may be non-zero
  1220   0015EA                     	endif
  1221   0015EA                     	if	0	;tblptru may be non-zero
  1222   0015EA                     	endif
  1223   0015EA  0008               	tblrd		*
  1224   0015EC  50F5               	movf	tablat,w,c
  1225   0015EE  0A69               	xorlw	105
  1226   0015F0  A4D8               	btfss	status,2,c
  1227   0015F2  EFFD  F00A         	goto	u1081
  1228   0015F6  EFFF  F00A         	goto	u1080
  1229   0015FA                     u1081:
  1230   0015FA  EF42  F00B         	goto	l1914
  1231   0015FE                     u1080:
  1232   0015FE                     l1908:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1236   0015FE  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1237   001602  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1238   001606  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1239   00160A  0E02               	movlw	2
  1240   00160C  26DE               	addwf	postinc2,f,c
  1241   00160E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1242   001612  0E00               	movlw	0
  1243   001614  22DD               	addwfc	postdec2,f,c
  1244   001616  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1245   00161A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1246   00161E  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1247   001622  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1248   001626  0E00               	movlw	0
  1249   001628  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1250   00162A  0EFF               	movlw	-1
  1251   00162C  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1252   00162E  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1253   001630  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1254   001632  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1255   001634  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1256   001636  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1259   001638  0E01               	movlw	1
  1260   00163A  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1261   00163C  6E47               	movwf	??_vfpfcnvrt^0,c
  1262   00163E  0E00               	movlw	0
  1263   001640  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1264   001642  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1265   001644  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1266   001648  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1267   00164C  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1268   001650  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1269   001654                     
  1270                           ; BSR set to: 0
  1271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1272   001654  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1273   001658  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1274   00165C  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1275   001660  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1276   001664  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1277   001668  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1278   00166C  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1279   001670  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1280   001674  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1281   001678  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1282   00167C  EC09  F007         	call	_dtoa	;wreg free
  1283   001680  EF5F  F00B         	goto	l1074
  1284   001684                     l1914:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1287   001684  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1288   001688  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1289   00168C  2ADE               	incf	postinc2,f,c
  1290   00168E  0E00               	movlw	0
  1291   001690  22DD               	addwfc	postdec2,f,c
  1292   001692  EF5F  F00B         	goto	l1074
  1293   001696                     l1918:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1296   001696  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1297   00169A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1298   00169E  CFDE FFF6          	movff	postinc2,tblptrl
  1299   0016A2  CFDD FFF7          	movff	postdec2,tblptrh
  1300   0016A6                     	if	0	;tblptru may be non-zero
  1301   0016A6                     	endif
  1302   0016A6                     	if	0	;tblptru may be non-zero
  1303   0016A6                     	endif
  1304   0016A6  0008               	tblrd		*
  1305   0016A8  50F5               	movf	tablat,w,c
  1306   0016AA  6E03               	movwf	fputc@c^0,c
  1307   0016AC  6A04               	clrf	(fputc@c+1)^0,c
  1308   0016AE  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1309   0016B2  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1310   0016B6  EC60  F00B         	call	_fputc	;wreg free
  1311   0016BA  EF42  F00B         	goto	l1914
  1312   0016BE                     l1074:
  1313   0016BE  0012               	return		;funcret
  1314   0016C0                     __end_of_vfpfcnvrt:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _dtoa *****************
  1318 ;; Defined at:
  1319 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1322 ;;		 -> sprintf@f(11), 
  1323 ;;  d               8   31[COMRAM] long long 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  n               8   53[COMRAM] long long 
  1326 ;;  i               2   61[COMRAM] int 
  1327 ;;  w               2   51[COMRAM] int 
  1328 ;;  p               2   49[COMRAM] int 
  1329 ;;  s               1   63[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1339 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1340 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;Total ram usage:       35 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; Hardware stack levels required when called: 6
  1346 ;; This function calls:
  1347 ;;		___aodiv
  1348 ;;		___aomod
  1349 ;;		_abs
  1350 ;;		_pad
  1351 ;; This function is called by:
  1352 ;;		_vfpfcnvrt
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text4
  1357   000E12                     __ptext4:
  1358                           	callstack 0
  1359   000E12                     _dtoa:
  1360                           	callstack 21
  1361   000E12                     
  1362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1363   000E12  C020  F036         	movff	dtoa@d,dtoa@n
  1364   000E16  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  1365   000E1A  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  1366   000E1E  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  1367   000E22  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  1368   000E26  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  1369   000E2A  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  1370   000E2E  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  1371   000E32                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1373   000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1374   000E34  EF1E  F007         	goto	u941
  1375   000E38  EF21  F007         	goto	u940
  1376   000E3C                     u941:
  1377   000E3C  0E01               	movlw	1
  1378   000E3E  EF22  F007         	goto	u950
  1379   000E42                     u940:
  1380   000E42  0E00               	movlw	0
  1381   000E44                     u950:
  1382   000E44  6E40               	movwf	dtoa@s^0,c
  1383   000E46                     
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1385   000E46  5040               	movf	dtoa@s^0,w,c
  1386   000E48  B4D8               	btfsc	status,2,c
  1387   000E4A  EF29  F007         	goto	u961
  1388   000E4E  EF2B  F007         	goto	u960
  1389   000E52                     u961:
  1390   000E52  EF3B  F007         	goto	l1820
  1391   000E56                     u960:
  1392   000E56                     
  1393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1394   000E56  1E3D               	comf	(dtoa@n+7)^0,f,c
  1395   000E58  1E3C               	comf	(dtoa@n+6)^0,f,c
  1396   000E5A  1E3B               	comf	(dtoa@n+5)^0,f,c
  1397   000E5C  1E3A               	comf	(dtoa@n+4)^0,f,c
  1398   000E5E  1E39               	comf	(dtoa@n+3)^0,f,c
  1399   000E60  1E38               	comf	(dtoa@n+2)^0,f,c
  1400   000E62  1E37               	comf	(dtoa@n+1)^0,f,c
  1401   000E64  6C36               	negf	dtoa@n^0,c
  1402   000E66  0E00               	movlw	0
  1403   000E68  2237               	addwfc	(dtoa@n+1)^0,f,c
  1404   000E6A  2238               	addwfc	(dtoa@n+2)^0,f,c
  1405   000E6C  2239               	addwfc	(dtoa@n+3)^0,f,c
  1406   000E6E  223A               	addwfc	(dtoa@n+4)^0,f,c
  1407   000E70  223B               	addwfc	(dtoa@n+5)^0,f,c
  1408   000E72  223C               	addwfc	(dtoa@n+6)^0,f,c
  1409   000E74  223D               	addwfc	(dtoa@n+7)^0,f,c
  1410   000E76                     l1820:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1413   000E76  0100               	movlb	0	; () banked
  1414   000E78  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  1415   000E7A  EF49  F007         	goto	u970
  1416   000E7E  51C8               	movf	(_prec+1)& (0+255),w,b
  1417   000E80  E106               	bnz	u971
  1418   000E82  05C7               	decf	_prec& (0+255),w,b
  1419   000E84  B0D8               	btfsc	status,0,c
  1420   000E86  EF47  F007         	goto	u971
  1421   000E8A  EF49  F007         	goto	u970
  1422   000E8E                     u971:
  1423   000E8E  EF4F  F007         	goto	l1053
  1424   000E92                     u970:
  1425   000E92                     
  1426                           ; BSR set to: 0
  1427   000E92  0E00               	movlw	0
  1428   000E94  6E33               	movwf	(dtoa@p+1)^0,c
  1429   000E96  0E01               	movlw	1
  1430   000E98  6E32               	movwf	dtoa@p^0,c
  1431   000E9A  EF53  F007         	goto	l1055
  1432   000E9E                     l1053:
  1433                           
  1434                           ; BSR set to: 0
  1435   000E9E  C0C7  F032         	movff	_prec,dtoa@p
  1436   000EA2  C0C8  F033         	movff	_prec+1,dtoa@p+1
  1437   000EA6                     l1055:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1441   000EA6  C0C5  F034         	movff	_width,dtoa@w
  1442   000EAA  C0C6  F035         	movff	_width+1,dtoa@w+1
  1443   000EAE                     
  1444                           ; BSR set to: 0
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1446   000EAE  5040               	movf	dtoa@s^0,w,c
  1447   000EB0  B4D8               	btfsc	status,2,c
  1448   000EB2  EF5D  F007         	goto	u981
  1449   000EB6  EF5F  F007         	goto	u980
  1450   000EBA                     u981:
  1451   000EBA  EF76  F007         	goto	l1056
  1452   000EBE                     u980:
  1453   000EBE                     
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1456   000EBE  0634               	decf	dtoa@w^0,f,c
  1457   000EC0  A0D8               	btfss	status,0,c
  1458   000EC2  0635               	decf	(dtoa@w+1)^0,f,c
  1459   000EC4                     
  1460                           ; BSR set to: 0
  1461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1462   000EC4  5040               	movf	dtoa@s^0,w,c
  1463   000EC6  A4D8               	btfss	status,2,c
  1464   000EC8  EF68  F007         	goto	u991
  1465   000ECC  EF6A  F007         	goto	u990
  1466   000ED0                     u991:
  1467   000ED0  EF70  F007         	goto	l1832
  1468   000ED4                     u990:
  1469   000ED4                     
  1470                           ; BSR set to: 0
  1471   000ED4  0E00               	movlw	0
  1472   000ED6  6E31               	movwf	(_dtoa$2118+1)^0,c
  1473   000ED8  0E2B               	movlw	43
  1474   000EDA  6E30               	movwf	_dtoa$2118^0,c
  1475   000EDC  EF74  F007         	goto	l1834
  1476   000EE0                     l1832:
  1477                           
  1478                           ; BSR set to: 0
  1479   000EE0  0E00               	movlw	0
  1480   000EE2  6E31               	movwf	(_dtoa$2118+1)^0,c
  1481   000EE4  0E2D               	movlw	45
  1482   000EE6  6E30               	movwf	_dtoa$2118^0,c
  1483   000EE8                     l1834:
  1484                           
  1485                           ; BSR set to: 0
  1486   000EE8  C030  F040         	movff	_dtoa$2118,dtoa@s
  1487   000EEC                     l1056:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1491   000EEC  0E00               	movlw	0
  1492   000EEE  6E3F               	movwf	(dtoa@i+1)^0,c
  1493   000EF0  0E1F               	movlw	31
  1494   000EF2  6E3E               	movwf	dtoa@i^0,c
  1495   000EF4                     
  1496                           ; BSR set to: 0
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1498   000EF4  0E00               	movlw	0
  1499   000EF6  6FEF               	movwf	(_dbuf+31)& (0+255),b
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1502   000EF8  EFFA  F007         	goto	l1848
  1503   000EFC                     l1838:
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1506   000EFC  063E               	decf	dtoa@i^0,f,c
  1507   000EFE  A0D8               	btfss	status,0,c
  1508   000F00  063F               	decf	(dtoa@i+1)^0,f,c
  1509   000F02                     
  1510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1511   000F02  0ED0               	movlw	low _dbuf
  1512   000F04  243E               	addwf	dtoa@i^0,w,c
  1513   000F06  6ED9               	movwf	fsr2l,c
  1514   000F08  0E00               	movlw	high _dbuf
  1515   000F0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  1516   000F0C  6EDA               	movwf	fsr2h,c
  1517   000F0E  C036  F003         	movff	dtoa@n,___aomod@dividend
  1518   000F12  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1519   000F16  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1520   000F1A  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1521   000F1E  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1522   000F22  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1523   000F26  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1524   000F2A  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1525   000F2E  0E0A               	movlw	10
  1526   000F30  6E0B               	movwf	___aomod@divisor^0,c
  1527   000F32  0E00               	movlw	0
  1528   000F34  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1529   000F36  0E00               	movlw	0
  1530   000F38  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1531   000F3A  0E00               	movlw	0
  1532   000F3C  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1533   000F3E  0E00               	movlw	0
  1534   000F40  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1535   000F42  0E00               	movlw	0
  1536   000F44  6E10               	movwf	(___aomod@divisor+5)^0,c
  1537   000F46  0E00               	movlw	0
  1538   000F48  6E11               	movwf	(___aomod@divisor+6)^0,c
  1539   000F4A  0E00               	movlw	0
  1540   000F4C  6E12               	movwf	(___aomod@divisor+7)^0,c
  1541   000F4E  EC07  F00A         	call	___aomod	;wreg free
  1542   000F52  C003  F028         	movff	?___aomod,??_dtoa
  1543   000F56  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1544   000F5A  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1545   000F5E  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1546   000F62  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1547   000F66  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1548   000F6A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1549   000F6E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1550   000F72  C028  F015         	movff	??_dtoa,abs@a
  1551   000F76  C029  F016         	movff	??_dtoa+1,abs@a+1
  1552   000F7A  EC37  F00E         	call	_abs	;wreg free
  1553   000F7E  5015               	movf	?_abs^0,w,c
  1554   000F80  0F30               	addlw	48
  1555   000F82  6EDF               	movwf	indf2,c
  1556   000F84                     
  1557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1558   000F84  0632               	decf	dtoa@p^0,f,c
  1559   000F86  A0D8               	btfss	status,0,c
  1560   000F88  0633               	decf	(dtoa@p+1)^0,f,c
  1561   000F8A                     
  1562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1563   000F8A  0634               	decf	dtoa@w^0,f,c
  1564   000F8C  A0D8               	btfss	status,0,c
  1565   000F8E  0635               	decf	(dtoa@w+1)^0,f,c
  1566   000F90                     
  1567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1568   000F90  C036  F003         	movff	dtoa@n,___aodiv@dividend
  1569   000F94  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1570   000F98  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1571   000F9C  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1572   000FA0  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1573   000FA4  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1574   000FA8  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1575   000FAC  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  1576   000FB0  0E0A               	movlw	10
  1577   000FB2  6E0B               	movwf	___aodiv@divisor^0,c
  1578   000FB4  0E00               	movlw	0
  1579   000FB6  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  1580   000FB8  0E00               	movlw	0
  1581   000FBA  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  1582   000FBC  0E00               	movlw	0
  1583   000FBE  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  1584   000FC0  0E00               	movlw	0
  1585   000FC2  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  1586   000FC4  0E00               	movlw	0
  1587   000FC6  6E10               	movwf	(___aodiv@divisor+5)^0,c
  1588   000FC8  0E00               	movlw	0
  1589   000FCA  6E11               	movwf	(___aodiv@divisor+6)^0,c
  1590   000FCC  0E00               	movlw	0
  1591   000FCE  6E12               	movwf	(___aodiv@divisor+7)^0,c
  1592   000FD0  EC43  F009         	call	___aodiv	;wreg free
  1593   000FD4  C003  F036         	movff	?___aodiv,dtoa@n
  1594   000FD8  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  1595   000FDC  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  1596   000FE0  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  1597   000FE4  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  1598   000FE8  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  1599   000FEC  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  1600   000FF0  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  1601   000FF4                     l1848:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1604   000FF4  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1605   000FF6  EF05  F008         	goto	u1001
  1606   000FFA  503F               	movf	(dtoa@i+1)^0,w,c
  1607   000FFC  E108               	bnz	u1000
  1608   000FFE  043E               	decf	dtoa@i^0,w,c
  1609   001000  A0D8               	btfss	status,0,c
  1610   001002  EF05  F008         	goto	u1001
  1611   001006  EF07  F008         	goto	u1000
  1612   00100A                     u1001:
  1613   00100A  EF23  F008         	goto	l1854
  1614   00100E                     u1000:
  1615   00100E  5036               	movf	dtoa@n^0,w,c
  1616   001010  1037               	iorwf	(dtoa@n+1)^0,w,c
  1617   001012  1038               	iorwf	(dtoa@n+2)^0,w,c
  1618   001014  1039               	iorwf	(dtoa@n+3)^0,w,c
  1619   001016  103A               	iorwf	(dtoa@n+4)^0,w,c
  1620   001018  103B               	iorwf	(dtoa@n+5)^0,w,c
  1621   00101A  103C               	iorwf	(dtoa@n+6)^0,w,c
  1622   00101C  103D               	iorwf	(dtoa@n+7)^0,w,c
  1623   00101E  A4D8               	btfss	status,2,c
  1624   001020  EF14  F008         	goto	u1011
  1625   001024  EF16  F008         	goto	u1010
  1626   001028                     u1011:
  1627   001028  EF7E  F007         	goto	l1838
  1628   00102C                     u1010:
  1629   00102C  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1630   00102E  EF23  F008         	goto	u1020
  1631   001032  5033               	movf	(dtoa@p+1)^0,w,c
  1632   001034  E106               	bnz	u1021
  1633   001036  0432               	decf	dtoa@p^0,w,c
  1634   001038  B0D8               	btfsc	status,0,c
  1635   00103A  EF21  F008         	goto	u1021
  1636   00103E  EF23  F008         	goto	u1020
  1637   001042                     u1021:
  1638   001042  EF7E  F007         	goto	l1838
  1639   001046                     u1020:
  1640   001046                     l1854:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1643   001046  5040               	movf	dtoa@s^0,w,c
  1644   001048  B4D8               	btfsc	status,2,c
  1645   00104A  EF29  F008         	goto	u1031
  1646   00104E  EF2B  F008         	goto	u1030
  1647   001052                     u1031:
  1648   001052  EF36  F008         	goto	l1860
  1649   001056                     u1030:
  1650   001056                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1652   001056  063E               	decf	dtoa@i^0,f,c
  1653   001058  A0D8               	btfss	status,0,c
  1654   00105A  063F               	decf	(dtoa@i+1)^0,f,c
  1655   00105C                     
  1656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1657   00105C  0ED0               	movlw	low _dbuf
  1658   00105E  243E               	addwf	dtoa@i^0,w,c
  1659   001060  6ED9               	movwf	fsr2l,c
  1660   001062  0E00               	movlw	high _dbuf
  1661   001064  203F               	addwfc	(dtoa@i+1)^0,w,c
  1662   001066  6EDA               	movwf	fsr2h,c
  1663   001068  C040  FFDF         	movff	dtoa@s,indf2
  1664   00106C                     l1860:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1667   00106C  C01E  F013         	movff	dtoa@fp,pad@fp
  1668   001070  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1669   001074  0ED0               	movlw	low _dbuf
  1670   001076  243E               	addwf	dtoa@i^0,w,c
  1671   001078  6E15               	movwf	pad@buf^0,c
  1672   00107A  0E00               	movlw	high _dbuf
  1673   00107C  203F               	addwfc	(dtoa@i+1)^0,w,c
  1674   00107E  6E16               	movwf	(pad@buf+1)^0,c
  1675   001080  C034  F017         	movff	dtoa@w,pad@p
  1676   001084  C035  F018         	movff	dtoa@w+1,pad@p+1
  1677   001088  EC77  F00C         	call	_pad	;wreg free
  1678   00108C  0012               	return		;funcret
  1679   00108E                     __end_of_dtoa:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _pad *****************
  1683 ;; Defined at:
  1684 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1687 ;;		 -> sprintf@f(11), 
  1688 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1689 ;;		 -> dbuf(32), 
  1690 ;;  p               2   22[COMRAM] int 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  w               2   27[COMRAM] int 
  1693 ;;  i               2   25[COMRAM] int 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1703 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;Total ram usage:       11 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 5
  1710 ;; This function calls:
  1711 ;;		_fputc
  1712 ;;		_fputs
  1713 ;; This function is called by:
  1714 ;;		_dtoa
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text5
  1719   0018EE                     __ptext5:
  1720                           	callstack 0
  1721   0018EE                     _pad:
  1722                           	callstack 21
  1723   0018EE                     
  1724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1725   0018EE  BE18               	btfsc	(pad@p+1)^0,7,c
  1726   0018F0  EF7C  F00C         	goto	u891
  1727   0018F4  EF7E  F00C         	goto	u890
  1728   0018F8                     u891:
  1729   0018F8  EF84  F00C         	goto	l1794
  1730   0018FC                     u890:
  1731   0018FC  C017  F01C         	movff	pad@p,pad@w
  1732   001900  C018  F01D         	movff	pad@p+1,pad@w+1
  1733   001904  EF88  F00C         	goto	l1044
  1734   001908                     l1794:
  1735   001908  0E00               	movlw	0
  1736   00190A  6E1D               	movwf	(pad@w+1)^0,c
  1737   00190C  0E00               	movlw	0
  1738   00190E  6E1C               	movwf	pad@w^0,c
  1739   001910                     l1044:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1742   001910  0E00               	movlw	0
  1743   001912  6E1B               	movwf	(pad@i+1)^0,c
  1744   001914  0E00               	movlw	0
  1745   001916  6E1A               	movwf	pad@i^0,c
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1748   001918  EF9A  F00C         	goto	l1800
  1749   00191C                     l1796:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1752   00191C  0E00               	movlw	0
  1753   00191E  6E04               	movwf	(fputc@c+1)^0,c
  1754   001920  0E20               	movlw	32
  1755   001922  6E03               	movwf	fputc@c^0,c
  1756   001924  C013  F005         	movff	pad@fp,fputc@fp
  1757   001928  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1758   00192C  EC60  F00B         	call	_fputc	;wreg free
  1759   001930                     
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1761   001930  4A1A               	infsnz	pad@i^0,f,c
  1762   001932  2A1B               	incf	(pad@i+1)^0,f,c
  1763   001934                     l1800:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1766   001934  501C               	movf	pad@w^0,w,c
  1767   001936  5C1A               	subwf	pad@i^0,w,c
  1768   001938  501B               	movf	(pad@i+1)^0,w,c
  1769   00193A  0A80               	xorlw	128
  1770   00193C  6E19               	movwf	??_pad^0,c
  1771   00193E  501D               	movf	(pad@w+1)^0,w,c
  1772   001940  0A80               	xorlw	128
  1773   001942  5819               	subwfb	??_pad^0,w,c
  1774   001944  A0D8               	btfss	status,0,c
  1775   001946  EFA7  F00C         	goto	u901
  1776   00194A  EFA9  F00C         	goto	u900
  1777   00194E                     u901:
  1778   00194E  EF8E  F00C         	goto	l1796
  1779   001952                     u900:
  1780   001952                     
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1782   001952  C015  F00C         	movff	pad@buf,fputs@s
  1783   001956  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1784   00195A  C013  F00E         	movff	pad@fp,fputs@fp
  1785   00195E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1786   001962  ECF4  F00D         	call	_fputs	;wreg free
  1787   001966  0012               	return		;funcret
  1788   001968                     __end_of_pad:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function _fputs *****************
  1792 ;; Defined at:
  1793 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1796 ;;		 -> dbuf(32), 
  1797 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1798 ;;		 -> sprintf@f(11), 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  i               2   16[COMRAM] int 
  1801 ;;  c               1   15[COMRAM] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  2   11[COMRAM] int 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1812 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1814 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1815 ;;Total ram usage:        7 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; Hardware stack levels required when called: 4
  1818 ;; This function calls:
  1819 ;;		_fputc
  1820 ;; This function is called by:
  1821 ;;		_pad
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text6
  1826   001BE8                     __ptext6:
  1827                           	callstack 0
  1828   001BE8                     _fputs:
  1829                           	callstack 21
  1830   001BE8  0E00               	movlw	0
  1831   001BEA  6E12               	movwf	(fputs@i+1)^0,c
  1832   001BEC  0E00               	movlw	0
  1833   001BEE  6E11               	movwf	fputs@i^0,c
  1834   001BF0  EF05  F00E         	goto	l1708
  1835   001BF4                     l1704:
  1836   001BF4  C010  F003         	movff	fputs@c,fputc@c
  1837   001BF8  6A04               	clrf	(fputc@c+1)^0,c
  1838   001BFA  C00E  F005         	movff	fputs@fp,fputc@fp
  1839   001BFE  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1840   001C02  EC60  F00B         	call	_fputc	;wreg free
  1841   001C06  4A11               	infsnz	fputs@i^0,f,c
  1842   001C08  2A12               	incf	(fputs@i+1)^0,f,c
  1843   001C0A                     l1708:
  1844   001C0A  5011               	movf	fputs@i^0,w,c
  1845   001C0C  240C               	addwf	fputs@s^0,w,c
  1846   001C0E  6ED9               	movwf	fsr2l,c
  1847   001C10  5012               	movf	(fputs@i+1)^0,w,c
  1848   001C12  200D               	addwfc	(fputs@s+1)^0,w,c
  1849   001C14  6EDA               	movwf	fsr2h,c
  1850   001C16  50DF               	movf	indf2,w,c
  1851   001C18  6E10               	movwf	fputs@c^0,c
  1852   001C1A  5010               	movf	fputs@c^0,w,c
  1853   001C1C  A4D8               	btfss	status,2,c
  1854   001C1E  EF13  F00E         	goto	u751
  1855   001C22  EF15  F00E         	goto	u750
  1856   001C26                     u751:
  1857   001C26  EFFA  F00D         	goto	l1704
  1858   001C2A                     u750:
  1859   001C2A  0012               	return		;funcret
  1860   001C2C                     __end_of_fputs:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _fputc *****************
  1864 ;; Defined at:
  1865 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  c               2    2[COMRAM] int 
  1868 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1869 ;;		 -> sprintf@f(11), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  2    2[COMRAM] int 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;Total ram usage:        9 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 3
  1888 ;; This function calls:
  1889 ;;		_putch
  1890 ;; This function is called by:
  1891 ;;		_pad
  1892 ;;		_vfpfcnvrt
  1893 ;;		_fputs
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text7
  1898   0016C0                     __ptext7:
  1899                           	callstack 0
  1900   0016C0                     _fputc:
  1901                           	callstack 24
  1902   0016C0  5005               	movf	fputc@fp^0,w,c
  1903   0016C2  1006               	iorwf	(fputc@fp+1)^0,w,c
  1904   0016C4  B4D8               	btfsc	status,2,c
  1905   0016C6  EF67  F00B         	goto	u711
  1906   0016CA  EF69  F00B         	goto	u710
  1907   0016CE                     u711:
  1908   0016CE  EF72  F00B         	goto	l1692
  1909   0016D2                     u710:
  1910   0016D2  5005               	movf	fputc@fp^0,w,c
  1911   0016D4  1006               	iorwf	(fputc@fp+1)^0,w,c
  1912   0016D6  A4D8               	btfss	status,2,c
  1913   0016D8  EF70  F00B         	goto	u721
  1914   0016DC  EF72  F00B         	goto	u720
  1915   0016E0                     u721:
  1916   0016E0  EF77  F00B         	goto	l1694
  1917   0016E4                     u720:
  1918   0016E4                     l1692:
  1919   0016E4  5003               	movf	fputc@c^0,w,c
  1920   0016E6  EC0A  F00F         	call	_putch
  1921   0016EA  EFC4  F00B         	goto	l1099
  1922   0016EE                     l1694:
  1923   0016EE  EE20 F009          	lfsr	2,9
  1924   0016F2  5005               	movf	fputc@fp^0,w,c
  1925   0016F4  26D9               	addwf	fsr2l,f,c
  1926   0016F6  5006               	movf	(fputc@fp+1)^0,w,c
  1927   0016F8  22DA               	addwfc	fsr2h,f,c
  1928   0016FA  50DE               	movf	postinc2,w,c
  1929   0016FC  10DE               	iorwf	postinc2,w,c
  1930   0016FE  B4D8               	btfsc	status,2,c
  1931   001700  EF84  F00B         	goto	u731
  1932   001704  EF86  F00B         	goto	u730
  1933   001708                     u731:
  1934   001708  EFA1  F00B         	goto	l1698
  1935   00170C                     u730:
  1936   00170C  EE20 F009          	lfsr	2,9
  1937   001710  5005               	movf	fputc@fp^0,w,c
  1938   001712  26D9               	addwf	fsr2l,f,c
  1939   001714  5006               	movf	(fputc@fp+1)^0,w,c
  1940   001716  22DA               	addwfc	fsr2h,f,c
  1941   001718  EE10 F003          	lfsr	1,3
  1942   00171C  5005               	movf	fputc@fp^0,w,c
  1943   00171E  26E1               	addwf	fsr1l,f,c
  1944   001720  5006               	movf	(fputc@fp+1)^0,w,c
  1945   001722  22E2               	addwfc	fsr1h,f,c
  1946   001724  50DE               	movf	postinc2,w,c
  1947   001726  5CE6               	subwf	postinc1,w,c
  1948   001728  50E6               	movf	postinc1,w,c
  1949   00172A  0A80               	xorlw	128
  1950   00172C  6E0B               	movwf	(??_fputc+4)^0,c
  1951   00172E  50DE               	movf	postinc2,w,c
  1952   001730  0A80               	xorlw	128
  1953   001732  580B               	subwfb	(??_fputc+4)^0,w,c
  1954   001734  B0D8               	btfsc	status,0,c
  1955   001736  EF9F  F00B         	goto	u741
  1956   00173A  EFA1  F00B         	goto	u740
  1957   00173E                     u741:
  1958   00173E  EFC4  F00B         	goto	l1099
  1959   001742                     u740:
  1960   001742                     l1698:
  1961   001742  EE20 F003          	lfsr	2,3
  1962   001746  5005               	movf	fputc@fp^0,w,c
  1963   001748  26D9               	addwf	fsr2l,f,c
  1964   00174A  5006               	movf	(fputc@fp+1)^0,w,c
  1965   00174C  22DA               	addwfc	fsr2h,f,c
  1966   00174E  CFDE F007          	movff	postinc2,??_fputc
  1967   001752  CFDD F008          	movff	postdec2,??_fputc+1
  1968   001756  C005  FFD9         	movff	fputc@fp,fsr2l
  1969   00175A  C006  FFDA         	movff	fputc@fp+1,fsr2h
  1970   00175E  CFDE F009          	movff	postinc2,??_fputc+2
  1971   001762  CFDD F00A          	movff	postdec2,??_fputc+3
  1972   001766  5007               	movf	??_fputc^0,w,c
  1973   001768  2409               	addwf	(??_fputc+2)^0,w,c
  1974   00176A  6ED9               	movwf	fsr2l,c
  1975   00176C  5008               	movf	(??_fputc+1)^0,w,c
  1976   00176E  200A               	addwfc	(??_fputc+3)^0,w,c
  1977   001770  6EDA               	movwf	fsr2h,c
  1978   001772  C003  FFDF         	movff	fputc@c,indf2
  1979   001776  EE20 F003          	lfsr	2,3
  1980   00177A  5005               	movf	fputc@fp^0,w,c
  1981   00177C  26D9               	addwf	fsr2l,f,c
  1982   00177E  5006               	movf	(fputc@fp+1)^0,w,c
  1983   001780  22DA               	addwfc	fsr2h,f,c
  1984   001782  2ADE               	incf	postinc2,f,c
  1985   001784  0E00               	movlw	0
  1986   001786  22DD               	addwfc	postdec2,f,c
  1987   001788                     l1099:
  1988   001788  0012               	return		;funcret
  1989   00178A                     __end_of_fputc:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function _putch *****************
  1993 ;; Defined at:
  1994 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  c               1    wreg     unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  c               1    0[COMRAM] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 2
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_fputc
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text8
  2023   001E14                     __ptext8:
  2024                           	callstack 0
  2025   001E14                     _putch:
  2026                           	callstack 24
  2027   001E14  0012               	return		;funcret
  2028   001E16                     __end_of_putch:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _abs *****************
  2032 ;; Defined at:
  2033 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  a               2   20[COMRAM] int 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  2   20[COMRAM] int 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;Total ram usage:        4 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 2
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_dtoa
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text9
  2062   001C6E                     __ptext9:
  2063                           	callstack 0
  2064   001C6E                     _abs:
  2065                           	callstack 24
  2066   001C6E  BE16               	btfsc	(abs@a+1)^0,7,c
  2067   001C70  EF44  F00E         	goto	u910
  2068   001C74  5016               	movf	(abs@a+1)^0,w,c
  2069   001C76  E106               	bnz	u911
  2070   001C78  0415               	decf	abs@a^0,w,c
  2071   001C7A  B0D8               	btfsc	status,0,c
  2072   001C7C  EF42  F00E         	goto	u911
  2073   001C80  EF44  F00E         	goto	u910
  2074   001C84                     u911:
  2075   001C84  EF52  F00E         	goto	l1084
  2076   001C88                     u910:
  2077   001C88  C015  F017         	movff	abs@a,??_abs
  2078   001C8C  C016  F018         	movff	abs@a+1,??_abs+1
  2079   001C90  1E17               	comf	??_abs^0,f,c
  2080   001C92  1E18               	comf	(??_abs+1)^0,f,c
  2081   001C94  4A17               	infsnz	??_abs^0,f,c
  2082   001C96  2A18               	incf	(??_abs+1)^0,f,c
  2083   001C98  C017  F015         	movff	??_abs,?_abs
  2084   001C9C  C018  F016         	movff	??_abs+1,?_abs+1
  2085   001CA0  EF56  F00E         	goto	l1087
  2086   001CA4                     l1084:
  2087   001CA4  C015  F015         	movff	abs@a,?_abs
  2088   001CA8  C016  F016         	movff	abs@a+1,?_abs+1
  2089   001CAC                     l1087:
  2090   001CAC  0012               	return		;funcret
  2091   001CAE                     __end_of_abs:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function ___aomod *****************
  2095 ;; Defined at:
  2096 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  dividend        8    2[COMRAM] long long 
  2099 ;;  divisor         8   10[COMRAM] long long 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  sign            1   19[COMRAM] unsigned char 
  2102 ;;  counter         1   18[COMRAM] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  8    2[COMRAM] long long 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2112 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;Total ram usage:       18 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 2
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_dtoa
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text10
  2127   00140E                     __ptext10:
  2128                           	callstack 0
  2129   00140E                     ___aomod:
  2130                           	callstack 24
  2131   00140E  0E00               	movlw	0
  2132   001410  6E14               	movwf	___aomod@sign^0,c
  2133   001412  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2134   001414  EF10  F00A         	goto	u830
  2135   001418  EF0E  F00A         	goto	u831
  2136   00141C                     u831:
  2137   00141C  EF22  F00A         	goto	l1762
  2138   001420                     u830:
  2139   001420  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2140   001422  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2141   001424  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2142   001426  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2143   001428  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2144   00142A  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2145   00142C  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2146   00142E  6C03               	negf	___aomod@dividend^0,c
  2147   001430  0E00               	movlw	0
  2148   001432  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2149   001434  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2150   001436  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2151   001438  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2152   00143A  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2153   00143C  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2154   00143E  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2155   001440  0E01               	movlw	1
  2156   001442  6E14               	movwf	___aomod@sign^0,c
  2157   001444                     l1762:
  2158   001444  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2159   001446  EF29  F00A         	goto	u840
  2160   00144A  EF27  F00A         	goto	u841
  2161   00144E                     u841:
  2162   00144E  EF39  F00A         	goto	l1766
  2163   001452                     u840:
  2164   001452  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2165   001454  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2166   001456  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2167   001458  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2168   00145A  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2169   00145C  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2170   00145E  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2171   001460  6C0B               	negf	___aomod@divisor^0,c
  2172   001462  0E00               	movlw	0
  2173   001464  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2174   001466  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2175   001468  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2176   00146A  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2177   00146C  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2178   00146E  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2179   001470  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2180   001472                     l1766:
  2181   001472  500B               	movf	___aomod@divisor^0,w,c
  2182   001474  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2183   001476  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2184   001478  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2185   00147A  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2186   00147C  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2187   00147E  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2188   001480  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2189   001482  B4D8               	btfsc	status,2,c
  2190   001484  EF46  F00A         	goto	u851
  2191   001488  EF48  F00A         	goto	u850
  2192   00148C                     u851:
  2193   00148C  EF90  F00A         	goto	l1782
  2194   001490                     u850:
  2195   001490  0E01               	movlw	1
  2196   001492  6E13               	movwf	___aomod@counter^0,c
  2197   001494  EF56  F00A         	goto	l1772
  2198   001498                     l1770:
  2199   001498  90D8               	bcf	status,0,c
  2200   00149A  360B               	rlcf	___aomod@divisor^0,f,c
  2201   00149C  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2202   00149E  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2203   0014A0  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2204   0014A2  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2205   0014A4  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2206   0014A6  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2207   0014A8  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2208   0014AA  2A13               	incf	___aomod@counter^0,f,c
  2209   0014AC                     l1772:
  2210   0014AC  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2211   0014AE  EF5B  F00A         	goto	u861
  2212   0014B2  EF5D  F00A         	goto	u860
  2213   0014B6                     u861:
  2214   0014B6  EF4C  F00A         	goto	l1770
  2215   0014BA                     u860:
  2216   0014BA                     l1774:
  2217   0014BA  500B               	movf	___aomod@divisor^0,w,c
  2218   0014BC  5C03               	subwf	___aomod@dividend^0,w,c
  2219   0014BE  500C               	movf	(___aomod@divisor+1)^0,w,c
  2220   0014C0  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2221   0014C2  500D               	movf	(___aomod@divisor+2)^0,w,c
  2222   0014C4  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2223   0014C6  500E               	movf	(___aomod@divisor+3)^0,w,c
  2224   0014C8  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2225   0014CA  500F               	movf	(___aomod@divisor+4)^0,w,c
  2226   0014CC  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2227   0014CE  5010               	movf	(___aomod@divisor+5)^0,w,c
  2228   0014D0  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2229   0014D2  5011               	movf	(___aomod@divisor+6)^0,w,c
  2230   0014D4  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2231   0014D6  5012               	movf	(___aomod@divisor+7)^0,w,c
  2232   0014D8  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2233   0014DA  A0D8               	btfss	status,0,c
  2234   0014DC  EF72  F00A         	goto	u871
  2235   0014E0  EF74  F00A         	goto	u870
  2236   0014E4                     u871:
  2237   0014E4  EF84  F00A         	goto	l1778
  2238   0014E8                     u870:
  2239   0014E8  500B               	movf	___aomod@divisor^0,w,c
  2240   0014EA  5E03               	subwf	___aomod@dividend^0,f,c
  2241   0014EC  500C               	movf	(___aomod@divisor+1)^0,w,c
  2242   0014EE  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2243   0014F0  500D               	movf	(___aomod@divisor+2)^0,w,c
  2244   0014F2  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2245   0014F4  500E               	movf	(___aomod@divisor+3)^0,w,c
  2246   0014F6  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2247   0014F8  500F               	movf	(___aomod@divisor+4)^0,w,c
  2248   0014FA  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2249   0014FC  5010               	movf	(___aomod@divisor+5)^0,w,c
  2250   0014FE  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2251   001500  5011               	movf	(___aomod@divisor+6)^0,w,c
  2252   001502  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2253   001504  5012               	movf	(___aomod@divisor+7)^0,w,c
  2254   001506  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2255   001508                     l1778:
  2256   001508  90D8               	bcf	status,0,c
  2257   00150A  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2258   00150C  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2259   00150E  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2260   001510  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2261   001512  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2262   001514  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2263   001516  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2264   001518  320B               	rrcf	___aomod@divisor^0,f,c
  2265   00151A  2E13               	decfsz	___aomod@counter^0,f,c
  2266   00151C  EF5D  F00A         	goto	l1774
  2267   001520                     l1782:
  2268   001520  5014               	movf	___aomod@sign^0,w,c
  2269   001522  B4D8               	btfsc	status,2,c
  2270   001524  EF96  F00A         	goto	u881
  2271   001528  EF98  F00A         	goto	u880
  2272   00152C                     u881:
  2273   00152C  EFA8  F00A         	goto	l1786
  2274   001530                     u880:
  2275   001530  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2276   001532  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2277   001534  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2278   001536  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2279   001538  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2280   00153A  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2281   00153C  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2282   00153E  6C03               	negf	___aomod@dividend^0,c
  2283   001540  0E00               	movlw	0
  2284   001542  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2285   001544  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2286   001546  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2287   001548  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2288   00154A  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2289   00154C  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2290   00154E  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2291   001550                     l1786:
  2292   001550  C003  F003         	movff	___aomod@dividend,?___aomod
  2293   001554  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2294   001558  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2295   00155C  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2296   001560  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2297   001564  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2298   001568  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2299   00156C  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2300   001570  0012               	return		;funcret
  2301   001572                     __end_of___aomod:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function ___aodiv *****************
  2305 ;; Defined at:
  2306 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  dividend        8    2[COMRAM] long long 
  2309 ;;  divisor         8   10[COMRAM] long long 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  quotient        8   20[COMRAM] long long 
  2312 ;;  sign            1   19[COMRAM] unsigned char 
  2313 ;;  counter         1   18[COMRAM] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  8    2[COMRAM] long long 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2323 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2324 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2326 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;Total ram usage:       26 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 2
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_dtoa
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text11
  2338   001286                     __ptext11:
  2339                           	callstack 0
  2340   001286                     ___aodiv:
  2341                           	callstack 24
  2342   001286  0E00               	movlw	0
  2343   001288  6E14               	movwf	___aodiv@sign^0,c
  2344   00128A  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2345   00128C  EF4C  F009         	goto	u760
  2346   001290  EF4A  F009         	goto	u761
  2347   001294                     u761:
  2348   001294  EF5E  F009         	goto	l1718
  2349   001298                     u760:
  2350   001298  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2351   00129A  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2352   00129C  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2353   00129E  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2354   0012A0  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2355   0012A2  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2356   0012A4  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2357   0012A6  6C0B               	negf	___aodiv@divisor^0,c
  2358   0012A8  0E00               	movlw	0
  2359   0012AA  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2360   0012AC  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2361   0012AE  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2362   0012B0  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2363   0012B2  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2364   0012B4  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2365   0012B6  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2366   0012B8  0E01               	movlw	1
  2367   0012BA  6E14               	movwf	___aodiv@sign^0,c
  2368   0012BC                     l1718:
  2369   0012BC  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2370   0012BE  EF65  F009         	goto	u770
  2371   0012C2  EF63  F009         	goto	u771
  2372   0012C6                     u771:
  2373   0012C6  EF77  F009         	goto	l1724
  2374   0012CA                     u770:
  2375   0012CA  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2376   0012CC  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2377   0012CE  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2378   0012D0  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2379   0012D2  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2380   0012D4  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2381   0012D6  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2382   0012D8  6C03               	negf	___aodiv@dividend^0,c
  2383   0012DA  0E00               	movlw	0
  2384   0012DC  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2385   0012DE  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2386   0012E0  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2387   0012E2  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2388   0012E4  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2389   0012E6  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2390   0012E8  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2391   0012EA  0E01               	movlw	1
  2392   0012EC  1A14               	xorwf	___aodiv@sign^0,f,c
  2393   0012EE                     l1724:
  2394   0012EE  EE20  F015         	lfsr	2,___aodiv@quotient
  2395   0012F2  0E07               	movlw	7
  2396   0012F4                     u781:
  2397   0012F4  6ADE               	clrf	postinc2,c
  2398   0012F6  06E8               	decf	wreg,f,c
  2399   0012F8  E2FD               	bc	u781
  2400   0012FA  500B               	movf	___aodiv@divisor^0,w,c
  2401   0012FC  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2402   0012FE  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2403   001300  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2404   001302  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2405   001304  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2406   001306  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2407   001308  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2408   00130A  B4D8               	btfsc	status,2,c
  2409   00130C  EF8A  F009         	goto	u791
  2410   001310  EF8C  F009         	goto	u790
  2411   001314                     u791:
  2412   001314  EFDE  F009         	goto	l1746
  2413   001318                     u790:
  2414   001318  0E01               	movlw	1
  2415   00131A  6E13               	movwf	___aodiv@counter^0,c
  2416   00131C  EF9A  F009         	goto	l1732
  2417   001320                     l1730:
  2418   001320  90D8               	bcf	status,0,c
  2419   001322  360B               	rlcf	___aodiv@divisor^0,f,c
  2420   001324  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2421   001326  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2422   001328  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2423   00132A  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2424   00132C  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2425   00132E  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2426   001330  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2427   001332  2A13               	incf	___aodiv@counter^0,f,c
  2428   001334                     l1732:
  2429   001334  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2430   001336  EF9F  F009         	goto	u801
  2431   00133A  EFA1  F009         	goto	u800
  2432   00133E                     u801:
  2433   00133E  EF90  F009         	goto	l1730
  2434   001342                     u800:
  2435   001342                     l1734:
  2436   001342  90D8               	bcf	status,0,c
  2437   001344  3615               	rlcf	___aodiv@quotient^0,f,c
  2438   001346  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2439   001348  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2440   00134A  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2441   00134C  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2442   00134E  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2443   001350  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2444   001352  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2445   001354  500B               	movf	___aodiv@divisor^0,w,c
  2446   001356  5C03               	subwf	___aodiv@dividend^0,w,c
  2447   001358  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2448   00135A  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2449   00135C  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2450   00135E  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2451   001360  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2452   001362  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2453   001364  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2454   001366  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2455   001368  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2456   00136A  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2457   00136C  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2458   00136E  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2459   001370  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2460   001372  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2461   001374  A0D8               	btfss	status,0,c
  2462   001376  EFBF  F009         	goto	u811
  2463   00137A  EFC1  F009         	goto	u810
  2464   00137E                     u811:
  2465   00137E  EFD2  F009         	goto	l1742
  2466   001382                     u810:
  2467   001382  500B               	movf	___aodiv@divisor^0,w,c
  2468   001384  5E03               	subwf	___aodiv@dividend^0,f,c
  2469   001386  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2470   001388  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2471   00138A  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2472   00138C  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2473   00138E  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2474   001390  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2475   001392  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2476   001394  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2477   001396  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2478   001398  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2479   00139A  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2480   00139C  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2481   00139E  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2482   0013A0  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2483   0013A2  8015               	bsf	___aodiv@quotient^0,0,c
  2484   0013A4                     l1742:
  2485   0013A4  90D8               	bcf	status,0,c
  2486   0013A6  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2487   0013A8  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2488   0013AA  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2489   0013AC  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2490   0013AE  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2491   0013B0  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2492   0013B2  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2493   0013B4  320B               	rrcf	___aodiv@divisor^0,f,c
  2494   0013B6  2E13               	decfsz	___aodiv@counter^0,f,c
  2495   0013B8  EFA1  F009         	goto	l1734
  2496   0013BC                     l1746:
  2497   0013BC  5014               	movf	___aodiv@sign^0,w,c
  2498   0013BE  B4D8               	btfsc	status,2,c
  2499   0013C0  EFE4  F009         	goto	u821
  2500   0013C4  EFE6  F009         	goto	u820
  2501   0013C8                     u821:
  2502   0013C8  EFF6  F009         	goto	l1750
  2503   0013CC                     u820:
  2504   0013CC  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2505   0013CE  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2506   0013D0  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2507   0013D2  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2508   0013D4  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2509   0013D6  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2510   0013D8  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2511   0013DA  6C15               	negf	___aodiv@quotient^0,c
  2512   0013DC  0E00               	movlw	0
  2513   0013DE  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2514   0013E0  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2515   0013E2  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2516   0013E4  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2517   0013E6  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2518   0013E8  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2519   0013EA  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2520   0013EC                     l1750:
  2521   0013EC  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2522   0013F0  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2523   0013F4  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2524   0013F8  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2525   0013FC  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2526   001400  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2527   001404  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2528   001408  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2529   00140C  0012               	return		;funcret
  2530   00140E                     __end_of___aodiv:
  2531                           	callstack 0
  2532                           
  2533 ;; *************** function _sendStringSerial4 *****************
  2534 ;; Defined at:
  2535 ;;		line 37 in file "../serial.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  string          2    3[COMRAM] PTR unsigned char 
  2538 ;;		 -> main@readout(50), 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;Total ram usage:        2 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 3
  2557 ;; This function calls:
  2558 ;;		_sendCharSerial4
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text12
  2565   001CAE                     __ptext12:
  2566                           	callstack 0
  2567   001CAE                     _sendStringSerial4:
  2568                           	callstack 27
  2569   001CAE                     
  2570                           ;../serial.c: 40:     while (*string != 0)
  2571   001CAE  EF62  F00E         	goto	l2112
  2572   001CB2                     l2108:
  2573                           
  2574                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  2575   001CB2  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2576   001CB6  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2577   001CBA  50DF               	movf	indf2,w,c
  2578   001CBC  ECDE  F00E         	call	_sendCharSerial4
  2579   001CC0  4A04               	infsnz	sendStringSerial4@string^0,f,c
  2580   001CC2  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  2581   001CC4                     l2112:
  2582                           
  2583                           ;../serial.c: 40:     while (*string != 0)
  2584   001CC4  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2585   001CC8  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2586   001CCC  50DF               	movf	indf2,w,c
  2587   001CCE  A4D8               	btfss	status,2,c
  2588   001CD0  EF6C  F00E         	goto	u1151
  2589   001CD4  EF6E  F00E         	goto	u1150
  2590   001CD8                     u1151:
  2591   001CD8  EF59  F00E         	goto	l2108
  2592   001CDC                     u1150:
  2593   001CDC  0012               	return		;funcret
  2594   001CDE                     __end_of_sendStringSerial4:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _sendCharSerial4 *****************
  2598 ;; Defined at:
  2599 ;;		line 30 in file "../serial.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  charToSend      1    wreg     unsigned char 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  charToSend      1    2[COMRAM] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;Total ram usage:        1 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 2
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_sendStringSerial4
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text13
  2628   001DBC                     __ptext13:
  2629                           	callstack 0
  2630   001DBC                     _sendCharSerial4:
  2631                           	callstack 27
  2632                           
  2633                           ;incstack = 0
  2634                           ;sendCharSerial4@charToSend stored from wreg
  2635   001DBC  6E03               	movwf	sendCharSerial4@charToSend^0,c
  2636   001DBE                     l332:
  2637   001DBE  010E               	movlb	14	; () banked
  2638   001DC0  A537               	btfss	55,2,b	;volatile
  2639   001DC2  EFE5  F00E         	goto	u1091
  2640   001DC6  EFE7  F00E         	goto	u1090
  2641   001DCA                     u1091:
  2642   001DCA  EFDF  F00E         	goto	l332
  2643   001DCE                     u1090:
  2644   001DCE                     
  2645                           ; BSR set to: 14
  2646                           ;../serial.c: 32:     TX4REG = charToSend;
  2647   001DCE  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2648   001DD2                     
  2649                           ; BSR set to: 14
  2650   001DD2  0012               	return		;funcret
  2651   001DD4                     __end_of_sendCharSerial4:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _initUSART4 *****************
  2655 ;; Defined at:
  2656 ;;		line 5 in file "../serial.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 2
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text14
  2685   001D9E                     __ptext14:
  2686                           	callstack 0
  2687   001D9E                     _initUSART4:
  2688                           	callstack 28
  2689   001D9E                     
  2690                           ;../serial.c: 9:     RC0PPS = 0x12;
  2691   001D9E  0E12               	movlw	18
  2692   001DA0  010E               	movlb	14	; () banked
  2693   001DA2  6F62               	movwf	98,b	;volatile
  2694                           
  2695                           ;../serial.c: 10:     RX4PPS = 0x11;
  2696   001DA4  0E11               	movlw	17
  2697   001DA6  6F15               	movwf	21,b	;volatile
  2698   001DA8                     
  2699                           ; BSR set to: 14
  2700                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2701   001DA8  97E9               	bcf	233,3,b	;volatile
  2702   001DAA                     
  2703                           ; BSR set to: 14
  2704                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  2705   001DAA  95E8               	bcf	232,2,b	;volatile
  2706                           
  2707                           ;../serial.c: 14:     SP4BRGL = 103;
  2708   001DAC  0E67               	movlw	103
  2709   001DAE  6FE5               	movwf	229,b	;volatile
  2710                           
  2711                           ;../serial.c: 15:     SP4BRGH = 0;
  2712   001DB0  0E00               	movlw	0
  2713   001DB2  6FE6               	movwf	230,b	;volatile
  2714   001DB4                     
  2715                           ; BSR set to: 14
  2716                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  2717   001DB4  89E7               	bsf	231,4,b	;volatile
  2718   001DB6                     
  2719                           ; BSR set to: 14
  2720                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  2721   001DB6  8BE8               	bsf	232,5,b	;volatile
  2722   001DB8                     
  2723                           ; BSR set to: 14
  2724                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  2725   001DB8  8FE7               	bsf	231,7,b	;volatile
  2726   001DBA                     
  2727                           ; BSR set to: 14
  2728   001DBA  0012               	return		;funcret
  2729   001DBC                     __end_of_initUSART4:
  2730                           	callstack 0
  2731                           
  2732 ;; *************** function _initDCmotorsPWM *****************
  2733 ;; Defined at:
  2734 ;;		line 5 in file "../dc_motor.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  PWMperiod       2    2[COMRAM] int 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, prodl, prodh
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;Total ram usage:        2 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 2
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text15
  2763   001BA2                     __ptext15:
  2764                           	callstack 0
  2765   001BA2                     _initDCmotorsPWM:
  2766                           	callstack 28
  2767   001BA2                     
  2768                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2769   001BA2  9485               	bcf	133,2,c	;volatile
  2770                           
  2771                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2772   001BA4  9885               	bcf	133,4,c	;volatile
  2773                           
  2774                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2775   001BA6  9E83               	bcf	131,7,c	;volatile
  2776                           
  2777                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2778   001BA8  9C87               	bcf	135,6,c	;volatile
  2779                           
  2780                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2781   001BAA  947D               	bcf	125,2,c	;volatile
  2782                           
  2783                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2784   001BAC  987D               	bcf	125,4,c	;volatile
  2785                           
  2786                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2787   001BAE  9E7B               	bcf	123,7,c	;volatile
  2788                           
  2789                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2790   001BB0  9C7F               	bcf	127,6,c	;volatile
  2791   001BB2                     
  2792                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  2793   001BB2  50BD               	movf	189,w,c	;volatile
  2794   001BB4  0B8F               	andlw	-113
  2795   001BB6  0930               	iorlw	48
  2796   001BB8  6EBD               	movwf	189,c	;volatile
  2797                           
  2798                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2799   001BBA  0EE0               	movlw	-32
  2800   001BBC  16BE               	andwf	190,f,c	;volatile
  2801                           
  2802                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2803   001BBE  50BF               	movf	191,w,c	;volatile
  2804   001BC0  0BF0               	andlw	-16
  2805   001BC2  0901               	iorlw	1
  2806   001BC4  6EBF               	movwf	191,c	;volatile
  2807   001BC6                     
  2808                           ;../dc_motor.c: 23:     T2PR=PWMperiod * 2000000 - 1;
  2809   001BC6  5003               	movf	initDCmotorsPWM@PWMperiod^0,w,c
  2810   001BC8  0D80               	mullw	-128
  2811   001BCA  04F3               	decf	243,w,c
  2812   001BCC  6EBC               	movwf	188,c	;volatile
  2813   001BCE                     
  2814                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  2815   001BCE  8EBD               	bsf	189,7,c	;volatile
  2816   001BD0                     
  2817                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  2818   001BD0  0E0A               	movlw	10
  2819   001BD2  010E               	movlb	14	; () banked
  2820   001BD4  6F74               	movwf	116,b	;volatile
  2821   001BD6                     
  2822                           ; BSR set to: 14
  2823                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  2824   001BD6  0E0B               	movlw	11
  2825   001BD8  6F69               	movwf	105,b	;volatile
  2826   001BDA                     
  2827                           ; BSR set to: 14
  2828                           ;../dc_motor.c: 29:     PWM6DCH=0;
  2829   001BDA  0E00               	movlw	0
  2830   001BDC  6EA3               	movwf	163,c	;volatile
  2831   001BDE                     
  2832                           ; BSR set to: 14
  2833                           ;../dc_motor.c: 30:     PWM7DCH=0;
  2834   001BDE  0E00               	movlw	0
  2835   001BE0  6EA0               	movwf	160,c	;volatile
  2836   001BE2                     
  2837                           ; BSR set to: 14
  2838                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  2839   001BE2  8EA4               	bsf	164,7,c	;volatile
  2840   001BE4                     
  2841                           ; BSR set to: 14
  2842                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  2843   001BE4  8EA1               	bsf	161,7,c	;volatile
  2844   001BE6                     
  2845                           ; BSR set to: 14
  2846   001BE6  0012               	return		;funcret
  2847   001BE8                     __end_of_initDCmotorsPWM:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _color_read *****************
  2851 ;; Defined at:
  2852 ;;		line 110 in file "../color.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  rgb             2   13[COMRAM] PTR struct RGB_val
  2855 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;Total ram usage:        4 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 5
  2874 ;; This function calls:
  2875 ;;		_color_read_Blue
  2876 ;;		_color_read_Green
  2877 ;;		_color_read_Luminosity
  2878 ;;		_color_read_Red
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text16
  2885   001848                     __ptext16:
  2886                           	callstack 0
  2887   001848                     _color_read:
  2888                           	callstack 25
  2889   001848                     
  2890                           ;../color.c: 110: void color_read(struct RGB_val *rgb);../color.c: 111: {;../color.c: 11
      +                          2:     rgb->L = color_read_Luminosity();
  2891   001848  EC32  F00D         	call	_color_read_Luminosity	;wreg free
  2892   00184C  C00E  FFD9         	movff	color_read@rgb,fsr2l
  2893   001850  C00F  FFDA         	movff	color_read@rgb+1,fsr2h
  2894   001854  C007  FFDE         	movff	?_color_read_Luminosity,postinc2
  2895   001858  C008  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  2896   00185C                     
  2897                           ;../color.c: 113:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2898   00185C  0E09               	movlw	9
  2899   00185E  6E11               	movwf	(??_color_read+1)^0,c
  2900   001860  0E1E               	movlw	30
  2901   001862  6E10               	movwf	??_color_read^0,c
  2902   001864  0EE4               	movlw	228
  2903   001866                     u1477:
  2904   001866  2EE8               	decfsz	wreg,f,c
  2905   001868  D7FE               	bra	u1477
  2906   00186A  2E10               	decfsz	??_color_read^0,f,c
  2907   00186C  D7FC               	bra	u1477
  2908   00186E  2E11               	decfsz	(??_color_read+1)^0,f,c
  2909   001870  D7FA               	bra	u1477
  2910   001872  D000               	nop2	
  2911   001874                     
  2912                           ;../color.c: 114:     rgb->R = color_read_Red();
  2913   001874  EC0A  F00D         	call	_color_read_Red	;wreg free
  2914   001878  EE20 F002          	lfsr	2,2
  2915   00187C  500E               	movf	color_read@rgb^0,w,c
  2916   00187E  26D9               	addwf	fsr2l,f,c
  2917   001880  500F               	movf	(color_read@rgb+1)^0,w,c
  2918   001882  22DA               	addwfc	fsr2h,f,c
  2919   001884  C007  FFDE         	movff	?_color_read_Red,postinc2
  2920   001888  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  2921                           
  2922                           ;../color.c: 115:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2923   00188C  0E09               	movlw	9
  2924   00188E  6E11               	movwf	(??_color_read+1)^0,c
  2925   001890  0E1E               	movlw	30
  2926   001892  6E10               	movwf	??_color_read^0,c
  2927   001894  0EE4               	movlw	228
  2928   001896                     u1487:
  2929   001896  2EE8               	decfsz	wreg,f,c
  2930   001898  D7FE               	bra	u1487
  2931   00189A  2E10               	decfsz	??_color_read^0,f,c
  2932   00189C  D7FC               	bra	u1487
  2933   00189E  2E11               	decfsz	(??_color_read+1)^0,f,c
  2934   0018A0  D7FA               	bra	u1487
  2935   0018A2  D000               	nop2	
  2936   0018A4                     
  2937                           ;../color.c: 116:     rgb->G = color_read_Green();
  2938   0018A4  EC5A  F00D         	call	_color_read_Green	;wreg free
  2939   0018A8  EE20 F004          	lfsr	2,4
  2940   0018AC  500E               	movf	color_read@rgb^0,w,c
  2941   0018AE  26D9               	addwf	fsr2l,f,c
  2942   0018B0  500F               	movf	(color_read@rgb+1)^0,w,c
  2943   0018B2  22DA               	addwfc	fsr2h,f,c
  2944   0018B4  C007  FFDE         	movff	?_color_read_Green,postinc2
  2945   0018B8  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  2946   0018BC                     
  2947                           ;../color.c: 117:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2948   0018BC  0E09               	movlw	9
  2949   0018BE  6E11               	movwf	(??_color_read+1)^0,c
  2950   0018C0  0E1E               	movlw	30
  2951   0018C2  6E10               	movwf	??_color_read^0,c
  2952   0018C4  0EE4               	movlw	228
  2953   0018C6                     u1497:
  2954   0018C6  2EE8               	decfsz	wreg,f,c
  2955   0018C8  D7FE               	bra	u1497
  2956   0018CA  2E10               	decfsz	??_color_read^0,f,c
  2957   0018CC  D7FC               	bra	u1497
  2958   0018CE  2E11               	decfsz	(??_color_read+1)^0,f,c
  2959   0018D0  D7FA               	bra	u1497
  2960   0018D2  D000               	nop2	
  2961                           
  2962                           ;../color.c: 118:     rgb->B = color_read_Blue();
  2963   0018D4  EC82  F00D         	call	_color_read_Blue	;wreg free
  2964   0018D8  EE20 F006          	lfsr	2,6
  2965   0018DC  500E               	movf	color_read@rgb^0,w,c
  2966   0018DE  26D9               	addwf	fsr2l,f,c
  2967   0018E0  500F               	movf	(color_read@rgb+1)^0,w,c
  2968   0018E2  22DA               	addwfc	fsr2h,f,c
  2969   0018E4  C007  FFDE         	movff	?_color_read_Blue,postinc2
  2970   0018E8  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  2971   0018EC  0012               	return		;funcret
  2972   0018EE                     __end_of_color_read:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _color_read_Red *****************
  2976 ;; Defined at:
  2977 ;;		line 68 in file "../color.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  tmp             2   11[COMRAM] unsigned int 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  2    6[COMRAM] unsigned int 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;Total ram usage:        7 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 4
  2998 ;; This function calls:
  2999 ;;		_I2C_2_Master_Read
  3000 ;;		_I2C_2_Master_RepStart
  3001 ;;		_I2C_2_Master_Start
  3002 ;;		_I2C_2_Master_Stop
  3003 ;;		_I2C_2_Master_Write
  3004 ;; This function is called by:
  3005 ;;		_color_read
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text17
  3010   001A14                     __ptext17:
  3011                           	callstack 0
  3012   001A14                     _color_read_Red:
  3013                           	callstack 25
  3014   001A14                     
  3015                           ;../color.c: 70:  unsigned int tmp;;../color.c: 71:  I2C_2_Master_Start();
  3016   001A14  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3017                           
  3018                           ;../color.c: 72:  I2C_2_Master_Write(0x52 | 0x00);
  3019   001A18  0E52               	movlw	82
  3020   001A1A  ECEA  F00E         	call	_I2C_2_Master_Write
  3021                           
  3022                           ;../color.c: 73:  I2C_2_Master_Write(0xA0 | 0x16);
  3023   001A1E  0EB6               	movlw	182
  3024   001A20  ECEA  F00E         	call	_I2C_2_Master_Write
  3025                           
  3026                           ;../color.c: 74:  I2C_2_Master_RepStart();
  3027   001A24  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3028                           
  3029                           ;../color.c: 75:  I2C_2_Master_Write(0x52 | 0x01);
  3030   001A28  0E53               	movlw	83
  3031   001A2A  ECEA  F00E         	call	_I2C_2_Master_Write
  3032                           
  3033                           ;../color.c: 76:  tmp=I2C_2_Master_Read(1);
  3034   001A2E  0E01               	movlw	1
  3035   001A30  EC16  F00E         	call	_I2C_2_Master_Read
  3036   001A34  6E09               	movwf	??_color_read_Red^0,c
  3037   001A36  5009               	movf	??_color_read_Red^0,w,c
  3038   001A38  6E0C               	movwf	color_read_Red@tmp^0,c
  3039   001A3A  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  3040                           
  3041                           ;../color.c: 77:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3042   001A3C  0E00               	movlw	0
  3043   001A3E  EC16  F00E         	call	_I2C_2_Master_Read
  3044   001A42  6E09               	movwf	??_color_read_Red^0,c
  3045   001A44  5009               	movf	??_color_read_Red^0,w,c
  3046   001A46  6E0B               	movwf	(??_color_read_Red+2)^0,c
  3047   001A48  6A0A               	clrf	(??_color_read_Red+1)^0,c
  3048   001A4A  500C               	movf	color_read_Red@tmp^0,w,c
  3049   001A4C  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  3050   001A4E  6E0C               	movwf	color_read_Red@tmp^0,c
  3051   001A50  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  3052   001A52  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  3053   001A54  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  3054                           
  3055                           ;../color.c: 78:  I2C_2_Master_Stop();
  3056   001A56  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3057   001A5A                     
  3058                           ;../color.c: 79:  return tmp;
  3059   001A5A  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  3060   001A5E  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3061   001A62  0012               	return		;funcret
  3062   001A64                     __end_of_color_read_Red:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _color_read_Luminosity *****************
  3066 ;; Defined at:
  3067 ;;		line 54 in file "../color.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  tmp             2   11[COMRAM] unsigned int 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2    6[COMRAM] unsigned int 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;Total ram usage:        7 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 4
  3088 ;; This function calls:
  3089 ;;		_I2C_2_Master_Read
  3090 ;;		_I2C_2_Master_RepStart
  3091 ;;		_I2C_2_Master_Start
  3092 ;;		_I2C_2_Master_Stop
  3093 ;;		_I2C_2_Master_Write
  3094 ;; This function is called by:
  3095 ;;		_color_read
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text18
  3100   001A64                     __ptext18:
  3101                           	callstack 0
  3102   001A64                     _color_read_Luminosity:
  3103                           	callstack 25
  3104   001A64                     
  3105                           ;../color.c: 56:  unsigned int tmp;;../color.c: 57:  I2C_2_Master_Start();
  3106   001A64  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3107                           
  3108                           ;../color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  3109   001A68  0E52               	movlw	82
  3110   001A6A  ECEA  F00E         	call	_I2C_2_Master_Write
  3111                           
  3112                           ;../color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
  3113   001A6E  0EB4               	movlw	180
  3114   001A70  ECEA  F00E         	call	_I2C_2_Master_Write
  3115                           
  3116                           ;../color.c: 60:  I2C_2_Master_RepStart();
  3117   001A74  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3118                           
  3119                           ;../color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  3120   001A78  0E53               	movlw	83
  3121   001A7A  ECEA  F00E         	call	_I2C_2_Master_Write
  3122                           
  3123                           ;../color.c: 62:  tmp=I2C_2_Master_Read(1);
  3124   001A7E  0E01               	movlw	1
  3125   001A80  EC16  F00E         	call	_I2C_2_Master_Read
  3126   001A84  6E09               	movwf	??_color_read_Luminosity^0,c
  3127   001A86  5009               	movf	??_color_read_Luminosity^0,w,c
  3128   001A88  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3129   001A8A  6A0D               	clrf	(color_read_Luminosity@tmp+1)^0,c
  3130                           
  3131                           ;../color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3132   001A8C  0E00               	movlw	0
  3133   001A8E  EC16  F00E         	call	_I2C_2_Master_Read
  3134   001A92  6E09               	movwf	??_color_read_Luminosity^0,c
  3135   001A94  5009               	movf	??_color_read_Luminosity^0,w,c
  3136   001A96  6E0B               	movwf	(??_color_read_Luminosity+2)^0,c
  3137   001A98  6A0A               	clrf	(??_color_read_Luminosity+1)^0,c
  3138   001A9A  500C               	movf	color_read_Luminosity@tmp^0,w,c
  3139   001A9C  100A               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  3140   001A9E  6E0C               	movwf	color_read_Luminosity@tmp^0,c
  3141   001AA0  500D               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  3142   001AA2  100B               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  3143   001AA4  6E0D               	movwf	(color_read_Luminosity@tmp+1)^0,c
  3144                           
  3145                           ;../color.c: 64:  I2C_2_Master_Stop();
  3146   001AA6  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3147   001AAA                     
  3148                           ;../color.c: 65:  return tmp;
  3149   001AAA  C00C  F007         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  3150   001AAE  C00D  F008         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  3151   001AB2  0012               	return		;funcret
  3152   001AB4                     __end_of_color_read_Luminosity:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _color_read_Green *****************
  3156 ;; Defined at:
  3157 ;;		line 82 in file "../color.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  tmp             2   11[COMRAM] unsigned int 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  2    6[COMRAM] unsigned int 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;Total ram usage:        7 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 4
  3178 ;; This function calls:
  3179 ;;		_I2C_2_Master_Read
  3180 ;;		_I2C_2_Master_RepStart
  3181 ;;		_I2C_2_Master_Start
  3182 ;;		_I2C_2_Master_Stop
  3183 ;;		_I2C_2_Master_Write
  3184 ;; This function is called by:
  3185 ;;		_color_read
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text19
  3190   001AB4                     __ptext19:
  3191                           	callstack 0
  3192   001AB4                     _color_read_Green:
  3193                           	callstack 25
  3194   001AB4                     
  3195                           ;../color.c: 84:  unsigned int tmp;;../color.c: 85:  I2C_2_Master_Start();
  3196   001AB4  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3197                           
  3198                           ;../color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  3199   001AB8  0E52               	movlw	82
  3200   001ABA  ECEA  F00E         	call	_I2C_2_Master_Write
  3201                           
  3202                           ;../color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  3203   001ABE  0EB8               	movlw	184
  3204   001AC0  ECEA  F00E         	call	_I2C_2_Master_Write
  3205                           
  3206                           ;../color.c: 88:  I2C_2_Master_RepStart();
  3207   001AC4  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3208                           
  3209                           ;../color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  3210   001AC8  0E53               	movlw	83
  3211   001ACA  ECEA  F00E         	call	_I2C_2_Master_Write
  3212                           
  3213                           ;../color.c: 90:  tmp=I2C_2_Master_Read(1);
  3214   001ACE  0E01               	movlw	1
  3215   001AD0  EC16  F00E         	call	_I2C_2_Master_Read
  3216   001AD4  6E09               	movwf	??_color_read_Green^0,c
  3217   001AD6  5009               	movf	??_color_read_Green^0,w,c
  3218   001AD8  6E0C               	movwf	color_read_Green@tmp^0,c
  3219   001ADA  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  3220                           
  3221                           ;../color.c: 91:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3222   001ADC  0E00               	movlw	0
  3223   001ADE  EC16  F00E         	call	_I2C_2_Master_Read
  3224   001AE2  6E09               	movwf	??_color_read_Green^0,c
  3225   001AE4  5009               	movf	??_color_read_Green^0,w,c
  3226   001AE6  6E0B               	movwf	(??_color_read_Green+2)^0,c
  3227   001AE8  6A0A               	clrf	(??_color_read_Green+1)^0,c
  3228   001AEA  500C               	movf	color_read_Green@tmp^0,w,c
  3229   001AEC  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  3230   001AEE  6E0C               	movwf	color_read_Green@tmp^0,c
  3231   001AF0  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  3232   001AF2  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  3233   001AF4  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  3234                           
  3235                           ;../color.c: 92:  I2C_2_Master_Stop();
  3236   001AF6  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3237   001AFA                     
  3238                           ;../color.c: 93:  return tmp;
  3239   001AFA  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  3240   001AFE  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3241   001B02  0012               	return		;funcret
  3242   001B04                     __end_of_color_read_Green:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _color_read_Blue *****************
  3246 ;; Defined at:
  3247 ;;		line 96 in file "../color.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  tmp             2   11[COMRAM] unsigned int 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    6[COMRAM] unsigned int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;Total ram usage:        7 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 4
  3268 ;; This function calls:
  3269 ;;		_I2C_2_Master_Read
  3270 ;;		_I2C_2_Master_RepStart
  3271 ;;		_I2C_2_Master_Start
  3272 ;;		_I2C_2_Master_Stop
  3273 ;;		_I2C_2_Master_Write
  3274 ;; This function is called by:
  3275 ;;		_color_read
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text20
  3280   001B04                     __ptext20:
  3281                           	callstack 0
  3282   001B04                     _color_read_Blue:
  3283                           	callstack 25
  3284   001B04                     
  3285                           ;../color.c: 98:  unsigned int tmp;;../color.c: 99:  I2C_2_Master_Start();
  3286   001B04  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3287                           
  3288                           ;../color.c: 100:  I2C_2_Master_Write(0x52 | 0x00);
  3289   001B08  0E52               	movlw	82
  3290   001B0A  ECEA  F00E         	call	_I2C_2_Master_Write
  3291                           
  3292                           ;../color.c: 101:  I2C_2_Master_Write(0xA0 | 0x1A);
  3293   001B0E  0EBA               	movlw	186
  3294   001B10  ECEA  F00E         	call	_I2C_2_Master_Write
  3295                           
  3296                           ;../color.c: 102:  I2C_2_Master_RepStart();
  3297   001B14  ECF6  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3298                           
  3299                           ;../color.c: 103:  I2C_2_Master_Write(0x52 | 0x01);
  3300   001B18  0E53               	movlw	83
  3301   001B1A  ECEA  F00E         	call	_I2C_2_Master_Write
  3302                           
  3303                           ;../color.c: 104:  tmp=I2C_2_Master_Read(1);
  3304   001B1E  0E01               	movlw	1
  3305   001B20  EC16  F00E         	call	_I2C_2_Master_Read
  3306   001B24  6E09               	movwf	??_color_read_Blue^0,c
  3307   001B26  5009               	movf	??_color_read_Blue^0,w,c
  3308   001B28  6E0C               	movwf	color_read_Blue@tmp^0,c
  3309   001B2A  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  3310                           
  3311                           ;../color.c: 105:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3312   001B2C  0E00               	movlw	0
  3313   001B2E  EC16  F00E         	call	_I2C_2_Master_Read
  3314   001B32  6E09               	movwf	??_color_read_Blue^0,c
  3315   001B34  5009               	movf	??_color_read_Blue^0,w,c
  3316   001B36  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  3317   001B38  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  3318   001B3A  500C               	movf	color_read_Blue@tmp^0,w,c
  3319   001B3C  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  3320   001B3E  6E0C               	movwf	color_read_Blue@tmp^0,c
  3321   001B40  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  3322   001B42  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  3323   001B44  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  3324                           
  3325                           ;../color.c: 106:  I2C_2_Master_Stop();
  3326   001B46  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3327   001B4A                     
  3328                           ;../color.c: 107:  return tmp;
  3329   001B4A  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  3330   001B4E  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3331   001B52  0012               	return		;funcret
  3332   001B54                     __end_of_color_read_Blue:
  3333                           	callstack 0
  3334                           
  3335 ;; *************** function _I2C_2_Master_RepStart *****************
  3336 ;; Defined at:
  3337 ;;		line 33 in file "../i2c.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 3
  3358 ;; This function calls:
  3359 ;;		_I2C_2_Master_Idle
  3360 ;; This function is called by:
  3361 ;;		_color_read_Luminosity
  3362 ;;		_color_read_Red
  3363 ;;		_color_read_Green
  3364 ;;		_color_read_Blue
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text21
  3369   001DEC                     __ptext21:
  3370                           	callstack 0
  3371   001DEC                     _I2C_2_Master_RepStart:
  3372                           	callstack 25
  3373   001DEC                     
  3374                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3375   001DEC  EC9B  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3376   001DF0                     
  3377                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3378   001DF0  010E               	movlb	14	; () banked
  3379   001DF2  83DA               	bsf	218,1,b	;volatile
  3380   001DF4                     
  3381                           ; BSR set to: 14
  3382   001DF4  0012               	return		;funcret
  3383   001DF6                     __end_of_I2C_2_Master_RepStart:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _I2C_2_Master_Read *****************
  3387 ;; Defined at:
  3388 ;;		line 51 in file "../i2c.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  ack             1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  ack             1    4[COMRAM] unsigned char 
  3393 ;;  tmp             1    5[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      unsigned char 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3406 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;Total ram usage:        3 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 3
  3410 ;; This function calls:
  3411 ;;		_I2C_2_Master_Idle
  3412 ;; This function is called by:
  3413 ;;		_color_read_Luminosity
  3414 ;;		_color_read_Red
  3415 ;;		_color_read_Green
  3416 ;;		_color_read_Blue
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text22
  3421   001C2C                     __ptext22:
  3422                           	callstack 0
  3423   001C2C                     _I2C_2_Master_Read:
  3424                           	callstack 25
  3425                           
  3426                           ; BSR set to: 14
  3427                           ;incstack = 0
  3428                           ;I2C_2_Master_Read@ack stored from wreg
  3429   001C2C  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  3430   001C2E                     
  3431                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  3432   001C2E  EC9B  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3433   001C32                     
  3434                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3435   001C32  010E               	movlb	14	; () banked
  3436   001C34  87DA               	bsf	218,3,b	;volatile
  3437                           
  3438                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  3439   001C36  EC9B  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3440   001C3A                     
  3441                           ;../i2c.c: 57:   tmp = SSP2BUF;
  3442   001C3A  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3443                           
  3444                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  3445   001C3E  EC9B  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3446   001C42                     
  3447                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3448   001C42  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  3449   001C44  B4D8               	btfsc	status,2,c
  3450   001C46  EF27  F00E         	goto	u1041
  3451   001C4A  EF2B  F00E         	goto	u1040
  3452   001C4E                     u1041:
  3453   001C4E  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3454   001C50  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  3455   001C52  EF2C  F00E         	goto	u1058
  3456   001C56                     u1040:
  3457   001C56  6A04               	clrf	??_I2C_2_Master_Read^0,c
  3458   001C58                     u1058:
  3459   001C58  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  3460   001C5A  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  3461   001C5C  010E               	movlb	14	; () banked
  3462   001C5E  51DA               	movf	218,w,b	;volatile
  3463   001C60  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3464   001C62  0BDF               	andlw	-33
  3465   001C64  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  3466   001C66  6FDA               	movwf	218,b	;volatile
  3467   001C68                     
  3468                           ; BSR set to: 14
  3469                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3470   001C68  89DA               	bsf	218,4,b	;volatile
  3471   001C6A                     
  3472                           ; BSR set to: 14
  3473                           ;../i2c.c: 61:   return tmp;
  3474   001C6A  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  3475   001C6C                     
  3476                           ; BSR set to: 14
  3477   001C6C  0012               	return		;funcret
  3478   001C6E                     __end_of_I2C_2_Master_Read:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _color_processor_easy *****************
  3482 ;; Defined at:
  3483 ;;		line 133 in file "../color.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  rgb             2    2[COMRAM] PTR struct RGB_val
  3486 ;;		 -> main@RGB_recorded(8), 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  b               2   10[COMRAM] unsigned int 
  3489 ;;  a               2    8[COMRAM] unsigned int 
  3490 ;;  c               2    6[COMRAM] unsigned int 
  3491 ;;  color           2    4[COMRAM] unsigned int 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2    2[COMRAM] unsigned int 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;Total ram usage:       10 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 2
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text23
  3516   00178A                     __ptext23:
  3517                           	callstack 0
  3518   00178A                     _color_processor_easy:
  3519                           	callstack 28
  3520   00178A                     
  3521                           ;../color.c: 133: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 134
      +                          : {;../color.c: 135:     unsigned int a = rgb->R;
  3522   00178A  EE20 F002          	lfsr	2,2
  3523   00178E  5003               	movf	color_processor_easy@rgb^0,w,c
  3524   001790  26D9               	addwf	fsr2l,f,c
  3525   001792  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3526   001794  22DA               	addwfc	fsr2h,f,c
  3527   001796  CFDE F009          	movff	postinc2,color_processor_easy@a
  3528   00179A  CFDD F00A          	movff	postdec2,color_processor_easy@a+1
  3529                           
  3530                           ;../color.c: 136:     unsigned int b = rgb->G;
  3531   00179E  EE20 F004          	lfsr	2,4
  3532   0017A2  5003               	movf	color_processor_easy@rgb^0,w,c
  3533   0017A4  26D9               	addwf	fsr2l,f,c
  3534   0017A6  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3535   0017A8  22DA               	addwfc	fsr2h,f,c
  3536   0017AA  CFDE F00B          	movff	postinc2,color_processor_easy@b
  3537   0017AE  CFDD F00C          	movff	postdec2,color_processor_easy@b+1
  3538                           
  3539                           ;../color.c: 137:     unsigned int c = rgb->B;
  3540   0017B2  EE20 F006          	lfsr	2,6
  3541   0017B6  5003               	movf	color_processor_easy@rgb^0,w,c
  3542   0017B8  26D9               	addwf	fsr2l,f,c
  3543   0017BA  5004               	movf	(color_processor_easy@rgb+1)^0,w,c
  3544   0017BC  22DA               	addwfc	fsr2h,f,c
  3545   0017BE  CFDE F007          	movff	postinc2,color_processor_easy@c
  3546   0017C2  CFDD F008          	movff	postdec2,color_processor_easy@c+1
  3547   0017C6                     
  3548                           ;../color.c: 138:     unsigned int color;;../color.c: 139:     if (a>=b & a>=c){color=1;
      +                          }
  3549   0017C6  500B               	movf	color_processor_easy@b^0,w,c
  3550   0017C8  5C09               	subwf	color_processor_easy@a^0,w,c
  3551   0017CA  500C               	movf	(color_processor_easy@b+1)^0,w,c
  3552   0017CC  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3553   0017CE  A0D8               	btfss	status,0,c
  3554   0017D0  EFEC  F00B         	goto	u1111
  3555   0017D4  EFEE  F00B         	goto	u1110
  3556   0017D8                     u1111:
  3557   0017D8  EFFF  F00B         	goto	l2040
  3558   0017DC                     u1110:
  3559   0017DC  5007               	movf	color_processor_easy@c^0,w,c
  3560   0017DE  5C09               	subwf	color_processor_easy@a^0,w,c
  3561   0017E0  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3562   0017E2  580A               	subwfb	(color_processor_easy@a+1)^0,w,c
  3563   0017E4  A0D8               	btfss	status,0,c
  3564   0017E6  EFF7  F00B         	goto	u1121
  3565   0017EA  EFF9  F00B         	goto	u1120
  3566   0017EE                     u1121:
  3567   0017EE  EFFF  F00B         	goto	l2040
  3568   0017F2                     u1120:
  3569   0017F2  0E00               	movlw	0
  3570   0017F4  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3571   0017F6  0E01               	movlw	1
  3572   0017F8  6E05               	movwf	color_processor_easy@color^0,c
  3573   0017FA  EF1F  F00C         	goto	l2048
  3574   0017FE                     l2040:
  3575   0017FE  5009               	movf	color_processor_easy@a^0,w,c
  3576   001800  5C0B               	subwf	color_processor_easy@b^0,w,c
  3577   001802  500A               	movf	(color_processor_easy@a+1)^0,w,c
  3578   001804  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3579   001806  A0D8               	btfss	status,0,c
  3580   001808  EF08  F00C         	goto	u1131
  3581   00180C  EF0A  F00C         	goto	u1130
  3582   001810                     u1131:
  3583   001810  EF1B  F00C         	goto	l2046
  3584   001814                     u1130:
  3585   001814  5007               	movf	color_processor_easy@c^0,w,c
  3586   001816  5C0B               	subwf	color_processor_easy@b^0,w,c
  3587   001818  5008               	movf	(color_processor_easy@c+1)^0,w,c
  3588   00181A  580C               	subwfb	(color_processor_easy@b+1)^0,w,c
  3589   00181C  A0D8               	btfss	status,0,c
  3590   00181E  EF13  F00C         	goto	u1141
  3591   001822  EF15  F00C         	goto	u1140
  3592   001826                     u1141:
  3593   001826  EF1B  F00C         	goto	l2046
  3594   00182A                     u1140:
  3595   00182A  0E00               	movlw	0
  3596   00182C  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3597   00182E  0E02               	movlw	2
  3598   001830  6E05               	movwf	color_processor_easy@color^0,c
  3599   001832  EF1F  F00C         	goto	l2048
  3600   001836                     l2046:
  3601   001836  0E00               	movlw	0
  3602   001838  6E06               	movwf	(color_processor_easy@color+1)^0,c
  3603   00183A  0E03               	movlw	3
  3604   00183C  6E05               	movwf	color_processor_easy@color^0,c
  3605   00183E                     l2048:
  3606                           
  3607                           ;../color.c: 142:     return color;
  3608   00183E  C005  F003         	movff	color_processor_easy@color,?_color_processor_easy
  3609   001842  C006  F004         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  3610   001846  0012               	return		;funcret
  3611   001848                     __end_of_color_processor_easy:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function _color_click_init *****************
  3615 ;; Defined at:
  3616 ;;		line 5 in file "../color.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;Total ram usage:        1 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 5
  3637 ;; This function calls:
  3638 ;;		_I2C_2_Master_Init
  3639 ;;		_color_writetoaddr
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text24
  3646   001968                     __ptext24:
  3647                           	callstack 0
  3648   001968                     _color_click_init:
  3649                           	callstack 25
  3650   001968                     
  3651                           ;../color.c: 8:     I2C_2_Master_Init();
  3652   001968  EC86  F00E         	call	_I2C_2_Master_Init	;wreg free
  3653   00196C                     
  3654                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  3655   00196C  0E01               	movlw	1
  3656   00196E  6E05               	movwf	color_writetoaddr@value^0,c
  3657   001970  0E00               	movlw	0
  3658   001972  ECAF  F00E         	call	_color_writetoaddr
  3659   001976                     
  3660                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3661   001976  0E3F               	movlw	63
  3662   001978  6E07               	movwf	??_color_click_init^0,c
  3663   00197A  0E55               	movlw	85
  3664   00197C                     u1507:
  3665   00197C  2EE8               	decfsz	wreg,f,c
  3666   00197E  D7FE               	bra	u1507
  3667   001980  2E07               	decfsz	??_color_click_init^0,f,c
  3668   001982  D7FC               	bra	u1507
  3669   001984  F000               	nop	
  3670   001986                     
  3671                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  3672   001986  0E03               	movlw	3
  3673   001988  6E05               	movwf	color_writetoaddr@value^0,c
  3674   00198A  0E00               	movlw	0
  3675   00198C  ECAF  F00E         	call	_color_writetoaddr
  3676   001990                     
  3677                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3678   001990  0ED5               	movlw	213
  3679   001992  6E05               	movwf	color_writetoaddr@value^0,c
  3680   001994  0E01               	movlw	1
  3681   001996  ECAF  F00E         	call	_color_writetoaddr
  3682   00199A                     
  3683                           ;../color.c: 21:     TRISHbits.TRISH1 = 0;
  3684   00199A  9288               	bcf	136,1,c	;volatile
  3685   00199C                     
  3686                           ;../color.c: 22:     TRISDbits.TRISD3 = 0;
  3687   00199C  9684               	bcf	132,3,c	;volatile
  3688   00199E                     
  3689                           ;../color.c: 23:     TRISDbits.TRISD4 = 0;
  3690   00199E  9884               	bcf	132,4,c	;volatile
  3691   0019A0                     
  3692                           ;../color.c: 24:     TRISHbits.TRISH0 = 0;
  3693   0019A0  9088               	bcf	136,0,c	;volatile
  3694   0019A2                     
  3695                           ;../color.c: 25:     TRISFbits.TRISF0 = 0;
  3696   0019A2  9086               	bcf	134,0,c	;volatile
  3697   0019A4                     
  3698                           ;../color.c: 27:     LATHbits.LATH1 = 1;
  3699   0019A4  8280               	bsf	128,1,c	;volatile
  3700   0019A6                     
  3701                           ;../color.c: 28:     LATDbits.LATD3 = 1;
  3702   0019A6  867C               	bsf	124,3,c	;volatile
  3703   0019A8                     
  3704                           ;../color.c: 29:     LATDbits.LATD4 = 1;
  3705   0019A8  887C               	bsf	124,4,c	;volatile
  3706   0019AA                     
  3707                           ;../color.c: 30:     LATHbits.LATH0 = 1;
  3708   0019AA  8080               	bsf	128,0,c	;volatile
  3709   0019AC                     
  3710                           ;../color.c: 31:     LATFbits.LATF0 = 1;
  3711   0019AC  807E               	bsf	126,0,c	;volatile
  3712   0019AE                     
  3713                           ;../color.c: 34:     LATDbits.LATD7=0;
  3714   0019AE  9E7C               	bcf	124,7,c	;volatile
  3715   0019B0                     
  3716                           ;../color.c: 35:     LATHbits.LATH3=0;
  3717   0019B0  9680               	bcf	128,3,c	;volatile
  3718   0019B2                     
  3719                           ;../color.c: 36:     TRISDbits.TRISD7=0;
  3720   0019B2  9E84               	bcf	132,7,c	;volatile
  3721   0019B4                     
  3722                           ;../color.c: 37:     TRISHbits.TRISH3=0;
  3723   0019B4  9688               	bcf	136,3,c	;volatile
  3724   0019B6                     
  3725                           ;../color.c: 39:     TRISFbits.TRISF2=1;
  3726   0019B6  8486               	bsf	134,2,c	;volatile
  3727   0019B8                     
  3728                           ;../color.c: 40:     ANSELFbits.ANSELF2=0;
  3729   0019B8  010E               	movlb	14	; () banked
  3730   0019BA  95B4               	bcf	180,2,b	;volatile
  3731   0019BC                     
  3732                           ; BSR set to: 14
  3733                           ;../color.c: 41:     TRISFbits.TRISF3=1;
  3734   0019BC  8686               	bsf	134,3,c	;volatile
  3735   0019BE                     
  3736                           ; BSR set to: 14
  3737                           ;../color.c: 42:     ANSELFbits.ANSELF3=0;
  3738   0019BE  97B4               	bcf	180,3,b	;volatile
  3739   0019C0                     
  3740                           ; BSR set to: 14
  3741   0019C0  0012               	return		;funcret
  3742   0019C2                     __end_of_color_click_init:
  3743                           	callstack 0
  3744                           
  3745 ;; *************** function _color_writetoaddr *****************
  3746 ;; Defined at:
  3747 ;;		line 45 in file "../color.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  address         1    wreg     unsigned char 
  3750 ;;  value           1    4[COMRAM] unsigned char 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  address         1    5[COMRAM] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3762 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;Total ram usage:        2 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 4
  3769 ;; This function calls:
  3770 ;;		_I2C_2_Master_Start
  3771 ;;		_I2C_2_Master_Stop
  3772 ;;		_I2C_2_Master_Write
  3773 ;; This function is called by:
  3774 ;;		_color_click_init
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text25
  3779   001D5E                     __ptext25:
  3780                           	callstack 0
  3781   001D5E                     _color_writetoaddr:
  3782                           	callstack 25
  3783                           
  3784                           ; BSR set to: 14
  3785                           ;incstack = 0
  3786                           ;color_writetoaddr@address stored from wreg
  3787   001D5E  6E06               	movwf	color_writetoaddr@address^0,c
  3788   001D60                     
  3789                           ;../color.c: 45: void color_writetoaddr(char address, char value);../color.c: 46: {;../c
      +                          olor.c: 47:     I2C_2_Master_Start();
  3790   001D60  EC00  F00F         	call	_I2C_2_Master_Start	;wreg free
  3791                           
  3792                           ;../color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  3793   001D64  0E52               	movlw	82
  3794   001D66  ECEA  F00E         	call	_I2C_2_Master_Write
  3795                           
  3796                           ;../color.c: 49:     I2C_2_Master_Write(0x80 | address);
  3797   001D6A  5006               	movf	color_writetoaddr@address^0,w,c
  3798   001D6C  0980               	iorlw	128
  3799   001D6E  ECEA  F00E         	call	_I2C_2_Master_Write
  3800                           
  3801                           ;../color.c: 50:     I2C_2_Master_Write(value);
  3802   001D72  5005               	movf	color_writetoaddr@value^0,w,c
  3803   001D74  ECEA  F00E         	call	_I2C_2_Master_Write
  3804                           
  3805                           ;../color.c: 51:     I2C_2_Master_Stop();
  3806   001D78  ECFB  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3807   001D7C  0012               	return		;funcret
  3808   001D7E                     __end_of_color_writetoaddr:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _I2C_2_Master_Write *****************
  3812 ;; Defined at:
  3813 ;;		line 45 in file "../i2c.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  data_byte       1    wreg     unsigned char 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  data_byte       1    3[COMRAM] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;Total ram usage:        1 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 3
  3834 ;; This function calls:
  3835 ;;		_I2C_2_Master_Idle
  3836 ;; This function is called by:
  3837 ;;		_color_writetoaddr
  3838 ;;		_color_read_Luminosity
  3839 ;;		_color_read_Red
  3840 ;;		_color_read_Green
  3841 ;;		_color_read_Blue
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text26
  3846   001DD4                     __ptext26:
  3847                           	callstack 0
  3848   001DD4                     _I2C_2_Master_Write:
  3849                           	callstack 25
  3850                           
  3851                           ;incstack = 0
  3852                           ;I2C_2_Master_Write@data_byte stored from wreg
  3853   001DD4  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  3854   001DD6                     
  3855                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  3856   001DD6  EC9B  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3857   001DDA                     
  3858                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  3859   001DDA  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3860   001DDE  0012               	return		;funcret
  3861   001DE0                     __end_of_I2C_2_Master_Write:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function _I2C_2_Master_Stop *****************
  3865 ;; Defined at:
  3866 ;;		line 39 in file "../i2c.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 3
  3887 ;; This function calls:
  3888 ;;		_I2C_2_Master_Idle
  3889 ;; This function is called by:
  3890 ;;		_color_writetoaddr
  3891 ;;		_color_read_Luminosity
  3892 ;;		_color_read_Red
  3893 ;;		_color_read_Green
  3894 ;;		_color_read_Blue
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text27
  3899   001DF6                     __ptext27:
  3900                           	callstack 0
  3901   001DF6                     _I2C_2_Master_Stop:
  3902                           	callstack 25
  3903   001DF6                     
  3904                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  3905   001DF6  EC9B  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3906   001DFA                     
  3907                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3908   001DFA  010E               	movlb	14	; () banked
  3909   001DFC  85DA               	bsf	218,2,b	;volatile
  3910   001DFE                     
  3911                           ; BSR set to: 14
  3912   001DFE  0012               	return		;funcret
  3913   001E00                     __end_of_I2C_2_Master_Stop:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _I2C_2_Master_Start *****************
  3917 ;; Defined at:
  3918 ;;		line 27 in file "../i2c.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 3
  3939 ;; This function calls:
  3940 ;;		_I2C_2_Master_Idle
  3941 ;; This function is called by:
  3942 ;;		_color_writetoaddr
  3943 ;;		_color_read_Luminosity
  3944 ;;		_color_read_Red
  3945 ;;		_color_read_Green
  3946 ;;		_color_read_Blue
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text28
  3951   001E00                     __ptext28:
  3952                           	callstack 0
  3953   001E00                     _I2C_2_Master_Start:
  3954                           	callstack 25
  3955   001E00                     
  3956                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  3957   001E00  EC9B  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3958   001E04                     
  3959                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3960   001E04  010E               	movlb	14	; () banked
  3961   001E06  81DA               	bsf	218,0,b	;volatile
  3962   001E08                     
  3963                           ; BSR set to: 14
  3964   001E08  0012               	return		;funcret
  3965   001E0A                     __end_of_I2C_2_Master_Start:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _I2C_2_Master_Idle *****************
  3969 ;; Defined at:
  3970 ;;		line 22 in file "../i2c.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;Total ram usage:        1 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 2
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_I2C_2_Master_Start
  3995 ;;		_I2C_2_Master_RepStart
  3996 ;;		_I2C_2_Master_Stop
  3997 ;;		_I2C_2_Master_Write
  3998 ;;		_I2C_2_Master_Read
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text29
  4003   001D36                     __ptext29:
  4004                           	callstack 0
  4005   001D36                     _I2C_2_Master_Idle:
  4006                           	callstack 25
  4007   001D36                     l95:
  4008   001D36  010E               	movlb	14	; () banked
  4009   001D38  B5D8               	btfsc	216,2,b	;volatile
  4010   001D3A  EFA1  F00E         	goto	u921
  4011   001D3E  EFA3  F00E         	goto	u920
  4012   001D42                     u921:
  4013   001D42  EF9B  F00E         	goto	l95
  4014   001D46                     u920:
  4015   001D46                     
  4016                           ; BSR set to: 14
  4017   001D46  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4018   001D4A  0E1F               	movlw	31
  4019   001D4C  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  4020   001D4E  A4D8               	btfss	status,2,c
  4021   001D50  EFAC  F00E         	goto	u931
  4022   001D54  EFAE  F00E         	goto	u930
  4023   001D58                     u931:
  4024   001D58  EF9B  F00E         	goto	l95
  4025   001D5C                     u930:
  4026   001D5C                     
  4027                           ; BSR set to: 14
  4028   001D5C  0012               	return		;funcret
  4029   001D5E                     __end_of_I2C_2_Master_Idle:
  4030                           	callstack 0
  4031                           
  4032 ;; *************** function _I2C_2_Master_Init *****************
  4033 ;; Defined at:
  4034 ;;		line 4 in file "../i2c.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;Total ram usage:        0 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; Hardware stack levels required when called: 2
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_color_click_init
  4059 ;;		_main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text30
  4064   001D0C                     __ptext30:
  4065                           	callstack 0
  4066   001D0C                     _I2C_2_Master_Init:
  4067                           	callstack 27
  4068   001D0C                     
  4069                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4070   001D0C  010E               	movlb	14	; () banked
  4071   001D0E  51D9               	movf	217,w,b	;volatile
  4072   001D10  0BF0               	andlw	-16
  4073   001D12  0908               	iorlw	8
  4074   001D14  6FD9               	movwf	217,b	;volatile
  4075   001D16                     
  4076                           ; BSR set to: 14
  4077                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4078   001D16  8BD9               	bsf	217,5,b	;volatile
  4079                           
  4080                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4081   001D18  0E9F               	movlw	159
  4082   001D1A  6FD6               	movwf	214,b	;volatile
  4083   001D1C                     
  4084                           ; BSR set to: 14
  4085                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4086   001D1C  8A84               	bsf	132,5,c	;volatile
  4087   001D1E                     
  4088                           ; BSR set to: 14
  4089                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4090   001D1E  8C84               	bsf	132,6,c	;volatile
  4091   001D20                     
  4092                           ; BSR set to: 14
  4093                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4094   001D20  9BA7               	bcf	167,5,b	;volatile
  4095   001D22                     
  4096                           ; BSR set to: 14
  4097                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4098   001D22  9DA7               	bcf	167,6,b	;volatile
  4099                           
  4100                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  4101   001D24  0E1D               	movlw	29
  4102   001D26  6F1D               	movwf	29,b	;volatile
  4103                           
  4104                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  4105   001D28  0E1E               	movlw	30
  4106   001D2A  6F1C               	movwf	28,b	;volatile
  4107                           
  4108                           ;../i2c.c: 18:   RD5PPS=0x1C;
  4109   001D2C  0E1C               	movlw	28
  4110   001D2E  6F6F               	movwf	111,b	;volatile
  4111                           
  4112                           ;../i2c.c: 19:   RD6PPS=0x1B;
  4113   001D30  0E1B               	movlw	27
  4114   001D32  6F70               	movwf	112,b	;volatile
  4115   001D34                     
  4116                           ; BSR set to: 14
  4117   001D34  0012               	return		;funcret
  4118   001D36                     __end_of_I2C_2_Master_Init:
  4119                           	callstack 0
  4120                           
  4121 ;; *************** function _Timer0_init *****************
  4122 ;; Defined at:
  4123 ;;		line 40 in file "../rc_servo.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;		None
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;Total ram usage:        0 bytes
  4142 ;; Hardware stack levels used: 1
  4143 ;; Hardware stack levels required when called: 2
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_main
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text31
  4152   001D7E                     __ptext31:
  4153                           	callstack 0
  4154   001D7E                     _Timer0_init:
  4155                           	callstack 28
  4156   001D7E                     
  4157                           ;../rc_servo.c: 42:     T0CON1bits.T0CS=0b010;
  4158   001D7E  50D6               	movf	214,w,c	;volatile
  4159   001D80  0B1F               	andlw	-225
  4160   001D82  0940               	iorlw	64
  4161   001D84  6ED6               	movwf	214,c	;volatile
  4162   001D86                     
  4163                           ;../rc_servo.c: 43:     T0CON1bits.T0ASYNC=1;
  4164   001D86  88D6               	bsf	214,4,c	;volatile
  4165                           
  4166                           ;../rc_servo.c: 44:     T0CON1bits.T0CKPS=0b0111;
  4167   001D88  50D6               	movf	214,w,c	;volatile
  4168   001D8A  0BF0               	andlw	-16
  4169   001D8C  0907               	iorlw	7
  4170   001D8E  6ED6               	movwf	214,c	;volatile
  4171   001D90                     
  4172                           ;../rc_servo.c: 46:     T0CON0bits.T016BIT=1;
  4173   001D90  88D5               	bsf	213,4,c	;volatile
  4174                           
  4175                           ;../rc_servo.c: 49:     TMR0H=(65535-2500)>>8;
  4176   001D92  0EF6               	movlw	246
  4177   001D94  6ED4               	movwf	212,c	;volatile
  4178                           
  4179                           ;../rc_servo.c: 50:     TMR0L=(unsigned char)(65535-2500);
  4180   001D96  0E3B               	movlw	59
  4181   001D98  6ED3               	movwf	211,c	;volatile
  4182   001D9A                     
  4183                           ;../rc_servo.c: 51:     T0CON0bits.T0EN=1;
  4184   001D9A  8ED5               	bsf	213,7,c	;volatile
  4185   001D9C  0012               	return		;funcret
  4186   001D9E                     __end_of_Timer0_init:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _Interrupts_init *****************
  4190 ;; Defined at:
  4191 ;;		line 8 in file "../rc_servo.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		None
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 2
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text32
  4220   001DE0                     __ptext32:
  4221                           	callstack 0
  4222   001DE0                     _Interrupts_init:
  4223                           	callstack 28
  4224   001DE0                     
  4225                           ;../rc_servo.c: 10:     PIE0bits.TMR0IE=1;
  4226   001DE0  010E               	movlb	14	; () banked
  4227   001DE2  8B29               	bsf	41,5,b	;volatile
  4228                           
  4229                           ;../rc_servo.c: 11:     INTCONbits.PEIE=1;
  4230   001DE4  8CF2               	bsf	242,6,c	;volatile
  4231                           
  4232                           ;../rc_servo.c: 12:     INTCONbits.IPEN=0;
  4233   001DE6  9AF2               	bcf	242,5,c	;volatile
  4234                           
  4235                           ;../rc_servo.c: 13:     INTCONbits.GIE=1;
  4236   001DE8  8EF2               	bsf	242,7,c	;volatile
  4237   001DEA                     
  4238                           ; BSR set to: 14
  4239   001DEA  0012               	return		;funcret
  4240   001DEC                     __end_of_Interrupts_init:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _HighISR *****************
  4244 ;; Defined at:
  4245 ;;		line 20 in file "../rc_servo.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 1
  4266 ;; This function calls:
  4267 ;;		_write16bitTMR0val
  4268 ;; This function is called by:
  4269 ;;		Interrupt level 2
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	intcode
  4274   000008                     __pintcode:
  4275                           	callstack 0
  4276   000008                     _HighISR:
  4277                           	callstack 21
  4278                           
  4279                           ; BSR set to: 14
  4280                           ;incstack = 0
  4281   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4282   00000A                     
  4283                           ;../rc_servo.c: 22:     if (PIR0bits.TMR0IF)
  4284   00000A  010E               	movlb	14	; () banked
  4285   00000C  AB33               	btfss	51,5,b	;volatile
  4286   00000E  EF0B  F000         	goto	i2u130_41
  4287   000012  EF0D  F000         	goto	i2u130_40
  4288   000016                     i2u130_41:
  4289   000016  EF26  F000         	goto	i2l2180
  4290   00001A                     i2u130_40:
  4291   00001A                     
  4292                           ; BSR set to: 14
  4293                           ;../rc_servo.c: 23:     {;../rc_servo.c: 24:         if(LATEbits.LATE2){
  4294   00001A  A47D               	btfss	125,2,c	;volatile
  4295   00001C  EF12  F000         	goto	i2u131_41
  4296   000020  EF14  F000         	goto	i2u131_40
  4297   000024                     i2u131_41:
  4298   000024  EF1E  F000         	goto	i2l2176
  4299   000028                     i2u131_40:
  4300   000028                     
  4301                           ; BSR set to: 14
  4302                           ;../rc_servo.c: 25:             write16bitTMR0val(65535-off_period);
  4303   000028  0100               	movlb	0	; () banked
  4304   00002A  1DC9               	comf	_off_period& (0+255),w,b
  4305   00002C  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4306   00002E  1DCA               	comf	(_off_period+1)& (0+255),w,b
  4307   000030  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4308   000032  EC05  F00F         	call	_write16bitTMR0val	;wreg free
  4309   000036                     
  4310                           ;../rc_servo.c: 26:             LATEbits.LATE2=0;
  4311   000036  947D               	bcf	125,2,c	;volatile
  4312                           
  4313                           ;../rc_servo.c: 28:         } else {
  4314   000038  EF26  F000         	goto	i2l2180
  4315   00003C                     i2l2176:
  4316                           
  4317                           ; BSR set to: 14
  4318                           ;../rc_servo.c: 29:             write16bitTMR0val(65535-on_period);
  4319   00003C  0100               	movlb	0	; () banked
  4320   00003E  1DCB               	comf	_on_period& (0+255),w,b
  4321   000040  6E01               	movwf	write16bitTMR0val@tmp^0,c
  4322   000042  1DCC               	comf	(_on_period+1)& (0+255),w,b
  4323   000044  6E02               	movwf	(write16bitTMR0val@tmp+1)^0,c
  4324   000046  EC05  F00F         	call	_write16bitTMR0val	;wreg free
  4325   00004A                     
  4326                           ;../rc_servo.c: 30:             LATEbits.LATE2=1;
  4327   00004A  847D               	bsf	125,2,c	;volatile
  4328   00004C                     i2l2180:
  4329                           
  4330                           ;../rc_servo.c: 34:     PIR0bits.TMR0IF=0;
  4331   00004C  010E               	movlb	14	; () banked
  4332   00004E  9B33               	bcf	51,5,b	;volatile
  4333   000050                     
  4334                           ; BSR set to: 14
  4335   000050  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4336   000052  0011               	retfie		f
  4337   000054                     __end_of_HighISR:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _write16bitTMR0val *****************
  4341 ;; Defined at:
  4342 ;;		line 58 in file "../rc_servo.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  tmp             2    0[COMRAM] unsigned int 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;Total ram usage:        2 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_HighISR
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text34
  4370   001E0A                     __ptext34:
  4371                           	callstack 0
  4372   001E0A                     _write16bitTMR0val:
  4373                           	callstack 21
  4374   001E0A                     
  4375                           ;../rc_servo.c: 58: void write16bitTMR0val(unsigned int tmp);../rc_servo.c: 59: {;../rc_
      +                          servo.c: 60:     TMR0H=tmp>>8;
  4376   001E0A  5002               	movf	(write16bitTMR0val@tmp+1)^0,w,c
  4377   001E0C  6ED4               	movwf	212,c	;volatile
  4378   001E0E                     
  4379                           ;../rc_servo.c: 61:     TMR0L=tmp;
  4380   001E0E  C001  FFD3         	movff	write16bitTMR0val@tmp,4051	;volatile
  4381   001E12  0012               	return		;funcret
  4382   001E14                     __end_of_write16bitTMR0val:
  4383                           	callstack 0
  4384                           
  4385                           	psect	rparam
  4386   000000                     
  4387                           	psect	temp
  4388   00005D                     btemp:
  4389                           	callstack 0
  4390   00005D                     	ds	1
  4391   000000                     int$flags	set	btemp
  4392   000000                     wtemp8	set	btemp+1
  4393   000000                     ttemp5	set	btemp+1
  4394   000000                     ttemp6	set	btemp+4
  4395   000000                     ttemp7	set	btemp+8
  4396                           
  4397                           	psect	idloc
  4398                           
  4399                           ;Config register IDLOC0 @ 0x200000
  4400                           ;	unspecified, using default values
  4401   200000                     	org	2097152
  4402   200000  0FFF               	dw	4095
  4403                           
  4404                           ;Config register IDLOC1 @ 0x200002
  4405                           ;	unspecified, using default values
  4406   200002                     	org	2097154
  4407   200002  0FFF               	dw	4095
  4408                           
  4409                           ;Config register IDLOC2 @ 0x200004
  4410                           ;	unspecified, using default values
  4411   200004                     	org	2097156
  4412   200004  0FFF               	dw	4095
  4413                           
  4414                           ;Config register IDLOC3 @ 0x200006
  4415                           ;	unspecified, using default values
  4416   200006                     	org	2097158
  4417   200006  0FFF               	dw	4095
  4418                           
  4419                           ;Config register IDLOC4 @ 0x200008
  4420                           ;	unspecified, using default values
  4421   200008                     	org	2097160
  4422   200008  0FFF               	dw	4095
  4423                           
  4424                           ;Config register IDLOC5 @ 0x20000A
  4425                           ;	unspecified, using default values
  4426   20000A                     	org	2097162
  4427   20000A  0FFF               	dw	4095
  4428                           
  4429                           ;Config register IDLOC6 @ 0x20000C
  4430                           ;	unspecified, using default values
  4431   20000C                     	org	2097164
  4432   20000C  0FFF               	dw	4095
  4433                           
  4434                           ;Config register IDLOC7 @ 0x20000E
  4435                           ;	unspecified, using default values
  4436   20000E                     	org	2097166
  4437   20000E  0FFF               	dw	4095
  4438                           
  4439                           	psect	config
  4440                           
  4441                           ;Config register CONFIG1L @ 0x300000
  4442                           ;	External Oscillator mode Selection bits
  4443                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4444                           ;	Power-up default value for COSC bits
  4445                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4446   300000                     	org	3145728
  4447   300000  AA                 	db	170
  4448                           
  4449                           ;Config register CONFIG1H @ 0x300001
  4450                           ;	unspecified, using default values
  4451                           ;	Clock Out Enable bit
  4452                           ;	CLKOUTEN = 0x1, unprogrammed default
  4453                           ;	Clock Switch Enable bit
  4454                           ;	CSWEN = 0x1, unprogrammed default
  4455                           ;	Fail-Safe Clock Monitor Enable bit
  4456                           ;	FCMEN = 0x1, unprogrammed default
  4457   300001                     	org	3145729
  4458   300001  FF                 	db	255
  4459                           
  4460                           ;Config register CONFIG2L @ 0x300002
  4461                           ;	unspecified, using default values
  4462                           ;	Master Clear Enable bit
  4463                           ;	MCLRE = 0x1, unprogrammed default
  4464                           ;	Power-up Timer Enable bit
  4465                           ;	PWRTE = 0x1, unprogrammed default
  4466                           ;	Low-power BOR enable bit
  4467                           ;	LPBOREN = 0x1, unprogrammed default
  4468                           ;	Brown-out Reset Enable bits
  4469                           ;	BOREN = 0x3, unprogrammed default
  4470   300002                     	org	3145730
  4471   300002  FF                 	db	255
  4472                           
  4473                           ;Config register CONFIG2H @ 0x300003
  4474                           ;	unspecified, using default values
  4475                           ;	Brown Out Reset Voltage selection bits
  4476                           ;	BORV = 0x3, unprogrammed default
  4477                           ;	ZCD Disable bit
  4478                           ;	ZCD = 0x1, unprogrammed default
  4479                           ;	PPSLOCK bit One-Way Set Enable bit
  4480                           ;	PPS1WAY = 0x1, unprogrammed default
  4481                           ;	Stack Full/Underflow Reset Enable bit
  4482                           ;	STVREN = 0x1, unprogrammed default
  4483                           ;	Debugger Enable bit
  4484                           ;	DEBUG = 0x1, unprogrammed default
  4485                           ;	Extended Instruction Set Enable bit
  4486                           ;	XINST = 0x1, unprogrammed default
  4487   300003                     	org	3145731
  4488   300003  FF                 	db	255
  4489                           
  4490                           ;Config register CONFIG3L @ 0x300004
  4491                           ;	WDT Period Select bits
  4492                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4493                           ;	WDT operating mode
  4494                           ;	WDTE = OFF, WDT Disabled
  4495   300004                     	org	3145732
  4496   300004  9F                 	db	159
  4497                           
  4498                           ;Config register CONFIG3H @ 0x300005
  4499                           ;	unspecified, using default values
  4500                           ;	WDT Window Select bits
  4501                           ;	WDTCWS = 0x7, unprogrammed default
  4502                           ;	WDT input clock selector
  4503                           ;	WDTCCS = 0x7, unprogrammed default
  4504   300005                     	org	3145733
  4505   300005  FF                 	db	255
  4506                           
  4507                           ;Config register CONFIG4L @ 0x300006
  4508                           ;	unspecified, using default values
  4509                           ;	Write Protection Block 0
  4510                           ;	WRT0 = 0x1, unprogrammed default
  4511                           ;	Write Protection Block 1
  4512                           ;	WRT1 = 0x1, unprogrammed default
  4513                           ;	Write Protection Block 2
  4514                           ;	WRT2 = 0x1, unprogrammed default
  4515                           ;	Write Protection Block 3
  4516                           ;	WRT3 = 0x1, unprogrammed default
  4517                           ;	Write Protection Block 3
  4518                           ;	WRT4 = 0x1, unprogrammed default
  4519                           ;	Write Protection Block 3
  4520                           ;	WRT5 = 0x1, unprogrammed default
  4521                           ;	Write Protection Block 3
  4522                           ;	WRT6 = 0x1, unprogrammed default
  4523                           ;	Write Protection Block 3
  4524                           ;	WRT7 = 0x1, unprogrammed default
  4525   300006                     	org	3145734
  4526   300006  FF                 	db	255
  4527                           
  4528                           ;Config register CONFIG4H @ 0x300007
  4529                           ;	unspecified, using default values
  4530                           ;	Configuration Register Write Protection bit
  4531                           ;	WRTC = 0x1, unprogrammed default
  4532                           ;	Boot Block Write Protection bit
  4533                           ;	WRTB = 0x1, unprogrammed default
  4534                           ;	Data EEPROM Write Protection bit
  4535                           ;	WRTD = 0x1, unprogrammed default
  4536                           ;	Scanner Enable bit
  4537                           ;	SCANE = 0x1, unprogrammed default
  4538                           ;	Low Voltage Programming Enable bit
  4539                           ;	LVP = 0x1, unprogrammed default
  4540   300007                     	org	3145735
  4541   300007  FF                 	db	255
  4542                           
  4543                           ;Config register CONFIG5L @ 0x300008
  4544                           ;	unspecified, using default values
  4545                           ;	UserNVM Program Memory Code Protection bit
  4546                           ;	CP = 0x1, unprogrammed default
  4547                           ;	DataNVM Memory Code Protection bit
  4548                           ;	CPD = 0x1, unprogrammed default
  4549   300008                     	org	3145736
  4550   300008  FF                 	db	255
  4551                           
  4552                           ;Config register CONFIG5H @ 0x300009
  4553                           ;	unspecified, using default values
  4554   300009                     	org	3145737
  4555   300009  FF                 	db	255
  4556                           
  4557                           ;Config register CONFIG6L @ 0x30000A
  4558                           ;	unspecified, using default values
  4559                           ;	Table Read Protection Block 0
  4560                           ;	EBTR0 = 0x1, unprogrammed default
  4561                           ;	Table Read Protection Block 1
  4562                           ;	EBTR1 = 0x1, unprogrammed default
  4563                           ;	Table Read Protection Block 2
  4564                           ;	EBTR2 = 0x1, unprogrammed default
  4565                           ;	Table Read Protection Block 3
  4566                           ;	EBTR3 = 0x1, unprogrammed default
  4567                           ;	Table Read Protection Block 4
  4568                           ;	EBTR4 = 0x1, unprogrammed default
  4569                           ;	Table Read Protection Block 5
  4570                           ;	EBTR5 = 0x1, unprogrammed default
  4571                           ;	Table Read Protection Block 6
  4572                           ;	EBTR6 = 0x1, unprogrammed default
  4573                           ;	Table Read Protection Block 7
  4574                           ;	EBTR7 = 0x1, unprogrammed default
  4575   30000A                     	org	3145738
  4576   30000A  FF                 	db	255
  4577                           
  4578                           ;Config register CONFIG6H @ 0x30000B
  4579                           ;	unspecified, using default values
  4580                           ;	Boot Block Table Read Protection bit
  4581                           ;	EBTRB = 0x1, unprogrammed default
  4582   30000B                     	org	3145739
  4583   30000B  FF                 	db	255
  4584                           tosu	equ	0xFFF
  4585                           tosh	equ	0xFFE
  4586                           tosl	equ	0xFFD
  4587                           stkptr	equ	0xFFC
  4588                           pclatu	equ	0xFFB
  4589                           pclath	equ	0xFFA
  4590                           pcl	equ	0xFF9
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           indf0	equ	0xFEF
  4598                           postinc0	equ	0xFEE
  4599                           postdec0	equ	0xFED
  4600                           preinc0	equ	0xFEC
  4601                           plusw0	equ	0xFEB
  4602                           fsr0h	equ	0xFEA
  4603                           fsr0l	equ	0xFE9
  4604                           wreg	equ	0xFE8
  4605                           indf1	equ	0xFE7
  4606                           postinc1	equ	0xFE6
  4607                           postdec1	equ	0xFE5
  4608                           preinc1	equ	0xFE4
  4609                           plusw1	equ	0xFE3
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           bsr	equ	0xFE0
  4613                           indf2	equ	0xFDF
  4614                           postinc2	equ	0xFDE
  4615                           postdec2	equ	0xFDD
  4616                           preinc2	equ	0xFDC
  4617                           plusw2	equ	0xFDB
  4618                           fsr2h	equ	0xFDA
  4619                           fsr2l	equ	0xFD9
  4620                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    101     144
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2090$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2037$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2037$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@readout(BANK0[50]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turn_left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1103DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S1103DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK0[8]), main@RGB_calibrated(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_write16bitTMR0val

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               186   186      0    7786
                                             25 BANK0     76    76      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
                         _color_read
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             64 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             13 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     196
                  _write16bitTMR0val
 ---------------------------------------------------------------------------------
 (10) _write16bitTMR0val                                   2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _write16bitTMR0val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      90       5       90.0%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      54        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhhlh      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRhhlll      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllll      B      0       0      52        0.0%
BITBIGSFRllllll      9      0       0      51        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhl          5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C      55        0.0%
DATA                 0      0     13C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 01:42:18 2022

               _color_read_Red 1A14                _color_read_Blue 1B04                             l33 19C0  
                           l42 1A62                             l51 18EC                             l36 1D7C  
                           l45 1B02                             l39 1AB2                             l48 1B52  
                           l58 1846                             l92 1D34                             l95 1D36  
                           l98 1D5C               _color_read_Green 1AB4              ??_Interrupts_init 0003  
                          l101 1E08                            l110 1DDE                            l104 1DF4  
                          l113 1C6C                            l107 1DFE                            l221 1BE6  
                          l170 11A6                            l323 1DBA                            l171 1210  
                          l332 1DBE                            l341 1CDC                            l165 1138  
                          l166 116E                            l271 1DEA                            l335 1DD2  
                          l282 1D9C                            l471 1570                            l458 140C  
                          u710 16D2                            u711 16CE                            u800 1342  
                          u720 16E4                            u801 133E                            u721 16E0  
                          u810 1382                            u730 170C                            u811 137E  
                          u731 1708                            u820 13CC                            u740 1742  
                          u900 1952                            u821 13C8                            u741 173E  
                          u901 194E                            u830 1420                            u910 1C88  
                          u750 1C2A                            u831 141C                            u911 1C84  
                          u751 1C26                            u920 1D46                            u760 1298  
                          u840 1452                            u921 1D42                            u761 1294  
                          u841 144E                            u930 1D5C                            u770 12CA  
                          u850 1490                            u931 1D58                            u771 12C6  
                          u851 148C                            u860 14BA                            u940 0E42  
                          u781 12F4                            u861 14B6                            u941 0E3C  
                          u790 1318                            u870 14E8                            u950 0E44  
                          u791 1314                            u871 14E4                            u880 1530  
                          u960 0E56                            u881 152C                            u961 0E52  
                          u890 18FC                            u970 0E92                            u891 18F8  
                          u971 0E8E                            u980 0EBE                            u981 0EBA  
                          u990 0ED4                            u991 0ED0                            _abs 1C6E  
                          _pad 18EE                            wreg 000FE8                           l1110 1E14  
                         l1022 1A12                           l2000 19A8                           l2010 19B2  
                         l2002 19AA                           l1107 1C2A                           ?_abs 0015  
                         l2020 19BE                           l2012 19B4                           l2004 19AC  
                         l1044 1910                           l2100 19E4                           l1053 0E9E  
                         l2014 19B6                           l2006 19AE                           l2030 18BC  
                         l2022 1848                           l2110 1CC0                           l2102 1A00  
                         l1055 0EA6                           l2016 19B8                           l2008 19B0  
                         l2040 17FE                           l2032 178A                           l2024 185C  
                         l2112 1CC4                           l1048 1966                           l1056 0EEC  
                         l1080 1BA0                           l2200 10C4                           l2018 19BC  
                         l2042 1814                           l2034 17C6                           l2026 1874  
                         l2106 1CAE                           l1074 16BE                           l2210 11B4  
                         l2202 10FA                           l1067 108C                           l2044 182A  
                         l2036 17DC                           l2028 18A4                           l2060 1BD0  
                         l2052 1BA2                           l2108 1CB2                           l1084 1CA4  
                         l2212 11C6                           l2220 122A                           l2204 1106  
                         l2046 1836                           l2038 17F2                           l2070 1BE4  
                         l2062 1BD6                           l2054 1BB2                           l2230 125E  
                         l2214 11E6                           l2222 1242                           l2206 1146  
                         l1087 1CAC                           l2072 1DE0                           l2080 1D9A  
                         l2048 183E                           l2064 1BDA                           l2056 1BC6  
                         l2232 1262                           l2224 1256                           l2216 11FC  
                         l2208 117C                           l2074 1D7E                           l2066 1BDE  
                         l2058 1BCE                           l2090 1DB6                           l2082 1D9E  
                         l2218 121E                           l1099 1788                           l2076 1D86  
                         l2068 1BE2                           l2092 1DB8                           l2084 1DA8  
                         l2078 1D90                           l2086 1DAA                           l1710 1286  
                         l1702 1BE8                           l2094 19C2                           l2190 10A2  
                         l2088 1DB4                           l1720 12CA                           l1712 128A  
                         l1704 1BF4                           l1800 1934                           l2096 19D4  
                         l2192 10A6                           l2184 108E                           l1810 1D46  
                         l1730 1320                           l1722 12EA                           l1714 1298  
                         l1706 1C06                           l1802 1952                           l2098 19DC  
                         l2194 10AA                           l2186 1092                           l1740 13A2  
                         l1732 1334                           l1724 12EE                           l1716 12B8  
                         l1804 1C6E                           l1708 1C0A                           l1820 0E76  
                         l1812 0E12                           l1900 15B2                           l2196 10AE  
                         l2188 109E                           l1750 13EC                           l1742 13A4  
                         l1734 1342                           l1726 12FA                           l1718 12BC  
                         l1806 1C88                           l1830 0ED4                           l1822 0E92  
                         l1814 0E32                           l1910 1654                           l1902 15B6  
                         l2198 10B8                           l1808 1D36                           l1744 13B6  
                         l1736 1354                           l1728 1318                           l1760 1440  
                         l1840 0F02                           l1832 0EE0                           l1824 0EAE  
                         l1816 0E46                           l1904 15C6                           l1930 1D1E  
                         l1738 1382                           l1746 13BC                           l1770 1498  
                         l1762 1444                           l1754 140E                           l1690 16D2  
                         l1850 100E                           l1842 0F84                           l1834 0EE8  
                         l1826 0EBE                           l1818 0E56                           l1914 1684  
                         l1906 15E2                           l1932 1D20                           l1924 1D0C  
                         l1940 1AAA                           l1748 13CC                           l1780 151A  
                         l1772 14AC                           l1764 1452                           l1756 1412  
                         l1692 16E4                           l1860 106C                           l1852 102C  
                         l1844 0F8A                           l1836 0EF4                           l1828 0EC4  
                         l1908 15FE                           l1934 1D22                           l1926 1D16  
                         l1870 1DDA                           l1950 1AB4                           l1774 14BA  
                         l1782 1520                           l1766 1472                           l1758 1420  
                         l1694 16EE                           l1790 18EE                           l1854 1046  
                         l1846 0F90                           l1838 0EFC                           l1918 1696  
                         l1928 1D1C                           l1864 1E00                           l1872 1DF6  
                         l1936 1D60                           l1880 1C2E                           l1952 1AFA  
                         l1944 1A14                           l1784 1530                           l1776 14E8  
                         l1768 1490                           l1696 170C                           l1688 16C0  
                         l1792 18FC                           l1856 1056                           l1848 0FF4  
                         l1866 1E04                           l1874 1DFA                           l1890 1C6A  
                         l1882 1C32                           l1938 1A64                           l1946 1A5A  
                         l1962 1DBE                           l1786 1550                           l1778 1508  
                         l1698 1742                           l1794 1908                           l1858 105C  
                         l1970 1B7C                           l1868 1DD6                           l1980 1976  
                         l1884 1C3A                           l1876 1DEC                           l1956 1B04  
                         l1964 1DCE                           l1796 191C                           l1972 1B98  
                         l1990 199E                           l1982 1986                           l1886 1C42  
                         l1878 1DF0                           l1958 1B4A                           l1798 1930  
                         l1894 1572                           l1966 1B54                           ?_pad 0013  
                         l1992 19A0                           l1984 1990                           l1976 1968  
                         l1888 1C68                           l1896 1596                           l1968 1B60  
                         l1994 19A2                           l1986 199A                           l1978 196C  
                         l1898 15A4                           l1996 19A4                           l1988 199C  
                         l1998 19A6                           STR_1 0E01                           u1000 100E  
                         u1001 100A                           u1010 102C                           u1011 1028  
                         u1020 1046                           u1100 1B98                           u1021 1042  
                         u1101 1B94                           u1110 17DC                           u1030 1056  
                         u1111 17D8                           u1031 1052                           u1120 17F2  
                         u1040 1C56                           u1121 17EE                           u1041 1C4E  
                         u1130 1814                           u1131 1810                           u1140 182A  
                         u1060 1596                           u1141 1826                           u1061 1592  
                         u1150 1CDC                           u1070 15E2                           u1151 1CD8  
                         u1071 15DE                           u1080 15FE                           u1400 11B4  
                         u1320 1124                           u1081 15FA                           u1401 11B0  
                         u1321 111A                           u1058 1C58                           u1090 1DCE  
                         u1410 11C6                           u1330 1138                           u1091 1DCA  
                         u1411 11C2                           u1331 1134                           u1420 11FC  
                         u1340 1146                           u1421 11F8                           u1341 1142  
                         u1430 121E                           u1350 1158                           u1431 121A  
                         u1351 1150                           u1440 1256                           u1328 1128  
                 _BAUD4CONbits 000EE9                           u1441 1252                           u1450 127E  
                         u1370 117C                           u1507 197C                           u1451 127A  
                         u1371 1178                           u1380 118E                           u1381 1186  
                         u1368 115C                           _T2PR 000FBC                           u1467 1236  
                         u1477 1866                           u1398 1192                           u1487 1896  
                         u1497 18C6                    main@readout 007B                           abs@a 0015  
                         _dbuf 00D0                           _main 108E                           _dtoa 0E12  
                         _prec 00C7                           pad@i 001A                           pad@p 0017  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001C                           fsr2l 000FD9  
                         btemp 005D                           prodl 000FF3                           start 0054  
       __end_of_color_read_Red 1A64                __end_of_HighISR 0054                   ___param_bank 000000  
                        ??_abs 0017                          ??_pad 0019                __end_of___aodiv 140E  
                        ?_main 0001                          ?_dtoa 001E                __end_of___aomod 1572  
      ??_color_read_Luminosity 0009                          i2l285 1E12                          i2l279 0050  
                 vfpfcnvrt@fmt 0043                          _TMR0H 000FD4                          _TMR0L 000FD3  
      __end_of_sendCharSerial4 1DD4     __end_of_I2C_2_Master_Start 1E0A     __end_of_I2C_2_Master_Write 1DE0  
                        _flags 00CD                          _fputc 16C0                          _fputs 1BE8  
                        pad@fp 0013                          _width 00C5                          _putch 1E14  
                        main@j 00B3                          dtoa@d 0020                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0032                          dtoa@s 0040  
                        dtoa@w 0034                          tablat 000FF5                          ttemp5 005E  
                        ttemp6 0061                          ttemp7 0065                          status 000FD8  
                        wtemp8 005E                __end_of_sprintf 1A14        __end_of_color_read_Blue 1B54  
        _I2C_2_Master_RepStart 1DEC                ?_color_read_Red 0007                __initialization 1CDE  
                 __end_of_main 1286                   __end_of_dtoa 108E                         ??_main 0079  
                       ??_dtoa 0028                  __activetblptr 000001                         ?_fputc 0003  
                       ?_fputs 000C                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70                         i2l2114 1E0A  
                       i2l2116 1E0E                         i2l2170 001A                         i2l2172 0028  
                       i2l2180 004C                         i2l2174 0036                         i2l2176 003C  
                       i2l2168 000A                         i2l2178 004A                      ??_HighISR 0003  
     __end_of_color_click_init 19C2                         _RX4PPS 000E15                         _TX4REG 000EE4  
                ??_Timer0_init 0003      color_processor_easy@color 0005                   vfprintf@cfmt 0059  
                    ??___aodiv 0013                      ??___aomod 0013                         clear_0 1CE4  
                       clear_1 1CF0                         isa$std 000001                         pad@buf 0015  
                       dtoa@fp 001E                         fputc@c 0003                         fputs@c 0010  
                       fputs@i 0011                         fputs@s 000C                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1BA2  
            ??_initDCmotorsPWM 0005                      ??_sprintf 005B                     __accesstop 0060  
      __end_of__initialization 1CFA       __end_of_color_read_Green 1B04         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0007                _Interrupts_init 1DE0  
               __pcstackCOMRAM 0001                  color_read@rgb 000E                  __end_of_fputc 178A  
                __end_of_fputs 1C2C                  __end_of_putch 1E16            __end_of_Timer0_init 1D9E  
                      ??_fputc 0007                        ??_fputs 0010                        ??_putch 0003  
                   __pbssBANK0 00C5                     __pbssBANK1 0100              _color_writetoaddr 1D5E  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0005                 main@color_flag 00AD  
               main@color_name 00AF            ??_color_writetoaddr 0006  __end_of_color_read_Luminosity 1AB4  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _PWM6DCH 000FA3  
                      _PWM7DCH 000FA0                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _color_read 1848        __end_of_Interrupts_init 1DEC         color_writetoaddr@value 0005  
             ??_color_read_Red 0009                        _HighISR 0008      __end_of_color_writetoaddr 1D7E  
     color_read_Luminosity@tmp 000C             _I2C_2_Master_Start 1E00                     _initUSART4 1D9E  
           _I2C_2_Master_Write 1DD4                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000C                    _Timer0_init 1D7E        sendStringSerial4@string 0004  
                      ___aodiv 1286                        ___aomod 140E            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                     _off_period 00C9                      ?_vfprintf 0053  
                 __psmallconst 0E00                        __pcinit 1CDE                        __ramtop 0E00  
                      __ptext0 108E                        __ptext1 19C2                        __ptext2 1B54  
                      __ptext3 1572                        __ptext4 0E12                        __ptext5 18EE  
                      __ptext6 1BE8                        __ptext7 16C0                        __ptext8 1E14  
                      __ptext9 1C6E                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005C                        _sprintf 19C2           ??_I2C_2_Master_Start 0004  
         ??_I2C_2_Master_Write 0004           end_of_initialization 1CFA                        fputc@fp 0005  
                      fputs@fp 000E              ?_color_click_init 0001   __end_of_color_processor_easy 1848  
           ??_color_click_init 0007              __end_of_vfpfcnvrt 16C0                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0049                     ??_vfprintf 0059                _initDCmotorsPWM 1BA2  
                    _PORTFbits 000F8E                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ?_color_read 000E       color_writetoaddr@address 0006  
      ??_I2C_2_Master_RepStart 0004               ?_Interrupts_init 0001                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0007                    ?_initUSART4 0001  
    sendCharSerial4@charToSend 0003             ??_color_read_Green 0009                    vfpfcnvrt@ap 0045  
                  vfpfcnvrt@cp 0051                    vfpfcnvrt@fp 0041            start_initialization 1CDE  
                  __end_of_abs 1CAE                    __end_of_pad 1968                  _TxBufWriteCnt 00CF  
          color_read_Green@tmp 000C        __end_of_initDCmotorsPWM 1BE8                    vfprintf@fmt 0055  
                  __pbssCOMRAM 005B           _color_processor_easy 178A                  __pcstackBANK0 0060  
             ___aodiv@dividend 0003             main@RGB_calibrated 00BD                       ?_HighISR 0001  
      color_processor_easy@rgb 0003          color_processor_easy@a 0009          color_processor_easy@b 000B  
        color_processor_easy@c 0007                      _dtoa$2118 0030                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___aodiv 0003                       ?___aomod 0003  
             ___aodiv@quotient 0015           I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006  
                  __smallconst 0E00              _I2C_2_Master_Idle 1D36          ?_color_processor_easy 0003  
             main@RGB_recorded 00B5              _I2C_2_Master_Init 1D0C              _I2C_2_Master_Read 1C2C  
            _I2C_2_Master_Stop 1DF6                   _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001          _color_read_Luminosity 1A64  
           ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0003                       ?_sprintf 0060  
            _sendStringSerial4 1CAE            ??_I2C_2_Master_Idle 0003            ??_I2C_2_Master_Init 0003  
          ??_I2C_2_Master_Read 0004            ??_I2C_2_Master_Stop 0004                       _LATCbits 000F7B  
                     _LATDbits 000F7C                       _LATEbits 000F7D                       _LATFbits 000F7E  
                    _on_period 00CB                       _LATGbits 000F7F                       _LATHbits 000F80  
                     _PIE0bits 000E29             ?_sendStringSerial4 0004                       i2u130_40 001A  
                     i2u130_41 0016                       i2u131_40 0028                       i2u131_41 0024  
                     _PIR0bits 000E33                       _PIR4bits 000E37               ?_initDCmotorsPWM 0003  
            ??_sendCharSerial4 0003                       _SSP2CON2 000EDA            ??_sendStringSerial4 0006  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 1572      __end_of_I2C_2_Master_Idle 1D5E  
    __end_of_I2C_2_Master_Init 1D36      __end_of_I2C_2_Master_Read 1C6E      __end_of_I2C_2_Master_Stop 1E00  
         write16bitTMR0val@tmp 0001    I2C_2_Master_Write@data_byte 0004              _write16bitTMR0val 1E0A  
            ??_color_read_Blue 0009                   _TxBufReadCnt 00CE             ?_write16bitTMR0val 0001  
                 ??_color_read 0010      __end_of_sendStringSerial4 1CDE  __end_of_I2C_2_Master_RepStart 1DF6  
           color_read_Blue@tmp 000C            ??_write16bitTMR0val 0003                   ??_initUSART4 0003  
                     __Hrparam 0000                     vfprintf@ap 0057                       __Lrparam 0000  
                   vfprintf@fp 0053                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0041  
           __end_of_color_read 18EE                ___aodiv@divisor 000B                ___aodiv@counter 0013  
    __end_of_write16bitTMR0val 1E14                     _ANSELDbits 000EA7         ??_color_processor_easy 0005  
                   _ANSELFbits 000EB4                     sprintf@fmt 0062                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6         ?_color_read_Luminosity 0007             __end_of_initUSART4 1DBC  
                     __ptext10 140E                       __ptext11 1286                       __ptext20 1B04  
                     __ptext12 1CAE                       __ptext21 1DEC                       __ptext13 1DBC  
                     __ptext30 1D0C                       __ptext22 1C2C                       __ptext14 1D9E  
                     __ptext31 1D7E                       __ptext23 178A                       __ptext15 1BA2  
                     __ptext32 1DE0                       __ptext24 1968                       __ptext16 1848  
                     __ptext25 1D5E                       __ptext17 1A14                       __ptext34 1E0A  
                     __ptext26 1DD4                       __ptext18 1A64                       __ptext27 1DF6  
                     __ptext19 1AB4                       __ptext28 1E00                       __ptext29 1D36  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005D                       _vfprintf 1B54  
                     main@home 00B1               ___aomod@dividend 0003                     _INTCONbits 000FF2  
                  _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1                       intlevel2 0000  
                    sprintf@ap 006C                ___aomod@divisor 000B                    ??_vfpfcnvrt 0047  
              ___aomod@counter 0013               _color_click_init 1968                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0014                _sendCharSerial4 1DBC  
                 ___aomod@sign 0014  
