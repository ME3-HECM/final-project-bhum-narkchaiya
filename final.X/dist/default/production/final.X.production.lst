

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 11 15:03:11 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Version 2.35
    69                           ; Generated 05/05/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F67K40 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     _TX4REG	set	3812
   104   000000                     _RC4STAbits	set	3815
   105   000000                     _SP4BRGH	set	3814
   106   000000                     _T0CON0bits	set	4053
   107   000000                     _T0CON1bits	set	4054
   108   000000                     _TMR0H	set	4052
   109   000000                     _TRISGbits	set	3975
   110   000000                     _TRISEbits	set	3973
   111   000000                     _LATFbits	set	3966
   112   000000                     _TRISFbits	set	3974
   113   000000                     _LATG	set	3967
   114   000000                     _LATE	set	3965
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _LATGbits	set	3967
   117   000000                     _LATEbits	set	3965
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _ANSELDbits	set	3751
   122   000000                     _ANSELFbits	set	3764
   123   000000                     _LATDbits	set	3964
   124   000000                     _LATHbits	set	3968
   125   000000                     _TRISDbits	set	3972
   126   000000                     _TRISHbits	set	3976
   127   000000                     _PORTFbits	set	3982
   128   000000                     _PWM7DCH	set	4000
   129   000000                     _PWM6DCH	set	4003
   130   000000                     _TRISCbits	set	3971
   131   000000                     _SSP2BUF	set	3797
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _RC4REG	set	3811
   135   000000                     _SP4BRGL	set	3813
   136   000000                     _TX4STAbits	set	3816
   137   000000                     _BAUD4CONbits	set	3817
   138   000000                     _LATCbits	set	3963
   139   000000                     _SSP2CON2	set	3802
   140   000000                     _SSP2STAT	set	3800
   141   000000                     _IPR0bits	set	3615
   142   000000                     _PIE0bits	set	3625
   143   000000                     _RC7PPS	set	3689
   144   000000                     _RD5PPS	set	3695
   145   000000                     _RE2PPS	set	3700
   146   000000                     _RD6PPS	set	3696
   147   000000                     _PWM6CONbits	set	4004
   148   000000                     _T2PR	set	4028
   149   000000                     _T2CONbits	set	4029
   150   000000                     _INTCONbits	set	4082
   151   000000                     _PWM7CONbits	set	4001
   152   000000                     _TMR0L	set	4051
   153   000000                     _T2CLKCONbits	set	4031
   154   000000                     _T2HLTbits	set	4030
   155   000000                     _PIE2bits	set	3627
   156   000000                     _PIR0bits	set	3635
   157   000000                     _IPR2bits	set	3617
   158   000000                     _PIR2bits	set	3637
   159   000000                     _PIR4bits	set	3639
   160   000000                     _RC0PPS	set	3682
   161                           
   162                           	psect	smallconst
   163   000E00                     __psmallconst:
   164                           	callstack 0
   165   000E00  00                 	db	0
   166   000E01                     STR_2:
   167                           
   168                           ; BSR set to: 14
   169   000E01  25                 	db	37
   170   000E02  64                 	db	100	;'d'
   171   000E03  20                 	db	32
   172   000E04  25                 	db	37
   173   000E05  64                 	db	100	;'d'
   174   000E06  20                 	db	32
   175   000E07  25                 	db	37
   176   000E08  64                 	db	100	;'d'
   177   000E09  20                 	db	32
   178   000E0A  25                 	db	37
   179   000E0B  64                 	db	100	;'d'
   180   000E0C  20                 	db	32
   181   000E0D  25                 	db	37
   182   000E0E  64                 	db	100	;'d'
   183   000E0F  20                 	db	32
   184   000E10  0D                 	db	13
   185   000E11  0A                 	db	10
   186   000E12  00                 	db	0
   187   000E13  00                 	db	0	; dummy byte at the end
   188   000000                     
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192   002850                     __pcinit:
   193                           	callstack 0
   194   002850                     start_initialization:
   195                           	callstack 0
   196   002850                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Clear objects allocated to BANK2 (152 bytes)
   200   002850  EE02  F000         	lfsr	0,__pbssBANK2
   201   002854  0E98               	movlw	152
   202   002856                     clear_0:
   203   002856  6AEE               	clrf	postinc0,c
   204   002858  06E8               	decf	wreg,f,c
   205   00285A  E1FD               	bnz	clear_0
   206                           
   207                           ; Clear objects allocated to BANK1 (28 bytes)
   208   00285C  EE01  F0DC         	lfsr	0,__pbssBANK1
   209   002860  0E1C               	movlw	28
   210   002862                     clear_1:
   211   002862  6AEE               	clrf	postinc0,c
   212   002864  06E8               	decf	wreg,f,c
   213   002866  E1FD               	bnz	clear_1
   214                           
   215                           ; Clear objects allocated to BANK0 (2 bytes)
   216   002868  0100               	movlb	0
   217   00286A  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   218   00286C  6BFD               	clrf	__pbssBANK0& (0+255),b
   219                           
   220                           ; Clear objects allocated to COMRAM (5 bytes)
   221   00286E  6A5D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   222   002870  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   223   002872  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   224   002874  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   225   002876  6A59               	clrf	__pbssCOMRAM& (0+255),c
   226   002878                     end_of_initialization:
   227                           	callstack 0
   228   002878                     __end_of__initialization:
   229                           	callstack 0
   230   002878  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   231   00287A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   232   00287C  0100               	movlb	0
   233   00287E  EFA4  F00D         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMRAM
   236   000059                     __pbssCOMRAM:
   237                           	callstack 0
   238   000059                     _flags:
   239                           	callstack 0
   240   000059                     	ds	1
   241   00005A                     _TxBufReadCnt:
   242                           	callstack 0
   243   00005A                     	ds	1
   244   00005B                     _TxBufWriteCnt:
   245                           	callstack 0
   246   00005B                     	ds	1
   247   00005C                     _RxBufReadCnt:
   248                           	callstack 0
   249   00005C                     	ds	1
   250   00005D                     _RxBufWriteCnt:
   251                           	callstack 0
   252   00005D                     	ds	1
   253                           
   254                           	psect	bssBANK0
   255   0000FD                     __pbssBANK0:
   256                           	callstack 0
   257   0000FD                     _prec:
   258                           	callstack 0
   259   0000FD                     	ds	2
   260                           
   261                           	psect	bssBANK1
   262   0001DC                     __pbssBANK1:
   263                           	callstack 0
   264   0001DC                     _EUSART4RXbuf:
   265                           	callstack 0
   266   0001DC                     	ds	20
   267   0001F0                     _width:
   268                           	callstack 0
   269   0001F0                     	ds	2
   270   0001F2                     _time:
   271                           	callstack 0
   272   0001F2                     	ds	2
   273   0001F4                     _off_period:
   274                           	callstack 0
   275   0001F4                     	ds	2
   276   0001F6                     _on_period:
   277                           	callstack 0
   278   0001F6                     	ds	2
   279                           
   280                           	psect	bssBANK2
   281   000200                     __pbssBANK2:
   282                           	callstack 0
   283   000200                     _EUSART4TXbuf:
   284                           	callstack 0
   285   000200                     	ds	60
   286   00023C                     	ds	30
   287   00025A                     	ds	30
   288   000278                     _dbuf:
   289                           	callstack 0
   290   000278                     	ds	32
   291                           
   292                           	psect	cstackBANK1
   293   000100                     __pcstackBANK1:
   294                           	callstack 0
   295   000100                     main@readout3:
   296                           	callstack 0
   297                           
   298                           ; 100 bytes @ 0x0
   299   000100                     	ds	100
   300   000164                     main@time_path:
   301                           	callstack 0
   302                           
   303                           ; 30 bytes @ 0x64
   304   000164                     	ds	30
   305   000182                     main@color_calibrated:
   306                           	callstack 0
   307                           
   308                           ; 64 bytes @ 0x82
   309   000182                     	ds	64
   310   0001C2                     main@RGB_calibrated:
   311                           	callstack 0
   312   0001C2                     main@RGB_recorded:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0xC2
   316   0001C2                     	ds	8
   317   0001CA                     main@motorR:
   318                           	callstack 0
   319                           
   320                           ; 9 bytes @ 0xCA
   321   0001CA                     	ds	9
   322   0001D3                     main@motorL:
   323                           	callstack 0
   324                           
   325                           ; 9 bytes @ 0xD3
   326   0001D3                     	ds	9
   327                           
   328                           	psect	cstackBANK0
   329   000060                     __pcstackBANK0:
   330                           	callstack 0
   331   000060                     ?_sprintf:
   332                           	callstack 0
   333   000060                     sprintf@s:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x0
   337   000060                     	ds	2
   338   000062                     sprintf@fmt:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x2
   342   000062                     	ds	12
   343   00006E                     sprintf@ap:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xE
   347   00006E                     	ds	2
   348   000070                     sprintf@f:
   349                           	callstack 0
   350                           
   351                           ; 11 bytes @ 0x10
   352   000070                     	ds	11
   353   00007B                     main@readout2:
   354                           	callstack 0
   355                           
   356                           ; 100 bytes @ 0x1B
   357   00007B                     	ds	100
   358   0000DF                     main@color_path:
   359                           	callstack 0
   360                           
   361                           ; 30 bytes @ 0x7F
   362   0000DF                     	ds	30
   363                           
   364                           	psect	cstackCOMRAM
   365   000001                     __pcstackCOMRAM:
   366                           	callstack 0
   367   000001                     ??_I2C_2_Master_Idle:
   368   000001                     ?_color_processor_easy:
   369                           	callstack 0
   370   000001                     ?_color_processor_hard:
   371                           	callstack 0
   372   000001                     ?___wmul:
   373                           	callstack 0
   374   000001                     ?___aodiv:
   375                           	callstack 0
   376   000001                     ?___aomod:
   377                           	callstack 0
   378   000001                     sendCharSerial4@charToSend:
   379                           	callstack 0
   380   000001                     color_processor_easy@rgb:
   381                           	callstack 0
   382   000001                     color_processor_hard@rgb:
   383                           	callstack 0
   384   000001                     initDCmotorsPWM@PWMperiod:
   385                           	callstack 0
   386   000001                     ___wmul@multiplier:
   387                           	callstack 0
   388   000001                     fputc@c:
   389                           	callstack 0
   390   000001                     ___aodiv@dividend:
   391                           	callstack 0
   392   000001                     ___aomod@dividend:
   393                           	callstack 0
   394                           
   395                           ; 8 bytes @ 0x0
   396   000001                     	ds	1
   397   000002                     ??_I2C_2_Master_Read:
   398   000002                     I2C_2_Master_Write@data_byte:
   399                           	callstack 0
   400   000002                     sendStringSerial4@string:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x1
   404   000002                     	ds	1
   405   000003                     color_writetoaddr@value:
   406                           	callstack 0
   407   000003                     I2C_2_Master_Read@ack:
   408                           	callstack 0
   409   000003                     color_processor_easy@color:
   410                           	callstack 0
   411   000003                     color_processor_hard@calibrated:
   412                           	callstack 0
   413   000003                     ___wmul@multiplicand:
   414                           	callstack 0
   415   000003                     fputc@fp:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419   000003                     	ds	1
   420   000004                     color_writetoaddr@address:
   421                           	callstack 0
   422   000004                     I2C_2_Master_Read@tmp:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x3
   426   000004                     	ds	1
   427   000005                     ??_fputc:
   428   000005                     ??_color_click_init:
   429   000005                     ??_color_processor_hard:
   430   000005                     ?_color_read_Luminosity:
   431                           	callstack 0
   432   000005                     ?_color_read_Red:
   433                           	callstack 0
   434   000005                     ?_color_read_Green:
   435                           	callstack 0
   436   000005                     ?_color_read_Blue:
   437                           	callstack 0
   438   000005                     color_processor_easy@c:
   439                           	callstack 0
   440   000005                     ___wmul@product:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x4
   444   000005                     	ds	2
   445   000007                     ??_color_read_Luminosity:
   446   000007                     ??_color_read_Red:
   447   000007                     ??_color_read_Green:
   448   000007                     ??_color_read_Blue:
   449   000007                     ?___awdiv:
   450                           	callstack 0
   451   000007                     color_processor_hard@condition_r:
   452                           	callstack 0
   453   000007                     color_processor_easy@a:
   454                           	callstack 0
   455   000007                     ___awdiv@dividend:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x6
   459   000007                     	ds	1
   460   000008                     color_processor_hard@condition_g:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x7
   464   000008                     	ds	1
   465   000009                     color_processor_hard@condition_b:
   466                           	callstack 0
   467   000009                     color_processor_easy@b:
   468                           	callstack 0
   469   000009                     ___awdiv@divisor:
   470                           	callstack 0
   471   000009                     ___aodiv@divisor:
   472                           	callstack 0
   473   000009                     ___aomod@divisor:
   474                           	callstack 0
   475                           
   476                           ; 8 bytes @ 0x8
   477   000009                     	ds	1
   478   00000A                     _color_processor_hard$370:
   479                           	callstack 0
   480   00000A                     color_read_Luminosity@tmp:
   481                           	callstack 0
   482   00000A                     color_read_Red@tmp:
   483                           	callstack 0
   484   00000A                     color_read_Green@tmp:
   485                           	callstack 0
   486   00000A                     color_read_Blue@tmp:
   487                           	callstack 0
   488   00000A                     fputs@s:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x9
   492   00000A                     	ds	1
   493   00000B                     _color_processor_hard$372:
   494                           	callstack 0
   495   00000B                     ___awdiv@counter:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xA
   499   00000B                     	ds	1
   500   00000C                     _color_processor_hard$374:
   501                           	callstack 0
   502   00000C                     ___awdiv@sign:
   503                           	callstack 0
   504   00000C                     color_read@rgb:
   505                           	callstack 0
   506   00000C                     fputs@fp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xB
   510   00000C                     	ds	1
   511   00000D                     color_processor_hard@r:
   512                           	callstack 0
   513   00000D                     ___awdiv@quotient:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xC
   517   00000D                     	ds	1
   518   00000E                     ??_color_read:
   519   00000E                     fputs@c:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0xD
   523   00000E                     	ds	1
   524   00000F                     color_processor_hard@g:
   525                           	callstack 0
   526   00000F                     setMotorPWM@m:
   527                           	callstack 0
   528   00000F                     fputs@i:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0xE
   532   00000F                     	ds	2
   533   000011                     ??_setMotorPWM:
   534   000011                     ___aodiv@counter:
   535                           	callstack 0
   536   000011                     ___aomod@counter:
   537                           	callstack 0
   538   000011                     color_processor_hard@b:
   539                           	callstack 0
   540   000011                     pad@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x10
   544   000011                     	ds	1
   545   000012                     ___aodiv@sign:
   546                           	callstack 0
   547   000012                     ___aomod@sign:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x11
   551   000012                     	ds	1
   552   000013                     ?_abs:
   553                           	callstack 0
   554   000013                     color_processor_hard@cr:
   555                           	callstack 0
   556   000013                     pad@buf:
   557                           	callstack 0
   558   000013                     abs@a:
   559                           	callstack 0
   560   000013                     ___aodiv@quotient:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x12
   564   000013                     	ds	2
   565   000015                     ??_abs:
   566   000015                     color_processor_hard@cg:
   567                           	callstack 0
   568   000015                     pad@p:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x14
   572   000015                     	ds	2
   573   000017                     ??_pad:
   574   000017                     color_processor_hard@cb:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x16
   578   000017                     	ds	1
   579   000018                     setMotorPWM@PWMduty:
   580                           	callstack 0
   581   000018                     pad@i:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x17
   585   000018                     	ds	2
   586   00001A                     stop@mL:
   587                           	callstack 0
   588   00001A                     forward@mL:
   589                           	callstack 0
   590   00001A                     reverse_fromcard@mL:
   591                           	callstack 0
   592   00001A                     reverse_onesquare@mL:
   593                           	callstack 0
   594   00001A                     right_90@mL:
   595                           	callstack 0
   596   00001A                     left_90@mL:
   597                           	callstack 0
   598   00001A                     spin_180@mL:
   599                           	callstack 0
   600   00001A                     right_135@mL:
   601                           	callstack 0
   602   00001A                     left_135@mL:
   603                           	callstack 0
   604   00001A                     pad@w:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x19
   608   00001A                     	ds	2
   609   00001C                     stop@mR:
   610                           	callstack 0
   611   00001C                     forward@mR:
   612                           	callstack 0
   613   00001C                     reverse_fromcard@mR:
   614                           	callstack 0
   615   00001C                     reverse_onesquare@mR:
   616                           	callstack 0
   617   00001C                     right_90@mR:
   618                           	callstack 0
   619   00001C                     left_90@mR:
   620                           	callstack 0
   621   00001C                     spin_180@mR:
   622                           	callstack 0
   623   00001C                     right_135@mR:
   624                           	callstack 0
   625   00001C                     left_135@mR:
   626                           	callstack 0
   627   00001C                     dtoa@fp:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x1B
   631   00001C                     	ds	2
   632   00001E                     ??_stop:
   633   00001E                     ??_spin_180:
   634   00001E                     ??_reverse_fromcard:
   635   00001E                     ??_reverse_onesquare:
   636   00001E                     ??_right_90:
   637   00001E                     ??_left_90:
   638   00001E                     ??_right_135:
   639   00001E                     ??_left_135:
   640   00001E                     forward@i:
   641                           	callstack 0
   642   00001E                     dtoa@d:
   643                           	callstack 0
   644                           
   645                           ; 8 bytes @ 0x1D
   646   00001E                     	ds	1
   647   00001F                     stop@i:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x1E
   651   00001F                     	ds	1
   652   000020                     reverse_fromcard@i:
   653                           	callstack 0
   654   000020                     reverse_onesquare@i:
   655                           	callstack 0
   656   000020                     right_90@i:
   657                           	callstack 0
   658   000020                     left_90@i:
   659                           	callstack 0
   660   000020                     spin_180@i:
   661                           	callstack 0
   662   000020                     right_135@i:
   663                           	callstack 0
   664   000020                     left_135@i:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x1F
   668   000020                     	ds	2
   669   000022                     motor_action@color:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x21
   673   000022                     	ds	2
   674   000024                     motor_action@l:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x23
   678   000024                     	ds	2
   679   000026                     ??_dtoa:
   680   000026                     motor_action@r:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x25
   684   000026                     	ds	2
   685   000028                     ??_motor_action:
   686                           
   687                           ; 1 bytes @ 0x27
   688   000028                     	ds	6
   689   00002E                     _dtoa$2419:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x2D
   693   00002E                     	ds	2
   694   000030                     dtoa@p:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x2F
   698   000030                     	ds	2
   699   000032                     dtoa@w:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x31
   703   000032                     	ds	2
   704   000034                     dtoa@n:
   705                           	callstack 0
   706                           
   707                           ; 8 bytes @ 0x33
   708   000034                     	ds	8
   709   00003C                     dtoa@i:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x3B
   713   00003C                     	ds	2
   714   00003E                     dtoa@s:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x3D
   718   00003E                     	ds	1
   719   00003F                     vfpfcnvrt@fp:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x3E
   723   00003F                     	ds	2
   724   000041                     vfpfcnvrt@fmt:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x40
   728   000041                     	ds	2
   729   000043                     vfpfcnvrt@ap:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x42
   733   000043                     	ds	2
   734   000045                     ??_vfpfcnvrt:
   735                           
   736                           ; 1 bytes @ 0x44
   737   000045                     	ds	2
   738   000047                     vfpfcnvrt@convarg:
   739                           	callstack 0
   740                           
   741                           ; 8 bytes @ 0x46
   742   000047                     	ds	8
   743   00004F                     vfpfcnvrt@cp:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x4E
   747   00004F                     	ds	2
   748   000051                     ?_vfprintf:
   749                           	callstack 0
   750   000051                     vfprintf@fp:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x50
   754   000051                     	ds	2
   755   000053                     vfprintf@fmt:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x52
   759   000053                     	ds	2
   760   000055                     vfprintf@ap:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x54
   764   000055                     	ds	2
   765   000057                     vfprintf@cfmt:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x56
   769   000057                     	ds	2
   770   000059                     
   771                           ; 1 bytes @ 0x58
   772 ;;
   773 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   774 ;;
   775 ;; *************** function _main *****************
   776 ;; Defined at:
   777 ;;		line 20 in file "../main.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  readout3      100    0[BANK1 ] unsigned char [100]
   782 ;;  readout2      100   27[BANK0 ] unsigned char [100]
   783 ;;  k               2    0        int 
   784 ;;  i               2    0        int 
   785 ;;  color_calibr   64  130[BANK1 ] int [32]
   786 ;;  time_path      30  100[BANK1 ] unsigned int [15]
   787 ;;  color_path     30  127[BANK0 ] unsigned int [15]
   788 ;;  motorL          9  211[BANK1 ] struct DC_motor
   789 ;;  motorR          9  202[BANK1 ] struct DC_motor
   790 ;;  RGB_recorded    8  194[BANK1 ] struct RGB_val
   791 ;;  RGB_calibrat    8  194[BANK1 ] struct RGB_val
   792 ;;  L_calibrated    8    0        struct RGB_val
   793 ;;  color_name      2    0        unsigned int 
   794 ;;  j               2    0        int 
   795 ;;  time_return     2    0        unsigned int 
   796 ;;  color_flag      2    0        unsigned int 
   797 ;;  upperbound_c    2    0        unsigned int 
   798 ;;  lowerbound_c    2    0        unsigned int 
   799 ;;  PWMcycle        1    0        unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   810 ;;      Locals:         0     130     220       0       0       0       0       0       0       0       0       0       
      +0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   812 ;;      Totals:         0     130     220       0       0       0       0       0       0       0       0       0       
      +0       0       0
   813 ;;Total ram usage:      350 bytes
   814 ;; Hardware stack levels required when called: 9
   815 ;; This function calls:
   816 ;;		_I2C_2_Master_Init
   817 ;;		_Interrupts_init
   818 ;;		_Timer0_init
   819 ;;		_color_click_init
   820 ;;		_color_processor_easy
   821 ;;		_color_processor_hard
   822 ;;		_color_read
   823 ;;		_forward
   824 ;;		_initDCmotorsPWM
   825 ;;		_initUSART4
   826 ;;		_motor_action
   827 ;;		_sendStringSerial4
   828 ;;		_setMotorPWM
   829 ;;		_spin_180
   830 ;;		_sprintf
   831 ;;		_stop
   832 ;; This function is called by:
   833 ;;		Startup code after reset
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text0
   838   001B48                     __ptext0:
   839                           	callstack 0
   840   001B48                     _main:
   841                           	callstack 22
   842   001B48                     
   843                           ;../main.c: 22:     color_click_init();
   844   001B48  EC85  F012         	call	_color_click_init	;wreg free
   845   001B4C                     
   846                           ;../main.c: 23:     initDCmotorsPWM(20);
   847   001B4C  0E00               	movlw	0
   848   001B4E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   849   001B50  0E14               	movlw	20
   850   001B52  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   851   001B54  ECC6  F013         	call	_initDCmotorsPWM	;wreg free
   852   001B58                     
   853                           ;../main.c: 24:     Interrupts_init();
   854   001B58  ECD0  F014         	call	_Interrupts_init	;wreg free
   855   001B5C                     
   856                           ;../main.c: 25:     Timer0_init();
   857   001B5C  ECA5  F014         	call	_Timer0_init	;wreg free
   858   001B60                     
   859                           ;../main.c: 26:     I2C_2_Master_Init();
   860   001B60  EC59  F014         	call	_I2C_2_Master_Init	;wreg free
   861   001B64                     
   862                           ;../main.c: 27:     initUSART4();
   863   001B64  ECB5  F014         	call	_initUSART4	;wreg free
   864   001B68                     
   865                           ;../main.c: 32:     motorL.power = 0;
   866   001B68  0E00               	movlw	0
   867   001B6A  0101               	movlb	1	; () banked
   868   001B6C  6FD3               	movwf	main@motorL& (0+255),b
   869   001B6E                     
   870                           ; BSR set to: 1
   871                           ;../main.c: 33:     motorL.direction = 0;
   872   001B6E  0E00               	movlw	0
   873   001B70  6FD4               	movwf	(main@motorL+1)& (0+255),b
   874   001B72                     
   875                           ; BSR set to: 1
   876                           ;../main.c: 34:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   877   001B72  0EA3               	movlw	163
   878   001B74  6FD5               	movwf	(main@motorL+2)& (0+255),b
   879   001B76  0E0F               	movlw	15
   880   001B78  6FD6               	movwf	(main@motorL+3)& (0+255),b
   881   001B7A                     
   882                           ; BSR set to: 1
   883                           ;../main.c: 35:     motorL.dir_LAT = (unsigned char *)(&LATE);
   884   001B7A  0E7D               	movlw	125
   885   001B7C  6FD7               	movwf	(main@motorL+4)& (0+255),b
   886   001B7E  0E0F               	movlw	15
   887   001B80  6FD8               	movwf	(main@motorL+5)& (0+255),b
   888   001B82                     
   889                           ; BSR set to: 1
   890                           ;../main.c: 36:     motorL.dir_pin = 4;
   891   001B82  0E04               	movlw	4
   892   001B84  6FD9               	movwf	(main@motorL+6)& (0+255),b
   893   001B86                     
   894                           ; BSR set to: 1
   895                           ;../main.c: 37:     motorL.PWMperiod = PWMcycle;
   896   001B86  0E00               	movlw	0
   897   001B88  6FDB               	movwf	(main@motorL+8)& (0+255),b
   898   001B8A  0EC8               	movlw	200
   899   001B8C  6FDA               	movwf	(main@motorL+7)& (0+255),b
   900   001B8E                     
   901                           ; BSR set to: 1
   902                           ;../main.c: 38:     motorR.power = 0;
   903   001B8E  0E00               	movlw	0
   904   001B90  6FCA               	movwf	main@motorR& (0+255),b
   905   001B92                     
   906                           ; BSR set to: 1
   907                           ;../main.c: 39:     motorR.direction = 0;
   908   001B92  0E00               	movlw	0
   909   001B94  6FCB               	movwf	(main@motorR+1)& (0+255),b
   910                           
   911                           ;../main.c: 40:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   912   001B96  0EA0               	movlw	160
   913   001B98  6FCC               	movwf	(main@motorR+2)& (0+255),b
   914   001B9A  0E0F               	movlw	15
   915   001B9C  6FCD               	movwf	(main@motorR+3)& (0+255),b
   916                           
   917                           ;../main.c: 41:     motorR.dir_LAT = (unsigned char *)(&LATG);
   918   001B9E  0E7F               	movlw	127
   919   001BA0  6FCE               	movwf	(main@motorR+4)& (0+255),b
   920   001BA2  0E0F               	movlw	15
   921   001BA4  6FCF               	movwf	(main@motorR+5)& (0+255),b
   922   001BA6                     
   923                           ; BSR set to: 1
   924                           ;../main.c: 42:     motorR.dir_pin = 6;
   925   001BA6  0E06               	movlw	6
   926   001BA8  6FD0               	movwf	(main@motorR+6)& (0+255),b
   927   001BAA                     
   928                           ; BSR set to: 1
   929                           ;../main.c: 43:     motorR.PWMperiod = PWMcycle;
   930   001BAA  0E00               	movlw	0
   931   001BAC  6FD2               	movwf	(main@motorR+8)& (0+255),b
   932   001BAE  0EC8               	movlw	200
   933   001BB0  6FD1               	movwf	(main@motorR+7)& (0+255),b
   934   001BB2                     
   935                           ; BSR set to: 1
   936                           ;../main.c: 44:     setMotorPWM(&motorL);
   937   001BB2  0ED3               	movlw	low main@motorL
   938   001BB4  6E0F               	movwf	setMotorPWM@m^0,c
   939   001BB6  0E01               	movlw	high main@motorL
   940   001BB8  6E10               	movwf	(setMotorPWM@m+1)^0,c
   941   001BBA  EC94  F00A         	call	_setMotorPWM	;wreg free
   942   001BBE                     
   943                           ;../main.c: 45:     setMotorPWM(&motorR);
   944   001BBE  0ECA               	movlw	low main@motorR
   945   001BC0  6E0F               	movwf	setMotorPWM@m^0,c
   946   001BC2  0E01               	movlw	high main@motorR
   947   001BC4  6E10               	movwf	(setMotorPWM@m+1)^0,c
   948   001BC6  EC94  F00A         	call	_setMotorPWM	;wreg free
   949   001BCA                     
   950                           ;../main.c: 50:     unsigned int color_path[15] = {0};
   951   001BCA  EE20  F0DF         	lfsr	2,main@color_path
   952   001BCE  0E1D               	movlw	29
   953   001BD0                     u1651:
   954   001BD0  6ADE               	clrf	postinc2,c
   955   001BD2  06E8               	decf	wreg,f,c
   956   001BD4  E2FD               	bc	u1651
   957   001BD6                     
   958                           ;../main.c: 51:     int color_calibrated[32];;../main.c: 52:     unsigned int lowerbound
      +                          _calibrated;;../main.c: 53:     unsigned int upperbound_calibrated;;../main.c: 54:     s
      +                          truct RGB_val RGB_calibrated;;../main.c: 55:     struct RGB_val L_calibrated;;../main.c:
      +                           56:     struct RGB_val RGB_recorded;;../main.c: 57:     unsigned int time_path[15] = {0
      +                          };
   959   001BD6  EE21  F064         	lfsr	2,main@time_path
   960   001BDA  0E1D               	movlw	29
   961   001BDC                     u1661:
   962   001BDC  6ADE               	clrf	postinc2,c
   963   001BDE  06E8               	decf	wreg,f,c
   964   001BE0  E2FD               	bc	u1661
   965   001BE2                     l197:
   966   001BE2  B68E               	btfsc	142,3,c	;volatile
   967   001BE4  EFF6  F00D         	goto	u1671
   968   001BE8  EFF8  F00D         	goto	u1670
   969   001BEC                     u1671:
   970   001BEC  EFF1  F00D         	goto	l197
   971   001BF0                     u1670:
   972   001BF0                     
   973                           ;../main.c: 64:         motor_action(1,&motorL,&motorR);
   974   001BF0  0E00               	movlw	0
   975   001BF2  6E23               	movwf	(motor_action@color+1)^0,c
   976   001BF4  0E01               	movlw	1
   977   001BF6  6E22               	movwf	motor_action@color^0,c
   978   001BF8  0ED3               	movlw	low main@motorL
   979   001BFA  6E24               	movwf	motor_action@l^0,c
   980   001BFC  0E01               	movlw	high main@motorL
   981   001BFE  6E25               	movwf	(motor_action@l+1)^0,c
   982   001C00  0ECA               	movlw	low main@motorR
   983   001C02  6E26               	movwf	motor_action@r^0,c
   984   001C04  0E01               	movlw	high main@motorR
   985   001C06  6E27               	movwf	(motor_action@r+1)^0,c
   986   001C08  EC0A  F007         	call	_motor_action	;wreg free
   987   001C0C  EFF1  F00D         	goto	l197
   988   001C10  EF1F  F000         	goto	start
   989   001C14                     __end_of_main:
   990                           	callstack 0
   991                           
   992 ;; *************** function _sprintf *****************
   993 ;; Defined at:
   994 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  s               2    0[BANK0 ] PTR unsigned char 
   997 ;;		 -> main@readout3(100), main@readout2(100), 
   998 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   999 ;;		 -> STR_2(18), STR_1(15), 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  f              11   16[BANK0 ] struct _IO_FILE
  1002 ;;  ap              2   14[BANK0 ] PTR void [1]
  1003 ;;		 -> ?_sprintf(2), 
  1004 ;;  ret             2    0        int 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2    0[BANK0 ] int 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1014 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;Total ram usage:       27 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 8
  1021 ;; This function calls:
  1022 ;;		_vfprintf
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text1
  1029   002564                     __ptext1:
  1030                           	callstack 0
  1031   002564                     _sprintf:
  1032                           	callstack 22
  1033   002564  0E64               	movlw	low (?_sprintf+4)
  1034   002566  0100               	movlb	0	; () banked
  1035   002568  6F6E               	movwf	sprintf@ap& (0+255),b
  1036   00256A  0E00               	movlw	high (?_sprintf+4)
  1037   00256C  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  1038   00256E  C060  F070         	movff	sprintf@s,sprintf@f
  1039   002572  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  1040   002576                     
  1041                           ; BSR set to: 0
  1042   002576  0E00               	movlw	0
  1043   002578  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1044   00257A  0E00               	movlw	0
  1045   00257C  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1046   00257E                     
  1047                           ; BSR set to: 0
  1048   00257E  0E00               	movlw	0
  1049   002580  6F7A               	movwf	(sprintf@f+10)& (0+255),b
  1050   002582  0E00               	movlw	0
  1051   002584  6F79               	movwf	(sprintf@f+9)& (0+255),b
  1052   002586                     
  1053                           ; BSR set to: 0
  1054   002586  0E70               	movlw	low sprintf@f
  1055   002588  6E51               	movwf	vfprintf@fp^0,c
  1056   00258A  0E00               	movlw	high sprintf@f
  1057   00258C  6E52               	movwf	(vfprintf@fp+1)^0,c
  1058   00258E  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1059   002592  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1060   002596  0E6E               	movlw	low sprintf@ap
  1061   002598  6E55               	movwf	vfprintf@ap^0,c
  1062   00259A  0E00               	movlw	high sprintf@ap
  1063   00259C  6E56               	movwf	(vfprintf@ap+1)^0,c
  1064   00259E  ECDB  F012         	call	_vfprintf	;wreg free
  1065   0025A2  0100               	movlb	0	; () banked
  1066   0025A4  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1067   0025A6  2560               	addwf	sprintf@s& (0+255),w,b
  1068   0025A8  6ED9               	movwf	fsr2l,c
  1069   0025AA  5174               	movf	(sprintf@f+4)& (0+255),w,b
  1070   0025AC  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1071   0025AE  6EDA               	movwf	fsr2h,c
  1072   0025B0  0E00               	movlw	0
  1073   0025B2  6EDF               	movwf	indf2,c
  1074   0025B4                     
  1075                           ; BSR set to: 0
  1076   0025B4  0012               	return		;funcret
  1077   0025B6                     __end_of_sprintf:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _vfprintf *****************
  1081 ;; Defined at:
  1082 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1085 ;;		 -> sprintf@f(11), 
  1086 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1087 ;;		 -> STR_2(18), STR_1(15), 
  1088 ;;  ap              2   84[COMRAM] PTR PTR void 
  1089 ;;		 -> sprintf@ap(2), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1092 ;;		 -> STR_2(18), STR_1(15), 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  2   80[COMRAM] int 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1102 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;Total ram usage:        8 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 7
  1109 ;; This function calls:
  1110 ;;		_vfpfcnvrt
  1111 ;; This function is called by:
  1112 ;;		_sprintf
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text2
  1117   0025B6                     __ptext2:
  1118                           	callstack 0
  1119   0025B6                     _vfprintf:
  1120                           	callstack 22
  1121   0025B6                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1123   0025B6  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1124   0025BA  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1125                           
  1126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1127   0025BE  EFEF  F012         	goto	l2812
  1128   0025C2                     l2810:
  1129                           
  1130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1131   0025C2  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1132   0025C6  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1133   0025CA  0E57               	movlw	low vfprintf@cfmt
  1134   0025CC  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1135   0025CE  0E00               	movlw	high vfprintf@cfmt
  1136   0025D0  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1137   0025D2  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1138   0025D6  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1139   0025DA  ECF4  F00C         	call	_vfpfcnvrt	;wreg free
  1140   0025DE                     l2812:
  1141                           
  1142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1143   0025DE  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1144   0025E2  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1145   0025E6                     	if	0	;tblptru may be non-zero
  1146   0025E6                     	endif
  1147   0025E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1148   0025E6  0E00               	movlw	low (__mediumconst shr (0+16))
  1149   0025E8  6EF8               	movwf	tblptru,c
  1150   0025EA                     	endif
  1151   0025EA  0008               	tblrd		*
  1152   0025EC  50F5               	movf	tablat,w,c
  1153   0025EE  0900               	iorlw	0
  1154   0025F0  A4D8               	btfss	status,2,c
  1155   0025F2  EFFD  F012         	goto	u1441
  1156   0025F6  EFFF  F012         	goto	u1440
  1157   0025FA                     u1441:
  1158   0025FA  EFE1  F012         	goto	l2810
  1159   0025FE                     u1440:
  1160   0025FE                     
  1161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1162   0025FE  0E00               	movlw	0
  1163   002600  6E52               	movwf	(?_vfprintf+1)^0,c
  1164   002602  0E00               	movlw	0
  1165   002604  6E51               	movwf	?_vfprintf^0,c
  1166   002606  0012               	return		;funcret
  1167   002608                     __end_of_vfprintf:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _vfpfcnvrt *****************
  1171 ;; Defined at:
  1172 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1175 ;;		 -> sprintf@f(11), 
  1176 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1177 ;;		 -> vfprintf@cfmt(2), 
  1178 ;;  ap              2   66[COMRAM] PTR PTR void 
  1179 ;;		 -> sprintf@ap(2), 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  convarg         8   70[COMRAM] struct .
  1182 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1183 ;;		 -> STR_2(18), STR_1(15), 
  1184 ;;  i               2    0        int 
  1185 ;;  done            2    0        int 
  1186 ;;  c               1    0        unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1196 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;Total ram usage:       18 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 6
  1203 ;; This function calls:
  1204 ;;		_dtoa
  1205 ;;		_fputc
  1206 ;; This function is called by:
  1207 ;;		_vfprintf
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text3
  1212   0019E8                     __ptext3:
  1213                           	callstack 0
  1214   0019E8                     _vfpfcnvrt:
  1215                           	callstack 22
  1216   0019E8                     
  1217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1218   0019E8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1219   0019EC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1220   0019F0  CFDE FFF6          	movff	postinc2,tblptrl
  1221   0019F4  CFDD FFF7          	movff	postdec2,tblptrh
  1222   0019F8                     	if	0	;tblptru may be non-zero
  1223   0019F8                     	endif
  1224   0019F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1225   0019F8  0E00               	movlw	low (__mediumconst shr (0+16))
  1226   0019FA  6EF8               	movwf	tblptru,c
  1227   0019FC                     	endif
  1228   0019FC  0008               	tblrd		*
  1229   0019FE  50F5               	movf	tablat,w,c
  1230   001A00  0A25               	xorlw	37
  1231   001A02  A4D8               	btfss	status,2,c
  1232   001A04  EF06  F00D         	goto	u1311
  1233   001A08  EF08  F00D         	goto	u1310
  1234   001A0C                     u1311:
  1235   001A0C  EF8D  F00D         	goto	l2556
  1236   001A10                     u1310:
  1237   001A10                     
  1238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1239   001A10  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1240   001A14  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1241   001A18  2ADE               	incf	postinc2,f,c
  1242   001A1A  0E00               	movlw	0
  1243   001A1C  22DD               	addwfc	postdec2,f,c
  1244   001A1E                     
  1245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1246   001A1E  0E00               	movlw	0
  1247   001A20  0101               	movlb	1	; () banked
  1248   001A22  6FF1               	movwf	(_width+1)& (0+255),b
  1249   001A24  0E00               	movlw	0
  1250   001A26  6FF0               	movwf	_width& (0+255),b
  1251   001A28  C1F0  F059         	movff	_width,_flags
  1252   001A2C                     
  1253                           ; BSR set to: 1
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1255   001A2C  0100               	movlb	0	; () banked
  1256   001A2E  69FD               	setf	_prec& (0+255),b
  1257   001A30  69FE               	setf	(_prec+1)& (0+255),b
  1258   001A32                     
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1261   001A32  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1262   001A36  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1263   001A3A  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1264   001A3E  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1265   001A42                     
  1266                           ; BSR set to: 0
  1267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1268   001A42  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1269   001A46  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1270   001A4A                     	if	0	;tblptru may be non-zero
  1271   001A4A                     	endif
  1272   001A4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1273   001A4A  0E00               	movlw	low (__mediumconst shr (0+16))
  1274   001A4C  6EF8               	movwf	tblptru,c
  1275   001A4E                     	endif
  1276   001A4E  0008               	tblrd		*
  1277   001A50  50F5               	movf	tablat,w,c
  1278   001A52  0A64               	xorlw	100
  1279   001A54  B4D8               	btfsc	status,2,c
  1280   001A56  EF2F  F00D         	goto	u1321
  1281   001A5A  EF31  F00D         	goto	u1320
  1282   001A5E                     u1321:
  1283   001A5E  EF41  F00D         	goto	l2546
  1284   001A62                     u1320:
  1285   001A62                     
  1286                           ; BSR set to: 0
  1287   001A62  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1288   001A66  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1289   001A6A                     	if	0	;tblptru may be non-zero
  1290   001A6A                     	endif
  1291   001A6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1292   001A6A  0E00               	movlw	low (__mediumconst shr (0+16))
  1293   001A6C  6EF8               	movwf	tblptru,c
  1294   001A6E                     	endif
  1295   001A6E  0008               	tblrd		*
  1296   001A70  50F5               	movf	tablat,w,c
  1297   001A72  0A69               	xorlw	105
  1298   001A74  A4D8               	btfss	status,2,c
  1299   001A76  EF3F  F00D         	goto	u1331
  1300   001A7A  EF41  F00D         	goto	u1330
  1301   001A7E                     u1331:
  1302   001A7E  EF84  F00D         	goto	l2552
  1303   001A82                     u1330:
  1304   001A82                     l2546:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1308   001A82  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1309   001A86  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1310   001A8A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1311   001A8E  0E02               	movlw	2
  1312   001A90  26DE               	addwf	postinc2,f,c
  1313   001A92  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1314   001A96  0E00               	movlw	0
  1315   001A98  22DD               	addwfc	postdec2,f,c
  1316   001A9A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1317   001A9E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1318   001AA2  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1319   001AA6  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1320   001AAA  0E00               	movlw	0
  1321   001AAC  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1322   001AAE  0EFF               	movlw	-1
  1323   001AB0  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1324   001AB2  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1325   001AB4  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1326   001AB6  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1327   001AB8  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1328   001ABA  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1331   001ABC  0E01               	movlw	1
  1332   001ABE  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1333   001AC0  6E45               	movwf	??_vfpfcnvrt^0,c
  1334   001AC2  0E00               	movlw	0
  1335   001AC4  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1336   001AC6  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1337   001AC8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1338   001ACC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1339   001AD0  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1340   001AD4  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1341   001AD8                     
  1342                           ; BSR set to: 0
  1343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1344   001AD8  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1345   001ADC  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1346   001AE0  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1347   001AE4  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1348   001AE8  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1349   001AEC  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1350   001AF0  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1351   001AF4  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1352   001AF8  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1353   001AFC  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1354   001B00  EC63  F008         	call	_dtoa	;wreg free
  1355   001B04  EFA3  F00D         	goto	l1182
  1356   001B08                     l2552:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1359   001B08  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1360   001B0C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1361   001B10  2ADE               	incf	postinc2,f,c
  1362   001B12  0E00               	movlw	0
  1363   001B14  22DD               	addwfc	postdec2,f,c
  1364   001B16  EFA3  F00D         	goto	l1182
  1365   001B1A                     l2556:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1368   001B1A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1369   001B1E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1370   001B22  CFDE FFF6          	movff	postinc2,tblptrl
  1371   001B26  CFDD FFF7          	movff	postdec2,tblptrh
  1372   001B2A                     	if	0	;tblptru may be non-zero
  1373   001B2A                     	endif
  1374   001B2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1375   001B2A  0E00               	movlw	low (__mediumconst shr (0+16))
  1376   001B2C  6EF8               	movwf	tblptru,c
  1377   001B2E                     	endif
  1378   001B2E  0008               	tblrd		*
  1379   001B30  50F5               	movf	tablat,w,c
  1380   001B32  6E01               	movwf	fputc@c^0,c
  1381   001B34  6A02               	clrf	(fputc@c+1)^0,c
  1382   001B36  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1383   001B3A  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1384   001B3E  EC0A  F00E         	call	_fputc	;wreg free
  1385   001B42  EF84  F00D         	goto	l2552
  1386   001B46                     l1182:
  1387   001B46  0012               	return		;funcret
  1388   001B48                     __end_of_vfpfcnvrt:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _dtoa *****************
  1392 ;; Defined at:
  1393 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1396 ;;		 -> sprintf@f(11), 
  1397 ;;  d               8   29[COMRAM] long long 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  n               8   51[COMRAM] long long 
  1400 ;;  i               2   59[COMRAM] int 
  1401 ;;  w               2   49[COMRAM] int 
  1402 ;;  p               2   47[COMRAM] int 
  1403 ;;  s               1   61[COMRAM] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1413 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1414 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1415 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1416 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;Total ram usage:       35 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 5
  1420 ;; This function calls:
  1421 ;;		___aodiv
  1422 ;;		___aomod
  1423 ;;		_abs
  1424 ;;		_pad
  1425 ;; This function is called by:
  1426 ;;		_vfpfcnvrt
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text4
  1431   0010C6                     __ptext4:
  1432                           	callstack 0
  1433   0010C6                     _dtoa:
  1434                           	callstack 22
  1435   0010C6                     
  1436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1437   0010C6  C01E  F034         	movff	dtoa@d,dtoa@n
  1438   0010CA  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1439   0010CE  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1440   0010D2  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1441   0010D6  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1442   0010DA  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1443   0010DE  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1444   0010E2  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1445   0010E6                     
  1446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1447   0010E6  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1448   0010E8  EF78  F008         	goto	u1151
  1449   0010EC  EF7B  F008         	goto	u1150
  1450   0010F0                     u1151:
  1451   0010F0  0E01               	movlw	1
  1452   0010F2  EF7C  F008         	goto	u1160
  1453   0010F6                     u1150:
  1454   0010F6  0E00               	movlw	0
  1455   0010F8                     u1160:
  1456   0010F8  6E3E               	movwf	dtoa@s^0,c
  1457   0010FA                     
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1459   0010FA  503E               	movf	dtoa@s^0,w,c
  1460   0010FC  B4D8               	btfsc	status,2,c
  1461   0010FE  EF83  F008         	goto	u1171
  1462   001102  EF85  F008         	goto	u1170
  1463   001106                     u1171:
  1464   001106  EF95  F008         	goto	l2444
  1465   00110A                     u1170:
  1466   00110A                     
  1467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1468   00110A  1E3B               	comf	(dtoa@n+7)^0,f,c
  1469   00110C  1E3A               	comf	(dtoa@n+6)^0,f,c
  1470   00110E  1E39               	comf	(dtoa@n+5)^0,f,c
  1471   001110  1E38               	comf	(dtoa@n+4)^0,f,c
  1472   001112  1E37               	comf	(dtoa@n+3)^0,f,c
  1473   001114  1E36               	comf	(dtoa@n+2)^0,f,c
  1474   001116  1E35               	comf	(dtoa@n+1)^0,f,c
  1475   001118  6C34               	negf	dtoa@n^0,c
  1476   00111A  0E00               	movlw	0
  1477   00111C  2235               	addwfc	(dtoa@n+1)^0,f,c
  1478   00111E  2236               	addwfc	(dtoa@n+2)^0,f,c
  1479   001120  2237               	addwfc	(dtoa@n+3)^0,f,c
  1480   001122  2238               	addwfc	(dtoa@n+4)^0,f,c
  1481   001124  2239               	addwfc	(dtoa@n+5)^0,f,c
  1482   001126  223A               	addwfc	(dtoa@n+6)^0,f,c
  1483   001128  223B               	addwfc	(dtoa@n+7)^0,f,c
  1484   00112A                     l2444:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1487   00112A  0100               	movlb	0	; () banked
  1488   00112C  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  1489   00112E  EFA3  F008         	goto	u1180
  1490   001132  51FE               	movf	(_prec+1)& (0+255),w,b
  1491   001134  E106               	bnz	u1181
  1492   001136  05FD               	decf	_prec& (0+255),w,b
  1493   001138  B0D8               	btfsc	status,0,c
  1494   00113A  EFA1  F008         	goto	u1181
  1495   00113E  EFA3  F008         	goto	u1180
  1496   001142                     u1181:
  1497   001142  EFA9  F008         	goto	l1161
  1498   001146                     u1180:
  1499   001146                     
  1500                           ; BSR set to: 0
  1501   001146  0E00               	movlw	0
  1502   001148  6E31               	movwf	(dtoa@p+1)^0,c
  1503   00114A  0E01               	movlw	1
  1504   00114C  6E30               	movwf	dtoa@p^0,c
  1505   00114E  EFAD  F008         	goto	l1163
  1506   001152                     l1161:
  1507                           
  1508                           ; BSR set to: 0
  1509   001152  C0FD  F030         	movff	_prec,dtoa@p
  1510   001156  C0FE  F031         	movff	_prec+1,dtoa@p+1
  1511   00115A                     l1163:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1515   00115A  C1F0  F032         	movff	_width,dtoa@w
  1516   00115E  C1F1  F033         	movff	_width+1,dtoa@w+1
  1517   001162                     
  1518                           ; BSR set to: 0
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1520   001162  503E               	movf	dtoa@s^0,w,c
  1521   001164  B4D8               	btfsc	status,2,c
  1522   001166  EFB7  F008         	goto	u1191
  1523   00116A  EFB9  F008         	goto	u1190
  1524   00116E                     u1191:
  1525   00116E  EFD0  F008         	goto	l1164
  1526   001172                     u1190:
  1527   001172                     
  1528                           ; BSR set to: 0
  1529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1530   001172  0632               	decf	dtoa@w^0,f,c
  1531   001174  A0D8               	btfss	status,0,c
  1532   001176  0633               	decf	(dtoa@w+1)^0,f,c
  1533   001178                     
  1534                           ; BSR set to: 0
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1536   001178  503E               	movf	dtoa@s^0,w,c
  1537   00117A  A4D8               	btfss	status,2,c
  1538   00117C  EFC2  F008         	goto	u1201
  1539   001180  EFC4  F008         	goto	u1200
  1540   001184                     u1201:
  1541   001184  EFCA  F008         	goto	l2456
  1542   001188                     u1200:
  1543   001188                     
  1544                           ; BSR set to: 0
  1545   001188  0E00               	movlw	0
  1546   00118A  6E2F               	movwf	(_dtoa$2419+1)^0,c
  1547   00118C  0E2B               	movlw	43
  1548   00118E  6E2E               	movwf	_dtoa$2419^0,c
  1549   001190  EFCE  F008         	goto	l2458
  1550   001194                     l2456:
  1551                           
  1552                           ; BSR set to: 0
  1553   001194  0E00               	movlw	0
  1554   001196  6E2F               	movwf	(_dtoa$2419+1)^0,c
  1555   001198  0E2D               	movlw	45
  1556   00119A  6E2E               	movwf	_dtoa$2419^0,c
  1557   00119C                     l2458:
  1558                           
  1559                           ; BSR set to: 0
  1560   00119C  C02E  F03E         	movff	_dtoa$2419,dtoa@s
  1561   0011A0                     l1164:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1565   0011A0  0E00               	movlw	0
  1566   0011A2  6E3D               	movwf	(dtoa@i+1)^0,c
  1567   0011A4  0E1F               	movlw	31
  1568   0011A6  6E3C               	movwf	dtoa@i^0,c
  1569   0011A8                     
  1570                           ; BSR set to: 0
  1571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1572   0011A8  0E00               	movlw	0
  1573   0011AA  0102               	movlb	2	; () banked
  1574   0011AC  6F97               	movwf	(_dbuf+31)& (0+255),b
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1577   0011AE  EF55  F009         	goto	l2472
  1578   0011B2                     l2462:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1581   0011B2  063C               	decf	dtoa@i^0,f,c
  1582   0011B4  A0D8               	btfss	status,0,c
  1583   0011B6  063D               	decf	(dtoa@i+1)^0,f,c
  1584   0011B8                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1586   0011B8  0E78               	movlw	low _dbuf
  1587   0011BA  243C               	addwf	dtoa@i^0,w,c
  1588   0011BC  6ED9               	movwf	fsr2l,c
  1589   0011BE  0E02               	movlw	high _dbuf
  1590   0011C0  203D               	addwfc	(dtoa@i+1)^0,w,c
  1591   0011C2  6EDA               	movwf	fsr2h,c
  1592   0011C4  C034  F001         	movff	dtoa@n,___aomod@dividend
  1593   0011C8  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1594   0011CC  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1595   0011D0  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1596   0011D4  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1597   0011D8  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1598   0011DC  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1599   0011E0  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1600   0011E4  0E0A               	movlw	10
  1601   0011E6  6E09               	movwf	___aomod@divisor^0,c
  1602   0011E8  0E00               	movlw	0
  1603   0011EA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1604   0011EC  0E00               	movlw	0
  1605   0011EE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1606   0011F0  0E00               	movlw	0
  1607   0011F2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1608   0011F4  0E00               	movlw	0
  1609   0011F6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1610   0011F8  0E00               	movlw	0
  1611   0011FA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1612   0011FC  0E00               	movlw	0
  1613   0011FE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1614   001200  0E00               	movlw	0
  1615   001202  6E10               	movwf	(___aomod@divisor+7)^0,c
  1616   001204  EC42  F00C         	call	___aomod	;wreg free
  1617   001208  C001  F026         	movff	?___aomod,??_dtoa
  1618   00120C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1619   001210  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1620   001214  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1621   001218  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1622   00121C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1623   001220  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1624   001224  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1625   001228  C026  F013         	movff	??_dtoa,abs@a
  1626   00122C  C027  F014         	movff	??_dtoa+1,abs@a+1
  1627   001230  EC08  F014         	call	_abs	;wreg free
  1628   001234  5013               	movf	?_abs^0,w,c
  1629   001236  0F30               	addlw	48
  1630   001238  6EDF               	movwf	indf2,c
  1631   00123A                     
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1633   00123A  0630               	decf	dtoa@p^0,f,c
  1634   00123C  A0D8               	btfss	status,0,c
  1635   00123E  0631               	decf	(dtoa@p+1)^0,f,c
  1636   001240                     
  1637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1638   001240  0632               	decf	dtoa@w^0,f,c
  1639   001242  A0D8               	btfss	status,0,c
  1640   001244  0633               	decf	(dtoa@w+1)^0,f,c
  1641   001246                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1643   001246  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1644   00124A  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1645   00124E  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1646   001252  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1647   001256  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1648   00125A  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1649   00125E  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1650   001262  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1651   001266  0E0A               	movlw	10
  1652   001268  6E09               	movwf	___aodiv@divisor^0,c
  1653   00126A  0E00               	movlw	0
  1654   00126C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1655   00126E  0E00               	movlw	0
  1656   001270  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1657   001272  0E00               	movlw	0
  1658   001274  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1659   001276  0E00               	movlw	0
  1660   001278  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1661   00127A  0E00               	movlw	0
  1662   00127C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1663   00127E  0E00               	movlw	0
  1664   001280  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1665   001282  0E00               	movlw	0
  1666   001284  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1667   001286  EC7E  F00B         	call	___aodiv	;wreg free
  1668   00128A  C001  F034         	movff	?___aodiv,dtoa@n
  1669   00128E  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1670   001292  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1671   001296  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1672   00129A  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1673   00129E  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1674   0012A2  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1675   0012A6  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1676   0012AA                     l2472:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1679   0012AA  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1680   0012AC  EF60  F009         	goto	u1211
  1681   0012B0  503D               	movf	(dtoa@i+1)^0,w,c
  1682   0012B2  E108               	bnz	u1210
  1683   0012B4  043C               	decf	dtoa@i^0,w,c
  1684   0012B6  A0D8               	btfss	status,0,c
  1685   0012B8  EF60  F009         	goto	u1211
  1686   0012BC  EF62  F009         	goto	u1210
  1687   0012C0                     u1211:
  1688   0012C0  EF7E  F009         	goto	l2478
  1689   0012C4                     u1210:
  1690   0012C4  5034               	movf	dtoa@n^0,w,c
  1691   0012C6  1035               	iorwf	(dtoa@n+1)^0,w,c
  1692   0012C8  1036               	iorwf	(dtoa@n+2)^0,w,c
  1693   0012CA  1037               	iorwf	(dtoa@n+3)^0,w,c
  1694   0012CC  1038               	iorwf	(dtoa@n+4)^0,w,c
  1695   0012CE  1039               	iorwf	(dtoa@n+5)^0,w,c
  1696   0012D0  103A               	iorwf	(dtoa@n+6)^0,w,c
  1697   0012D2  103B               	iorwf	(dtoa@n+7)^0,w,c
  1698   0012D4  A4D8               	btfss	status,2,c
  1699   0012D6  EF6F  F009         	goto	u1221
  1700   0012DA  EF71  F009         	goto	u1220
  1701   0012DE                     u1221:
  1702   0012DE  EFD9  F008         	goto	l2462
  1703   0012E2                     u1220:
  1704   0012E2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1705   0012E4  EF7E  F009         	goto	u1230
  1706   0012E8  5031               	movf	(dtoa@p+1)^0,w,c
  1707   0012EA  E106               	bnz	u1231
  1708   0012EC  0430               	decf	dtoa@p^0,w,c
  1709   0012EE  B0D8               	btfsc	status,0,c
  1710   0012F0  EF7C  F009         	goto	u1231
  1711   0012F4  EF7E  F009         	goto	u1230
  1712   0012F8                     u1231:
  1713   0012F8  EFD9  F008         	goto	l2462
  1714   0012FC                     u1230:
  1715   0012FC                     l2478:
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1718   0012FC  503E               	movf	dtoa@s^0,w,c
  1719   0012FE  B4D8               	btfsc	status,2,c
  1720   001300  EF84  F009         	goto	u1241
  1721   001304  EF86  F009         	goto	u1240
  1722   001308                     u1241:
  1723   001308  EF91  F009         	goto	l2484
  1724   00130C                     u1240:
  1725   00130C                     
  1726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1727   00130C  063C               	decf	dtoa@i^0,f,c
  1728   00130E  A0D8               	btfss	status,0,c
  1729   001310  063D               	decf	(dtoa@i+1)^0,f,c
  1730   001312                     
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1732   001312  0E78               	movlw	low _dbuf
  1733   001314  243C               	addwf	dtoa@i^0,w,c
  1734   001316  6ED9               	movwf	fsr2l,c
  1735   001318  0E02               	movlw	high _dbuf
  1736   00131A  203D               	addwfc	(dtoa@i+1)^0,w,c
  1737   00131C  6EDA               	movwf	fsr2h,c
  1738   00131E  C03E  FFDF         	movff	dtoa@s,indf2
  1739   001322                     l2484:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1742   001322  C01C  F011         	movff	dtoa@fp,pad@fp
  1743   001326  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1744   00132A  0E78               	movlw	low _dbuf
  1745   00132C  243C               	addwf	dtoa@i^0,w,c
  1746   00132E  6E13               	movwf	pad@buf^0,c
  1747   001330  0E02               	movlw	high _dbuf
  1748   001332  203D               	addwfc	(dtoa@i+1)^0,w,c
  1749   001334  6E14               	movwf	(pad@buf+1)^0,c
  1750   001336  C032  F015         	movff	dtoa@w,pad@p
  1751   00133A  C033  F016         	movff	dtoa@w+1,pad@p+1
  1752   00133E  EC48  F012         	call	_pad	;wreg free
  1753   001342  0012               	return		;funcret
  1754   001344                     __end_of_dtoa:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _pad *****************
  1758 ;; Defined at:
  1759 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1762 ;;		 -> sprintf@f(11), 
  1763 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1764 ;;		 -> dbuf(32), 
  1765 ;;  p               2   20[COMRAM] int 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  w               2   25[COMRAM] int 
  1768 ;;  i               2   23[COMRAM] int 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1778 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;Total ram usage:       11 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 4
  1785 ;; This function calls:
  1786 ;;		_fputc
  1787 ;;		_fputs
  1788 ;; This function is called by:
  1789 ;;		_dtoa
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text5
  1794   002490                     __ptext5:
  1795                           	callstack 0
  1796   002490                     _pad:
  1797                           	callstack 22
  1798   002490                     
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1800   002490  BE16               	btfsc	(pad@p+1)^0,7,c
  1801   002492  EF4D  F012         	goto	u1041
  1802   002496  EF4F  F012         	goto	u1040
  1803   00249A                     u1041:
  1804   00249A  EF55  F012         	goto	l2368
  1805   00249E                     u1040:
  1806   00249E  C015  F01A         	movff	pad@p,pad@w
  1807   0024A2  C016  F01B         	movff	pad@p+1,pad@w+1
  1808   0024A6  EF59  F012         	goto	l1152
  1809   0024AA                     l2368:
  1810   0024AA  0E00               	movlw	0
  1811   0024AC  6E1B               	movwf	(pad@w+1)^0,c
  1812   0024AE  0E00               	movlw	0
  1813   0024B0  6E1A               	movwf	pad@w^0,c
  1814   0024B2                     l1152:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1817   0024B2  0E00               	movlw	0
  1818   0024B4  6E19               	movwf	(pad@i+1)^0,c
  1819   0024B6  0E00               	movlw	0
  1820   0024B8  6E18               	movwf	pad@i^0,c
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1823   0024BA  EF6B  F012         	goto	l2374
  1824   0024BE                     l2370:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1827   0024BE  0E00               	movlw	0
  1828   0024C0  6E02               	movwf	(fputc@c+1)^0,c
  1829   0024C2  0E20               	movlw	32
  1830   0024C4  6E01               	movwf	fputc@c^0,c
  1831   0024C6  C011  F003         	movff	pad@fp,fputc@fp
  1832   0024CA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1833   0024CE  EC0A  F00E         	call	_fputc	;wreg free
  1834   0024D2                     
  1835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1836   0024D2  4A18               	infsnz	pad@i^0,f,c
  1837   0024D4  2A19               	incf	(pad@i+1)^0,f,c
  1838   0024D6                     l2374:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1841   0024D6  501A               	movf	pad@w^0,w,c
  1842   0024D8  5C18               	subwf	pad@i^0,w,c
  1843   0024DA  5019               	movf	(pad@i+1)^0,w,c
  1844   0024DC  0A80               	xorlw	128
  1845   0024DE  6E17               	movwf	??_pad^0,c
  1846   0024E0  501B               	movf	(pad@w+1)^0,w,c
  1847   0024E2  0A80               	xorlw	128
  1848   0024E4  5817               	subwfb	??_pad^0,w,c
  1849   0024E6  A0D8               	btfss	status,0,c
  1850   0024E8  EF78  F012         	goto	u1051
  1851   0024EC  EF7A  F012         	goto	u1050
  1852   0024F0                     u1051:
  1853   0024F0  EF5F  F012         	goto	l2370
  1854   0024F4                     u1050:
  1855   0024F4                     
  1856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1857   0024F4  C013  F00A         	movff	pad@buf,fputs@s
  1858   0024F8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1859   0024FC  C011  F00C         	movff	pad@fp,fputs@fp
  1860   002500  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1861   002504  ECA4  F013         	call	_fputs	;wreg free
  1862   002508  0012               	return		;funcret
  1863   00250A                     __end_of_pad:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _fputs *****************
  1867 ;; Defined at:
  1868 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1871 ;;		 -> dbuf(32), 
  1872 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1873 ;;		 -> sprintf@f(11), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  i               2   14[COMRAM] int 
  1876 ;;  c               1   13[COMRAM] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  2    9[COMRAM] int 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1889 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1890 ;;Total ram usage:        7 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 3
  1893 ;; This function calls:
  1894 ;;		_fputc
  1895 ;; This function is called by:
  1896 ;;		_pad
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text6
  1901   002748                     __ptext6:
  1902                           	callstack 0
  1903   002748                     _fputs:
  1904                           	callstack 22
  1905   002748  0E00               	movlw	0
  1906   00274A  6E10               	movwf	(fputs@i+1)^0,c
  1907   00274C  0E00               	movlw	0
  1908   00274E  6E0F               	movwf	fputs@i^0,c
  1909   002750  EFB5  F013         	goto	l2282
  1910   002754                     l2278:
  1911   002754  C00E  F001         	movff	fputs@c,fputc@c
  1912   002758  6A02               	clrf	(fputc@c+1)^0,c
  1913   00275A  C00C  F003         	movff	fputs@fp,fputc@fp
  1914   00275E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1915   002762  EC0A  F00E         	call	_fputc	;wreg free
  1916   002766  4A0F               	infsnz	fputs@i^0,f,c
  1917   002768  2A10               	incf	(fputs@i+1)^0,f,c
  1918   00276A                     l2282:
  1919   00276A  500F               	movf	fputs@i^0,w,c
  1920   00276C  240A               	addwf	fputs@s^0,w,c
  1921   00276E  6ED9               	movwf	fsr2l,c
  1922   002770  5010               	movf	(fputs@i+1)^0,w,c
  1923   002772  200B               	addwfc	(fputs@s+1)^0,w,c
  1924   002774  6EDA               	movwf	fsr2h,c
  1925   002776  50DF               	movf	indf2,w,c
  1926   002778  6E0E               	movwf	fputs@c^0,c
  1927   00277A  500E               	movf	fputs@c^0,w,c
  1928   00277C  A4D8               	btfss	status,2,c
  1929   00277E  EFC3  F013         	goto	u901
  1930   002782  EFC5  F013         	goto	u900
  1931   002786                     u901:
  1932   002786  EFAA  F013         	goto	l2278
  1933   00278A                     u900:
  1934   00278A  0012               	return		;funcret
  1935   00278C                     __end_of_fputs:
  1936                           	callstack 0
  1937                           
  1938 ;; *************** function _fputc *****************
  1939 ;; Defined at:
  1940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  c               2    0[COMRAM] int 
  1943 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1944 ;;		 -> sprintf@f(11), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  2    0[COMRAM] int 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;Total ram usage:        9 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 2
  1963 ;; This function calls:
  1964 ;;		_putch
  1965 ;; This function is called by:
  1966 ;;		_pad
  1967 ;;		_vfpfcnvrt
  1968 ;;		_fputs
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text7
  1973   001C14                     __ptext7:
  1974                           	callstack 0
  1975   001C14                     _fputc:
  1976                           	callstack 25
  1977   001C14  5003               	movf	fputc@fp^0,w,c
  1978   001C16  1004               	iorwf	(fputc@fp+1)^0,w,c
  1979   001C18  B4D8               	btfsc	status,2,c
  1980   001C1A  EF11  F00E         	goto	u861
  1981   001C1E  EF13  F00E         	goto	u860
  1982   001C22                     u861:
  1983   001C22  EF1C  F00E         	goto	l2266
  1984   001C26                     u860:
  1985   001C26  5003               	movf	fputc@fp^0,w,c
  1986   001C28  1004               	iorwf	(fputc@fp+1)^0,w,c
  1987   001C2A  A4D8               	btfss	status,2,c
  1988   001C2C  EF1A  F00E         	goto	u871
  1989   001C30  EF1C  F00E         	goto	u870
  1990   001C34                     u871:
  1991   001C34  EF21  F00E         	goto	l2268
  1992   001C38                     u870:
  1993   001C38                     l2266:
  1994   001C38  5001               	movf	fputc@c^0,w,c
  1995   001C3A  ECF0  F014         	call	_putch
  1996   001C3E  EF6E  F00E         	goto	l1207
  1997   001C42                     l2268:
  1998   001C42  EE20 F009          	lfsr	2,9
  1999   001C46  5003               	movf	fputc@fp^0,w,c
  2000   001C48  26D9               	addwf	fsr2l,f,c
  2001   001C4A  5004               	movf	(fputc@fp+1)^0,w,c
  2002   001C4C  22DA               	addwfc	fsr2h,f,c
  2003   001C4E  50DE               	movf	postinc2,w,c
  2004   001C50  10DE               	iorwf	postinc2,w,c
  2005   001C52  B4D8               	btfsc	status,2,c
  2006   001C54  EF2E  F00E         	goto	u881
  2007   001C58  EF30  F00E         	goto	u880
  2008   001C5C                     u881:
  2009   001C5C  EF4B  F00E         	goto	l2272
  2010   001C60                     u880:
  2011   001C60  EE20 F009          	lfsr	2,9
  2012   001C64  5003               	movf	fputc@fp^0,w,c
  2013   001C66  26D9               	addwf	fsr2l,f,c
  2014   001C68  5004               	movf	(fputc@fp+1)^0,w,c
  2015   001C6A  22DA               	addwfc	fsr2h,f,c
  2016   001C6C  EE10 F003          	lfsr	1,3
  2017   001C70  5003               	movf	fputc@fp^0,w,c
  2018   001C72  26E1               	addwf	fsr1l,f,c
  2019   001C74  5004               	movf	(fputc@fp+1)^0,w,c
  2020   001C76  22E2               	addwfc	fsr1h,f,c
  2021   001C78  50DE               	movf	postinc2,w,c
  2022   001C7A  5CE6               	subwf	postinc1,w,c
  2023   001C7C  50E6               	movf	postinc1,w,c
  2024   001C7E  0A80               	xorlw	128
  2025   001C80  6E09               	movwf	(??_fputc+4)^0,c
  2026   001C82  50DE               	movf	postinc2,w,c
  2027   001C84  0A80               	xorlw	128
  2028   001C86  5809               	subwfb	(??_fputc+4)^0,w,c
  2029   001C88  B0D8               	btfsc	status,0,c
  2030   001C8A  EF49  F00E         	goto	u891
  2031   001C8E  EF4B  F00E         	goto	u890
  2032   001C92                     u891:
  2033   001C92  EF6E  F00E         	goto	l1207
  2034   001C96                     u890:
  2035   001C96                     l2272:
  2036   001C96  EE20 F003          	lfsr	2,3
  2037   001C9A  5003               	movf	fputc@fp^0,w,c
  2038   001C9C  26D9               	addwf	fsr2l,f,c
  2039   001C9E  5004               	movf	(fputc@fp+1)^0,w,c
  2040   001CA0  22DA               	addwfc	fsr2h,f,c
  2041   001CA2  CFDE F005          	movff	postinc2,??_fputc
  2042   001CA6  CFDD F006          	movff	postdec2,??_fputc+1
  2043   001CAA  C003  FFD9         	movff	fputc@fp,fsr2l
  2044   001CAE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2045   001CB2  CFDE F007          	movff	postinc2,??_fputc+2
  2046   001CB6  CFDD F008          	movff	postdec2,??_fputc+3
  2047   001CBA  5005               	movf	??_fputc^0,w,c
  2048   001CBC  2407               	addwf	(??_fputc+2)^0,w,c
  2049   001CBE  6ED9               	movwf	fsr2l,c
  2050   001CC0  5006               	movf	(??_fputc+1)^0,w,c
  2051   001CC2  2008               	addwfc	(??_fputc+3)^0,w,c
  2052   001CC4  6EDA               	movwf	fsr2h,c
  2053   001CC6  C001  FFDF         	movff	fputc@c,indf2
  2054   001CCA  EE20 F003          	lfsr	2,3
  2055   001CCE  5003               	movf	fputc@fp^0,w,c
  2056   001CD0  26D9               	addwf	fsr2l,f,c
  2057   001CD2  5004               	movf	(fputc@fp+1)^0,w,c
  2058   001CD4  22DA               	addwfc	fsr2h,f,c
  2059   001CD6  2ADE               	incf	postinc2,f,c
  2060   001CD8  0E00               	movlw	0
  2061   001CDA  22DD               	addwfc	postdec2,f,c
  2062   001CDC                     l1207:
  2063   001CDC  0012               	return		;funcret
  2064   001CDE                     __end_of_fputc:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _putch *****************
  2068 ;; Defined at:
  2069 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  c               1    wreg     unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  c               1    0[COMRAM] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_fputc
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text8
  2098   0029E0                     __ptext8:
  2099                           	callstack 0
  2100   0029E0                     _putch:
  2101                           	callstack 25
  2102   0029E0  0012               	return		;funcret
  2103   0029E2                     __end_of_putch:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _abs *****************
  2107 ;; Defined at:
  2108 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  a               2   18[COMRAM] int 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2   18[COMRAM] int 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;Total ram usage:        4 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_dtoa
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text9
  2137   002810                     __ptext9:
  2138                           	callstack 0
  2139   002810                     _abs:
  2140                           	callstack 25
  2141   002810  BE14               	btfsc	(abs@a+1)^0,7,c
  2142   002812  EF15  F014         	goto	u1060
  2143   002816  5014               	movf	(abs@a+1)^0,w,c
  2144   002818  E106               	bnz	u1061
  2145   00281A  0413               	decf	abs@a^0,w,c
  2146   00281C  B0D8               	btfsc	status,0,c
  2147   00281E  EF13  F014         	goto	u1061
  2148   002822  EF15  F014         	goto	u1060
  2149   002826                     u1061:
  2150   002826  EF23  F014         	goto	l1192
  2151   00282A                     u1060:
  2152   00282A  C013  F015         	movff	abs@a,??_abs
  2153   00282E  C014  F016         	movff	abs@a+1,??_abs+1
  2154   002832  1E15               	comf	??_abs^0,f,c
  2155   002834  1E16               	comf	(??_abs+1)^0,f,c
  2156   002836  4A15               	infsnz	??_abs^0,f,c
  2157   002838  2A16               	incf	(??_abs+1)^0,f,c
  2158   00283A  C015  F013         	movff	??_abs,?_abs
  2159   00283E  C016  F014         	movff	??_abs+1,?_abs+1
  2160   002842  EF27  F014         	goto	l1195
  2161   002846                     l1192:
  2162   002846  C013  F013         	movff	abs@a,?_abs
  2163   00284A  C014  F014         	movff	abs@a+1,?_abs+1
  2164   00284E                     l1195:
  2165   00284E  0012               	return		;funcret
  2166   002850                     __end_of_abs:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function ___aomod *****************
  2170 ;; Defined at:
  2171 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  dividend        8    0[COMRAM] long long 
  2174 ;;  divisor         8    8[COMRAM] long long 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  sign            1   17[COMRAM] unsigned char 
  2177 ;;  counter         1   16[COMRAM] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  8    0[COMRAM] long long 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2187 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;Total ram usage:       18 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_dtoa
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text10
  2202   001884                     __ptext10:
  2203                           	callstack 0
  2204   001884                     ___aomod:
  2205                           	callstack 25
  2206   001884  0E00               	movlw	0
  2207   001886  6E12               	movwf	___aomod@sign^0,c
  2208   001888  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2209   00188A  EF4B  F00C         	goto	u980
  2210   00188E  EF49  F00C         	goto	u981
  2211   001892                     u981:
  2212   001892  EF5D  F00C         	goto	l2336
  2213   001896                     u980:
  2214   001896  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2215   001898  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2216   00189A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2217   00189C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2218   00189E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2219   0018A0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2220   0018A2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2221   0018A4  6C01               	negf	___aomod@dividend^0,c
  2222   0018A6  0E00               	movlw	0
  2223   0018A8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2224   0018AA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2225   0018AC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2226   0018AE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2227   0018B0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2228   0018B2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2229   0018B4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2230   0018B6  0E01               	movlw	1
  2231   0018B8  6E12               	movwf	___aomod@sign^0,c
  2232   0018BA                     l2336:
  2233   0018BA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2234   0018BC  EF64  F00C         	goto	u990
  2235   0018C0  EF62  F00C         	goto	u991
  2236   0018C4                     u991:
  2237   0018C4  EF74  F00C         	goto	l2340
  2238   0018C8                     u990:
  2239   0018C8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2240   0018CA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2241   0018CC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2242   0018CE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2243   0018D0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2244   0018D2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2245   0018D4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2246   0018D6  6C09               	negf	___aomod@divisor^0,c
  2247   0018D8  0E00               	movlw	0
  2248   0018DA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2249   0018DC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2250   0018DE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2251   0018E0  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2252   0018E2  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2253   0018E4  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2254   0018E6  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2255   0018E8                     l2340:
  2256   0018E8  5009               	movf	___aomod@divisor^0,w,c
  2257   0018EA  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2258   0018EC  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2259   0018EE  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2260   0018F0  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2261   0018F2  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2262   0018F4  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2263   0018F6  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2264   0018F8  B4D8               	btfsc	status,2,c
  2265   0018FA  EF81  F00C         	goto	u1001
  2266   0018FE  EF83  F00C         	goto	u1000
  2267   001902                     u1001:
  2268   001902  EFCB  F00C         	goto	l2356
  2269   001906                     u1000:
  2270   001906  0E01               	movlw	1
  2271   001908  6E11               	movwf	___aomod@counter^0,c
  2272   00190A  EF91  F00C         	goto	l2346
  2273   00190E                     l2344:
  2274   00190E  90D8               	bcf	status,0,c
  2275   001910  3609               	rlcf	___aomod@divisor^0,f,c
  2276   001912  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2277   001914  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2278   001916  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2279   001918  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2280   00191A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2281   00191C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2282   00191E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2283   001920  2A11               	incf	___aomod@counter^0,f,c
  2284   001922                     l2346:
  2285   001922  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2286   001924  EF96  F00C         	goto	u1011
  2287   001928  EF98  F00C         	goto	u1010
  2288   00192C                     u1011:
  2289   00192C  EF87  F00C         	goto	l2344
  2290   001930                     u1010:
  2291   001930                     l2348:
  2292   001930  5009               	movf	___aomod@divisor^0,w,c
  2293   001932  5C01               	subwf	___aomod@dividend^0,w,c
  2294   001934  500A               	movf	(___aomod@divisor+1)^0,w,c
  2295   001936  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2296   001938  500B               	movf	(___aomod@divisor+2)^0,w,c
  2297   00193A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2298   00193C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2299   00193E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2300   001940  500D               	movf	(___aomod@divisor+4)^0,w,c
  2301   001942  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2302   001944  500E               	movf	(___aomod@divisor+5)^0,w,c
  2303   001946  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2304   001948  500F               	movf	(___aomod@divisor+6)^0,w,c
  2305   00194A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2306   00194C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2307   00194E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2308   001950  A0D8               	btfss	status,0,c
  2309   001952  EFAD  F00C         	goto	u1021
  2310   001956  EFAF  F00C         	goto	u1020
  2311   00195A                     u1021:
  2312   00195A  EFBF  F00C         	goto	l2352
  2313   00195E                     u1020:
  2314   00195E  5009               	movf	___aomod@divisor^0,w,c
  2315   001960  5E01               	subwf	___aomod@dividend^0,f,c
  2316   001962  500A               	movf	(___aomod@divisor+1)^0,w,c
  2317   001964  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2318   001966  500B               	movf	(___aomod@divisor+2)^0,w,c
  2319   001968  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2320   00196A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2321   00196C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2322   00196E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2323   001970  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2324   001972  500E               	movf	(___aomod@divisor+5)^0,w,c
  2325   001974  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2326   001976  500F               	movf	(___aomod@divisor+6)^0,w,c
  2327   001978  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2328   00197A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2329   00197C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2330   00197E                     l2352:
  2331   00197E  90D8               	bcf	status,0,c
  2332   001980  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2333   001982  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2334   001984  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2335   001986  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2336   001988  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2337   00198A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2338   00198C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2339   00198E  3209               	rrcf	___aomod@divisor^0,f,c
  2340   001990  2E11               	decfsz	___aomod@counter^0,f,c
  2341   001992  EF98  F00C         	goto	l2348
  2342   001996                     l2356:
  2343   001996  5012               	movf	___aomod@sign^0,w,c
  2344   001998  B4D8               	btfsc	status,2,c
  2345   00199A  EFD1  F00C         	goto	u1031
  2346   00199E  EFD3  F00C         	goto	u1030
  2347   0019A2                     u1031:
  2348   0019A2  EFE3  F00C         	goto	l2360
  2349   0019A6                     u1030:
  2350   0019A6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2351   0019A8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2352   0019AA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2353   0019AC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2354   0019AE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2355   0019B0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2356   0019B2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2357   0019B4  6C01               	negf	___aomod@dividend^0,c
  2358   0019B6  0E00               	movlw	0
  2359   0019B8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2360   0019BA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2361   0019BC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2362   0019BE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2363   0019C0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2364   0019C2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2365   0019C4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2366   0019C6                     l2360:
  2367   0019C6  C001  F001         	movff	___aomod@dividend,?___aomod
  2368   0019CA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2369   0019CE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2370   0019D2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2371   0019D6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2372   0019DA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2373   0019DE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2374   0019E2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2375   0019E6  0012               	return		;funcret
  2376   0019E8                     __end_of___aomod:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function ___aodiv *****************
  2380 ;; Defined at:
  2381 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  dividend        8    0[COMRAM] long long 
  2384 ;;  divisor         8    8[COMRAM] long long 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  quotient        8   18[COMRAM] long long 
  2387 ;;  sign            1   17[COMRAM] unsigned char 
  2388 ;;  counter         1   16[COMRAM] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  8    0[COMRAM] long long 
  2391 ;; Registers used:
  2392 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2398 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;Total ram usage:       26 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_dtoa
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text11
  2413   0016FC                     __ptext11:
  2414                           	callstack 0
  2415   0016FC                     ___aodiv:
  2416                           	callstack 25
  2417   0016FC  0E00               	movlw	0
  2418   0016FE  6E12               	movwf	___aodiv@sign^0,c
  2419   001700  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2420   001702  EF87  F00B         	goto	u910
  2421   001706  EF85  F00B         	goto	u911
  2422   00170A                     u911:
  2423   00170A  EF99  F00B         	goto	l2292
  2424   00170E                     u910:
  2425   00170E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2426   001710  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2427   001712  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2428   001714  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2429   001716  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2430   001718  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2431   00171A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2432   00171C  6C09               	negf	___aodiv@divisor^0,c
  2433   00171E  0E00               	movlw	0
  2434   001720  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2435   001722  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2436   001724  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2437   001726  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2438   001728  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2439   00172A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2440   00172C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2441   00172E  0E01               	movlw	1
  2442   001730  6E12               	movwf	___aodiv@sign^0,c
  2443   001732                     l2292:
  2444   001732  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2445   001734  EFA0  F00B         	goto	u920
  2446   001738  EF9E  F00B         	goto	u921
  2447   00173C                     u921:
  2448   00173C  EFB2  F00B         	goto	l2298
  2449   001740                     u920:
  2450   001740  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2451   001742  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2452   001744  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2453   001746  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2454   001748  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2455   00174A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2456   00174C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2457   00174E  6C01               	negf	___aodiv@dividend^0,c
  2458   001750  0E00               	movlw	0
  2459   001752  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2460   001754  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2461   001756  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2462   001758  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2463   00175A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2464   00175C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2465   00175E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2466   001760  0E01               	movlw	1
  2467   001762  1A12               	xorwf	___aodiv@sign^0,f,c
  2468   001764                     l2298:
  2469   001764  EE20  F013         	lfsr	2,___aodiv@quotient
  2470   001768  0E07               	movlw	7
  2471   00176A                     u931:
  2472   00176A  6ADE               	clrf	postinc2,c
  2473   00176C  06E8               	decf	wreg,f,c
  2474   00176E  E2FD               	bc	u931
  2475   001770  5009               	movf	___aodiv@divisor^0,w,c
  2476   001772  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2477   001774  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2478   001776  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2479   001778  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2480   00177A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2481   00177C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2482   00177E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2483   001780  B4D8               	btfsc	status,2,c
  2484   001782  EFC5  F00B         	goto	u941
  2485   001786  EFC7  F00B         	goto	u940
  2486   00178A                     u941:
  2487   00178A  EF19  F00C         	goto	l2320
  2488   00178E                     u940:
  2489   00178E  0E01               	movlw	1
  2490   001790  6E11               	movwf	___aodiv@counter^0,c
  2491   001792  EFD5  F00B         	goto	l2306
  2492   001796                     l2304:
  2493   001796  90D8               	bcf	status,0,c
  2494   001798  3609               	rlcf	___aodiv@divisor^0,f,c
  2495   00179A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2496   00179C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2497   00179E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2498   0017A0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2499   0017A2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2500   0017A4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2501   0017A6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2502   0017A8  2A11               	incf	___aodiv@counter^0,f,c
  2503   0017AA                     l2306:
  2504   0017AA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2505   0017AC  EFDA  F00B         	goto	u951
  2506   0017B0  EFDC  F00B         	goto	u950
  2507   0017B4                     u951:
  2508   0017B4  EFCB  F00B         	goto	l2304
  2509   0017B8                     u950:
  2510   0017B8                     l2308:
  2511   0017B8  90D8               	bcf	status,0,c
  2512   0017BA  3613               	rlcf	___aodiv@quotient^0,f,c
  2513   0017BC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2514   0017BE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2515   0017C0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2516   0017C2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2517   0017C4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2518   0017C6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2519   0017C8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2520   0017CA  5009               	movf	___aodiv@divisor^0,w,c
  2521   0017CC  5C01               	subwf	___aodiv@dividend^0,w,c
  2522   0017CE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2523   0017D0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2524   0017D2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2525   0017D4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2526   0017D6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2527   0017D8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2528   0017DA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2529   0017DC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2530   0017DE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2531   0017E0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2532   0017E2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2533   0017E4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2534   0017E6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2535   0017E8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2536   0017EA  A0D8               	btfss	status,0,c
  2537   0017EC  EFFA  F00B         	goto	u961
  2538   0017F0  EFFC  F00B         	goto	u960
  2539   0017F4                     u961:
  2540   0017F4  EF0D  F00C         	goto	l2316
  2541   0017F8                     u960:
  2542   0017F8  5009               	movf	___aodiv@divisor^0,w,c
  2543   0017FA  5E01               	subwf	___aodiv@dividend^0,f,c
  2544   0017FC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2545   0017FE  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2546   001800  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2547   001802  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2548   001804  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2549   001806  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2550   001808  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2551   00180A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2552   00180C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2553   00180E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2554   001810  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2555   001812  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2556   001814  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2557   001816  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2558   001818  8013               	bsf	___aodiv@quotient^0,0,c
  2559   00181A                     l2316:
  2560   00181A  90D8               	bcf	status,0,c
  2561   00181C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2562   00181E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2563   001820  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2564   001822  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2565   001824  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2566   001826  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2567   001828  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2568   00182A  3209               	rrcf	___aodiv@divisor^0,f,c
  2569   00182C  2E11               	decfsz	___aodiv@counter^0,f,c
  2570   00182E  EFDC  F00B         	goto	l2308
  2571   001832                     l2320:
  2572   001832  5012               	movf	___aodiv@sign^0,w,c
  2573   001834  B4D8               	btfsc	status,2,c
  2574   001836  EF1F  F00C         	goto	u971
  2575   00183A  EF21  F00C         	goto	u970
  2576   00183E                     u971:
  2577   00183E  EF31  F00C         	goto	l2324
  2578   001842                     u970:
  2579   001842  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2580   001844  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2581   001846  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2582   001848  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2583   00184A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2584   00184C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2585   00184E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2586   001850  6C13               	negf	___aodiv@quotient^0,c
  2587   001852  0E00               	movlw	0
  2588   001854  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2589   001856  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2590   001858  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2591   00185A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2592   00185C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2593   00185E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2594   001860  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2595   001862                     l2324:
  2596   001862  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2597   001866  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2598   00186A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2599   00186E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2600   001872  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2601   001876  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2602   00187A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2603   00187E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2604   001882  0012               	return		;funcret
  2605   001884                     __end_of___aodiv:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function _sendStringSerial4 *****************
  2609 ;; Defined at:
  2610 ;;		line 37 in file "../serial.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  string          2    1[COMRAM] PTR unsigned char 
  2613 ;;		 -> main@readout3(100), main@readout2(100), 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;Total ram usage:        2 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 2
  2632 ;; This function calls:
  2633 ;;		_sendCharSerial4
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text12
  2640   002882                     __ptext12:
  2641                           	callstack 0
  2642   002882                     _sendStringSerial4:
  2643                           	callstack 28
  2644   002882                     
  2645                           ;../serial.c: 40:     while (*string != 0)
  2646   002882  EF4C  F014         	goto	l3062
  2647   002886                     l3058:
  2648                           
  2649                           ;../serial.c: 41:     {;../serial.c: 42:         sendCharSerial4(*string++);
  2650   002886  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2651   00288A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2652   00288E  50DF               	movf	indf2,w,c
  2653   002890  ECC4  F014         	call	_sendCharSerial4
  2654   002894  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2655   002896  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2656   002898                     l3062:
  2657                           
  2658                           ;../serial.c: 40:     while (*string != 0)
  2659   002898  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  2660   00289C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2661   0028A0  50DF               	movf	indf2,w,c
  2662   0028A2  A4D8               	btfss	status,2,c
  2663   0028A4  EF56  F014         	goto	u1641
  2664   0028A8  EF58  F014         	goto	u1640
  2665   0028AC                     u1641:
  2666   0028AC  EF43  F014         	goto	l3058
  2667   0028B0                     u1640:
  2668   0028B0  0012               	return		;funcret
  2669   0028B2                     __end_of_sendStringSerial4:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _sendCharSerial4 *****************
  2673 ;; Defined at:
  2674 ;;		line 30 in file "../serial.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  charToSend      1    wreg     unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  charToSend      1    0[COMRAM] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;Total ram usage:        1 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_sendStringSerial4
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text13
  2703   002988                     __ptext13:
  2704                           	callstack 0
  2705   002988                     _sendCharSerial4:
  2706                           	callstack 28
  2707                           
  2708                           ;incstack = 0
  2709                           ;sendCharSerial4@charToSend stored from wreg
  2710   002988  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2711   00298A                     l440:
  2712   00298A  010E               	movlb	14	; () banked
  2713   00298C  A537               	btfss	55,2,b	;volatile
  2714   00298E  EFCB  F014         	goto	u1431
  2715   002992  EFCD  F014         	goto	u1430
  2716   002996                     u1431:
  2717   002996  EFC5  F014         	goto	l440
  2718   00299A                     u1430:
  2719   00299A                     
  2720                           ; BSR set to: 14
  2721                           ;../serial.c: 32:     TX4REG = charToSend;
  2722   00299A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2723   00299E                     
  2724                           ; BSR set to: 14
  2725   00299E  0012               	return		;funcret
  2726   0029A0                     __end_of_sendCharSerial4:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _motor_action *****************
  2730 ;; Defined at:
  2731 ;;		line 196 in file "../dc_motor.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  color           2   33[COMRAM] unsigned int 
  2734 ;;  l               2   35[COMRAM] PTR struct DC_motor
  2735 ;;		 -> main@motorL(9), 
  2736 ;;  r               2   37[COMRAM] PTR struct DC_motor
  2737 ;;		 -> main@motorR(9), 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2749 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;Total ram usage:        8 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 4
  2756 ;; This function calls:
  2757 ;;		_forward
  2758 ;;		_left_135
  2759 ;;		_left_90
  2760 ;;		_reverse_fromcard
  2761 ;;		_reverse_onesquare
  2762 ;;		_right_135
  2763 ;;		_right_90
  2764 ;;		_spin_180
  2765 ;;		_stop
  2766 ;; This function is called by:
  2767 ;;		_main
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text14
  2772   000E14                     __ptext14:
  2773                           	callstack 0
  2774   000E14                     _motor_action:
  2775                           	callstack 26
  2776   000E14                     
  2777                           ;../dc_motor.c: 196: void motor_action(unsigned int color, struct DC_motor *l, struct DC
      +                          _motor *r);../dc_motor.c: 197: {;../dc_motor.c: 198:     switch (color){
  2778   000E14  EF34  F008         	goto	l3038
  2779   000E18                     l2978:
  2780                           
  2781                           ;../dc_motor.c: 200:             reverse_fromcard(l,r);
  2782   000E18  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2783   000E1C  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2784   000E20  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2785   000E24  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2786   000E28  EC1A  F011         	call	_reverse_fromcard	;wreg free
  2787                           
  2788                           ;../dc_motor.c: 201:             stop(l,r);
  2789   000E2C  C024  F01A         	movff	motor_action@l,stop@mL
  2790   000E30  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2791   000E34  C026  F01C         	movff	motor_action@r,stop@mR
  2792   000E38  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2793   000E3C  ECBC  F011         	call	_stop	;wreg free
  2794   000E40                     l2980:
  2795                           
  2796                           ;../dc_motor.c: 202:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2797   000E40  0E29               	movlw	41
  2798   000E42  6E29               	movwf	(??_motor_action+1)^0,c
  2799   000E44  0E96               	movlw	150
  2800   000E46  6E28               	movwf	??_motor_action^0,c
  2801   000E48  0E7F               	movlw	127
  2802   000E4A                     u1707:
  2803   000E4A  2EE8               	decfsz	wreg,f,c
  2804   000E4C  D7FE               	bra	u1707
  2805   000E4E  2E28               	decfsz	??_motor_action^0,f,c
  2806   000E50  D7FC               	bra	u1707
  2807   000E52  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2808   000E54  D7FA               	bra	u1707
  2809   000E56  F000               	nop	
  2810   000E58                     
  2811                           ;../dc_motor.c: 203:             right_90(l,r);
  2812   000E58  C024  F01A         	movff	motor_action@l,right_90@mL
  2813   000E5C  C025  F01B         	movff	motor_action@l+1,right_90@mL+1
  2814   000E60  C026  F01C         	movff	motor_action@r,right_90@mR
  2815   000E64  C027  F01D         	movff	motor_action@r+1,right_90@mR+1
  2816   000E68  EC83  F00F         	call	_right_90	;wreg free
  2817   000E6C                     l2984:
  2818                           
  2819                           ;../dc_motor.c: 204:             stop(l,r);
  2820   000E6C  C024  F01A         	movff	motor_action@l,stop@mL
  2821   000E70  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2822   000E74  C026  F01C         	movff	motor_action@r,stop@mR
  2823   000E78  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2824   000E7C  ECBC  F011         	call	_stop	;wreg free
  2825                           
  2826                           ;../dc_motor.c: 205:             break;
  2827   000E80  EF62  F008         	goto	l333
  2828   000E84                     l2986:
  2829                           
  2830                           ;../dc_motor.c: 207:             reverse_fromcard(l,r);
  2831   000E84  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2832   000E88  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2833   000E8C  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2834   000E90  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2835   000E94  EC1A  F011         	call	_reverse_fromcard	;wreg free
  2836                           
  2837                           ;../dc_motor.c: 208:             stop(l,r);
  2838   000E98  C024  F01A         	movff	motor_action@l,stop@mL
  2839   000E9C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2840   000EA0  C026  F01C         	movff	motor_action@r,stop@mR
  2841   000EA4  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2842   000EA8  ECBC  F011         	call	_stop	;wreg free
  2843   000EAC                     l2988:
  2844                           
  2845                           ;../dc_motor.c: 209:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2846   000EAC  0E29               	movlw	41
  2847   000EAE  6E29               	movwf	(??_motor_action+1)^0,c
  2848   000EB0  0E96               	movlw	150
  2849   000EB2  6E28               	movwf	??_motor_action^0,c
  2850   000EB4  0E7F               	movlw	127
  2851   000EB6                     u1717:
  2852   000EB6  2EE8               	decfsz	wreg,f,c
  2853   000EB8  D7FE               	bra	u1717
  2854   000EBA  2E28               	decfsz	??_motor_action^0,f,c
  2855   000EBC  D7FC               	bra	u1717
  2856   000EBE  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2857   000EC0  D7FA               	bra	u1717
  2858   000EC2  F000               	nop	
  2859   000EC4                     
  2860                           ;../dc_motor.c: 210:             left_90(l,r);
  2861   000EC4  C024  F01A         	movff	motor_action@l,left_90@mL
  2862   000EC8  C025  F01B         	movff	motor_action@l+1,left_90@mL+1
  2863   000ECC  C026  F01C         	movff	motor_action@r,left_90@mR
  2864   000ED0  C027  F01D         	movff	motor_action@r+1,left_90@mR+1
  2865   000ED4  ECD5  F00F         	call	_left_90	;wreg free
  2866   000ED8  EF36  F007         	goto	l2984
  2867   000EDC                     l2994:
  2868                           
  2869                           ;../dc_motor.c: 214:             reverse_fromcard(l,r);
  2870   000EDC  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2871   000EE0  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2872   000EE4  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2873   000EE8  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2874   000EEC  EC1A  F011         	call	_reverse_fromcard	;wreg free
  2875                           
  2876                           ;../dc_motor.c: 215:             stop(l,r);
  2877   000EF0  C024  F01A         	movff	motor_action@l,stop@mL
  2878   000EF4  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2879   000EF8  C026  F01C         	movff	motor_action@r,stop@mR
  2880   000EFC  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2881   000F00  ECBC  F011         	call	_stop	;wreg free
  2882   000F04                     
  2883                           ;../dc_motor.c: 216:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2884   000F04  0E29               	movlw	41
  2885   000F06  6E29               	movwf	(??_motor_action+1)^0,c
  2886   000F08  0E96               	movlw	150
  2887   000F0A  6E28               	movwf	??_motor_action^0,c
  2888   000F0C  0E7F               	movlw	127
  2889   000F0E                     u1727:
  2890   000F0E  2EE8               	decfsz	wreg,f,c
  2891   000F10  D7FE               	bra	u1727
  2892   000F12  2E28               	decfsz	??_motor_action^0,f,c
  2893   000F14  D7FC               	bra	u1727
  2894   000F16  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2895   000F18  D7FA               	bra	u1727
  2896   000F1A  F000               	nop	
  2897   000F1C                     
  2898                           ;../dc_motor.c: 217:             spin_180(l,r);
  2899   000F1C  C024  F01A         	movff	motor_action@l,spin_180@mL
  2900   000F20  C025  F01B         	movff	motor_action@l+1,spin_180@mL+1
  2901   000F24  C026  F01C         	movff	motor_action@r,spin_180@mR
  2902   000F28  C027  F01D         	movff	motor_action@r+1,spin_180@mR+1
  2903   000F2C  EC27  F010         	call	_spin_180	;wreg free
  2904   000F30  EF36  F007         	goto	l2984
  2905   000F34                     l3002:
  2906                           
  2907                           ;../dc_motor.c: 221:             reverse_onesquare(l,r);
  2908   000F34  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  2909   000F38  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  2910   000F3C  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  2911   000F40  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  2912   000F44  ECC9  F010         	call	_reverse_onesquare	;wreg free
  2913                           
  2914                           ;../dc_motor.c: 222:             stop(l,r);
  2915   000F48  C024  F01A         	movff	motor_action@l,stop@mL
  2916   000F4C  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2917   000F50  C026  F01C         	movff	motor_action@r,stop@mR
  2918   000F54  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2919   000F58  ECBC  F011         	call	_stop	;wreg free
  2920   000F5C  EF20  F007         	goto	l2980
  2921   000F60                     l3010:
  2922                           
  2923                           ;../dc_motor.c: 228:             reverse_onesquare(l,r);
  2924   000F60  C024  F01A         	movff	motor_action@l,reverse_onesquare@mL
  2925   000F64  C025  F01B         	movff	motor_action@l+1,reverse_onesquare@mL+1
  2926   000F68  C026  F01C         	movff	motor_action@r,reverse_onesquare@mR
  2927   000F6C  C027  F01D         	movff	motor_action@r+1,reverse_onesquare@mR+1
  2928   000F70  ECC9  F010         	call	_reverse_onesquare	;wreg free
  2929                           
  2930                           ;../dc_motor.c: 229:             stop(l,r);
  2931   000F74  C024  F01A         	movff	motor_action@l,stop@mL
  2932   000F78  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2933   000F7C  C026  F01C         	movff	motor_action@r,stop@mR
  2934   000F80  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2935   000F84  ECBC  F011         	call	_stop	;wreg free
  2936   000F88  EF56  F007         	goto	l2988
  2937   000F8C                     l3018:
  2938                           
  2939                           ;../dc_motor.c: 235:             reverse_fromcard(l,r);
  2940   000F8C  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2941   000F90  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2942   000F94  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2943   000F98  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2944   000F9C  EC1A  F011         	call	_reverse_fromcard	;wreg free
  2945                           
  2946                           ;../dc_motor.c: 236:             stop(l,r);
  2947   000FA0  C024  F01A         	movff	motor_action@l,stop@mL
  2948   000FA4  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2949   000FA8  C026  F01C         	movff	motor_action@r,stop@mR
  2950   000FAC  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2951   000FB0  ECBC  F011         	call	_stop	;wreg free
  2952   000FB4                     
  2953                           ;../dc_motor.c: 237:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2954   000FB4  0E29               	movlw	41
  2955   000FB6  6E29               	movwf	(??_motor_action+1)^0,c
  2956   000FB8  0E96               	movlw	150
  2957   000FBA  6E28               	movwf	??_motor_action^0,c
  2958   000FBC  0E7F               	movlw	127
  2959   000FBE                     u1737:
  2960   000FBE  2EE8               	decfsz	wreg,f,c
  2961   000FC0  D7FE               	bra	u1737
  2962   000FC2  2E28               	decfsz	??_motor_action^0,f,c
  2963   000FC4  D7FC               	bra	u1737
  2964   000FC6  2E29               	decfsz	(??_motor_action+1)^0,f,c
  2965   000FC8  D7FA               	bra	u1737
  2966   000FCA  F000               	nop	
  2967   000FCC                     
  2968                           ;../dc_motor.c: 238:             right_135(l,r);
  2969   000FCC  C024  F01A         	movff	motor_action@l,right_135@mL
  2970   000FD0  C025  F01B         	movff	motor_action@l+1,right_135@mL+1
  2971   000FD4  C026  F01C         	movff	motor_action@r,right_135@mR
  2972   000FD8  C027  F01D         	movff	motor_action@r+1,right_135@mR+1
  2973   000FDC  EC78  F010         	call	_right_135	;wreg free
  2974   000FE0  EF36  F007         	goto	l2984
  2975   000FE4                     l3026:
  2976                           
  2977                           ;../dc_motor.c: 242:             reverse_fromcard(l,r);
  2978   000FE4  C024  F01A         	movff	motor_action@l,reverse_fromcard@mL
  2979   000FE8  C025  F01B         	movff	motor_action@l+1,reverse_fromcard@mL+1
  2980   000FEC  C026  F01C         	movff	motor_action@r,reverse_fromcard@mR
  2981   000FF0  C027  F01D         	movff	motor_action@r+1,reverse_fromcard@mR+1
  2982   000FF4  EC1A  F011         	call	_reverse_fromcard	;wreg free
  2983                           
  2984                           ;../dc_motor.c: 243:             stop(l,r);
  2985   000FF8  C024  F01A         	movff	motor_action@l,stop@mL
  2986   000FFC  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  2987   001000  C026  F01C         	movff	motor_action@r,stop@mR
  2988   001004  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  2989   001008  ECBC  F011         	call	_stop	;wreg free
  2990   00100C                     
  2991                           ;../dc_motor.c: 244:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2992   00100C  0E29               	movlw	41
  2993   00100E  6E29               	movwf	(??_motor_action+1)^0,c
  2994   001010  0E96               	movlw	150
  2995   001012  6E28               	movwf	??_motor_action^0,c
  2996   001014  0E7F               	movlw	127
  2997   001016                     u1747:
  2998   001016  2EE8               	decfsz	wreg,f,c
  2999   001018  D7FE               	bra	u1747
  3000   00101A  2E28               	decfsz	??_motor_action^0,f,c
  3001   00101C  D7FC               	bra	u1747
  3002   00101E  2E29               	decfsz	(??_motor_action+1)^0,f,c
  3003   001020  D7FA               	bra	u1747
  3004   001022  F000               	nop	
  3005   001024                     
  3006                           ;../dc_motor.c: 245:             left_135(l,r);
  3007   001024  C024  F01A         	movff	motor_action@l,left_135@mL
  3008   001028  C025  F01B         	movff	motor_action@l+1,left_135@mL+1
  3009   00102C  C026  F01C         	movff	motor_action@r,left_135@mR
  3010   001030  C027  F01D         	movff	motor_action@r+1,left_135@mR+1
  3011   001034  EC6B  F011         	call	_left_135	;wreg free
  3012   001038  EF36  F007         	goto	l2984
  3013   00103C                     l3034:
  3014                           
  3015                           ;../dc_motor.c: 249:             forward(l,r);
  3016   00103C  C024  F01A         	movff	motor_action@l,forward@mL
  3017   001040  C025  F01B         	movff	motor_action@l+1,forward@mL+1
  3018   001044  C026  F01C         	movff	motor_action@r,forward@mR
  3019   001048  C027  F01D         	movff	motor_action@r+1,forward@mR+1
  3020   00104C  EC03  F012         	call	_forward	;wreg free
  3021                           
  3022                           ;../dc_motor.c: 250:             stop(l,r);
  3023   001050  C024  F01A         	movff	motor_action@l,stop@mL
  3024   001054  C025  F01B         	movff	motor_action@l+1,stop@mL+1
  3025   001058  C026  F01C         	movff	motor_action@r,stop@mR
  3026   00105C  C027  F01D         	movff	motor_action@r+1,stop@mR+1
  3027   001060  ECBC  F011         	call	_stop	;wreg free
  3028                           
  3029                           ;../dc_motor.c: 251:             break;
  3030   001064  EF62  F008         	goto	l333
  3031   001068                     l3038:
  3032   001068  C022  F028         	movff	motor_action@color,??_motor_action
  3033   00106C  C023  F029         	movff	motor_action@color+1,??_motor_action+1
  3034                           
  3035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3036                           ; Switch size 1, requested type "simple"
  3037                           ; Number of cases is 1, Range of values is 0 to 0
  3038                           ; switch strategies available:
  3039                           ; Name         Instructions Cycles
  3040                           ; simple_byte            4     3 (average)
  3041                           ;	Chosen strategy is simple_byte
  3042   001070  5029               	movf	(??_motor_action+1)^0,w,c
  3043   001072  0A00               	xorlw	0	; case 0
  3044   001074  B4D8               	btfsc	status,2,c
  3045   001076  EF3F  F008         	goto	l3294
  3046   00107A  EF62  F008         	goto	l333
  3047   00107E                     l3294:
  3048                           
  3049                           ; Switch size 1, requested type "simple"
  3050                           ; Number of cases is 8, Range of values is 0 to 7
  3051                           ; switch strategies available:
  3052                           ; Name         Instructions Cycles
  3053                           ; simple_byte           25    13 (average)
  3054                           ;	Chosen strategy is simple_byte
  3055   00107E  5028               	movf	??_motor_action^0,w,c
  3056   001080  0A00               	xorlw	0	; case 0
  3057   001082  B4D8               	btfsc	status,2,c
  3058   001084  EF1E  F008         	goto	l3034
  3059   001088  0A01               	xorlw	1	; case 1
  3060   00108A  B4D8               	btfsc	status,2,c
  3061   00108C  EF0C  F007         	goto	l2978
  3062   001090  0A03               	xorlw	3	; case 2
  3063   001092  B4D8               	btfsc	status,2,c
  3064   001094  EF42  F007         	goto	l2986
  3065   001098  0A01               	xorlw	1	; case 3
  3066   00109A  B4D8               	btfsc	status,2,c
  3067   00109C  EF6E  F007         	goto	l2994
  3068   0010A0  0A07               	xorlw	7	; case 4
  3069   0010A2  B4D8               	btfsc	status,2,c
  3070   0010A4  EF9A  F007         	goto	l3002
  3071   0010A8  0A01               	xorlw	1	; case 5
  3072   0010AA  B4D8               	btfsc	status,2,c
  3073   0010AC  EFB0  F007         	goto	l3010
  3074   0010B0  0A03               	xorlw	3	; case 6
  3075   0010B2  B4D8               	btfsc	status,2,c
  3076   0010B4  EFC6  F007         	goto	l3018
  3077   0010B8  0A01               	xorlw	1	; case 7
  3078   0010BA  B4D8               	btfsc	status,2,c
  3079   0010BC  EFF2  F007         	goto	l3026
  3080   0010C0  EF62  F008         	goto	l333
  3081   0010C4                     l333:
  3082   0010C4  0012               	return		;funcret
  3083   0010C6                     __end_of_motor_action:
  3084                           	callstack 0
  3085                           
  3086 ;; *************** function _stop *****************
  3087 ;; Defined at:
  3088 ;;		line 61 in file "../dc_motor.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3091 ;;		 -> main@motorL(9), 
  3092 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3093 ;;		 -> main@motorR(9), 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  i               2   30[COMRAM] int 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;Total ram usage:        7 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 3
  3112 ;; This function calls:
  3113 ;;		_setMotorPWM
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;;		_motor_action
  3117 ;;		_motor_action_return
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text15
  3122   002378                     __ptext15:
  3123                           	callstack 0
  3124   002378                     _stop:
  3125                           	callstack 27
  3126   002378                     
  3127                           ;../dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c: 6
      +                          2: {;../dc_motor.c: 63:     mL->direction = 0;
  3128   002378  EE20 F001          	lfsr	2,1
  3129   00237C  501A               	movf	stop@mL^0,w,c
  3130   00237E  26D9               	addwf	fsr2l,f,c
  3131   002380  501B               	movf	(stop@mL+1)^0,w,c
  3132   002382  22DA               	addwfc	fsr2h,f,c
  3133   002384  0E00               	movlw	0
  3134   002386  6EDF               	movwf	indf2,c
  3135                           
  3136                           ;../dc_motor.c: 64:     mR->direction = 0;
  3137   002388  EE20 F001          	lfsr	2,1
  3138   00238C  501C               	movf	stop@mR^0,w,c
  3139   00238E  26D9               	addwf	fsr2l,f,c
  3140   002390  501D               	movf	(stop@mR+1)^0,w,c
  3141   002392  22DA               	addwfc	fsr2h,f,c
  3142   002394  0E00               	movlw	0
  3143   002396  6EDF               	movwf	indf2,c
  3144   002398                     
  3145                           ;../dc_motor.c: 65:     for (int i = 5;i>0;i = i - 1)
  3146   002398  0E00               	movlw	0
  3147   00239A  6E20               	movwf	(stop@i+1)^0,c
  3148   00239C  0E05               	movlw	5
  3149   00239E  6E1F               	movwf	stop@i^0,c
  3150   0023A0                     l2628:
  3151                           
  3152                           ;../dc_motor.c: 66:     {;../dc_motor.c: 67:         mL->power = i;
  3153   0023A0  C01A  FFD9         	movff	stop@mL,fsr2l
  3154   0023A4  C01B  FFDA         	movff	stop@mL+1,fsr2h
  3155   0023A8  C01F  FFDF         	movff	stop@i,indf2
  3156                           
  3157                           ;../dc_motor.c: 68:         mR->power = i;
  3158   0023AC  C01C  FFD9         	movff	stop@mR,fsr2l
  3159   0023B0  C01D  FFDA         	movff	stop@mR+1,fsr2h
  3160   0023B4  C01F  FFDF         	movff	stop@i,indf2
  3161   0023B8                     
  3162                           ;../dc_motor.c: 69:         setMotorPWM(mL);
  3163   0023B8  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  3164   0023BC  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  3165   0023C0  EC94  F00A         	call	_setMotorPWM	;wreg free
  3166   0023C4                     
  3167                           ;../dc_motor.c: 70:         setMotorPWM(mR);
  3168   0023C4  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  3169   0023C8  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  3170   0023CC  EC94  F00A         	call	_setMotorPWM	;wreg free
  3171   0023D0                     
  3172                           ;../dc_motor.c: 71:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3173   0023D0  0ED0               	movlw	208
  3174   0023D2  6E1E               	movwf	??_stop^0,c
  3175   0023D4  0ECA               	movlw	202
  3176   0023D6                     u1757:
  3177   0023D6  2EE8               	decfsz	wreg,f,c
  3178   0023D8  D7FE               	bra	u1757
  3179   0023DA  2E1E               	decfsz	??_stop^0,f,c
  3180   0023DC  D7FC               	bra	u1757
  3181   0023DE                     
  3182                           ;../dc_motor.c: 72:     }
  3183   0023DE  0EFF               	movlw	255
  3184   0023E0  241F               	addwf	stop@i^0,w,c
  3185   0023E2  6E1F               	movwf	stop@i^0,c
  3186   0023E4  0EFF               	movlw	255
  3187   0023E6  2020               	addwfc	(stop@i+1)^0,w,c
  3188   0023E8  6E20               	movwf	(stop@i+1)^0,c
  3189   0023EA  BE20               	btfsc	(stop@i+1)^0,7,c
  3190   0023EC  EF02  F012         	goto	u1350
  3191   0023F0  5020               	movf	(stop@i+1)^0,w,c
  3192   0023F2  E106               	bnz	u1351
  3193   0023F4  041F               	decf	stop@i^0,w,c
  3194   0023F6  B0D8               	btfsc	status,0,c
  3195   0023F8  EF00  F012         	goto	u1351
  3196   0023FC  EF02  F012         	goto	u1350
  3197   002400                     u1351:
  3198   002400  EFD0  F011         	goto	l2628
  3199   002404                     u1350:
  3200   002404  0012               	return		;funcret
  3201   002406                     __end_of_stop:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _spin_180 *****************
  3205 ;; Defined at:
  3206 ;;		line 151 in file "../dc_motor.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3209 ;;		 -> main@motorL(9), 
  3210 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3211 ;;		 -> main@motorR(9), 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  i               2   31[COMRAM] int 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;Total ram usage:        8 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 3
  3230 ;; This function calls:
  3231 ;;		_setMotorPWM
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;;		_motor_action
  3235 ;;		_motor_action_return
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text16
  3240   00204E                     __ptext16:
  3241                           	callstack 0
  3242   00204E                     _spin_180:
  3243                           	callstack 27
  3244   00204E                     
  3245                           ;../dc_motor.c: 151: void spin_180(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 152: {;../dc_motor.c: 153:     mL->direction = 1;
  3246   00204E  EE20 F001          	lfsr	2,1
  3247   002052  501A               	movf	spin_180@mL^0,w,c
  3248   002054  26D9               	addwf	fsr2l,f,c
  3249   002056  501B               	movf	(spin_180@mL+1)^0,w,c
  3250   002058  22DA               	addwfc	fsr2h,f,c
  3251   00205A  0E01               	movlw	1
  3252   00205C  6EDF               	movwf	indf2,c
  3253                           
  3254                           ;../dc_motor.c: 154:     mR->direction = 0;
  3255   00205E  EE20 F001          	lfsr	2,1
  3256   002062  501C               	movf	spin_180@mR^0,w,c
  3257   002064  26D9               	addwf	fsr2l,f,c
  3258   002066  501D               	movf	(spin_180@mR+1)^0,w,c
  3259   002068  22DA               	addwfc	fsr2h,f,c
  3260   00206A  0E00               	movlw	0
  3261   00206C  6EDF               	movwf	indf2,c
  3262   00206E                     
  3263                           ;../dc_motor.c: 155:     for (int i = 0;i<50;i = i + 2)
  3264   00206E  0E00               	movlw	0
  3265   002070  6E21               	movwf	(spin_180@i+1)^0,c
  3266   002072  0E00               	movlw	0
  3267   002074  6E20               	movwf	spin_180@i^0,c
  3268   002076                     l2648:
  3269                           
  3270                           ;../dc_motor.c: 156:     {;../dc_motor.c: 157:         mL->power = i;
  3271   002076  C01A  FFD9         	movff	spin_180@mL,fsr2l
  3272   00207A  C01B  FFDA         	movff	spin_180@mL+1,fsr2h
  3273   00207E  C020  FFDF         	movff	spin_180@i,indf2
  3274   002082                     
  3275                           ;../dc_motor.c: 158:         mR->power = 50 + i;
  3276   002082  5020               	movf	spin_180@i^0,w,c
  3277   002084  0F32               	addlw	50
  3278   002086  C01C  FFD9         	movff	spin_180@mR,fsr2l
  3279   00208A  C01D  FFDA         	movff	spin_180@mR+1,fsr2h
  3280   00208E  6EDF               	movwf	indf2,c
  3281   002090                     
  3282                           ;../dc_motor.c: 159:         setMotorPWM(mL);
  3283   002090  C01A  F00F         	movff	spin_180@mL,setMotorPWM@m
  3284   002094  C01B  F010         	movff	spin_180@mL+1,setMotorPWM@m+1
  3285   002098  EC94  F00A         	call	_setMotorPWM	;wreg free
  3286   00209C                     
  3287                           ;../dc_motor.c: 160:         setMotorPWM(mR);
  3288   00209C  C01C  F00F         	movff	spin_180@mR,setMotorPWM@m
  3289   0020A0  C01D  F010         	movff	spin_180@mR+1,setMotorPWM@m+1
  3290   0020A4  EC94  F00A         	call	_setMotorPWM	;wreg free
  3291   0020A8                     
  3292                           ;../dc_motor.c: 161:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3293   0020A8  0E35               	movlw	53
  3294   0020AA                     u1767:
  3295   0020AA  2EE8               	decfsz	wreg,f,c
  3296   0020AC  D7FE               	bra	u1767
  3297   0020AE  F000               	nop	
  3298   0020B0                     
  3299                           ;../dc_motor.c: 162:     }
  3300   0020B0  0E02               	movlw	2
  3301   0020B2  2420               	addwf	spin_180@i^0,w,c
  3302   0020B4  6E20               	movwf	spin_180@i^0,c
  3303   0020B6  0E00               	movlw	0
  3304   0020B8  2021               	addwfc	(spin_180@i+1)^0,w,c
  3305   0020BA  6E21               	movwf	(spin_180@i+1)^0,c
  3306   0020BC  BE21               	btfsc	(spin_180@i+1)^0,7,c
  3307   0020BE  EF6A  F010         	goto	u1361
  3308   0020C2  5021               	movf	(spin_180@i+1)^0,w,c
  3309   0020C4  E109               	bnz	u1360
  3310   0020C6  0E32               	movlw	50
  3311   0020C8  5C20               	subwf	spin_180@i^0,w,c
  3312   0020CA  A0D8               	btfss	status,0,c
  3313   0020CC  EF6A  F010         	goto	u1361
  3314   0020D0  EF6C  F010         	goto	u1360
  3315   0020D4                     u1361:
  3316   0020D4  EF3B  F010         	goto	l2648
  3317   0020D8                     u1360:
  3318   0020D8                     
  3319                           ;../dc_motor.c: 163:     _delay((unsigned long)((290)*(64000000/4000.0)));
  3320   0020D8  0E18               	movlw	24
  3321   0020DA  6E1F               	movwf	(??_spin_180+1)^0,c
  3322   0020DC  0E8A               	movlw	138
  3323   0020DE  6E1E               	movwf	??_spin_180^0,c
  3324   0020E0  0EE8               	movlw	232
  3325   0020E2                     u1777:
  3326   0020E2  2EE8               	decfsz	wreg,f,c
  3327   0020E4  D7FE               	bra	u1777
  3328   0020E6  2E1E               	decfsz	??_spin_180^0,f,c
  3329   0020E8  D7FC               	bra	u1777
  3330   0020EA  2E1F               	decfsz	(??_spin_180+1)^0,f,c
  3331   0020EC  D7FA               	bra	u1777
  3332   0020EE  0012               	return		;funcret
  3333   0020F0                     __end_of_spin_180:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _right_90 *****************
  3337 ;; Defined at:
  3338 ;;		line 121 in file "../dc_motor.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3341 ;;		 -> main@motorL(9), 
  3342 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3343 ;;		 -> main@motorR(9), 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  i               2   31[COMRAM] int 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;Total ram usage:        8 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 3
  3362 ;; This function calls:
  3363 ;;		_setMotorPWM
  3364 ;; This function is called by:
  3365 ;;		_motor_action
  3366 ;;		_motor_action_return
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text17
  3371   001F06                     __ptext17:
  3372                           	callstack 0
  3373   001F06                     _right_90:
  3374                           	callstack 26
  3375   001F06                     
  3376                           ;../dc_motor.c: 121: void right_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 122: {;../dc_motor.c: 123:     mL->direction = 1;
  3377   001F06  EE20 F001          	lfsr	2,1
  3378   001F0A  501A               	movf	right_90@mL^0,w,c
  3379   001F0C  26D9               	addwf	fsr2l,f,c
  3380   001F0E  501B               	movf	(right_90@mL+1)^0,w,c
  3381   001F10  22DA               	addwfc	fsr2h,f,c
  3382   001F12  0E01               	movlw	1
  3383   001F14  6EDF               	movwf	indf2,c
  3384                           
  3385                           ;../dc_motor.c: 124:     mR->direction = 0;
  3386   001F16  EE20 F001          	lfsr	2,1
  3387   001F1A  501C               	movf	right_90@mR^0,w,c
  3388   001F1C  26D9               	addwf	fsr2l,f,c
  3389   001F1E  501D               	movf	(right_90@mR+1)^0,w,c
  3390   001F20  22DA               	addwfc	fsr2h,f,c
  3391   001F22  0E00               	movlw	0
  3392   001F24  6EDF               	movwf	indf2,c
  3393   001F26                     
  3394                           ;../dc_motor.c: 125:     for (int i = 0;i<50;i = i + 2)
  3395   001F26  0E00               	movlw	0
  3396   001F28  6E21               	movwf	(right_90@i+1)^0,c
  3397   001F2A  0E00               	movlw	0
  3398   001F2C  6E20               	movwf	right_90@i^0,c
  3399   001F2E                     l2716:
  3400                           
  3401                           ;../dc_motor.c: 126:     {;../dc_motor.c: 127:         mL->power = i;
  3402   001F2E  C01A  FFD9         	movff	right_90@mL,fsr2l
  3403   001F32  C01B  FFDA         	movff	right_90@mL+1,fsr2h
  3404   001F36  C020  FFDF         	movff	right_90@i,indf2
  3405   001F3A                     
  3406                           ;../dc_motor.c: 128:         mR->power = 50 + i;
  3407   001F3A  5020               	movf	right_90@i^0,w,c
  3408   001F3C  0F32               	addlw	50
  3409   001F3E  C01C  FFD9         	movff	right_90@mR,fsr2l
  3410   001F42  C01D  FFDA         	movff	right_90@mR+1,fsr2h
  3411   001F46  6EDF               	movwf	indf2,c
  3412   001F48                     
  3413                           ;../dc_motor.c: 129:         setMotorPWM(mL);
  3414   001F48  C01A  F00F         	movff	right_90@mL,setMotorPWM@m
  3415   001F4C  C01B  F010         	movff	right_90@mL+1,setMotorPWM@m+1
  3416   001F50  EC94  F00A         	call	_setMotorPWM	;wreg free
  3417   001F54                     
  3418                           ;../dc_motor.c: 130:         setMotorPWM(mR);
  3419   001F54  C01C  F00F         	movff	right_90@mR,setMotorPWM@m
  3420   001F58  C01D  F010         	movff	right_90@mR+1,setMotorPWM@m+1
  3421   001F5C  EC94  F00A         	call	_setMotorPWM	;wreg free
  3422   001F60                     
  3423                           ;../dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3424   001F60  0E35               	movlw	53
  3425   001F62                     u1787:
  3426   001F62  2EE8               	decfsz	wreg,f,c
  3427   001F64  D7FE               	bra	u1787
  3428   001F66  F000               	nop	
  3429   001F68                     
  3430                           ;../dc_motor.c: 132:     }
  3431   001F68  0E02               	movlw	2
  3432   001F6A  2420               	addwf	right_90@i^0,w,c
  3433   001F6C  6E20               	movwf	right_90@i^0,c
  3434   001F6E  0E00               	movlw	0
  3435   001F70  2021               	addwfc	(right_90@i+1)^0,w,c
  3436   001F72  6E21               	movwf	(right_90@i+1)^0,c
  3437   001F74  BE21               	btfsc	(right_90@i+1)^0,7,c
  3438   001F76  EFC6  F00F         	goto	u1391
  3439   001F7A  5021               	movf	(right_90@i+1)^0,w,c
  3440   001F7C  E109               	bnz	u1390
  3441   001F7E  0E32               	movlw	50
  3442   001F80  5C20               	subwf	right_90@i^0,w,c
  3443   001F82  A0D8               	btfss	status,0,c
  3444   001F84  EFC6  F00F         	goto	u1391
  3445   001F88  EFC8  F00F         	goto	u1390
  3446   001F8C                     u1391:
  3447   001F8C  EF97  F00F         	goto	l2716
  3448   001F90                     u1390:
  3449   001F90                     
  3450                           ;../dc_motor.c: 133:     _delay((unsigned long)((165)*(64000000/4000.0)));
  3451   001F90  0E0E               	movlw	14
  3452   001F92  6E1F               	movwf	(??_right_90+1)^0,c
  3453   001F94  0E65               	movlw	101
  3454   001F96  6E1E               	movwf	??_right_90^0,c
  3455   001F98  0E87               	movlw	135
  3456   001F9A                     u1797:
  3457   001F9A  2EE8               	decfsz	wreg,f,c
  3458   001F9C  D7FE               	bra	u1797
  3459   001F9E  2E1E               	decfsz	??_right_90^0,f,c
  3460   001FA0  D7FC               	bra	u1797
  3461   001FA2  2E1F               	decfsz	(??_right_90+1)^0,f,c
  3462   001FA4  D7FA               	bra	u1797
  3463   001FA6  F000               	nop	
  3464   001FA8  0012               	return		;funcret
  3465   001FAA                     __end_of_right_90:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function _right_135 *****************
  3469 ;; Defined at:
  3470 ;;		line 166 in file "../dc_motor.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3473 ;;		 -> main@motorL(9), 
  3474 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3475 ;;		 -> main@motorR(9), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  i               2   31[COMRAM] int 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3491 ;;Total ram usage:        8 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 3
  3494 ;; This function calls:
  3495 ;;		_setMotorPWM
  3496 ;; This function is called by:
  3497 ;;		_motor_action
  3498 ;;		_motor_action_return
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text18
  3503   0020F0                     __ptext18:
  3504                           	callstack 0
  3505   0020F0                     _right_135:
  3506                           	callstack 26
  3507   0020F0                     
  3508                           ;../dc_motor.c: 166: void right_135(struct DC_motor *mL, struct DC_motor *mR);../dc_moto
      +                          r.c: 167: {;../dc_motor.c: 168:     mL->direction = 1;
  3509   0020F0  EE20 F001          	lfsr	2,1
  3510   0020F4  501A               	movf	right_135@mL^0,w,c
  3511   0020F6  26D9               	addwf	fsr2l,f,c
  3512   0020F8  501B               	movf	(right_135@mL+1)^0,w,c
  3513   0020FA  22DA               	addwfc	fsr2h,f,c
  3514   0020FC  0E01               	movlw	1
  3515   0020FE  6EDF               	movwf	indf2,c
  3516                           
  3517                           ;../dc_motor.c: 169:     mR->direction = 0;
  3518   002100  EE20 F001          	lfsr	2,1
  3519   002104  501C               	movf	right_135@mR^0,w,c
  3520   002106  26D9               	addwf	fsr2l,f,c
  3521   002108  501D               	movf	(right_135@mR+1)^0,w,c
  3522   00210A  22DA               	addwfc	fsr2h,f,c
  3523   00210C  0E00               	movlw	0
  3524   00210E  6EDF               	movwf	indf2,c
  3525   002110                     
  3526                           ;../dc_motor.c: 170:     for (int i = 0;i<50;i = i + 2)
  3527   002110  0E00               	movlw	0
  3528   002112  6E21               	movwf	(right_135@i+1)^0,c
  3529   002114  0E00               	movlw	0
  3530   002116  6E20               	movwf	right_135@i^0,c
  3531   002118                     l2764:
  3532                           
  3533                           ;../dc_motor.c: 171:     {;../dc_motor.c: 172:         mL->power = i;
  3534   002118  C01A  FFD9         	movff	right_135@mL,fsr2l
  3535   00211C  C01B  FFDA         	movff	right_135@mL+1,fsr2h
  3536   002120  C020  FFDF         	movff	right_135@i,indf2
  3537   002124                     
  3538                           ;../dc_motor.c: 173:         mR->power = 50 + i;
  3539   002124  5020               	movf	right_135@i^0,w,c
  3540   002126  0F32               	addlw	50
  3541   002128  C01C  FFD9         	movff	right_135@mR,fsr2l
  3542   00212C  C01D  FFDA         	movff	right_135@mR+1,fsr2h
  3543   002130  6EDF               	movwf	indf2,c
  3544   002132                     
  3545                           ;../dc_motor.c: 174:         setMotorPWM(mL);
  3546   002132  C01A  F00F         	movff	right_135@mL,setMotorPWM@m
  3547   002136  C01B  F010         	movff	right_135@mL+1,setMotorPWM@m+1
  3548   00213A  EC94  F00A         	call	_setMotorPWM	;wreg free
  3549   00213E                     
  3550                           ;../dc_motor.c: 175:         setMotorPWM(mR);
  3551   00213E  C01C  F00F         	movff	right_135@mR,setMotorPWM@m
  3552   002142  C01D  F010         	movff	right_135@mR+1,setMotorPWM@m+1
  3553   002146  EC94  F00A         	call	_setMotorPWM	;wreg free
  3554   00214A                     
  3555                           ;../dc_motor.c: 176:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3556   00214A  0E35               	movlw	53
  3557   00214C                     u1807:
  3558   00214C  2EE8               	decfsz	wreg,f,c
  3559   00214E  D7FE               	bra	u1807
  3560   002150  F000               	nop	
  3561   002152                     
  3562                           ;../dc_motor.c: 177:     }
  3563   002152  0E02               	movlw	2
  3564   002154  2420               	addwf	right_135@i^0,w,c
  3565   002156  6E20               	movwf	right_135@i^0,c
  3566   002158  0E00               	movlw	0
  3567   00215A  2021               	addwfc	(right_135@i+1)^0,w,c
  3568   00215C  6E21               	movwf	(right_135@i+1)^0,c
  3569   00215E  BE21               	btfsc	(right_135@i+1)^0,7,c
  3570   002160  EFBB  F010         	goto	u1411
  3571   002164  5021               	movf	(right_135@i+1)^0,w,c
  3572   002166  E109               	bnz	u1410
  3573   002168  0E32               	movlw	50
  3574   00216A  5C20               	subwf	right_135@i^0,w,c
  3575   00216C  A0D8               	btfss	status,0,c
  3576   00216E  EFBB  F010         	goto	u1411
  3577   002172  EFBD  F010         	goto	u1410
  3578   002176                     u1411:
  3579   002176  EF8C  F010         	goto	l2764
  3580   00217A                     u1410:
  3581   00217A                     
  3582                           ;../dc_motor.c: 178:     _delay((unsigned long)((230)*(64000000/4000.0)));
  3583   00217A  0E13               	movlw	19
  3584   00217C  6E1F               	movwf	(??_right_135+1)^0,c
  3585   00217E  0EAC               	movlw	172
  3586   002180  6E1E               	movwf	??_right_135^0,c
  3587   002182  0E2A               	movlw	42
  3588   002184                     u1817:
  3589   002184  2EE8               	decfsz	wreg,f,c
  3590   002186  D7FE               	bra	u1817
  3591   002188  2E1E               	decfsz	??_right_135^0,f,c
  3592   00218A  D7FC               	bra	u1817
  3593   00218C  2E1F               	decfsz	(??_right_135+1)^0,f,c
  3594   00218E  D7FA               	bra	u1817
  3595   002190  0012               	return		;funcret
  3596   002192                     __end_of_right_135:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _reverse_onesquare *****************
  3600 ;; Defined at:
  3601 ;;		line 106 in file "../dc_motor.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3604 ;;		 -> main@motorL(9), 
  3605 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3606 ;;		 -> main@motorR(9), 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  i               2   31[COMRAM] int 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;Total ram usage:        8 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 3
  3625 ;; This function calls:
  3626 ;;		_setMotorPWM
  3627 ;; This function is called by:
  3628 ;;		_motor_action
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text19
  3633   002192                     __ptext19:
  3634                           	callstack 0
  3635   002192                     _reverse_onesquare:
  3636                           	callstack 26
  3637   002192                     
  3638                           ;../dc_motor.c: 106: void reverse_onesquare (struct DC_motor *mL, struct DC_motor *mR);.
      +                          ./dc_motor.c: 107: {;../dc_motor.c: 108:     mL->direction = 0;
  3639   002192  EE20 F001          	lfsr	2,1
  3640   002196  501A               	movf	reverse_onesquare@mL^0,w,c
  3641   002198  26D9               	addwf	fsr2l,f,c
  3642   00219A  501B               	movf	(reverse_onesquare@mL+1)^0,w,c
  3643   00219C  22DA               	addwfc	fsr2h,f,c
  3644   00219E  0E00               	movlw	0
  3645   0021A0  6EDF               	movwf	indf2,c
  3646                           
  3647                           ;../dc_motor.c: 109:     mR->direction = 0;
  3648   0021A2  EE20 F001          	lfsr	2,1
  3649   0021A6  501C               	movf	reverse_onesquare@mR^0,w,c
  3650   0021A8  26D9               	addwf	fsr2l,f,c
  3651   0021AA  501D               	movf	(reverse_onesquare@mR+1)^0,w,c
  3652   0021AC  22DA               	addwfc	fsr2h,f,c
  3653   0021AE  0E00               	movlw	0
  3654   0021B0  6EDF               	movwf	indf2,c
  3655   0021B2                     
  3656                           ;../dc_motor.c: 110:     for (int i=0;i<51;i=i + 2)
  3657   0021B2  0E00               	movlw	0
  3658   0021B4  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  3659   0021B6  0E00               	movlw	0
  3660   0021B8  6E20               	movwf	reverse_onesquare@i^0,c
  3661   0021BA                     l2694:
  3662                           
  3663                           ;../dc_motor.c: 111:     {;../dc_motor.c: 112:         mL->power = i;
  3664   0021BA  C01A  FFD9         	movff	reverse_onesquare@mL,fsr2l
  3665   0021BE  C01B  FFDA         	movff	reverse_onesquare@mL+1,fsr2h
  3666   0021C2  C020  FFDF         	movff	reverse_onesquare@i,indf2
  3667                           
  3668                           ;../dc_motor.c: 113:         mR->power = i;
  3669   0021C6  C01C  FFD9         	movff	reverse_onesquare@mR,fsr2l
  3670   0021CA  C01D  FFDA         	movff	reverse_onesquare@mR+1,fsr2h
  3671   0021CE  C020  FFDF         	movff	reverse_onesquare@i,indf2
  3672   0021D2                     
  3673                           ;../dc_motor.c: 114:         setMotorPWM(mL);
  3674   0021D2  C01A  F00F         	movff	reverse_onesquare@mL,setMotorPWM@m
  3675   0021D6  C01B  F010         	movff	reverse_onesquare@mL+1,setMotorPWM@m+1
  3676   0021DA  EC94  F00A         	call	_setMotorPWM	;wreg free
  3677   0021DE                     
  3678                           ;../dc_motor.c: 115:         setMotorPWM(mR);
  3679   0021DE  C01C  F00F         	movff	reverse_onesquare@mR,setMotorPWM@m
  3680   0021E2  C01D  F010         	movff	reverse_onesquare@mR+1,setMotorPWM@m+1
  3681   0021E6  EC94  F00A         	call	_setMotorPWM	;wreg free
  3682   0021EA                     
  3683                           ;../dc_motor.c: 116:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3684   0021EA  0E35               	movlw	53
  3685   0021EC                     u1827:
  3686   0021EC  2EE8               	decfsz	wreg,f,c
  3687   0021EE  D7FE               	bra	u1827
  3688   0021F0  F000               	nop	
  3689   0021F2                     
  3690                           ;../dc_motor.c: 117:     }
  3691   0021F2  0E02               	movlw	2
  3692   0021F4  2420               	addwf	reverse_onesquare@i^0,w,c
  3693   0021F6  6E20               	movwf	reverse_onesquare@i^0,c
  3694   0021F8  0E00               	movlw	0
  3695   0021FA  2021               	addwfc	(reverse_onesquare@i+1)^0,w,c
  3696   0021FC  6E21               	movwf	(reverse_onesquare@i+1)^0,c
  3697   0021FE  BE21               	btfsc	(reverse_onesquare@i+1)^0,7,c
  3698   002200  EF0B  F011         	goto	u1381
  3699   002204  5021               	movf	(reverse_onesquare@i+1)^0,w,c
  3700   002206  E109               	bnz	u1380
  3701   002208  0E33               	movlw	51
  3702   00220A  5C20               	subwf	reverse_onesquare@i^0,w,c
  3703   00220C  A0D8               	btfss	status,0,c
  3704   00220E  EF0B  F011         	goto	u1381
  3705   002212  EF0D  F011         	goto	u1380
  3706   002216                     u1381:
  3707   002216  EFDD  F010         	goto	l2694
  3708   00221A                     u1380:
  3709   00221A                     
  3710                           ;../dc_motor.c: 118:     _delay((unsigned long)((1100)*(64000000/4000.0)));
  3711   00221A  0E5A               	movlw	90
  3712   00221C  6E1F               	movwf	(??_reverse_onesquare+1)^0,c
  3713   00221E  0E49               	movlw	73
  3714   002220  6E1E               	movwf	??_reverse_onesquare^0,c
  3715   002222  0EE7               	movlw	231
  3716   002224                     u1837:
  3717   002224  2EE8               	decfsz	wreg,f,c
  3718   002226  D7FE               	bra	u1837
  3719   002228  2E1E               	decfsz	??_reverse_onesquare^0,f,c
  3720   00222A  D7FC               	bra	u1837
  3721   00222C  2E1F               	decfsz	(??_reverse_onesquare+1)^0,f,c
  3722   00222E  D7FA               	bra	u1837
  3723   002230  F000               	nop	
  3724   002232  0012               	return		;funcret
  3725   002234                     __end_of_reverse_onesquare:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _reverse_fromcard *****************
  3729 ;; Defined at:
  3730 ;;		line 91 in file "../dc_motor.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3733 ;;		 -> main@motorL(9), 
  3734 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3735 ;;		 -> main@motorR(9), 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  i               2   31[COMRAM] int 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;Total ram usage:        8 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 3
  3754 ;; This function calls:
  3755 ;;		_setMotorPWM
  3756 ;; This function is called by:
  3757 ;;		_motor_action
  3758 ;;		_motor_action_return
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text20
  3763   002234                     __ptext20:
  3764                           	callstack 0
  3765   002234                     _reverse_fromcard:
  3766                           	callstack 26
  3767   002234                     
  3768                           ;../dc_motor.c: 91: void reverse_fromcard (struct DC_motor *mL, struct DC_motor *mR);../
      +                          dc_motor.c: 92: {;../dc_motor.c: 93:     mL->direction = 0;
  3769   002234  EE20 F001          	lfsr	2,1
  3770   002238  501A               	movf	reverse_fromcard@mL^0,w,c
  3771   00223A  26D9               	addwf	fsr2l,f,c
  3772   00223C  501B               	movf	(reverse_fromcard@mL+1)^0,w,c
  3773   00223E  22DA               	addwfc	fsr2h,f,c
  3774   002240  0E00               	movlw	0
  3775   002242  6EDF               	movwf	indf2,c
  3776                           
  3777                           ;../dc_motor.c: 94:     mL->direction = 0;
  3778   002244  EE20 F001          	lfsr	2,1
  3779   002248  501A               	movf	reverse_fromcard@mL^0,w,c
  3780   00224A  26D9               	addwf	fsr2l,f,c
  3781   00224C  501B               	movf	(reverse_fromcard@mL+1)^0,w,c
  3782   00224E  22DA               	addwfc	fsr2h,f,c
  3783   002250  0E00               	movlw	0
  3784   002252  6EDF               	movwf	indf2,c
  3785   002254                     
  3786                           ;../dc_motor.c: 95:     for (int i = 0;i < 41;i = i + 2)
  3787   002254  0E00               	movlw	0
  3788   002256  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  3789   002258  0E00               	movlw	0
  3790   00225A  6E20               	movwf	reverse_fromcard@i^0,c
  3791   00225C                     l2672:
  3792                           
  3793                           ;../dc_motor.c: 96:     {;../dc_motor.c: 97:         mL->power = i;
  3794   00225C  C01A  FFD9         	movff	reverse_fromcard@mL,fsr2l
  3795   002260  C01B  FFDA         	movff	reverse_fromcard@mL+1,fsr2h
  3796   002264  C020  FFDF         	movff	reverse_fromcard@i,indf2
  3797                           
  3798                           ;../dc_motor.c: 98:         mR->power = i;
  3799   002268  C01C  FFD9         	movff	reverse_fromcard@mR,fsr2l
  3800   00226C  C01D  FFDA         	movff	reverse_fromcard@mR+1,fsr2h
  3801   002270  C020  FFDF         	movff	reverse_fromcard@i,indf2
  3802   002274                     
  3803                           ;../dc_motor.c: 99:         setMotorPWM(mL);
  3804   002274  C01A  F00F         	movff	reverse_fromcard@mL,setMotorPWM@m
  3805   002278  C01B  F010         	movff	reverse_fromcard@mL+1,setMotorPWM@m+1
  3806   00227C  EC94  F00A         	call	_setMotorPWM	;wreg free
  3807   002280                     
  3808                           ;../dc_motor.c: 100:         setMotorPWM(mR);
  3809   002280  C01C  F00F         	movff	reverse_fromcard@mR,setMotorPWM@m
  3810   002284  C01D  F010         	movff	reverse_fromcard@mR+1,setMotorPWM@m+1
  3811   002288  EC94  F00A         	call	_setMotorPWM	;wreg free
  3812   00228C                     
  3813                           ;../dc_motor.c: 101:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3814   00228C  0E35               	movlw	53
  3815   00228E                     u1847:
  3816   00228E  2EE8               	decfsz	wreg,f,c
  3817   002290  D7FE               	bra	u1847
  3818   002292  F000               	nop	
  3819   002294                     
  3820                           ;../dc_motor.c: 102:     }
  3821   002294  0E02               	movlw	2
  3822   002296  2420               	addwf	reverse_fromcard@i^0,w,c
  3823   002298  6E20               	movwf	reverse_fromcard@i^0,c
  3824   00229A  0E00               	movlw	0
  3825   00229C  2021               	addwfc	(reverse_fromcard@i+1)^0,w,c
  3826   00229E  6E21               	movwf	(reverse_fromcard@i+1)^0,c
  3827   0022A0  BE21               	btfsc	(reverse_fromcard@i+1)^0,7,c
  3828   0022A2  EF5C  F011         	goto	u1371
  3829   0022A6  5021               	movf	(reverse_fromcard@i+1)^0,w,c
  3830   0022A8  E109               	bnz	u1370
  3831   0022AA  0E29               	movlw	41
  3832   0022AC  5C20               	subwf	reverse_fromcard@i^0,w,c
  3833   0022AE  A0D8               	btfss	status,0,c
  3834   0022B0  EF5C  F011         	goto	u1371
  3835   0022B4  EF5E  F011         	goto	u1370
  3836   0022B8                     u1371:
  3837   0022B8  EF2E  F011         	goto	l2672
  3838   0022BC                     u1370:
  3839   0022BC                     
  3840                           ;../dc_motor.c: 103:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3841   0022BC  0E29               	movlw	41
  3842   0022BE  6E1F               	movwf	(??_reverse_fromcard+1)^0,c
  3843   0022C0  0E96               	movlw	150
  3844   0022C2  6E1E               	movwf	??_reverse_fromcard^0,c
  3845   0022C4  0E7F               	movlw	127
  3846   0022C6                     u1857:
  3847   0022C6  2EE8               	decfsz	wreg,f,c
  3848   0022C8  D7FE               	bra	u1857
  3849   0022CA  2E1E               	decfsz	??_reverse_fromcard^0,f,c
  3850   0022CC  D7FC               	bra	u1857
  3851   0022CE  2E1F               	decfsz	(??_reverse_fromcard+1)^0,f,c
  3852   0022D0  D7FA               	bra	u1857
  3853   0022D2  F000               	nop	
  3854   0022D4  0012               	return		;funcret
  3855   0022D6                     __end_of_reverse_fromcard:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _left_90 *****************
  3859 ;; Defined at:
  3860 ;;		line 136 in file "../dc_motor.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3863 ;;		 -> main@motorL(9), 
  3864 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3865 ;;		 -> main@motorR(9), 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  i               2   31[COMRAM] int 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;Total ram usage:        8 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 3
  3884 ;; This function calls:
  3885 ;;		_setMotorPWM
  3886 ;; This function is called by:
  3887 ;;		_motor_action
  3888 ;;		_motor_action_return
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text21
  3893   001FAA                     __ptext21:
  3894                           	callstack 0
  3895   001FAA                     _left_90:
  3896                           	callstack 26
  3897   001FAA                     
  3898                           ;../dc_motor.c: 136: void left_90(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.
      +                          c: 137: {;../dc_motor.c: 138:     mL->direction = 0;
  3899   001FAA  EE20 F001          	lfsr	2,1
  3900   001FAE  501A               	movf	left_90@mL^0,w,c
  3901   001FB0  26D9               	addwf	fsr2l,f,c
  3902   001FB2  501B               	movf	(left_90@mL+1)^0,w,c
  3903   001FB4  22DA               	addwfc	fsr2h,f,c
  3904   001FB6  0E00               	movlw	0
  3905   001FB8  6EDF               	movwf	indf2,c
  3906                           
  3907                           ;../dc_motor.c: 139:     mR->direction = 1;
  3908   001FBA  EE20 F001          	lfsr	2,1
  3909   001FBE  501C               	movf	left_90@mR^0,w,c
  3910   001FC0  26D9               	addwf	fsr2l,f,c
  3911   001FC2  501D               	movf	(left_90@mR+1)^0,w,c
  3912   001FC4  22DA               	addwfc	fsr2h,f,c
  3913   001FC6  0E01               	movlw	1
  3914   001FC8  6EDF               	movwf	indf2,c
  3915   001FCA                     
  3916                           ;../dc_motor.c: 140:     for (int i = 0;i<50;i = i + 2)
  3917   001FCA  0E00               	movlw	0
  3918   001FCC  6E21               	movwf	(left_90@i+1)^0,c
  3919   001FCE  0E00               	movlw	0
  3920   001FD0  6E20               	movwf	left_90@i^0,c
  3921   001FD2                     l2740:
  3922                           
  3923                           ;../dc_motor.c: 141:     {;../dc_motor.c: 142:         mL->power = 50 + i;
  3924   001FD2  5020               	movf	left_90@i^0,w,c
  3925   001FD4  0F32               	addlw	50
  3926   001FD6  C01A  FFD9         	movff	left_90@mL,fsr2l
  3927   001FDA  C01B  FFDA         	movff	left_90@mL+1,fsr2h
  3928   001FDE  6EDF               	movwf	indf2,c
  3929   001FE0                     
  3930                           ;../dc_motor.c: 143:         mR->power = i;
  3931   001FE0  C01C  FFD9         	movff	left_90@mR,fsr2l
  3932   001FE4  C01D  FFDA         	movff	left_90@mR+1,fsr2h
  3933   001FE8  C020  FFDF         	movff	left_90@i,indf2
  3934   001FEC                     
  3935                           ;../dc_motor.c: 144:         setMotorPWM(mL);
  3936   001FEC  C01A  F00F         	movff	left_90@mL,setMotorPWM@m
  3937   001FF0  C01B  F010         	movff	left_90@mL+1,setMotorPWM@m+1
  3938   001FF4  EC94  F00A         	call	_setMotorPWM	;wreg free
  3939   001FF8                     
  3940                           ;../dc_motor.c: 145:         setMotorPWM(mR);
  3941   001FF8  C01C  F00F         	movff	left_90@mR,setMotorPWM@m
  3942   001FFC  C01D  F010         	movff	left_90@mR+1,setMotorPWM@m+1
  3943   002000  EC94  F00A         	call	_setMotorPWM	;wreg free
  3944   002004                     
  3945                           ;../dc_motor.c: 146:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3946   002004  0E35               	movlw	53
  3947   002006                     u1867:
  3948   002006  2EE8               	decfsz	wreg,f,c
  3949   002008  D7FE               	bra	u1867
  3950   00200A  F000               	nop	
  3951   00200C                     
  3952                           ;../dc_motor.c: 147:     }
  3953   00200C  0E02               	movlw	2
  3954   00200E  2420               	addwf	left_90@i^0,w,c
  3955   002010  6E20               	movwf	left_90@i^0,c
  3956   002012  0E00               	movlw	0
  3957   002014  2021               	addwfc	(left_90@i+1)^0,w,c
  3958   002016  6E21               	movwf	(left_90@i+1)^0,c
  3959   002018  BE21               	btfsc	(left_90@i+1)^0,7,c
  3960   00201A  EF18  F010         	goto	u1401
  3961   00201E  5021               	movf	(left_90@i+1)^0,w,c
  3962   002020  E109               	bnz	u1400
  3963   002022  0E32               	movlw	50
  3964   002024  5C20               	subwf	left_90@i^0,w,c
  3965   002026  A0D8               	btfss	status,0,c
  3966   002028  EF18  F010         	goto	u1401
  3967   00202C  EF1A  F010         	goto	u1400
  3968   002030                     u1401:
  3969   002030  EFE9  F00F         	goto	l2740
  3970   002034                     u1400:
  3971   002034                     
  3972                           ;../dc_motor.c: 148:     _delay((unsigned long)((165)*(64000000/4000.0)));
  3973   002034  0E0E               	movlw	14
  3974   002036  6E1F               	movwf	(??_left_90+1)^0,c
  3975   002038  0E65               	movlw	101
  3976   00203A  6E1E               	movwf	??_left_90^0,c
  3977   00203C  0E87               	movlw	135
  3978   00203E                     u1877:
  3979   00203E  2EE8               	decfsz	wreg,f,c
  3980   002040  D7FE               	bra	u1877
  3981   002042  2E1E               	decfsz	??_left_90^0,f,c
  3982   002044  D7FC               	bra	u1877
  3983   002046  2E1F               	decfsz	(??_left_90+1)^0,f,c
  3984   002048  D7FA               	bra	u1877
  3985   00204A  F000               	nop	
  3986   00204C  0012               	return		;funcret
  3987   00204E                     __end_of_left_90:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _left_135 *****************
  3991 ;; Defined at:
  3992 ;;		line 181 in file "../dc_motor.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  3995 ;;		 -> main@motorL(9), 
  3996 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  3997 ;;		 -> main@motorR(9), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  i               2   31[COMRAM] int 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;Total ram usage:        8 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 3
  4016 ;; This function calls:
  4017 ;;		_setMotorPWM
  4018 ;; This function is called by:
  4019 ;;		_motor_action
  4020 ;;		_motor_action_return
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text22
  4025   0022D6                     __ptext22:
  4026                           	callstack 0
  4027   0022D6                     _left_135:
  4028                           	callstack 26
  4029   0022D6                     
  4030                           ;../dc_motor.c: 181: void left_135(struct DC_motor *mL, struct DC_motor *mR);../dc_motor
      +                          .c: 182: {;../dc_motor.c: 183:     mL->direction = 0;
  4031   0022D6  EE20 F001          	lfsr	2,1
  4032   0022DA  501A               	movf	left_135@mL^0,w,c
  4033   0022DC  26D9               	addwf	fsr2l,f,c
  4034   0022DE  501B               	movf	(left_135@mL+1)^0,w,c
  4035   0022E0  22DA               	addwfc	fsr2h,f,c
  4036   0022E2  0E00               	movlw	0
  4037   0022E4  6EDF               	movwf	indf2,c
  4038                           
  4039                           ;../dc_motor.c: 184:     mR->direction = 1;
  4040   0022E6  EE20 F001          	lfsr	2,1
  4041   0022EA  501C               	movf	left_135@mR^0,w,c
  4042   0022EC  26D9               	addwf	fsr2l,f,c
  4043   0022EE  501D               	movf	(left_135@mR+1)^0,w,c
  4044   0022F0  22DA               	addwfc	fsr2h,f,c
  4045   0022F2  0E01               	movlw	1
  4046   0022F4  6EDF               	movwf	indf2,c
  4047   0022F6                     
  4048                           ;../dc_motor.c: 185:     for (int i = 0;i<50;i = i + 2)
  4049   0022F6  0E00               	movlw	0
  4050   0022F8  6E21               	movwf	(left_135@i+1)^0,c
  4051   0022FA  0E00               	movlw	0
  4052   0022FC  6E20               	movwf	left_135@i^0,c
  4053   0022FE                     l2788:
  4054                           
  4055                           ;../dc_motor.c: 186:     {;../dc_motor.c: 187:         mL->power = 50 + i;
  4056   0022FE  5020               	movf	left_135@i^0,w,c
  4057   002300  0F32               	addlw	50
  4058   002302  C01A  FFD9         	movff	left_135@mL,fsr2l
  4059   002306  C01B  FFDA         	movff	left_135@mL+1,fsr2h
  4060   00230A  6EDF               	movwf	indf2,c
  4061   00230C                     
  4062                           ;../dc_motor.c: 188:         mR->power = i;
  4063   00230C  C01C  FFD9         	movff	left_135@mR,fsr2l
  4064   002310  C01D  FFDA         	movff	left_135@mR+1,fsr2h
  4065   002314  C020  FFDF         	movff	left_135@i,indf2
  4066   002318                     
  4067                           ;../dc_motor.c: 189:         setMotorPWM(mL);
  4068   002318  C01A  F00F         	movff	left_135@mL,setMotorPWM@m
  4069   00231C  C01B  F010         	movff	left_135@mL+1,setMotorPWM@m+1
  4070   002320  EC94  F00A         	call	_setMotorPWM	;wreg free
  4071   002324                     
  4072                           ;../dc_motor.c: 190:         setMotorPWM(mR);
  4073   002324  C01C  F00F         	movff	left_135@mR,setMotorPWM@m
  4074   002328  C01D  F010         	movff	left_135@mR+1,setMotorPWM@m+1
  4075   00232C  EC94  F00A         	call	_setMotorPWM	;wreg free
  4076   002330                     
  4077                           ;../dc_motor.c: 191:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4078   002330  0E35               	movlw	53
  4079   002332                     u1887:
  4080   002332  2EE8               	decfsz	wreg,f,c
  4081   002334  D7FE               	bra	u1887
  4082   002336  F000               	nop	
  4083   002338                     
  4084                           ;../dc_motor.c: 192:     }
  4085   002338  0E02               	movlw	2
  4086   00233A  2420               	addwf	left_135@i^0,w,c
  4087   00233C  6E20               	movwf	left_135@i^0,c
  4088   00233E  0E00               	movlw	0
  4089   002340  2021               	addwfc	(left_135@i+1)^0,w,c
  4090   002342  6E21               	movwf	(left_135@i+1)^0,c
  4091   002344  BE21               	btfsc	(left_135@i+1)^0,7,c
  4092   002346  EFAE  F011         	goto	u1421
  4093   00234A  5021               	movf	(left_135@i+1)^0,w,c
  4094   00234C  E109               	bnz	u1420
  4095   00234E  0E32               	movlw	50
  4096   002350  5C20               	subwf	left_135@i^0,w,c
  4097   002352  A0D8               	btfss	status,0,c
  4098   002354  EFAE  F011         	goto	u1421
  4099   002358  EFB0  F011         	goto	u1420
  4100   00235C                     u1421:
  4101   00235C  EF7F  F011         	goto	l2788
  4102   002360                     u1420:
  4103   002360                     
  4104                           ;../dc_motor.c: 193:     _delay((unsigned long)((230)*(64000000/4000.0)));
  4105   002360  0E13               	movlw	19
  4106   002362  6E1F               	movwf	(??_left_135+1)^0,c
  4107   002364  0EAC               	movlw	172
  4108   002366  6E1E               	movwf	??_left_135^0,c
  4109   002368  0E2A               	movlw	42
  4110   00236A                     u1897:
  4111   00236A  2EE8               	decfsz	wreg,f,c
  4112   00236C  D7FE               	bra	u1897
  4113   00236E  2E1E               	decfsz	??_left_135^0,f,c
  4114   002370  D7FC               	bra	u1897
  4115   002372  2E1F               	decfsz	(??_left_135+1)^0,f,c
  4116   002374  D7FA               	bra	u1897
  4117   002376  0012               	return		;funcret
  4118   002378                     __end_of_left_135:
  4119                           	callstack 0
  4120                           
  4121 ;; *************** function _forward *****************
  4122 ;; Defined at:
  4123 ;;		line 77 in file "../dc_motor.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4126 ;;		 -> main@motorL(9), 
  4127 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4128 ;;		 -> main@motorR(9), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  i               2   29[COMRAM] int 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;Total ram usage:        6 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 3
  4147 ;; This function calls:
  4148 ;;		_setMotorPWM
  4149 ;; This function is called by:
  4150 ;;		_main
  4151 ;;		_motor_action
  4152 ;;		_motor_action_return
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text23
  4157   002406                     __ptext23:
  4158                           	callstack 0
  4159   002406                     _forward:
  4160                           	callstack 26
  4161   002406                     
  4162                           ;../dc_motor.c: 77: void forward(struct DC_motor *mL, struct DC_motor *mR);../dc_motor.c
      +                          : 78: {;../dc_motor.c: 79:     mL->direction = 1;
  4163   002406  EE20 F001          	lfsr	2,1
  4164   00240A  501A               	movf	forward@mL^0,w,c
  4165   00240C  26D9               	addwf	fsr2l,f,c
  4166   00240E  501B               	movf	(forward@mL+1)^0,w,c
  4167   002410  22DA               	addwfc	fsr2h,f,c
  4168   002412  0E01               	movlw	1
  4169   002414  6EDF               	movwf	indf2,c
  4170                           
  4171                           ;../dc_motor.c: 80:     mR->direction = 1;
  4172   002416  EE20 F001          	lfsr	2,1
  4173   00241A  501C               	movf	forward@mR^0,w,c
  4174   00241C  26D9               	addwf	fsr2l,f,c
  4175   00241E  501D               	movf	(forward@mR+1)^0,w,c
  4176   002420  22DA               	addwfc	fsr2h,f,c
  4177   002422  0E01               	movlw	1
  4178   002424  6EDF               	movwf	indf2,c
  4179   002426                     
  4180                           ;../dc_motor.c: 81:     for (int i=0;i<31;i=i+2)
  4181   002426  0E00               	movlw	0
  4182   002428  6E1F               	movwf	(forward@i+1)^0,c
  4183   00242A  0E00               	movlw	0
  4184   00242C  6E1E               	movwf	forward@i^0,c
  4185   00242E                     l2608:
  4186                           
  4187                           ;../dc_motor.c: 82:     {;../dc_motor.c: 83:         mL->power = i;
  4188   00242E  C01A  FFD9         	movff	forward@mL,fsr2l
  4189   002432  C01B  FFDA         	movff	forward@mL+1,fsr2h
  4190   002436  C01E  FFDF         	movff	forward@i,indf2
  4191                           
  4192                           ;../dc_motor.c: 84:         mR->power = i;
  4193   00243A  C01C  FFD9         	movff	forward@mR,fsr2l
  4194   00243E  C01D  FFDA         	movff	forward@mR+1,fsr2h
  4195   002442  C01E  FFDF         	movff	forward@i,indf2
  4196   002446                     
  4197                           ;../dc_motor.c: 85:         setMotorPWM(mL);
  4198   002446  C01A  F00F         	movff	forward@mL,setMotorPWM@m
  4199   00244A  C01B  F010         	movff	forward@mL+1,setMotorPWM@m+1
  4200   00244E  EC94  F00A         	call	_setMotorPWM	;wreg free
  4201   002452                     
  4202                           ;../dc_motor.c: 86:         setMotorPWM(mR);
  4203   002452  C01C  F00F         	movff	forward@mR,setMotorPWM@m
  4204   002456  C01D  F010         	movff	forward@mR+1,setMotorPWM@m+1
  4205   00245A  EC94  F00A         	call	_setMotorPWM	;wreg free
  4206   00245E                     
  4207                           ;../dc_motor.c: 87:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  4208   00245E  0E6A               	movlw	106
  4209   002460                     u1907:
  4210   002460  2EE8               	decfsz	wreg,f,c
  4211   002462  D7FE               	bra	u1907
  4212   002464  D000               	nop2	
  4213   002466                     
  4214                           ;../dc_motor.c: 88:     }
  4215   002466  0E02               	movlw	2
  4216   002468  241E               	addwf	forward@i^0,w,c
  4217   00246A  6E1E               	movwf	forward@i^0,c
  4218   00246C  0E00               	movlw	0
  4219   00246E  201F               	addwfc	(forward@i+1)^0,w,c
  4220   002470  6E1F               	movwf	(forward@i+1)^0,c
  4221   002472  BE1F               	btfsc	(forward@i+1)^0,7,c
  4222   002474  EF45  F012         	goto	u1341
  4223   002478  501F               	movf	(forward@i+1)^0,w,c
  4224   00247A  E109               	bnz	u1340
  4225   00247C  0E1F               	movlw	31
  4226   00247E  5C1E               	subwf	forward@i^0,w,c
  4227   002480  A0D8               	btfss	status,0,c
  4228   002482  EF45  F012         	goto	u1341
  4229   002486  EF47  F012         	goto	u1340
  4230   00248A                     u1341:
  4231   00248A  EF17  F012         	goto	l2608
  4232   00248E                     u1340:
  4233   00248E  0012               	return		;funcret
  4234   002490                     __end_of_forward:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _setMotorPWM *****************
  4238 ;; Defined at:
  4239 ;;		line 38 in file "../dc_motor.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  m               2   14[COMRAM] PTR struct DC_motor
  4242 ;;		 -> main@motorR(9), main@motorL(9), 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  PWMduty         2   23[COMRAM] int 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;Total ram usage:       11 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 2
  4261 ;; This function calls:
  4262 ;;		___awdiv
  4263 ;;		___wmul
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;;		_stop
  4267 ;;		_forward
  4268 ;;		_reverse_fromcard
  4269 ;;		_reverse_onesquare
  4270 ;;		_right_90
  4271 ;;		_left_90
  4272 ;;		_spin_180
  4273 ;;		_right_135
  4274 ;;		_left_135
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text24
  4279   001528                     __ptext24:
  4280                           	callstack 0
  4281   001528                     _setMotorPWM:
  4282                           	callstack 27
  4283   001528                     
  4284                           ;../dc_motor.c: 38: void setMotorPWM(struct DC_motor *m);../dc_motor.c: 39: {;../dc_moto
      +                          r.c: 40:  int PWMduty;;../dc_motor.c: 42:  if (m->direction){
  4285   001528  EE20 F001          	lfsr	2,1
  4286   00152C  500F               	movf	setMotorPWM@m^0,w,c
  4287   00152E  26D9               	addwf	fsr2l,f,c
  4288   001530  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4289   001532  22DA               	addwfc	fsr2h,f,c
  4290   001534  50DF               	movf	indf2,w,c
  4291   001536  B4D8               	btfsc	status,2,c
  4292   001538  EFA0  F00A         	goto	u1271
  4293   00153C  EFA2  F00A         	goto	u1270
  4294   001540                     u1271:
  4295   001540  EFD3  F00A         	goto	l2522
  4296   001544                     u1270:
  4297   001544                     
  4298                           ;../dc_motor.c: 44:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  4299   001544  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4300   001548  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4301   00154C  50DF               	movf	indf2,w,c
  4302   00154E  6E11               	movwf	??_setMotorPWM^0,c
  4303   001550  5011               	movf	??_setMotorPWM^0,w,c
  4304   001552  6E01               	movwf	___wmul@multiplier^0,c
  4305   001554  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4306   001556  EE20 F007          	lfsr	2,7
  4307   00155A  500F               	movf	setMotorPWM@m^0,w,c
  4308   00155C  26D9               	addwf	fsr2l,f,c
  4309   00155E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4310   001560  22DA               	addwfc	fsr2h,f,c
  4311   001562  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4312   001566  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4313   00156A  EC82  F014         	call	___wmul	;wreg free
  4314   00156E  C001  F007         	movff	?___wmul,___awdiv@dividend
  4315   001572  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  4316   001576  0E00               	movlw	0
  4317   001578  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4318   00157A  0E64               	movlw	100
  4319   00157C  6E09               	movwf	___awdiv@divisor^0,c
  4320   00157E  EC6F  F00E         	call	___awdiv	;wreg free
  4321   001582  EE20 F007          	lfsr	2,7
  4322   001586  500F               	movf	setMotorPWM@m^0,w,c
  4323   001588  26D9               	addwf	fsr2l,f,c
  4324   00158A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4325   00158C  22DA               	addwfc	fsr2h,f,c
  4326   00158E  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  4327   001592  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  4328   001596  5007               	movf	?___awdiv^0,w,c
  4329   001598  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  4330   00159A  6E18               	movwf	setMotorPWM@PWMduty^0,c
  4331   00159C  5008               	movf	(?___awdiv+1)^0,w,c
  4332   00159E  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  4333   0015A0  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  4334                           
  4335                           ;../dc_motor.c: 45:  }
  4336   0015A2  EFF6  F00A         	goto	l2524
  4337   0015A6                     l2522:
  4338                           
  4339                           ;../dc_motor.c: 48:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  4340   0015A6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4341   0015AA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4342   0015AE  50DF               	movf	indf2,w,c
  4343   0015B0  6E11               	movwf	??_setMotorPWM^0,c
  4344   0015B2  5011               	movf	??_setMotorPWM^0,w,c
  4345   0015B4  6E01               	movwf	___wmul@multiplier^0,c
  4346   0015B6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4347   0015B8  EE20 F007          	lfsr	2,7
  4348   0015BC  500F               	movf	setMotorPWM@m^0,w,c
  4349   0015BE  26D9               	addwf	fsr2l,f,c
  4350   0015C0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4351   0015C2  22DA               	addwfc	fsr2h,f,c
  4352   0015C4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4353   0015C8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4354   0015CC  EC82  F014         	call	___wmul	;wreg free
  4355   0015D0  C001  F007         	movff	?___wmul,___awdiv@dividend
  4356   0015D4  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  4357   0015D8  0E00               	movlw	0
  4358   0015DA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4359   0015DC  0E64               	movlw	100
  4360   0015DE  6E09               	movwf	___awdiv@divisor^0,c
  4361   0015E0  EC6F  F00E         	call	___awdiv	;wreg free
  4362   0015E4  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  4363   0015E8  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  4364   0015EC                     l2524:
  4365                           
  4366                           ;../dc_motor.c: 51:  *(m->dutyHighByte) = PWMduty;
  4367   0015EC  EE20 F002          	lfsr	2,2
  4368   0015F0  500F               	movf	setMotorPWM@m^0,w,c
  4369   0015F2  26D9               	addwf	fsr2l,f,c
  4370   0015F4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4371   0015F6  22DA               	addwfc	fsr2h,f,c
  4372   0015F8  CFDE F011          	movff	postinc2,??_setMotorPWM
  4373   0015FC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4374   001600  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4375   001604  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4376   001608  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  4377   00160C                     
  4378                           ;../dc_motor.c: 53:  if (m->direction){
  4379   00160C  EE20 F001          	lfsr	2,1
  4380   001610  500F               	movf	setMotorPWM@m^0,w,c
  4381   001612  26D9               	addwf	fsr2l,f,c
  4382   001614  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4383   001616  22DA               	addwfc	fsr2h,f,c
  4384   001618  50DF               	movf	indf2,w,c
  4385   00161A  B4D8               	btfsc	status,2,c
  4386   00161C  EF12  F00B         	goto	u1281
  4387   001620  EF14  F00B         	goto	u1280
  4388   001624                     u1281:
  4389   001624  EF49  F00B         	goto	l2530
  4390   001628                     u1280:
  4391   001628                     
  4392                           ;../dc_motor.c: 54:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  4393   001628  EE20 F004          	lfsr	2,4
  4394   00162C  500F               	movf	setMotorPWM@m^0,w,c
  4395   00162E  26D9               	addwf	fsr2l,f,c
  4396   001630  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4397   001632  22DA               	addwfc	fsr2h,f,c
  4398   001634  CFDE F011          	movff	postinc2,??_setMotorPWM
  4399   001638  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4400   00163C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4401   001640  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4402   001644  EE10 F004          	lfsr	1,4
  4403   001648  500F               	movf	setMotorPWM@m^0,w,c
  4404   00164A  26E1               	addwf	fsr1l,f,c
  4405   00164C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4406   00164E  22E2               	addwfc	fsr1h,f,c
  4407   001650  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  4408   001654  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  4409   001658  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4410   00165C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4411   001660  50E7               	movf	indf1,w,c
  4412   001662  6E15               	movwf	(??_setMotorPWM+4)^0,c
  4413   001664  EE10 F006          	lfsr	1,6
  4414   001668  500F               	movf	setMotorPWM@m^0,w,c
  4415   00166A  26E1               	addwf	fsr1l,f,c
  4416   00166C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4417   00166E  22E2               	addwfc	fsr1h,f,c
  4418   001670  50E7               	movf	indf1,w,c
  4419   001672  6E16               	movwf	(??_setMotorPWM+5)^0,c
  4420   001674  0E01               	movlw	1
  4421   001676  6E17               	movwf	(??_setMotorPWM+6)^0,c
  4422   001678  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  4423   00167A  EF41  F00B         	goto	u1294
  4424   00167E                     u1295:
  4425   00167E  90D8               	bcf	status,0,c
  4426   001680  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  4427   001682                     u1294:
  4428   001682  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  4429   001684  EF3F  F00B         	goto	u1295
  4430   001688  5017               	movf	(??_setMotorPWM+6)^0,w,c
  4431   00168A  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  4432   00168C  6EDF               	movwf	indf2,c
  4433                           
  4434                           ;../dc_motor.c: 55:  } else {
  4435   00168E  EF7D  F00B         	goto	l274
  4436   001692                     l2530:
  4437                           
  4438                           ;../dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  4439   001692  EE20 F004          	lfsr	2,4
  4440   001696  500F               	movf	setMotorPWM@m^0,w,c
  4441   001698  26D9               	addwf	fsr2l,f,c
  4442   00169A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4443   00169C  22DA               	addwfc	fsr2h,f,c
  4444   00169E  CFDE F011          	movff	postinc2,??_setMotorPWM
  4445   0016A2  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4446   0016A6  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4447   0016AA  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4448   0016AE  EE10 F004          	lfsr	1,4
  4449   0016B2  500F               	movf	setMotorPWM@m^0,w,c
  4450   0016B4  26E1               	addwf	fsr1l,f,c
  4451   0016B6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4452   0016B8  22E2               	addwfc	fsr1h,f,c
  4453   0016BA  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  4454   0016BE  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  4455   0016C2  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  4456   0016C6  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  4457   0016CA  50E7               	movf	indf1,w,c
  4458   0016CC  6E15               	movwf	(??_setMotorPWM+4)^0,c
  4459   0016CE  EE10 F006          	lfsr	1,6
  4460   0016D2  500F               	movf	setMotorPWM@m^0,w,c
  4461   0016D4  26E1               	addwf	fsr1l,f,c
  4462   0016D6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4463   0016D8  22E2               	addwfc	fsr1h,f,c
  4464   0016DA  50E7               	movf	indf1,w,c
  4465   0016DC  6E16               	movwf	(??_setMotorPWM+5)^0,c
  4466   0016DE  0E01               	movlw	1
  4467   0016E0  6E17               	movwf	(??_setMotorPWM+6)^0,c
  4468   0016E2  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  4469   0016E4  EF76  F00B         	goto	u1304
  4470   0016E8                     u1305:
  4471   0016E8  90D8               	bcf	status,0,c
  4472   0016EA  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  4473   0016EC                     u1304:
  4474   0016EC  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  4475   0016EE  EF74  F00B         	goto	u1305
  4476   0016F2  5017               	movf	(??_setMotorPWM+6)^0,w,c
  4477   0016F4  0AFF               	xorlw	255
  4478   0016F6  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  4479   0016F8  6EDF               	movwf	indf2,c
  4480   0016FA                     l274:
  4481   0016FA  0012               	return		;funcret
  4482   0016FC                     __end_of_setMotorPWM:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function ___wmul *****************
  4486 ;; Defined at:
  4487 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  multiplier      2    0[COMRAM] unsigned int 
  4490 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  product         2    4[COMRAM] unsigned int 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  2    0[COMRAM] unsigned int 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, prodl, prodh
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4506 ;;Total ram usage:        6 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_setMotorPWM
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text25
  4517   002904                     __ptext25:
  4518                           	callstack 0
  4519   002904                     ___wmul:
  4520                           	callstack 27
  4521   002904  5001               	movf	___wmul@multiplier^0,w,c
  4522   002906  0203               	mulwf	___wmul@multiplicand^0,c
  4523   002908  CFF3 F005          	movff	prodl,___wmul@product
  4524   00290C  CFF4 F006          	movff	prodh,___wmul@product+1
  4525   002910  5001               	movf	___wmul@multiplier^0,w,c
  4526   002912  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4527   002914  50F3               	movf	243,w,c
  4528   002916  2606               	addwf	(___wmul@product+1)^0,f,c
  4529   002918  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4530   00291A  0203               	mulwf	___wmul@multiplicand^0,c
  4531   00291C  50F3               	movf	243,w,c
  4532   00291E  2606               	addwf	(___wmul@product+1)^0,f,c
  4533   002920  C005  F001         	movff	___wmul@product,?___wmul
  4534   002924  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4535   002928  0012               	return		;funcret
  4536   00292A                     __end_of___wmul:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function ___awdiv *****************
  4540 ;; Defined at:
  4541 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  dividend        2    6[COMRAM] int 
  4544 ;;  divisor         2    8[COMRAM] int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  quotient        2   12[COMRAM] int 
  4547 ;;  sign            1   11[COMRAM] unsigned char 
  4548 ;;  counter         1   10[COMRAM] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2    6[COMRAM] int 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;Total ram usage:        8 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_setMotorPWM
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text26
  4573   001CDE                     __ptext26:
  4574                           	callstack 0
  4575   001CDE                     ___awdiv:
  4576                           	callstack 27
  4577   001CDE  0E00               	movlw	0
  4578   001CE0  6E0C               	movwf	___awdiv@sign^0,c
  4579   001CE2  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  4580   001CE4  EF78  F00E         	goto	u1090
  4581   001CE8  EF76  F00E         	goto	u1091
  4582   001CEC                     u1091:
  4583   001CEC  EF7E  F00E         	goto	l2400
  4584   001CF0                     u1090:
  4585   001CF0  6C09               	negf	___awdiv@divisor^0,c
  4586   001CF2  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  4587   001CF4  B0D8               	btfsc	status,0,c
  4588   001CF6  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  4589   001CF8  0E01               	movlw	1
  4590   001CFA  6E0C               	movwf	___awdiv@sign^0,c
  4591   001CFC                     l2400:
  4592   001CFC  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  4593   001CFE  EF85  F00E         	goto	u1100
  4594   001D02  EF83  F00E         	goto	u1101
  4595   001D06                     u1101:
  4596   001D06  EF8B  F00E         	goto	l2406
  4597   001D0A                     u1100:
  4598   001D0A  6C07               	negf	___awdiv@dividend^0,c
  4599   001D0C  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  4600   001D0E  B0D8               	btfsc	status,0,c
  4601   001D10  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  4602   001D12  0E01               	movlw	1
  4603   001D14  1A0C               	xorwf	___awdiv@sign^0,f,c
  4604   001D16                     l2406:
  4605   001D16  0E00               	movlw	0
  4606   001D18  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  4607   001D1A  0E00               	movlw	0
  4608   001D1C  6E0D               	movwf	___awdiv@quotient^0,c
  4609   001D1E  5009               	movf	___awdiv@divisor^0,w,c
  4610   001D20  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  4611   001D22  B4D8               	btfsc	status,2,c
  4612   001D24  EF96  F00E         	goto	u1111
  4613   001D28  EF98  F00E         	goto	u1110
  4614   001D2C                     u1111:
  4615   001D2C  EFC0  F00E         	goto	l2428
  4616   001D30                     u1110:
  4617   001D30  0E01               	movlw	1
  4618   001D32  6E0B               	movwf	___awdiv@counter^0,c
  4619   001D34  EFA0  F00E         	goto	l2414
  4620   001D38                     l2412:
  4621   001D38  90D8               	bcf	status,0,c
  4622   001D3A  3609               	rlcf	___awdiv@divisor^0,f,c
  4623   001D3C  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  4624   001D3E  2A0B               	incf	___awdiv@counter^0,f,c
  4625   001D40                     l2414:
  4626   001D40  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4627   001D42  EFA5  F00E         	goto	u1121
  4628   001D46  EFA7  F00E         	goto	u1120
  4629   001D4A                     u1121:
  4630   001D4A  EF9C  F00E         	goto	l2412
  4631   001D4E                     u1120:
  4632   001D4E                     l2416:
  4633   001D4E  90D8               	bcf	status,0,c
  4634   001D50  360D               	rlcf	___awdiv@quotient^0,f,c
  4635   001D52  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  4636   001D54  5009               	movf	___awdiv@divisor^0,w,c
  4637   001D56  5C07               	subwf	___awdiv@dividend^0,w,c
  4638   001D58  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4639   001D5A  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  4640   001D5C  A0D8               	btfss	status,0,c
  4641   001D5E  EFB3  F00E         	goto	u1131
  4642   001D62  EFB5  F00E         	goto	u1130
  4643   001D66                     u1131:
  4644   001D66  EFBA  F00E         	goto	l2424
  4645   001D6A                     u1130:
  4646   001D6A  5009               	movf	___awdiv@divisor^0,w,c
  4647   001D6C  5E07               	subwf	___awdiv@dividend^0,f,c
  4648   001D6E  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4649   001D70  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  4650   001D72  800D               	bsf	___awdiv@quotient^0,0,c
  4651   001D74                     l2424:
  4652   001D74  90D8               	bcf	status,0,c
  4653   001D76  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  4654   001D78  3209               	rrcf	___awdiv@divisor^0,f,c
  4655   001D7A  2E0B               	decfsz	___awdiv@counter^0,f,c
  4656   001D7C  EFA7  F00E         	goto	l2416
  4657   001D80                     l2428:
  4658   001D80  500C               	movf	___awdiv@sign^0,w,c
  4659   001D82  B4D8               	btfsc	status,2,c
  4660   001D84  EFC6  F00E         	goto	u1141
  4661   001D88  EFC8  F00E         	goto	u1140
  4662   001D8C                     u1141:
  4663   001D8C  EFCC  F00E         	goto	l2432
  4664   001D90                     u1140:
  4665   001D90  6C0D               	negf	___awdiv@quotient^0,c
  4666   001D92  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  4667   001D94  B0D8               	btfsc	status,0,c
  4668   001D96  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  4669   001D98                     l2432:
  4670   001D98  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4671   001D9C  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4672   001DA0  0012               	return		;funcret
  4673   001DA2                     __end_of___awdiv:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _initUSART4 *****************
  4677 ;; Defined at:
  4678 ;;		line 5 in file "../serial.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 1
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text27
  4707   00296A                     __ptext27:
  4708                           	callstack 0
  4709   00296A                     _initUSART4:
  4710                           	callstack 29
  4711   00296A                     
  4712                           ;../serial.c: 9:     RC0PPS = 0x12;
  4713   00296A  0E12               	movlw	18
  4714   00296C  010E               	movlb	14	; () banked
  4715   00296E  6F62               	movwf	98,b	;volatile
  4716                           
  4717                           ;../serial.c: 10:     RX4PPS = 0x11;
  4718   002970  0E11               	movlw	17
  4719   002972  6F15               	movwf	21,b	;volatile
  4720   002974                     
  4721                           ; BSR set to: 14
  4722                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4723   002974  97E9               	bcf	233,3,b	;volatile
  4724   002976                     
  4725                           ; BSR set to: 14
  4726                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  4727   002976  95E8               	bcf	232,2,b	;volatile
  4728                           
  4729                           ;../serial.c: 14:     SP4BRGL = 103;
  4730   002978  0E67               	movlw	103
  4731   00297A  6FE5               	movwf	229,b	;volatile
  4732                           
  4733                           ;../serial.c: 15:     SP4BRGH = 0;
  4734   00297C  0E00               	movlw	0
  4735   00297E  6FE6               	movwf	230,b	;volatile
  4736   002980                     
  4737                           ; BSR set to: 14
  4738                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  4739   002980  89E7               	bsf	231,4,b	;volatile
  4740   002982                     
  4741                           ; BSR set to: 14
  4742                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  4743   002982  8BE8               	bsf	232,5,b	;volatile
  4744   002984                     
  4745                           ; BSR set to: 14
  4746                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  4747   002984  8FE7               	bsf	231,7,b	;volatile
  4748   002986                     
  4749                           ; BSR set to: 14
  4750   002986  0012               	return		;funcret
  4751   002988                     __end_of_initUSART4:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _initDCmotorsPWM *****************
  4755 ;; Defined at:
  4756 ;;		line 5 in file "../dc_motor.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  PWMperiod       2    0[COMRAM] int 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4774 ;;Total ram usage:        2 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_main
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text28
  4785   00278C                     __ptext28:
  4786                           	callstack 0
  4787   00278C                     _initDCmotorsPWM:
  4788                           	callstack 29
  4789   00278C                     
  4790                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  4791   00278C  9485               	bcf	133,2,c	;volatile
  4792                           
  4793                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  4794   00278E  9885               	bcf	133,4,c	;volatile
  4795                           
  4796                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  4797   002790  9E83               	bcf	131,7,c	;volatile
  4798                           
  4799                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  4800   002792  9C87               	bcf	135,6,c	;volatile
  4801                           
  4802                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  4803   002794  947D               	bcf	125,2,c	;volatile
  4804                           
  4805                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  4806   002796  987D               	bcf	125,4,c	;volatile
  4807                           
  4808                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  4809   002798  9E7B               	bcf	123,7,c	;volatile
  4810                           
  4811                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  4812   00279A  9C7F               	bcf	127,6,c	;volatile
  4813   00279C                     
  4814                           ;../dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  4815   00279C  50BD               	movf	189,w,c	;volatile
  4816   00279E  0B8F               	andlw	-113
  4817   0027A0  0930               	iorlw	48
  4818   0027A2  6EBD               	movwf	189,c	;volatile
  4819                           
  4820                           ;../dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4821   0027A4  0EE0               	movlw	-32
  4822   0027A6  16BE               	andwf	190,f,c	;volatile
  4823                           
  4824                           ;../dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4825   0027A8  50BF               	movf	191,w,c	;volatile
  4826   0027AA  0BF0               	andlw	-16
  4827   0027AC  0901               	iorlw	1
  4828   0027AE  6EBF               	movwf	191,c	;volatile
  4829   0027B0                     
  4830                           ;../dc_motor.c: 23:     T2PR=PWMperiod;
  4831   0027B0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4832   0027B4                     
  4833                           ;../dc_motor.c: 24:     T2CONbits.ON=1;
  4834   0027B4  8EBD               	bsf	189,7,c	;volatile
  4835                           
  4836                           ;../dc_motor.c: 26:     RE2PPS=0x0A;
  4837   0027B6  0E0A               	movlw	10
  4838   0027B8  010E               	movlb	14	; () banked
  4839   0027BA  6F74               	movwf	116,b	;volatile
  4840                           
  4841                           ;../dc_motor.c: 27:     RC7PPS=0x0B;
  4842   0027BC  0E0B               	movlw	11
  4843   0027BE  6F69               	movwf	105,b	;volatile
  4844                           
  4845                           ;../dc_motor.c: 29:     PWM6DCH=0;
  4846   0027C0  0E00               	movlw	0
  4847   0027C2  6EA3               	movwf	163,c	;volatile
  4848                           
  4849                           ;../dc_motor.c: 30:     PWM7DCH=0;
  4850   0027C4  0E00               	movlw	0
  4851   0027C6  6EA0               	movwf	160,c	;volatile
  4852   0027C8                     
  4853                           ; BSR set to: 14
  4854                           ;../dc_motor.c: 32:     PWM6CONbits.EN = 1;
  4855   0027C8  8EA4               	bsf	164,7,c	;volatile
  4856   0027CA                     
  4857                           ; BSR set to: 14
  4858                           ;../dc_motor.c: 33:     PWM7CONbits.EN = 1;
  4859   0027CA  8EA1               	bsf	161,7,c	;volatile
  4860   0027CC                     
  4861                           ; BSR set to: 14
  4862   0027CC  0012               	return		;funcret
  4863   0027CE                     __end_of_initDCmotorsPWM:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _color_read *****************
  4867 ;; Defined at:
  4868 ;;		line 111 in file "../color.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  rgb             2   11[COMRAM] PTR struct RGB_val
  4871 ;;		 -> main@RGB_recorded(8), main@RGB_calibrated(8), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4887 ;;Total ram usage:        4 bytes
  4888 ;; Hardware stack levels used: 1
  4889 ;; Hardware stack levels required when called: 4
  4890 ;; This function calls:
  4891 ;;		_color_read_Blue
  4892 ;;		_color_read_Green
  4893 ;;		_color_read_Luminosity
  4894 ;;		_color_read_Red
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text29
  4901   001E60                     __ptext29:
  4902                           	callstack 0
  4903   001E60                     _color_read:
  4904                           	callstack 26
  4905   001E60                     
  4906                           ;../color.c: 111: void color_read(struct RGB_val *rgb);../color.c: 112: {;../color.c: 11
      +                          3:     rgb->L = color_read_Luminosity();
  4907   001E60  EC2C  F013         	call	_color_read_Luminosity	;wreg free
  4908   001E64  C00C  FFD9         	movff	color_read@rgb,fsr2l
  4909   001E68  C00D  FFDA         	movff	color_read@rgb+1,fsr2h
  4910   001E6C  C005  FFDE         	movff	?_color_read_Luminosity,postinc2
  4911   001E70  C006  FFDD         	movff	?_color_read_Luminosity+1,postdec2
  4912   001E74                     
  4913                           ;../color.c: 114:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4914   001E74  0E09               	movlw	9
  4915   001E76  6E0F               	movwf	(??_color_read+1)^0,c
  4916   001E78  0E1E               	movlw	30
  4917   001E7A  6E0E               	movwf	??_color_read^0,c
  4918   001E7C  0EE4               	movlw	228
  4919   001E7E                     u1917:
  4920   001E7E  2EE8               	decfsz	wreg,f,c
  4921   001E80  D7FE               	bra	u1917
  4922   001E82  2E0E               	decfsz	??_color_read^0,f,c
  4923   001E84  D7FC               	bra	u1917
  4924   001E86  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4925   001E88  D7FA               	bra	u1917
  4926   001E8A  D000               	nop2	
  4927   001E8C                     
  4928                           ;../color.c: 115:     rgb->R = color_read_Red();
  4929   001E8C  EC04  F013         	call	_color_read_Red	;wreg free
  4930   001E90  EE20 F002          	lfsr	2,2
  4931   001E94  500C               	movf	color_read@rgb^0,w,c
  4932   001E96  26D9               	addwf	fsr2l,f,c
  4933   001E98  500D               	movf	(color_read@rgb+1)^0,w,c
  4934   001E9A  22DA               	addwfc	fsr2h,f,c
  4935   001E9C  C005  FFDE         	movff	?_color_read_Red,postinc2
  4936   001EA0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4937                           
  4938                           ;../color.c: 116:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4939   001EA4  0E09               	movlw	9
  4940   001EA6  6E0F               	movwf	(??_color_read+1)^0,c
  4941   001EA8  0E1E               	movlw	30
  4942   001EAA  6E0E               	movwf	??_color_read^0,c
  4943   001EAC  0EE4               	movlw	228
  4944   001EAE                     u1927:
  4945   001EAE  2EE8               	decfsz	wreg,f,c
  4946   001EB0  D7FE               	bra	u1927
  4947   001EB2  2E0E               	decfsz	??_color_read^0,f,c
  4948   001EB4  D7FC               	bra	u1927
  4949   001EB6  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4950   001EB8  D7FA               	bra	u1927
  4951   001EBA  D000               	nop2	
  4952   001EBC                     
  4953                           ;../color.c: 117:     rgb->G = color_read_Green();
  4954   001EBC  EC54  F013         	call	_color_read_Green	;wreg free
  4955   001EC0  EE20 F004          	lfsr	2,4
  4956   001EC4  500C               	movf	color_read@rgb^0,w,c
  4957   001EC6  26D9               	addwf	fsr2l,f,c
  4958   001EC8  500D               	movf	(color_read@rgb+1)^0,w,c
  4959   001ECA  22DA               	addwfc	fsr2h,f,c
  4960   001ECC  C005  FFDE         	movff	?_color_read_Green,postinc2
  4961   001ED0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4962   001ED4                     
  4963                           ;../color.c: 118:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4964   001ED4  0E09               	movlw	9
  4965   001ED6  6E0F               	movwf	(??_color_read+1)^0,c
  4966   001ED8  0E1E               	movlw	30
  4967   001EDA  6E0E               	movwf	??_color_read^0,c
  4968   001EDC  0EE4               	movlw	228
  4969   001EDE                     u1937:
  4970   001EDE  2EE8               	decfsz	wreg,f,c
  4971   001EE0  D7FE               	bra	u1937
  4972   001EE2  2E0E               	decfsz	??_color_read^0,f,c
  4973   001EE4  D7FC               	bra	u1937
  4974   001EE6  2E0F               	decfsz	(??_color_read+1)^0,f,c
  4975   001EE8  D7FA               	bra	u1937
  4976   001EEA  D000               	nop2	
  4977                           
  4978                           ;../color.c: 119:     rgb->B = color_read_Blue();
  4979   001EEC  EC7C  F013         	call	_color_read_Blue	;wreg free
  4980   001EF0  EE20 F006          	lfsr	2,6
  4981   001EF4  500C               	movf	color_read@rgb^0,w,c
  4982   001EF6  26D9               	addwf	fsr2l,f,c
  4983   001EF8  500D               	movf	(color_read@rgb+1)^0,w,c
  4984   001EFA  22DA               	addwfc	fsr2h,f,c
  4985   001EFC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4986   001F00  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4987   001F04  0012               	return		;funcret
  4988   001F06                     __end_of_color_read:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _color_read_Red *****************
  4992 ;; Defined at:
  4993 ;;		line 69 in file "../color.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  tmp             2    9[COMRAM] unsigned int 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  2    4[COMRAM] unsigned int 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;Total ram usage:        7 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 3
  5014 ;; This function calls:
  5015 ;;		_I2C_2_Master_Read
  5016 ;;		_I2C_2_Master_RepStart
  5017 ;;		_I2C_2_Master_Start
  5018 ;;		_I2C_2_Master_Stop
  5019 ;;		_I2C_2_Master_Write
  5020 ;; This function is called by:
  5021 ;;		_color_read
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text30
  5026   002608                     __ptext30:
  5027                           	callstack 0
  5028   002608                     _color_read_Red:
  5029                           	callstack 26
  5030   002608                     
  5031                           ;../color.c: 71:  unsigned int tmp;;../color.c: 72:  I2C_2_Master_Start();
  5032   002608  ECEB  F014         	call	_I2C_2_Master_Start	;wreg free
  5033                           
  5034                           ;../color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  5035   00260C  0E52               	movlw	82
  5036   00260E  ECDB  F014         	call	_I2C_2_Master_Write
  5037                           
  5038                           ;../color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  5039   002612  0EB6               	movlw	182
  5040   002614  ECDB  F014         	call	_I2C_2_Master_Write
  5041                           
  5042                           ;../color.c: 75:  I2C_2_Master_RepStart();
  5043   002618  ECE1  F014         	call	_I2C_2_Master_RepStart	;wreg free
  5044                           
  5045                           ;../color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  5046   00261C  0E53               	movlw	83
  5047   00261E  ECDB  F014         	call	_I2C_2_Master_Write
  5048                           
  5049                           ;../color.c: 77:  tmp=I2C_2_Master_Read(1);
  5050   002622  0E01               	movlw	1
  5051   002624  ECE7  F013         	call	_I2C_2_Master_Read
  5052   002628  6E07               	movwf	??_color_read_Red^0,c
  5053   00262A  5007               	movf	??_color_read_Red^0,w,c
  5054   00262C  6E0A               	movwf	color_read_Red@tmp^0,c
  5055   00262E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5056                           
  5057                           ;../color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5058   002630  0E00               	movlw	0
  5059   002632  ECE7  F013         	call	_I2C_2_Master_Read
  5060   002636  6E07               	movwf	??_color_read_Red^0,c
  5061   002638  5007               	movf	??_color_read_Red^0,w,c
  5062   00263A  6E09               	movwf	(??_color_read_Red+2)^0,c
  5063   00263C  6A08               	clrf	(??_color_read_Red+1)^0,c
  5064   00263E  500A               	movf	color_read_Red@tmp^0,w,c
  5065   002640  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5066   002642  6E0A               	movwf	color_read_Red@tmp^0,c
  5067   002644  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5068   002646  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5069   002648  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5070                           
  5071                           ;../color.c: 79:  I2C_2_Master_Stop();
  5072   00264A  ECE6  F014         	call	_I2C_2_Master_Stop	;wreg free
  5073   00264E                     
  5074                           ;../color.c: 80:  return tmp;
  5075   00264E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5076   002652  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5077   002656  0012               	return		;funcret
  5078   002658                     __end_of_color_read_Red:
  5079                           	callstack 0
  5080                           
  5081 ;; *************** function _color_read_Luminosity *****************
  5082 ;; Defined at:
  5083 ;;		line 55 in file "../color.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  tmp             2    9[COMRAM] unsigned int 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  2    4[COMRAM] unsigned int 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;Total ram usage:        7 bytes
  5102 ;; Hardware stack levels used: 1
  5103 ;; Hardware stack levels required when called: 3
  5104 ;; This function calls:
  5105 ;;		_I2C_2_Master_Read
  5106 ;;		_I2C_2_Master_RepStart
  5107 ;;		_I2C_2_Master_Start
  5108 ;;		_I2C_2_Master_Stop
  5109 ;;		_I2C_2_Master_Write
  5110 ;; This function is called by:
  5111 ;;		_color_read
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text31
  5116   002658                     __ptext31:
  5117                           	callstack 0
  5118   002658                     _color_read_Luminosity:
  5119                           	callstack 26
  5120   002658                     
  5121                           ;../color.c: 57:  unsigned int tmp;;../color.c: 58:  I2C_2_Master_Start();
  5122   002658  ECEB  F014         	call	_I2C_2_Master_Start	;wreg free
  5123                           
  5124                           ;../color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  5125   00265C  0E52               	movlw	82
  5126   00265E  ECDB  F014         	call	_I2C_2_Master_Write
  5127                           
  5128                           ;../color.c: 60:  I2C_2_Master_Write(0xA0 | 0x14);
  5129   002662  0EB4               	movlw	180
  5130   002664  ECDB  F014         	call	_I2C_2_Master_Write
  5131                           
  5132                           ;../color.c: 61:  I2C_2_Master_RepStart();
  5133   002668  ECE1  F014         	call	_I2C_2_Master_RepStart	;wreg free
  5134                           
  5135                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  5136   00266C  0E53               	movlw	83
  5137   00266E  ECDB  F014         	call	_I2C_2_Master_Write
  5138                           
  5139                           ;../color.c: 63:  tmp=I2C_2_Master_Read(1);
  5140   002672  0E01               	movlw	1
  5141   002674  ECE7  F013         	call	_I2C_2_Master_Read
  5142   002678  6E07               	movwf	??_color_read_Luminosity^0,c
  5143   00267A  5007               	movf	??_color_read_Luminosity^0,w,c
  5144   00267C  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  5145   00267E  6A0B               	clrf	(color_read_Luminosity@tmp+1)^0,c
  5146                           
  5147                           ;../color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5148   002680  0E00               	movlw	0
  5149   002682  ECE7  F013         	call	_I2C_2_Master_Read
  5150   002686  6E07               	movwf	??_color_read_Luminosity^0,c
  5151   002688  5007               	movf	??_color_read_Luminosity^0,w,c
  5152   00268A  6E09               	movwf	(??_color_read_Luminosity+2)^0,c
  5153   00268C  6A08               	clrf	(??_color_read_Luminosity+1)^0,c
  5154   00268E  500A               	movf	color_read_Luminosity@tmp^0,w,c
  5155   002690  1008               	iorwf	(??_color_read_Luminosity+1)^0,w,c
  5156   002692  6E0A               	movwf	color_read_Luminosity@tmp^0,c
  5157   002694  500B               	movf	(color_read_Luminosity@tmp+1)^0,w,c
  5158   002696  1009               	iorwf	(??_color_read_Luminosity+2)^0,w,c
  5159   002698  6E0B               	movwf	(color_read_Luminosity@tmp+1)^0,c
  5160                           
  5161                           ;../color.c: 65:  I2C_2_Master_Stop();
  5162   00269A  ECE6  F014         	call	_I2C_2_Master_Stop	;wreg free
  5163   00269E                     
  5164                           ;../color.c: 66:  return tmp;
  5165   00269E  C00A  F005         	movff	color_read_Luminosity@tmp,?_color_read_Luminosity
  5166   0026A2  C00B  F006         	movff	color_read_Luminosity@tmp+1,?_color_read_Luminosity+1
  5167   0026A6  0012               	return		;funcret
  5168   0026A8                     __end_of_color_read_Luminosity:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _color_read_Green *****************
  5172 ;; Defined at:
  5173 ;;		line 83 in file "../color.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  tmp             2    9[COMRAM] unsigned int 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  2    4[COMRAM] unsigned int 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5189 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;Total ram usage:        7 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 3
  5194 ;; This function calls:
  5195 ;;		_I2C_2_Master_Read
  5196 ;;		_I2C_2_Master_RepStart
  5197 ;;		_I2C_2_Master_Start
  5198 ;;		_I2C_2_Master_Stop
  5199 ;;		_I2C_2_Master_Write
  5200 ;; This function is called by:
  5201 ;;		_color_read
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text32
  5206   0026A8                     __ptext32:
  5207                           	callstack 0
  5208   0026A8                     _color_read_Green:
  5209                           	callstack 26
  5210   0026A8                     
  5211                           ;../color.c: 85:  unsigned int tmp;;../color.c: 86:  I2C_2_Master_Start();
  5212   0026A8  ECEB  F014         	call	_I2C_2_Master_Start	;wreg free
  5213                           
  5214                           ;../color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  5215   0026AC  0E52               	movlw	82
  5216   0026AE  ECDB  F014         	call	_I2C_2_Master_Write
  5217                           
  5218                           ;../color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  5219   0026B2  0EB8               	movlw	184
  5220   0026B4  ECDB  F014         	call	_I2C_2_Master_Write
  5221                           
  5222                           ;../color.c: 89:  I2C_2_Master_RepStart();
  5223   0026B8  ECE1  F014         	call	_I2C_2_Master_RepStart	;wreg free
  5224                           
  5225                           ;../color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  5226   0026BC  0E53               	movlw	83
  5227   0026BE  ECDB  F014         	call	_I2C_2_Master_Write
  5228                           
  5229                           ;../color.c: 91:  tmp=I2C_2_Master_Read(1);
  5230   0026C2  0E01               	movlw	1
  5231   0026C4  ECE7  F013         	call	_I2C_2_Master_Read
  5232   0026C8  6E07               	movwf	??_color_read_Green^0,c
  5233   0026CA  5007               	movf	??_color_read_Green^0,w,c
  5234   0026CC  6E0A               	movwf	color_read_Green@tmp^0,c
  5235   0026CE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5236                           
  5237                           ;../color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5238   0026D0  0E00               	movlw	0
  5239   0026D2  ECE7  F013         	call	_I2C_2_Master_Read
  5240   0026D6  6E07               	movwf	??_color_read_Green^0,c
  5241   0026D8  5007               	movf	??_color_read_Green^0,w,c
  5242   0026DA  6E09               	movwf	(??_color_read_Green+2)^0,c
  5243   0026DC  6A08               	clrf	(??_color_read_Green+1)^0,c
  5244   0026DE  500A               	movf	color_read_Green@tmp^0,w,c
  5245   0026E0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5246   0026E2  6E0A               	movwf	color_read_Green@tmp^0,c
  5247   0026E4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5248   0026E6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5249   0026E8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5250                           
  5251                           ;../color.c: 93:  I2C_2_Master_Stop();
  5252   0026EA  ECE6  F014         	call	_I2C_2_Master_Stop	;wreg free
  5253   0026EE                     
  5254                           ;../color.c: 94:  return tmp;
  5255   0026EE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5256   0026F2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5257   0026F6  0012               	return		;funcret
  5258   0026F8                     __end_of_color_read_Green:
  5259                           	callstack 0
  5260                           
  5261 ;; *************** function _color_read_Blue *****************
  5262 ;; Defined at:
  5263 ;;		line 97 in file "../color.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  tmp             2    9[COMRAM] unsigned int 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  2    4[COMRAM] unsigned int 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;Total ram usage:        7 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; Hardware stack levels required when called: 3
  5284 ;; This function calls:
  5285 ;;		_I2C_2_Master_Read
  5286 ;;		_I2C_2_Master_RepStart
  5287 ;;		_I2C_2_Master_Start
  5288 ;;		_I2C_2_Master_Stop
  5289 ;;		_I2C_2_Master_Write
  5290 ;; This function is called by:
  5291 ;;		_color_read
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text33
  5296   0026F8                     __ptext33:
  5297                           	callstack 0
  5298   0026F8                     _color_read_Blue:
  5299                           	callstack 26
  5300   0026F8                     
  5301                           ;../color.c: 99:  unsigned int tmp;;../color.c: 100:  I2C_2_Master_Start();
  5302   0026F8  ECEB  F014         	call	_I2C_2_Master_Start	;wreg free
  5303                           
  5304                           ;../color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  5305   0026FC  0E52               	movlw	82
  5306   0026FE  ECDB  F014         	call	_I2C_2_Master_Write
  5307                           
  5308                           ;../color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  5309   002702  0EBA               	movlw	186
  5310   002704  ECDB  F014         	call	_I2C_2_Master_Write
  5311                           
  5312                           ;../color.c: 103:  I2C_2_Master_RepStart();
  5313   002708  ECE1  F014         	call	_I2C_2_Master_RepStart	;wreg free
  5314                           
  5315                           ;../color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  5316   00270C  0E53               	movlw	83
  5317   00270E  ECDB  F014         	call	_I2C_2_Master_Write
  5318                           
  5319                           ;../color.c: 105:  tmp=I2C_2_Master_Read(1);
  5320   002712  0E01               	movlw	1
  5321   002714  ECE7  F013         	call	_I2C_2_Master_Read
  5322   002718  6E07               	movwf	??_color_read_Blue^0,c
  5323   00271A  5007               	movf	??_color_read_Blue^0,w,c
  5324   00271C  6E0A               	movwf	color_read_Blue@tmp^0,c
  5325   00271E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5326                           
  5327                           ;../color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5328   002720  0E00               	movlw	0
  5329   002722  ECE7  F013         	call	_I2C_2_Master_Read
  5330   002726  6E07               	movwf	??_color_read_Blue^0,c
  5331   002728  5007               	movf	??_color_read_Blue^0,w,c
  5332   00272A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5333   00272C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5334   00272E  500A               	movf	color_read_Blue@tmp^0,w,c
  5335   002730  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5336   002732  6E0A               	movwf	color_read_Blue@tmp^0,c
  5337   002734  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5338   002736  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5339   002738  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5340                           
  5341                           ;../color.c: 107:  I2C_2_Master_Stop();
  5342   00273A  ECE6  F014         	call	_I2C_2_Master_Stop	;wreg free
  5343   00273E                     
  5344                           ;../color.c: 108:  return tmp;
  5345   00273E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5346   002742  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5347   002746  0012               	return		;funcret
  5348   002748                     __end_of_color_read_Blue:
  5349                           	callstack 0
  5350                           
  5351 ;; *************** function _I2C_2_Master_RepStart *****************
  5352 ;; Defined at:
  5353 ;;		line 33 in file "../i2c.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 2
  5374 ;; This function calls:
  5375 ;;		_I2C_2_Master_Idle
  5376 ;; This function is called by:
  5377 ;;		_color_read_Luminosity
  5378 ;;		_color_read_Red
  5379 ;;		_color_read_Green
  5380 ;;		_color_read_Blue
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text34
  5385   0029C2                     __ptext34:
  5386                           	callstack 0
  5387   0029C2                     _I2C_2_Master_RepStart:
  5388                           	callstack 26
  5389   0029C2                     
  5390                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  5391   0029C2  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  5392   0029C6                     
  5393                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5394   0029C6  010E               	movlb	14	; () banked
  5395   0029C8  83DA               	bsf	218,1,b	;volatile
  5396   0029CA                     
  5397                           ; BSR set to: 14
  5398   0029CA  0012               	return		;funcret
  5399   0029CC                     __end_of_I2C_2_Master_RepStart:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _I2C_2_Master_Read *****************
  5403 ;; Defined at:
  5404 ;;		line 51 in file "../i2c.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  ack             1    wreg     unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  ack             1    2[COMRAM] unsigned char 
  5409 ;;  tmp             1    3[COMRAM] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      unsigned char 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;Total ram usage:        3 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 2
  5426 ;; This function calls:
  5427 ;;		_I2C_2_Master_Idle
  5428 ;; This function is called by:
  5429 ;;		_color_read_Luminosity
  5430 ;;		_color_read_Red
  5431 ;;		_color_read_Green
  5432 ;;		_color_read_Blue
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text35
  5437   0027CE                     __ptext35:
  5438                           	callstack 0
  5439   0027CE                     _I2C_2_Master_Read:
  5440                           	callstack 26
  5441                           
  5442                           ; BSR set to: 14
  5443                           ;incstack = 0
  5444                           ;I2C_2_Master_Read@ack stored from wreg
  5445   0027CE  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5446   0027D0                     
  5447                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  5448   0027D0  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  5449   0027D4                     
  5450                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5451   0027D4  010E               	movlb	14	; () banked
  5452   0027D6  87DA               	bsf	218,3,b	;volatile
  5453                           
  5454                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  5455   0027D8  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  5456   0027DC                     
  5457                           ;../i2c.c: 57:   tmp = SSP2BUF;
  5458   0027DC  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5459                           
  5460                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  5461   0027E0  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  5462   0027E4                     
  5463                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5464   0027E4  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5465   0027E6  B4D8               	btfsc	status,2,c
  5466   0027E8  EFF8  F013         	goto	u1251
  5467   0027EC  EFFC  F013         	goto	u1250
  5468   0027F0                     u1251:
  5469   0027F0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5470   0027F2  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5471   0027F4  EFFD  F013         	goto	u1268
  5472   0027F8                     u1250:
  5473   0027F8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5474   0027FA                     u1268:
  5475   0027FA  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5476   0027FC  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5477   0027FE  010E               	movlb	14	; () banked
  5478   002800  51DA               	movf	218,w,b	;volatile
  5479   002802  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5480   002804  0BDF               	andlw	-33
  5481   002806  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5482   002808  6FDA               	movwf	218,b	;volatile
  5483   00280A                     
  5484                           ; BSR set to: 14
  5485                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5486   00280A  89DA               	bsf	218,4,b	;volatile
  5487   00280C                     
  5488                           ; BSR set to: 14
  5489                           ;../i2c.c: 61:   return tmp;
  5490   00280C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5491   00280E                     
  5492                           ; BSR set to: 14
  5493   00280E  0012               	return		;funcret
  5494   002810                     __end_of_I2C_2_Master_Read:
  5495                           	callstack 0
  5496                           
  5497 ;; *************** function _color_processor_hard *****************
  5498 ;; Defined at:
  5499 ;;		line 152 in file "../color.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  5502 ;;		 -> main@RGB_recorded(8), 
  5503 ;;  calibrated      2    2[COMRAM] PTR unsigned int 
  5504 ;;		 -> main@color_calibrated(64), 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  cb              2   22[COMRAM] unsigned int 
  5507 ;;  cg              2   20[COMRAM] unsigned int 
  5508 ;;  cr              2   18[COMRAM] unsigned int 
  5509 ;;  condition_b     1    8[COMRAM] _Bool 
  5510 ;;  condition_g     1    7[COMRAM] _Bool 
  5511 ;;  condition_r     1    6[COMRAM] _Bool 
  5512 ;;  i               2    0        int 
  5513 ;;  b               2   16[COMRAM] unsigned int 
  5514 ;;  g               2   14[COMRAM] unsigned int 
  5515 ;;  r               2   12[COMRAM] unsigned int 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  2    0[COMRAM] unsigned int 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;Total ram usage:       24 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_main
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text36
  5540   001344                     __ptext36:
  5541                           	callstack 0
  5542   001344                     _color_processor_hard:
  5543                           	callstack 29
  5544   001344                     
  5545                           ;../color.c: 152: unsigned int color_processor_hard(struct RGB_val *rgb, unsigned int ca
      +                          librated[]);../color.c: 153: {;../color.c: 154:     unsigned int r = rgb->R;
  5546   001344  EE20 F002          	lfsr	2,2
  5547   001348  5001               	movf	color_processor_hard@rgb^0,w,c
  5548   00134A  26D9               	addwf	fsr2l,f,c
  5549   00134C  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5550   00134E  22DA               	addwfc	fsr2h,f,c
  5551   001350  CFDE F00D          	movff	postinc2,color_processor_hard@r
  5552   001354  CFDD F00E          	movff	postdec2,color_processor_hard@r+1
  5553                           
  5554                           ;../color.c: 155:     unsigned int g = rgb->G;
  5555   001358  EE20 F004          	lfsr	2,4
  5556   00135C  5001               	movf	color_processor_hard@rgb^0,w,c
  5557   00135E  26D9               	addwf	fsr2l,f,c
  5558   001360  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5559   001362  22DA               	addwfc	fsr2h,f,c
  5560   001364  CFDE F00F          	movff	postinc2,color_processor_hard@g
  5561   001368  CFDD F010          	movff	postdec2,color_processor_hard@g+1
  5562                           
  5563                           ;../color.c: 156:     unsigned int b = rgb->B;
  5564   00136C  EE20 F006          	lfsr	2,6
  5565   001370  5001               	movf	color_processor_hard@rgb^0,w,c
  5566   001372  26D9               	addwf	fsr2l,f,c
  5567   001374  5002               	movf	(color_processor_hard@rgb+1)^0,w,c
  5568   001376  22DA               	addwfc	fsr2h,f,c
  5569   001378  CFDE F011          	movff	postinc2,color_processor_hard@b
  5570   00137C  CFDD F012          	movff	postdec2,color_processor_hard@b+1
  5571   001380                     
  5572                           ;../color.c: 160:         unsigned int cr = calibrated[4*i+1];
  5573   001380  EE20 F002          	lfsr	2,2
  5574   001384  5003               	movf	color_processor_hard@calibrated^0,w,c
  5575   001386  26D9               	addwf	fsr2l,f,c
  5576   001388  5004               	movf	(color_processor_hard@calibrated+1)^0,w,c
  5577   00138A  22DA               	addwfc	fsr2h,f,c
  5578   00138C  CFDE F013          	movff	postinc2,color_processor_hard@cr
  5579   001390  CFDD F014          	movff	postdec2,color_processor_hard@cr+1
  5580                           
  5581                           ;../color.c: 161:         unsigned int cg = calibrated[4*i+2];
  5582   001394  EE20 F004          	lfsr	2,4
  5583   001398  5003               	movf	color_processor_hard@calibrated^0,w,c
  5584   00139A  26D9               	addwf	fsr2l,f,c
  5585   00139C  5004               	movf	(color_processor_hard@calibrated+1)^0,w,c
  5586   00139E  22DA               	addwfc	fsr2h,f,c
  5587   0013A0  CFDE F015          	movff	postinc2,color_processor_hard@cg
  5588   0013A4  CFDD F016          	movff	postdec2,color_processor_hard@cg+1
  5589                           
  5590                           ;../color.c: 162:         unsigned int cb = calibrated[4*i+3];
  5591   0013A8  EE20 F006          	lfsr	2,6
  5592   0013AC  5003               	movf	color_processor_hard@calibrated^0,w,c
  5593   0013AE  26D9               	addwf	fsr2l,f,c
  5594   0013B0  5004               	movf	(color_processor_hard@calibrated+1)^0,w,c
  5595   0013B2  22DA               	addwfc	fsr2h,f,c
  5596   0013B4  CFDE F017          	movff	postinc2,color_processor_hard@cb
  5597   0013B8  CFDD F018          	movff	postdec2,color_processor_hard@cb+1
  5598   0013BC                     
  5599                           ;../color.c: 164:         _Bool condition_r = r>cr-20 && r<cr+20;
  5600   0013BC  0E00               	movlw	0
  5601   0013BE  6E0A               	movwf	_color_processor_hard$370^0,c
  5602   0013C0  0EEC               	movlw	236
  5603   0013C2  2413               	addwf	color_processor_hard@cr^0,w,c
  5604   0013C4  6E05               	movwf	??_color_processor_hard^0,c
  5605   0013C6  0EFF               	movlw	255
  5606   0013C8  2014               	addwfc	(color_processor_hard@cr+1)^0,w,c
  5607   0013CA  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5608   0013CC  500D               	movf	color_processor_hard@r^0,w,c
  5609   0013CE  5C05               	subwf	??_color_processor_hard^0,w,c
  5610   0013D0  500E               	movf	(color_processor_hard@r+1)^0,w,c
  5611   0013D2  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  5612   0013D4  B0D8               	btfsc	status,0,c
  5613   0013D6  EFEF  F009         	goto	u1491
  5614   0013DA  EFF1  F009         	goto	u1490
  5615   0013DE                     u1491:
  5616   0013DE  EF04  F00A         	goto	l64
  5617   0013E2                     u1490:
  5618   0013E2  0E14               	movlw	20
  5619   0013E4  2413               	addwf	color_processor_hard@cr^0,w,c
  5620   0013E6  6E05               	movwf	??_color_processor_hard^0,c
  5621   0013E8  0E00               	movlw	0
  5622   0013EA  2014               	addwfc	(color_processor_hard@cr+1)^0,w,c
  5623   0013EC  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5624   0013EE  5005               	movf	??_color_processor_hard^0,w,c
  5625   0013F0  5C0D               	subwf	color_processor_hard@r^0,w,c
  5626   0013F2  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5627   0013F4  580E               	subwfb	(color_processor_hard@r+1)^0,w,c
  5628   0013F6  B0D8               	btfsc	status,0,c
  5629   0013F8  EF00  F00A         	goto	u1501
  5630   0013FC  EF02  F00A         	goto	u1500
  5631   001400                     u1501:
  5632   001400  EF04  F00A         	goto	l64
  5633   001404                     u1500:
  5634   001404  0E01               	movlw	1
  5635   001406  6E0A               	movwf	_color_processor_hard$370^0,c
  5636   001408                     l64:
  5637   001408  500A               	movf	_color_processor_hard$370^0,w,c
  5638   00140A  A4D8               	btfss	status,2,c
  5639   00140C  EF0A  F00A         	goto	u1511
  5640   001410  EF0D  F00A         	goto	u1510
  5641   001414                     u1511:
  5642   001414  0E01               	movlw	1
  5643   001416  EF0E  F00A         	goto	u1520
  5644   00141A                     u1510:
  5645   00141A  0E00               	movlw	0
  5646   00141C                     u1520:
  5647   00141C  6E07               	movwf	color_processor_hard@condition_r^0,c
  5648                           
  5649                           ;../color.c: 165:         _Bool condition_g = b>cb-20 && b<cb+20;
  5650   00141E  0E00               	movlw	0
  5651   001420  6E0B               	movwf	_color_processor_hard$372^0,c
  5652   001422  0EEC               	movlw	236
  5653   001424  2417               	addwf	color_processor_hard@cb^0,w,c
  5654   001426  6E05               	movwf	??_color_processor_hard^0,c
  5655   001428  0EFF               	movlw	255
  5656   00142A  2018               	addwfc	(color_processor_hard@cb+1)^0,w,c
  5657   00142C  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5658   00142E  5011               	movf	color_processor_hard@b^0,w,c
  5659   001430  5C05               	subwf	??_color_processor_hard^0,w,c
  5660   001432  5012               	movf	(color_processor_hard@b+1)^0,w,c
  5661   001434  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  5662   001436  B0D8               	btfsc	status,0,c
  5663   001438  EF20  F00A         	goto	u1531
  5664   00143C  EF22  F00A         	goto	u1530
  5665   001440                     u1531:
  5666   001440  EF35  F00A         	goto	l66
  5667   001444                     u1530:
  5668   001444  0E14               	movlw	20
  5669   001446  2417               	addwf	color_processor_hard@cb^0,w,c
  5670   001448  6E05               	movwf	??_color_processor_hard^0,c
  5671   00144A  0E00               	movlw	0
  5672   00144C  2018               	addwfc	(color_processor_hard@cb+1)^0,w,c
  5673   00144E  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5674   001450  5005               	movf	??_color_processor_hard^0,w,c
  5675   001452  5C11               	subwf	color_processor_hard@b^0,w,c
  5676   001454  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5677   001456  5812               	subwfb	(color_processor_hard@b+1)^0,w,c
  5678   001458  B0D8               	btfsc	status,0,c
  5679   00145A  EF31  F00A         	goto	u1541
  5680   00145E  EF33  F00A         	goto	u1540
  5681   001462                     u1541:
  5682   001462  EF35  F00A         	goto	l66
  5683   001466                     u1540:
  5684   001466  0E01               	movlw	1
  5685   001468  6E0B               	movwf	_color_processor_hard$372^0,c
  5686   00146A                     l66:
  5687   00146A  500B               	movf	_color_processor_hard$372^0,w,c
  5688   00146C  A4D8               	btfss	status,2,c
  5689   00146E  EF3B  F00A         	goto	u1551
  5690   001472  EF3E  F00A         	goto	u1550
  5691   001476                     u1551:
  5692   001476  0E01               	movlw	1
  5693   001478  EF3F  F00A         	goto	u1560
  5694   00147C                     u1550:
  5695   00147C  0E00               	movlw	0
  5696   00147E                     u1560:
  5697   00147E  6E08               	movwf	color_processor_hard@condition_g^0,c
  5698                           
  5699                           ;../color.c: 166:         _Bool condition_b = g>cg-20 && g<cg+20;
  5700   001480  0E00               	movlw	0
  5701   001482  6E0C               	movwf	_color_processor_hard$374^0,c
  5702   001484  0EEC               	movlw	236
  5703   001486  2415               	addwf	color_processor_hard@cg^0,w,c
  5704   001488  6E05               	movwf	??_color_processor_hard^0,c
  5705   00148A  0EFF               	movlw	255
  5706   00148C  2016               	addwfc	(color_processor_hard@cg+1)^0,w,c
  5707   00148E  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5708   001490  500F               	movf	color_processor_hard@g^0,w,c
  5709   001492  5C05               	subwf	??_color_processor_hard^0,w,c
  5710   001494  5010               	movf	(color_processor_hard@g+1)^0,w,c
  5711   001496  5806               	subwfb	(??_color_processor_hard+1)^0,w,c
  5712   001498  B0D8               	btfsc	status,0,c
  5713   00149A  EF51  F00A         	goto	u1571
  5714   00149E  EF53  F00A         	goto	u1570
  5715   0014A2                     u1571:
  5716   0014A2  EF66  F00A         	goto	l68
  5717   0014A6                     u1570:
  5718   0014A6  0E14               	movlw	20
  5719   0014A8  2415               	addwf	color_processor_hard@cg^0,w,c
  5720   0014AA  6E05               	movwf	??_color_processor_hard^0,c
  5721   0014AC  0E00               	movlw	0
  5722   0014AE  2016               	addwfc	(color_processor_hard@cg+1)^0,w,c
  5723   0014B0  6E06               	movwf	(??_color_processor_hard+1)^0,c
  5724   0014B2  5005               	movf	??_color_processor_hard^0,w,c
  5725   0014B4  5C0F               	subwf	color_processor_hard@g^0,w,c
  5726   0014B6  5006               	movf	(??_color_processor_hard+1)^0,w,c
  5727   0014B8  5810               	subwfb	(color_processor_hard@g+1)^0,w,c
  5728   0014BA  B0D8               	btfsc	status,0,c
  5729   0014BC  EF62  F00A         	goto	u1581
  5730   0014C0  EF64  F00A         	goto	u1580
  5731   0014C4                     u1581:
  5732   0014C4  EF66  F00A         	goto	l68
  5733   0014C8                     u1580:
  5734   0014C8  0E01               	movlw	1
  5735   0014CA  6E0C               	movwf	_color_processor_hard$374^0,c
  5736   0014CC                     l68:
  5737   0014CC  500C               	movf	_color_processor_hard$374^0,w,c
  5738   0014CE  A4D8               	btfss	status,2,c
  5739   0014D0  EF6C  F00A         	goto	u1591
  5740   0014D4  EF6F  F00A         	goto	u1590
  5741   0014D8                     u1591:
  5742   0014D8  0E01               	movlw	1
  5743   0014DA  EF70  F00A         	goto	u1600
  5744   0014DE                     u1590:
  5745   0014DE  0E00               	movlw	0
  5746   0014E0                     u1600:
  5747   0014E0  6E09               	movwf	color_processor_hard@condition_b^0,c
  5748                           
  5749                           ;../color.c: 168:         if (condition_r && condition_g && condition_b){
  5750   0014E2  5007               	movf	color_processor_hard@condition_r^0,w,c
  5751   0014E4  B4D8               	btfsc	status,2,c
  5752   0014E6  EF77  F00A         	goto	u1611
  5753   0014EA  EF79  F00A         	goto	u1610
  5754   0014EE                     u1611:
  5755   0014EE  EF8F  F00A         	goto	l2934
  5756   0014F2                     u1610:
  5757   0014F2  5008               	movf	color_processor_hard@condition_g^0,w,c
  5758   0014F4  B4D8               	btfsc	status,2,c
  5759   0014F6  EF7F  F00A         	goto	u1621
  5760   0014FA  EF81  F00A         	goto	u1620
  5761   0014FE                     u1621:
  5762   0014FE  EF8F  F00A         	goto	l2934
  5763   001502                     u1620:
  5764   001502  5009               	movf	color_processor_hard@condition_b^0,w,c
  5765   001504  B4D8               	btfsc	status,2,c
  5766   001506  EF87  F00A         	goto	u1631
  5767   00150A  EF89  F00A         	goto	u1630
  5768   00150E                     u1631:
  5769   00150E  EF8F  F00A         	goto	l2934
  5770   001512                     u1630:
  5771   001512                     
  5772                           ;../color.c: 169:             return i+1;
  5773   001512  0E00               	movlw	0
  5774   001514  6E02               	movwf	(?_color_processor_hard+1)^0,c
  5775   001516  0E01               	movlw	1
  5776   001518  6E01               	movwf	?_color_processor_hard^0,c
  5777   00151A  EF93  F00A         	goto	l70
  5778   00151E                     l2934:
  5779   00151E  0E00               	movlw	0
  5780   001520  6E02               	movwf	(?_color_processor_hard+1)^0,c
  5781   001522  0E00               	movlw	0
  5782   001524  6E01               	movwf	?_color_processor_hard^0,c
  5783   001526                     l70:
  5784   001526  0012               	return		;funcret
  5785   001528                     __end_of_color_processor_hard:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function _color_processor_easy *****************
  5789 ;; Defined at:
  5790 ;;		line 134 in file "../color.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  rgb             2    0[COMRAM] PTR struct RGB_val
  5793 ;;		 -> main@RGB_recorded(8), 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  b               2    8[COMRAM] unsigned int 
  5796 ;;  a               2    6[COMRAM] unsigned int 
  5797 ;;  c               2    4[COMRAM] unsigned int 
  5798 ;;  color           2    2[COMRAM] unsigned int 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  2    0[COMRAM] unsigned int 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;Total ram usage:       10 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text37
  5823   001DA2                     __ptext37:
  5824                           	callstack 0
  5825   001DA2                     _color_processor_easy:
  5826                           	callstack 29
  5827   001DA2                     
  5828                           ;../color.c: 134: unsigned int color_processor_easy(struct RGB_val *rgb);../color.c: 135
      +                          : {;../color.c: 136:     unsigned int a = rgb->R;
  5829   001DA2  EE20 F002          	lfsr	2,2
  5830   001DA6  5001               	movf	color_processor_easy@rgb^0,w,c
  5831   001DA8  26D9               	addwf	fsr2l,f,c
  5832   001DAA  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  5833   001DAC  22DA               	addwfc	fsr2h,f,c
  5834   001DAE  CFDE F007          	movff	postinc2,color_processor_easy@a
  5835   001DB2  CFDD F008          	movff	postdec2,color_processor_easy@a+1
  5836                           
  5837                           ;../color.c: 137:     unsigned int b = rgb->G;
  5838   001DB6  EE20 F004          	lfsr	2,4
  5839   001DBA  5001               	movf	color_processor_easy@rgb^0,w,c
  5840   001DBC  26D9               	addwf	fsr2l,f,c
  5841   001DBE  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  5842   001DC0  22DA               	addwfc	fsr2h,f,c
  5843   001DC2  CFDE F009          	movff	postinc2,color_processor_easy@b
  5844   001DC6  CFDD F00A          	movff	postdec2,color_processor_easy@b+1
  5845                           
  5846                           ;../color.c: 138:     unsigned int c = rgb->B;
  5847   001DCA  EE20 F006          	lfsr	2,6
  5848   001DCE  5001               	movf	color_processor_easy@rgb^0,w,c
  5849   001DD0  26D9               	addwf	fsr2l,f,c
  5850   001DD2  5002               	movf	(color_processor_easy@rgb+1)^0,w,c
  5851   001DD4  22DA               	addwfc	fsr2h,f,c
  5852   001DD6  CFDE F005          	movff	postinc2,color_processor_easy@c
  5853   001DDA  CFDD F006          	movff	postdec2,color_processor_easy@c+1
  5854   001DDE                     
  5855                           ;../color.c: 139:     unsigned int color;;../color.c: 140:     if (a>=b & a>=c){
  5856   001DDE  5009               	movf	color_processor_easy@b^0,w,c
  5857   001DE0  5C07               	subwf	color_processor_easy@a^0,w,c
  5858   001DE2  500A               	movf	(color_processor_easy@b+1)^0,w,c
  5859   001DE4  5808               	subwfb	(color_processor_easy@a+1)^0,w,c
  5860   001DE6  A0D8               	btfss	status,0,c
  5861   001DE8  EFF8  F00E         	goto	u1451
  5862   001DEC  EFFA  F00E         	goto	u1450
  5863   001DF0                     u1451:
  5864   001DF0  EF0B  F00F         	goto	l2882
  5865   001DF4                     u1450:
  5866   001DF4  5005               	movf	color_processor_easy@c^0,w,c
  5867   001DF6  5C07               	subwf	color_processor_easy@a^0,w,c
  5868   001DF8  5006               	movf	(color_processor_easy@c+1)^0,w,c
  5869   001DFA  5808               	subwfb	(color_processor_easy@a+1)^0,w,c
  5870   001DFC  A0D8               	btfss	status,0,c
  5871   001DFE  EF03  F00F         	goto	u1461
  5872   001E02  EF05  F00F         	goto	u1460
  5873   001E06                     u1461:
  5874   001E06  EF0B  F00F         	goto	l2882
  5875   001E0A                     u1460:
  5876   001E0A                     
  5877                           ;../color.c: 141:         color=1;
  5878   001E0A  0E00               	movlw	0
  5879   001E0C  6E04               	movwf	(color_processor_easy@color+1)^0,c
  5880   001E0E  0E01               	movlw	1
  5881   001E10  6E03               	movwf	color_processor_easy@color^0,c
  5882                           
  5883                           ;../color.c: 142:     }
  5884   001E12  EF2B  F00F         	goto	l2890
  5885   001E16                     l2882:
  5886   001E16  5007               	movf	color_processor_easy@a^0,w,c
  5887   001E18  5C09               	subwf	color_processor_easy@b^0,w,c
  5888   001E1A  5008               	movf	(color_processor_easy@a+1)^0,w,c
  5889   001E1C  580A               	subwfb	(color_processor_easy@b+1)^0,w,c
  5890   001E1E  A0D8               	btfss	status,0,c
  5891   001E20  EF14  F00F         	goto	u1471
  5892   001E24  EF16  F00F         	goto	u1470
  5893   001E28                     u1471:
  5894   001E28  EF27  F00F         	goto	l2888
  5895   001E2C                     u1470:
  5896   001E2C  5005               	movf	color_processor_easy@c^0,w,c
  5897   001E2E  5C09               	subwf	color_processor_easy@b^0,w,c
  5898   001E30  5006               	movf	(color_processor_easy@c+1)^0,w,c
  5899   001E32  580A               	subwfb	(color_processor_easy@b+1)^0,w,c
  5900   001E34  A0D8               	btfss	status,0,c
  5901   001E36  EF1F  F00F         	goto	u1481
  5902   001E3A  EF21  F00F         	goto	u1480
  5903   001E3E                     u1481:
  5904   001E3E  EF27  F00F         	goto	l2888
  5905   001E42                     u1480:
  5906   001E42                     
  5907                           ;../color.c: 144:         color=2;
  5908   001E42  0E00               	movlw	0
  5909   001E44  6E04               	movwf	(color_processor_easy@color+1)^0,c
  5910   001E46  0E02               	movlw	2
  5911   001E48  6E03               	movwf	color_processor_easy@color^0,c
  5912                           
  5913                           ;../color.c: 145:     }
  5914   001E4A  EF2B  F00F         	goto	l2890
  5915   001E4E                     l2888:
  5916                           
  5917                           ;../color.c: 147:         color=3;
  5918   001E4E  0E00               	movlw	0
  5919   001E50  6E04               	movwf	(color_processor_easy@color+1)^0,c
  5920   001E52  0E03               	movlw	3
  5921   001E54  6E03               	movwf	color_processor_easy@color^0,c
  5922   001E56                     l2890:
  5923                           
  5924                           ;../color.c: 149:     return color;
  5925   001E56  C003  F001         	movff	color_processor_easy@color,?_color_processor_easy
  5926   001E5A  C004  F002         	movff	color_processor_easy@color+1,?_color_processor_easy+1
  5927   001E5E  0012               	return		;funcret
  5928   001E60                     __end_of_color_processor_easy:
  5929                           	callstack 0
  5930                           
  5931 ;; *************** function _color_click_init *****************
  5932 ;; Defined at:
  5933 ;;		line 6 in file "../color.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;Total ram usage:        1 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 4
  5954 ;; This function calls:
  5955 ;;		_I2C_2_Master_Init
  5956 ;;		_color_writetoaddr
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text38
  5963   00250A                     __ptext38:
  5964                           	callstack 0
  5965   00250A                     _color_click_init:
  5966                           	callstack 26
  5967   00250A                     
  5968                           ;../color.c: 9:     I2C_2_Master_Init();
  5969   00250A  EC59  F014         	call	_I2C_2_Master_Init	;wreg free
  5970   00250E                     
  5971                           ;../color.c: 12:   color_writetoaddr(0x00, 0x01);
  5972   00250E  0E01               	movlw	1
  5973   002510  6E03               	movwf	color_writetoaddr@value^0,c
  5974   002512  0E00               	movlw	0
  5975   002514  EC95  F014         	call	_color_writetoaddr
  5976   002518                     
  5977                           ;../color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5978   002518  0E3F               	movlw	63
  5979   00251A  6E05               	movwf	??_color_click_init^0,c
  5980   00251C  0E55               	movlw	85
  5981   00251E                     u1947:
  5982   00251E  2EE8               	decfsz	wreg,f,c
  5983   002520  D7FE               	bra	u1947
  5984   002522  2E05               	decfsz	??_color_click_init^0,f,c
  5985   002524  D7FC               	bra	u1947
  5986   002526  F000               	nop	
  5987   002528                     
  5988                           ;../color.c: 16:  color_writetoaddr(0x00, 0x03);
  5989   002528  0E03               	movlw	3
  5990   00252A  6E03               	movwf	color_writetoaddr@value^0,c
  5991   00252C  0E00               	movlw	0
  5992   00252E  EC95  F014         	call	_color_writetoaddr
  5993   002532                     
  5994                           ;../color.c: 19:  color_writetoaddr(0x01, 0xD5);
  5995   002532  0ED5               	movlw	213
  5996   002534  6E03               	movwf	color_writetoaddr@value^0,c
  5997   002536  0E01               	movlw	1
  5998   002538  EC95  F014         	call	_color_writetoaddr
  5999   00253C                     
  6000                           ;../color.c: 22:     TRISHbits.TRISH1 = 0;
  6001   00253C  9288               	bcf	136,1,c	;volatile
  6002   00253E                     
  6003                           ;../color.c: 23:     TRISDbits.TRISD3 = 0;
  6004   00253E  9684               	bcf	132,3,c	;volatile
  6005   002540                     
  6006                           ;../color.c: 24:     TRISDbits.TRISD4 = 0;
  6007   002540  9884               	bcf	132,4,c	;volatile
  6008   002542                     
  6009                           ;../color.c: 25:     TRISHbits.TRISH0 = 0;
  6010   002542  9088               	bcf	136,0,c	;volatile
  6011   002544                     
  6012                           ;../color.c: 26:     TRISFbits.TRISF0 = 0;
  6013   002544  9086               	bcf	134,0,c	;volatile
  6014   002546                     
  6015                           ;../color.c: 28:     LATHbits.LATH1 = 1;
  6016   002546  8280               	bsf	128,1,c	;volatile
  6017   002548                     
  6018                           ;../color.c: 29:     LATDbits.LATD3 = 1;
  6019   002548  867C               	bsf	124,3,c	;volatile
  6020   00254A                     
  6021                           ;../color.c: 30:     LATDbits.LATD4 = 0;
  6022   00254A  987C               	bcf	124,4,c	;volatile
  6023   00254C                     
  6024                           ;../color.c: 31:     LATHbits.LATH0 = 0;
  6025   00254C  9080               	bcf	128,0,c	;volatile
  6026   00254E                     
  6027                           ;../color.c: 32:     LATFbits.LATF0 = 0;
  6028   00254E  907E               	bcf	126,0,c	;volatile
  6029   002550                     
  6030                           ;../color.c: 35:     LATDbits.LATD7=0;
  6031   002550  9E7C               	bcf	124,7,c	;volatile
  6032   002552                     
  6033                           ;../color.c: 36:     LATHbits.LATH3=0;
  6034   002552  9680               	bcf	128,3,c	;volatile
  6035   002554                     
  6036                           ;../color.c: 37:     TRISDbits.TRISD7=0;
  6037   002554  9E84               	bcf	132,7,c	;volatile
  6038   002556                     
  6039                           ;../color.c: 38:     TRISHbits.TRISH3=0;
  6040   002556  9688               	bcf	136,3,c	;volatile
  6041   002558                     
  6042                           ;../color.c: 40:     TRISFbits.TRISF2=1;
  6043   002558  8486               	bsf	134,2,c	;volatile
  6044   00255A                     
  6045                           ;../color.c: 41:     ANSELFbits.ANSELF2=0;
  6046   00255A  010E               	movlb	14	; () banked
  6047   00255C  95B4               	bcf	180,2,b	;volatile
  6048   00255E                     
  6049                           ; BSR set to: 14
  6050                           ;../color.c: 42:     TRISFbits.TRISF3=1;
  6051   00255E  8686               	bsf	134,3,c	;volatile
  6052   002560                     
  6053                           ; BSR set to: 14
  6054                           ;../color.c: 43:     ANSELFbits.ANSELF3=0;
  6055   002560  97B4               	bcf	180,3,b	;volatile
  6056   002562                     
  6057                           ; BSR set to: 14
  6058   002562  0012               	return		;funcret
  6059   002564                     __end_of_color_click_init:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _color_writetoaddr *****************
  6063 ;; Defined at:
  6064 ;;		line 46 in file "../color.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  address         1    wreg     unsigned char 
  6067 ;;  value           1    2[COMRAM] unsigned char 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  address         1    3[COMRAM] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;Total ram usage:        2 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 3
  6086 ;; This function calls:
  6087 ;;		_I2C_2_Master_Start
  6088 ;;		_I2C_2_Master_Stop
  6089 ;;		_I2C_2_Master_Write
  6090 ;; This function is called by:
  6091 ;;		_color_click_init
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text39
  6096   00292A                     __ptext39:
  6097                           	callstack 0
  6098   00292A                     _color_writetoaddr:
  6099                           	callstack 26
  6100                           
  6101                           ; BSR set to: 14
  6102                           ;incstack = 0
  6103                           ;color_writetoaddr@address stored from wreg
  6104   00292A  6E04               	movwf	color_writetoaddr@address^0,c
  6105   00292C                     
  6106                           ;../color.c: 46: void color_writetoaddr(char address, char value);../color.c: 47: {;../c
      +                          olor.c: 48:     I2C_2_Master_Start();
  6107   00292C  ECEB  F014         	call	_I2C_2_Master_Start	;wreg free
  6108                           
  6109                           ;../color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  6110   002930  0E52               	movlw	82
  6111   002932  ECDB  F014         	call	_I2C_2_Master_Write
  6112                           
  6113                           ;../color.c: 50:     I2C_2_Master_Write(0x80 | address);
  6114   002936  5004               	movf	color_writetoaddr@address^0,w,c
  6115   002938  0980               	iorlw	128
  6116   00293A  ECDB  F014         	call	_I2C_2_Master_Write
  6117                           
  6118                           ;../color.c: 51:     I2C_2_Master_Write(value);
  6119   00293E  5003               	movf	color_writetoaddr@value^0,w,c
  6120   002940  ECDB  F014         	call	_I2C_2_Master_Write
  6121                           
  6122                           ;../color.c: 52:     I2C_2_Master_Stop();
  6123   002944  ECE6  F014         	call	_I2C_2_Master_Stop	;wreg free
  6124   002948  0012               	return		;funcret
  6125   00294A                     __end_of_color_writetoaddr:
  6126                           	callstack 0
  6127                           
  6128 ;; *************** function _I2C_2_Master_Write *****************
  6129 ;; Defined at:
  6130 ;;		line 45 in file "../i2c.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  data_byte       1    wreg     unsigned char 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  data_byte       1    1[COMRAM] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;Total ram usage:        1 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; Hardware stack levels required when called: 2
  6151 ;; This function calls:
  6152 ;;		_I2C_2_Master_Idle
  6153 ;; This function is called by:
  6154 ;;		_color_writetoaddr
  6155 ;;		_color_read_Luminosity
  6156 ;;		_color_read_Red
  6157 ;;		_color_read_Green
  6158 ;;		_color_read_Blue
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text40
  6163   0029B6                     __ptext40:
  6164                           	callstack 0
  6165   0029B6                     _I2C_2_Master_Write:
  6166                           	callstack 26
  6167                           
  6168                           ;incstack = 0
  6169                           ;I2C_2_Master_Write@data_byte stored from wreg
  6170   0029B6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6171   0029B8                     
  6172                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  6173   0029B8  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  6174   0029BC                     
  6175                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  6176   0029BC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6177   0029C0  0012               	return		;funcret
  6178   0029C2                     __end_of_I2C_2_Master_Write:
  6179                           	callstack 0
  6180                           
  6181 ;; *************** function _I2C_2_Master_Stop *****************
  6182 ;; Defined at:
  6183 ;;		line 39 in file "../i2c.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;		None
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;		None
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;Total ram usage:        0 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 2
  6204 ;; This function calls:
  6205 ;;		_I2C_2_Master_Idle
  6206 ;; This function is called by:
  6207 ;;		_color_writetoaddr
  6208 ;;		_color_read_Luminosity
  6209 ;;		_color_read_Red
  6210 ;;		_color_read_Green
  6211 ;;		_color_read_Blue
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text41
  6216   0029CC                     __ptext41:
  6217                           	callstack 0
  6218   0029CC                     _I2C_2_Master_Stop:
  6219                           	callstack 26
  6220   0029CC                     
  6221                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  6222   0029CC  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  6223   0029D0                     
  6224                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6225   0029D0  010E               	movlb	14	; () banked
  6226   0029D2  85DA               	bsf	218,2,b	;volatile
  6227   0029D4                     
  6228                           ; BSR set to: 14
  6229   0029D4  0012               	return		;funcret
  6230   0029D6                     __end_of_I2C_2_Master_Stop:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function _I2C_2_Master_Start *****************
  6234 ;; Defined at:
  6235 ;;		line 27 in file "../i2c.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;Total ram usage:        0 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 2
  6256 ;; This function calls:
  6257 ;;		_I2C_2_Master_Idle
  6258 ;; This function is called by:
  6259 ;;		_color_writetoaddr
  6260 ;;		_color_read_Luminosity
  6261 ;;		_color_read_Red
  6262 ;;		_color_read_Green
  6263 ;;		_color_read_Blue
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text42
  6268   0029D6                     __ptext42:
  6269                           	callstack 0
  6270   0029D6                     _I2C_2_Master_Start:
  6271                           	callstack 26
  6272   0029D6                     
  6273                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  6274   0029D6  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  6275   0029DA                     
  6276                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6277   0029DA  010E               	movlb	14	; () banked
  6278   0029DC  81DA               	bsf	218,0,b	;volatile
  6279   0029DE                     
  6280                           ; BSR set to: 14
  6281   0029DE  0012               	return		;funcret
  6282   0029E0                     __end_of_I2C_2_Master_Start:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function _I2C_2_Master_Idle *****************
  6286 ;; Defined at:
  6287 ;;		line 22 in file "../i2c.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;Total ram usage:        1 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 1
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_I2C_2_Master_Start
  6312 ;;		_I2C_2_Master_RepStart
  6313 ;;		_I2C_2_Master_Stop
  6314 ;;		_I2C_2_Master_Write
  6315 ;;		_I2C_2_Master_Read
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text43
  6320   0028DC                     __ptext43:
  6321                           	callstack 0
  6322   0028DC                     _I2C_2_Master_Idle:
  6323                           	callstack 26
  6324   0028DC                     l101:
  6325   0028DC  010E               	movlb	14	; () banked
  6326   0028DE  B5D8               	btfsc	216,2,b	;volatile
  6327   0028E0  EF74  F014         	goto	u1071
  6328   0028E4  EF76  F014         	goto	u1070
  6329   0028E8                     u1071:
  6330   0028E8  EF6E  F014         	goto	l101
  6331   0028EC                     u1070:
  6332   0028EC                     
  6333                           ; BSR set to: 14
  6334   0028EC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6335   0028F0  0E1F               	movlw	31
  6336   0028F2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6337   0028F4  A4D8               	btfss	status,2,c
  6338   0028F6  EF7F  F014         	goto	u1081
  6339   0028FA  EF81  F014         	goto	u1080
  6340   0028FE                     u1081:
  6341   0028FE  EF6E  F014         	goto	l101
  6342   002902                     u1080:
  6343   002902                     
  6344                           ; BSR set to: 14
  6345   002902  0012               	return		;funcret
  6346   002904                     __end_of_I2C_2_Master_Idle:
  6347                           	callstack 0
  6348                           
  6349 ;; *************** function _I2C_2_Master_Init *****************
  6350 ;; Defined at:
  6351 ;;		line 4 in file "../i2c.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;		None
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;Total ram usage:        0 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_color_click_init
  6376 ;;		_main
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text44
  6381   0028B2                     __ptext44:
  6382                           	callstack 0
  6383   0028B2                     _I2C_2_Master_Init:
  6384                           	callstack 28
  6385   0028B2                     
  6386                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6387   0028B2  010E               	movlb	14	; () banked
  6388   0028B4  51D9               	movf	217,w,b	;volatile
  6389   0028B6  0BF0               	andlw	-16
  6390   0028B8  0908               	iorlw	8
  6391   0028BA  6FD9               	movwf	217,b	;volatile
  6392   0028BC                     
  6393                           ; BSR set to: 14
  6394                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6395   0028BC  8BD9               	bsf	217,5,b	;volatile
  6396                           
  6397                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6398   0028BE  0E9F               	movlw	159
  6399   0028C0  6FD6               	movwf	214,b	;volatile
  6400   0028C2                     
  6401                           ; BSR set to: 14
  6402                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6403   0028C2  8A84               	bsf	132,5,c	;volatile
  6404   0028C4                     
  6405                           ; BSR set to: 14
  6406                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6407   0028C4  8C84               	bsf	132,6,c	;volatile
  6408   0028C6                     
  6409                           ; BSR set to: 14
  6410                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6411   0028C6  9BA7               	bcf	167,5,b	;volatile
  6412   0028C8                     
  6413                           ; BSR set to: 14
  6414                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6415   0028C8  9DA7               	bcf	167,6,b	;volatile
  6416                           
  6417                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  6418   0028CA  0E1D               	movlw	29
  6419   0028CC  6F1D               	movwf	29,b	;volatile
  6420                           
  6421                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  6422   0028CE  0E1E               	movlw	30
  6423   0028D0  6F1C               	movwf	28,b	;volatile
  6424                           
  6425                           ;../i2c.c: 18:   RD5PPS=0x1C;
  6426   0028D2  0E1C               	movlw	28
  6427   0028D4  6F6F               	movwf	111,b	;volatile
  6428                           
  6429                           ;../i2c.c: 19:   RD6PPS=0x1B;
  6430   0028D6  0E1B               	movlw	27
  6431   0028D8  6F70               	movwf	112,b	;volatile
  6432   0028DA                     
  6433                           ; BSR set to: 14
  6434   0028DA  0012               	return		;funcret
  6435   0028DC                     __end_of_I2C_2_Master_Init:
  6436                           	callstack 0
  6437                           
  6438 ;; *************** function _Timer0_init *****************
  6439 ;; Defined at:
  6440 ;;		line 62 in file "../rc_servo.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;		None
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;		None
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;Total ram usage:        0 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_main
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text45
  6469   00294A                     __ptext45:
  6470                           	callstack 0
  6471   00294A                     _Timer0_init:
  6472                           	callstack 29
  6473   00294A                     
  6474                           ;../rc_servo.c: 64:     T0CON1bits.T0CS=0b010;
  6475   00294A  50D6               	movf	214,w,c	;volatile
  6476   00294C  0B1F               	andlw	-225
  6477   00294E  0940               	iorlw	64
  6478   002950  6ED6               	movwf	214,c	;volatile
  6479   002952                     
  6480                           ;../rc_servo.c: 65:     T0CON1bits.T0ASYNC=1;
  6481   002952  88D6               	bsf	214,4,c	;volatile
  6482                           
  6483                           ;../rc_servo.c: 66:     T0CON1bits.T0CKPS=0b0111;
  6484   002954  50D6               	movf	214,w,c	;volatile
  6485   002956  0BF0               	andlw	-16
  6486   002958  0907               	iorlw	7
  6487   00295A  6ED6               	movwf	214,c	;volatile
  6488   00295C                     
  6489                           ;../rc_servo.c: 68:     T0CON0bits.T016BIT=1;
  6490   00295C  88D5               	bsf	213,4,c	;volatile
  6491                           
  6492                           ;../rc_servo.c: 71:     TMR0H=(65535-2500)>>8;
  6493   00295E  0EF6               	movlw	246
  6494   002960  6ED4               	movwf	212,c	;volatile
  6495                           
  6496                           ;../rc_servo.c: 72:     TMR0L=(unsigned char)(65535-2500);
  6497   002962  0E3B               	movlw	59
  6498   002964  6ED3               	movwf	211,c	;volatile
  6499   002966                     
  6500                           ;../rc_servo.c: 73:     T0CON0bits.T0EN=1;
  6501   002966  8ED5               	bsf	213,7,c	;volatile
  6502   002968  0012               	return		;funcret
  6503   00296A                     __end_of_Timer0_init:
  6504                           	callstack 0
  6505                           
  6506 ;; *************** function _Interrupts_init *****************
  6507 ;; Defined at:
  6508 ;;		line 8 in file "../rc_servo.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;		None
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;		None
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		None
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6526 ;;Total ram usage:        0 bytes
  6527 ;; Hardware stack levels used: 1
  6528 ;; Hardware stack levels required when called: 1
  6529 ;; This function calls:
  6530 ;;		Nothing
  6531 ;; This function is called by:
  6532 ;;		_main
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text46
  6537   0029A0                     __ptext46:
  6538                           	callstack 0
  6539   0029A0                     _Interrupts_init:
  6540                           	callstack 29
  6541   0029A0                     
  6542                           ;../rc_servo.c: 12:     INTCONbits.IPEN = 1;
  6543   0029A0  8AF2               	bsf	242,5,c	;volatile
  6544                           
  6545                           ;../rc_servo.c: 13:     INTCONbits.PEIE = 1;
  6546   0029A2  8CF2               	bsf	242,6,c	;volatile
  6547                           
  6548                           ;../rc_servo.c: 16:     PIE0bits.TMR0IE = 1;
  6549   0029A4  010E               	movlb	14	; () banked
  6550   0029A6  8B29               	bsf	41,5,b	;volatile
  6551                           
  6552                           ;../rc_servo.c: 17:     IPR0bits.TMR0IP = 1;
  6553   0029A8  8B1F               	bsf	31,5,b	;volatile
  6554                           
  6555                           ;../rc_servo.c: 18:     PIR0bits.TMR0IF = 0;
  6556   0029AA  9B33               	bcf	51,5,b	;volatile
  6557                           
  6558                           ;../rc_servo.c: 20:     PIE2bits.C1IE=1;
  6559   0029AC  812B               	bsf	43,0,b	;volatile
  6560                           
  6561                           ;../rc_servo.c: 21:     IPR2bits.C1IP=0;
  6562   0029AE  9121               	bcf	33,0,b	;volatile
  6563                           
  6564                           ;../rc_servo.c: 22:     PIR2bits.C1IF=0;
  6565   0029B0  9135               	bcf	53,0,b	;volatile
  6566                           
  6567                           ;../rc_servo.c: 24:     INTCONbits.GIE = 1;
  6568   0029B2  8EF2               	bsf	242,7,c	;volatile
  6569   0029B4                     
  6570                           ; BSR set to: 14
  6571   0029B4  0012               	return		;funcret
  6572   0029B6                     __end_of_Interrupts_init:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _HighISR *****************
  6576 ;; Defined at:
  6577 ;;		line 31 in file "../rc_servo.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		Interrupt level 2
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	intcode
  6605   000008                     __pintcode:
  6606                           	callstack 0
  6607   000008                     _HighISR:
  6608                           	callstack 22
  6609                           
  6610                           ; BSR set to: 14
  6611                           ;incstack = 0
  6612   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6613   00000A                     
  6614                           ;../rc_servo.c: 33:     if(PIR0bits.TMR0IF||!PORTFbits.RF2){
  6615   00000A  010E               	movlb	14	; () banked
  6616   00000C  BB33               	btfsc	51,5,b	;volatile
  6617   00000E  EF0B  F000         	goto	i2u168_41
  6618   000012  EF0D  F000         	goto	i2u168_40
  6619   000016                     i2u168_41:
  6620   000016  EF14  F000         	goto	i2l3264
  6621   00001A                     i2u168_40:
  6622   00001A                     
  6623                           ; BSR set to: 14
  6624   00001A  B48E               	btfsc	142,2,c	;volatile
  6625   00001C  EF12  F000         	goto	i2u169_41
  6626   000020  EF14  F000         	goto	i2u169_40
  6627   000024                     i2u169_41:
  6628   000024  EF1D  F000         	goto	i2l387
  6629   000028                     i2u169_40:
  6630   000028                     i2l3264:
  6631                           
  6632                           ; BSR set to: 14
  6633                           ;../rc_servo.c: 36:         time++;
  6634   000028  0101               	movlb	1	; () banked
  6635   00002A  4BF2               	infsnz	_time& (0+255),f,b
  6636   00002C  2BF3               	incf	(_time+1)& (0+255),f,b
  6637   00002E                     
  6638                           ; BSR set to: 1
  6639                           ;../rc_servo.c: 39:         TMR0L = 0b11011011;
  6640   00002E  0EDB               	movlw	219
  6641   000030  6ED3               	movwf	211,c	;volatile
  6642   000032                     
  6643                           ; BSR set to: 1
  6644                           ;../rc_servo.c: 40:         TMR0H = 0b00001011;
  6645   000032  0E0B               	movlw	11
  6646   000034  6ED4               	movwf	212,c	;volatile
  6647   000036                     
  6648                           ; BSR set to: 1
  6649                           ;../rc_servo.c: 42:         PIR0bits.TMR0IF=0;
  6650   000036  010E               	movlb	14	; () banked
  6651   000038  9B33               	bcf	51,5,b	;volatile
  6652   00003A                     i2l387:
  6653                           
  6654                           ; BSR set to: 14
  6655   00003A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6656   00003C  0011               	retfie		f
  6657   00003E                     __end_of_HighISR:
  6658                           	callstack 0
  6659                           
  6660                           	psect	rparam
  6661   000000                     
  6662                           	psect	temp
  6663   00005E                     btemp:
  6664                           	callstack 0
  6665   00005E                     	ds	1
  6666   000000                     int$flags	set	btemp
  6667   000000                     wtemp8	set	btemp+1
  6668   000000                     ttemp5	set	btemp+1
  6669   000000                     ttemp6	set	btemp+4
  6670   000000                     ttemp7	set	btemp+8
  6671                           
  6672                           	psect	idloc
  6673                           
  6674                           ;Config register IDLOC0 @ 0x200000
  6675                           ;	unspecified, using default values
  6676   200000                     	org	2097152
  6677   200000  0FFF               	dw	4095
  6678                           
  6679                           ;Config register IDLOC1 @ 0x200002
  6680                           ;	unspecified, using default values
  6681   200002                     	org	2097154
  6682   200002  0FFF               	dw	4095
  6683                           
  6684                           ;Config register IDLOC2 @ 0x200004
  6685                           ;	unspecified, using default values
  6686   200004                     	org	2097156
  6687   200004  0FFF               	dw	4095
  6688                           
  6689                           ;Config register IDLOC3 @ 0x200006
  6690                           ;	unspecified, using default values
  6691   200006                     	org	2097158
  6692   200006  0FFF               	dw	4095
  6693                           
  6694                           ;Config register IDLOC4 @ 0x200008
  6695                           ;	unspecified, using default values
  6696   200008                     	org	2097160
  6697   200008  0FFF               	dw	4095
  6698                           
  6699                           ;Config register IDLOC5 @ 0x20000A
  6700                           ;	unspecified, using default values
  6701   20000A                     	org	2097162
  6702   20000A  0FFF               	dw	4095
  6703                           
  6704                           ;Config register IDLOC6 @ 0x20000C
  6705                           ;	unspecified, using default values
  6706   20000C                     	org	2097164
  6707   20000C  0FFF               	dw	4095
  6708                           
  6709                           ;Config register IDLOC7 @ 0x20000E
  6710                           ;	unspecified, using default values
  6711   20000E                     	org	2097166
  6712   20000E  0FFF               	dw	4095
  6713                           
  6714                           	psect	config
  6715                           
  6716                           ;Config register CONFIG1L @ 0x300000
  6717                           ;	External Oscillator mode Selection bits
  6718                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6719                           ;	Power-up default value for COSC bits
  6720                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6721   300000                     	org	3145728
  6722   300000  AA                 	db	170
  6723                           
  6724                           ;Config register CONFIG1H @ 0x300001
  6725                           ;	unspecified, using default values
  6726                           ;	Clock Out Enable bit
  6727                           ;	CLKOUTEN = 0x1, unprogrammed default
  6728                           ;	Clock Switch Enable bit
  6729                           ;	CSWEN = 0x1, unprogrammed default
  6730                           ;	Fail-Safe Clock Monitor Enable bit
  6731                           ;	FCMEN = 0x1, unprogrammed default
  6732   300001                     	org	3145729
  6733   300001  FF                 	db	255
  6734                           
  6735                           ;Config register CONFIG2L @ 0x300002
  6736                           ;	unspecified, using default values
  6737                           ;	Master Clear Enable bit
  6738                           ;	MCLRE = 0x1, unprogrammed default
  6739                           ;	Power-up Timer Enable bit
  6740                           ;	PWRTE = 0x1, unprogrammed default
  6741                           ;	Low-power BOR enable bit
  6742                           ;	LPBOREN = 0x1, unprogrammed default
  6743                           ;	Brown-out Reset Enable bits
  6744                           ;	BOREN = 0x3, unprogrammed default
  6745   300002                     	org	3145730
  6746   300002  FF                 	db	255
  6747                           
  6748                           ;Config register CONFIG2H @ 0x300003
  6749                           ;	unspecified, using default values
  6750                           ;	Brown Out Reset Voltage selection bits
  6751                           ;	BORV = 0x3, unprogrammed default
  6752                           ;	ZCD Disable bit
  6753                           ;	ZCD = 0x1, unprogrammed default
  6754                           ;	PPSLOCK bit One-Way Set Enable bit
  6755                           ;	PPS1WAY = 0x1, unprogrammed default
  6756                           ;	Stack Full/Underflow Reset Enable bit
  6757                           ;	STVREN = 0x1, unprogrammed default
  6758                           ;	Debugger Enable bit
  6759                           ;	DEBUG = 0x1, unprogrammed default
  6760                           ;	Extended Instruction Set Enable bit
  6761                           ;	XINST = 0x1, unprogrammed default
  6762   300003                     	org	3145731
  6763   300003  FF                 	db	255
  6764                           
  6765                           ;Config register CONFIG3L @ 0x300004
  6766                           ;	WDT Period Select bits
  6767                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6768                           ;	WDT operating mode
  6769                           ;	WDTE = OFF, WDT Disabled
  6770   300004                     	org	3145732
  6771   300004  9F                 	db	159
  6772                           
  6773                           ;Config register CONFIG3H @ 0x300005
  6774                           ;	unspecified, using default values
  6775                           ;	WDT Window Select bits
  6776                           ;	WDTCWS = 0x7, unprogrammed default
  6777                           ;	WDT input clock selector
  6778                           ;	WDTCCS = 0x7, unprogrammed default
  6779   300005                     	org	3145733
  6780   300005  FF                 	db	255
  6781                           
  6782                           ;Config register CONFIG4L @ 0x300006
  6783                           ;	unspecified, using default values
  6784                           ;	Write Protection Block 0
  6785                           ;	WRT0 = 0x1, unprogrammed default
  6786                           ;	Write Protection Block 1
  6787                           ;	WRT1 = 0x1, unprogrammed default
  6788                           ;	Write Protection Block 2
  6789                           ;	WRT2 = 0x1, unprogrammed default
  6790                           ;	Write Protection Block 3
  6791                           ;	WRT3 = 0x1, unprogrammed default
  6792                           ;	Write Protection Block 3
  6793                           ;	WRT4 = 0x1, unprogrammed default
  6794                           ;	Write Protection Block 3
  6795                           ;	WRT5 = 0x1, unprogrammed default
  6796                           ;	Write Protection Block 3
  6797                           ;	WRT6 = 0x1, unprogrammed default
  6798                           ;	Write Protection Block 3
  6799                           ;	WRT7 = 0x1, unprogrammed default
  6800   300006                     	org	3145734
  6801   300006  FF                 	db	255
  6802                           
  6803                           ;Config register CONFIG4H @ 0x300007
  6804                           ;	unspecified, using default values
  6805                           ;	Configuration Register Write Protection bit
  6806                           ;	WRTC = 0x1, unprogrammed default
  6807                           ;	Boot Block Write Protection bit
  6808                           ;	WRTB = 0x1, unprogrammed default
  6809                           ;	Data EEPROM Write Protection bit
  6810                           ;	WRTD = 0x1, unprogrammed default
  6811                           ;	Scanner Enable bit
  6812                           ;	SCANE = 0x1, unprogrammed default
  6813                           ;	Low Voltage Programming Enable bit
  6814                           ;	LVP = 0x1, unprogrammed default
  6815   300007                     	org	3145735
  6816   300007  FF                 	db	255
  6817                           
  6818                           ;Config register CONFIG5L @ 0x300008
  6819                           ;	unspecified, using default values
  6820                           ;	UserNVM Program Memory Code Protection bit
  6821                           ;	CP = 0x1, unprogrammed default
  6822                           ;	DataNVM Memory Code Protection bit
  6823                           ;	CPD = 0x1, unprogrammed default
  6824   300008                     	org	3145736
  6825   300008  FF                 	db	255
  6826                           
  6827                           ;Config register CONFIG5H @ 0x300009
  6828                           ;	unspecified, using default values
  6829   300009                     	org	3145737
  6830   300009  FF                 	db	255
  6831                           
  6832                           ;Config register CONFIG6L @ 0x30000A
  6833                           ;	unspecified, using default values
  6834                           ;	Table Read Protection Block 0
  6835                           ;	EBTR0 = 0x1, unprogrammed default
  6836                           ;	Table Read Protection Block 1
  6837                           ;	EBTR1 = 0x1, unprogrammed default
  6838                           ;	Table Read Protection Block 2
  6839                           ;	EBTR2 = 0x1, unprogrammed default
  6840                           ;	Table Read Protection Block 3
  6841                           ;	EBTR3 = 0x1, unprogrammed default
  6842                           ;	Table Read Protection Block 4
  6843                           ;	EBTR4 = 0x1, unprogrammed default
  6844                           ;	Table Read Protection Block 5
  6845                           ;	EBTR5 = 0x1, unprogrammed default
  6846                           ;	Table Read Protection Block 6
  6847                           ;	EBTR6 = 0x1, unprogrammed default
  6848                           ;	Table Read Protection Block 7
  6849                           ;	EBTR7 = 0x1, unprogrammed default
  6850   30000A                     	org	3145738
  6851   30000A  FF                 	db	255
  6852                           
  6853                           ;Config register CONFIG6H @ 0x30000B
  6854                           ;	unspecified, using default values
  6855                           ;	Boot Block Table Read Protection bit
  6856                           ;	EBTRB = 0x1, unprogrammed default
  6857   30000B                     	org	3145739
  6858   30000B  FF                 	db	255
  6859                           tosu	equ	0xFFF
  6860                           tosh	equ	0xFFE
  6861                           tosl	equ	0xFFD
  6862                           stkptr	equ	0xFFC
  6863                           pclatu	equ	0xFFB
  6864                           pclath	equ	0xFFA
  6865                           pcl	equ	0xFF9
  6866                           tblptru	equ	0xFF8
  6867                           tblptrh	equ	0xFF7
  6868                           tblptrl	equ	0xFF6
  6869                           tablat	equ	0xFF5
  6870                           prodh	equ	0xFF4
  6871                           prodl	equ	0xFF3
  6872                           indf0	equ	0xFEF
  6873                           postinc0	equ	0xFEE
  6874                           postdec0	equ	0xFED
  6875                           preinc0	equ	0xFEC
  6876                           plusw0	equ	0xFEB
  6877                           fsr0h	equ	0xFEA
  6878                           fsr0l	equ	0xFE9
  6879                           wreg	equ	0xFE8
  6880                           indf1	equ	0xFE7
  6881                           postinc1	equ	0xFE6
  6882                           postdec1	equ	0xFE5
  6883                           preinc1	equ	0xFE4
  6884                           plusw1	equ	0xFE3
  6885                           fsr1h	equ	0xFE2
  6886                           fsr1l	equ	0xFE1
  6887                           bsr	equ	0xFE0
  6888                           indf2	equ	0xFDF
  6889                           postinc2	equ	0xFDE
  6890                           postdec2	equ	0xFDD
  6891                           preinc2	equ	0xFDC
  6892                           plusw2	equ	0xFDB
  6893                           fsr2h	equ	0xFDA
  6894                           fsr2l	equ	0xFD9
  6895                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         187
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      93
    BANK0           160    157     159
    BANK1           256    220     248
    BANK2           256      0     152
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2391$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout3(BANK1[100]), main@readout2(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2338$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2338$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@readout3(BANK1[100]), main@readout2(BANK0[100]), 

    motor_action@r	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    motor_action@l	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    spin_180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    spin_180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    spin_180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    spin_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    left_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    left_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    left_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    right_90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    right_90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    right_90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse_onesquare@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_onesquare@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_onesquare@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_onesquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    reverse_fromcard@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_fromcard@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    reverse_fromcard@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    reverse_fromcard@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    S589DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(ABS[1]), LATE(ABS[1]), 

    S589DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhlll[1]), PWM6DCH(BITBIGSFRhlll[1]), 

    color_processor_hard@calibrated	PTR unsigned int  size(2) Largest target is 64
		 -> main@color_calibrated(BANK1[64]), 

    color_processor_hard@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_processor_easy@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), 

    color_read@rgb	PTR struct RGB_val size(2) Largest target is 8
		 -> main@RGB_recorded(BANK1[8]), main@RGB_calibrated(BANK1[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _motor_action->_left_135
    _motor_action->_left_90
    _motor_action->_reverse_fromcard
    _motor_action->_reverse_onesquare
    _motor_action->_right_135
    _motor_action->_right_90
    _motor_action->_spin_180
    _stop->_setMotorPWM
    _spin_180->_setMotorPWM
    _right_90->_setMotorPWM
    _right_135->_setMotorPWM
    _reverse_onesquare->_setMotorPWM
    _reverse_fromcard->_setMotorPWM
    _left_90->_setMotorPWM
    _left_135->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Green
    _color_read->_color_read_Luminosity
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Luminosity->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               383   383      0   65618
                                             27 BANK0    130   130      0
                                              0 BANK1    220   220      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
               _color_processor_easy
               _color_processor_hard
                         _color_read
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _motor_action
                  _sendStringSerial4
                        _setMotorPWM
                           _spin_180
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    5722
                                              0 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motor_action                                         8     2      6   37821
                                             33 COMRAM     8     2      6
                            _forward
                           _left_135
                            _left_90
                   _reverse_fromcard
                  _reverse_onesquare
                          _right_135
                           _right_90
                           _spin_180
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 7     3      4    7659
                                             25 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _spin_180                                             8     4      4    3403
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_90                                             8     4      4    3555
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _right_135                                            8     4      4    3251
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_onesquare                                    8     4      4    3251
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse_fromcard                                     8     4      4    4163
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_90                                              8     4      4    3555
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _left_135                                             8     4      4    3251
                                             25 COMRAM     8     4      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              6     2      4    3707
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2703
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read                                           4     2      2     768
                                             11 COMRAM     4     2      2
                    _color_read_Blue
                   _color_read_Green
              _color_read_Luminosity
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Luminosity                                7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_processor_hard                                26    22      4     829
                                              0 COMRAM    24    20      4
 ---------------------------------------------------------------------------------
 (1) _color_processor_easy                                10     8      2     346
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_processor_easy
   _color_processor_hard
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Luminosity
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _motor_action
     _forward
     _left_135
       _setMotorPWM
     _left_90
       _setMotorPWM
     _reverse_fromcard
       _setMotorPWM
     _reverse_onesquare
       _setMotorPWM
     _right_135
       _setMotorPWM
     _right_90
       _setMotorPWM
     _spin_180
       _setMotorPWM
     _stop
       _setMotorPWM
   _sendStringSerial4
     _sendCharSerial4
   _setMotorPWM
   _spin_180
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      98       9       59.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DC      F8       7       96.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9D      9F       5       99.4%
BITBIGSFRllllhh     91      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5D       1       98.9%
BITBIGSFRllllll     32      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      49        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhl     20      0       0      43        0.0%
BITBIGSFRhhlhhh     1B      0       0      33        0.0%
BITBIGSFRhhll       17      0       0      35        0.0%
BITBIGSFRhhlhl      13      0       0      34        0.0%
BITBIGSFRhllh       11      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      44        0.0%
BITBIGSFRllllhh      8      0       0      41        0.0%
BITBIGSFRllllll      7      0       0      54        0.0%
BITBIGSFRllllll      7      0       0      52        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28C      59        0.0%
DATA                 0      0     28C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 11 15:03:11 2022

                 _color_read_Red 2608                  _color_read_Blue 26F8  
                             l33 2562                               l42 2656  
                             l51 1F04                               l36 2948  
                             l45 26F6                               l70 1526  
                             l39 26A6                               l64 1408  
                             l48 2746                               l58 1E5E  
                             l66 146A                               l68 14CC  
                             l98 28DA                     ___awdiv@sign 000C  
            ___wmul@multiplicand 0003                 _color_read_Green 26A8  
              ??_Interrupts_init 0001                              l101 28DC  
                            l110 29CA                              l104 2902  
                            l113 29D4                              l107 29DE  
                            l116 29C0                              l119 280E  
                            l304 204C                              l314 2190  
                            l309 20EE                              l333 10C4  
                            l431 2986                              l319 2376  
                            l440 298A                              l274 16FA  
                            l267 27CC                              l443 299E  
                            l452 2928                              l284 248E  
                            l197 1BE2                              l390 2968  
                            l294 2232                              l279 2404  
                            l289 22D4                              l449 28B0  
                            l379 29B4                              l299 1FA8  
                            l566 1882                              l683 1DA0  
                            l579 19E6                motor_action@color 0022  
                            u900 278A                              u901 2786  
                            u910 170E                              u911 170A  
                            u920 1740                              u921 173C  
                            u931 176A                              u940 178E  
                            u860 1C26                              u941 178A  
                            u861 1C22                              u950 17B8  
                            u870 1C38                              u951 17B4  
                            u871 1C34                              u960 17F8  
                            u880 1C60                              u961 17F4  
                            u881 1C5C                              u970 1842  
                            u890 1C96                              u971 183E  
                            u891 1C92                              u980 1896  
                            u981 1892                              u990 18C8  
                            u991 18C4                              _abs 2810  
                            _pad 2490                              wreg 000FE8  
                           l1130 25B4                             ?_abs 0013  
                           l1207 1CDC                             l1215 278A  
                           l1152 24B2                             l1161 1152  
                           l3010 0F60                             l3002 0F34  
                           l1218 29E0                             l1163 115A  
                           l3020 0FB4                             l2300 1770  
                           l1156 2508                             l1164 11A0  
                           l3100 1BBE                             l3030 1024  
                           l3022 0FCC                             l2310 17CA  
                           l2302 178E                             l1182 1B46  
                           l3102 1BCA                             l1175 1342  
                           l2400 1CFC                             l2312 17F8  
                           l2304 1796                             l2320 1832  
                           l1192 2846                             l3104 1BCA  
                           l2410 1D30                             l2402 1D0A  
                           l3034 103C                             l3026 0FE4  
                           l3018 0F8C                             l2322 1842  
                           l2314 1818                             l2306 17AA  
                           l2330 1888                             l3050 2586  
                           l3106 1BD6                             l1195 284E  
                           l2500 29C2                             l2420 1D6A  
                           l2412 1D38                             l2404 1D12  
                           l3028 100C                             l3060 2894  
                           l2324 1862                             l2316 181A  
                           l2308 17B8                             l2340 18E8  
                           l2332 1896                             l1188 2606  
                           l3052 25A2                             l3044 2564  
                           l3108 1BF0                             l2510 27E4  
                           l2502 29C6                             l2430 1D90  
                           l2422 1D72                             l2414 1D40  
                           l2406 1D16                             l3038 1068  
                           l3062 2898                             l2318 182C  
                           l2350 195E                             l2342 1906  
                           l2334 18B6                             l2270 1C60  
                           l2262 1C14                             l3046 2576  
                           l3070 1B5C                             l2512 280A  
                           l2504 27D0                             l2432 1D98  
                           l2424 1D74                             l2416 1D4E  
                           l2408 1D1E                             l2520 1544  
                           l2600 2406                             l3056 2882  
                           l2360 19C6                             l2352 197E  
                           l2344 190E                             l2336 18BA  
                           l2328 1884                             l2272 1C96  
                           l2264 1C26                             l2280 2766  
                           l2440 10FA                             l3048 257E  
                           l3080 1B6E                             l3072 1B60  
                           l3064 1B48                             l2514 280C  
                           l2506 27D4                             l2426 1D7A  
                           l2418 1D54                             l2530 1692  
                           l2522 15A6                             l2610 2446  
                           l2602 2426                             l3058 2886  
                           l2290 172E                             l2354 1990  
                           l2346 1922                             l2338 18C8  
                           l2266 1C38                             l2282 276A  
                           l2370 24BE                             l2450 1172  
                           l2442 110A                             l3090 1B8E  
                           l3082 1B72                             l3074 1B64  
                           l3066 1B4C                             l2508 27DC  
                           l2428 1D80                             l2524 15EC  
                           l2612 2452                             l2700 21EA  
                           l2620 2378                             l2292 1732  
                           l2284 16FC                             l2348 1930  
                           l2356 1996                             l2380 282A  
                           l2268 1C42                             l2276 2748  
                           l2372 24D2                             l2364 2490  
                           l2460 11A8                             l2452 1178  
                           l2444 112A                             l2436 10C6  
                           l2540 1A32                             l2532 19E8  
                           l3092 1B92                             l3084 1B7A  
                           l3076 1B68                             l3068 1B58  
                           l2382 28DC                             l2526 160C  
                           l2518 1528                             l2614 245E  
                           l2702 21F2                             l2710 1F26  
                           l2630 23B8                             l2622 2398  
                           l2294 1740                             l2286 1700  
                           l2358 19A6                             l2278 2754  
                           l2374 24D6                             l2366 249E  
                           l2470 1246                             l2462 11B2  
                           l2454 1188                             l2446 1146  
                           l2438 10E6                             l2542 1A42  
                           l2534 1A10                             l3094 1BA6  
                           l3086 1B82                             l3078 1B68  
                           l2384 28EC                             l2392 1CDE  
                           l2528 1628                             l2616 2466  
                           l2608 242E                             l2800 2344  
                           l2704 21FE                             l2720 1F48  
                           l2640 204E                             l2632 23C4  
                           l2296 1760                             l2288 170E  
                           l2376 24F4                             l2368 24AA  
                           l2480 130C                             l2464 11B8  
                           l2472 12AA                             l2456 1194  
                           l2448 1162                             l2552 1B08  
                           l2544 1A62                             l2536 1A1E  
                           l3096 1BAA                             l3088 1B86  
                           l2570 28C6                             l2562 28B2  
                           l2490 29DA                             l2394 1CE2  
                           l2386 2904                             l2618 2472  
                           l2802 2360                             l2706 221A  
                           l2730 1F90                             l2722 1F54  
                           l2650 2082                             l2642 206E  
                           l2634 23D0                             l2298 1764  
                           l2378 2810                             l2482 1312  
                           l2474 12C4                             l2466 123A  
                           l2458 119C                             l2546 1A82  
                           l2538 1A2C                             l2810 25C2  
                           l3098 1BB2                             l2572 28C8  
                           l2564 28BC                             l2492 29B8  
                           l2820 250E                             l2396 1CF0  
                           l2388 2920                             l2740 1FD2  
                           l2732 1FAA                             l2724 1F60  
                           l2716 1F2E                             l2708 1F06  
                           l2660 20BC                             l2652 2090  
                           l2636 23DE                             l2628 23A0  
                           l2804 298A                             l2484 1322  
                           l2476 12E2                             l2468 1240  
                           l2548 1AD8                             l2556 1B1A  
                           l2812 25DE                             l2566 28C2  
                           l2494 29BC                             l2574 292C  
                           l2830 253E                             l2822 2518  
                           l2910 1404                             l2902 1380  
                           l2590 26EE                             l2582 2608  
                           l2398 1CF8                             l2750 200C  
                           l2742 1FE0                             l2734 1FCA  
                           l2726 1F68                             l2718 1F3A  
                           l2662 20D8                             l2654 209C  
                           l2638 23EA                             l3294 107E  
                           l2806 299A                             l2478 12FC  
                           l2814 25FE                             l2568 28C4  
                           l2488 29D6                             l2496 29CC  
                           l2840 2548                             l2832 2540  
                           l2824 2528                             l2920 14A6  
                           l2912 1422                             l2904 13BC  
                           l2576 2658                             l2584 264E  
                           l2752 2018                             l2744 1FEC  
                           l2680 2294                             l2672 225C  
                           l2664 2234                             l2728 1F74  
                           l2656 20A8                             l2648 2076  
                           l2808 25B6                             l2498 29D0  
                           l2850 2552                             l2842 254A  
                           l2834 2542                             l2826 2532  
                           l2818 250A                             l2922 14C8  
                           l2914 1444                             l2906 13C0  
                           l2594 26F8                             l2578 269E  
                           l2754 2034                             l2746 1FF8  
                           l2682 22A0                             l2674 2274  
                           l2666 2254                             l2770 213E  
                           l2658 20B0                             l2860 255E  
                           l2852 2554                             l2844 254C  
                           l2836 2544                             l2828 253C  
                           l2924 14F2                             l2916 1466  
                           l2908 13E2                             l2596 273E  
                           l2588 26A8                             l2780 22D6  
                           l2748 2004                             l2684 22BC  
                           l2676 2280                             l2772 214A  
                           l2764 2118                             l2756 20F0  
                           l2862 2560                             l2854 2556  
                           l2846 254E                             l2838 2546  
                           l2926 1502                             l2934 151E  
                           l2918 1484                             l2870 1EBC  
                           l2950 27C8                             l2942 278C  
                           l2790 230C                             l2782 22F6  
                           l2678 228C                             l2694 21BA  
                           l2686 2192                             l2774 2152  
                           l2766 2124                             l2758 2110  
                           ?_pad 0011                             l2960 295C  
                           l2856 2558                             l2848 2550  
                           l2880 1E0A                             l2928 1512  
                           l2872 1ED4                             l2864 1E60  
                           l2952 27CA                             l2944 279C  
                           l2792 2318                             l2696 21D2  
                           l2688 21B2                             l2776 215E  
                           l2768 2132                             l2954 29A0  
                           l2962 2966                             l2858 255A  
                           l2890 1E56                             l2882 1E16  
                           l2874 1DA2                             l2866 1E74  
                           l2946 27B0                             l2970 2980  
                           l2794 2324                             l2698 21DE  
                           l2778 217A                             l2956 294A  
                           l2884 1E2C                             l2876 1DDE  
                           l2868 1E8C                             l2948 27B4  
                           l2972 2982                             l2964 296A  
                           l2796 2330                             l2788 22FE  
                           l2980 0E40                             l2958 2952  
                           l2886 1E42                             l2878 1DF4  
                           l2894 1344                             l2974 2984  
                           l2966 2974                             l2798 2338  
                           l2990 0EC4                             l2982 0E58  
                           l2888 1E4E                             l2896 1380  
                           l2968 2976                             l2984 0E6C  
                           l2976 0E14                             l2994 0EDC  
                           l2986 0E84                             l2978 0E18  
                           l2996 0F04                             l2988 0EAC  
                           l2998 0F1C                             STR_2 0E01  
                           u1000 1906                             u1001 1902  
                           u1010 1930                             u1011 192C  
                           u1100 1D0A                             u1020 195E  
                           u1101 1D06                             u1021 195A  
                           u1110 1D30                             u1030 19A6  
                           u1111 1D2C                             u1031 19A2  
                           u1120 1D4E                             u1040 249E  
                           u1200 1188                             u1121 1D4A  
                           u1041 249A                             u1201 1184  
                           u1130 1D6A                             u1050 24F4  
                           u1210 12C4                             u1131 1D66  
                           u1051 24F0                             u1211 12C0  
                           u1140 1D90                             u1060 282A  
                           u1220 12E2                             u1141 1D8C  
                           u1061 2826                             u1221 12DE  
                           u1070 28EC                             u1230 12FC  
                           u1150 10F6                             u1310 1A10  
                           u1071 28E8                             u1231 12F8  
                           u1151 10F0                             u1311 1A0C  
                           u1080 2902                             u1304 16EC  
                           u1400 2034                             u1240 130C  
                           u1160 10F8                             u1320 1A62  
                           u1081 28FE                             u1305 16E8  
                           u1401 2030                             u1241 1308  
                           u1321 1A5E                             u1250 27F8  
                           u1090 1CF0                             u1410 217A  
                           u1170 110A                             u1330 1A82  
                           u1251 27F0                             u1091 1CEC  
                           u1411 2176                             u1171 1106  
                           u1331 1A7E                             u1500 1404  
                           u1340 248E                             u1420 2360  
                           u1180 1146                             u1501 1400  
                           u1341 248A                             u1421 235C  
                           u1181 1142                             u1510 141A  
                           u1270 1544                             u1350 2404  
                           u1430 299A                             u1190 1172  
                           u1511 1414                             u1271 1540  
                           u1351 2400                             u1431 2996  
                           u1191 116E                             u1600 14E0  
                           u1520 141C                             u1280 1628  
                           u1360 20D8                             u1440 25FE  
                   _BAUD4CONbits 000EE9                             u1281 1624  
                           u1361 20D4                             u1441 25FA  
                           _LATE 000F7D                             u1450 1DF4  
                           u1610 14F2                             u1530 1444  
                           u1370 22BC                             u1451 1DF0  
                           u1611 14EE                             u1531 1440  
                           u1371 22B8                             _LATG 000F7F  
                           u1460 1E0A                             u1620 1502  
                           u1540 1466                             u1268 27FA  
                           u1380 221A                             u1461 1E06  
                           u1621 14FE                             u1541 1462  
                           u1381 2216                             u1470 1E2C  
                           u1630 1512                             u1550 147C  
                           u1294 1682                             u1390 1F90  
                           u1471 1E28                             u1631 150E  
                           u1551 1476                             u1295 167E  
                           u1391 1F8C                             u1480 1E42  
                           u1560 147E                             u1640 28B0  
                           u1481 1E3E                             u1641 28AC  
                           u1570 14A6                             u1490 13E2  
                           _T2PR 000FBC                             u1571 14A2  
                           u1491 13DE                             u1707 0E4A  
                           u1651 1BD0                             u1580 14C8  
                           u1581 14C4                             u1717 0EB6  
                           u1661 1BDC                             u1590 14DE  
                           u1670 1BF0                             u1591 14D8  
                           u1807 214C                             u1727 0F0E  
                           u1671 1BEC                             u1817 2184  
                           u1737 0FBE                             u1907 2460  
                           u1827 21EC                             u1747 1016  
                           u1917 1E7E                             u1837 2224  
                           u1757 23D6                             u1927 1EAE  
                           u1847 228E                             u1767 20AA  
                           u1937 1EDE                             u1857 22C6  
                           u1777 20E2                             u1947 251E  
                           u1867 2006                             u1787 1F62  
                           u1877 203E                             u1797 1F9A  
                           u1887 2332                             u1897 236A  
                           abs@a 0013                             _dbuf 0278  
                           _main 1B48                             _dtoa 10C6  
                           _prec 00FD                             _time 01F2  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             btemp 005E  
                           _stop 2378                             prodh 000FF4  
                           prodl 000FF3                             start 003E  
         __end_of_color_read_Red 2658                  __end_of_HighISR 003E  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0017         _color_processor_hard$370 000A  
       _color_processor_hard$372 000B         _color_processor_hard$374 000C  
                __end_of___aodiv 1884                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 19E8  
                __end_of___awdiv 1DA2          ??_color_read_Luminosity 0007  
                          ?_stop 001A                  ___awdiv@divisor 0009  
                          i2l387 003A                  ___awdiv@counter 000B  
                   vfpfcnvrt@fmt 0041                            _TMR0H 000FD4  
                          _TMR0L 000FD3                     main@readout2 007B  
                   main@readout3 0100          __end_of_sendCharSerial4 29A0  
     __end_of_I2C_2_Master_Start 29E0       __end_of_I2C_2_Master_Write 29C2  
                __end_of_left_90 204E                            _flags 0059  
                          _fputc 1C14                  __end_of_forward 2490  
                          _fputs 2748                            pad@fp 0011  
                          _width 01F0                            _putch 29E0  
                          dtoa@d 001E                            dtoa@i 003C  
                          dtoa@n 0034                            dtoa@p 0030  
                          dtoa@s 003E                            dtoa@w 0032  
                          tablat 000FF5                            ttemp5 005F  
                          ttemp6 0062                            ttemp7 0066  
                          stop@i 001F                            status 000FD8  
                          wtemp8 005F                  __end_of_sprintf 25B6  
        __end_of_color_read_Blue 2748            _I2C_2_Master_RepStart 29C2  
                ?_color_read_Red 0005                  __initialization 2850  
 color_processor_hard@calibrated 0003                     __end_of_main 1C14  
                   __end_of_dtoa 1344                     __end_of_stop 2406  
                         ??_main 0059                           ??_dtoa 0026  
                         ??_stop 001E                    __activetblptr 000003  
                   ?_setMotorPWM 000F                           ?_fputc 0001  
                         ?_fputs 000A                 ___awdiv@dividend 0007  
                         ?_putch 0001                           _RC0PPS 000E62  
                         _RC4REG 000EE3                           _RE2PPS 000E74  
                         _RD5PPS 000E6F                           _RC7PPS 000E69  
                         _RD6PPS 000E70                           i2l3260 000A  
                         i2l3270 0036                           i2l3262 001A  
                         i2l3264 0028                           i2l3266 002E  
                         i2l3268 0032                        ??_HighISR 0001  
       __end_of_color_click_init 2564                           _RX4PPS 000E15  
                         _TX4REG 000EE4                    ??_Timer0_init 0001  
      color_processor_easy@color 0003                     vfprintf@cfmt 0057  
               __end_of_left_135 2378                        ??___aodiv 0011  
                      ??___aomod 0011                           ___wmul 2904  
                      ??___awdiv 000B                           clear_0 2856  
                         clear_1 2862                 ___awdiv@quotient 000D  
                         isa$std 000001                           pad@buf 0013  
                         dtoa@fp 001C                        ??_left_90 001E  
               __end_of_right_90 1FAA                    main@time_path 0164  
                         fputc@c 0001                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_forward 001E                 __end_of_spin_180 20F0  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               ?_sendCharSerial4 0001                           putch@c 0001  
               __end_of_vfprintf 2608                           stop@mL 001A  
                         stop@mR 001C                ??_initDCmotorsPWM 0003  
                      ??_sprintf 0059              reverse_onesquare@mL 001A  
            reverse_onesquare@mR 001C                       __accesstop 0060  
        __end_of__initialization 2878         __end_of_color_read_Green 26F8  
         ?_I2C_2_Master_RepStart 0001                    ___rparam_used 000001  
               ?_color_read_Blue 0005                  _Interrupts_init 29A0  
                 __pcstackCOMRAM 0001                    color_read@rgb 000C  
                  __end_of_fputc 1CDE                    __end_of_fputs 278C  
                  __end_of_putch 29E2              __end_of_Timer0_init 296A  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00FD  
                     __pbssBANK1 01DC                       __pbssBANK2 0200  
         color_processor_hard@cb 0017           color_processor_hard@cg 0015  
         color_processor_hard@cr 0013                _color_writetoaddr 292A  
                   _T2CLKCONbits 000FBF               ?_color_writetoaddr 0003  
                        ?___wmul 0001                   main@color_path 00DF  
                    right_135@mL 001A                      right_135@mR 001C  
            ??_color_writetoaddr 0004                 _reverse_fromcard 2234  
  __end_of_color_read_Luminosity 26A8                          _SP4BRGH 000EE6  
                        _SP4BRGL 000EE5                          _PWM6DCH 000FA3  
                        _PWM7DCH 000FA0                          _SSP2ADD 000ED6  
                        _SSP2BUF 000ED5                        ?_left_135 001A  
                     _color_read 1E60          __end_of_Interrupts_init 29B6  
         color_writetoaddr@value 0003                 ??_color_read_Red 0007  
                        _HighISR 0008        __end_of_color_writetoaddr 294A  
       color_read_Luminosity@tmp 000A               _I2C_2_Master_Start 29D6  
                     _initUSART4 296A               _I2C_2_Master_Write 29B6  
                      ?_right_90 001A                          __Hparam 0000  
                        __Lparam 0000  color_processor_hard@condition_b 0009  
color_processor_hard@condition_g 0008  color_processor_hard@condition_r 0007  
              color_read_Red@tmp 000A                      _Timer0_init 294A  
                      ?_spin_180 001A          sendStringSerial4@string 0002  
                        ___aodiv 16FC                          ___aomod 1884  
                        ___awdiv 1CDE              ?_I2C_2_Master_Start 0001  
            ?_I2C_2_Master_Write 0001                       _off_period 01F4  
                      ?_vfprintf 0051                     __psmallconst 0E00  
                        __pcinit 2850                          __ramtop 0E00  
                        __ptext0 1B48                          __ptext1 2564  
                        __ptext2 25B6                          __ptext3 19E8  
                        __ptext4 10C6                          __ptext5 2490  
                        __ptext6 2748                          __ptext7 1C14  
                        __ptext8 29E0                          __ptext9 2810  
                        _left_90 1FAA                        _T2CONbits 000FBD  
                        _forward 2406                        _T2HLTbits 000FBE  
                  ?_motor_action 0022                    _RxBufWriteCnt 005D  
                        _sprintf 2564             ??_I2C_2_Master_Start 0002  
                     ??_left_135 001E             ??_I2C_2_Master_Write 0002  
           end_of_initialization 2878                __end_of_right_135 2192  
             setMotorPWM@PWMduty 0018                          fputc@fp 0003  
                        fputs@fp 000C                ?_color_click_init 0001  
   __end_of_color_processor_easy 1E60     __end_of_color_processor_hard 1528  
                     ??_right_90 001E               ??_color_click_init 0005  
              __end_of_vfpfcnvrt 1B48                       ??_spin_180 001E  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                 vfpfcnvrt@convarg 0047  
                     main@F14639 025A                       main@F14647 023C  
                     ??_vfprintf 0057                  _initDCmotorsPWM 278C  
                      _PORTFbits 000F8E                   ??_motor_action 0028  
                      _TRISCbits 000F83                        _TRISDbits 000F84  
                      _TRISEbits 000F85                        _TRISFbits 000F86  
                      _TRISGbits 000F87                        _TRISHbits 000F88  
             reverse_fromcard@mL 001A               reverse_fromcard@mR 001C  
                    ?_color_read 000C         color_writetoaddr@address 0004  
        ??_I2C_2_Master_RepStart 0002                 ?_Interrupts_init 0001  
                     left_135@mL 001A                       left_135@mR 001C  
                   _EUSART4RXbuf 01DC                     _EUSART4TXbuf 0200  
              ?_color_read_Green 0005                      ?_initUSART4 0001  
      sendCharSerial4@charToSend 0001                       main@motorL 01D3  
                     main@motorR 01CA               ??_color_read_Green 0007  
                    vfpfcnvrt@ap 0043                      vfpfcnvrt@cp 004F  
                    vfpfcnvrt@fp 003F                   __end_of___wmul 292A  
            start_initialization 2850                      __end_of_abs 2850  
                    __end_of_pad 250A                    _TxBufWriteCnt 005B  
       __end_of_reverse_fromcard 22D6              color_read_Green@tmp 000A  
        __end_of_initDCmotorsPWM 27CE                      vfprintf@fmt 0053  
                       ??___wmul 0005               reverse_onesquare@i 0020  
                    __pbssCOMRAM 0059             _color_processor_easy 1DA2  
           _color_processor_hard 1344                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                 ___aodiv@dividend 0001  
             main@RGB_calibrated 01C2                         ?_HighISR 0001  
        color_processor_easy@rgb 0001          color_processor_hard@rgb 0001  
          color_processor_easy@a 0007            color_processor_easy@b 0009  
          color_processor_easy@c 0005            color_processor_hard@b 0011  
          color_processor_hard@g 000F            color_processor_hard@r 000D  
                      _dtoa$2419 002E             __end_of_motor_action 10C6  
                   ?_Timer0_init 0001                        __pintcode 0008  
                       ?___aodiv 0001                         ?___aomod 0001  
                       ?___awdiv 0007                 ___aodiv@quotient 0013  
                     right_135@i 0020                       right_90@mL 001A  
                     right_90@mR 001C             I2C_2_Master_Read@ack 0003  
           I2C_2_Master_Read@tmp 0004                         ?_left_90 001A  
                    __smallconst 0E00                         ?_forward 001A  
              _I2C_2_Master_Idle 28DC            ?_color_processor_easy 0001  
          ?_color_processor_hard 0001                 main@RGB_recorded 01C2  
              _I2C_2_Master_Init 28B2                _I2C_2_Master_Read 27CE  
              _I2C_2_Master_Stop 29CC                     _RxBufReadCnt 005C  
             ?_I2C_2_Master_Idle 0001               ?_I2C_2_Master_Init 0001  
             ?_I2C_2_Master_Read 0001                    ??_setMotorPWM 0011  
          _color_read_Luminosity 2658               ?_I2C_2_Master_Stop 0001  
       initDCmotorsPWM@PWMperiod 0001                         ?_sprintf 0060  
              _sendStringSerial4 2882              ??_I2C_2_Master_Idle 0001  
            ??_I2C_2_Master_Init 0001              ??_I2C_2_Master_Read 0002  
                 ___wmul@product 0005              ??_I2C_2_Master_Stop 0002  
                       _LATCbits 000F7B                         _LATDbits 000F7C  
                       _LATEbits 000F7D                         _LATFbits 000F7E  
                      _on_period 01F6                         _LATGbits 000F7F  
                       _LATHbits 000F80                        _right_135 20F0  
                       _IPR0bits 000E1F                         _IPR2bits 000E21  
                       _PIE0bits 000E29                         _PIE2bits 000E2B  
             ?_sendStringSerial4 0002                       spin_180@mL 001A  
                     spin_180@mR 001C                         _PIR0bits 000E33  
                       i2u168_40 001A                         i2u168_41 0016  
                       i2u169_40 0028                         i2u169_41 0024  
                       _PIR2bits 000E35                         _PIR4bits 000E37  
               ?_initDCmotorsPWM 0001                ??_sendCharSerial4 0001  
                       _SSP2CON2 000EDA              ??_sendStringSerial4 0004  
                       _SSP2STAT 000ED8                _reverse_onesquare 2192  
                      _vfpfcnvrt 19E8        __end_of_I2C_2_Master_Idle 2904  
             ?_reverse_onesquare 001A        __end_of_I2C_2_Master_Init 28DC  
      __end_of_I2C_2_Master_Read 2810                ___wmul@multiplier 0001  
              reverse_fromcard@i 0020        __end_of_I2C_2_Master_Stop 29D6  
                   setMotorPWM@m 000F      I2C_2_Master_Write@data_byte 0002  
                      left_135@i 0020                        left_90@mL 001A  
                      left_90@mR 001C             main@color_calibrated 0182  
              ??_color_read_Blue 0007                     _TxBufReadCnt 005A  
            ??_reverse_onesquare 001E                     ??_color_read 000E  
      __end_of_sendStringSerial4 28B2    __end_of_I2C_2_Master_RepStart 29CC  
             color_read_Blue@tmp 000A              __end_of_setMotorPWM 16FC  
                     ?_right_135 001A                     ??_initUSART4 0001  
                       __Hrparam 0000                       vfprintf@ap 0055  
                       __Lrparam 0000                       vfprintf@fp 0051  
      __end_of_reverse_onesquare 2234                        forward@mL 001A  
                      forward@mR 001C                       ?_vfpfcnvrt 003F  
             __end_of_color_read 1F06                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELDbits 000EA7  
         ??_color_processor_easy 0003           ??_color_processor_hard 0005  
                     _ANSELFbits 000EB4                       sprintf@fmt 0062  
                     _T0CON0bits 000FD5                       _T0CON1bits 000FD6  
         ?_color_read_Luminosity 0005               __end_of_initUSART4 2988  
                       __ptext10 1884                         __ptext11 16FC  
                       __ptext20 2234                         __ptext12 2882  
                       __ptext21 1FAA                         __ptext13 2988  
                       __ptext30 2608                         __ptext22 22D6  
                       __ptext14 0E14                         __ptext31 2658  
                       __ptext23 2406                         __ptext15 2378  
                       __ptext40 29B6                         __ptext32 26A8  
                       __ptext24 1528                         __ptext16 204E  
                       __ptext41 29CC                         __ptext33 26F8  
                       __ptext25 2904                         __ptext17 1F06  
                       __ptext42 29D6                         __ptext34 29C2  
                       __ptext26 1CDE                         __ptext18 20F0  
                       __ptext43 28DC                         __ptext35 27CE  
                       __ptext27 296A                         __ptext19 2192  
                       __ptext44 28B2                         __ptext36 1344  
                       __ptext28 278C                         __ptext45 294A  
                       __ptext37 1DA2                         __ptext29 1E60  
                       __ptext46 29A0                         __ptext38 250A  
                       __ptext39 292A                        right_90@i 0020  
                       _left_135 22D6                     _SSP2CON1bits 000ED9  
                   _SSP2CON2bits 000EDA                         _right_90 1F06  
              ?_reverse_fromcard 001A                        spin_180@i 0020  
                       _spin_180 204E                         isa$xinst 000000  
             ??_reverse_fromcard 001E                       _RC4STAbits 000EE7  
                       int$flags 005E                    motor_action@l 0024  
                  motor_action@r 0026                         _vfprintf 25B6  
                       left_90@i 0020                 ___aomod@dividend 0001  
                     _INTCONbits 000FF2                     _motor_action 0E14  
                       forward@i 001E                      _setMotorPWM 1528  
                    _PWM6CONbits 000FA4                      _PWM7CONbits 000FA1  
                       intlevel2 0000                        sprintf@ap 006E  
                    ??_right_135 001E                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 0045                  ___aomod@counter 0011  
               _color_click_init 250A                         sprintf@f 0070  
                       sprintf@s 0060                       _SSP2DATPPS 000E1D  
                     _SSP2CLKPPS 000E1C                       _TX4STAbits 000EE8  
                   ___aodiv@sign 0012                  _sendCharSerial4 2988  
                   ___aomod@sign 0012  
